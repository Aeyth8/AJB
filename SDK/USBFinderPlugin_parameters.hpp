#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: USBFinderPlugin

#include "Basic.hpp"

#include "USBFinderPlugin_structs.hpp"


namespace SDK::Params
{

// Function USBFinderPlugin.USBFinderPluginBPLibrary.CheckSerialNumber
// 0x0060 (0x0060 - 0x0000)
struct USBFinderPluginBPLibrary_CheckSerialNumber final
{
public:
	bool                                          Repossession;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TitleCode1;                                        // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Area;                                              // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         AccountList;                                       // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 TitleCode2;                                        // 0x0038(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutSerialNumber;                                   // 0x0048(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EusbFinderError                               ReturnValue;                                       // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(USBFinderPluginBPLibrary_CheckSerialNumber) == 0x000008, "Wrong alignment on USBFinderPluginBPLibrary_CheckSerialNumber");
static_assert(sizeof(USBFinderPluginBPLibrary_CheckSerialNumber) == 0x000060, "Wrong size on USBFinderPluginBPLibrary_CheckSerialNumber");
static_assert(offsetof(USBFinderPluginBPLibrary_CheckSerialNumber, Repossession) == 0x000000, "Member 'USBFinderPluginBPLibrary_CheckSerialNumber::Repossession' has a wrong offset!");
static_assert(offsetof(USBFinderPluginBPLibrary_CheckSerialNumber, TitleCode1) == 0x000008, "Member 'USBFinderPluginBPLibrary_CheckSerialNumber::TitleCode1' has a wrong offset!");
static_assert(offsetof(USBFinderPluginBPLibrary_CheckSerialNumber, Area) == 0x000018, "Member 'USBFinderPluginBPLibrary_CheckSerialNumber::Area' has a wrong offset!");
static_assert(offsetof(USBFinderPluginBPLibrary_CheckSerialNumber, AccountList) == 0x000028, "Member 'USBFinderPluginBPLibrary_CheckSerialNumber::AccountList' has a wrong offset!");
static_assert(offsetof(USBFinderPluginBPLibrary_CheckSerialNumber, TitleCode2) == 0x000038, "Member 'USBFinderPluginBPLibrary_CheckSerialNumber::TitleCode2' has a wrong offset!");
static_assert(offsetof(USBFinderPluginBPLibrary_CheckSerialNumber, OutSerialNumber) == 0x000048, "Member 'USBFinderPluginBPLibrary_CheckSerialNumber::OutSerialNumber' has a wrong offset!");
static_assert(offsetof(USBFinderPluginBPLibrary_CheckSerialNumber, ReturnValue) == 0x000058, "Member 'USBFinderPluginBPLibrary_CheckSerialNumber::ReturnValue' has a wrong offset!");

// Function USBFinderPlugin.USBFinderPluginBPLibrary.GetAccount
// 0x0018 (0x0018 - 0x0000)
struct USBFinderPluginBPLibrary_GetAccount final
{
public:
	bool                                          Repossession;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(USBFinderPluginBPLibrary_GetAccount) == 0x000008, "Wrong alignment on USBFinderPluginBPLibrary_GetAccount");
static_assert(sizeof(USBFinderPluginBPLibrary_GetAccount) == 0x000018, "Wrong size on USBFinderPluginBPLibrary_GetAccount");
static_assert(offsetof(USBFinderPluginBPLibrary_GetAccount, Repossession) == 0x000000, "Member 'USBFinderPluginBPLibrary_GetAccount::Repossession' has a wrong offset!");
static_assert(offsetof(USBFinderPluginBPLibrary_GetAccount, ReturnValue) == 0x000008, "Member 'USBFinderPluginBPLibrary_GetAccount::ReturnValue' has a wrong offset!");

// Function USBFinderPlugin.USBFinderPluginBPLibrary.IsConnected
// 0x0001 (0x0001 - 0x0000)
struct USBFinderPluginBPLibrary_IsConnected final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(USBFinderPluginBPLibrary_IsConnected) == 0x000001, "Wrong alignment on USBFinderPluginBPLibrary_IsConnected");
static_assert(sizeof(USBFinderPluginBPLibrary_IsConnected) == 0x000001, "Wrong size on USBFinderPluginBPLibrary_IsConnected");
static_assert(offsetof(USBFinderPluginBPLibrary_IsConnected, ReturnValue) == 0x000000, "Member 'USBFinderPluginBPLibrary_IsConnected::ReturnValue' has a wrong offset!");

// Function USBFinderPlugin.USBFinderPluginBPLibrary.IsOutofRange
// 0x0048 (0x0048 - 0x0000)
struct USBFinderPluginBPLibrary_IsOutofRange final
{
public:
	class FString                                 Models;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Area;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         AccountList;                                       // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Unique;                                            // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(USBFinderPluginBPLibrary_IsOutofRange) == 0x000008, "Wrong alignment on USBFinderPluginBPLibrary_IsOutofRange");
static_assert(sizeof(USBFinderPluginBPLibrary_IsOutofRange) == 0x000048, "Wrong size on USBFinderPluginBPLibrary_IsOutofRange");
static_assert(offsetof(USBFinderPluginBPLibrary_IsOutofRange, Models) == 0x000000, "Member 'USBFinderPluginBPLibrary_IsOutofRange::Models' has a wrong offset!");
static_assert(offsetof(USBFinderPluginBPLibrary_IsOutofRange, Area) == 0x000010, "Member 'USBFinderPluginBPLibrary_IsOutofRange::Area' has a wrong offset!");
static_assert(offsetof(USBFinderPluginBPLibrary_IsOutofRange, AccountList) == 0x000020, "Member 'USBFinderPluginBPLibrary_IsOutofRange::AccountList' has a wrong offset!");
static_assert(offsetof(USBFinderPluginBPLibrary_IsOutofRange, Unique) == 0x000030, "Member 'USBFinderPluginBPLibrary_IsOutofRange::Unique' has a wrong offset!");
static_assert(offsetof(USBFinderPluginBPLibrary_IsOutofRange, ReturnValue) == 0x000040, "Member 'USBFinderPluginBPLibrary_IsOutofRange::ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBGameInstance

#include "Basic.hpp"

#include "BP_AJBGameInstance_classes.hpp"
#include "BP_AJBGameInstance_parameters.hpp"


namespace SDK
{

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnRequestStopRecordingReplay__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::OnRequestStopRecordingReplay__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "OnRequestStopRecordingReplay__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.ExecuteUbergraph_BP_AJBGameInstance
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::ExecuteUbergraph_BP_AJBGameInstance(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "ExecuteUbergraph_BP_AJBGameInstance");

	Params::BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnResetCompensationInfo
// (Event, Public, BlueprintEvent)

void UBP_AJBGameInstance_C::OnResetCompensationInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "OnResetCompensationInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.RequestLoadSkinData
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RequestSkinName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::RequestLoadSkinData(class FName RequestSkinName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "RequestLoadSkinData");

	Params::BP_AJBGameInstance_C_RequestLoadSkinData Parms{};

	Parms.RequestSkinName = RequestSkinName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.RequestLoadSkin
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FMatchingPlayerInfo>      MatchingPlayerInfo                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UBP_AJBGameInstance_C::RequestLoadSkin(const TArray<struct FMatchingPlayerInfo>& MatchingPlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "RequestLoadSkin");

	Params::BP_AJBGameInstance_C_RequestLoadSkin Parms{};

	Parms.MatchingPlayerInfo = std::move(MatchingPlayerInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnPlayEMoneySound
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SoundPath                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::OnPlayEMoneySound(const class FString& SoundPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "OnPlayEMoneySound");

	Params::BP_AJBGameInstance_C_OnPlayEMoneySound Parms{};

	Parms.SoundPath = std::move(SoundPath);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.InitializeEMoney
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::InitializeEMoney()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "InitializeEMoney");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnCompleteLoadingSystemOptions
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::OnCompleteLoadingSystemOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "OnCompleteLoadingSystemOptions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnServiceCredit
// (Event, Public, BlueprintEvent)

void UBP_AJBGameInstance_C::OnServiceCredit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "OnServiceCredit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnCoinCredit
// (Event, Public, BlueprintEvent)

void UBP_AJBGameInstance_C::OnCoinCredit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "OnCoinCredit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.ReceiveInit
// (Event, Public, BlueprintEvent)

void UBP_AJBGameInstance_C::ReceiveInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "ReceiveInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.HandleTravelError
// (Event, Public, BlueprintEvent)
// Parameters:
// ETravelFailure                          FailureType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::HandleTravelError(ETravelFailure FailureType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "HandleTravelError");

	Params::BP_AJBGameInstance_C_HandleTravelError Parms{};

	Parms.FailureType = FailureType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.HandleNetworkError
// (Event, Public, BlueprintEvent)
// Parameters:
// ENetworkFailure                         FailureType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsServer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBGameInstance_C::HandleNetworkError(ENetworkFailure FailureType, bool bIsServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "HandleNetworkError");

	Params::BP_AJBGameInstance_C_HandleNetworkError Parms{};

	Parms.FailureType = FailureType;
	Parms.bIsServer = bIsServer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.JoinAWS
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::JoinAWS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "JoinAWS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.CreateSession
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::CreateSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "CreateSession");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.JoinSession
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::JoinSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "JoinSession");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnSuccess_07489EA04CE76F0D97F45BA7F12AA00C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EAJBNetAPIResult                        Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAJBRewardReceivingStatus               ReceiveingStatus                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAJBGetRewardsResponse           GetRewards                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_AJBGameInstance_C::OnSuccess_07489EA04CE76F0D97F45BA7F12AA00C(EAJBNetAPIResult Result, EAJBRewardReceivingStatus ReceiveingStatus, const struct FAJBGetRewardsResponse& GetRewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "OnSuccess_07489EA04CE76F0D97F45BA7F12AA00C");

	Params::BP_AJBGameInstance_C_OnSuccess_07489EA04CE76F0D97F45BA7F12AA00C Parms{};

	Parms.Result = Result;
	Parms.ReceiveingStatus = ReceiveingStatus;
	Parms.GetRewards = std::move(GetRewards);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnFailed_07489EA04CE76F0D97F45BA7F12AA00C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EAJBNetAPIResult                        Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAJBRewardReceivingStatus               ReceiveingStatus                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAJBGetRewardsResponse           GetRewards                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_AJBGameInstance_C::OnFailed_07489EA04CE76F0D97F45BA7F12AA00C(EAJBNetAPIResult Result, EAJBRewardReceivingStatus ReceiveingStatus, const struct FAJBGetRewardsResponse& GetRewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "OnFailed_07489EA04CE76F0D97F45BA7F12AA00C");

	Params::BP_AJBGameInstance_C_OnFailed_07489EA04CE76F0D97F45BA7F12AA00C Parms{};

	Parms.Result = Result;
	Parms.ReceiveingStatus = ReceiveingStatus;
	Parms.GetRewards = std::move(GetRewards);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnLoaded_6528AD4A4A330DF560B5B9AE566DE724
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsSuccess                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FAJBGachaID                      GachaID                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_AJBGameInstance_C::OnLoaded_6528AD4A4A330DF560B5B9AE566DE724(bool bIsSuccess, const struct FAJBGachaID& GachaID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "OnLoaded_6528AD4A4A330DF560B5B9AE566DE724");

	Params::BP_AJBGameInstance_C_OnLoaded_6528AD4A4A330DF560B5B9AE566DE724 Parms{};

	Parms.bIsSuccess = bIsSuccess;
	Parms.GachaID = std::move(GachaID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnLoaded_B2EBF95E4779073BBCE1E8A5C9CDFFF6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::OnLoaded_B2EBF95E4779073BBCE1E8A5C9CDFFF6(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "OnLoaded_B2EBF95E4779073BBCE1E8A5C9CDFFF6");

	Params::BP_AJBGameInstance_C_OnLoaded_B2EBF95E4779073BBCE1E8A5C9CDFFF6 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnLoaded_3ABC71234A3D5835EF365A9B9BBC648B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::OnLoaded_3ABC71234A3D5835EF365A9B9BBC648B(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "OnLoaded_3ABC71234A3D5835EF365A9B9BBC648B");

	Params::BP_AJBGameInstance_C_OnLoaded_3ABC71234A3D5835EF365A9B9BBC648B Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnSuccess_903B789D45C3F7CD6A5D80A96949F47C
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::OnSuccess_903B789D45C3F7CD6A5D80A96949F47C()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "OnSuccess_903B789D45C3F7CD6A5D80A96949F47C");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnFailure_903B789D45C3F7CD6A5D80A96949F47C
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::OnFailure_903B789D45C3F7CD6A5D80A96949F47C()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "OnFailure_903B789D45C3F7CD6A5D80A96949F47C");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnSuccess_03445BE34E163FCEBE2A2A8C34A880E5
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::OnSuccess_03445BE34E163FCEBE2A2A8C34A880E5()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "OnSuccess_03445BE34E163FCEBE2A2A8C34A880E5");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnFailure_03445BE34E163FCEBE2A2A8C34A880E5
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::OnFailure_03445BE34E163FCEBE2A2A8C34A880E5()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "OnFailure_03445BE34E163FCEBE2A2A8C34A880E5");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnSuccess_40E191A64A6BA168B19E32AAC266F212
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBlueprintSessionResult>  Results                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UBP_AJBGameInstance_C::OnSuccess_40E191A64A6BA168B19E32AAC266F212(const TArray<struct FBlueprintSessionResult>& Results)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "OnSuccess_40E191A64A6BA168B19E32AAC266F212");

	Params::BP_AJBGameInstance_C_OnSuccess_40E191A64A6BA168B19E32AAC266F212 Parms{};

	Parms.Results = std::move(Results);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnFailure_40E191A64A6BA168B19E32AAC266F212
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBlueprintSessionResult>  Results                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UBP_AJBGameInstance_C::OnFailure_40E191A64A6BA168B19E32AAC266F212(const TArray<struct FBlueprintSessionResult>& Results)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "OnFailure_40E191A64A6BA168B19E32AAC266F212");

	Params::BP_AJBGameInstance_C_OnFailure_40E191A64A6BA168B19E32AAC266F212 Parms{};

	Parms.Results = std::move(Results);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnSuccess_64030A494DDA58C8248DF49674B43910
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::OnSuccess_64030A494DDA58C8248DF49674B43910()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "OnSuccess_64030A494DDA58C8248DF49674B43910");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnFailure_64030A494DDA58C8248DF49674B43910
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::OnFailure_64030A494DDA58C8248DF49674B43910()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "OnFailure_64030A494DDA58C8248DF49674B43910");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.ClearMatchingPlayerInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bKeepMatchingPlayers                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBGameInstance_C::ClearMatchingPlayerInfo(bool bKeepMatchingPlayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "ClearMatchingPlayerInfo");

	Params::BP_AJBGameInstance_C_ClearMatchingPlayerInfo Parms{};

	Parms.bKeepMatchingPlayers = bKeepMatchingPlayers;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.FindMatchingPlayerInfoFromPlayerID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   PlayerID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
// struct FMatchingPlayerInfo              Value                                                  (Parm, OutParm)

bool UBP_AJBGameInstance_C::FindMatchingPlayerInfoFromPlayerID(uint8 PlayerID, struct FMatchingPlayerInfo* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "FindMatchingPlayerInfoFromPlayerID");

	Params::BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID Parms{};

	Parms.PlayerID = PlayerID;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = std::move(Parms.Value);

	return Parms.ReturnValue;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.SetupMatchingNPC
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::SetupMatchingNPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "SetupMatchingNPC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.FindMatchingPlayerInfoFromPlayerName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           FindName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FMatchingPlayerInfo              Value                                                  (Parm, OutParm)

void UBP_AJBGameInstance_C::FindMatchingPlayerInfoFromPlayerName(const class FString& FindName, bool* Result, struct FMatchingPlayerInfo* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "FindMatchingPlayerInfoFromPlayerName");

	Params::BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerName Parms{};

	Parms.FindName = std::move(FindName);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (Value != nullptr)
		*Value = std::move(Parms.Value);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.SetStartLocation_MatchingPlayerInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   PlayerID                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FStartLocation                   Start_Location                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void UBP_AJBGameInstance_C::SetStartLocation_MatchingPlayerInfo(const uint8& PlayerID, const struct FStartLocation& Start_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "SetStartLocation_MatchingPlayerInfo");

	Params::BP_AJBGameInstance_C_SetStartLocation_MatchingPlayerInfo Parms{};

	Parms.PlayerID = PlayerID;
	Parms.Start_Location = std::move(Start_Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.TrySelectStartLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   PlayerID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FStartLocation                   SelectStartLocation                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// EResultStartLocation                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::TrySelectStartLocation(uint8 PlayerID, const struct FStartLocation& SelectStartLocation, EResultStartLocation* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "TrySelectStartLocation");

	Params::BP_AJBGameInstance_C_TrySelectStartLocation Parms{};

	Parms.PlayerID = PlayerID;
	Parms.SelectStartLocation = std::move(SelectStartLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.AddMatchingPlayerInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           PlayerID                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
// struct FMatchingPlayerInfo              PlayerInfo                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_AJBGameInstance_C::AddMatchingPlayerInfo(const class FString& PlayerID, const struct FMatchingPlayerInfo& PlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "AddMatchingPlayerInfo");

	Params::BP_AJBGameInstance_C_AddMatchingPlayerInfo Parms{};

	Parms.PlayerID = std::move(PlayerID);
	Parms.PlayerInfo = std::move(PlayerInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.IsFinishMatching
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBGameInstance_C::IsFinishMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "IsFinishMatching");

	Params::BP_AJBGameInstance_C_IsFinishMatching Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.SetCharacterIDFromPlayerName
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           FindName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// uint8                                   CharacterID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::SetCharacterIDFromPlayerName(const class FString& FindName, uint8 CharacterID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "SetCharacterIDFromPlayerName");

	Params::BP_AJBGameInstance_C_SetCharacterIDFromPlayerName Parms{};

	Parms.FindName = std::move(FindName);
	Parms.CharacterID = CharacterID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.IsFinishSelectStartLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBGameInstance_C::IsFinishSelectStartLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "IsFinishSelectStartLocation");

	Params::BP_AJBGameInstance_C_IsFinishSelectStartLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.TryAddStartLocationNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStartLocation                   StartLocation                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// bool                                    AddResult                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBGameInstance_C::TryAddStartLocationNum(const struct FStartLocation& StartLocation, bool* AddResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "TryAddStartLocationNum");

	Params::BP_AJBGameInstance_C_TryAddStartLocationNum Parms{};

	Parms.StartLocation = std::move(StartLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (AddResult != nullptr)
		*AddResult = Parms.AddResult;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.CheckSelecedAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBGameInstance_C::CheckSelecedAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "CheckSelecedAll");

	Params::BP_AJBGameInstance_C_CheckSelecedAll Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.BeginSelectStartLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::BeginSelectStartLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "BeginSelectStartLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetMatchingSecond
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Second                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MatchingMaxSecond_0                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::GetMatchingSecond(float* Second, float* MatchingMaxSecond_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "GetMatchingSecond");

	Params::BP_AJBGameInstance_C_GetMatchingSecond Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Second != nullptr)
		*Second = Parms.Second;

	if (MatchingMaxSecond_0 != nullptr)
		*MatchingMaxSecond_0 = Parms.MatchingMaxSecond_0;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetStartLocationSelectTimeSecond
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Second                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SelectStartLocationMaxSecond_0                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::GetStartLocationSelectTimeSecond(float* Second, float* SelectStartLocationMaxSecond_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "GetStartLocationSelectTimeSecond");

	Params::BP_AJBGameInstance_C_GetStartLocationSelectTimeSecond Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Second != nullptr)
		*Second = Parms.Second;

	if (SelectStartLocationMaxSecond_0 != nullptr)
		*SelectStartLocationMaxSecond_0 = Parms.SelectStartLocationMaxSecond_0;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.CalcStartLocationTotalNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::CalcStartLocationTotalNum(int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "CalcStartLocationTotalNum");

	Params::BP_AJBGameInstance_C_CalcStartLocationTotalNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.CalcStartLocationArrayIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FStartLocation                   StartLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// int32                                   Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::CalcStartLocationArrayIndex(const struct FStartLocation& StartLocation, int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "CalcStartLocationArrayIndex");

	Params::BP_AJBGameInstance_C_CalcStartLocationArrayIndex Parms{};

	Parms.StartLocation = std::move(StartLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetStartLocationNumber
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FStartLocation                   StartLocationNum_0                                     (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBP_AJBGameInstance_C::GetStartLocationNumber(struct FStartLocation* StartLocationNum_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "GetStartLocationNumber");

	Params::BP_AJBGameInstance_C_GetStartLocationNumber Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StartLocationNum_0 != nullptr)
		*StartLocationNum_0 = std::move(Parms.StartLocationNum_0);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.InitializeDamageAreaParam
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AreaTypeID_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::InitializeDamageAreaParam(int32 AreaTypeID_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "InitializeDamageAreaParam");

	Params::BP_AJBGameInstance_C_InitializeDamageAreaParam Parms{};

	Parms.AreaTypeID_0 = AreaTypeID_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.LogoutMatchingPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENetworkFailure                         Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::LogoutMatchingPlayer(ENetworkFailure Selection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "LogoutMatchingPlayer");

	Params::BP_AJBGameInstance_C_LogoutMatchingPlayer Parms{};

	Parms.Selection = Selection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.RandomFindStartLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStartLocation                   StartLocation                                          (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBP_AJBGameInstance_C::RandomFindStartLocation(struct FStartLocation* StartLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "RandomFindStartLocation");

	Params::BP_AJBGameInstance_C_RandomFindStartLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StartLocation != nullptr)
		*StartLocation = std::move(Parms.StartLocation);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.FinishStartLocationSelect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::FinishStartLocationSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "FinishStartLocationSelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GotoOutGameLevel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::GotoOutGameLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "GotoOutGameLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GotoTitleLevel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::GotoTitleLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "GotoTitleLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetLastPlayedWwiseBGMInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     EventTag                                               (Parm, OutParm, NoDestructor, HasGetValueTypeHash)
// int32                                   PlayingID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::GetLastPlayedWwiseBGMInfo(struct FGameplayTag* EventTag, int32* PlayingID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "GetLastPlayedWwiseBGMInfo");

	Params::BP_AJBGameInstance_C_GetLastPlayedWwiseBGMInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EventTag != nullptr)
		*EventTag = std::move(Parms.EventTag);

	if (PlayingID != nullptr)
		*PlayingID = Parms.PlayingID;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.SetPlayingWwiseBGMInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   PlayingID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::SetPlayingWwiseBGMInfo(const struct FGameplayTag& EventTag, int32 PlayingID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "SetPlayingWwiseBGMInfo");

	Params::BP_AJBGameInstance_C_SetPlayingWwiseBGMInfo Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.PlayingID = PlayingID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetCreaditNumClamp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_AJBGameInstance_C::GetCreaditNumClamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "GetCreaditNumClamp");

	Params::BP_AJBGameInstance_C_GetCreaditNumClamp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GotoHighlight
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::GotoHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "GotoHighlight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.PlayModeEquals
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPlayMode                               PlayMode_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBGameInstance_C::PlayModeEquals(EPlayMode PlayMode_0, bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "PlayModeEquals");

	Params::BP_AJBGameInstance_C_PlayModeEquals Parms{};

	Parms.PlayMode_0 = PlayMode_0;

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetPlayModeTitle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPlayMode                               PlayMode_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Result                                                 (Parm, OutParm)

void UBP_AJBGameInstance_C::GetPlayModeTitle(EPlayMode PlayMode_0, class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "GetPlayModeTitle");

	Params::BP_AJBGameInstance_C_GetPlayModeTitle Parms{};

	Parms.PlayMode_0 = PlayMode_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetCurrentPlayModeTitle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             Result                                                 (Parm, OutParm)

void UBP_AJBGameInstance_C::GetCurrentPlayModeTitle(class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "GetCurrentPlayModeTitle");

	Params::BP_AJBGameInstance_C_GetCurrentPlayModeTitle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OpenNoticeErrorLevel
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENetworkFailure                         Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::OpenNoticeErrorLevel(ENetworkFailure Selection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "OpenNoticeErrorLevel");

	Params::BP_AJBGameInstance_C_OpenNoticeErrorLevel Parms{};

	Parms.Selection = Selection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.SwitchInGameModeForNetworkError
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::SwitchInGameModeForNetworkError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "SwitchInGameModeForNetworkError");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.SwitchOutGameModeForNetworkError
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::SwitchOutGameModeForNetworkError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "SwitchOutGameModeForNetworkError");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.ReflectVolumeSettings
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bUseUserSettingVolumeRateDefault                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBGameInstance_C::ReflectVolumeSettings(bool bUseUserSettingVolumeRateDefault)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "ReflectVolumeSettings");

	Params::BP_AJBGameInstance_C_ReflectVolumeSettings Parms{};

	Parms.bUseUserSettingVolumeRateDefault = bUseUserSettingVolumeRateDefault;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.ReflectVolumeGameByTestModeValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewVolume                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::ReflectVolumeGameByTestModeValue(int32 NewVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "ReflectVolumeGameByTestModeValue");

	Params::BP_AJBGameInstance_C_ReflectVolumeGameByTestModeValue Parms{};

	Parms.NewVolume = NewVolume;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.ReflectVolumeAttractByTestModeValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewVolume                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::ReflectVolumeAttractByTestModeValue(int32 NewVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "ReflectVolumeAttractByTestModeValue");

	Params::BP_AJBGameInstance_C_ReflectVolumeAttractByTestModeValue Parms{};

	Parms.NewVolume = NewVolume;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.IsDamageAreaParamInitialized
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bDamageAreaParamInitialized_0                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBGameInstance_C::IsDamageAreaParamInitialized(bool* bDamageAreaParamInitialized_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "IsDamageAreaParamInitialized");

	Params::BP_AJBGameInstance_C_IsDamageAreaParamInitialized Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDamageAreaParamInitialized_0 != nullptr)
		*bDamageAreaParamInitialized_0 = Parms.bDamageAreaParamInitialized_0;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetInitialDamageAreaCenter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UBP_AJBGameInstance_C::GetInitialDamageAreaCenter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "GetInitialDamageAreaCenter");

	Params::BP_AJBGameInstance_C_GetInitialDamageAreaCenter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetInitialDamageAreaRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBP_AJBGameInstance_C::GetInitialDamageAreaRadius()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "GetInitialDamageAreaRadius");

	Params::BP_AJBGameInstance_C_GetInitialDamageAreaRadius Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OverwriteDamageAreaInitialParams
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AreaTypeID_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          DamageAreaCenter_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DamageAreaRadius_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::OverwriteDamageAreaInitialParams(int32 AreaTypeID_0, const struct FVector& DamageAreaCenter_0, float DamageAreaRadius_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "OverwriteDamageAreaInitialParams");

	Params::BP_AJBGameInstance_C_OverwriteDamageAreaInitialParams Parms{};

	Parms.AreaTypeID_0 = AreaTypeID_0;
	Parms.DamageAreaCenter_0 = std::move(DamageAreaCenter_0);
	Parms.DamageAreaRadius_0 = DamageAreaRadius_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetBlockingLoadStageAssetId
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FPrimaryAssetId>          Result                                                 (Parm, OutParm, ZeroConstructor)

void UBP_AJBGameInstance_C::GetBlockingLoadStageAssetId(TArray<struct FPrimaryAssetId>* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "GetBlockingLoadStageAssetId");

	Params::BP_AJBGameInstance_C_GetBlockingLoadStageAssetId Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.InitializeSelectedStartLoacation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::InitializeSelectedStartLoacation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "InitializeSelectedStartLoacation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetPlayerControllerUserDataID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           UserDataID                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::GetPlayerControllerUserDataID(class APlayerController* PlayerController, class FString* UserDataID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "GetPlayerControllerUserDataID");

	Params::BP_AJBGameInstance_C_GetPlayerControllerUserDataID Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);

	if (UserDataID != nullptr)
		*UserDataID = std::move(Parms.UserDataID);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.InitializeDamageAreaParamRandom
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::InitializeDamageAreaParamRandom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "InitializeDamageAreaParamRandom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.InitializeDamageAreaParam_ForDebug
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AreaTypeID_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::InitializeDamageAreaParam_ForDebug(int32 AreaTypeID_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "InitializeDamageAreaParam_ForDebug");

	Params::BP_AJBGameInstance_C_InitializeDamageAreaParam_ForDebug Parms{};

	Parms.AreaTypeID_0 = AreaTypeID_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.SetupDefaultLocalMatchingNPC
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::SetupDefaultLocalMatchingNPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "SetupDefaultLocalMatchingNPC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.ReflectUserOutputLevelHeadphone
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   UserSettingVolumeRate_0                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::ReflectUserOutputLevelHeadphone(float UserSettingVolumeRate_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "ReflectUserOutputLevelHeadphone");

	Params::BP_AJBGameInstance_C_ReflectUserOutputLevelHeadphone Parms{};

	Parms.UserSettingVolumeRate_0 = UserSettingVolumeRate_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.ReflectVolumeGame
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::ReflectVolumeGame(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "ReflectVolumeGame");

	Params::BP_AJBGameInstance_C_ReflectVolumeGame Parms{};

	Parms.Rate = Rate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.ReflectVolumeAttract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::ReflectVolumeAttract(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "ReflectVolumeAttract");

	Params::BP_AJBGameInstance_C_ReflectVolumeAttract Parms{};

	Parms.Rate = Rate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.ReflectOutputLevelHeadphoneByTestModeValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   UserSettingVolumeRate_0                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::ReflectOutputLevelHeadphoneByTestModeValue(int32 NewIndex, float UserSettingVolumeRate_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "ReflectOutputLevelHeadphoneByTestModeValue");

	Params::BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue Parms{};

	Parms.NewIndex = NewIndex;
	Parms.UserSettingVolumeRate_0 = UserSettingVolumeRate_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetStageID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   StageTypeID_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::GetStageID(int32* StageTypeID_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "GetStageID");

	Params::BP_AJBGameInstance_C_GetStageID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StageTypeID_0 != nullptr)
		*StageTypeID_0 = Parms.StageTypeID_0;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.InitializeInGameParam
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::InitializeInGameParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "InitializeInGameParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetAreaTypeID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_AJBGameInstance_C::GetAreaTypeID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "GetAreaTypeID");

	Params::BP_AJBGameInstance_C_GetAreaTypeID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetRandomAreaTypeID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_AJBGameInstance_C::GetRandomAreaTypeID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "GetRandomAreaTypeID");

	Params::BP_AJBGameInstance_C_GetRandomAreaTypeID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetCameramanNumber
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::GetCameramanNumber(int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "GetCameramanNumber");

	Params::BP_AJBGameInstance_C_GetCameramanNumber Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetUserSettingVolumeRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBP_AJBGameInstance_C::GetUserSettingVolumeRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "GetUserSettingVolumeRate");

	Params::BP_AJBGameInstance_C_GetUserSettingVolumeRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetEMoneyPrice
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_AJBGameInstance_C::GetEMoneyPrice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "GetEMoneyPrice");

	Params::BP_AJBGameInstance_C_GetEMoneyPrice Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.SetConnectionTimeOutSec
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewTimeSec                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::SetConnectionTimeOutSec(float NewTimeSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "SetConnectionTimeOutSec");

	Params::BP_AJBGameInstance_C_SetConnectionTimeOutSec Parms{};

	Parms.NewTimeSec = NewTimeSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.SetConnectionTimeOutSecForInGame
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::SetConnectionTimeOutSecForInGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "SetConnectionTimeOutSecForInGame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.SetConnectionTimeOutSecForOutGame
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::SetConnectionTimeOutSecForOutGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "SetConnectionTimeOutSecForOutGame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.ConvertToCharaNameTag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   CharaID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CharaName                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           StandName                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::ConvertToCharaNameTag(uint8 CharaID, class FString* CharaName, class FString* StandName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "ConvertToCharaNameTag");

	Params::BP_AJBGameInstance_C_ConvertToCharaNameTag Parms{};

	Parms.CharaID = CharaID;

	UObject::ProcessEvent(Func, &Parms);

	if (CharaName != nullptr)
		*CharaName = std::move(Parms.CharaName);

	if (StandName != nullptr)
		*StandName = std::move(Parms.StandName);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.UnloadAllSkinData
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBGameInstance_C::UnloadAllSkinData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "UnloadAllSkinData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.PlayModeIsPair
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBGameInstance_C::PlayModeIsPair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "PlayModeIsPair");

	Params::BP_AJBGameInstance_C_PlayModeIsPair Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.PlayModeIsShopCompetition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBGameInstance_C::PlayModeIsShopCompetition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "PlayModeIsShopCompetition");

	Params::BP_AJBGameInstance_C_PlayModeIsShopCompetition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.PlayModeIsSupportingCharacterAchievement
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBGameInstance_C::PlayModeIsSupportingCharacterAchievement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "PlayModeIsSupportingCharacterAchievement");

	Params::BP_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.RegistStageMapTexture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          UseStageMapTexture_0                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBGameInstance_C::RegistStageMapTexture(class UObject* UseStageMapTexture_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "RegistStageMapTexture");

	Params::BP_AJBGameInstance_C_RegistStageMapTexture Parms{};

	Parms.UseStageMapTexture_0 = UseStageMapTexture_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBGameInstance.BP_AJBGameInstance_C.PlayModeIsShopLocal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBGameInstance_C::PlayModeIsShopLocal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBGameInstance_C", "PlayModeIsShopLocal");

	Params::BP_AJBGameInstance_C_PlayModeIsShopLocal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


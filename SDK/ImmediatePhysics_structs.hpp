#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ImmediatePhysics

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// Enum ImmediatePhysics.ESimulationSpace
// NumValues: 0x0004
enum class ESimulationSpace : uint32
{
	ComponentSpace                           = 0,
	WorldSpace                               = 1,
	BaseBoneSpace                            = 2,
	ESimulationSpace_MAX                     = 3,
};

// ScriptStruct ImmediatePhysics.AnimNode_RigidBody
// 0x0488 (0x05A0 - 0x0118)
struct alignas(0x10) FAnimNode_RigidBody final : public FAnimNode_SkeletalControlBase
{
public:
	class UPhysicsAsset*                          OverridePhysicsAsset;                              // 0x0118(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                OverrideWorldGravity;                              // 0x0120(0x000C)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ExternalForce;                                     // 0x012C(0x000C)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ComponentLinearAccScale;                           // 0x0138(0x000C)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ComponentLinearVelScale;                           // 0x0144(0x000C)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ComponentAppliedLinearAccClamp;                    // 0x0150(0x000C)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionChannel                             OverlapChannel;                                    // 0x015C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableWorldGeometry;                              // 0x015D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15E[0x2];                                      // 0x015E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	ESimulationSpace                              SimulationSpace;                                   // 0x0160(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoneReference                         BaseBoneRef;                                       // 0x0168(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideWorldGravity;                             // 0x0180(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CachedBoundsScale;                                 // 0x0184(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTransferBoneVelocities;                           // 0x0188(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFreezeIncomingPoseOnStart;                        // 0x0189(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bComponentSpaceSimulation;                         // 0x018A(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_18B[0x415];                                    // 0x018B(0x0415)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FAnimNode_RigidBody) == 0x000010, "Wrong alignment on FAnimNode_RigidBody");
static_assert(sizeof(FAnimNode_RigidBody) == 0x0005A0, "Wrong size on FAnimNode_RigidBody");
static_assert(offsetof(FAnimNode_RigidBody, OverridePhysicsAsset) == 0x000118, "Member 'FAnimNode_RigidBody::OverridePhysicsAsset' has a wrong offset!");
static_assert(offsetof(FAnimNode_RigidBody, OverrideWorldGravity) == 0x000120, "Member 'FAnimNode_RigidBody::OverrideWorldGravity' has a wrong offset!");
static_assert(offsetof(FAnimNode_RigidBody, ExternalForce) == 0x00012C, "Member 'FAnimNode_RigidBody::ExternalForce' has a wrong offset!");
static_assert(offsetof(FAnimNode_RigidBody, ComponentLinearAccScale) == 0x000138, "Member 'FAnimNode_RigidBody::ComponentLinearAccScale' has a wrong offset!");
static_assert(offsetof(FAnimNode_RigidBody, ComponentLinearVelScale) == 0x000144, "Member 'FAnimNode_RigidBody::ComponentLinearVelScale' has a wrong offset!");
static_assert(offsetof(FAnimNode_RigidBody, ComponentAppliedLinearAccClamp) == 0x000150, "Member 'FAnimNode_RigidBody::ComponentAppliedLinearAccClamp' has a wrong offset!");
static_assert(offsetof(FAnimNode_RigidBody, OverlapChannel) == 0x00015C, "Member 'FAnimNode_RigidBody::OverlapChannel' has a wrong offset!");
static_assert(offsetof(FAnimNode_RigidBody, bEnableWorldGeometry) == 0x00015D, "Member 'FAnimNode_RigidBody::bEnableWorldGeometry' has a wrong offset!");
static_assert(offsetof(FAnimNode_RigidBody, SimulationSpace) == 0x000160, "Member 'FAnimNode_RigidBody::SimulationSpace' has a wrong offset!");
static_assert(offsetof(FAnimNode_RigidBody, BaseBoneRef) == 0x000168, "Member 'FAnimNode_RigidBody::BaseBoneRef' has a wrong offset!");
static_assert(offsetof(FAnimNode_RigidBody, bOverrideWorldGravity) == 0x000180, "Member 'FAnimNode_RigidBody::bOverrideWorldGravity' has a wrong offset!");
static_assert(offsetof(FAnimNode_RigidBody, CachedBoundsScale) == 0x000184, "Member 'FAnimNode_RigidBody::CachedBoundsScale' has a wrong offset!");
static_assert(offsetof(FAnimNode_RigidBody, bTransferBoneVelocities) == 0x000188, "Member 'FAnimNode_RigidBody::bTransferBoneVelocities' has a wrong offset!");
static_assert(offsetof(FAnimNode_RigidBody, bFreezeIncomingPoseOnStart) == 0x000189, "Member 'FAnimNode_RigidBody::bFreezeIncomingPoseOnStart' has a wrong offset!");
static_assert(offsetof(FAnimNode_RigidBody, bComponentSpaceSimulation) == 0x00018A, "Member 'FAnimNode_RigidBody::bComponentSpaceSimulation' has a wrong offset!");

}


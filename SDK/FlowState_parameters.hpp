#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FlowState

#include "Basic.hpp"

#include "FlowState_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function FlowState.FlowStateUtil.ChangeState
// 0x0070 (0x0070 - 0x0000)
struct FlowStateUtil_ChangeState final
{
public:
	struct FFlowStateHandler                      StateHandler;                                      // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FGameplayTag                           NextStateTag;                                      // 0x0060(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FlowStateUtil_ChangeState) == 0x000008, "Wrong alignment on FlowStateUtil_ChangeState");
static_assert(sizeof(FlowStateUtil_ChangeState) == 0x000070, "Wrong size on FlowStateUtil_ChangeState");
static_assert(offsetof(FlowStateUtil_ChangeState, StateHandler) == 0x000000, "Member 'FlowStateUtil_ChangeState::StateHandler' has a wrong offset!");
static_assert(offsetof(FlowStateUtil_ChangeState, NextStateTag) == 0x000060, "Member 'FlowStateUtil_ChangeState::NextStateTag' has a wrong offset!");
static_assert(offsetof(FlowStateUtil_ChangeState, ReturnValue) == 0x000068, "Member 'FlowStateUtil_ChangeState::ReturnValue' has a wrong offset!");

// Function FlowState.FlowStateUtil.FindFlowState
// 0x0070 (0x0070 - 0x0000)
struct FlowStateUtil_FindFlowState final
{
public:
	struct FFlowStateHandler                      StateHandler;                                      // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FGameplayTag                           NextStateTag;                                      // 0x0060(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStateObj*                              ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowStateUtil_FindFlowState) == 0x000008, "Wrong alignment on FlowStateUtil_FindFlowState");
static_assert(sizeof(FlowStateUtil_FindFlowState) == 0x000070, "Wrong size on FlowStateUtil_FindFlowState");
static_assert(offsetof(FlowStateUtil_FindFlowState, StateHandler) == 0x000000, "Member 'FlowStateUtil_FindFlowState::StateHandler' has a wrong offset!");
static_assert(offsetof(FlowStateUtil_FindFlowState, NextStateTag) == 0x000060, "Member 'FlowStateUtil_FindFlowState::NextStateTag' has a wrong offset!");
static_assert(offsetof(FlowStateUtil_FindFlowState, ReturnValue) == 0x000068, "Member 'FlowStateUtil_FindFlowState::ReturnValue' has a wrong offset!");

// Function FlowState.FlowStateUtil.InitializeFlowState
// 0x0060 (0x0060 - 0x0000)
struct FlowStateUtil_InitializeFlowState final
{
public:
	struct FFlowStateHandler                      InStateHandler;                                    // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowStateUtil_InitializeFlowState) == 0x000008, "Wrong alignment on FlowStateUtil_InitializeFlowState");
static_assert(sizeof(FlowStateUtil_InitializeFlowState) == 0x000060, "Wrong size on FlowStateUtil_InitializeFlowState");
static_assert(offsetof(FlowStateUtil_InitializeFlowState, InStateHandler) == 0x000000, "Member 'FlowStateUtil_InitializeFlowState::InStateHandler' has a wrong offset!");

// Function FlowState.FlowStateUtil.TickFlowState
// 0x0068 (0x0068 - 0x0000)
struct FlowStateUtil_TickFlowState final
{
public:
	struct FFlowStateHandler                      StateHandler;                                      // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         DeltaSconde;                                       // 0x0060(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FlowStateUtil_TickFlowState) == 0x000008, "Wrong alignment on FlowStateUtil_TickFlowState");
static_assert(sizeof(FlowStateUtil_TickFlowState) == 0x000068, "Wrong size on FlowStateUtil_TickFlowState");
static_assert(offsetof(FlowStateUtil_TickFlowState, StateHandler) == 0x000000, "Member 'FlowStateUtil_TickFlowState::StateHandler' has a wrong offset!");
static_assert(offsetof(FlowStateUtil_TickFlowState, DeltaSconde) == 0x000060, "Member 'FlowStateUtil_TickFlowState::DeltaSconde' has a wrong offset!");

// Function FlowState.StateObj.CallOnBegin
// 0x0008 (0x0008 - 0x0000)
struct StateObj_CallOnBegin final
{
public:
	struct FGameplayTag                           PrevState;                                         // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StateObj_CallOnBegin) == 0x000008, "Wrong alignment on StateObj_CallOnBegin");
static_assert(sizeof(StateObj_CallOnBegin) == 0x000008, "Wrong size on StateObj_CallOnBegin");
static_assert(offsetof(StateObj_CallOnBegin, PrevState) == 0x000000, "Member 'StateObj_CallOnBegin::PrevState' has a wrong offset!");

// Function FlowState.StateObj.CallOnEnd
// 0x0008 (0x0008 - 0x0000)
struct StateObj_CallOnEnd final
{
public:
	struct FGameplayTag                           NextState;                                         // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StateObj_CallOnEnd) == 0x000008, "Wrong alignment on StateObj_CallOnEnd");
static_assert(sizeof(StateObj_CallOnEnd) == 0x000008, "Wrong size on StateObj_CallOnEnd");
static_assert(offsetof(StateObj_CallOnEnd, NextState) == 0x000000, "Member 'StateObj_CallOnEnd::NextState' has a wrong offset!");

// Function FlowState.StateObj.CallOnTick
// 0x0004 (0x0004 - 0x0000)
struct StateObj_CallOnTick final
{
public:
	float                                         DeltaSecond;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StateObj_CallOnTick) == 0x000004, "Wrong alignment on StateObj_CallOnTick");
static_assert(sizeof(StateObj_CallOnTick) == 0x000004, "Wrong size on StateObj_CallOnTick");
static_assert(offsetof(StateObj_CallOnTick, DeltaSecond) == 0x000000, "Member 'StateObj_CallOnTick::DeltaSecond' has a wrong offset!");

}


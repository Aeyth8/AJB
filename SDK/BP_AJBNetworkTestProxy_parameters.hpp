#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBNetworkTestProxy

#include "Basic.hpp"

#include "AJB_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBNetworkTestProxy.BP_AJBNetworkTestProxy_C.ExecuteUbergraph_BP_AJBNetworkTestProxy
// 0x0070 (0x0070 - 0x0000)
struct BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAJBNetAPIResult                              K2Node_CustomEvent_Result1;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAJBNetAPIResult Result)>      K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	EAJBNetAPIResult                              K2Node_CustomEvent_Result;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAJBNetAPIResult Result)>      K2Node_CreateDelegate_OutputDelegate1;             // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	EAJBNetAPIResult                              Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UNetHttp*                               CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNetHttp*                               CallFunc_SetHeader_ReturnValue;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBNetAPI*                             CallFunc_Request_SysServeralive_ReturnValue;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess1;             // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance1;    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy) == 0x000008, "Wrong alignment on BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy");
static_assert(sizeof(BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy) == 0x000070, "Wrong size on BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy");
static_assert(offsetof(BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy, EntryPoint) == 0x000000, "Member 'BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy, K2Node_CustomEvent_Result1) == 0x000004, "Member 'BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy::K2Node_CustomEvent_Result1' has a wrong offset!");
static_assert(offsetof(BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy, K2Node_CustomEvent_Result) == 0x000018, "Member 'BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy, K2Node_CreateDelegate_OutputDelegate1) == 0x000020, "Member 'BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy, Temp_byte_Variable) == 0x000030, "Member 'BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000031, "Member 'BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000032, "Member 'BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy, CallFunc_Create_ReturnValue) == 0x000038, "Member 'BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy, CallFunc_SetHeader_ReturnValue) == 0x000040, "Member 'BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy::CallFunc_SetHeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy, CallFunc_GetAJBGameInstance_bSuccess) == 0x000048, "Member 'BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000050, "Member 'BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy, CallFunc_Request_SysServeralive_ReturnValue) == 0x000058, "Member 'BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy::CallFunc_Request_SysServeralive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy, CallFunc_GetAJBGameInstance_bSuccess1) == 0x000061, "Member 'BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy::CallFunc_GetAJBGameInstance_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy, CallFunc_GetAJBGameInstance_AJB_Game_Instance1) == 0x000068, "Member 'BP_AJBNetworkTestProxy_C_ExecuteUbergraph_BP_AJBNetworkTestProxy::CallFunc_GetAJBGameInstance_AJB_Game_Instance1' has a wrong offset!");

// Function BP_AJBNetworkTestProxy.BP_AJBNetworkTestProxy_C.OnSuccess_A97A969547DB49218203D18F22CD930E
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBNetworkTestProxy_C_OnSuccess_A97A969547DB49218203D18F22CD930E final
{
public:
	EAJBNetAPIResult                              Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBNetworkTestProxy_C_OnSuccess_A97A969547DB49218203D18F22CD930E) == 0x000001, "Wrong alignment on BP_AJBNetworkTestProxy_C_OnSuccess_A97A969547DB49218203D18F22CD930E");
static_assert(sizeof(BP_AJBNetworkTestProxy_C_OnSuccess_A97A969547DB49218203D18F22CD930E) == 0x000001, "Wrong size on BP_AJBNetworkTestProxy_C_OnSuccess_A97A969547DB49218203D18F22CD930E");
static_assert(offsetof(BP_AJBNetworkTestProxy_C_OnSuccess_A97A969547DB49218203D18F22CD930E, Result) == 0x000000, "Member 'BP_AJBNetworkTestProxy_C_OnSuccess_A97A969547DB49218203D18F22CD930E::Result' has a wrong offset!");

// Function BP_AJBNetworkTestProxy.BP_AJBNetworkTestProxy_C.OnFailed_A97A969547DB49218203D18F22CD930E
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBNetworkTestProxy_C_OnFailed_A97A969547DB49218203D18F22CD930E final
{
public:
	EAJBNetAPIResult                              Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBNetworkTestProxy_C_OnFailed_A97A969547DB49218203D18F22CD930E) == 0x000001, "Wrong alignment on BP_AJBNetworkTestProxy_C_OnFailed_A97A969547DB49218203D18F22CD930E");
static_assert(sizeof(BP_AJBNetworkTestProxy_C_OnFailed_A97A969547DB49218203D18F22CD930E) == 0x000001, "Wrong size on BP_AJBNetworkTestProxy_C_OnFailed_A97A969547DB49218203D18F22CD930E");
static_assert(offsetof(BP_AJBNetworkTestProxy_C_OnFailed_A97A969547DB49218203D18F22CD930E, Result) == 0x000000, "Member 'BP_AJBNetworkTestProxy_C_OnFailed_A97A969547DB49218203D18F22CD930E::Result' has a wrong offset!");

}


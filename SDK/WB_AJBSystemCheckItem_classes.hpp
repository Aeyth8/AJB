#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_AJBSystemCheckItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_AJBSystemCheckItem.WB_AJBSystemCheckItem_C
// 0x0090 (0x0298 - 0x0208)
class UWB_AJBSystemCheckItem_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0208(0x0008)(Transient, DuplicateTransient)
	class UTextBlock*                             Label;                                             // 0x0210(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Status;                                            // 0x0218(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   LabelText;                                         // 0x0220(0x0018)(Edit, BlueprintVisible)
	bool                                          bIsBlinkColor;                                     // 0x0238(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           BlinkAnimTimer;                                    // 0x0240(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSlateFontInfo                         FontInfo;                                          // 0x0248(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_AJBSystemCheckItem(int32 EntryPoint);
	void SetSerialNumber(const class FString& SerialNumber, bool bIsOK);
	void PreConstruct(bool IsDesignTime);
	void BlinkAnim();
	void FinishCheck(bool bIsOK);
	void StartCheck();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_AJBSystemCheckItem_C">();
	}
	static class UWB_AJBSystemCheckItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_AJBSystemCheckItem_C>();
	}
};
static_assert(alignof(UWB_AJBSystemCheckItem_C) == 0x000008, "Wrong alignment on UWB_AJBSystemCheckItem_C");
static_assert(sizeof(UWB_AJBSystemCheckItem_C) == 0x000298, "Wrong size on UWB_AJBSystemCheckItem_C");
static_assert(offsetof(UWB_AJBSystemCheckItem_C, UberGraphFrame) == 0x000208, "Member 'UWB_AJBSystemCheckItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_AJBSystemCheckItem_C, Label) == 0x000210, "Member 'UWB_AJBSystemCheckItem_C::Label' has a wrong offset!");
static_assert(offsetof(UWB_AJBSystemCheckItem_C, Status) == 0x000218, "Member 'UWB_AJBSystemCheckItem_C::Status' has a wrong offset!");
static_assert(offsetof(UWB_AJBSystemCheckItem_C, LabelText) == 0x000220, "Member 'UWB_AJBSystemCheckItem_C::LabelText' has a wrong offset!");
static_assert(offsetof(UWB_AJBSystemCheckItem_C, bIsBlinkColor) == 0x000238, "Member 'UWB_AJBSystemCheckItem_C::bIsBlinkColor' has a wrong offset!");
static_assert(offsetof(UWB_AJBSystemCheckItem_C, BlinkAnimTimer) == 0x000240, "Member 'UWB_AJBSystemCheckItem_C::BlinkAnimTimer' has a wrong offset!");
static_assert(offsetof(UWB_AJBSystemCheckItem_C, FontInfo) == 0x000248, "Member 'UWB_AJBSystemCheckItem_C::FontInfo' has a wrong offset!");

}


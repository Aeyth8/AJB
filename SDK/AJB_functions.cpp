#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AJB

#include "Basic.hpp"

#include "AJB_classes.hpp"
#include "AJB_parameters.hpp"


namespace SDK
{

// Function AJB.ActorCluster.CalcCenterLocationOfActors
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AActorCluster::CalcCenterLocationOfActors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActorCluster", "CalcCenterLocationOfActors");

	Params::ActorCluster_CalcCenterLocationOfActors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameAIController.GetContextActor
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AAJBInGameAIController::GetContextActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIController", "GetContextActor");

	Params::AJBInGameAIController_GetContextActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.ActorClusterHost.Clear
// (Final, Native, Public, BlueprintCallable)

void AActorClusterHost::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActorClusterHost", "Clear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.ActorClusterHost.ClusterKMeansPPByLocation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AActor*>                   Actors                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   CountOfCluster                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CountOfClusteringMax                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLocationXYOnlyArg                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AActorClusterHost::ClusterKMeansPPByLocation(const TArray<class AActor*>& Actors, int32 CountOfCluster, int32 CountOfClusteringMax, bool bLocationXYOnlyArg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActorClusterHost", "ClusterKMeansPPByLocation");

	Params::ActorClusterHost_ClusterKMeansPPByLocation Parms{};

	Parms.Actors = std::move(Actors);
	Parms.CountOfCluster = CountOfCluster;
	Parms.CountOfClusteringMax = CountOfClusteringMax;
	Parms.bLocationXYOnlyArg = bLocationXYOnlyArg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameAIDirectorComponent.DebugRequestAddNPCFromDebugActor
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameAIDirectorComponent::DebugRequestAddNPCFromDebugActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIDirectorComponent", "DebugRequestAddNPCFromDebugActor");

	Params::AJBInGameAIDirectorComponent_DebugRequestAddNPCFromDebugActor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBInGameAIDirectorComponent.DebugRequestAddNPCFromDebugArgs
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            AddInfoTags                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   AILevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameAIDirectorComponent::DebugRequestAddNPCFromDebugArgs(const struct FVector& Location, const struct FRotator& Rotation, const struct FGameplayTagContainer& AddInfoTags, int32 AILevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIDirectorComponent", "DebugRequestAddNPCFromDebugArgs");

	Params::AJBInGameAIDirectorComponent_DebugRequestAddNPCFromDebugArgs Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.AddInfoTags = std::move(AddInfoTags);
	Parms.AILevel = AILevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBInGameAIDirectorComponent.DebugRequestByGameplayTags
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            Tags                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector                          VectorIn                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameAIDirectorComponent::DebugRequestByGameplayTags(class APlayerController* PlayerController, const struct FGameplayTagContainer& Tags, const struct FVector& VectorIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIDirectorComponent", "DebugRequestByGameplayTags");

	Params::AJBInGameAIDirectorComponent_DebugRequestByGameplayTags Parms{};

	Parms.PlayerController = PlayerController;
	Parms.Tags = std::move(Tags);
	Parms.VectorIn = std::move(VectorIn);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBInGameAIDirectorComponent.DebugRequestHideDebugInfo
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameAIDirectorComponent::DebugRequestHideDebugInfo(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIDirectorComponent", "DebugRequestHideDebugInfo");

	Params::AJBInGameAIDirectorComponent_DebugRequestHideDebugInfo Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBInGameAIDirectorComponent.DebugRequestNPCAllLog
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NPCId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameAIDirectorComponent::DebugRequestNPCAllLog(class APlayerController* PlayerController, int32 NPCId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIDirectorComponent", "DebugRequestNPCAllLog");

	Params::AJBInGameAIDirectorComponent_DebugRequestNPCAllLog Parms{};

	Parms.PlayerController = PlayerController;
	Parms.NPCId = NPCId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBInGameAIDirectorComponent.DebugRequestRestartBehavior
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DebugMenuIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameAIDirectorComponent::DebugRequestRestartBehavior(int32 DebugMenuIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIDirectorComponent", "DebugRequestRestartBehavior");

	Params::AJBInGameAIDirectorComponent_DebugRequestRestartBehavior Parms{};

	Parms.DebugMenuIndex = DebugMenuIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBInGameAIDirectorComponent.DebugRequestShowDebugInfo
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameAIDirectorComponent::DebugRequestShowDebugInfo(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIDirectorComponent", "DebugRequestShowDebugInfo");

	Params::AJBInGameAIDirectorComponent_DebugRequestShowDebugInfo Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBAIEnvironmentBlock.AddBurningActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAIEnvironmentBlock::AddBurningActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAIEnvironmentBlock", "AddBurningActor");

	Params::AJBAIEnvironmentBlock_AddBurningActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAIEnvironmentBlock.AddDoor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsNotInHouse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAIEnvironmentBlock::AddDoor(class AActor* Actor, bool bIsNotInHouse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAIEnvironmentBlock", "AddDoor");

	Params::AJBAIEnvironmentBlock_AddDoor Parms{};

	Parms.Actor = Actor;
	Parms.bIsNotInHouse = bIsNotInHouse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAIEnvironmentBlock.AddGate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAIEnvironmentBlock::AddGate(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAIEnvironmentBlock", "AddGate");

	Params::AJBAIEnvironmentBlock_AddGate Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAIEnvironmentBlock.AddHouseInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAIEnvironmentBlock::AddHouseInfo(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAIEnvironmentBlock", "AddHouseInfo");

	Params::AJBAIEnvironmentBlock_AddHouseInfo Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAIEnvironmentBlock.AddStartPoint
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAIEnvironmentBlock::AddStartPoint(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAIEnvironmentBlock", "AddStartPoint");

	Params::AJBAIEnvironmentBlock_AddStartPoint Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAIEnvironmentBlock.AddTrap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAIEnvironmentBlock::AddTrap(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAIEnvironmentBlock", "AddTrap");

	Params::AJBAIEnvironmentBlock_AddTrap Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAIEnvironmentBlock.AddWaySpotByActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAIEnvironmentBlock::AddWaySpotByActor(const class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAIEnvironmentBlock", "AddWaySpotByActor");

	Params::AJBAIEnvironmentBlock_AddWaySpotByActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAIEnvironmentBlock.AddWaySpotByLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAIEnvironmentBlock::AddWaySpotByLocation(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAIEnvironmentBlock", "AddWaySpotByLocation");

	Params::AJBAIEnvironmentBlock_AddWaySpotByLocation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAIEnvironmentBlock.AddWindow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAIEnvironmentBlock::AddWindow(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAIEnvironmentBlock", "AddWindow");

	Params::AJBAIEnvironmentBlock_AddWindow Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAIEnvironmentBlock.RemoveBurningActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAIEnvironmentBlock::RemoveBurningActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAIEnvironmentBlock", "RemoveBurningActor");

	Params::AJBAIEnvironmentBlock_RemoveBurningActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAIEnvironmentBlock.RemoveTrap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAIEnvironmentBlock::RemoveTrap(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAIEnvironmentBlock", "RemoveTrap");

	Params::AJBAIEnvironmentBlock_RemoveTrap Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAIEnvironmentBlock.ShrinkHalfOfWaySpots
// (Final, Native, Public, BlueprintCallable)

void UAJBAIEnvironmentBlock::ShrinkHalfOfWaySpots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAIEnvironmentBlock", "ShrinkHalfOfWaySpots");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAIEnvironmentBlock.GetCenterLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UAJBAIEnvironmentBlock::GetCenterLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAIEnvironmentBlock", "GetCenterLocation");

	Params::AJBAIEnvironmentBlock_GetCenterLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameAIEnvironmentComponent.RequestAddBurningActor
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameAIEnvironmentComponent::RequestAddBurningActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIEnvironmentComponent", "RequestAddBurningActor");

	Params::AJBInGameAIEnvironmentComponent_RequestAddBurningActor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBInGameAIEnvironmentComponent.RequestAddSpawnedItem
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameAIEnvironmentComponent::RequestAddSpawnedItem(class AActor* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIEnvironmentComponent", "RequestAddSpawnedItem");

	Params::AJBInGameAIEnvironmentComponent_RequestAddSpawnedItem Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBInGameAIEnvironmentComponent.RequestAddTrap
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Trap                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameAIEnvironmentComponent::RequestAddTrap(class AActor* Trap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIEnvironmentComponent", "RequestAddTrap");

	Params::AJBInGameAIEnvironmentComponent_RequestAddTrap Parms{};

	Parms.Trap = Trap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBInGameAIEnvironmentComponent.RequestAIGion
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     GionEffectType                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           GionOwner                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameAIEnvironmentComponent::RequestAIGion(const struct FGameplayTag& GionEffectType, class AActor* GionOwner, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIEnvironmentComponent", "RequestAIGion");

	Params::AJBInGameAIEnvironmentComponent_RequestAIGion Parms{};

	Parms.GionEffectType = std::move(GionEffectType);
	Parms.GionOwner = GionOwner;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBInGameAIEnvironmentComponent.SetupEnvironmentBlocks
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           NavMeshVolume                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlockUnitSizeIn                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameAIEnvironmentComponent::SetupEnvironmentBlocks(class AActor* NavMeshVolume, float BlockUnitSizeIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIEnvironmentComponent", "SetupEnvironmentBlocks");

	Params::AJBInGameAIEnvironmentComponent_SetupEnvironmentBlocks Parms{};

	Parms.NavMeshVolume = NavMeshVolume;
	Parms.BlockUnitSizeIn = BlockUnitSizeIn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameAIEnvironmentComponent.GetBlockIndex
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBInGameAIEnvironmentComponent::GetBlockIndex(const struct FVector& Location) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIEnvironmentComponent", "GetBlockIndex");

	Params::AJBInGameAIEnvironmentComponent_GetBlockIndex Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameAIEnvironmentComponent.GetBlockIndexAround
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   BlockIndexCenter                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OffsetCountX                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OffsetCountY                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBInGameAIEnvironmentComponent::GetBlockIndexAround(int32 BlockIndexCenter, int32 OffsetCountX, int32 OffsetCountY) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIEnvironmentComponent", "GetBlockIndexAround");

	Params::AJBInGameAIEnvironmentComponent_GetBlockIndexAround Parms{};

	Parms.BlockIndexCenter = BlockIndexCenter;
	Parms.OffsetCountX = OffsetCountX;
	Parms.OffsetCountY = OffsetCountY;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameAIEnvironmentComponent.IsInNavMeshVolume
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBInGameAIEnvironmentComponent::IsInNavMeshVolume(const struct FVector& Location) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIEnvironmentComponent", "IsInNavMeshVolume");

	Params::AJBInGameAIEnvironmentComponent_IsInNavMeshVolume Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAIFunctionLibrary.AabbContainsAabb
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBox                             Box                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FBox                             Other                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBAIFunctionLibrary::AabbContainsAabb(const struct FBox& Box, const struct FBox& Other)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAIFunctionLibrary", "AabbContainsAabb");

	Params::AJBAIFunctionLibrary_AabbContainsAabb Parms{};

	Parms.Box = std::move(Box);
	Parms.Other = std::move(Other);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAIFunctionLibrary.AabbContainsPoint
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBox                             Box                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          Point                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBAIFunctionLibrary::AabbContainsPoint(const struct FBox& Box, const struct FVector& Point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAIFunctionLibrary", "AabbContainsPoint");

	Params::AJBAIFunctionLibrary_AabbContainsPoint Parms{};

	Parms.Box = std::move(Box);
	Parms.Point = std::move(Point);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAIFunctionLibrary.DeprojectScreenPositionToWorldForAI
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   ScreenX                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ScreenY                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   FOV                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ViewSize                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WorldLocation                                          (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WorldDirection                                         (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBAIFunctionLibrary::DeprojectScreenPositionToWorldForAI(float ScreenX, float ScreenY, const struct FVector& Location, const struct FRotator& Rotation, float FOV, const struct FVector2D& ViewSize, struct FVector* WorldLocation, struct FVector* WorldDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAIFunctionLibrary", "DeprojectScreenPositionToWorldForAI");

	Params::AJBAIFunctionLibrary_DeprojectScreenPositionToWorldForAI Parms{};

	Parms.ScreenX = ScreenX;
	Parms.ScreenY = ScreenY;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.FOV = FOV;
	Parms.ViewSize = std::move(ViewSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (WorldLocation != nullptr)
		*WorldLocation = std::move(Parms.WorldLocation);

	if (WorldDirection != nullptr)
		*WorldDirection = std::move(Parms.WorldDirection);

	return Parms.ReturnValue;
}


// Function AJB.AJBAIFunctionLibrary.GetBlackboardKeyName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlackboardKeySelector           Key                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UAJBAIFunctionLibrary::GetBlackboardKeyName(const struct FBlackboardKeySelector& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAIFunctionLibrary", "GetBlackboardKeyName");

	Params::AJBAIFunctionLibrary_GetBlackboardKeyName Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAIFunctionLibrary.GetClosestPointOnAabb
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBox                             Box                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          Point                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UAJBAIFunctionLibrary::GetClosestPointOnAabb(const struct FBox& Box, const struct FVector& Point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAIFunctionLibrary", "GetClosestPointOnAabb");

	Params::AJBAIFunctionLibrary_GetClosestPointOnAabb Parms{};

	Parms.Box = std::move(Box);
	Parms.Point = std::move(Point);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAIFunctionLibrary.InvalidLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UAJBAIFunctionLibrary::InvalidLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAIFunctionLibrary", "InvalidLocation");

	Params::AJBAIFunctionLibrary_InvalidLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAIFunctionLibrary.IsFinite
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBAIFunctionLibrary::IsFinite(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAIFunctionLibrary", "IsFinite");

	Params::AJBAIFunctionLibrary_IsFinite Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAIFunctionLibrary.IsNaN
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBAIFunctionLibrary::IsNaN(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAIFunctionLibrary", "IsNaN");

	Params::AJBAIFunctionLibrary_IsNaN Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAIFunctionLibrary.IsSameParentBTNode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBTDecorator_BlueprintBase*       Decorator                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBTService_BlueprintBase*         Service                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBAIFunctionLibrary::IsSameParentBTNode(class UBTDecorator_BlueprintBase* Decorator, class UBTService_BlueprintBase* Service)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAIFunctionLibrary", "IsSameParentBTNode");

	Params::AJBAIFunctionLibrary_IsSameParentBTNode Parms{};

	Parms.Decorator = Decorator;
	Parms.Service = Service;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAIFunctionLibrary.LineAabbIntersection
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBox                             Box                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          Start                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          End                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBAIFunctionLibrary::LineAabbIntersection(const struct FBox& Box, const struct FVector& Start, const struct FVector& End)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAIFunctionLibrary", "LineAabbIntersection");

	Params::AJBAIFunctionLibrary_LineAabbIntersection Parms{};

	Parms.Box = std::move(Box);
	Parms.Start = std::move(Start);
	Parms.End = std::move(End);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAIFunctionLibrary.MakeBoundingBoxFromLocations
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<struct FVector>                  Locations                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FBox                             OutBox                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UAJBAIFunctionLibrary::MakeBoundingBoxFromLocations(const TArray<struct FVector>& Locations, struct FBox* OutBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAIFunctionLibrary", "MakeBoundingBoxFromLocations");

	Params::AJBAIFunctionLibrary_MakeBoundingBoxFromLocations Parms{};

	Parms.Locations = std::move(Locations);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBox != nullptr)
		*OutBox = std::move(Parms.OutBox);
}


// Function AJB.AJBInGameAIInputProxyComponent.DebugResetOwnerController
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AController*                      OwnerControllerIn                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameAIInputProxyComponent::DebugResetOwnerController(class AController* OwnerControllerIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIInputProxyComponent", "DebugResetOwnerController");

	Params::AJBInGameAIInputProxyComponent_DebugResetOwnerController Parms{};

	Parms.OwnerControllerIn = OwnerControllerIn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameAIInputProxyComponent.PressCrouch
// (Native, Protected, BlueprintCallable)

void UAJBInGameAIInputProxyComponent::PressCrouch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIInputProxyComponent", "PressCrouch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameAIInputProxyComponent.PressEmote
// (Native, Protected, BlueprintCallable)

void UAJBInGameAIInputProxyComponent::PressEmote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIInputProxyComponent", "PressEmote");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameAIInputProxyComponent.PressInteract
// (Native, Protected, BlueprintCallable)

void UAJBInGameAIInputProxyComponent::PressInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIInputProxyComponent", "PressInteract");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameAIInputProxyComponent.PressJump
// (Native, Protected, BlueprintCallable)

void UAJBInGameAIInputProxyComponent::PressJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIInputProxyComponent", "PressJump");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameAIInputProxyComponent.PressL1
// (Native, Protected, BlueprintCallable)

void UAJBInGameAIInputProxyComponent::PressL1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIInputProxyComponent", "PressL1");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameAIInputProxyComponent.PressL2
// (Native, Protected, BlueprintCallable)

void UAJBInGameAIInputProxyComponent::PressL2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIInputProxyComponent", "PressL2");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameAIInputProxyComponent.PressMap
// (Native, Protected, BlueprintCallable)

void UAJBInGameAIInputProxyComponent::PressMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIInputProxyComponent", "PressMap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameAIInputProxyComponent.PressR1
// (Native, Protected, BlueprintCallable)

void UAJBInGameAIInputProxyComponent::PressR1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIInputProxyComponent", "PressR1");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameAIInputProxyComponent.PressR2
// (Native, Protected, BlueprintCallable)

void UAJBInGameAIInputProxyComponent::PressR2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIInputProxyComponent", "PressR2");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameAIInputProxyComponent.ReleaseCrouch
// (Native, Protected, BlueprintCallable)

void UAJBInGameAIInputProxyComponent::ReleaseCrouch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIInputProxyComponent", "ReleaseCrouch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameAIInputProxyComponent.ReleaseEmote
// (Native, Protected, BlueprintCallable)

void UAJBInGameAIInputProxyComponent::ReleaseEmote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIInputProxyComponent", "ReleaseEmote");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameAIInputProxyComponent.ReleaseInteract
// (Native, Protected, BlueprintCallable)

void UAJBInGameAIInputProxyComponent::ReleaseInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIInputProxyComponent", "ReleaseInteract");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameAIInputProxyComponent.ReleaseJump
// (Native, Protected, BlueprintCallable)

void UAJBInGameAIInputProxyComponent::ReleaseJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIInputProxyComponent", "ReleaseJump");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameAIInputProxyComponent.ReleaseL1
// (Native, Protected, BlueprintCallable)

void UAJBInGameAIInputProxyComponent::ReleaseL1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIInputProxyComponent", "ReleaseL1");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameAIInputProxyComponent.ReleaseL2
// (Native, Protected, BlueprintCallable)

void UAJBInGameAIInputProxyComponent::ReleaseL2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIInputProxyComponent", "ReleaseL2");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameAIInputProxyComponent.ReleaseMap
// (Native, Protected, BlueprintCallable)

void UAJBInGameAIInputProxyComponent::ReleaseMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIInputProxyComponent", "ReleaseMap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameAIInputProxyComponent.ReleaseR1
// (Native, Protected, BlueprintCallable)

void UAJBInGameAIInputProxyComponent::ReleaseR1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIInputProxyComponent", "ReleaseR1");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameAIInputProxyComponent.ReleaseR2
// (Native, Protected, BlueprintCallable)

void UAJBInGameAIInputProxyComponent::ReleaseR2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIInputProxyComponent", "ReleaseR2");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameAIInputProxyComponent.SetMovement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Forward                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Right                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Turn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LookUp                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameAIInputProxyComponent::SetMovement(float Forward, float Right, float Turn, float LookUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameAIInputProxyComponent", "SetMovement");

	Params::AJBInGameAIInputProxyComponent_SetMovement Parms{};

	Parms.Forward = Forward;
	Parms.Right = Right;
	Parms.Turn = Turn;
	Parms.LookUp = LookUp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMErrorObserverActor.FinishAmwSystemErrorCheck
// (Final, Native, Public, BlueprintCallable)

void AAJBAMErrorObserverActor::FinishAmwSystemErrorCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMErrorObserverActor", "FinishAmwSystemErrorCheck");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMErrorObserverActor.FinishGameServerCheck
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAJBTestModeGameServerError             Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBAMErrorObserverActor::FinishGameServerCheck(EAJBTestModeGameServerError Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMErrorObserverActor", "FinishGameServerCheck");

	Params::AJBAMErrorObserverActor_FinishGameServerCheck Parms{};

	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMErrorObserverActor.FinishLocalNetworkCheck
// (Final, Native, Public, BlueprintCallable)

void AAJBAMErrorObserverActor::FinishLocalNetworkCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMErrorObserverActor", "FinishLocalNetworkCheck");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMErrorObserverActor.FinishUploapErrorLog
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBAMErrorObserverActor::FinishUploapErrorLog(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMErrorObserverActor", "FinishUploapErrorLog");

	Params::AJBAMErrorObserverActor_FinishUploapErrorLog Parms{};

	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMErrorObserverActor.FinishUploapHeadClerk
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBAMErrorObserverActor::FinishUploapHeadClerk(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMErrorObserverActor", "FinishUploapHeadClerk");

	Params::AJBAMErrorObserverActor_FinishUploapHeadClerk Parms{};

	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMErrorObserverActor.OnHideErrorWindow
// (Event, Public, BlueprintEvent)

void AAJBAMErrorObserverActor::OnHideErrorWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMErrorObserverActor", "OnHideErrorWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBAMErrorObserverActor.OnRequestGameServerCheck
// (Event, Public, BlueprintEvent)

void AAJBAMErrorObserverActor::OnRequestGameServerCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMErrorObserverActor", "OnRequestGameServerCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBAMErrorObserverActor.OnRequestLocalNetworkCheck
// (Event, Public, BlueprintEvent)

void AAJBAMErrorObserverActor::OnRequestLocalNetworkCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMErrorObserverActor", "OnRequestLocalNetworkCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBAMErrorObserverActor.OnRequestUploadErrorLog
// (Event, Public, BlueprintEvent)

void AAJBAMErrorObserverActor::OnRequestUploadErrorLog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMErrorObserverActor", "OnRequestUploadErrorLog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBAMErrorObserverActor.OnRequestUploadHeadClerk
// (Event, Public, BlueprintEvent)

void AAJBAMErrorObserverActor::OnRequestUploadHeadClerk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMErrorObserverActor", "OnRequestUploadHeadClerk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBAMErrorObserverActor.OnShowErrorWindow
// (Event, Public, BlueprintEvent)
// Parameters:
// EAJBErrorID                             ErrorID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBAMErrorObserverActor::OnShowErrorWindow(EAJBErrorID ErrorID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMErrorObserverActor", "OnShowErrorWindow");

	Params::AJBAMErrorObserverActor_OnShowErrorWindow Parms{};

	Parms.ErrorID = ErrorID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBAMErrorObserverActor.OnStartAmwSystemErrorCheck
// (Event, Public, BlueprintEvent)

void AAJBAMErrorObserverActor::OnStartAmwSystemErrorCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMErrorObserverActor", "OnStartAmwSystemErrorCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBAMErrorObserverActor.SetEnableErrorCheck
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBAMErrorObserverActor::SetEnableErrorCheck(bool bIsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMErrorObserverActor", "SetEnableErrorCheck");

	Params::AJBAMErrorObserverActor_SetEnableErrorCheck Parms{};

	Parms.bIsEnable = bIsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMErrorObserverActor.SetEnableUpload
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBAMErrorObserverActor::SetEnableUpload(bool bIsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMErrorObserverActor", "SetEnableUpload");

	Params::AJBAMErrorObserverActor_SetEnableUpload Parms{};

	Parms.bIsEnable = bIsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMLED.ALLOffLED
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMLED::ALLOffLED(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMLED", "ALLOffLED");

	Params::AJBAMLED_ALLOffLED Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMLED.SetAJBBoardLEDPattern
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAJBBoardLEDPattern                     Pattern                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMLED::SetAJBBoardLEDPattern(const class UObject* WorldContextObject, EAJBBoardLEDPattern Pattern)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMLED", "SetAJBBoardLEDPattern");

	Params::AJBAMLED_SetAJBBoardLEDPattern Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Pattern = Pattern;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMLED.SetBoardBackLEDColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     Color                                                  (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMLED::SetBoardBackLEDColor(const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMLED", "SetBoardBackLEDColor");

	Params::AJBAMLED_SetBoardBackLEDColor Parms{};

	Parms.Color = std::move(Color);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMLED.SetBoardCenterLEDColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     Color                                                  (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMLED::SetBoardCenterLEDColor(const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMLED", "SetBoardCenterLEDColor");

	Params::AJBAMLED_SetBoardCenterLEDColor Parms{};

	Parms.Color = std::move(Color);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMLED.SetBoardFrontLEDColor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   bright                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMLED::SetBoardFrontLEDColor(int32 bright)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMLED", "SetBoardFrontLEDColor");

	Params::AJBAMLED_SetBoardFrontLEDColor Parms{};

	Parms.bright = bright;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMLED.SetQRCameraLED
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bOn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMLED::SetQRCameraLED(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMLED", "SetQRCameraLED");

	Params::AJBAMLED_SetQRCameraLED Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMLED.SetSideLEDColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     Color                                                  (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMLED::SetSideLEDColor(const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMLED", "SetSideLEDColor");

	Params::AJBAMLED_SetSideLEDColor Parms{};

	Parms.Color = std::move(Color);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameCharacterBase.CleanUp
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldDestroy                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameCharacterBase::CleanUp(bool bShouldDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "CleanUp");

	Params::AJBInGameCharacterBase_CleanUp Parms{};

	Parms.bShouldDestroy = bShouldDestroy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameCharacterBase.LookupRate
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameCharacterBase::LookupRate(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "LookupRate");

	Params::AJBInGameCharacterBase_LookupRate Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBInGameCharacterBase.MoveForward
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameCharacterBase::MoveForward(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "MoveForward");

	Params::AJBInGameCharacterBase_MoveForward Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBInGameCharacterBase.MoveRight
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameCharacterBase::MoveRight(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "MoveRight");

	Params::AJBInGameCharacterBase_MoveRight Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBInGameCharacterBase.OnPlayerControllerDestroyed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AAJBInGameCharacterBase::OnPlayerControllerDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "OnPlayerControllerDestroyed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameCharacterBase.OnPressedCrouch
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::OnPressedCrouch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "OnPressedCrouch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.OnPressedEmote
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::OnPressedEmote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "OnPressedEmote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.OnPressedInteract
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::OnPressedInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "OnPressedInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.OnPressedJump
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::OnPressedJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "OnPressedJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.OnPressedL1
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::OnPressedL1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "OnPressedL1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.OnPressedL2
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::OnPressedL2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "OnPressedL2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.OnPressedL3
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::OnPressedL3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "OnPressedL3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.OnPressedR1
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::OnPressedR1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "OnPressedR1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.OnPressedR2
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::OnPressedR2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "OnPressedR2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.OnPressedShoot
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::OnPressedShoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "OnPressedShoot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.OnReleasedCrouch
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::OnReleasedCrouch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "OnReleasedCrouch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.OnReleasedEmote
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::OnReleasedEmote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "OnReleasedEmote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.OnReleasedInteract
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::OnReleasedInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "OnReleasedInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.OnReleasedJump
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::OnReleasedJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "OnReleasedJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.OnReleasedL1
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::OnReleasedL1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "OnReleasedL1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.OnReleasedL2
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::OnReleasedL2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "OnReleasedL2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.OnReleasedL3
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::OnReleasedL3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "OnReleasedL3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.OnReleasedR1
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::OnReleasedR1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "OnReleasedR1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.OnReleasedR2
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::OnReleasedR2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "OnReleasedR2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.OnRep_MatchingPlayerIndex
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::OnRep_MatchingPlayerIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "OnRep_MatchingPlayerIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.OnRep_PairCharacter
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::OnRep_PairCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "OnRep_PairCharacter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.PostInitializeComponentsBP
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::PostInitializeComponentsBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "PostInitializeComponentsBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.PreInitializeComponentsBP
// (Event, Public, BlueprintEvent)

void AAJBInGameCharacterBase::PreInitializeComponentsBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "PreInitializeComponentsBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameCharacterBase.SetMatchingPlayerIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewMatchingPlayerIndex                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameCharacterBase::SetMatchingPlayerIndex(int32 NewMatchingPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "SetMatchingPlayerIndex");

	Params::AJBInGameCharacterBase_SetMatchingPlayerIndex Parms{};

	Parms.NewMatchingPlayerIndex = NewMatchingPlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameCharacterBase.SetPairCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AAJBInGameCharacterBase*          InPairCharacter                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameCharacterBase::SetPairCharacter(class AAJBInGameCharacterBase* InPairCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "SetPairCharacter");

	Params::AJBInGameCharacterBase_SetPairCharacter Parms{};

	Parms.InPairCharacter = InPairCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameCharacterBase.SetPairID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InPairID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameCharacterBase::SetPairID(const class FString& InPairID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "SetPairID");

	Params::AJBInGameCharacterBase_SetPairID Parms{};

	Parms.InPairID = std::move(InPairID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameCharacterBase.SetRole
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ENetRole                                NewRole                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameCharacterBase::SetRole(ENetRole NewRole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "SetRole");

	Params::AJBInGameCharacterBase_SetRole Parms{};

	Parms.NewRole = NewRole;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameCharacterBase.SetSharedController
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AController*                      InController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameCharacterBase::SetSharedController(class AController* InController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "SetSharedController");

	Params::AJBInGameCharacterBase_SetSharedController Parms{};

	Parms.InController = InController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameCharacterBase.TryGetEmoteAnimMontageByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimMontage* AAJBInGameCharacterBase::TryGetEmoteAnimMontageByIndex(const int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "TryGetEmoteAnimMontageByIndex");

	Params::AJBInGameCharacterBase_TryGetEmoteAnimMontageByIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameCharacterBase.TryGetEmoteVoiceByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AAJBInGameCharacterBase::TryGetEmoteVoiceByIndex(const int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "TryGetEmoteVoiceByIndex");

	Params::AJBInGameCharacterBase_TryGetEmoteVoiceByIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameCharacterBase.TryGetMatchingPlayerInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMatchingPlayerInfo              Out                                                    (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGameCharacterBase::TryGetMatchingPlayerInfo(struct FMatchingPlayerInfo* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "TryGetMatchingPlayerInfo");

	Params::AJBInGameCharacterBase_TryGetMatchingPlayerInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out != nullptr)
		*Out = std::move(Parms.Out);

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameCharacterBase.TryGetPlayerCustomData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   OutCharacterId                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCustomData                      Out                                                    (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGameCharacterBase::TryGetPlayerCustomData(int32* OutCharacterId, struct FCustomData* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "TryGetPlayerCustomData");

	Params::AJBInGameCharacterBase_TryGetPlayerCustomData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCharacterId != nullptr)
		*OutCharacterId = Parms.OutCharacterId;

	if (Out != nullptr)
		*Out = std::move(Parms.Out);

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameCharacterBase.TurnRate
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameCharacterBase::TurnRate(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "TurnRate");

	Params::AJBInGameCharacterBase_TurnRate Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBInGameCharacterBase.GetRole
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ENetRole                                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ENetRole AAJBInGameCharacterBase::GetRole() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "GetRole");

	Params::AJBInGameCharacterBase_GetRole Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameCharacterBase.HasLocalSharedController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGameCharacterBase::HasLocalSharedController() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacterBase", "HasLocalSharedController");

	Params::AJBInGameCharacterBase_HasLocalSharedController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAMSystemObject.ActiveAJBError
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAJBGameInstance*                 GameInstance                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAJBErrorID                             ErrorID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DetailLog                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemObject::ActiveAJBError(class UAJBGameInstance* GameInstance, EAJBErrorID ErrorID, const class FString& DetailLog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemObject", "ActiveAJBError");

	Params::AJBAMSystemObject_ActiveAJBError Parms{};

	Parms.GameInstance = GameInstance;
	Parms.ErrorID = ErrorID;
	Parms.DetailLog = std::move(DetailLog);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemObject.AddAJBError
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAJBGameInstance*                 GameInstance                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAJBErrorID                             ErrorID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DetailLog                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemObject::AddAJBError(class UAJBGameInstance* GameInstance, EAJBErrorID ErrorID, const class FString& DetailLog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemObject", "AddAJBError");

	Params::AJBAMSystemObject_AddAJBError Parms{};

	Parms.GameInstance = GameInstance;
	Parms.ErrorID = ErrorID;
	Parms.DetailLog = std::move(DetailLog);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemObject.AddNoticeNetError
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAJBNetAPIResult                        Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemObject::AddNoticeNetError(class UObject* WorldContextObject, EAJBNetAPIResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemObject", "AddNoticeNetError");

	Params::AJBAMSystemObject_AddNoticeNetError Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemObject.ChangeAMStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAMStatus                               ChangeStatus                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemObject::ChangeAMStatus(const class UObject* WorldContextObject, EAMStatus ChangeStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemObject", "ChangeAMStatus");

	Params::AJBAMSystemObject_ChangeAMStatus Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ChangeStatus = ChangeStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemObject.CheckAJBDongleError
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemObject::CheckAJBDongleError(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemObject", "CheckAJBDongleError");

	Params::AJBAMSystemObject_CheckAJBDongleError Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemObject.CheckAJBSerialNumber
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    Repossession                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutSerialNumber                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAJBErrorID                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAJBErrorID UAJBAMSystemObject::CheckAJBSerialNumber(bool Repossession, class FString* OutSerialNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemObject", "CheckAJBSerialNumber");

	Params::AJBAMSystemObject_CheckAJBSerialNumber Parms{};

	Parms.Repossession = Repossession;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSerialNumber != nullptr)
		*OutSerialNumber = std::move(Parms.OutSerialNumber);

	return Parms.ReturnValue;
}


// Function AJB.AJBAMSystemObject.CheckAJBSerialNumberAndNetID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Repossession                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutSerialNumber                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAJBErrorID                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAJBErrorID UAJBAMSystemObject::CheckAJBSerialNumberAndNetID(const class UObject* WorldContextObject, bool Repossession, class FString* OutSerialNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemObject", "CheckAJBSerialNumberAndNetID");

	Params::AJBAMSystemObject_CheckAJBSerialNumberAndNetID Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Repossession = Repossession;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSerialNumber != nullptr)
		*OutSerialNumber = std::move(Parms.OutSerialNumber);

	return Parms.ReturnValue;
}


// Function AJB.AJBAMSystemObject.GetActiveDongleError
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAJBErrorID                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAJBErrorID UAJBAMSystemObject::GetActiveDongleError(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemObject", "GetActiveDongleError");

	Params::AJBAMSystemObject_GetActiveDongleError Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAMSystemObject.InactiveAJBError
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAJBGameInstance*                 GameInstance                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAJBErrorID                             ErrorID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemObject::InactiveAJBError(class UAJBGameInstance* GameInstance, EAJBErrorID ErrorID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemObject", "InactiveAJBError");

	Params::AJBAMSystemObject_InactiveAJBError Parms{};

	Parms.GameInstance = GameInstance;
	Parms.ErrorID = ErrorID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemObject.InactiveAMErrorFromList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UAJBGameInstance*                 GameInstance                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EAJBErrorID>                     ErrorList                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAJBAMSystemObject::InactiveAMErrorFromList(class UAJBGameInstance* GameInstance, const TArray<EAJBErrorID>& ErrorList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemObject", "InactiveAMErrorFromList");

	Params::AJBAMSystemObject_InactiveAMErrorFromList Parms{};

	Parms.GameInstance = GameInstance;
	Parms.ErrorList = std::move(ErrorList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemObject.IsAMSystemErrorMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBAMSystemObject::IsAMSystemErrorMode(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemObject", "IsAMSystemErrorMode");

	Params::AJBAMSystemObject_IsAMSystemErrorMode Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAMSystemObject.OutNoticeNetError
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAJBNetAPIResult                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAJBNetAPIResult UAJBAMSystemObject::OutNoticeNetError(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemObject", "OutNoticeNetError");

	Params::AJBAMSystemObject_OutNoticeNetError Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAMSystemObject.SetAJBCoinLock
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Lock                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemObject::SetAJBCoinLock(const class UObject* WorldContextObject, bool Lock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemObject", "SetAJBCoinLock");

	Params::AJBAMSystemObject_SetAJBCoinLock Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Lock = Lock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemObject.SetAJBEmoneyTouchWaitStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsWait                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemObject::SetAJBEmoneyTouchWaitStatus(const class UObject* WorldContextObject, bool bIsWait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemObject", "SetAJBEmoneyTouchWaitStatus");

	Params::AJBAMSystemObject_SetAJBEmoneyTouchWaitStatus Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bIsWait = bIsWait;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemObject.UpdateAMErrorFromList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UAJBGameInstance*                 GameInstance                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAJBErrorID                             ErrorID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EAJBErrorID>                     ErrorList                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAJBAMSystemObject::UpdateAMErrorFromList(class UAJBGameInstance* GameInstance, EAJBErrorID ErrorID, const TArray<EAJBErrorID>& ErrorList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemObject", "UpdateAMErrorFromList");

	Params::AJBAMSystemObject_UpdateAMErrorFromList Parms{};

	Parms.GameInstance = GameInstance;
	Parms.ErrorID = ErrorID;
	Parms.ErrorList = std::move(ErrorList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemObject.FindFistAMSystemErrorMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EAJBErrorID                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAJBErrorID UAJBAMSystemObject::FindFistAMSystemErrorMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMSystemObject", "FindFistAMSystemErrorMode");

	Params::AJBAMSystemObject_FindFistAMSystemErrorMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAMSystemObject.FindFistLocalNetworkError
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EAJBErrorID                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAJBErrorID UAJBAMSystemObject::FindFistLocalNetworkError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMSystemObject", "FindFistLocalNetworkError");

	Params::AJBAMSystemObject_FindFistLocalNetworkError Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAMSystemObject.FindFistNetworkError
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EAJBErrorID                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAJBErrorID UAJBAMSystemObject::FindFistNetworkError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMSystemObject", "FindFistNetworkError");

	Params::AJBAMSystemObject_FindFistNetworkError Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAMSystemObject.IsActiveAJBError
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EAJBErrorID                             ErrorID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBAMSystemObject::IsActiveAJBError(EAJBErrorID ErrorID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMSystemObject", "IsActiveAJBError");

	Params::AJBAMSystemObject_IsActiveAJBError Parms{};

	Parms.ErrorID = ErrorID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAMSystemObject.ReserveTestModeTransition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemObject::ReserveTestModeTransition(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMSystemObject", "ReserveTestModeTransition");

	Params::AJBAMSystemObject_ReserveTestModeTransition Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameCharacter.IsNPC
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGameCharacter::IsNPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameCharacter", "IsNPC");

	Params::AJBInGameCharacter_IsNPC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBAMSystemSettings.GetAMIOOptions
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAMIOOptions               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FAMIOOptions UAJBAMSystemSettings::GetAMIOOptions(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemSettings", "GetAMIOOptions");

	Params::AJBAMSystemSettings_GetAMIOOptions Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAMSystemSettings.GetDefaultPurchaseLimitPP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPurchaseLimitPP                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPurchaseLimitPP UAJBAMSystemSettings::GetDefaultPurchaseLimitPP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemSettings", "GetDefaultPurchaseLimitPP");

	Params::AJBAMSystemSettings_GetDefaultPurchaseLimitPP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAMSystemSettings.GetShopEventSettings
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FShopEventSettings         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FShopEventSettings UAJBAMSystemSettings::GetShopEventSettings(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemSettings", "GetShopEventSettings");

	Params::AJBAMSystemSettings_GetShopEventSettings Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAMSystemSettings.GetTimeByClose
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutMinute                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::GetTimeByClose(class UObject* WorldContextObject, int32* OutMinute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemSettings", "GetTimeByClose");

	Params::AJBAMSystemSettings_GetTimeByClose Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMinute != nullptr)
		*OutMinute = Parms.OutMinute;
}


// Function AJB.AJBAMSystemSettings.GetTodayCloseTime
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutHoure                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutMinute                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::GetTodayCloseTime(class UObject* WorldContextObject, int32* OutHoure, int32* OutMinute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemSettings", "GetTodayCloseTime");

	Params::AJBAMSystemSettings_GetTodayCloseTime Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHoure != nullptr)
		*OutHoure = Parms.OutHoure;

	if (OutMinute != nullptr)
		*OutMinute = Parms.OutMinute;
}


// Function AJB.AJBAMSystemSettings.IsEnableDebugInput
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBAMSystemSettings::IsEnableDebugInput(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemSettings", "IsEnableDebugInput");

	Params::AJBAMSystemSettings_IsEnableDebugInput Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAMSystemSettings.IsEnableOverwriteDebugLogin
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBAMSystemSettings::IsEnableOverwriteDebugLogin(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemSettings", "IsEnableOverwriteDebugLogin");

	Params::AJBAMSystemSettings_IsEnableOverwriteDebugLogin Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAMSystemSettings.ResetBackupMemory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::ResetBackupMemory(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemSettings", "ResetBackupMemory");

	Params::AJBAMSystemSettings_ResetBackupMemory Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemSettings.ResetBookKeeping
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::ResetBookKeeping(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemSettings", "ResetBookKeeping");

	Params::AJBAMSystemSettings_ResetBookKeeping Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemSettings.SetLEDPowerAlive
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Power                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::SetLEDPowerAlive(class UObject* WorldContextObject, int32 Power)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemSettings", "SetLEDPowerAlive");

	Params::AJBAMSystemSettings_SetLEDPowerAlive Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Power = Power;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemSettings.SetLEDPowerNormal
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Power                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::SetLEDPowerNormal(class UObject* WorldContextObject, int32 Power)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemSettings", "SetLEDPowerNormal");

	Params::AJBAMSystemSettings_SetLEDPowerNormal Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Power = Power;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemSettings.SetShopCompetitionMatchingKey
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MatchingKey                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::SetShopCompetitionMatchingKey(class UObject* WorldContextObject, int32 MatchingKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemSettings", "SetShopCompetitionMatchingKey");

	Params::AJBAMSystemSettings_SetShopCompetitionMatchingKey Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MatchingKey = MatchingKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemSettings.SetShopCompetitionMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsShopCompetition                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::SetShopCompetitionMode(class UObject* WorldContextObject, bool bIsShopCompetition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemSettings", "SetShopCompetitionMode");

	Params::AJBAMSystemSettings_SetShopCompetitionMode Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bIsShopCompetition = bIsShopCompetition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemSettings.SetShopCompetitionPlayerType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EShopEventPlayerType                    Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::SetShopCompetitionPlayerType(class UObject* WorldContextObject, EShopEventPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemSettings", "SetShopCompetitionPlayerType");

	Params::AJBAMSystemSettings_SetShopCompetitionPlayerType Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemSettings.SetUpdateServerMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsServerMode                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::SetUpdateServerMode(class UObject* WorldContextObject, bool bIsServerMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemSettings", "SetUpdateServerMode");

	Params::AJBAMSystemSettings_SetUpdateServerMode Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bIsServerMode = bIsServerMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemSettings.SetUSIOAnalogSetting
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChannelNo                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Min                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Max                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Center                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::SetUSIOAnalogSetting(class UObject* WorldContextObject, int32 ChannelNo, int32 Min, int32 Max, int32 Center)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemSettings", "SetUSIOAnalogSetting");

	Params::AJBAMSystemSettings_SetUSIOAnalogSetting Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ChannelNo = ChannelNo;
	Parms.Min = Min;
	Parms.Max = Max;
	Parms.Center = Center;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemSettings.UpdateCloseTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   WeekIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Houre                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Minute                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::UpdateCloseTime(class UObject* WorldContextObject, const int32 WeekIndex, const int32 Houre, const int32 Minute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemSettings", "UpdateCloseTime");

	Params::AJBAMSystemSettings_UpdateCloseTime Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.WeekIndex = WeekIndex;
	Parms.Houre = Houre;
	Parms.Minute = Minute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemSettings.UpdateUSIOSetting
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::UpdateUSIOSetting(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAMSystemSettings", "UpdateUSIOSetting");

	Params::AJBAMSystemSettings_UpdateUSIOSetting Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemSettings.IncrementPlayCount
// (Final, Native, Public, BlueprintCallable)

void UAJBAMSystemSettings::IncrementPlayCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMSystemSettings", "IncrementPlayCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemSettings.IsNeedUploadErrorLog
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBAMSystemSettings::IsNeedUploadErrorLog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMSystemSettings", "IsNeedUploadErrorLog");

	Params::AJBAMSystemSettings_IsNeedUploadErrorLog Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAMSystemSettings.LoadSettingsIni
// (Final, Native, Public)

void UAJBAMSystemSettings::LoadSettingsIni()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMSystemSettings", "LoadSettingsIni");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemSettings.ResetPlayTime
// (Final, Native, Public, BlueprintCallable)

void UAJBAMSystemSettings::ResetPlayTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMSystemSettings", "ResetPlayTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemSettings.SetupSave_AMVersion
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<uint8>                           Data                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::SetupSave_AMVersion(TArray<uint8>* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMSystemSettings", "SetupSave_AMVersion");

	Params::AJBAMSystemSettings_SetupSave_AMVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Data != nullptr)
		*Data = std::move(Parms.Data);
}


// Function AJB.AJBAMSystemSettings.SetupSave_BookKeeping
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<uint8>                           Data                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::SetupSave_BookKeeping(TArray<uint8>* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMSystemSettings", "SetupSave_BookKeeping");

	Params::AJBAMSystemSettings_SetupSave_BookKeeping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Data != nullptr)
		*Data = std::move(Parms.Data);
}


// Function AJB.AJBAMSystemSettings.SetupSave_ErrorLogs
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<uint8>                           Data                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::SetupSave_ErrorLogs(TArray<uint8>* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMSystemSettings", "SetupSave_ErrorLogs");

	Params::AJBAMSystemSettings_SetupSave_ErrorLogs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Data != nullptr)
		*Data = std::move(Parms.Data);
}


// Function AJB.AJBAMSystemSettings.SetupSave_FreePlayCount
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<uint8>                           Data                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::SetupSave_FreePlayCount(TArray<uint8>* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMSystemSettings", "SetupSave_FreePlayCount");

	Params::AJBAMSystemSettings_SetupSave_FreePlayCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Data != nullptr)
		*Data = std::move(Parms.Data);
}


// Function AJB.AJBAMSystemSettings.SetupSave_Information
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<uint8>                           Data                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::SetupSave_Information(TArray<uint8>* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMSystemSettings", "SetupSave_Information");

	Params::AJBAMSystemSettings_SetupSave_Information Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Data != nullptr)
		*Data = std::move(Parms.Data);
}


// Function AJB.AJBAMSystemSettings.SetupSave_LastGameStatus
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<uint8>                           Data                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::SetupSave_LastGameStatus(TArray<uint8>* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMSystemSettings", "SetupSave_LastGameStatus");

	Params::AJBAMSystemSettings_SetupSave_LastGameStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Data != nullptr)
		*Data = std::move(Parms.Data);
}


// Function AJB.AJBAMSystemSettings.SetupSave_ShopInfoSaveData
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<uint8>                           Data                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::SetupSave_ShopInfoSaveData(TArray<uint8>* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMSystemSettings", "SetupSave_ShopInfoSaveData");

	Params::AJBAMSystemSettings_SetupSave_ShopInfoSaveData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Data != nullptr)
		*Data = std::move(Parms.Data);
}


// Function AJB.AJBAMSystemSettings.SetupSave_SystemOptions
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<uint8>                           Data                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::SetupSave_SystemOptions(TArray<uint8>* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMSystemSettings", "SetupSave_SystemOptions");

	Params::AJBAMSystemSettings_SetupSave_SystemOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Data != nullptr)
		*Data = std::move(Parms.Data);
}


// Function AJB.AJBAMSystemSettings.SetupSave_UpdateSettingsSaveData
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<uint8>                           Data                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::SetupSave_UpdateSettingsSaveData(TArray<uint8>* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMSystemSettings", "SetupSave_UpdateSettingsSaveData");

	Params::AJBAMSystemSettings_SetupSave_UpdateSettingsSaveData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Data != nullptr)
		*Data = std::move(Parms.Data);
}


// Function AJB.AJBAMSystemSettings.UpdatePlayTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bOnPlay                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAMSystemSettings::UpdatePlayTime(bool bOnPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMSystemSettings", "UpdatePlayTime");

	Params::AJBAMSystemSettings_UpdatePlayTime Parms{};

	Parms.bOnPlay = bOnPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAMSystemSettings.IsEnableCloseTime
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBAMSystemSettings::IsEnableCloseTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAMSystemSettings", "IsEnableCloseTime");

	Params::AJBAMSystemSettings_IsEnableCloseTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameEffectActor.IsBeingUsed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGameEffectActor::IsBeingUsed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameEffectActor", "IsBeingUsed");

	Params::AJBInGameEffectActor_IsBeingUsed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBArcadeTimeManager.DevUpdateTodayWeekCloseTime
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Houre                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Minute                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBArcadeTimeManager::DevUpdateTodayWeekCloseTime(const int32 Houre, const int32 Minute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBArcadeTimeManager", "DevUpdateTodayWeekCloseTime");

	Params::AJBArcadeTimeManager_DevUpdateTodayWeekCloseTime Parms{};

	Parms.Houre = Houre;
	Parms.Minute = Minute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBArcadeTimeManager.OnAddPP
// (Final, Native, Public)

void UAJBArcadeTimeManager::OnAddPP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBArcadeTimeManager", "OnAddPP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBArrayFunctionLibrary.SortInt32Array
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                           InArray                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           OutArray                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAJBArrayFunctionLibrary::SortInt32Array(const TArray<int32>& InArray, TArray<int32>* OutArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBArrayFunctionLibrary", "SortInt32Array");

	Params::AJBArrayFunctionLibrary_SortInt32Array Parms{};

	Parms.InArray = std::move(InArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutArray != nullptr)
		*OutArray = std::move(Parms.OutArray);
}


// Function AJB.AJBAssetManager.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAJBAssetManager*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBAssetManager* UAJBAssetManager::Get()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAssetManager", "Get");

	Params::AJBAssetManager_Get Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAssetManager.AllUnloadPrimaryEmoteAssets
// (Final, Native, Public, BlueprintCallable)

void UAJBAssetManager::AllUnloadPrimaryEmoteAssets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAssetManager", "AllUnloadPrimaryEmoteAssets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAssetManager.GetAJBInGameCharacterClassByCharaId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CharacterID                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AAJBInGameCharacter>  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class AAJBInGameCharacter> UAJBAssetManager::GetAJBInGameCharacterClassByCharaId(const class UObject* WorldContextObject, const int32 CharacterID, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAssetManager", "GetAJBInGameCharacterClassByCharaId");

	Params::AJBAssetManager_GetAJBInGameCharacterClassByCharaId Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CharacterID = CharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	return Parms.ReturnValue;
}


// Function AJB.AJBAssetManager.GetAJBInGameCharacterClassByCharaTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     CharaTag                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AAJBInGameCharacter>  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class AAJBInGameCharacter> UAJBAssetManager::GetAJBInGameCharacterClassByCharaTag(const struct FGameplayTag& CharaTag, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAssetManager", "GetAJBInGameCharacterClassByCharaTag");

	Params::AJBAssetManager_GetAJBInGameCharacterClassByCharaTag Parms{};

	Parms.CharaTag = std::move(CharaTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	return Parms.ReturnValue;
}


// Function AJB.AJBAssetManager.GetAJBInGameCharacterTagByCharaId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CharacterID                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UAJBAssetManager::GetAJBInGameCharacterTagByCharaId(const class UObject* WorldContextObject, const int32 CharacterID, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAssetManager", "GetAJBInGameCharacterTagByCharaId");

	Params::AJBAssetManager_GetAJBInGameCharacterTagByCharaId Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CharacterID = CharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	return Parms.ReturnValue;
}


// Function AJB.AJBAssetManager.GetEmotePrimaryDataAssetIdByCharaId
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CharacterID                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EmoteId                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPrimaryAssetId                  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FPrimaryAssetId UAJBAssetManager::GetEmotePrimaryDataAssetIdByCharaId(const class UObject* WorldContextObject, const int32 CharacterID, const int32 EmoteId, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAssetManager", "GetEmotePrimaryDataAssetIdByCharaId");

	Params::AJBAssetManager_GetEmotePrimaryDataAssetIdByCharaId Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CharacterID = CharacterID;
	Parms.EmoteId = EmoteId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	return Parms.ReturnValue;
}


// Function AJB.AJBAssetManager.GetEmotePrimaryDataAssetIdByCharaTag
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     CharaTag                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EmoteId                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPrimaryAssetId                  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FPrimaryAssetId UAJBAssetManager::GetEmotePrimaryDataAssetIdByCharaTag(const class UObject* WorldContextObject, const struct FGameplayTag& CharaTag, const int32 EmoteId, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAssetManager", "GetEmotePrimaryDataAssetIdByCharaTag");

	Params::AJBAssetManager_GetEmotePrimaryDataAssetIdByCharaTag Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CharaTag = std::move(CharaTag);
	Parms.EmoteId = EmoteId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	return Parms.ReturnValue;
}


// Function AJB.AJBAssetManager.GetPlayerIconIDByRewardNo
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   RewardNo                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBAssetManager::GetPlayerIconIDByRewardNo(int32 RewardNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAssetManager", "GetPlayerIconIDByRewardNo");

	Params::AJBAssetManager_GetPlayerIconIDByRewardNo Parms{};

	Parms.RewardNo = RewardNo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAssetManager.GetPreLoadingPrimaryDataAssetId
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StageId                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPrimaryAssetId                  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FPrimaryAssetId UAJBAssetManager::GetPreLoadingPrimaryDataAssetId(const class UObject* WorldContextObject, const int32 StageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAssetManager", "GetPreLoadingPrimaryDataAssetId");

	Params::AJBAssetManager_GetPreLoadingPrimaryDataAssetId Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.StageId = StageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAssetManager.GetRewardCharaIconTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CharaIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RewardNo                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTexture>          ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture> UAJBAssetManager::GetRewardCharaIconTexture(const class UObject* WorldContextObject, int32 CharaIndex, int32 RewardNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAssetManager", "GetRewardCharaIconTexture");

	Params::AJBAssetManager_GetRewardCharaIconTexture Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CharaIndex = CharaIndex;
	Parms.RewardNo = RewardNo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAssetManager.GetRewardStandIconTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CharaIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RewardNo                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTexture>          ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture> UAJBAssetManager::GetRewardStandIconTexture(const class UObject* WorldContextObject, int32 CharaIndex, int32 RewardNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAssetManager", "GetRewardStandIconTexture");

	Params::AJBAssetManager_GetRewardStandIconTexture Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CharaIndex = CharaIndex;
	Parms.RewardNo = RewardNo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAssetManager.IsValidPrimaryAssetId
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FPrimaryAssetId                  CheckPrimaryAssetId                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBAssetManager::IsValidPrimaryAssetId(const struct FPrimaryAssetId& CheckPrimaryAssetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAssetManager", "IsValidPrimaryAssetId");

	Params::AJBAssetManager_IsValidPrimaryAssetId Parms{};

	Parms.CheckPrimaryAssetId = std::move(CheckPrimaryAssetId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAssetManager.LoadAssetSyncByPrimaryAssetId
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FPrimaryAssetId                  PrimaryAssetId                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLogWarning                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UAJBAssetManager::LoadAssetSyncByPrimaryAssetId(const struct FPrimaryAssetId& PrimaryAssetId, bool bLogWarning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAssetManager", "LoadAssetSyncByPrimaryAssetId");

	Params::AJBAssetManager_LoadAssetSyncByPrimaryAssetId Parms{};

	Parms.PrimaryAssetId = std::move(PrimaryAssetId);
	Parms.bLogWarning = bLogWarning;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAssetManager.RegisterLoadedPrimaryEmoteMap
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UObject*>                  PrimaryEmoteAssets                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAJBAssetManager::RegisterLoadedPrimaryEmoteMap(const TArray<class UObject*>& PrimaryEmoteAssets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAssetManager", "RegisterLoadedPrimaryEmoteMap");

	Params::AJBAssetManager_RegisterLoadedPrimaryEmoteMap Parms{};

	Parms.PrimaryEmoteAssets = std::move(PrimaryEmoteAssets);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAssetManager.SetupCharacterClassLoadingPrimaryDataAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          PrimaryAsset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAssetManager::SetupCharacterClassLoadingPrimaryDataAsset(class UObject* PrimaryAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAssetManager", "SetupCharacterClassLoadingPrimaryDataAsset");

	Params::AJBAssetManager_SetupCharacterClassLoadingPrimaryDataAsset Parms{};

	Parms.PrimaryAsset = PrimaryAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAssetManager.SetupTitlePreLoadingPrimaryDataAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          PrimaryAsset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBAssetManager::SetupTitlePreLoadingPrimaryDataAsset(class UObject* PrimaryAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAssetManager", "SetupTitlePreLoadingPrimaryDataAsset");

	Params::AJBAssetManager_SetupTitlePreLoadingPrimaryDataAsset Parms{};

	Parms.PrimaryAsset = PrimaryAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBAssetManager.TryGetLoadedPrimaryEmoteAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CharacterID                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EmoteId                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBPrimaryEmote*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBPrimaryEmote* UAJBAssetManager::TryGetLoadedPrimaryEmoteAsset(const class UObject* WorldContextObject, const int32 CharacterID, const int32 EmoteId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBAssetManager", "TryGetLoadedPrimaryEmoteAsset");

	Params::AJBAssetManager_TryGetLoadedPrimaryEmoteAsset Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CharacterID = CharacterID;
	Parms.EmoteId = EmoteId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBAsyncTaskDownloadImage.AJBDownloadImage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SourceURL_                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SourceMD5HashString_                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DistFilename_                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeoutSec_                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BandwidthBytePerSec_                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBAsyncTaskDownloadImage*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBAsyncTaskDownloadImage* UAJBAsyncTaskDownloadImage::AJBDownloadImage(class UObject* WorldContextObject, const class FString& SourceURL_, const class FString& SourceMD5HashString_, const class FString& DistFilename_, float TimeoutSec_, int32 BandwidthBytePerSec_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBAsyncTaskDownloadImage", "AJBDownloadImage");

	Params::AJBAsyncTaskDownloadImage_AJBDownloadImage Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SourceURL_ = std::move(SourceURL_);
	Parms.SourceMD5HashString_ = std::move(SourceMD5HashString_);
	Parms.DistFilename_ = std::move(DistFilename_);
	Parms.TimeoutSec_ = TimeoutSec_;
	Parms.BandwidthBytePerSec_ = BandwidthBytePerSec_;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHUDBase.BindButtonsEventDynamic
// (Native, Public, BlueprintCallable)
// Parameters:
// class UAJBUserWidget*                   TargetWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBHUDBase::BindButtonsEventDynamic(class UAJBUserWidget* TargetWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "BindButtonsEventDynamic");

	Params::AJBHUDBase_BindButtonsEventDynamic Parms{};

	Parms.TargetWidget = TargetWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHUDBase.CallEndFadeEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAJBFadeType                            Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBHUDBase::CallEndFadeEvent(EAJBFadeType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "CallEndFadeEvent");

	Params::AJBHUDBase_CallEndFadeEvent Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHUDBase.CallStartFadeEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAJBFadeType                            Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBHUDBase::CallStartFadeEvent(EAJBFadeType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "CallStartFadeEvent");

	Params::AJBHUDBase_CallStartFadeEvent Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHUDBase.FindAJBWidgetOfClass
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UAJBUserWidget>       AJBWidgetClass                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBUserWidget*                   OutWidget                                              (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBHUDBase::FindAJBWidgetOfClass(TSubclassOf<class UAJBUserWidget> AJBWidgetClass, class UAJBUserWidget** OutWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "FindAJBWidgetOfClass");

	Params::AJBHUDBase_FindAJBWidgetOfClass Parms{};

	Parms.AJBWidgetClass = AJBWidgetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWidget != nullptr)
		*OutWidget = Parms.OutWidget;
}


// Function AJB.AJBHUDBase.FindAJBWidgetsOfClass
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UAJBUserWidget>       AJBWidgetClass                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UAJBUserWidget*>           OutWidgets                                             (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AAJBHUDBase::FindAJBWidgetsOfClass(TSubclassOf<class UAJBUserWidget> AJBWidgetClass, TArray<class UAJBUserWidget*>* OutWidgets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "FindAJBWidgetsOfClass");

	Params::AJBHUDBase_FindAJBWidgetsOfClass Parms{};

	Parms.AJBWidgetClass = AJBWidgetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWidgets != nullptr)
		*OutWidgets = std::move(Parms.OutWidgets);
}


// Function AJB.AJBHUDBase.GetInputWidgets
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UAJBUserWidget*>           OutWidgets                                             (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBHUDBase::GetInputWidgets(TArray<class UAJBUserWidget*>* OutWidgets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "GetInputWidgets");

	Params::AJBHUDBase_GetInputWidgets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWidgets != nullptr)
		*OutWidgets = std::move(Parms.OutWidgets);

	return Parms.ReturnValue;
}


// Function AJB.AJBHUDBase.GetViewportWidgets
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UAJBUserWidget*>           OutWidgets                                             (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBHUDBase::GetViewportWidgets(TArray<class UAJBUserWidget*>* OutWidgets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "GetViewportWidgets");

	Params::AJBHUDBase_GetViewportWidgets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWidgets != nullptr)
		*OutWidgets = std::move(Parms.OutWidgets);

	return Parms.ReturnValue;
}


// Function AJB.AJBHUDBase.IsPressedInputButtonWidget
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBHUDBase::IsPressedInputButtonWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "IsPressedInputButtonWidget");

	Params::AJBHUDBase_IsPressedInputButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHUDBase.IsPressedInputPad
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBHUDBase::IsPressedInputPad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "IsPressedInputPad");

	Params::AJBHUDBase_IsPressedInputPad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHUDBase.OnFinishedAssignKeyFromDataTable
// (Event, Public, BlueprintEvent)

void AAJBHUDBase::OnFinishedAssignKeyFromDataTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "OnFinishedAssignKeyFromDataTable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBHUDBase.OnInputCharaSkinDecrement
// (Event, Public, BlueprintEvent)

void AAJBHUDBase::OnInputCharaSkinDecrement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "OnInputCharaSkinDecrement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBHUDBase.OnInputCharaSkinIncrement
// (Event, Public, BlueprintEvent)

void AAJBHUDBase::OnInputCharaSkinIncrement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "OnInputCharaSkinIncrement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBHUDBase.OnInputStandSkinDecrement
// (Event, Public, BlueprintEvent)

void AAJBHUDBase::OnInputStandSkinDecrement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "OnInputStandSkinDecrement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBHUDBase.OnInputStandSkinIncrement
// (Event, Public, BlueprintEvent)

void AAJBHUDBase::OnInputStandSkinIncrement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "OnInputStandSkinIncrement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBHUDBase.OnPressedButtonWidget
// (Native, Public)

void AAJBHUDBase::OnPressedButtonWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "OnPressedButtonWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHUDBase.OnReceivedClosedWindow
// (Native, Public)
// Parameters:
// class UAJBWindowWidget*                 TargetWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBHUDBase::OnReceivedClosedWindow(class UAJBWindowWidget* TargetWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "OnReceivedClosedWindow");

	Params::AJBHUDBase_OnReceivedClosedWindow Parms{};

	Parms.TargetWidget = TargetWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHUDBase.OnReceivedClosingWindow
// (Native, Public)
// Parameters:
// class UAJBWindowWidget*                 TargetWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBHUDBase::OnReceivedClosingWindow(class UAJBWindowWidget* TargetWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "OnReceivedClosingWindow");

	Params::AJBHUDBase_OnReceivedClosingWindow Parms{};

	Parms.TargetWidget = TargetWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHUDBase.OnReceivedOpenedWindow
// (Native, Public)
// Parameters:
// class UAJBWindowWidget*                 TargetWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBHUDBase::OnReceivedOpenedWindow(class UAJBWindowWidget* TargetWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "OnReceivedOpenedWindow");

	Params::AJBHUDBase_OnReceivedOpenedWindow Parms{};

	Parms.TargetWidget = TargetWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHUDBase.OnReceivedOpeningWindow
// (Native, Public)
// Parameters:
// class UAJBWindowWidget*                 TargetWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBHUDBase::OnReceivedOpeningWindow(class UAJBWindowWidget* TargetWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "OnReceivedOpeningWindow");

	Params::AJBHUDBase_OnReceivedOpeningWindow Parms{};

	Parms.TargetWidget = TargetWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHUDBase.OnReleasedButtonWidget
// (Native, Public)

void AAJBHUDBase::OnReleasedButtonWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "OnReleasedButtonWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHUDBase.OnStartFadeIn
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBHUDBase::OnStartFadeIn(float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "OnStartFadeIn");

	Params::AJBHUDBase_OnStartFadeIn Parms{};

	Parms.FadeTime = FadeTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBHUDBase.OnStartFadeOut
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBHUDBase::OnStartFadeOut(float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "OnStartFadeOut");

	Params::AJBHUDBase_OnStartFadeOut Parms{};

	Parms.FadeTime = FadeTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBHUDBase.RegisterInputActor
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBHUDBase::RegisterInputActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "RegisterInputActor");

	Params::AJBHUDBase_RegisterInputActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHUDBase.SetCreditWidgetInstance
// (Native, Public, BlueprintCallable)
// Parameters:
// class UAJBUserWidget*                   CreditWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBHUDBase::SetCreditWidgetInstance(class UAJBUserWidget* CreditWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "SetCreditWidgetInstance");

	Params::AJBHUDBase_SetCreditWidgetInstance Parms{};

	Parms.CreditWidget = CreditWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHUDBase.SetupForceInvisibleAllWidgetsFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBHUDBase::SetupForceInvisibleAllWidgetsFlag(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "SetupForceInvisibleAllWidgetsFlag");

	Params::AJBHUDBase_SetupForceInvisibleAllWidgetsFlag Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHUDBase.SetVisibilityTimeCountDown
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBHUDBase::SetVisibilityTimeCountDown(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "SetVisibilityTimeCountDown");

	Params::AJBHUDBase_SetVisibilityTimeCountDown Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBHUDBase.UnbindButtonsEventDynamic
// (Native, Public, BlueprintCallable)
// Parameters:
// class UAJBUserWidget*                   TargetWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBHUDBase::UnbindButtonsEventDynamic(class UAJBUserWidget* TargetWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "UnbindButtonsEventDynamic");

	Params::AJBHUDBase_UnbindButtonsEventDynamic Parms{};

	Parms.TargetWidget = TargetWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHUDBase.UnregisterInputActor
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBHUDBase::UnregisterInputActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "UnregisterInputActor");

	Params::AJBHUDBase_UnregisterInputActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHUDBase.UpdateTimeCountDown
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBHUDBase::UpdateTimeCountDown(float Time, float MaxTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHUDBase", "UpdateTimeCountDown");

	Params::AJBHUDBase_UpdateTimeCountDown Parms{};

	Parms.Time = Time;
	Parms.MaxTime = MaxTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBInGameHUD.CallInGameActivateDispatcher
// (Final, Native, Public, BlueprintCallable)

void AAJBInGameHUD::CallInGameActivateDispatcher()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameHUD", "CallInGameActivateDispatcher");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameHUD.CallInGameDeactivatedDispatcher
// (Final, Native, Public, BlueprintCallable)

void AAJBInGameHUD::CallInGameDeactivatedDispatcher()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameHUD", "CallInGameDeactivatedDispatcher");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameHUD.IsActivateInGameUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGameHUD::IsActivateInGameUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameHUD", "IsActivateInGameUI");

	Params::AJBInGameHUD_IsActivateInGameUI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameHUD.IsInitializedInGameUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGameHUD::IsInitializedInGameUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameHUD", "IsInitializedInGameUI");

	Params::AJBInGameHUD_IsInitializedInGameUI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameHUD.OnChangedViewTargetCharacter
// (Event, Public, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacterBase*          ViewCharacter                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameHUD::OnChangedViewTargetCharacter(class AAJBInGameCharacterBase* ViewCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameHUD", "OnChangedViewTargetCharacter");

	Params::AJBInGameHUD_OnChangedViewTargetCharacter Parms{};

	Parms.ViewCharacter = ViewCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBInGameHUD.OnToggleFullMapVisibility
// (Event, Public, BlueprintEvent)

void AAJBInGameHUD::OnToggleFullMapVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameHUD", "OnToggleFullMapVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameHUD.TryCreateSkillWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UAJBInGameSkillWidget>SkillWidgetClass                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBInGameSkillWidget*            ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBInGameSkillWidget* AAJBInGameHUD::TryCreateSkillWidget(const TSubclassOf<class UAJBInGameSkillWidget>& SkillWidgetClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameHUD", "TryCreateSkillWidget");

	Params::AJBInGameHUD_TryCreateSkillWidget Parms{};

	Parms.SkillWidgetClass = SkillWidgetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBBackGroundWidget.OnClosingOwnerWindow
// (Event, Public, BlueprintEvent)

void UAJBBackGroundWidget::OnClosingOwnerWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBBackGroundWidget", "OnClosingOwnerWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBBackGroundWidget.OnOpeningOwnerWindow
// (Event, Public, BlueprintEvent)

void UAJBBackGroundWidget::OnOpeningOwnerWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBBackGroundWidget", "OnOpeningOwnerWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameMovableStand.Activate
// (Final, Native, Public, BlueprintCallable)

void AAJBInGameMovableStand::Activate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovableStand", "Activate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameMovableStand.Inactivate
// (Final, Native, Public, BlueprintCallable)

void AAJBInGameMovableStand::Inactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovableStand", "Inactivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameMovableStand.OnRep_AppearanceTransition
// (Event, Public, BlueprintEvent)

void AAJBInGameMovableStand::OnRep_AppearanceTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovableStand", "OnRep_AppearanceTransition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameMovableStand.ROS_SetAppearanceTransition
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EStandAccompanyTransition               NextTransition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameMovableStand::ROS_SetAppearanceTransition(EStandAccompanyTransition NextTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovableStand", "ROS_SetAppearanceTransition");

	Params::AJBInGameMovableStand_ROS_SetAppearanceTransition Parms{};

	Parms.NextTransition = NextTransition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameMovableStand.SetAppearanceTransition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EStandAccompanyTransition               NextTransition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameMovableStand::SetAppearanceTransition(EStandAccompanyTransition NextTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovableStand", "SetAppearanceTransition");

	Params::AJBInGameMovableStand_SetAppearanceTransition Parms{};

	Parms.NextTransition = NextTransition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameMovableStand.SetAppearanceTransitionAll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EStandAccompanyTransition               NextTransition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameMovableStand::SetAppearanceTransitionAll(EStandAccompanyTransition NextTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovableStand", "SetAppearanceTransitionAll");

	Params::AJBInGameMovableStand_SetAppearanceTransitionAll Parms{};

	Parms.NextTransition = NextTransition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameMovableStand.IsAppearance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGameMovableStand::IsAppearance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovableStand", "IsAppearance");

	Params::AJBInGameMovableStand_IsAppearance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameMovableStand.IsBackwardTransition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGameMovableStand::IsBackwardTransition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovableStand", "IsBackwardTransition");

	Params::AJBInGameMovableStand_IsBackwardTransition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameMovableStand.IsForwardTransition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGameMovableStand::IsForwardTransition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovableStand", "IsForwardTransition");

	Params::AJBInGameMovableStand_IsForwardTransition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameMovableStand.IsNotAppearance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGameMovableStand::IsNotAppearance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovableStand", "IsNotAppearance");

	Params::AJBInGameMovableStand_IsNotAppearance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameMovableStand.IsTransition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGameMovableStand::IsTransition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovableStand", "IsTransition");

	Params::AJBInGameMovableStand_IsTransition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameGameMode.FinalizeOnlineBeacon
// (Final, Native, Public, BlueprintCallable)

void AAJBInGameGameMode::FinalizeOnlineBeacon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameGameMode", "FinalizeOnlineBeacon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameGameMode.InitializeOnlineBeacon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class AAJBOnlineBeaconClient>BeaconClientClass                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGameGameMode::InitializeOnlineBeacon(TSubclassOf<class AAJBOnlineBeaconClient> BeaconClientClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameGameMode", "InitializeOnlineBeacon");

	Params::AJBInGameGameMode_InitializeOnlineBeacon Parms{};

	Parms.BeaconClientClass = BeaconClientClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameGameMode.SetBlogLoingState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsBlock                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameGameMode::SetBlogLoingState(bool IsBlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameGameMode", "SetBlogLoingState");

	Params::AJBInGameGameMode_SetBlogLoingState Parms{};

	Parms.IsBlock = IsBlock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameMovementComponent.AddInput
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Vector                                                 (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsForce                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameMovementComponent::AddInput(const struct FVector& Vector, bool IsForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovementComponent", "AddInput");

	Params::AJBInGameMovementComponent_AddInput Parms{};

	Parms.Vector = std::move(Vector);
	Parms.IsForce = IsForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameMovementComponent.AddInputPitch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameMovementComponent::AddInputPitch(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovementComponent", "AddInputPitch");

	Params::AJBInGameMovementComponent_AddInputPitch Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameMovementComponent.AddInputYaw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameMovementComponent::AddInputYaw(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovementComponent", "AddInputYaw");

	Params::AJBInGameMovementComponent_AddInputYaw Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameMovementComponent.AddInputZ
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Vector                                                 (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsForce                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameMovementComponent::AddInputZ(const struct FVector& Vector, bool IsForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovementComponent", "AddInputZ");

	Params::AJBInGameMovementComponent_AddInputZ Parms{};

	Parms.Vector = std::move(Vector);
	Parms.IsForce = IsForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameMovementComponent.ResetInterpSceneComponent
// (Final, Native, Public, BlueprintCallable)

void UAJBInGameMovementComponent::ResetInterpSceneComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovementComponent", "ResetInterpSceneComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameMovementComponent.ROC_UpdateServerLocation
// (Final, Net, Native, Event, Private, HasDefaults, NetClient, NetValidate)
// Parameters:
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameMovementComponent::ROC_UpdateServerLocation(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovementComponent", "ROC_UpdateServerLocation");

	Params::AJBInGameMovementComponent_ROC_UpdateServerLocation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameMovementComponent.ROS_CheckServerLocation
// (Final, Net, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameMovementComponent::ROS_CheckServerLocation(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovementComponent", "ROS_CheckServerLocation");

	Params::AJBInGameMovementComponent_ROS_CheckServerLocation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameMovementComponent.ROS_SetLocation
// (Final, Net, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameMovementComponent::ROS_SetLocation(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovementComponent", "ROS_SetLocation");

	Params::AJBInGameMovementComponent_ROS_SetLocation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameMovementComponent.ROS_SetLocationReliable
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameMovementComponent::ROS_SetLocationReliable(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovementComponent", "ROS_SetLocationReliable");

	Params::AJBInGameMovementComponent_ROS_SetLocationReliable Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameMovementComponent.ROS_SetMoveSpeed
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                                   Speed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameMovementComponent::ROS_SetMoveSpeed(float Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovementComponent", "ROS_SetMoveSpeed");

	Params::AJBInGameMovementComponent_ROS_SetMoveSpeed Parms{};

	Parms.Speed = Speed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameMovementComponent.ROS_SetRotation
// (Final, Net, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FRotator                         Rotation                                               (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UAJBInGameMovementComponent::ROS_SetRotation(const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovementComponent", "ROS_SetRotation");

	Params::AJBInGameMovementComponent_ROS_SetRotation Parms{};

	Parms.Rotation = std::move(Rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameMovementComponent.ROS_SetVelocity
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                          Velocity                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameMovementComponent::ROS_SetVelocity(const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovementComponent", "ROS_SetVelocity");

	Params::AJBInGameMovementComponent_ROS_SetVelocity Parms{};

	Parms.Velocity = std::move(Velocity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameMovementComponent.SetInterpSceneComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  SceneComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameMovementComponent::SetInterpSceneComponent(class USceneComponent* SceneComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovementComponent", "SetInterpSceneComponent");

	Params::AJBInGameMovementComponent_SetInterpSceneComponent Parms{};

	Parms.SceneComponent = SceneComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameMovementComponent.SetLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameMovementComponent::SetLocation(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovementComponent", "SetLocation");

	Params::AJBInGameMovementComponent_SetLocation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameMovementComponent.SetLocationReliable
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameMovementComponent::SetLocationReliable(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovementComponent", "SetLocationReliable");

	Params::AJBInGameMovementComponent_SetLocationReliable Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameMovementComponent.SetMoveSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Speed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameMovementComponent::SetMoveSpeed(float Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovementComponent", "SetMoveSpeed");

	Params::AJBInGameMovementComponent_SetMoveSpeed Parms{};

	Parms.Speed = Speed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameMovementComponent.SetRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         Rotation                                               (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UAJBInGameMovementComponent::SetRotation(const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameMovementComponent", "SetRotation");

	Params::AJBInGameMovementComponent_SetRotation Parms{};

	Parms.Rotation = std::move(Rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameGameState.GetElapsedInGameTimespan
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan AAJBInGameGameState::GetElapsedInGameTimespan()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameGameState", "GetElapsedInGameTimespan");

	Params::AJBInGameGameState_GetElapsedInGameTimespan Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameGameState.GetLoadingLevelCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AAJBInGameGameState::GetLoadingLevelCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameGameState", "GetLoadingLevelCount");

	Params::AJBInGameGameState_GetLoadingLevelCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameGameState.IsLoadedStageLevels
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGameGameState::IsLoadedStageLevels()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameGameState", "IsLoadedStageLevels");

	Params::AJBInGameGameState_IsLoadedStageLevels Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameGameState.SetLoadingLevelCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameGameState::SetLoadingLevelCount(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameGameState", "SetLoadingLevelCount");

	Params::AJBInGameGameState_SetLoadingLevelCount Parms{};

	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBBattleGameState.StartRecordingReplay
// (Native, Public, BlueprintCallable)

void AAJBBattleGameState::StartRecordingReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBBattleGameState", "StartRecordingReplay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBBTNodeFunctionLibrary.HasObjectValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBTNode*                          NodeOwner                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBlackboardKeySelector           Key                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBBTNodeFunctionLibrary::HasObjectValue(class UBTNode* NodeOwner, const struct FBlackboardKeySelector& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBBTNodeFunctionLibrary", "HasObjectValue");

	Params::AJBBTNodeFunctionLibrary_HasObjectValue Parms{};

	Parms.NodeOwner = NodeOwner;
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBBTNodeFunctionLibrary.IsValidVectorValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBTNode*                          NodeOwner                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBlackboardKeySelector           Key                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBBTNodeFunctionLibrary::IsValidVectorValue(class UBTNode* NodeOwner, const struct FBlackboardKeySelector& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBBTNodeFunctionLibrary", "IsValidVectorValue");

	Params::AJBBTNodeFunctionLibrary_IsValidVectorValue Parms{};

	Parms.NodeOwner = NodeOwner;
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBButton.IsPressableButton
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBButton::IsPressableButton() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBButton", "IsPressableButton");

	Params::AJBButton_IsPressableButton Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUserWidget.ResetAnimation
// (BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 InAnimation                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartAtTime                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUMGSequencePlayMode                    PlayMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBUserWidget::ResetAnimation(class UWidgetAnimation* InAnimation, const float StartAtTime, EUMGSequencePlayMode PlayMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBUserWidget", "ResetAnimation");

	Params::AJBUserWidget_ResetAnimation Parms{};

	Parms.InAnimation = InAnimation;
	Parms.StartAtTime = StartAtTime;
	Parms.PlayMode = PlayMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBButtonWidget.CallDecidedButtonEvent
// (Native, Public, BlueprintCallable)

void UAJBButtonWidget::CallDecidedButtonEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBButtonWidget", "CallDecidedButtonEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBButtonWidget.CurveAnimationFinishDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UWidget*                          AnimWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimSequence                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBButtonWidget::CurveAnimationFinishDelegate(TDelegate<void()> Delegate, class UWidget* AnimWidget, int32 AnimSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBButtonWidget", "CurveAnimationFinishDelegate");

	Params::AJBButtonWidget_CurveAnimationFinishDelegate Parms{};

	Parms.Delegate = Delegate;
	Parms.AnimWidget = AnimWidget;
	Parms.AnimSequence = AnimSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBButtonWidget.GetButton
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAJBButton*                       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBButton* UAJBButtonWidget::GetButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBButtonWidget", "GetButton");

	Params::AJBButtonWidget_GetButton Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBButtonWidget.GetTextBlock
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAJBTextBlock*                    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBTextBlock* UAJBButtonWidget::GetTextBlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBButtonWidget", "GetTextBlock");

	Params::AJBButtonWidget_GetTextBlock Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBButtonWidget.IsButtonPressed
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBButtonWidget::IsButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBButtonWidget", "IsButtonPressed");

	Params::AJBButtonWidget_IsButtonPressed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBButtonWidget.IsPlayingCurveAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWidget*                          AnimWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimSequence                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBButtonWidget::IsPlayingCurveAnimation(class UWidget* AnimWidget, int32 AnimSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBButtonWidget", "IsPlayingCurveAnimation");

	Params::AJBButtonWidget_IsPlayingCurveAnimation Parms{};

	Parms.AnimWidget = AnimWidget;
	Parms.AnimSequence = AnimSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBButtonWidget.OnButtonPressed
// (Native, Public)

void UAJBButtonWidget::OnButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBButtonWidget", "OnButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBButtonWidget.OnButtonPressedAnimation
// (Event, Public, BlueprintEvent)

void UAJBButtonWidget::OnButtonPressedAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBButtonWidget", "OnButtonPressedAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBButtonWidget.OnButtonReleased
// (Native, Public)

void UAJBButtonWidget::OnButtonReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBButtonWidget", "OnButtonReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBButtonWidget.OnButtonReleasedAnimation
// (Event, Public, BlueprintEvent)

void UAJBButtonWidget::OnButtonReleasedAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBButtonWidget", "OnButtonReleasedAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBButtonWidget.OnResetButtonWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UAJBButtonWidget::OnResetButtonWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBButtonWidget", "OnResetButtonWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBButtonWidget.PlayCurveAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          AnimWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimSequence                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayingCheck                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUMGSequencePlayMode                    PlayMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoopToPlay                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBButtonWidget::PlayCurveAnimation(class UWidget* AnimWidget, int32 AnimSequence, bool bPlayingCheck, EUMGSequencePlayMode PlayMode, int32 NumLoopToPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBButtonWidget", "PlayCurveAnimation");

	Params::AJBButtonWidget_PlayCurveAnimation Parms{};

	Parms.AnimWidget = AnimWidget;
	Parms.AnimSequence = AnimSequence;
	Parms.bPlayingCheck = bPlayingCheck;
	Parms.PlayMode = PlayMode;
	Parms.NumLoopToPlay = NumLoopToPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBButtonWidget.RegisterCurve_Angle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          AnimWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      Curve                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimSequence                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBButtonWidget::RegisterCurve_Angle(class UWidget* AnimWidget, class UCurveFloat* Curve, int32 AnimSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBButtonWidget", "RegisterCurve_Angle");

	Params::AJBButtonWidget_RegisterCurve_Angle Parms{};

	Parms.AnimWidget = AnimWidget;
	Parms.Curve = Curve;
	Parms.AnimSequence = AnimSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBButtonWidget.RegisterCurve_Scale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          AnimWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveBase*                       Curve                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimSequence                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBButtonWidget::RegisterCurve_Scale(class UWidget* AnimWidget, class UCurveBase* Curve, int32 AnimSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBButtonWidget", "RegisterCurve_Scale");

	Params::AJBButtonWidget_RegisterCurve_Scale Parms{};

	Parms.AnimWidget = AnimWidget;
	Parms.Curve = Curve;
	Parms.AnimSequence = AnimSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBButtonWidget.RegisterCurve_Trans
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          AnimWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveVector*                     CurveVector                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimSequence                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBButtonWidget::RegisterCurve_Trans(class UWidget* AnimWidget, class UCurveVector* CurveVector, int32 AnimSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBButtonWidget", "RegisterCurve_Trans");

	Params::AJBButtonWidget_RegisterCurve_Trans Parms{};

	Parms.AnimWidget = AnimWidget;
	Parms.CurveVector = CurveVector;
	Parms.AnimSequence = AnimSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBButtonWidget.RegisterCurve_TransX
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          AnimWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      Curve                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimSequence                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBButtonWidget::RegisterCurve_TransX(class UWidget* AnimWidget, class UCurveFloat* Curve, int32 AnimSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBButtonWidget", "RegisterCurve_TransX");

	Params::AJBButtonWidget_RegisterCurve_TransX Parms{};

	Parms.AnimWidget = AnimWidget;
	Parms.Curve = Curve;
	Parms.AnimSequence = AnimSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBButtonWidget.RegisterCurve_TransY
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          AnimWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      Curve                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimSequence                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBButtonWidget::RegisterCurve_TransY(class UWidget* AnimWidget, class UCurveFloat* Curve, int32 AnimSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBButtonWidget", "RegisterCurve_TransY");

	Params::AJBButtonWidget_RegisterCurve_TransY Parms{};

	Parms.AnimWidget = AnimWidget;
	Parms.Curve = Curve;
	Parms.AnimSequence = AnimSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBButtonWidget.StopCurveAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          AnimWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimSequence                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBButtonWidget::StopCurveAnimation(class UWidget* AnimWidget, int32 AnimSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBButtonWidget", "StopCurveAnimation");

	Params::AJBButtonWidget_StopCurveAnimation Parms{};

	Parms.AnimWidget = AnimWidget;
	Parms.AnimSequence = AnimSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBButtonWidget.UpdateButtonText
// (Native, Public, BlueprintCallable)
// Parameters:
// class FText                             NewText                                                (Parm, NativeAccessSpecifierPublic)

void UAJBButtonWidget::UpdateButtonText(const class FText& NewText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBButtonWidget", "UpdateButtonText");

	Params::AJBButtonWidget_UpdateButtonText Parms{};

	Parms.NewText = std::move(NewText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBCharaSelectMannequin.IsFinishedMannequinTextureStreaming
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBCharaSelectMannequin::IsFinishedMannequinTextureStreaming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBCharaSelectMannequin", "IsFinishedMannequinTextureStreaming");

	Params::AJBCharaSelectMannequin_IsFinishedMannequinTextureStreaming Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBCheatManager.CallActorProcessEvent
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TagName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBCheatManager::CallActorProcessEvent(class FName EventName, class FName TagName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBCheatManager", "CallActorProcessEvent");

	Params::AJBCheatManager_CallActorProcessEvent Parms{};

	Parms.EventName = EventName;
	Parms.TagName = TagName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBCheatManager.DebugGameSpeedDown
// (Final, Exec, Native, Public)

void UAJBCheatManager::DebugGameSpeedDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBCheatManager", "DebugGameSpeedDown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBCheatManager.DebugGameSpeedUp
// (Final, Exec, Native, Public)

void UAJBCheatManager::DebugGameSpeedUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBCheatManager", "DebugGameSpeedUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBCheckRewardLottery.CheckRewardLottery
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBCheckRewardLottery*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBCheckRewardLottery* UAJBCheckRewardLottery::CheckRewardLottery(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBCheckRewardLottery", "CheckRewardLottery");

	Params::AJBCheckRewardLottery_CheckRewardLottery Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBCheckRewardLottery.RemoveRewardLottery
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBCheckRewardLottery::RemoveRewardLottery(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBCheckRewardLottery", "RemoveRewardLottery");

	Params::AJBCheckRewardLottery_RemoveRewardLottery Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction AJB.AJBCheckRewardLottery.AJBResponse__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    bIsSuccess                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAJBGachaID                      GachaID                                                (Parm, NativeAccessSpecifierPublic)

void UAJBCheckRewardLottery::AJBResponse__DelegateSignature(bool bIsSuccess, const struct FAJBGachaID& GachaID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBCheckRewardLottery", "AJBResponse__DelegateSignature");

	Params::AJBCheckRewardLottery_AJBResponse__DelegateSignature Parms{};

	Parms.bIsSuccess = bIsSuccess;
	Parms.GachaID = std::move(GachaID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBDataTableFunctionLibrary.GetDataTableRow_WwiseVoiceEventInfo
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// class UDataTable*                       DataTable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             RowName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWwiseVoiceEventInfo             OutRow                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBDataTableFunctionLibrary::GetDataTableRow_WwiseVoiceEventInfo(class UDataTable* DataTable, class FName RowName, struct FWwiseVoiceEventInfo* OutRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBDataTableFunctionLibrary", "GetDataTableRow_WwiseVoiceEventInfo");

	Params::AJBDataTableFunctionLibrary_GetDataTableRow_WwiseVoiceEventInfo Parms{};

	Parms.DataTable = DataTable;
	Parms.RowName = RowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRow != nullptr)
		*OutRow = std::move(Parms.OutRow);

	return Parms.ReturnValue;
}


// Function AJB.AJBPlayerControllerBase.AssignKeyFromDataTable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataTable*                       DataTable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBPlayerControllerBase::AssignKeyFromDataTable(class UDataTable* DataTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBPlayerControllerBase", "AssignKeyFromDataTable");

	Params::AJBPlayerControllerBase_AssignKeyFromDataTable Parms{};

	Parms.DataTable = DataTable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBPlayerControllerBase.ChangeInputMode
// (Native, Public, BlueprintCallable)
// Parameters:
// EAJBInputMode                           NewMode                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBPlayerControllerBase::ChangeInputMode(EAJBInputMode NewMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBPlayerControllerBase", "ChangeInputMode");

	Params::AJBPlayerControllerBase_ChangeInputMode Parms{};

	Parms.NewMode = NewMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBPlayerControllerBase.ClientStopKillcam
// (Net, NetReliable, Native, Event, Public, NetClient)

void AAJBPlayerControllerBase::ClientStopKillcam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBPlayerControllerBase", "ClientStopKillcam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBPlayerControllerBase.GetGamePlayKeyFromActionName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ActionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey AAJBPlayerControllerBase::GetGamePlayKeyFromActionName(class FName ActionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBPlayerControllerBase", "GetGamePlayKeyFromActionName");

	Params::AJBPlayerControllerBase_GetGamePlayKeyFromActionName Parms{};

	Parms.ActionName = ActionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBPlayerControllerBase.IsDisabledInputMode
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBPlayerControllerBase::IsDisabledInputMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBPlayerControllerBase", "IsDisabledInputMode");

	Params::AJBPlayerControllerBase_IsDisabledInputMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBPlayerControllerBase.IsInputModeInGameOnly
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBPlayerControllerBase::IsInputModeInGameOnly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBPlayerControllerBase", "IsInputModeInGameOnly");

	Params::AJBPlayerControllerBase_IsInputModeInGameOnly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBPlayerControllerBase.IsInputModeUIOnly
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBPlayerControllerBase::IsInputModeUIOnly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBPlayerControllerBase", "IsInputModeUIOnly");

	Params::AJBPlayerControllerBase_IsInputModeUIOnly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBPlayerControllerBase.OnSetupInputComponentBP
// (Event, Public, BlueprintEvent)

void AAJBPlayerControllerBase::OnSetupInputComponentBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBPlayerControllerBase", "OnSetupInputComponentBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBPlayerControllerBase.Reliable_RunOnServerMemreport
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AAJBPlayerControllerBase::Reliable_RunOnServerMemreport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBPlayerControllerBase", "Reliable_RunOnServerMemreport");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBPlayerControllerBase.Reliable_RunOnServerStartCPUProfile
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AAJBPlayerControllerBase::Reliable_RunOnServerStartCPUProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBPlayerControllerBase", "Reliable_RunOnServerStartCPUProfile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBPlayerControllerBase.Reliable_RunOnServerStartNetprofile
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AAJBPlayerControllerBase::Reliable_RunOnServerStartNetprofile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBPlayerControllerBase", "Reliable_RunOnServerStartNetprofile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBPlayerControllerBase.Reliable_RunOnServerStopCPUProfile
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AAJBPlayerControllerBase::Reliable_RunOnServerStopCPUProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBPlayerControllerBase", "Reliable_RunOnServerStopCPUProfile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBPlayerControllerBase.Reliable_RunOnServerStopNetprofile
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AAJBPlayerControllerBase::Reliable_RunOnServerStopNetprofile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBPlayerControllerBase", "Reliable_RunOnServerStopNetprofile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBPlayerControllerBase.RunOnServerCmd
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                           Cmd                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBPlayerControllerBase::RunOnServerCmd(const class FString& Cmd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBPlayerControllerBase", "RunOnServerCmd");

	Params::AJBPlayerControllerBase_RunOnServerCmd Parms{};

	Parms.Cmd = std::move(Cmd);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBPlayerControllerBase.RunOnServerMemreport
// (Final, Exec, Native, Public)

void AAJBPlayerControllerBase::RunOnServerMemreport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBPlayerControllerBase", "RunOnServerMemreport");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBPlayerControllerBase.RunOnServerStartCPUProfile
// (Final, Exec, Native, Public)

void AAJBPlayerControllerBase::RunOnServerStartCPUProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBPlayerControllerBase", "RunOnServerStartCPUProfile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBPlayerControllerBase.RunOnServerStartNetprofile
// (Final, Exec, Native, Public)

void AAJBPlayerControllerBase::RunOnServerStartNetprofile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBPlayerControllerBase", "RunOnServerStartNetprofile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBPlayerControllerBase.RunOnServerStopCPUProfile
// (Final, Exec, Native, Public)

void AAJBPlayerControllerBase::RunOnServerStopCPUProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBPlayerControllerBase", "RunOnServerStopCPUProfile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBPlayerControllerBase.RunOnServerStopNetprofile
// (Final, Exec, Native, Public)

void AAJBPlayerControllerBase::RunOnServerStopNetprofile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBPlayerControllerBase", "RunOnServerStopNetprofile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBPlayerControllerBase.ServerCmd
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           Cmd                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBPlayerControllerBase::ServerCmd(const class FString& Cmd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBPlayerControllerBase", "ServerCmd");

	Params::AJBPlayerControllerBase_ServerCmd Parms{};

	Parms.Cmd = std::move(Cmd);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGamePlayerController.CallReadyControllCharacterDispatcher
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AAJBInGameCharacterBase*          TargetCharacter                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGamePlayerController::CallReadyControllCharacterDispatcher(class AAJBInGameCharacterBase* TargetCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGamePlayerController", "CallReadyControllCharacterDispatcher");

	Params::AJBInGamePlayerController_CallReadyControllCharacterDispatcher Parms{};

	Parms.TargetCharacter = TargetCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGamePlayerController.DevOnly_GetL3Pressed
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGamePlayerController::DevOnly_GetL3Pressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGamePlayerController", "DevOnly_GetL3Pressed");

	Params::AJBInGamePlayerController_DevOnly_GetL3Pressed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGamePlayerController.DevOnly_GetLookupRateInputvalue
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AAJBInGamePlayerController::DevOnly_GetLookupRateInputvalue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGamePlayerController", "DevOnly_GetLookupRateInputvalue");

	Params::AJBInGamePlayerController_DevOnly_GetLookupRateInputvalue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGamePlayerController.DevOnly_GetMoveForwardInputvalue
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AAJBInGamePlayerController::DevOnly_GetMoveForwardInputvalue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGamePlayerController", "DevOnly_GetMoveForwardInputvalue");

	Params::AJBInGamePlayerController_DevOnly_GetMoveForwardInputvalue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGamePlayerController.DevOnly_GetMoveRightInputvalue
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AAJBInGamePlayerController::DevOnly_GetMoveRightInputvalue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGamePlayerController", "DevOnly_GetMoveRightInputvalue");

	Params::AJBInGamePlayerController_DevOnly_GetMoveRightInputvalue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGamePlayerController.DevOnly_GetR3Pressed
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGamePlayerController::DevOnly_GetR3Pressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGamePlayerController", "DevOnly_GetR3Pressed");

	Params::AJBInGamePlayerController_DevOnly_GetR3Pressed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGamePlayerController.DevOnly_GetTurnRateInputvalue
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AAJBInGamePlayerController::DevOnly_GetTurnRateInputvalue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGamePlayerController", "DevOnly_GetTurnRateInputvalue");

	Params::AJBInGamePlayerController_DevOnly_GetTurnRateInputvalue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGamePlayerController.GetCameraManagerViewPoint
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGamePlayerController::GetCameraManagerViewPoint(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGamePlayerController", "GetCameraManagerViewPoint");

	Params::AJBInGamePlayerController_GetCameraManagerViewPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function AJB.AJBInGamePlayerController.OnDebugChangeQuality
// (Event, Protected, BlueprintEvent)

void AAJBInGamePlayerController::OnDebugChangeQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGamePlayerController", "OnDebugChangeQuality");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGamePlayerController.OnDebugSuicide
// (Event, Protected, BlueprintEvent)

void AAJBInGamePlayerController::OnDebugSuicide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGamePlayerController", "OnDebugSuicide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGamePlayerController.OnPawnLeavingGameBP
// (Event, Protected, BlueprintEvent)

void AAJBInGamePlayerController::OnPawnLeavingGameBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGamePlayerController", "OnPawnLeavingGameBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGamePlayerController.SetAutoManageActiveCameraTarget
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGamePlayerController::SetAutoManageActiveCameraTarget(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGamePlayerController", "SetAutoManageActiveCameraTarget");

	Params::AJBInGamePlayerController_SetAutoManageActiveCameraTarget Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGamePlayerController.SetCameraManagerClientSideCameraUpdate
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGamePlayerController::SetCameraManagerClientSideCameraUpdate(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGamePlayerController", "SetCameraManagerClientSideCameraUpdate");

	Params::AJBInGamePlayerController_SetCameraManagerClientSideCameraUpdate Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGamePlayerController.GetAutoManageActiveCameraTarget
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGamePlayerController::GetAutoManageActiveCameraTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGamePlayerController", "GetAutoManageActiveCameraTarget");

	Params::AJBInGamePlayerController_GetAutoManageActiveCameraTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBDemoRecSpectator.DemoNotifyCausedHit
// (Net, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// class APawn*                            InstigatorPawn                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AAJBInGameCharacter*              HitPawn                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   AppliedDamage                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Momentum                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDamageEvent                     DamageEvent                                            (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bArmorDamage                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverhealth                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBDemoRecSpectator::DemoNotifyCausedHit(class APawn* InstigatorPawn, class AAJBInGameCharacter* HitPawn, uint8 AppliedDamage, const struct FVector& Momentum, const struct FDamageEvent& DamageEvent, bool bArmorDamage, bool bOverhealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBDemoRecSpectator", "DemoNotifyCausedHit");

	Params::AJBDemoRecSpectator_DemoNotifyCausedHit Parms{};

	Parms.InstigatorPawn = InstigatorPawn;
	Parms.HitPawn = HitPawn;
	Parms.AppliedDamage = AppliedDamage;
	Parms.Momentum = std::move(Momentum);
	Parms.DamageEvent = std::move(DamageEvent);
	Parms.bArmorDamage = bArmorDamage;
	Parms.bOverhealth = bOverhealth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBDemoRecSpectator.DumpSpecInfo
// (Final, Exec, Native, Public)

void AAJBDemoRecSpectator::DumpSpecInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBDemoRecSpectator", "DumpSpecInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBDemoRecSpectator.MulticastReceiveLocalizedMessage
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// TSubclassOf<class ULocalMessage>        Message                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SWITCH                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*                     RelatedPlayerState_1                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*                     RelatedPlayerState_2                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          OptionalObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBDemoRecSpectator::MulticastReceiveLocalizedMessage(TSubclassOf<class ULocalMessage> Message, int32 SWITCH, class APlayerState* RelatedPlayerState_1, class APlayerState* RelatedPlayerState_2, class UObject* OptionalObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBDemoRecSpectator", "MulticastReceiveLocalizedMessage");

	Params::AJBDemoRecSpectator_MulticastReceiveLocalizedMessage Parms{};

	Parms.Message = Message;
	Parms.SWITCH = SWITCH;
	Parms.RelatedPlayerState_1 = RelatedPlayerState_1;
	Parms.RelatedPlayerState_2 = RelatedPlayerState_2;
	Parms.OptionalObject = OptionalObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBDemoRecSpectator.ToggleReplayWindow
// (Final, Exec, Native, Public)

void AAJBDemoRecSpectator::ToggleReplayWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBDemoRecSpectator", "ToggleReplayWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBError.GetErrorEnglish
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EAJBErrorID                             ErrorID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UAJBError::GetErrorEnglish(EAJBErrorID ErrorID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBError", "GetErrorEnglish");

	Params::AJBError_GetErrorEnglish Parms{};

	Parms.ErrorID = ErrorID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBError.GetErrorNo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EAJBErrorID                             ErrorID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UAJBError::GetErrorNo(EAJBErrorID ErrorID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBError", "GetErrorNo");

	Params::AJBError_GetErrorNo Parms{};

	Parms.ErrorID = ErrorID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBError.GetErrorText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EAJBErrorID                             ErrorID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UAJBError::GetErrorText(EAJBErrorID ErrorID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBError", "GetErrorText");

	Params::AJBError_GetErrorText Parms{};

	Parms.ErrorID = ErrorID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBError.GetNetAPIErrorText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EAJBNetAPIResult                        ErrorID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UAJBError::GetNetAPIErrorText(EAJBNetAPIResult ErrorID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBError", "GetNetAPIErrorText");

	Params::AJBError_GetNetAPIErrorText Parms{};

	Parms.ErrorID = ErrorID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBErrorHandler.PrintAllPropertyValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Obj                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBErrorHandler::PrintAllPropertyValue(class UObject* Obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBErrorHandler", "PrintAllPropertyValue");

	Params::AJBErrorHandler_PrintAllPropertyValue Parms{};

	Parms.Obj = Obj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBErrorHandler.PrintLogActiveBlueprintCallstack
// (Final, Native, Static, Public, BlueprintCallable)

void UAJBErrorHandler::PrintLogActiveBlueprintCallstack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBErrorHandler", "PrintLogActiveBlueprintCallstack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.AddCoinCredit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   AddCredit                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsSaveLastStatus                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::AddCoinCredit(int32 AddCredit, bool IsSaveLastStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "AddCoinCredit");

	Params::AJBGameInstance_AddCoinCredit Parms{};

	Parms.AddCredit = AddCredit;
	Parms.IsSaveLastStatus = IsSaveLastStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.AddEmoneyCredit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   AddCredit                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsSaveLastStatus                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::AddEmoneyCredit(int32 AddCredit, bool IsSaveLastStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "AddEmoneyCredit");

	Params::AJBGameInstance_AddEmoneyCredit Parms{};

	Parms.AddCredit = AddCredit;
	Parms.IsSaveLastStatus = IsSaveLastStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.AddPP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PayCreditNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AddPPNum                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::AddPP(int32 PayCreditNum, int32 AddPPNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "AddPP");

	Params::AJBGameInstance_AddPP Parms{};

	Parms.PayCreditNum = PayCreditNum;
	Parms.AddPPNum = AddPPNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.AddServiceCredit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   AddCredit                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsSaveLastStatus                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::AddServiceCredit(int32 AddCredit, bool IsSaveLastStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "AddServiceCredit");

	Params::AJBGameInstance_AddServiceCredit Parms{};

	Parms.AddCredit = AddCredit;
	Parms.IsSaveLastStatus = IsSaveLastStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.BP_PlayHighlight
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::BP_PlayHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "BP_PlayHighlight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.BP_StartRecordingReplay
// (Native, Public, BlueprintCallable)

void UAJBGameInstance::BP_StartRecordingReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "BP_StartRecordingReplay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.BP_StopRecordingReplay
// (Native, Public, BlueprintCallable)

void UAJBGameInstance::BP_StopRecordingReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "BP_StopRecordingReplay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.CallSaved
// (Final, Native, Public, HasOutParams)
// Parameters:
// int32                                   Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::CallSaved(int32 Result, const TArray<uint8>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "CallSaved");

	Params::AJBGameInstance_CallSaved Parms{};

	Parms.Result = Result;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.CanBuyAddPP
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::CanBuyAddPP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "CanBuyAddPP");

	Params::AJBGameInstance_CanBuyAddPP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.CanPayCredit
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Credit                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::CanPayCredit(int32 Credit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "CanPayCredit");

	Params::AJBGameInstance_CanPayCredit Parms{};

	Parms.Credit = Credit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.CanUploadHighlight
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::CanUploadHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "CanUploadHighlight");

	Params::AJBGameInstance_CanUploadHighlight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.ClearMatchingID
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::ClearMatchingID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "ClearMatchingID");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.ClearPairRoomInfo
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::ClearPairRoomInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "ClearPairRoomInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.ClearPlayerLoginInfo
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::ClearPlayerLoginInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "ClearPlayerLoginInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.CompensationCredit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::CompensationCredit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "CompensationCredit");

	Params::AJBGameInstance_CompensationCredit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.CompensationPP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::CompensationPP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "CompensationPP");

	Params::AJBGameInstance_CompensationPP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.DumpAllPlayersCustomData
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::DumpAllPlayersCustomData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "DumpAllPlayersCustomData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.FinalizeHighlight
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::FinalizeHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "FinalizeHighlight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.FixConsumePP
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::FixConsumePP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "FixConsumePP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.GetAJBInGameCharacterByPlayerID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AAJBInGameCharacterBase*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAJBInGameCharacterBase* UAJBGameInstance::GetAJBInGameCharacterByPlayerID(int32 PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetAJBInGameCharacterByPlayerID");

	Params::AJBGameInstance_GetAJBInGameCharacterByPlayerID Parms{};

	Parms.PlayerID = PlayerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetBuyPPByPayCreditNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PayCredit_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBGameInstance::GetBuyPPByPayCreditNum(int32 PayCredit_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetBuyPPByPayCreditNum");

	Params::AJBGameInstance_GetBuyPPByPayCreditNum Parms{};

	Parms.PayCredit_0 = PayCredit_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetCharacterSkinId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   CharaID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBGameInstance::GetCharacterSkinId(int32 CharaID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetCharacterSkinId");

	Params::AJBGameInstance_GetCharacterSkinId Parms{};

	Parms.CharaID = CharaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetCloseScheduleType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECloseScheduleType                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECloseScheduleType UAJBGameInstance::GetCloseScheduleType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetCloseScheduleType");

	Params::AJBGameInstance_GetCloseScheduleType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetCloseTimeSetting
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EAJBDayOfWeek                           WeekIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCloseTimeInfo                   ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FCloseTimeInfo UAJBGameInstance::GetCloseTimeSetting(EAJBDayOfWeek WeekIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetCloseTimeSetting");

	Params::AJBGameInstance_GetCloseTimeSetting Parms{};

	Parms.WeekIndex = WeekIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetCreaditNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBGameInstance::GetCreaditNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetCreaditNum");

	Params::AJBGameInstance_GetCreaditNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetCreditNumPurchaseLimitPP
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBGameInstance::GetCreditNumPurchaseLimitPP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetCreditNumPurchaseLimitPP");

	Params::AJBGameInstance_GetCreditNumPurchaseLimitPP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetDefaultOutputLevelIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBGameInstance::GetDefaultOutputLevelIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetDefaultOutputLevelIndex");

	Params::AJBGameInstance_GetDefaultOutputLevelIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetDefaultSoundVolumeValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBGameInstance::GetDefaultSoundVolumeValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetDefaultSoundVolumeValue");

	Params::AJBGameInstance_GetDefaultSoundVolumeValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetEveryDayCloseTimeSetting
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCloseTimeInfo                   ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FCloseTimeInfo UAJBGameInstance::GetEveryDayCloseTimeSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetEveryDayCloseTimeSetting");

	Params::AJBGameInstance_GetEveryDayCloseTimeSetting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetExtraPPByPayCreditNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PayCredit_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBGameInstance::GetExtraPPByPayCreditNum(int32 PayCredit_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetExtraPPByPayCreditNum");

	Params::AJBGameInstance_GetExtraPPByPayCreditNum Parms{};

	Parms.PayCredit_0 = PayCredit_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetExtraPPKind
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EExtraPPKind                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EExtraPPKind UAJBGameInstance::GetExtraPPKind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetExtraPPKind");

	Params::AJBGameInstance_GetExtraPPKind Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetFocusActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UAJBGameInstance::GetFocusActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetFocusActor");

	Params::AJBGameInstance_GetFocusActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetFocusActorID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBGameInstance::GetFocusActorID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetFocusActorID");

	Params::AJBGameInstance_GetFocusActorID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetFocusStand
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UAJBGameInstance::GetFocusStand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetFocusStand");

	Params::AJBGameInstance_GetFocusStand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetFocusStandID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBGameInstance::GetFocusStandID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetFocusStandID");

	Params::AJBGameInstance_GetFocusStandID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetGachaDetails
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    OutNeedUpdate                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAJBGachaDetail                  OutLuckyDrawDetail                                     (Parm, OutParm, NativeAccessSpecifierPublic)
// struct FAJBGachaDetail                  OutPremiumDrawDetail                                   (Parm, OutParm, NativeAccessSpecifierPublic)

void UAJBGameInstance::GetGachaDetails(bool* OutNeedUpdate, struct FAJBGachaDetail* OutLuckyDrawDetail, struct FAJBGachaDetail* OutPremiumDrawDetail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetGachaDetails");

	Params::AJBGameInstance_GetGachaDetails Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutNeedUpdate != nullptr)
		*OutNeedUpdate = Parms.OutNeedUpdate;

	if (OutLuckyDrawDetail != nullptr)
		*OutLuckyDrawDetail = std::move(Parms.OutLuckyDrawDetail);

	if (OutPremiumDrawDetail != nullptr)
		*OutPremiumDrawDetail = std::move(Parms.OutPremiumDrawDetail);
}


// Function AJB.AJBGameInstance.GetGameServerURL
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBGameInstance::GetGameServerURL()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetGameServerURL");

	Params::AJBGameInstance_GetGameServerURL Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetHighlightManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAJBHighlightManager*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBHighlightManager* UAJBGameInstance::GetHighlightManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetHighlightManager");

	Params::AJBGameInstance_GetHighlightManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetHighlightUploadRemainingNum
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBGameInstance::GetHighlightUploadRemainingNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetHighlightUploadRemainingNum");

	Params::AJBGameInstance_GetHighlightUploadRemainingNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetMaxHighlightUploadNum
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBGameInstance::GetMaxHighlightUploadNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetMaxHighlightUploadNum");

	Params::AJBGameInstance_GetMaxHighlightUploadNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetMaxOutputLevelIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBGameInstance::GetMaxOutputLevelIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetMaxOutputLevelIndex");

	Params::AJBGameInstance_GetMaxOutputLevelIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetMaxSoundVolumeValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBGameInstance::GetMaxSoundVolumeValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetMaxSoundVolumeValue");

	Params::AJBGameInstance_GetMaxSoundVolumeValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetMinOutputLevelIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBGameInstance::GetMinOutputLevelIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetMinOutputLevelIndex");

	Params::AJBGameInstance_GetMinOutputLevelIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetMinSoundVolumeValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBGameInstance::GetMinSoundVolumeValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetMinSoundVolumeValue");

	Params::AJBGameInstance_GetMinSoundVolumeValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetNationalMatchSchedule
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    OutCanPlaySoloMode                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OutCanPlayPairMode                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAJBMatchSchedule                OutMatchSchedule                                       (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FAJBMatchScheduleDateTime        OutSoloScheduleDateTime                                (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FAJBMatchScheduleDateTime        OutPairScheduleDateTime                                (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UAJBGameInstance::GetNationalMatchSchedule(bool* OutCanPlaySoloMode, bool* OutCanPlayPairMode, struct FAJBMatchSchedule* OutMatchSchedule, struct FAJBMatchScheduleDateTime* OutSoloScheduleDateTime, struct FAJBMatchScheduleDateTime* OutPairScheduleDateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetNationalMatchSchedule");

	Params::AJBGameInstance_GetNationalMatchSchedule Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCanPlaySoloMode != nullptr)
		*OutCanPlaySoloMode = Parms.OutCanPlaySoloMode;

	if (OutCanPlayPairMode != nullptr)
		*OutCanPlayPairMode = Parms.OutCanPlayPairMode;

	if (OutMatchSchedule != nullptr)
		*OutMatchSchedule = std::move(Parms.OutMatchSchedule);

	if (OutSoloScheduleDateTime != nullptr)
		*OutSoloScheduleDateTime = std::move(Parms.OutSoloScheduleDateTime);

	if (OutPairScheduleDateTime != nullptr)
		*OutPairScheduleDateTime = std::move(Parms.OutPairScheduleDateTime);
}


// Function AJB.AJBGameInstance.GetOutputLevelIndexHeadphone
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBGameInstance::GetOutputLevelIndexHeadphone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetOutputLevelIndexHeadphone");

	Params::AJBGameInstance_GetOutputLevelIndexHeadphone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetPairMatchingPlayerInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FRoomPlayerInfo>          OutPairMatching                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAJBGameInstance::GetPairMatchingPlayerInfo(TArray<struct FRoomPlayerInfo>* OutPairMatching)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetPairMatchingPlayerInfo");

	Params::AJBGameInstance_GetPairMatchingPlayerInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPairMatching != nullptr)
		*OutPairMatching = std::move(Parms.OutPairMatching);
}


// Function AJB.AJBGameInstance.GetPlayerCharacterEmoteData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   CharacterID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FEmoteData>               OutEmoteData                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::GetPlayerCharacterEmoteData(int32 CharacterID, TArray<struct FEmoteData>* OutEmoteData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetPlayerCharacterEmoteData");

	Params::AJBGameInstance_GetPlayerCharacterEmoteData Parms{};

	Parms.CharacterID = CharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutEmoteData != nullptr)
		*OutEmoteData = std::move(Parms.OutEmoteData);

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetPurchaseLimitPP
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPurchaseLimitPP                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPurchaseLimitPP UAJBGameInstance::GetPurchaseLimitPP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetPurchaseLimitPP");

	Params::AJBGameInstance_GetPurchaseLimitPP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetSelectedCharacterNo
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBGameInstance::GetSelectedCharacterNo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetSelectedCharacterNo");

	Params::AJBGameInstance_GetSelectedCharacterNo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetStandSkinId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   CharaID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBGameInstance::GetStandSkinId(int32 CharaID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetStandSkinId");

	Params::AJBGameInstance_GetStandSkinId Parms{};

	Parms.CharaID = CharaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetTargetSeconds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAJBGameInstance::GetTargetSeconds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetTargetSeconds");

	Params::AJBGameInstance_GetTargetSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetVolumeAttract
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBGameInstance::GetVolumeAttract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetVolumeAttract");

	Params::AJBGameInstance_GetVolumeAttract Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetVolumeGame
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBGameInstance::GetVolumeGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetVolumeGame");

	Params::AJBGameInstance_GetVolumeGame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.HasStartedPlayingReplay
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::HasStartedPlayingReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "HasStartedPlayingReplay");

	Params::AJBGameInstance_HasStartedPlayingReplay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.IsConsumePP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::IsConsumePP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "IsConsumePP");

	Params::AJBGameInstance_IsConsumePP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.IsExecutedReplay
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::IsExecutedReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "IsExecutedReplay");

	Params::AJBGameInstance_IsExecutedReplay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.IsFreePlay
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::IsFreePlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "IsFreePlay");

	Params::AJBGameInstance_IsFreePlay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.IsGuestPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::IsGuestPlaying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "IsGuestPlaying");

	Params::AJBGameInstance_IsGuestPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.IsHighlightReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::IsHighlightReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "IsHighlightReady");

	Params::AJBGameInstance_IsHighlightReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.IsIdleNBANSave
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::IsIdleNBANSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "IsIdleNBANSave");

	Params::AJBGameInstance_IsIdleNBANSave Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.IsLockLimitedCredit
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::IsLockLimitedCredit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "IsLockLimitedCredit");

	Params::AJBGameInstance_IsLockLimitedCredit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.IsLoginPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::IsLoginPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "IsLoginPlayer");

	Params::AJBGameInstance_IsLoginPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.IsMatchCompensationLoginUserDataID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::IsMatchCompensationLoginUserDataID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "IsMatchCompensationLoginUserDataID");

	Params::AJBGameInstance_IsMatchCompensationLoginUserDataID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.IsNeedCompensation
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bCompensationCredit                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCompensationPP                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::IsNeedCompensation(bool* bCompensationCredit, bool* bCompensationPP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "IsNeedCompensation");

	Params::AJBGameInstance_IsNeedCompensation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bCompensationCredit != nullptr)
		*bCompensationCredit = Parms.bCompensationCredit;

	if (bCompensationPP != nullptr)
		*bCompensationPP = Parms.bCompensationPP;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.IsNPCPartner
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::IsNPCPartner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "IsNPCPartner");

	Params::AJBGameInstance_IsNPCPartner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.IsPlayBanapassCardPlayCompensation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::IsPlayBanapassCardPlayCompensation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "IsPlayBanapassCardPlayCompensation");

	Params::AJBGameInstance_IsPlayBanapassCardPlayCompensation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.IsPlayingReplay
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::IsPlayingReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "IsPlayingReplay");

	Params::AJBGameInstance_IsPlayingReplay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.IsPlayingReplayDataAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::IsPlayingReplayDataAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "IsPlayingReplayDataAvailable");

	Params::AJBGameInstance_IsPlayingReplayDataAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.IsRecordingReplay
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::IsRecordingReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "IsRecordingReplay");

	Params::AJBGameInstance_IsRecordingReplay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.IsServicePlay
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::IsServicePlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "IsServicePlay");

	Params::AJBGameInstance_IsServicePlay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.IsShopCompetitionMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::IsShopCompetitionMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "IsShopCompetitionMode");

	Params::AJBGameInstance_IsShopCompetitionMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.LoadParamRepos
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::LoadParamRepos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "LoadParamRepos");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.LoadStorage_AMVersion
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::LoadStorage_AMVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "LoadStorage_AMVersion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.LoadStorage_BookKeepingData
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::LoadStorage_BookKeepingData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "LoadStorage_BookKeepingData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.LoadStorage_ErrorLogs
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::LoadStorage_ErrorLogs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "LoadStorage_ErrorLogs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.LoadStorage_FreePlayCount
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::LoadStorage_FreePlayCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "LoadStorage_FreePlayCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.LoadStorage_Information
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::LoadStorage_Information()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "LoadStorage_Information");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.LoadStorage_LastGameStatus
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::LoadStorage_LastGameStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "LoadStorage_LastGameStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.LoadStorage_ShopInfo
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::LoadStorage_ShopInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "LoadStorage_ShopInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.LoadStorage_SystemOptions
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::LoadStorage_SystemOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "LoadStorage_SystemOptions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.LoadStorage_UpdateSettings
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::LoadStorage_UpdateSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "LoadStorage_UpdateSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.OnCoinCredit
// (Event, Public, BlueprintEvent)

void UAJBGameInstance::OnCoinCredit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "OnCoinCredit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBGameInstance.OnCompleteLoadingSystemOptions
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UAJBGameInstance::OnCompleteLoadingSystemOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "OnCompleteLoadingSystemOptions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBGameInstance.OnLoaded_AMVersion
// (Final, Native, Public, HasOutParams)
// Parameters:
// int32                                   Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::OnLoaded_AMVersion(int32 Result, const TArray<uint8>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "OnLoaded_AMVersion");

	Params::AJBGameInstance_OnLoaded_AMVersion Parms{};

	Parms.Result = Result;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.OnLoaded_BookKeeping
// (Final, Native, Public, HasOutParams)
// Parameters:
// int32                                   Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::OnLoaded_BookKeeping(int32 Result, const TArray<uint8>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "OnLoaded_BookKeeping");

	Params::AJBGameInstance_OnLoaded_BookKeeping Parms{};

	Parms.Result = Result;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.OnLoaded_ErrorLogs
// (Final, Native, Public, HasOutParams)
// Parameters:
// int32                                   Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::OnLoaded_ErrorLogs(int32 Result, const TArray<uint8>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "OnLoaded_ErrorLogs");

	Params::AJBGameInstance_OnLoaded_ErrorLogs Parms{};

	Parms.Result = Result;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.OnLoaded_FreePlayCount
// (Final, Native, Public, HasOutParams)
// Parameters:
// int32                                   Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::OnLoaded_FreePlayCount(int32 Result, const TArray<uint8>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "OnLoaded_FreePlayCount");

	Params::AJBGameInstance_OnLoaded_FreePlayCount Parms{};

	Parms.Result = Result;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.OnLoaded_Information
// (Final, Native, Public, HasOutParams)
// Parameters:
// int32                                   Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::OnLoaded_Information(int32 Result, const TArray<uint8>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "OnLoaded_Information");

	Params::AJBGameInstance_OnLoaded_Information Parms{};

	Parms.Result = Result;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.OnLoaded_LastGameStatus
// (Final, Native, Public, HasOutParams)
// Parameters:
// int32                                   Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::OnLoaded_LastGameStatus(int32 Result, const TArray<uint8>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "OnLoaded_LastGameStatus");

	Params::AJBGameInstance_OnLoaded_LastGameStatus Parms{};

	Parms.Result = Result;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.OnLoaded_ShopInfo
// (Final, Native, Public, HasOutParams)
// Parameters:
// int32                                   Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::OnLoaded_ShopInfo(int32 Result, const TArray<uint8>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "OnLoaded_ShopInfo");

	Params::AJBGameInstance_OnLoaded_ShopInfo Parms{};

	Parms.Result = Result;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.OnLoaded_SystemOptions
// (Final, Native, Public, HasOutParams)
// Parameters:
// int32                                   Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::OnLoaded_SystemOptions(int32 Result, const TArray<uint8>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "OnLoaded_SystemOptions");

	Params::AJBGameInstance_OnLoaded_SystemOptions Parms{};

	Parms.Result = Result;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.OnLoaded_UpdateSettings
// (Final, Native, Public, HasOutParams)
// Parameters:
// int32                                   Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::OnLoaded_UpdateSettings(int32 Result, const TArray<uint8>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "OnLoaded_UpdateSettings");

	Params::AJBGameInstance_OnLoaded_UpdateSettings Parms{};

	Parms.Result = Result;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.OnResetCompensationInfo
// (Event, Public, BlueprintEvent)

void UAJBGameInstance::OnResetCompensationInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "OnResetCompensationInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBGameInstance.OnServiceCredit
// (Event, Public, BlueprintEvent)

void UAJBGameInstance::OnServiceCredit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "OnServiceCredit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBGameInstance.PayCredit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Credit                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SaveLastStatus                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::PayCredit(int32 Credit, bool SaveLastStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "PayCredit");

	Params::AJBGameInstance_PayCredit Parms{};

	Parms.Credit = Credit;
	Parms.SaveLastStatus = SaveLastStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.ResetBattleSettings
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::ResetBattleSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "ResetBattleSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.ResetCompensationInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsSaveLastGameStatus                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::ResetCompensationInfo(bool bIsSaveLastGameStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "ResetCompensationInfo");

	Params::AJBGameInstance_ResetCompensationInfo Parms{};

	Parms.bIsSaveLastGameStatus = bIsSaveLastGameStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.ResetCredit
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::ResetCredit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "ResetCredit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.ResetLastGameStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bClearUsed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::ResetLastGameStatus(bool bClearUsed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "ResetLastGameStatus");

	Params::AJBGameInstance_ResetLastGameStatus Parms{};

	Parms.bClearUsed = bClearUsed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.ResetPP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsSaveLastGameStatus                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::ResetPP(bool bIsSaveLastGameStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "ResetPP");

	Params::AJBGameInstance_ResetPP Parms{};

	Parms.bIsSaveLastGameStatus = bIsSaveLastGameStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.RevertConsumePP
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::RevertConsumePP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "RevertConsumePP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SaveStorage_AMVersion
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::SaveStorage_AMVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SaveStorage_AMVersion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SaveStorage_BookKeepingData
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::SaveStorage_BookKeepingData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SaveStorage_BookKeepingData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SaveStorage_ErrorLogs
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::SaveStorage_ErrorLogs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SaveStorage_ErrorLogs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SaveStorage_FreePlayCount
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::SaveStorage_FreePlayCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SaveStorage_FreePlayCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SaveStorage_HeadClerk
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAMHeadClerkInfo                 HeadClerkInfo                                          (Parm, OutParm, NativeAccessSpecifierPublic)
// class FString                           FilePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::SaveStorage_HeadClerk(struct FAMHeadClerkInfo* HeadClerkInfo, const class FString& FilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SaveStorage_HeadClerk");

	Params::AJBGameInstance_SaveStorage_HeadClerk Parms{};

	Parms.FilePath = std::move(FilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (HeadClerkInfo != nullptr)
		*HeadClerkInfo = std::move(Parms.HeadClerkInfo);
}


// Function AJB.AJBGameInstance.SaveStorage_Information
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::SaveStorage_Information()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SaveStorage_Information");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SaveStorage_LastGameStatus
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::SaveStorage_LastGameStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SaveStorage_LastGameStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SaveStorage_ShopInfoSaveData
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::SaveStorage_ShopInfoSaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SaveStorage_ShopInfoSaveData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SaveStorage_SystemOptions
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::SaveStorage_SystemOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SaveStorage_SystemOptions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SaveStorage_UpdateSettingSaveData
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::SaveStorage_UpdateSettingSaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SaveStorage_UpdateSettingSaveData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SeekReplay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Second                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::SeekReplay(float Second)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SeekReplay");

	Params::AJBGameInstance_SeekReplay Parms{};

	Parms.Second = Second;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SetBattleSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FAJBBattleSettings               InBattleSettings                                       (ConstParm, Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UAJBGameInstance::SetBattleSettings(const struct FAJBBattleSettings& InBattleSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetBattleSettings");

	Params::AJBGameInstance_SetBattleSettings Parms{};

	Parms.InBattleSettings = std::move(InBattleSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SetBuyAddPP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::SetBuyAddPP(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetBuyAddPP");

	Params::AJBGameInstance_SetBuyAddPP Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SetCharacterSkinId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   CharaID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SkinID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::SetCharacterSkinId(int32 CharaID, int32 SkinID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetCharacterSkinId");

	Params::AJBGameInstance_SetCharacterSkinId Parms{};

	Parms.CharaID = CharaID;
	Parms.SkinID = SkinID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SetCloseScheduleType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECloseScheduleType                      Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::SetCloseScheduleType(ECloseScheduleType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetCloseScheduleType");

	Params::AJBGameInstance_SetCloseScheduleType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SetCloseTimeSetting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAJBDayOfWeek                           Week                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCloseTimeInfo                   Info                                                   (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UAJBGameInstance::SetCloseTimeSetting(EAJBDayOfWeek Week, const struct FCloseTimeInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetCloseTimeSetting");

	Params::AJBGameInstance_SetCloseTimeSetting Parms{};

	Parms.Week = Week;
	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SetEveryDayCloseTimeSetting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FCloseTimeInfo                   Info                                                   (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UAJBGameInstance::SetEveryDayCloseTimeSetting(const struct FCloseTimeInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetEveryDayCloseTimeSetting");

	Params::AJBGameInstance_SetEveryDayCloseTimeSetting Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SetExtraPPKind
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExtraPPKind                            Kind                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::SetExtraPPKind(EExtraPPKind Kind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetExtraPPKind");

	Params::AJBGameInstance_SetExtraPPKind Parms{};

	Parms.Kind = Kind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SetFocusActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::SetFocusActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetFocusActor");

	Params::AJBGameInstance_SetFocusActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.SetFocusId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::SetFocusId(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetFocusId");

	Params::AJBGameInstance_SetFocusId Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SetFocusStand
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::SetFocusStand(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetFocusStand");

	Params::AJBGameInstance_SetFocusStand Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.SetFreePlay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::SetFreePlay(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetFreePlay");

	Params::AJBGameInstance_SetFreePlay Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SetFreePPTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Second                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::SetFreePPTime(int32 Second)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetFreePPTime");

	Params::AJBGameInstance_SetFreePPTime Parms{};

	Parms.Second = Second;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SetHighlightReady
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bReady                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::SetHighlightReady(bool bReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetHighlightReady");

	Params::AJBGameInstance_SetHighlightReady Parms{};

	Parms.bReady = bReady;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SetMaxConsumePP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MaxPP                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::SetMaxConsumePP(int32 MaxPP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetMaxConsumePP");

	Params::AJBGameInstance_SetMaxConsumePP Parms{};

	Parms.MaxPP = MaxPP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SetOutputLevelIndexHeadphone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::SetOutputLevelIndexHeadphone(int32 NewIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetOutputLevelIndexHeadphone");

	Params::AJBGameInstance_SetOutputLevelIndexHeadphone Parms{};

	Parms.NewIndex = NewIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SetPauseState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDoPause                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                Causer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::SetPauseState(bool bDoPause, class APlayerController* Causer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetPauseState");

	Params::AJBGameInstance_SetPauseState Parms{};

	Parms.bDoPause = bDoPause;
	Parms.Causer = Causer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.SetPurchaseLimitPP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPurchaseLimitPP                        LimitPP                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::SetPurchaseLimitPP(EPurchaseLimitPP LimitPP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetPurchaseLimitPP");

	Params::AJBGameInstance_SetPurchaseLimitPP Parms{};

	Parms.LimitPP = LimitPP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SetSelectedCharacterNo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::SetSelectedCharacterNo(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetSelectedCharacterNo");

	Params::AJBGameInstance_SetSelectedCharacterNo Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SetStandSkinId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   CharaID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SkinID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::SetStandSkinId(int32 CharaID, int32 SkinID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetStandSkinId");

	Params::AJBGameInstance_SetStandSkinId Parms{};

	Parms.CharaID = CharaID;
	Parms.SkinID = SkinID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SetTargetSeconds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   TargetSeconds                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SeekTargetSeconds                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::SetTargetSeconds(float TargetSeconds, float SeekTargetSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetTargetSeconds");

	Params::AJBGameInstance_SetTargetSeconds Parms{};

	Parms.TargetSeconds = TargetSeconds;
	Parms.SeekTargetSeconds = SeekTargetSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SetupLocalMatchingNPC
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NPCNum                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStartLocation                   StageLocationSize                                      (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   CanPutNum                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::SetupLocalMatchingNPC(int32 NPCNum, const struct FStartLocation& StageLocationSize, int32 CanPutNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetupLocalMatchingNPC");

	Params::AJBGameInstance_SetupLocalMatchingNPC Parms{};

	Parms.NPCNum = NPCNum;
	Parms.StageLocationSize = std::move(StageLocationSize);
	Parms.CanPutNum = CanPutNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SetVolumeAttract
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewVolume                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::SetVolumeAttract(int32 NewVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetVolumeAttract");

	Params::AJBGameInstance_SetVolumeAttract Parms{};

	Parms.NewVolume = NewVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SetVolumeGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewVolume                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::SetVolumeGame(int32 NewVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SetVolumeGame");

	Params::AJBGameInstance_SetVolumeGame Parms{};

	Parms.NewVolume = NewVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.StartConsumePP
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::StartConsumePP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "StartConsumePP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.StopConsumePP
// (Final, Native, Public, BlueprintCallable)

void UAJBGameInstance::StopConsumePP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "StopConsumePP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SubCoinCredit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SubCredit                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsSaveLastStatus                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::SubCoinCredit(int32 SubCredit, bool IsSaveLastStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SubCoinCredit");

	Params::AJBGameInstance_SubCoinCredit Parms{};

	Parms.SubCredit = SubCredit;
	Parms.IsSaveLastStatus = IsSaveLastStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SubEmoneyCredit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SubCredit                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsSaveLastStatus                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::SubEmoneyCredit(int32 SubCredit, bool IsSaveLastStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SubEmoneyCredit");

	Params::AJBGameInstance_SubEmoneyCredit Parms{};

	Parms.SubCredit = SubCredit;
	Parms.IsSaveLastStatus = IsSaveLastStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.SubPP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SubPPNum                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::SubPP(int32 SubPPNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SubPP");

	Params::AJBGameInstance_SubPP Parms{};

	Parms.SubPPNum = SubPPNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.SubServiceCredit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SubCredit                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsSaveLastStatus                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGameInstance::SubServiceCredit(int32 SubCredit, bool IsSaveLastStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "SubServiceCredit");

	Params::AJBGameInstance_SubServiceCredit Parms{};

	Parms.SubCredit = SubCredit;
	Parms.IsSaveLastStatus = IsSaveLastStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBGameInstance.TryCreateOfflinePlayerInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::TryCreateOfflinePlayerInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "TryCreateOfflinePlayerInfo");

	Params::AJBGameInstance_TryCreateOfflinePlayerInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.TryGetMatchingPlayerInfoByPlayerID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   PlayerID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchingPlayerInfo              Out                                                    (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::TryGetMatchingPlayerInfoByPlayerID(int32 PlayerID, struct FMatchingPlayerInfo* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "TryGetMatchingPlayerInfoByPlayerID");

	Params::AJBGameInstance_TryGetMatchingPlayerInfoByPlayerID Parms{};

	Parms.PlayerID = PlayerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out != nullptr)
		*Out = std::move(Parms.Out);

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.TryGetMatchingPlayerInfoByPlayerIDPureFunction
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   PlayerID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchingPlayerInfo              Out                                                    (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::TryGetMatchingPlayerInfoByPlayerIDPureFunction(int32 PlayerID, struct FMatchingPlayerInfo* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "TryGetMatchingPlayerInfoByPlayerIDPureFunction");

	Params::AJBGameInstance_TryGetMatchingPlayerInfoByPlayerIDPureFunction Parms{};

	Parms.PlayerID = PlayerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out != nullptr)
		*Out = std::move(Parms.Out);

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.TryGetMatchingPlayerInfoByUserID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           UserID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchingPlayerInfo              Out                                                    (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::TryGetMatchingPlayerInfoByUserID(const class FString& UserID, struct FMatchingPlayerInfo* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "TryGetMatchingPlayerInfoByUserID");

	Params::AJBGameInstance_TryGetMatchingPlayerInfoByUserID Parms{};

	Parms.UserID = std::move(UserID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out != nullptr)
		*Out = std::move(Parms.Out);

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.TryGetMyPairMatchingPlayerInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bIsValid                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsRoomHost                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchingPlayerInfo              Out                                                    (Parm, OutParm, NativeAccessSpecifierPublic)

void UAJBGameInstance::TryGetMyPairMatchingPlayerInfo(bool* bIsValid, bool* bIsRoomHost, struct FMatchingPlayerInfo* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "TryGetMyPairMatchingPlayerInfo");

	Params::AJBGameInstance_TryGetMyPairMatchingPlayerInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsValid != nullptr)
		*bIsValid = Parms.bIsValid;

	if (bIsRoomHost != nullptr)
		*bIsRoomHost = Parms.bIsRoomHost;

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function AJB.AJBGameInstance.TryUpdateCustomDataAndCharacterIDByPlayerID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   PlayerID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCustomData                      NewCustomData                                          (Parm, NativeAccessSpecifierPublic)
// uint8                                   NewCharacterID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::TryUpdateCustomDataAndCharacterIDByPlayerID(uint8 PlayerID, const struct FCustomData& NewCustomData, uint8 NewCharacterID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "TryUpdateCustomDataAndCharacterIDByPlayerID");

	Params::AJBGameInstance_TryUpdateCustomDataAndCharacterIDByPlayerID Parms{};

	Parms.PlayerID = PlayerID;
	Parms.NewCustomData = std::move(NewCustomData);
	Parms.NewCharacterID = NewCharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.TryUpdateCustomDataAndCharacterIDByUserID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           UserID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCustomData                      NewCustomData                                          (Parm, NativeAccessSpecifierPublic)
// uint8                                   NewCharacterID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBGameInstance::TryUpdateCustomDataAndCharacterIDByUserID(const class FString& UserID, const struct FCustomData& NewCustomData, uint8 NewCharacterID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "TryUpdateCustomDataAndCharacterIDByUserID");

	Params::AJBGameInstance_TryUpdateCustomDataAndCharacterIDByUserID Parms{};

	Parms.UserID = std::move(UserID);
	Parms.NewCustomData = std::move(NewCustomData);
	Parms.NewCharacterID = NewCharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGameInstance.GetParamRepos
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAJBParamRepos*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBParamRepos* UAJBGameInstance::GetParamRepos() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGameInstance", "GetParamRepos");

	Params::AJBGameInstance_GetParamRepos Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBGetIPAddress.GetIPAddress
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBGetIPAddress*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBGetIPAddress* UAJBGetIPAddress::GetIPAddress(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBGetIPAddress", "GetIPAddress");

	Params::AJBGetIPAddress_GetIPAddress Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction AJB.AJBGetIPAddress.AJBIPGetAddressResponse__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FString                           IP                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBGetIPAddress::AJBIPGetAddressResponse__DelegateSignature(const class FString& IP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBGetIPAddress", "AJBIPGetAddressResponse__DelegateSignature");

	Params::AJBGetIPAddress_AJBIPGetAddressResponse__DelegateSignature Parms{};

	Parms.IP = std::move(IP);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBHighlightManager.HighlightOnly_PrintString
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPrintToScreen                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPrintToLog                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     TextColor                                              (Parm, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBHighlightManager::HighlightOnly_PrintString(class UObject* WorldContextObject, const class FString& InString, bool bPrintToScreen, bool bPrintToLog, const struct FLinearColor& TextColor, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBHighlightManager", "HighlightOnly_PrintString");

	Params::AJBHighlightManager_HighlightOnly_PrintString Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InString = std::move(InString);
	Parms.bPrintToScreen = bPrintToScreen;
	Parms.bPrintToLog = bPrintToLog;
	Parms.TextColor = std::move(TextColor);
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHighlightManager.BP_PlayHighlight
// (Final, Native, Public, BlueprintCallable)

void UAJBHighlightManager::BP_PlayHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "BP_PlayHighlight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHighlightManager.BP_StartRecordingReplay
// (Native, Public, BlueprintCallable)

void UAJBHighlightManager::BP_StartRecordingReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "BP_StartRecordingReplay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHighlightManager.BP_StopRecordingReplay
// (Native, Public, BlueprintCallable)

void UAJBHighlightManager::BP_StopRecordingReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "BP_StopRecordingReplay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHighlightManager.DeleteMovieCache
// (Final, Native, Public, BlueprintCallable)

void UAJBHighlightManager::DeleteMovieCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "DeleteMovieCache");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHighlightManager.ExistsMovieCache
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBHighlightManager::ExistsMovieCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "ExistsMovieCache");

	Params::AJBHighlightManager_ExistsMovieCache Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.FinalizeHighlight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bResetHighlightPlayingMemory                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBHighlightManager::FinalizeHighlight(bool bResetHighlightPlayingMemory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "FinalizeHighlight");

	Params::AJBHighlightManager_FinalizeHighlight Parms{};

	Parms.bResetHighlightPlayingMemory = bResetHighlightPlayingMemory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHighlightManager.FinishedCreateMovie
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBHighlightManager::FinishedCreateMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "FinishedCreateMovie");

	Params::AJBHighlightManager_FinishedCreateMovie Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.GetCurrentHighlightTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAJBHighlightManager::GetCurrentHighlightTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "GetCurrentHighlightTime");

	Params::AJBHighlightManager_GetCurrentHighlightTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.GetDebugFullReplayFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBHighlightManager::GetDebugFullReplayFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "GetDebugFullReplayFlag");

	Params::AJBHighlightManager_GetDebugFullReplayFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.GetFadeTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAJBHighlightManager::GetFadeTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "GetFadeTime");

	Params::AJBHighlightManager_GetFadeTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.GetFocusActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UAJBHighlightManager::GetFocusActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "GetFocusActor");

	Params::AJBHighlightManager_GetFocusActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.GetFocusActorID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBHighlightManager::GetFocusActorID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "GetFocusActorID");

	Params::AJBHighlightManager_GetFocusActorID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.GetFocusStand
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UAJBHighlightManager::GetFocusStand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "GetFocusStand");

	Params::AJBHighlightManager_GetFocusStand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.GetFocusStandID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBHighlightManager::GetFocusStandID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "GetFocusStandID");

	Params::AJBHighlightManager_GetFocusStandID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.GetLastCheckPointTimeBySeekTargetTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   SeekTargetTime                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAJBHighlightManager::GetLastCheckPointTimeBySeekTargetTime(float SeekTargetTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "GetLastCheckPointTimeBySeekTargetTime");

	Params::AJBHighlightManager_GetLastCheckPointTimeBySeekTargetTime Parms{};

	Parms.SeekTargetTime = SeekTargetTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.GetMoviePath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBHighlightManager::GetMoviePath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "GetMoviePath");

	Params::AJBHighlightManager_GetMoviePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.GetSeekTargetSeconds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAJBHighlightManager::GetSeekTargetSeconds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "GetSeekTargetSeconds");

	Params::AJBHighlightManager_GetSeekTargetSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.GetTargetSeconds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAJBHighlightManager::GetTargetSeconds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "GetTargetSeconds");

	Params::AJBHighlightManager_GetTargetSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.HasStartedPlayingReplay
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBHighlightManager::HasStartedPlayingReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "HasStartedPlayingReplay");

	Params::AJBHighlightManager_HasStartedPlayingReplay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.IsCabinet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBHighlightManager::IsCabinet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "IsCabinet");

	Params::AJBHighlightManager_IsCabinet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.IsExecutedReplay
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBHighlightManager::IsExecutedReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "IsExecutedReplay");

	Params::AJBHighlightManager_IsExecutedReplay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.IsHighlightReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBHighlightManager::IsHighlightReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "IsHighlightReady");

	Params::AJBHighlightManager_IsHighlightReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.IsPlayingReplay
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBHighlightManager::IsPlayingReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "IsPlayingReplay");

	Params::AJBHighlightManager_IsPlayingReplay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.IsRecordingReplay
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBHighlightManager::IsRecordingReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "IsRecordingReplay");

	Params::AJBHighlightManager_IsRecordingReplay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.RequestEncodeMovie
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bLaunchDetached                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLaunchHidden                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLaunchReallyHidden                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMessage                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBHighlightManager::RequestEncodeMovie(bool bLaunchDetached, bool bLaunchHidden, bool bLaunchReallyHidden, class FString* ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "RequestEncodeMovie");

	Params::AJBHighlightManager_RequestEncodeMovie Parms{};

	Parms.bLaunchDetached = bLaunchDetached;
	Parms.bLaunchHidden = bLaunchHidden;
	Parms.bLaunchReallyHidden = bLaunchReallyHidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ErrorMessage != nullptr)
		*ErrorMessage = std::move(Parms.ErrorMessage);

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.SeekReplay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Second                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBHighlightManager::SeekReplay(float Second)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "SeekReplay");

	Params::AJBHighlightManager_SeekReplay Parms{};

	Parms.Second = Second;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHighlightManager.SetDebugFullReplayFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBHighlightManager::SetDebugFullReplayFlag(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "SetDebugFullReplayFlag");

	Params::AJBHighlightManager_SetDebugFullReplayFlag Parms{};

	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHighlightManager.SetFocusActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBHighlightManager::SetFocusActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "SetFocusActor");

	Params::AJBHighlightManager_SetFocusActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.SetFocusId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBHighlightManager::SetFocusId(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "SetFocusId");

	Params::AJBHighlightManager_SetFocusId Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHighlightManager.SetFocusStand
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBHighlightManager::SetFocusStand(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "SetFocusStand");

	Params::AJBHighlightManager_SetFocusStand Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.SetHighlightReady
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bReady                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBHighlightManager::SetHighlightReady(bool bReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "SetHighlightReady");

	Params::AJBHighlightManager_SetHighlightReady Parms{};

	Parms.bReady = bReady;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBHighlightManager.SetPauseState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDoPause                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                Causer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBHighlightManager::SetPauseState(bool bDoPause, class APlayerController* Causer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "SetPauseState");

	Params::AJBHighlightManager_SetPauseState Parms{};

	Parms.bDoPause = bDoPause;
	Parms.Causer = Causer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBHighlightManager.SetTargetSeconds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   TargetSeconds                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SeekTargetSeconds                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBHighlightManager::SetTargetSeconds(float TargetSeconds, float SeekTargetSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBHighlightManager", "SetTargetSeconds");

	Params::AJBHighlightManager_SetTargetSeconds Parms{};

	Parms.TargetSeconds = TargetSeconds;
	Parms.SeekTargetSeconds = SeekTargetSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBIcmpPing.Request_Ping
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TargetAddress                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Timeout                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBIcmpPing*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBIcmpPing* UAJBIcmpPing::Request_Ping(class UObject* WorldContextObject, const class FString& TargetAddress, float Timeout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBIcmpPing", "Request_Ping");

	Params::AJBIcmpPing_Request_Ping Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TargetAddress = std::move(TargetAddress);
	Parms.Timeout = Timeout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction AJB.AJBIcmpPing.AJBIcmpPingResponse__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBIcmpPing::AJBIcmpPingResponse__DelegateSignature(bool Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBIcmpPing", "AJBIcmpPingResponse__DelegateSignature");

	Params::AJBIcmpPing_AJBIcmpPingResponse__DelegateSignature Parms{};

	Parms.Result = Result;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBInGamePlacementBase.PostInitializeComponentsBP
// (Event, Public, BlueprintEvent)

void AAJBInGamePlacementBase::PostInitializeComponentsBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGamePlacementBase", "PostInitializeComponentsBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGamePlacementBase.PreInitializeComponentsBP
// (Event, Public, BlueprintEvent)

void AAJBInGamePlacementBase::PreInitializeComponentsBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGamePlacementBase", "PreInitializeComponentsBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameServerInfo.InitializeConnection
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameServerInfo::InitializeConnection(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBInGameServerInfo", "InitializeConnection");

	Params::AJBInGameServerInfo_InitializeConnection Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameServerInfo.IsEnableRedis
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBInGameServerInfo::IsEnableRedis(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBInGameServerInfo", "IsEnableRedis");

	Params::AJBInGameServerInfo_IsEnableRedis Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameServerInfo.IsInitializedNPC
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBInGameServerInfo::IsInitializedNPC(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBInGameServerInfo", "IsInitializedNPC");

	Params::AJBInGameServerInfo_IsInitializedNPC Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameServerInfo.OutputLogServer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Log                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameServerInfo::OutputLogServer(class UObject* WorldContextObject, const class FString& Log)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBInGameServerInfo", "OutputLogServer");

	Params::AJBInGameServerInfo_OutputLogServer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Log = std::move(Log);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameServerInfo.OutputLogStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameServerInfo::OutputLogStatus(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBInGameServerInfo", "OutputLogStatus");

	Params::AJBInGameServerInfo_OutputLogStatus Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameServerInfo.RunServerConsoleCmd
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Cmd                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameServerInfo::RunServerConsoleCmd(class UObject* WorldContextObject, const class FString& Cmd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBInGameServerInfo", "RunServerConsoleCmd");

	Params::AJBInGameServerInfo_RunServerConsoleCmd Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Cmd = std::move(Cmd);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameServerInfo.SendCommand_DEL_GD_COMMAND
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameServerInfo::SendCommand_DEL_GD_COMMAND(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBInGameServerInfo", "SendCommand_DEL_GD_COMMAND");

	Params::AJBInGameServerInfo_SendCommand_DEL_GD_COMMAND Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameServerInfo.SendCommand_EXPIRE_DG_STATUS
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameServerInfo::SendCommand_EXPIRE_DG_STATUS(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBInGameServerInfo", "SendCommand_EXPIRE_DG_STATUS");

	Params::AJBInGameServerInfo_SendCommand_EXPIRE_DG_STATUS Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameServerInfo.SendCommand_GET_GD_COMMAND
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameServerInfo::SendCommand_GET_GD_COMMAND(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBInGameServerInfo", "SendCommand_GET_GD_COMMAND");

	Params::AJBInGameServerInfo_SendCommand_GET_GD_COMMAND Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameServerInfo.SendCommand_SET_DG_STATUS
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInGameServerStatus                     Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameServerInfo::SendCommand_SET_DG_STATUS(class UObject* WorldContextObject, EInGameServerStatus Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBInGameServerInfo", "SendCommand_SET_DG_STATUS");

	Params::AJBInGameServerInfo_SendCommand_SET_DG_STATUS Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Status = Status;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameServerInfo.SetDG_STATUS_ExpireSeconds
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Seconds                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameServerInfo::SetDG_STATUS_ExpireSeconds(class UObject* WorldContextObject, int32 Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBInGameServerInfo", "SetDG_STATUS_ExpireSeconds");

	Params::AJBInGameServerInfo_SetDG_STATUS_ExpireSeconds Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Seconds = Seconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameServerInfo.SetEnableRedis
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameServerInfo::SetEnableRedis(class UObject* WorldContextObject, bool bIsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBInGameServerInfo", "SetEnableRedis");

	Params::AJBInGameServerInfo_SetEnableRedis Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bIsEnable = bIsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameServerInfo.Response_DEL_GD_COMMAND
// (Final, Native, Private)
// Parameters:
// int32                                   Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Data                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBInGameServerInfo::Response_DEL_GD_COMMAND(int32 Result, const class FString& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameServerInfo", "Response_DEL_GD_COMMAND");

	Params::AJBInGameServerInfo_Response_DEL_GD_COMMAND Parms{};

	Parms.Result = Result;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameServerInfo.Response_EXPIRE_DG_STATUS
// (Final, Native, Private)
// Parameters:
// int32                                   Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Data                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBInGameServerInfo::Response_EXPIRE_DG_STATUS(int32 Result, const class FString& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameServerInfo", "Response_EXPIRE_DG_STATUS");

	Params::AJBInGameServerInfo_Response_EXPIRE_DG_STATUS Parms{};

	Parms.Result = Result;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameServerInfo.Response_GET_GD_COMMAND
// (Final, Native, Private)
// Parameters:
// int32                                   Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Data                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBInGameServerInfo::Response_GET_GD_COMMAND(int32 Result, const class FString& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameServerInfo", "Response_GET_GD_COMMAND");

	Params::AJBInGameServerInfo_Response_GET_GD_COMMAND Parms{};

	Parms.Result = Result;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameServerInfo.Response_SET_DG_STATUS
// (Final, Native, Private)
// Parameters:
// int32                                   Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Data                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBInGameServerInfo::Response_SET_DG_STATUS(int32 Result, const class FString& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameServerInfo", "Response_SET_DG_STATUS");

	Params::AJBInGameServerInfo_Response_SET_DG_STATUS Parms{};

	Parms.Result = Result;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameSkillComponent.CancelSkill
// (Final, Native, Public, BlueprintCallable)

void UAJBInGameSkillComponent::CancelSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "CancelSkill");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameSkillComponent.CancelSkillServer
// (Final, Native, Public, BlueprintCallable)

void UAJBInGameSkillComponent::CancelSkillServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "CancelSkillServer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameSkillComponent.CanUseSkill
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            TagContainer                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBInGameSkillComponent::CanUseSkill(struct FGameplayTagContainer* TagContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "CanUseSkill");

	Params::AJBInGameSkillComponent_CanUseSkill Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TagContainer != nullptr)
		*TagContainer = std::move(Parms.TagContainer);

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameSkillComponent.CheckSkillAction
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBInGameSkillComponent::CheckSkillAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "CheckSkillAction");

	Params::AJBInGameSkillComponent_CheckSkillAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameSkillComponent.GetComponentUniqueID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBInGameSkillComponent::GetComponentUniqueID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "GetComponentUniqueID");

	Params::AJBInGameSkillComponent_GetComponentUniqueID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameSkillComponent.GetOwnerCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AAJBInGameCharacterBase*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAJBInGameCharacterBase* UAJBInGameSkillComponent::GetOwnerCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "GetOwnerCharacter");

	Params::AJBInGameSkillComponent_GetOwnerCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameSkillComponent.GetOwnerMovableStand
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AAJBInGameMovableStand*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAJBInGameMovableStand* UAJBInGameSkillComponent::GetOwnerMovableStand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "GetOwnerMovableStand");

	Params::AJBInGameSkillComponent_GetOwnerMovableStand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameSkillComponent.GetOwnerStand
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AAJBInGameStand*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAJBInGameStand* UAJBInGameSkillComponent::GetOwnerStand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "GetOwnerStand");

	Params::AJBInGameSkillComponent_GetOwnerStand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameSkillComponent.InactiveSkill
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameSkillComponent::InactiveSkill(bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "InactiveSkill");

	Params::AJBInGameSkillComponent_InactiveSkill Parms{};

	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameSkillComponent.InitializeComponentBP
// (Event, Public, BlueprintEvent)

void UAJBInGameSkillComponent::InitializeComponentBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "InitializeComponentBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameSkillComponent.MC_CancelSkill
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)

void UAJBInGameSkillComponent::MC_CancelSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "MC_CancelSkill");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameSkillComponent.MC_CancelSkillServer
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)

void UAJBInGameSkillComponent::MC_CancelSkillServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "MC_CancelSkillServer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameSkillComponent.MC_NotifyActive
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// bool                                    bInActive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameSkillComponent::MC_NotifyActive(bool bInActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "MC_NotifyActive");

	Params::AJBInGameSkillComponent_MC_NotifyActive Parms{};

	Parms.bInActive = bInActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameSkillComponent.OnActive
// (Event, Public, BlueprintEvent)

void UAJBInGameSkillComponent::OnActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "OnActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameSkillComponent.OnCancel
// (Event, Public, BlueprintEvent)

void UAJBInGameSkillComponent::OnCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "OnCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameSkillComponent.OnDisconnected
// (Event, Public, BlueprintEvent)

void UAJBInGameSkillComponent::OnDisconnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "OnDisconnected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameSkillComponent.OnInactive
// (Event, Public, BlueprintEvent)

void UAJBInGameSkillComponent::OnInactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "OnInactive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameSkillComponent.OnReady
// (Event, Public, BlueprintEvent)

void UAJBInGameSkillComponent::OnReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "OnReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameSkillComponent.OnRep_bActive
// (Event, Public, BlueprintEvent)

void UAJBInGameSkillComponent::OnRep_bActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "OnRep_bActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameSkillComponent.ReadySkill
// (Final, Native, Public, BlueprintCallable)

void UAJBInGameSkillComponent::ReadySkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "ReadySkill");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameSkillComponent.RegisterSkillWidget
// (Native, Public, BlueprintCallable)
// Parameters:
// class UAJBInGameSkillWidget*            RegisterSkillWidget_0                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameSkillComponent::RegisterSkillWidget(class UAJBInGameSkillWidget* RegisterSkillWidget_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "RegisterSkillWidget");

	Params::AJBInGameSkillComponent_RegisterSkillWidget Parms{};

	Parms.RegisterSkillWidget_0 = RegisterSkillWidget_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameSkillComponent.ROS_CancelSkill
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UAJBInGameSkillComponent::ROS_CancelSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "ROS_CancelSkill");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameSkillComponent.ROS_SetSkillActive
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                                    bInActive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameSkillComponent::ROS_SetSkillActive(bool bInActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "ROS_SetSkillActive");

	Params::AJBInGameSkillComponent_ROS_SetSkillActive Parms{};

	Parms.bInActive = bInActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameSkillComponent.UnregisterSkillWidget
// (Native, Public, BlueprintCallable)

void UAJBInGameSkillComponent::UnregisterSkillWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "UnregisterSkillWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameSkillComponent.IsInPreview
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBInGameSkillComponent::IsInPreview() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "IsInPreview");

	Params::AJBInGameSkillComponent_IsInPreview Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameSkillComponent.IsSkillActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bIncludeReady                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludePreview                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBInGameSkillComponent::IsSkillActive(bool bIncludeReady, bool bIncludePreview) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillComponent", "IsSkillActive");

	Params::AJBInGameSkillComponent_IsSkillActive Parms{};

	Parms.bIncludeReady = bIncludeReady;
	Parms.bIncludePreview = bIncludePreview;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameSkillWidget.OnActiveSkillWidget
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UAJBInGameSkillWidget::OnActiveSkillWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillWidget", "OnActiveSkillWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameSkillWidget.OnInactiveSkillWidget
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UAJBInGameSkillWidget::OnInactiveSkillWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillWidget", "OnInactiveSkillWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameSkillWidget.OnOutsideComponentUpdate
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InDeltaTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameSkillWidget::OnOutsideComponentUpdate(float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillWidget", "OnOutsideComponentUpdate");

	Params::AJBInGameSkillWidget_OnOutsideComponentUpdate Parms{};

	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBInGameSkillWidget.OnOwnerSkillStateChanged
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   PreState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameSkillWidget::OnOwnerSkillStateChanged(uint8 NewState, uint8 PreState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillWidget", "OnOwnerSkillStateChanged");

	Params::AJBInGameSkillWidget_OnOwnerSkillStateChanged Parms{};

	Parms.NewState = NewState;
	Parms.PreState = PreState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBInGameSkillWidget.OnRegisterSkillComponent
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UAJBInGameSkillWidget::OnRegisterSkillComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillWidget", "OnRegisterSkillComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameSkillWidget.OnUnregisterSkillComponent
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UAJBInGameSkillWidget::OnUnregisterSkillComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSkillWidget", "OnUnregisterSkillComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameSpeedTreeWindBlower.UpdateSpeedTreeWind
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   TimeSeconds                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBInGameSpeedTreeWindBlower::UpdateSpeedTreeWind(float TimeSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameSpeedTreeWindBlower", "UpdateSpeedTreeWind");

	Params::AJBInGameSpeedTreeWindBlower_UpdateSpeedTreeWind Parms{};

	Parms.TimeSeconds = TimeSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameStand.CleanUp
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldDestroy                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameStand::CleanUp(bool bShouldDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameStand", "CleanUp");

	Params::AJBInGameStand_CleanUp Parms{};

	Parms.bShouldDestroy = bShouldDestroy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameStand.MC_NotifyTransitionChanged
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// EStandAccompanyTransition               PrevTransition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EStandAccompanyTransition               NextTransition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBySeparate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameStand::MC_NotifyTransitionChanged(EStandAccompanyTransition PrevTransition, EStandAccompanyTransition NextTransition, bool bBySeparate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameStand", "MC_NotifyTransitionChanged");

	Params::AJBInGameStand_MC_NotifyTransitionChanged Parms{};

	Parms.PrevTransition = PrevTransition;
	Parms.NextTransition = NextTransition;
	Parms.bBySeparate = bBySeparate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameStand.OnRep_AccompanyTransition
// (Event, Public, BlueprintEvent)

void AAJBInGameStand::OnRep_AccompanyTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameStand", "OnRep_AccompanyTransition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameStand.OnRep_MatchingPlayerIndex
// (Event, Public, BlueprintEvent)

void AAJBInGameStand::OnRep_MatchingPlayerIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameStand", "OnRep_MatchingPlayerIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBInGameStand.OnTransitionChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EStandAccompanyTransition               PrevTransition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EStandAccompanyTransition               NextTransition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBySeparate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameStand::OnTransitionChanged(EStandAccompanyTransition PrevTransition, EStandAccompanyTransition NextTransition, bool bBySeparate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameStand", "OnTransitionChanged");

	Params::AJBInGameStand_OnTransitionChanged Parms{};

	Parms.PrevTransition = PrevTransition;
	Parms.NextTransition = NextTransition;
	Parms.bBySeparate = bBySeparate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBInGameStand.ROS_SetAccompanyTransition
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EStandAccompanyTransition               PrevTransition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EStandAccompanyTransition               NextTransition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBySeparate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameStand::ROS_SetAccompanyTransition(EStandAccompanyTransition PrevTransition, EStandAccompanyTransition NextTransition, bool bBySeparate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameStand", "ROS_SetAccompanyTransition");

	Params::AJBInGameStand_ROS_SetAccompanyTransition Parms{};

	Parms.PrevTransition = PrevTransition;
	Parms.NextTransition = NextTransition;
	Parms.bBySeparate = bBySeparate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameStand.SetAccompanyTransition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EStandAccompanyTransition               NextTransition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBySeparate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameStand::SetAccompanyTransition(EStandAccompanyTransition NextTransition, bool bBySeparate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameStand", "SetAccompanyTransition");

	Params::AJBInGameStand_SetAccompanyTransition Parms{};

	Parms.NextTransition = NextTransition;
	Parms.bBySeparate = bBySeparate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameStand.SetAccompanyTransitionAll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EStandAccompanyTransition               NextTransition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBySeparate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameStand::SetAccompanyTransitionAll(EStandAccompanyTransition NextTransition, bool bBySeparate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameStand", "SetAccompanyTransitionAll");

	Params::AJBInGameStand_SetAccompanyTransitionAll Parms{};

	Parms.NextTransition = NextTransition;
	Parms.bBySeparate = bBySeparate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameStand.SetMatchingPlayerIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewMatchingPlayerIndex                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBInGameStand::SetMatchingPlayerIndex(int32 NewMatchingPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameStand", "SetMatchingPlayerIndex");

	Params::AJBInGameStand_SetMatchingPlayerIndex Parms{};

	Parms.NewMatchingPlayerIndex = NewMatchingPlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBInGameStand.GetOwnerCharacterMovableStand
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bIsValid                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AAJBInGameMovableStand*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAJBInGameMovableStand* AAJBInGameStand::GetOwnerCharacterMovableStand(bool* bIsValid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameStand", "GetOwnerCharacterMovableStand");

	Params::AJBInGameStand_GetOwnerCharacterMovableStand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsValid != nullptr)
		*bIsValid = Parms.bIsValid;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameStand.IsAccompany
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGameStand::IsAccompany() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameStand", "IsAccompany");

	Params::AJBInGameStand_IsAccompany Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameStand.IsBackwardTransition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGameStand::IsBackwardTransition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameStand", "IsBackwardTransition");

	Params::AJBInGameStand_IsBackwardTransition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameStand.IsForwardTransition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGameStand::IsForwardTransition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameStand", "IsForwardTransition");

	Params::AJBInGameStand_IsForwardTransition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameStand.IsNotAccompany
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGameStand::IsNotAccompany() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameStand", "IsNotAccompany");

	Params::AJBInGameStand_IsNotAccompany Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameStand.IsSeparating
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bIncludeTransition                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGameStand::IsSeparating(bool bIncludeTransition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameStand", "IsSeparating");

	Params::AJBInGameStand_IsSeparating Parms{};

	Parms.bIncludeTransition = bIncludeTransition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameStand.IsTransition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGameStand::IsTransition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameStand", "IsTransition");

	Params::AJBInGameStand_IsTransition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBInGameWindow.IsSmallWindow
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBInGameWindow::IsSmallWindow() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInGameWindow", "IsSmallWindow");

	Params::AJBInGameWindow_IsSmallWindow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.IsModeless
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::IsModeless()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "IsModeless");

	Params::AJBInputUIInterface_IsModeless Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputLookupRate
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputLookupRate(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputLookupRate");

	Params::AJBInputUIInterface_OnInputLookupRate Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputMoveForward
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputMoveForward(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputMoveForward");

	Params::AJBInputUIInterface_OnInputMoveForward Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputMoveRight
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputMoveRight(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputMoveRight");

	Params::AJBInputUIInterface_OnInputMoveRight Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputPressedCancel
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputPressedCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputPressedCancel");

	Params::AJBInputUIInterface_OnInputPressedCancel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputPressedDecide
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputPressedDecide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputPressedDecide");

	Params::AJBInputUIInterface_OnInputPressedDecide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputPressedDown
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputPressedDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputPressedDown");

	Params::AJBInputUIInterface_OnInputPressedDown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputPressedL1
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputPressedL1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputPressedL1");

	Params::AJBInputUIInterface_OnInputPressedL1 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputPressedL2
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputPressedL2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputPressedL2");

	Params::AJBInputUIInterface_OnInputPressedL2 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputPressedL3
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputPressedL3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputPressedL3");

	Params::AJBInputUIInterface_OnInputPressedL3 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputPressedLeft
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputPressedLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputPressedLeft");

	Params::AJBInputUIInterface_OnInputPressedLeft Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputPressedR1
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputPressedR1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputPressedR1");

	Params::AJBInputUIInterface_OnInputPressedR1 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputPressedR2
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputPressedR2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputPressedR2");

	Params::AJBInputUIInterface_OnInputPressedR2 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputPressedRight
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputPressedRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputPressedRight");

	Params::AJBInputUIInterface_OnInputPressedRight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputPressedTouch
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   LocationX                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LocationY                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputPressedTouch(const float LocationX, const float LocationY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputPressedTouch");

	Params::AJBInputUIInterface_OnInputPressedTouch Parms{};

	Parms.LocationX = LocationX;
	Parms.LocationY = LocationY;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputPressedUp
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputPressedUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputPressedUp");

	Params::AJBInputUIInterface_OnInputPressedUp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputReleasedCancel
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputReleasedCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputReleasedCancel");

	Params::AJBInputUIInterface_OnInputReleasedCancel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputReleasedDecide
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputReleasedDecide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputReleasedDecide");

	Params::AJBInputUIInterface_OnInputReleasedDecide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputReleasedDown
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputReleasedDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputReleasedDown");

	Params::AJBInputUIInterface_OnInputReleasedDown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputReleasedL1
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputReleasedL1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputReleasedL1");

	Params::AJBInputUIInterface_OnInputReleasedL1 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputReleasedL2
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputReleasedL2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputReleasedL2");

	Params::AJBInputUIInterface_OnInputReleasedL2 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputReleasedL3
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputReleasedL3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputReleasedL3");

	Params::AJBInputUIInterface_OnInputReleasedL3 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputReleasedLeft
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputReleasedLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputReleasedLeft");

	Params::AJBInputUIInterface_OnInputReleasedLeft Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputReleasedR1
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputReleasedR1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputReleasedR1");

	Params::AJBInputUIInterface_OnInputReleasedR1 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputReleasedR2
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputReleasedR2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputReleasedR2");

	Params::AJBInputUIInterface_OnInputReleasedR2 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputReleasedRight
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputReleasedRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputReleasedRight");

	Params::AJBInputUIInterface_OnInputReleasedRight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputReleasedTouch
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputReleasedTouch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputReleasedTouch");

	Params::AJBInputUIInterface_OnInputReleasedTouch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputReleasedUp
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputReleasedUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputReleasedUp");

	Params::AJBInputUIInterface_OnInputReleasedUp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBInputUIInterface.OnInputTurnRate
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAJBInputUIInterface::OnInputTurnRate(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBInputUIInterface", "OnInputTurnRate");

	Params::AJBInputUIInterface_OnInputTurnRate Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AJB.AJBIPSetAddress.NetshIPSetAddress
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Address                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Gateway                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Timeout                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBIPSetAddress*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBIPSetAddress* UAJBIPSetAddress::NetshIPSetAddress(class UObject* WorldContextObject, const class FString& Address, const class FString& Gateway, float Timeout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBIPSetAddress", "NetshIPSetAddress");

	Params::AJBIPSetAddress_NetshIPSetAddress Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Address = std::move(Address);
	Parms.Gateway = std::move(Gateway);
	Parms.Timeout = Timeout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBIPSetAddress.NetshIPSetDHCP
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Timeout                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBIPSetAddress*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBIPSetAddress* UAJBIPSetAddress::NetshIPSetDHCP(class UObject* WorldContextObject, float Timeout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBIPSetAddress", "NetshIPSetDHCP");

	Params::AJBIPSetAddress_NetshIPSetDHCP Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Timeout = Timeout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction AJB.AJBIPSetAddress.AJBIPSetAddressResponse__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UAJBIPSetAddress::AJBIPSetAddressResponse__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBIPSetAddress", "AJBIPSetAddressResponse__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBLevelSequenceActor.PlaySequence
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBLevelSequenceActor::PlaySequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBLevelSequenceActor", "PlaySequence");

	Params::AJBLevelSequenceActor_PlaySequence Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBLevelSequenceActor.StopSequence
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBLevelSequenceActor::StopSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBLevelSequenceActor", "StopSequence");

	Params::AJBLevelSequenceActor_StopSequence Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBLocalPlayer.IsKillcamReplayActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBLocalPlayer::IsKillcamReplayActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBLocalPlayer", "IsKillcamReplayActive");

	Params::AJBLocalPlayer_IsKillcamReplayActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBMessageManager.GetStringTablePath
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AAJBMessageManager::GetStringTablePath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBMessageManager", "GetStringTablePath");

	Params::AJBMessageManager_GetStringTablePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBMessageManager.OnMessageRequested
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   MessageType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBMessageManager::OnMessageRequested(int32 MessageType, float Value1, float Value2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBMessageManager", "OnMessageRequested");

	Params::AJBMessageManager_OnMessageRequested Parms{};

	Parms.MessageType = MessageType;
	Parms.Value1 = Value1;
	Parms.Value2 = Value2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBMessageManager.RequestMessage
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MessageType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBMessageManager::RequestMessage(int32 MessageType, float Value1, float Value2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBMessageManager", "RequestMessage");

	Params::AJBMessageManager_RequestMessage Parms{};

	Parms.MessageType = MessageType;
	Parms.Value1 = Value1;
	Parms.Value2 = Value2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI.CleanLoginPlayerInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI::CleanLoginPlayerInfo(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI", "CleanLoginPlayerInfo");

	Params::AJBNetAPI_CleanLoginPlayerInfo Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI.CreateBNCSiteURL
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBNetAPI::CreateBNCSiteURL(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI", "CreateBNCSiteURL");

	Params::AJBNetAPI_CreateBNCSiteURL Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetAPI.Request_CatalogGetArea
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI* UAJBNetAPI::Request_CatalogGetArea(class UObject* WorldContextObject, class UNetHttp* NetHttp, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI", "Request_CatalogGetArea");

	Params::AJBNetAPI_Request_CatalogGetArea Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetAPI.Request_CatalogGetLobby
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI* UAJBNetAPI::Request_CatalogGetLobby(class UObject* WorldContextObject, class UNetHttp* NetHttp, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI", "Request_CatalogGetLobby");

	Params::AJBNetAPI_Request_CatalogGetLobby Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetAPI.Request_CatalogGetRegion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI* UAJBNetAPI::Request_CatalogGetRegion(class UObject* WorldContextObject, class UNetHttp* NetHttp, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI", "Request_CatalogGetRegion");

	Params::AJBNetAPI_Request_CatalogGetRegion Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetAPI.Request_GachaDetails
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI* UAJBNetAPI::Request_GachaDetails(class UObject* WorldContextObject, class UNetHttp* NetHttp, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI", "Request_GachaDetails");

	Params::AJBNetAPI_Request_GachaDetails Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetAPI.Request_InfoGetInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI* UAJBNetAPI::Request_InfoGetInfo(class UObject* WorldContextObject, class UNetHttp* NetHttp, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI", "Request_InfoGetInfo");

	Params::AJBNetAPI_Request_InfoGetInfo Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetAPI.Request_ResultSetReward
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAJBSetGameRewardParam           RewardParam                                            (Parm, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI* UAJBNetAPI::Request_ResultSetReward(class UObject* WorldContextObject, class UNetHttp* NetHttp, const struct FAJBSetGameRewardParam& RewardParam, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI", "Request_ResultSetReward");

	Params::AJBNetAPI_Request_ResultSetReward Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.RewardParam = std::move(RewardParam);
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetAPI.Request_ResultUploadWinnerResult
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FColor>                   ColorBuffer                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ImageWidth                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ImageHeight                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI* UAJBNetAPI::Request_ResultUploadWinnerResult(class UObject* WorldContextObject, class UNetHttp* NetHttp, const TArray<struct FColor>& ColorBuffer, int32 ImageWidth, int32 ImageHeight, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI", "Request_ResultUploadWinnerResult");

	Params::AJBNetAPI_Request_ResultUploadWinnerResult Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.ColorBuffer = std::move(ColorBuffer);
	Parms.ImageWidth = ImageWidth;
	Parms.ImageHeight = ImageHeight;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetAPI.Request_SysGetEnv
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI* UAJBNetAPI::Request_SysGetEnv(class UObject* WorldContextObject, class UNetHttp* NetHttp, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI", "Request_SysGetEnv");

	Params::AJBNetAPI_Request_SysGetEnv Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetAPI.Request_SysMachineError
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI* UAJBNetAPI::Request_SysMachineError(class UObject* WorldContextObject, class UNetHttp* NetHttp, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI", "Request_SysMachineError");

	Params::AJBNetAPI_Request_SysMachineError Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetAPI.Request_SysNationalMatchInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI* UAJBNetAPI::Request_SysNationalMatchInfo(class UObject* WorldContextObject, class UNetHttp* NetHttp, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI", "Request_SysNationalMatchInfo");

	Params::AJBNetAPI_Request_SysNationalMatchInfo Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetAPI.Request_SysServeralive
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI* UAJBNetAPI::Request_SysServeralive(class UObject* WorldContextObject, class UNetHttp* NetHttp, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI", "Request_SysServeralive");

	Params::AJBNetAPI_Request_SysServeralive Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetAPI.Request_SysShopInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI* UAJBNetAPI::Request_SysShopInfo(class UObject* WorldContextObject, class UNetHttp* NetHttp, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI", "Request_SysShopInfo");

	Params::AJBNetAPI_Request_SysShopInfo Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetAPI.Request_SysVersionInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI* UAJBNetAPI::Request_SysVersionInfo(class UObject* WorldContextObject, class UNetHttp* NetHttp, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI", "Request_SysVersionInfo");

	Params::AJBNetAPI_Request_SysVersionInfo Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetAPI.Request_TSSRead
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI* UAJBNetAPI::Request_TSSRead(class UObject* WorldContextObject, class UNetHttp* NetHttp, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI", "Request_TSSRead");

	Params::AJBNetAPI_Request_TSSRead Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetAPI.Request_TUSRead
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI* UAJBNetAPI::Request_TUSRead(class UObject* WorldContextObject, class UNetHttp* NetHttp, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI", "Request_TUSRead");

	Params::AJBNetAPI_Request_TUSRead Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetAPI.Request_TUSWrite
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI* UAJBNetAPI::Request_TUSWrite(class UObject* WorldContextObject, class UNetHttp* NetHttp, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI", "Request_TUSWrite");

	Params::AJBNetAPI_Request_TUSWrite Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetAPI.Request_UserDelete
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI* UAJBNetAPI::Request_UserDelete(class UObject* WorldContextObject, class UNetHttp* NetHttp, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI", "Request_UserDelete");

	Params::AJBNetAPI_Request_UserDelete Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction AJB.AJBNetAPI.AJBNetAPIResponse__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EAJBNetAPIResult                        Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI::AJBNetAPIResponse__DelegateSignature(EAJBNetAPIResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI", "AJBNetAPIResponse__DelegateSignature");

	Params::AJBNetAPI_AJBNetAPIResponse__DelegateSignature Parms{};

	Parms.Result = Result;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBNetAPI.HttpError
// (Final, Native, Private)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMessage                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI::HttpError(int32 Code, const class FString& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI", "HttpError");

	Params::AJBNetAPI_HttpError Parms{};

	Parms.Code = Code;
	Parms.ErrorMessage = std::move(ErrorMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI.Response_CatalogGetArea
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI::Response_CatalogGetArea(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI", "Response_CatalogGetArea");

	Params::AJBNetAPI_Response_CatalogGetArea Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI.Response_CatalogGetLobby
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI::Response_CatalogGetLobby(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI", "Response_CatalogGetLobby");

	Params::AJBNetAPI_Response_CatalogGetLobby Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI.Response_CatalogGetRegion
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI::Response_CatalogGetRegion(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI", "Response_CatalogGetRegion");

	Params::AJBNetAPI_Response_CatalogGetRegion Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI.Response_GachaDetails
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI::Response_GachaDetails(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI", "Response_GachaDetails");

	Params::AJBNetAPI_Response_GachaDetails Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI.Response_InfoGetInfo
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI::Response_InfoGetInfo(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI", "Response_InfoGetInfo");

	Params::AJBNetAPI_Response_InfoGetInfo Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI.Response_ResultSetReward
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI::Response_ResultSetReward(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI", "Response_ResultSetReward");

	Params::AJBNetAPI_Response_ResultSetReward Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI.Response_ResultUploadWinnerResult
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI::Response_ResultUploadWinnerResult(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI", "Response_ResultUploadWinnerResult");

	Params::AJBNetAPI_Response_ResultUploadWinnerResult Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI.Response_SysGetEnv
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI::Response_SysGetEnv(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI", "Response_SysGetEnv");

	Params::AJBNetAPI_Response_SysGetEnv Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI.Response_SysMachineError
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI::Response_SysMachineError(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI", "Response_SysMachineError");

	Params::AJBNetAPI_Response_SysMachineError Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI.Response_SysNationalMatchInfo
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI::Response_SysNationalMatchInfo(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI", "Response_SysNationalMatchInfo");

	Params::AJBNetAPI_Response_SysNationalMatchInfo Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI.Response_SysServeralive
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI::Response_SysServeralive(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI", "Response_SysServeralive");

	Params::AJBNetAPI_Response_SysServeralive Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI.Response_SysShopInfo
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI::Response_SysShopInfo(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI", "Response_SysShopInfo");

	Params::AJBNetAPI_Response_SysShopInfo Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI.Response_SysVersionInfo
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI::Response_SysVersionInfo(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI", "Response_SysVersionInfo");

	Params::AJBNetAPI_Response_SysVersionInfo Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI.Response_TSSRead
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI::Response_TSSRead(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI", "Response_TSSRead");

	Params::AJBNetAPI_Response_TSSRead Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI.Response_TUSRead
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI::Response_TUSRead(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI", "Response_TUSRead");

	Params::AJBNetAPI_Response_TUSRead Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI.Response_TUSWrite
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI::Response_TUSWrite(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI", "Response_TUSWrite");

	Params::AJBNetAPI_Response_TUSWrite Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI.Response_UserDelete
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI::Response_UserDelete(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI", "Response_UserDelete");

	Params::AJBNetAPI_Response_UserDelete Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_Login.Request_UserLoginFromAwm
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAmwTouchInfo                    TouchInfo                                              (Parm, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI_Login*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI_Login* UAJBNetAPI_Login::Request_UserLoginFromAwm(class UObject* WorldContextObject, class UNetHttp* NetHttp, const struct FAmwTouchInfo& TouchInfo, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI_Login", "Request_UserLoginFromAwm");

	Params::AJBNetAPI_Login_Request_UserLoginFromAwm Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.TouchInfo = std::move(TouchInfo);
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction AJB.AJBNetAPI_Login.AJBNetAPIResponse__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EAJBNetAPIResult                        Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsNewCard                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAJBBNCardStatus                        CardStatus                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    RegistBNCS                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_Login::AJBNetAPIResponse__DelegateSignature(EAJBNetAPIResult Result, bool IsNewCard, EAJBBNCardStatus CardStatus, bool RegistBNCS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_Login", "AJBNetAPIResponse__DelegateSignature");

	Params::AJBNetAPI_Login_AJBNetAPIResponse__DelegateSignature Parms{};

	Parms.Result = Result;
	Parms.IsNewCard = IsNewCard;
	Parms.CardStatus = CardStatus;
	Parms.RegistBNCS = RegistBNCS;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBNetAPI_Login.HttpError
// (Final, Native, Private)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMessage                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_Login::HttpError(int32 Code, const class FString& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_Login", "HttpError");

	Params::AJBNetAPI_Login_HttpError Parms{};

	Parms.Code = Code;
	Parms.ErrorMessage = std::move(ErrorMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_Login.Response_UserLogin
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_Login::Response_UserLogin(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_Login", "Response_UserLogin");

	Params::AJBNetAPI_Login_Response_UserLogin Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_CreateUser.Request_UserCreateFromAwm
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAmwTouchInfo                    TouchInfo                                              (Parm, NativeAccessSpecifierPublic)
// bool                                    IsGuest                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI_CreateUser*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI_CreateUser* UAJBNetAPI_CreateUser::Request_UserCreateFromAwm(class UObject* WorldContextObject, class UNetHttp* NetHttp, const struct FAmwTouchInfo& TouchInfo, bool IsGuest, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI_CreateUser", "Request_UserCreateFromAwm");

	Params::AJBNetAPI_CreateUser_Request_UserCreateFromAwm Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.TouchInfo = std::move(TouchInfo);
	Parms.IsGuest = IsGuest;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction AJB.AJBNetAPI_CreateUser.AJBNetAPIResponse__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EAJBNetAPIResult                        Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_CreateUser::AJBNetAPIResponse__DelegateSignature(EAJBNetAPIResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_CreateUser", "AJBNetAPIResponse__DelegateSignature");

	Params::AJBNetAPI_CreateUser_AJBNetAPIResponse__DelegateSignature Parms{};

	Parms.Result = Result;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBNetAPI_CreateUser.HttpError
// (Final, Native, Private)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMessage                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_CreateUser::HttpError(int32 Code, const class FString& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_CreateUser", "HttpError");

	Params::AJBNetAPI_CreateUser_HttpError Parms{};

	Parms.Code = Code;
	Parms.ErrorMessage = std::move(ErrorMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_CreateUser.Response_UserCreate
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_CreateUser::Response_UserCreate(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_CreateUser", "Response_UserCreate");

	Params::AJBNetAPI_CreateUser_Response_UserCreate Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_Logout.Request_UserLogout
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsCheck                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLoginCancel                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI_Logout*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI_Logout* UAJBNetAPI_Logout::Request_UserLogout(class UObject* WorldContextObject, class UNetHttp* NetHttp, bool IsCheck, bool IsLoginCancel, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI_Logout", "Request_UserLogout");

	Params::AJBNetAPI_Logout_Request_UserLogout Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.IsCheck = IsCheck;
	Parms.IsLoginCancel = IsLoginCancel;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction AJB.AJBNetAPI_Logout.AJBNetAPIResponse__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EAJBNetAPIResult                        Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAJBLogoutReward                 Reward                                                 (Parm, NativeAccessSpecifierPublic)

void UAJBNetAPI_Logout::AJBNetAPIResponse__DelegateSignature(EAJBNetAPIResult Result, const struct FAJBLogoutReward& Reward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_Logout", "AJBNetAPIResponse__DelegateSignature");

	Params::AJBNetAPI_Logout_AJBNetAPIResponse__DelegateSignature Parms{};

	Parms.Result = Result;
	Parms.Reward = std::move(Reward);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBNetAPI_Logout.HttpError
// (Final, Native, Private)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMessage                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_Logout::HttpError(int32 Code, const class FString& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_Logout", "HttpError");

	Params::AJBNetAPI_Logout_HttpError Parms{};

	Parms.Code = Code;
	Parms.ErrorMessage = std::move(ErrorMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_Logout.Response_UserLogout
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_Logout::Response_UserLogout(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_Logout", "Response_UserLogout");

	Params::AJBNetAPI_Logout_Response_UserLogout Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_GetAnnouncement.Request_InfoGetAnnouncement
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI_GetAnnouncement*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI_GetAnnouncement* UAJBNetAPI_GetAnnouncement::Request_InfoGetAnnouncement(class UObject* WorldContextObject, class UNetHttp* NetHttp, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI_GetAnnouncement", "Request_InfoGetAnnouncement");

	Params::AJBNetAPI_GetAnnouncement_Request_InfoGetAnnouncement Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction AJB.AJBNetAPI_GetAnnouncement.AJBNetAPIResponse__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// EAJBNetAPIResult                        Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FAJBAnnouncement>         Announcements                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAJBNetAPI_GetAnnouncement::AJBNetAPIResponse__DelegateSignature(EAJBNetAPIResult Result, const TArray<struct FAJBAnnouncement>& Announcements)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_GetAnnouncement", "AJBNetAPIResponse__DelegateSignature");

	Params::AJBNetAPI_GetAnnouncement_AJBNetAPIResponse__DelegateSignature Parms{};

	Parms.Result = Result;
	Parms.Announcements = std::move(Announcements);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBNetAPI_GetAnnouncement.HttpError
// (Final, Native, Private)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMessage                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_GetAnnouncement::HttpError(int32 Code, const class FString& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_GetAnnouncement", "HttpError");

	Params::AJBNetAPI_GetAnnouncement_HttpError Parms{};

	Parms.Code = Code;
	Parms.ErrorMessage = std::move(ErrorMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_GetAnnouncement.Response_InfoGetAnnouncement
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_GetAnnouncement::Response_InfoGetAnnouncement(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_GetAnnouncement", "Response_InfoGetAnnouncement");

	Params::AJBNetAPI_GetAnnouncement_Response_InfoGetAnnouncement Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_GameResult.Request_GameResult
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAJBGameRecord                   GameRecord                                             (Parm, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI_GameResult*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI_GameResult* UAJBNetAPI_GameResult::Request_GameResult(class UObject* WorldContextObject, class UNetHttp* NetHttp, const struct FAJBGameRecord& GameRecord, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI_GameResult", "Request_GameResult");

	Params::AJBNetAPI_GameResult_Request_GameResult Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.GameRecord = std::move(GameRecord);
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction AJB.AJBNetAPI_GameResult.AJBNetAPIResponse__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EAJBNetAPIResult                        Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAJBGameResult                   GameResultData                                         (Parm, NativeAccessSpecifierPublic)

void UAJBNetAPI_GameResult::AJBNetAPIResponse__DelegateSignature(EAJBNetAPIResult Result, const struct FAJBGameResult& GameResultData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_GameResult", "AJBNetAPIResponse__DelegateSignature");

	Params::AJBNetAPI_GameResult_AJBNetAPIResponse__DelegateSignature Parms{};

	Parms.Result = Result;
	Parms.GameResultData = std::move(GameResultData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBNetAPI_GameResult.HttpError
// (Final, Native, Private)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMessage                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_GameResult::HttpError(int32 Code, const class FString& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_GameResult", "HttpError");

	Params::AJBNetAPI_GameResult_HttpError Parms{};

	Parms.Code = Code;
	Parms.ErrorMessage = std::move(ErrorMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_GameResult.Response_GameResult
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_GameResult::Response_GameResult(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_GameResult", "Response_GameResult");

	Params::AJBNetAPI_GameResult_Response_GameResult Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_ResultGetReward.Request_ResultGetReward
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAJBGachaType                           GachaType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI_ResultGetReward*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI_ResultGetReward* UAJBNetAPI_ResultGetReward::Request_ResultGetReward(class UObject* WorldContextObject, class UNetHttp* NetHttp, EAJBGachaType GachaType, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI_ResultGetReward", "Request_ResultGetReward");

	Params::AJBNetAPI_ResultGetReward_Request_ResultGetReward Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.GachaType = GachaType;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetAPI_ResultGetReward.Request_ResultGetRewardCheckGachaID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAJBGachaID                      GachaID                                                (Parm, NativeAccessSpecifierPublic)
// EAJBGachaType                           GachaType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI_ResultGetReward*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI_ResultGetReward* UAJBNetAPI_ResultGetReward::Request_ResultGetRewardCheckGachaID(class UObject* WorldContextObject, class UNetHttp* NetHttp, const struct FAJBGachaID& GachaID, EAJBGachaType GachaType, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI_ResultGetReward", "Request_ResultGetRewardCheckGachaID");

	Params::AJBNetAPI_ResultGetReward_Request_ResultGetRewardCheckGachaID Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.GachaID = std::move(GachaID);
	Parms.GachaType = GachaType;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction AJB.AJBNetAPI_ResultGetReward.AJBNetAPIResponse__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EAJBNetAPIResult                        Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAJBRewardReceivingStatus               ReceiveingStatus                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAJBGetRewardsResponse           GetRewards                                             (Parm, NativeAccessSpecifierPublic)

void UAJBNetAPI_ResultGetReward::AJBNetAPIResponse__DelegateSignature(EAJBNetAPIResult Result, EAJBRewardReceivingStatus ReceiveingStatus, const struct FAJBGetRewardsResponse& GetRewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_ResultGetReward", "AJBNetAPIResponse__DelegateSignature");

	Params::AJBNetAPI_ResultGetReward_AJBNetAPIResponse__DelegateSignature Parms{};

	Parms.Result = Result;
	Parms.ReceiveingStatus = ReceiveingStatus;
	Parms.GetRewards = std::move(GetRewards);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBNetAPI_ResultGetReward.HttpError
// (Final, Native, Private)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMessage                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_ResultGetReward::HttpError(int32 Code, const class FString& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_ResultGetReward", "HttpError");

	Params::AJBNetAPI_ResultGetReward_HttpError Parms{};

	Parms.Code = Code;
	Parms.ErrorMessage = std::move(ErrorMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_ResultGetReward.Response_ResultGetReward
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_ResultGetReward::Response_ResultGetReward(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_ResultGetReward", "Response_ResultGetReward");

	Params::AJBNetAPI_ResultGetReward_Response_ResultGetReward Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_UserCheck.Request_UserCheckFromAwm
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAmwTouchInfo                    TouchInfo                                              (Parm, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI_UserCheck*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI_UserCheck* UAJBNetAPI_UserCheck::Request_UserCheckFromAwm(class UObject* WorldContextObject, class UNetHttp* NetHttp, const struct FAmwTouchInfo& TouchInfo, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI_UserCheck", "Request_UserCheckFromAwm");

	Params::AJBNetAPI_UserCheck_Request_UserCheckFromAwm Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.TouchInfo = std::move(TouchInfo);
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction AJB.AJBNetAPI_UserCheck.AJBNetAPIResponse__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EAJBNetAPIResult                        Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsNewUser                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAJBBNCardStatus                        CardStatus                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    RegistBNCS                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_UserCheck::AJBNetAPIResponse__DelegateSignature(EAJBNetAPIResult Result, bool bIsNewUser, EAJBBNCardStatus CardStatus, bool RegistBNCS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_UserCheck", "AJBNetAPIResponse__DelegateSignature");

	Params::AJBNetAPI_UserCheck_AJBNetAPIResponse__DelegateSignature Parms{};

	Parms.Result = Result;
	Parms.bIsNewUser = bIsNewUser;
	Parms.CardStatus = CardStatus;
	Parms.RegistBNCS = RegistBNCS;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBNetAPI_UserCheck.HttpError
// (Final, Native, Private)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMessage                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_UserCheck::HttpError(int32 Code, const class FString& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_UserCheck", "HttpError");

	Params::AJBNetAPI_UserCheck_HttpError Parms{};

	Parms.Code = Code;
	Parms.ErrorMessage = std::move(ErrorMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_UserCheck.Response_UserCheck
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_UserCheck::Response_UserCheck(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_UserCheck", "Response_UserCheck");

	Params::AJBNetAPI_UserCheck_Response_UserCheck Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_UserUnlock.Request_LoginedUserUnlock
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI_UserUnlock*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI_UserUnlock* UAJBNetAPI_UserUnlock::Request_LoginedUserUnlock(class UObject* WorldContextObject, class UNetHttp* NetHttp, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI_UserUnlock", "Request_LoginedUserUnlock");

	Params::AJBNetAPI_UserUnlock_Request_LoginedUserUnlock Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetAPI_UserUnlock.Request_UserUnlockFromAwm
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAmwTouchInfo                    TouchInfo                                              (Parm, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI_UserUnlock*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI_UserUnlock* UAJBNetAPI_UserUnlock::Request_UserUnlockFromAwm(class UObject* WorldContextObject, class UNetHttp* NetHttp, const struct FAmwTouchInfo& TouchInfo, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI_UserUnlock", "Request_UserUnlockFromAwm");

	Params::AJBNetAPI_UserUnlock_Request_UserUnlockFromAwm Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.TouchInfo = std::move(TouchInfo);
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction AJB.AJBNetAPI_UserUnlock.AJBNetAPIResponse__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EAJBNetAPIResult                        Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsNewUser                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAJBBNCardStatus                        CardStatus                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsNotLocked                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_UserUnlock::AJBNetAPIResponse__DelegateSignature(EAJBNetAPIResult Result, bool bIsNewUser, EAJBBNCardStatus CardStatus, bool bIsNotLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_UserUnlock", "AJBNetAPIResponse__DelegateSignature");

	Params::AJBNetAPI_UserUnlock_AJBNetAPIResponse__DelegateSignature Parms{};

	Parms.Result = Result;
	Parms.bIsNewUser = bIsNewUser;
	Parms.CardStatus = CardStatus;
	Parms.bIsNotLocked = bIsNotLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBNetAPI_UserUnlock.HttpError
// (Final, Native, Private)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMessage                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_UserUnlock::HttpError(int32 Code, const class FString& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_UserUnlock", "HttpError");

	Params::AJBNetAPI_UserUnlock_HttpError Parms{};

	Parms.Code = Code;
	Parms.ErrorMessage = std::move(ErrorMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_UserUnlock.Response_UserUnlock
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_UserUnlock::Response_UserUnlock(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_UserUnlock", "Response_UserUnlock");

	Params::AJBNetAPI_UserUnlock_Response_UserUnlock Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_UploadHighlight.Request_UploadHighlight
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FColor>                   ColorBuffer                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ImageWidth                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ImageHeight                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           HighLightFilePath                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI_UploadHighlight*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI_UploadHighlight* UAJBNetAPI_UploadHighlight::Request_UploadHighlight(class UObject* WorldContextObject, class UNetHttp* NetHttp, const TArray<struct FColor>& ColorBuffer, int32 ImageWidth, int32 ImageHeight, const class FString& HighLightFilePath, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI_UploadHighlight", "Request_UploadHighlight");

	Params::AJBNetAPI_UploadHighlight_Request_UploadHighlight Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.ColorBuffer = std::move(ColorBuffer);
	Parms.ImageWidth = ImageWidth;
	Parms.ImageHeight = ImageHeight;
	Parms.HighLightFilePath = std::move(HighLightFilePath);
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction AJB.AJBNetAPI_UploadHighlight.AJBNetAPIResponse__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EAJBNetAPIResult                        Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CurrentSection                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalSection                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_UploadHighlight::AJBNetAPIResponse__DelegateSignature(EAJBNetAPIResult Result, int32 CurrentSection, int32 TotalSection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_UploadHighlight", "AJBNetAPIResponse__DelegateSignature");

	Params::AJBNetAPI_UploadHighlight_AJBNetAPIResponse__DelegateSignature Parms{};

	Parms.Result = Result;
	Parms.CurrentSection = CurrentSection;
	Parms.TotalSection = TotalSection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBNetAPI_UploadHighlight.HttpError
// (Final, Native, Private)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMessage                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_UploadHighlight::HttpError(int32 Code, const class FString& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_UploadHighlight", "HttpError");

	Params::AJBNetAPI_UploadHighlight_HttpError Parms{};

	Parms.Code = Code;
	Parms.ErrorMessage = std::move(ErrorMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_UploadHighlight.Response_UploadHighlight
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_UploadHighlight::Response_UploadHighlight(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_UploadHighlight", "Response_UploadHighlight");

	Params::AJBNetAPI_UploadHighlight_Response_UploadHighlight Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_UploadHighlight.UploadDataSetup
// (Final, Native, Private)

void UAJBNetAPI_UploadHighlight::UploadDataSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_UploadHighlight", "UploadDataSetup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_UploadHeadClerk.Request_UploadHeadClerk
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI_UploadHeadClerk*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI_UploadHeadClerk* UAJBNetAPI_UploadHeadClerk::Request_UploadHeadClerk(class UObject* WorldContextObject, class UNetHttp* NetHttp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI_UploadHeadClerk", "Request_UploadHeadClerk");

	Params::AJBNetAPI_UploadHeadClerk_Request_UploadHeadClerk Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetAPI_UploadHeadClerk.SaveUploadHeadClerk
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_UploadHeadClerk::SaveUploadHeadClerk(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI_UploadHeadClerk", "SaveUploadHeadClerk");

	Params::AJBNetAPI_UploadHeadClerk_SaveUploadHeadClerk Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction AJB.AJBNetAPI_UploadHeadClerk.AJBNetAPIResponse__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EAJBNetAPIResult                        Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RemaingNum                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_UploadHeadClerk::AJBNetAPIResponse__DelegateSignature(EAJBNetAPIResult Result, int32 RemaingNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_UploadHeadClerk", "AJBNetAPIResponse__DelegateSignature");

	Params::AJBNetAPI_UploadHeadClerk_AJBNetAPIResponse__DelegateSignature Parms{};

	Parms.Result = Result;
	Parms.RemaingNum = RemaingNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBNetAPI_UploadHeadClerk.HttpError
// (Final, Native, Private)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMessage                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_UploadHeadClerk::HttpError(int32 Code, const class FString& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_UploadHeadClerk", "HttpError");

	Params::AJBNetAPI_UploadHeadClerk_HttpError Parms{};

	Parms.Code = Code;
	Parms.ErrorMessage = std::move(ErrorMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_UploadHeadClerk.Response_UploadHeadClerk
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_UploadHeadClerk::Response_UploadHeadClerk(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_UploadHeadClerk", "Response_UploadHeadClerk");

	Params::AJBNetAPI_UploadHeadClerk_Response_UploadHeadClerk Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_UserExtendBPLock.Request_UserExtendBPLock
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI_UserExtendBPLock*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI_UserExtendBPLock* UAJBNetAPI_UserExtendBPLock::Request_UserExtendBPLock(class UObject* WorldContextObject, class UNetHttp* NetHttp, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI_UserExtendBPLock", "Request_UserExtendBPLock");

	Params::AJBNetAPI_UserExtendBPLock_Request_UserExtendBPLock Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction AJB.AJBNetAPI_UserExtendBPLock.AJBNetAPIResponse__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EAJBNetAPIResult                        Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NextExtendSpan                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_UserExtendBPLock::AJBNetAPIResponse__DelegateSignature(EAJBNetAPIResult Result, int32 NextExtendSpan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_UserExtendBPLock", "AJBNetAPIResponse__DelegateSignature");

	Params::AJBNetAPI_UserExtendBPLock_AJBNetAPIResponse__DelegateSignature Parms{};

	Parms.Result = Result;
	Parms.NextExtendSpan = NextExtendSpan;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBNetAPI_UserExtendBPLock.HttpError
// (Final, Native, Private)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMessage                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_UserExtendBPLock::HttpError(int32 Code, const class FString& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_UserExtendBPLock", "HttpError");

	Params::AJBNetAPI_UserExtendBPLock_HttpError Parms{};

	Parms.Code = Code;
	Parms.ErrorMessage = std::move(ErrorMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_UserExtendBPLock.Response_UserExtendBPLock
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_UserExtendBPLock::Response_UserExtendBPLock(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_UserExtendBPLock", "Response_UserExtendBPLock");

	Params::AJBNetAPI_UserExtendBPLock_Response_UserExtendBPLock Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_GetRewardLottery.Request_GetRewardLottery
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         NetHttp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBNetAPI_GetRewardLottery*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBNetAPI_GetRewardLottery* UAJBNetAPI_GetRewardLottery::Request_GetRewardLottery(class UObject* WorldContextObject, class UNetHttp* NetHttp, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetAPI_GetRewardLottery", "Request_GetRewardLottery");

	Params::AJBNetAPI_GetRewardLottery_Request_GetRewardLottery Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NetHttp = NetHttp;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction AJB.AJBNetAPI_GetRewardLottery.AJBNetAPIResponse__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EAJBNetAPIResult                        Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAJBGachaID                      GachaID                                                (Parm, NativeAccessSpecifierPublic)

void UAJBNetAPI_GetRewardLottery::AJBNetAPIResponse__DelegateSignature(EAJBNetAPIResult Result, const struct FAJBGachaID& GachaID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_GetRewardLottery", "AJBNetAPIResponse__DelegateSignature");

	Params::AJBNetAPI_GetRewardLottery_AJBNetAPIResponse__DelegateSignature Parms{};

	Parms.Result = Result;
	Parms.GachaID = std::move(GachaID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBNetAPI_GetRewardLottery.HttpError
// (Final, Native, Private)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMessage                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_GetRewardLottery::HttpError(int32 Code, const class FString& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_GetRewardLottery", "HttpError");

	Params::AJBNetAPI_GetRewardLottery_HttpError Parms{};

	Parms.Code = Code;
	Parms.ErrorMessage = std::move(ErrorMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetAPI_GetRewardLottery.Response_GetRewardLottery
// (Final, Native, Public)
// Parameters:
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetAPI_GetRewardLottery::Response_GetRewardLottery(class UNetMessage* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetAPI_GetRewardLottery", "Response_GetRewardLottery");

	Params::AJBNetAPI_GetRewardLottery_Response_GetRewardLottery Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetVaryFloatComponent.MC_ReqReplicated
// (Net, Native, Event, NetMulticast, Public)

void UAJBNetVaryFloatComponent::MC_ReqReplicated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetVaryFloatComponent", "MC_ReqReplicated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetVaryFloatComponent.ROC_RepValue
// (Net, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetVaryFloatComponent::ROC_RepValue(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetVaryFloatComponent", "ROC_RepValue");

	Params::AJBNetVaryFloatComponent_ROC_RepValue Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetVaryFloatComponent.ROS_GoodValue
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                                   GoodValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetVaryFloatComponent::ROS_GoodValue(float GoodValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetVaryFloatComponent", "ROS_GoodValue");

	Params::AJBNetVaryFloatComponent_ROS_GoodValue Parms{};

	Parms.GoodValue = GoodValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetVaryFloatComponent.ROS_SetDeltaPerSecond
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                                   NewDeltaPerScond                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetVaryFloatComponent::ROS_SetDeltaPerSecond(float NewDeltaPerScond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetVaryFloatComponent", "ROS_SetDeltaPerSecond");

	Params::AJBNetVaryFloatComponent_ROS_SetDeltaPerSecond Parms{};

	Parms.NewDeltaPerScond = NewDeltaPerScond;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetVaryFloatComponent.ROS_SetValue
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetVaryFloatComponent::ROS_SetValue(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetVaryFloatComponent", "ROS_SetValue");

	Params::AJBNetVaryFloatComponent_ROS_SetValue Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetVaryFloatComponent.ROS_SetValueMax
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetVaryFloatComponent::ROS_SetValueMax(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetVaryFloatComponent", "ROS_SetValueMax");

	Params::AJBNetVaryFloatComponent_ROS_SetValueMax Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetVaryFloatComponent.ROS_SetValueMin
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetVaryFloatComponent::ROS_SetValueMin(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetVaryFloatComponent", "ROS_SetValueMin");

	Params::AJBNetVaryFloatComponent_ROS_SetValueMin Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetVaryFloatComponent.SetDeltaPerSecond
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewDeltaPerScond                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetVaryFloatComponent::SetDeltaPerSecond(float NewDeltaPerScond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetVaryFloatComponent", "SetDeltaPerSecond");

	Params::AJBNetVaryFloatComponent_SetDeltaPerSecond Parms{};

	Parms.NewDeltaPerScond = NewDeltaPerScond;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetVaryFloatComponent.SetValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetVaryFloatComponent::SetValue(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetVaryFloatComponent", "SetValue");

	Params::AJBNetVaryFloatComponent_SetValue Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetVaryFloatComponent.SetValueMax
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetVaryFloatComponent::SetValueMax(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetVaryFloatComponent", "SetValueMax");

	Params::AJBNetVaryFloatComponent_SetValueMax Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetVaryFloatComponent.SetValueMin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetVaryFloatComponent::SetValueMin(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetVaryFloatComponent", "SetValueMin");

	Params::AJBNetVaryFloatComponent_SetValueMin Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetworkObserver.CheckAMNetworkError
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetworkObserver::CheckAMNetworkError(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetworkObserver", "CheckAMNetworkError");

	Params::AJBNetworkObserver_CheckAMNetworkError Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetworkObserver.CheckLocalNetworkError
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetworkObserver::CheckLocalNetworkError(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetworkObserver", "CheckLocalNetworkError");

	Params::AJBNetworkObserver_CheckLocalNetworkError Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetworkObserver.IsOfflineMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBNetworkObserver::IsOfflineMode(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBNetworkObserver", "IsOfflineMode");

	Params::AJBNetworkObserver_IsOfflineMode Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetworkObserver.BeginGameServerCheck
// (Final, Native, Public, BlueprintCallable)

void UAJBNetworkObserver::BeginGameServerCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetworkObserver", "BeginGameServerCheck");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetworkObserver.CheckLocalNetwork
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBNetworkObserver::CheckLocalNetwork()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetworkObserver", "CheckLocalNetwork");

	Params::AJBNetworkObserver_CheckLocalNetwork Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetworkObserver.EndGameServerCheck
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAJBTestModeGameServerError             Error                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetworkObserver::EndGameServerCheck(EAJBTestModeGameServerError Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetworkObserver", "EndGameServerCheck");

	Params::AJBNetworkObserver_EndGameServerCheck Parms{};

	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetworkObserver.GetAuthGateway
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBNetworkObserver::GetAuthGateway()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetworkObserver", "GetAuthGateway");

	Params::AJBNetworkObserver_GetAuthGateway Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetworkObserver.GetMacAddress
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBNetworkObserver::GetMacAddress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetworkObserver", "GetMacAddress");

	Params::AJBNetworkObserver_GetMacAddress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetworkObserver.GetShopSupportWebSiteLogInID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBNetworkObserver::GetShopSupportWebSiteLogInID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetworkObserver", "GetShopSupportWebSiteLogInID");

	Params::AJBNetworkObserver_GetShopSupportWebSiteLogInID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetworkObserver.GetShopSupportWebSiteLogInPassword
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBNetworkObserver::GetShopSupportWebSiteLogInPassword()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetworkObserver", "GetShopSupportWebSiteLogInPassword");

	Params::AJBNetworkObserver_GetShopSupportWebSiteLogInPassword Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetworkObserver.IsFinishedCheckLocalNetwork
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBNetworkObserver::IsFinishedCheckLocalNetwork()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetworkObserver", "IsFinishedCheckLocalNetwork");

	Params::AJBNetworkObserver_IsFinishedCheckLocalNetwork Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetworkObserver.IsInitializeAuth
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBNetworkObserver::IsInitializeAuth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetworkObserver", "IsInitializeAuth");

	Params::AJBNetworkObserver_IsInitializeAuth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetworkObserver.IsServerUpdateMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBNetworkObserver::IsServerUpdateMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetworkObserver", "IsServerUpdateMode");

	Params::AJBNetworkObserver_IsServerUpdateMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetworkObserver.RequestAllNetLicense
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBNetworkObserver::RequestAllNetLicense()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetworkObserver", "RequestAllNetLicense");

	Params::AJBNetworkObserver_RequestAllNetLicense Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetworkObserver.RequestMuchaLicense
// (Final, Native, Public, BlueprintCallable)

void UAJBNetworkObserver::RequestMuchaLicense()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetworkObserver", "RequestMuchaLicense");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetworkObserver.RequestRestartNet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBNetworkObserver::RequestRestartNet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetworkObserver", "RequestRestartNet");

	Params::AJBNetworkObserver_RequestRestartNet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetworkObserver.SetNetworkTest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsNetworkTest                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBNetworkObserver::SetNetworkTest(bool IsNetworkTest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetworkObserver", "SetNetworkTest");

	Params::AJBNetworkObserver_SetNetworkTest Parms{};

	Parms.IsNetworkTest = IsNetworkTest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetworkObserver.SetServerUpdateMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsSeverUpdateMode                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBNetworkObserver::SetServerUpdateMode(bool bIsSeverUpdateMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetworkObserver", "SetServerUpdateMode");

	Params::AJBNetworkObserver_SetServerUpdateMode Parms{};

	Parms.bIsSeverUpdateMode = bIsSeverUpdateMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBNetworkObserver.UpdateAllNetInfo
// (Final, Native, Public, BlueprintCallable)

void UAJBNetworkObserver::UpdateAllNetInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetworkObserver", "UpdateAllNetInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetworkObserver.UpdateLocalNetworkInfo
// (Final, Native, Public, BlueprintCallable)

void UAJBNetworkObserver::UpdateLocalNetworkInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetworkObserver", "UpdateLocalNetworkInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBNetworkObserver.GetNetID
// (Final, Native, Public, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBNetworkObserver::GetNetID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBNetworkObserver", "GetNetID");

	Params::AJBNetworkObserver_GetNetID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOnlineBeaconClient.ConvertPortNoDedicatedServerToBeaconHost
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   DedicatedServerPort                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AAJBOnlineBeaconClient::ConvertPortNoDedicatedServerToBeaconHost(int32 DedicatedServerPort)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOnlineBeaconClient", "ConvertPortNoDedicatedServerToBeaconHost");

	Params::AJBOnlineBeaconClient_ConvertPortNoDedicatedServerToBeaconHost Parms{};

	Parms.DedicatedServerPort = DedicatedServerPort;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOnlineBeaconClient.JoinBeacon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           HostName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Port                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOnlineBeaconClient::JoinBeacon(const class FString& HostName, int32 Port)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOnlineBeaconClient", "JoinBeacon");

	Params::AJBOnlineBeaconClient_JoinBeacon Parms{};

	Parms.HostName = std::move(HostName);
	Parms.Port = Port;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.OutputLogMatchingPlayerInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMatchingPlayerInfo              MatchingPlayerInfo                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::OutputLogMatchingPlayerInfo(const struct FMatchingPlayerInfo& MatchingPlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBOutGameProxy", "OutputLogMatchingPlayerInfo");

	Params::AJBOutGameProxy_OutputLogMatchingPlayerInfo Parms{};

	Parms.MatchingPlayerInfo = std::move(MatchingPlayerInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.CanTenpoBattle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBOutGameProxy::CanTenpoBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "CanTenpoBattle");

	Params::AJBOutGameProxy_CanTenpoBattle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.ClearPairRoomInfo
// (Final, Native, Public, BlueprintCallable)

void AAJBOutGameProxy::ClearPairRoomInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "ClearPairRoomInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.ClearProtocolTimeOut
// (Final, Native, Private)
// Parameters:
// int32                                   ProtocolID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::ClearProtocolTimeOut(int32 ProtocolID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "ClearProtocolTimeOut");

	Params::AJBOutGameProxy_ClearProtocolTimeOut Parms{};

	Parms.ProtocolID = ProtocolID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.CreateNetMessage_ChangeCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UNetMessage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetMessage* AAJBOutGameProxy::CreateNetMessage_ChangeCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "CreateNetMessage_ChangeCharacter");

	Params::AJBOutGameProxy_CreateNetMessage_ChangeCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.CreateNetMessage_CreateRoom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RoomNo                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetMessage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetMessage* AAJBOutGameProxy::CreateNetMessage_CreateRoom(int32 RoomNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "CreateNetMessage_CreateRoom");

	Params::AJBOutGameProxy_CreateNetMessage_CreateRoom Parms{};

	Parms.RoomNo = RoomNo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.CreateNetMessage_DeletePairIDMatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PairMatchID                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetMessage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetMessage* AAJBOutGameProxy::CreateNetMessage_DeletePairIDMatch(const class FString& PairMatchID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "CreateNetMessage_DeletePairIDMatch");

	Params::AJBOutGameProxy_CreateNetMessage_DeletePairIDMatch Parms{};

	Parms.PairMatchID = std::move(PairMatchID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.CreateNetMessage_DeleteRoom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UNetMessage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetMessage* AAJBOutGameProxy::CreateNetMessage_DeleteRoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "CreateNetMessage_DeleteRoom");

	Params::AJBOutGameProxy_CreateNetMessage_DeleteRoom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.CreateNetMessage_EnterRoom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RoomNo                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetMessage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetMessage* AAJBOutGameProxy::CreateNetMessage_EnterRoom(int32 RoomNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "CreateNetMessage_EnterRoom");

	Params::AJBOutGameProxy_CreateNetMessage_EnterRoom Parms{};

	Parms.RoomNo = RoomNo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.CreateNetMessage_GetRoomInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UNetMessage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetMessage* AAJBOutGameProxy::CreateNetMessage_GetRoomInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "CreateNetMessage_GetRoomInfo");

	Params::AJBOutGameProxy_CreateNetMessage_GetRoomInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.CreateNetMessage_Matching_Breakup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UNetMessage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetMessage* AAJBOutGameProxy::CreateNetMessage_Matching_Breakup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "CreateNetMessage_Matching_Breakup");

	Params::AJBOutGameProxy_CreateNetMessage_Matching_Breakup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.CreateNetMessage_Matching_Finish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UNetMessage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetMessage* AAJBOutGameProxy::CreateNetMessage_Matching_Finish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "CreateNetMessage_Matching_Finish");

	Params::AJBOutGameProxy_CreateNetMessage_Matching_Finish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.CreateNetMessage_Matching_Start
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsReconnect                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetMessage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetMessage* AAJBOutGameProxy::CreateNetMessage_Matching_Start(bool IsReconnect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "CreateNetMessage_Matching_Start");

	Params::AJBOutGameProxy_CreateNetMessage_Matching_Start Parms{};

	Parms.IsReconnect = IsReconnect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.CreateNetMessage_PairIDMatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PairMatchID                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetMessage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetMessage* AAJBOutGameProxy::CreateNetMessage_PairIDMatch(const class FString& PairMatchID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "CreateNetMessage_PairIDMatch");

	Params::AJBOutGameProxy_CreateNetMessage_PairIDMatch Parms{};

	Parms.PairMatchID = std::move(PairMatchID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.CreateNetMessage_PairRandomMatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UNetMessage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetMessage* AAJBOutGameProxy::CreateNetMessage_PairRandomMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "CreateNetMessage_PairRandomMatch");

	Params::AJBOutGameProxy_CreateNetMessage_PairRandomMatch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.CreateNetMessage_ServerTest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UNetMessage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetMessage* AAJBOutGameProxy::CreateNetMessage_ServerTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "CreateNetMessage_ServerTest");

	Params::AJBOutGameProxy_CreateNetMessage_ServerTest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.CreateNetMessage_StartLocation_GetNPCInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UNetMessage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetMessage* AAJBOutGameProxy::CreateNetMessage_StartLocation_GetNPCInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "CreateNetMessage_StartLocation_GetNPCInfo");

	Params::AJBOutGameProxy_CreateNetMessage_StartLocation_GetNPCInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.CreateNetMessage_StartLocation_GetPlayerInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsPartnerNPC                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetMessage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetMessage* AAJBOutGameProxy::CreateNetMessage_StartLocation_GetPlayerInfo(int32 X, int32 Y, bool bIsPartnerNPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "CreateNetMessage_StartLocation_GetPlayerInfo");

	Params::AJBOutGameProxy_CreateNetMessage_StartLocation_GetPlayerInfo Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.bIsPartnerNPC = bIsPartnerNPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.CreateNetMessage_Tenpo_EnterRoom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TimeLimit                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetMessage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetMessage* AAJBOutGameProxy::CreateNetMessage_Tenpo_EnterRoom(int32 TimeLimit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "CreateNetMessage_Tenpo_EnterRoom");

	Params::AJBOutGameProxy_CreateNetMessage_Tenpo_EnterRoom Parms{};

	Parms.TimeLimit = TimeLimit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.CreateNetMessage_Tenpo_ExitRoom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UNetMessage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetMessage* AAJBOutGameProxy::CreateNetMessage_Tenpo_ExitRoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "CreateNetMessage_Tenpo_ExitRoom");

	Params::AJBOutGameProxy_CreateNetMessage_Tenpo_ExitRoom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.CreateNetMessage_Tenpo_GameSetting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NPCNum                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetMessage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetMessage* AAJBOutGameProxy::CreateNetMessage_Tenpo_GameSetting(int32 NPCNum, int32 PlayMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "CreateNetMessage_Tenpo_GameSetting");

	Params::AJBOutGameProxy_CreateNetMessage_Tenpo_GameSetting Parms{};

	Parms.NPCNum = NPCNum;
	Parms.PlayMode = PlayMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.CreateNetMessage_Tenpo_GetRoomInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UNetMessage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetMessage* AAJBOutGameProxy::CreateNetMessage_Tenpo_GetRoomInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "CreateNetMessage_Tenpo_GetRoomInfo");

	Params::AJBOutGameProxy_CreateNetMessage_Tenpo_GetRoomInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.CreateNetMessage_Tenpo_Logined
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UNetMessage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetMessage* AAJBOutGameProxy::CreateNetMessage_Tenpo_Logined()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "CreateNetMessage_Tenpo_Logined");

	Params::AJBOutGameProxy_CreateNetMessage_Tenpo_Logined Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.CreateNetMessage_Tenpo_StartMatching
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InAreaType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetMessage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetMessage* AAJBOutGameProxy::CreateNetMessage_Tenpo_StartMatching(int32 InAreaType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "CreateNetMessage_Tenpo_StartMatching");

	Params::AJBOutGameProxy_CreateNetMessage_Tenpo_StartMatching Parms{};

	Parms.InAreaType = InAreaType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.DebugSetupLoginPlayerInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bForceSetting                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::DebugSetupLoginPlayerInfo(bool bForceSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "DebugSetupLoginPlayerInfo");

	Params::AJBOutGameProxy_DebugSetupLoginPlayerInfo Parms{};

	Parms.bForceSetting = bForceSetting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.DecodeCustomData
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCustomData                      OutCustomData                                          (Parm, OutParm, NativeAccessSpecifierPublic)
// class FString                           InDecodeString                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::DecodeCustomData(struct FCustomData* OutCustomData, const class FString& InDecodeString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "DecodeCustomData");

	Params::AJBOutGameProxy_DecodeCustomData Parms{};

	Parms.InDecodeString = std::move(InDecodeString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCustomData != nullptr)
		*OutCustomData = std::move(Parms.OutCustomData);
}


// Function AJB.AJBOutGameProxy.EncodeCustomData
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           OutEncodeString                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCustomData                      InCustomData                                           (Parm, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::EncodeCustomData(class FString* OutEncodeString, const struct FCustomData& InCustomData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "EncodeCustomData");

	Params::AJBOutGameProxy_EncodeCustomData Parms{};

	Parms.InCustomData = std::move(InCustomData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutEncodeString != nullptr)
		*OutEncodeString = std::move(Parms.OutEncodeString);
}


// Function AJB.AJBOutGameProxy.GetOpenCommand
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AAJBOutGameProxy::GetOpenCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "GetOpenCommand");

	Params::AJBOutGameProxy_GetOpenCommand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.GetTenpoBattleDamageAreaType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AAJBOutGameProxy::GetTenpoBattleDamageAreaType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "GetTenpoBattleDamageAreaType");

	Params::AJBOutGameProxy_GetTenpoBattleDamageAreaType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.GetTenpoRoomRemainingTimeSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AAJBOutGameProxy::GetTenpoRoomRemainingTimeSeconds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "GetTenpoRoomRemainingTimeSeconds");

	Params::AJBOutGameProxy_GetTenpoRoomRemainingTimeSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.HasTenpoHostIP
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBOutGameProxy::HasTenpoHostIP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "HasTenpoHostIP");

	Params::AJBOutGameProxy_HasTenpoHostIP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.IsTenpoHost
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBOutGameProxy::IsTenpoHost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "IsTenpoHost");

	Params::AJBOutGameProxy_IsTenpoHost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBOutGameProxy.NotifyAPI_ChangeRoomInfo
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::NotifyAPI_ChangeRoomInfo(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "NotifyAPI_ChangeRoomInfo");

	Params::AJBOutGameProxy_NotifyAPI_ChangeRoomInfo Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.NotifyAPI_Matching_Status
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::NotifyAPI_Matching_Status(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "NotifyAPI_Matching_Status");

	Params::AJBOutGameProxy_NotifyAPI_Matching_Status Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.NotifyAPI_PairRandomMatch
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::NotifyAPI_PairRandomMatch(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "NotifyAPI_PairRandomMatch");

	Params::AJBOutGameProxy_NotifyAPI_PairRandomMatch Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.NotifyAPI_StartLocation_GetPlayerInfo
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::NotifyAPI_StartLocation_GetPlayerInfo(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "NotifyAPI_StartLocation_GetPlayerInfo");

	Params::AJBOutGameProxy_NotifyAPI_StartLocation_GetPlayerInfo Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.NotifyAPI_Tenpo_ChangeGameSetting
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::NotifyAPI_Tenpo_ChangeGameSetting(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "NotifyAPI_Tenpo_ChangeGameSetting");

	Params::AJBOutGameProxy_NotifyAPI_Tenpo_ChangeGameSetting Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.NotifyAPI_Tenpo_ChangeRoomInfo
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::NotifyAPI_Tenpo_ChangeRoomInfo(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "NotifyAPI_Tenpo_ChangeRoomInfo");

	Params::AJBOutGameProxy_NotifyAPI_Tenpo_ChangeRoomInfo Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.NotifyAPI_Tenpo_Logined
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::NotifyAPI_Tenpo_Logined(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "NotifyAPI_Tenpo_Logined");

	Params::AJBOutGameProxy_NotifyAPI_Tenpo_Logined Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.NotifyAPI_Tenpo_Matching
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::NotifyAPI_Tenpo_Matching(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "NotifyAPI_Tenpo_Matching");

	Params::AJBOutGameProxy_NotifyAPI_Tenpo_Matching Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.OnErrorHttp
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Errmsg                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::OnErrorHttp(int32 Code, const class FString& Errmsg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnErrorHttp");

	Params::AJBOutGameProxy_OnErrorHttp Parms{};

	Parms.Code = Code;
	Parms.Errmsg = std::move(Errmsg);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.OnFaildMatching
// (Event, Public, BlueprintEvent)

void AAJBOutGameProxy::OnFaildMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnFaildMatching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBOutGameProxy.OnFinieshedLoginTenpoMatching
// (Event, Public, BlueprintEvent)

void AAJBOutGameProxy::OnFinieshedLoginTenpoMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnFinieshedLoginTenpoMatching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBOutGameProxy.OnFinishedSelectedStartLocation
// (Event, Public, BlueprintEvent)

void AAJBOutGameProxy::OnFinishedSelectedStartLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnFinishedSelectedStartLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBOutGameProxy.OnNotHeldMatching
// (Event, Public, BlueprintEvent)

void AAJBOutGameProxy::OnNotHeldMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnNotHeldMatching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBOutGameProxy.OnNotifyFailedStartedMatch
// (Event, Public, BlueprintEvent)

void AAJBOutGameProxy::OnNotifyFailedStartedMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnNotifyFailedStartedMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBOutGameProxy.OnNotifyTenpoDeleteRoom
// (Event, Public, BlueprintEvent)

void AAJBOutGameProxy::OnNotifyTenpoDeleteRoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnNotifyTenpoDeleteRoom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBOutGameProxy.OnNotifyTenpoGameSettings
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   CPUNum                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ExchangeMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::OnNotifyTenpoGameSettings(int32 CPUNum, bool ExchangeMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnNotifyTenpoGameSettings");

	Params::AJBOutGameProxy_OnNotifyTenpoGameSettings Parms{};

	Parms.CPUNum = CPUNum;
	Parms.ExchangeMode = ExchangeMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBOutGameProxy.OnNotifyUpdatePairMatchingRoomInfo
// (Event, Public, BlueprintEvent)

void AAJBOutGameProxy::OnNotifyUpdatePairMatchingRoomInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnNotifyUpdatePairMatchingRoomInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBOutGameProxy.OnNotifyUpdateSelectCharacter
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bFinished                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRoomPlayerInfo                  RoomPlayerInfo                                         (Parm, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::OnNotifyUpdateSelectCharacter(bool bFinished, const struct FRoomPlayerInfo& RoomPlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnNotifyUpdateSelectCharacter");

	Params::AJBOutGameProxy_OnNotifyUpdateSelectCharacter Parms{};

	Parms.bFinished = bFinished;
	Parms.RoomPlayerInfo = std::move(RoomPlayerInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBOutGameProxy.OnNotifyUpdateTenpoMatching
// (Event, Public, BlueprintEvent)
// Parameters:
// ETenpoMatchingResult                    Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::OnNotifyUpdateTenpoMatching(ETenpoMatchingResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnNotifyUpdateTenpoMatching");

	Params::AJBOutGameProxy_OnNotifyUpdateTenpoMatching Parms{};

	Parms.Result = Result;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBOutGameProxy.OnNotifyUpdateTenpoRoomInfo
// (Event, Public, BlueprintEvent)

void AAJBOutGameProxy::OnNotifyUpdateTenpoRoomInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnNotifyUpdateTenpoRoomInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBOutGameProxy.OnProtocolRequestTimeout
// (Final, Native, Private)

void AAJBOutGameProxy::OnProtocolRequestTimeout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnProtocolRequestTimeout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.OnResponsCharacterSelect
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::OnResponsCharacterSelect(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnResponsCharacterSelect");

	Params::AJBOutGameProxy_OnResponsCharacterSelect Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBOutGameProxy.OnResponseCreateRoom
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::OnResponseCreateRoom(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnResponseCreateRoom");

	Params::AJBOutGameProxy_OnResponseCreateRoom Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBOutGameProxy.OnResponseDeletePairIDMatch
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::OnResponseDeletePairIDMatch(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnResponseDeletePairIDMatch");

	Params::AJBOutGameProxy_OnResponseDeletePairIDMatch Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBOutGameProxy.OnResponseDeleteRoom
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::OnResponseDeleteRoom(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnResponseDeleteRoom");

	Params::AJBOutGameProxy_OnResponseDeleteRoom Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBOutGameProxy.OnResponseEnterRoom
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::OnResponseEnterRoom(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnResponseEnterRoom");

	Params::AJBOutGameProxy_OnResponseEnterRoom Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBOutGameProxy.OnResponsePairIDMatching
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccessMatching                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RemainTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::OnResponsePairIDMatching(bool bSuccessMatching, int32 RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnResponsePairIDMatching");

	Params::AJBOutGameProxy_OnResponsePairIDMatching Parms{};

	Parms.bSuccessMatching = bSuccessMatching;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBOutGameProxy.OnResponsePairMatching
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccessMatching                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchingPlayerInfo              PairMatchingPlayerInfo                                 (Parm, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::OnResponsePairMatching(bool bSuccessMatching, const struct FMatchingPlayerInfo& PairMatchingPlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnResponsePairMatching");

	Params::AJBOutGameProxy_OnResponsePairMatching Parms{};

	Parms.bSuccessMatching = bSuccessMatching;
	Parms.PairMatchingPlayerInfo = std::move(PairMatchingPlayerInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBOutGameProxy.OnResponseRandomPairMatching
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccessMatching                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::OnResponseRandomPairMatching(bool bSuccessMatching)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnResponseRandomPairMatching");

	Params::AJBOutGameProxy_OnResponseRandomPairMatching Parms{};

	Parms.bSuccessMatching = bSuccessMatching;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBOutGameProxy.OnResponseSelectStartLocation
// (Event, Public, BlueprintEvent)
// Parameters:
// EResultStartLocation                    Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           UserID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::OnResponseSelectStartLocation(EResultStartLocation Result, int32 X, int32 Y, const class FString& UserID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnResponseSelectStartLocation");

	Params::AJBOutGameProxy_OnResponseSelectStartLocation Parms{};

	Parms.Result = Result;
	Parms.X = X;
	Parms.Y = Y;
	Parms.UserID = std::move(UserID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBOutGameProxy.OnResponseServerTest
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::OnResponseServerTest(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnResponseServerTest");

	Params::AJBOutGameProxy_OnResponseServerTest Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBOutGameProxy.OnResponseTenpoDeleteRoom
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::OnResponseTenpoDeleteRoom(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnResponseTenpoDeleteRoom");

	Params::AJBOutGameProxy_OnResponseTenpoDeleteRoom Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBOutGameProxy.OnResponseTenpoEnterRoom
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETenpoRoomEnterResult                   Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::OnResponseTenpoEnterRoom(bool bSuccess, ETenpoRoomEnterResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnResponseTenpoEnterRoom");

	Params::AJBOutGameProxy_OnResponseTenpoEnterRoom Parms{};

	Parms.bSuccess = bSuccess;
	Parms.Result = Result;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBOutGameProxy.OnResponseTenpoGameSettings
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::OnResponseTenpoGameSettings(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnResponseTenpoGameSettings");

	Params::AJBOutGameProxy_OnResponseTenpoGameSettings Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBOutGameProxy.OnResponseTenpoStartMatching
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::OnResponseTenpoStartMatching(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnResponseTenpoStartMatching");

	Params::AJBOutGameProxy_OnResponseTenpoStartMatching Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBOutGameProxy.OnResponseTimeoutPairIDMatching
// (Event, Public, BlueprintEvent)

void AAJBOutGameProxy::OnResponseTimeoutPairIDMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnResponseTimeoutPairIDMatching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBOutGameProxy.OnResponseTimeoutPairMatching
// (Event, Public, BlueprintEvent)

void AAJBOutGameProxy::OnResponseTimeoutPairMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnResponseTimeoutPairMatching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBOutGameProxy.OnResponseUpdateTenpoRoomInfo
// (Event, Public, BlueprintEvent)

void AAJBOutGameProxy::OnResponseUpdateTenpoRoomInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnResponseUpdateTenpoRoomInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBOutGameProxy.OnServerError
// (Event, Public, BlueprintEvent)

void AAJBOutGameProxy::OnServerError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnServerError");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBOutGameProxy.OnStartMatching
// (Event, Public, BlueprintEvent)

void AAJBOutGameProxy::OnStartMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnStartMatching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBOutGameProxy.OnSuccessBreakupmatching
// (Event, Public, BlueprintEvent)

void AAJBOutGameProxy::OnSuccessBreakupmatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnSuccessBreakupmatching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBOutGameProxy.OnUpdateMatchingStatus
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bComplete                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::OnUpdateMatchingStatus(bool bComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnUpdateMatchingStatus");

	Params::AJBOutGameProxy_OnUpdateMatchingStatus Parms{};

	Parms.bComplete = bComplete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AJB.AJBOutGameProxy.OnUpdateNPCInfo
// (Event, Public, BlueprintEvent)

void AAJBOutGameProxy::OnUpdateNPCInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnUpdateNPCInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBOutGameProxy.OnUpdateStartLocationPlayerInfo
// (Event, Public, BlueprintEvent)

void AAJBOutGameProxy::OnUpdateStartLocationPlayerInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "OnUpdateStartLocationPlayerInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBOutGameProxy.Receive_SocketNetMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::Receive_SocketNetMessage(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "Receive_SocketNetMessage");

	Params::AJBOutGameProxy_Receive_SocketNetMessage Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.ResponseAPI_ChangeCharacter
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::ResponseAPI_ChangeCharacter(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "ResponseAPI_ChangeCharacter");

	Params::AJBOutGameProxy_ResponseAPI_ChangeCharacter Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.ResponseAPI_CreateRoom
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::ResponseAPI_CreateRoom(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "ResponseAPI_CreateRoom");

	Params::AJBOutGameProxy_ResponseAPI_CreateRoom Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.ResponseAPI_DeletePairIDMatch
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::ResponseAPI_DeletePairIDMatch(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "ResponseAPI_DeletePairIDMatch");

	Params::AJBOutGameProxy_ResponseAPI_DeletePairIDMatch Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.ResponseAPI_DeleteRoom
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::ResponseAPI_DeleteRoom(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "ResponseAPI_DeleteRoom");

	Params::AJBOutGameProxy_ResponseAPI_DeleteRoom Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.ResponseAPI_EnterRoom
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::ResponseAPI_EnterRoom(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "ResponseAPI_EnterRoom");

	Params::AJBOutGameProxy_ResponseAPI_EnterRoom Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.ResponseAPI_GetRoomInfo
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::ResponseAPI_GetRoomInfo(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "ResponseAPI_GetRoomInfo");

	Params::AJBOutGameProxy_ResponseAPI_GetRoomInfo Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.ResponseAPI_Matching_Breakup
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::ResponseAPI_Matching_Breakup(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "ResponseAPI_Matching_Breakup");

	Params::AJBOutGameProxy_ResponseAPI_Matching_Breakup Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.ResponseAPI_Matching_Finish
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::ResponseAPI_Matching_Finish(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "ResponseAPI_Matching_Finish");

	Params::AJBOutGameProxy_ResponseAPI_Matching_Finish Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.ResponseAPI_Matching_Start
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::ResponseAPI_Matching_Start(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "ResponseAPI_Matching_Start");

	Params::AJBOutGameProxy_ResponseAPI_Matching_Start Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.ResponseAPI_PairIDMatch
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::ResponseAPI_PairIDMatch(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "ResponseAPI_PairIDMatch");

	Params::AJBOutGameProxy_ResponseAPI_PairIDMatch Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.ResponseAPI_PairRandomMatch
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::ResponseAPI_PairRandomMatch(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "ResponseAPI_PairRandomMatch");

	Params::AJBOutGameProxy_ResponseAPI_PairRandomMatch Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.ResponseAPI_ServerTest
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::ResponseAPI_ServerTest(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "ResponseAPI_ServerTest");

	Params::AJBOutGameProxy_ResponseAPI_ServerTest Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.ResponseAPI_StartLocation_GetNPCInfo
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::ResponseAPI_StartLocation_GetNPCInfo(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "ResponseAPI_StartLocation_GetNPCInfo");

	Params::AJBOutGameProxy_ResponseAPI_StartLocation_GetNPCInfo Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.ResponseAPI_StartLocation_GetPlayerInfo
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::ResponseAPI_StartLocation_GetPlayerInfo(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "ResponseAPI_StartLocation_GetPlayerInfo");

	Params::AJBOutGameProxy_ResponseAPI_StartLocation_GetPlayerInfo Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.ResponseAPI_Tenpo_EnterRoom
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::ResponseAPI_Tenpo_EnterRoom(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "ResponseAPI_Tenpo_EnterRoom");

	Params::AJBOutGameProxy_ResponseAPI_Tenpo_EnterRoom Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.ResponseAPI_Tenpo_ExitRoom
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::ResponseAPI_Tenpo_ExitRoom(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "ResponseAPI_Tenpo_ExitRoom");

	Params::AJBOutGameProxy_ResponseAPI_Tenpo_ExitRoom Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.ResponseAPI_Tenpo_GameSetting
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::ResponseAPI_Tenpo_GameSetting(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "ResponseAPI_Tenpo_GameSetting");

	Params::AJBOutGameProxy_ResponseAPI_Tenpo_GameSetting Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.ResponseAPI_Tenpo_GetRoomInfo
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::ResponseAPI_Tenpo_GetRoomInfo(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "ResponseAPI_Tenpo_GetRoomInfo");

	Params::AJBOutGameProxy_ResponseAPI_Tenpo_GetRoomInfo Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.ResponseAPI_Tenpo_Logined
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::ResponseAPI_Tenpo_Logined(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "ResponseAPI_Tenpo_Logined");

	Params::AJBOutGameProxy_ResponseAPI_Tenpo_Logined Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.ResponseAPI_Tenpo_Matching
// (Final, Native, Private)
// Parameters:
// class UNetMessage*                      Msg                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::ResponseAPI_Tenpo_Matching(class UNetMessage* Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "ResponseAPI_Tenpo_Matching");

	Params::AJBOutGameProxy_ResponseAPI_Tenpo_Matching Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.SetOutGameProxyState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOutGameProxyState                      State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::SetOutGameProxyState(EOutGameProxyState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "SetOutGameProxyState");

	Params::AJBOutGameProxy_SetOutGameProxyState Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.SetReconnectRetryProtocol
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EReconnectRetryProtocol                 RequestProtocol                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::SetReconnectRetryProtocol(EReconnectRetryProtocol RequestProtocol)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "SetReconnectRetryProtocol");

	Params::AJBOutGameProxy_SetReconnectRetryProtocol Parms{};

	Parms.RequestProtocol = RequestProtocol;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.SetSolvedProtocol
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EReconnectRetryProtocol                 RequestProtocol                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::SetSolvedProtocol(EReconnectRetryProtocol RequestProtocol)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "SetSolvedProtocol");

	Params::AJBOutGameProxy_SetSolvedProtocol Parms{};

	Parms.RequestProtocol = RequestProtocol;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.SetupPartnerNPCMatchingPlayerInfo
// (Final, Native, Public, BlueprintCallable)

void AAJBOutGameProxy::SetupPartnerNPCMatchingPlayerInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "SetupPartnerNPCMatchingPlayerInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.StartProtocolRequestTimeOut
// (Final, Native, Private)
// Parameters:
// int32                                   ProtocolID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeOutSecond                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBOutGameProxy::StartProtocolRequestTimeOut(int32 ProtocolID, float TimeOutSecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "StartProtocolRequestTimeOut");

	Params::AJBOutGameProxy_StartProtocolRequestTimeOut Parms{};

	Parms.ProtocolID = ProtocolID;
	Parms.TimeOutSecond = TimeOutSecond;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBOutGameProxy.TryGetPartnerMatchingPlayerInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMatchingPlayerInfo              PairMatchingPlayerInfo                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBOutGameProxy::TryGetPartnerMatchingPlayerInfo(struct FMatchingPlayerInfo* PairMatchingPlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBOutGameProxy", "TryGetPartnerMatchingPlayerInfo");

	Params::AJBOutGameProxy_TryGetPartnerMatchingPlayerInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PairMatchingPlayerInfo != nullptr)
		*PairMatchingPlayerInfo = std::move(Parms.PairMatchingPlayerInfo);

	return Parms.ReturnValue;
}


// Function AJB.AJBParamAccessor.AssignParamsFromContentArray
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ClassRef                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Filename                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ArrayIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBParamAccessor::AssignParamsFromContentArray(class UObject* WorldContextObject, class UClass* ClassRef, class UObject* Object, class FName Filename, int32 ArrayIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBParamAccessor", "AssignParamsFromContentArray");

	Params::AJBParamAccessor_AssignParamsFromContentArray Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ClassRef = ClassRef;
	Parms.Object = Object;
	Parms.Filename = Filename;
	Parms.ArrayIndex = ArrayIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBParamAccessor.AssignParamsFromContentMap
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ClassRef                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Filename                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ContentName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBParamAccessor::AssignParamsFromContentMap(class UObject* WorldContextObject, class UClass* ClassRef, class UObject* Object, class FName Filename, class FName ContentName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBParamAccessor", "AssignParamsFromContentMap");

	Params::AJBParamAccessor_AssignParamsFromContentMap Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ClassRef = ClassRef;
	Parms.Object = Object;
	Parms.Filename = Filename;
	Parms.ContentName = ContentName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBParamAccessor.AssignParamsFromDefaultContent
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ClassRef                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Filename                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBParamAccessor::AssignParamsFromDefaultContent(class UObject* WorldContextObject, class UClass* ClassRef, class UObject* Object, class FName Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBParamAccessor", "AssignParamsFromDefaultContent");

	Params::AJBParamAccessor_AssignParamsFromDefaultContent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ClassRef = ClassRef;
	Parms.Object = Object;
	Parms.Filename = Filename;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBParamAccessor.GetParamContentArray
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Filename                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ArrayIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBParamContent*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBParamContent* UAJBParamAccessor::GetParamContentArray(class UObject* WorldContextObject, class FName Filename, int32 ArrayIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBParamAccessor", "GetParamContentArray");

	Params::AJBParamAccessor_GetParamContentArray Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Filename = Filename;
	Parms.ArrayIndex = ArrayIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBParamAccessor.GetParamContentMap
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Filename                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ContentName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBParamContent*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBParamContent* UAJBParamAccessor::GetParamContentMap(class UObject* WorldContextObject, class FName Filename, class FName ContentName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBParamAccessor", "GetParamContentMap");

	Params::AJBParamAccessor_GetParamContentMap Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Filename = Filename;
	Parms.ContentName = ContentName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBParamAccessor.GetParamDefaultContent
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Filename                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBParamContent*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBParamContent* UAJBParamAccessor::GetParamDefaultContent(class UObject* WorldContextObject, class FName Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBParamAccessor", "GetParamDefaultContent");

	Params::AJBParamAccessor_GetParamDefaultContent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Filename = Filename;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBParamAccessor.GetParamFile
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Filename                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBParamFile*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBParamFile* UAJBParamAccessor::GetParamFile(class UObject* WorldContextObject, class FName Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBParamAccessor", "GetParamFile");

	Params::AJBParamAccessor_GetParamFile Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Filename = Filename;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBParamContent.Contains
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBParamContent::Contains(class FName Name_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBParamContent", "Contains");

	Params::AJBParamContent_Contains Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBParamContent.GetBoolValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBParamContent::GetBoolValue(class FName Name_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBParamContent", "GetBoolValue");

	Params::AJBParamContent_GetBoolValue Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBParamContent.GetFloatValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAJBParamContent::GetFloatValue(class FName Name_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBParamContent", "GetFloatValue");

	Params::AJBParamContent_GetFloatValue Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBParamContent.GetStringValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBParamContent::GetStringValue(class FName Name_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBParamContent", "GetStringValue");

	Params::AJBParamContent_GetStringValue Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBParamContent.GetVectorValue
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UAJBParamContent::GetVectorValue(class FName Name_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBParamContent", "GetVectorValue");

	Params::AJBParamContent_GetVectorValue Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBParamFile.Contains
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBParamFile::Contains(class FName Name_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBParamFile", "Contains");

	Params::AJBParamFile_Contains Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBParamFile.ContentNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBParamFile::ContentNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBParamFile", "ContentNum");

	Params::AJBParamFile_ContentNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBParamFile.GetContentArray
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ArrayIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBParamContent*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBParamContent* UAJBParamFile::GetContentArray(int32 ArrayIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBParamFile", "GetContentArray");

	Params::AJBParamFile_GetContentArray Parms{};

	Parms.ArrayIndex = ArrayIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBParamFile.GetContentMap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ContentName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBParamContent*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBParamContent* UAJBParamFile::GetContentMap(class FName ContentName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBParamFile", "GetContentMap");

	Params::AJBParamFile_GetContentMap Parms{};

	Parms.ContentName = ContentName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBParamFile.GetDefaultContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAJBParamContent*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBParamContent* UAJBParamFile::GetDefaultContent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBParamFile", "GetDefaultContent");

	Params::AJBParamFile_GetDefaultContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBParamRepos.AssignParamsFromContentArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                           ClassRef                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Filename                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ArrayIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBParamRepos::AssignParamsFromContentArray(class UClass* ClassRef, class UObject* Object, class FName Filename, int32 ArrayIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBParamRepos", "AssignParamsFromContentArray");

	Params::AJBParamRepos_AssignParamsFromContentArray Parms{};

	Parms.ClassRef = ClassRef;
	Parms.Object = Object;
	Parms.Filename = Filename;
	Parms.ArrayIndex = ArrayIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBParamRepos.AssignParamsFromContentMap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                           ClassRef                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Filename                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ContentName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBParamRepos::AssignParamsFromContentMap(class UClass* ClassRef, class UObject* Object, class FName Filename, class FName ContentName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBParamRepos", "AssignParamsFromContentMap");

	Params::AJBParamRepos_AssignParamsFromContentMap Parms{};

	Parms.ClassRef = ClassRef;
	Parms.Object = Object;
	Parms.Filename = Filename;
	Parms.ContentName = ContentName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBParamRepos.AssignParamsFromDefaultContent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                           ClassRef                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Filename                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBParamRepos::AssignParamsFromDefaultContent(class UClass* ClassRef, class UObject* Object, class FName Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBParamRepos", "AssignParamsFromDefaultContent");

	Params::AJBParamRepos_AssignParamsFromDefaultContent Parms{};

	Parms.ClassRef = ClassRef;
	Parms.Object = Object;
	Parms.Filename = Filename;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBParamRepos.CheckExistParamFile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBParamRepos::CheckExistParamFile(const class FString& Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBParamRepos", "CheckExistParamFile");

	Params::AJBParamRepos_CheckExistParamFile Parms{};

	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBParamRepos.LoadParamFile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBParamRepos::LoadParamFile(const class FString& Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBParamRepos", "LoadParamFile");

	Params::AJBParamRepos_LoadParamFile Parms{};

	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBParamRepos.GetFile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBParamFile*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBParamFile* UAJBParamRepos::GetFile(class FName Name_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBParamRepos", "GetFile");

	Params::AJBParamRepos_GetFile Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBPlayerInfoUtility.ClearResultAtTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBPlayerInfoUtility::ClearResultAtTime(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBPlayerInfoUtility", "ClearResultAtTime");

	Params::AJBPlayerInfoUtility_ClearResultAtTime Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBPlayerInfoUtility.ConvNumberHankakuToZenkaku
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Source                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBPlayerInfoUtility::ConvNumberHankakuToZenkaku(const class FString& Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBPlayerInfoUtility", "ConvNumberHankakuToZenkaku");

	Params::AJBPlayerInfoUtility_ConvNumberHankakuToZenkaku Parms{};

	Parms.Source = std::move(Source);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBPlayerInfoUtility.FixLogoutTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBPlayerInfoUtility::FixLogoutTime(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBPlayerInfoUtility", "FixLogoutTime");

	Params::AJBPlayerInfoUtility_FixLogoutTime Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBPlayerInfoUtility.GetNextExtendBPUnlockSecond
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBPlayerInfoUtility::GetNextExtendBPUnlockSecond(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBPlayerInfoUtility", "GetNextExtendBPUnlockSecond");

	Params::AJBPlayerInfoUtility_GetNextExtendBPUnlockSecond Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBPlayerInfoUtility.MakeAutoPlayerName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           NamePrefix                                             (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAvoidNG                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseSerialNumber                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBPlayerInfoUtility::MakeAutoPlayerName(const class FString& NamePrefix, bool bAvoidNG, bool bUseSerialNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBPlayerInfoUtility", "MakeAutoPlayerName");

	Params::AJBPlayerInfoUtility_MakeAutoPlayerName Parms{};

	Parms.NamePrefix = std::move(NamePrefix);
	Parms.bAvoidNG = bAvoidNG;
	Parms.bUseSerialNumber = bUseSerialNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBPlayerInfoUtility.SetBotFMatchingPlayerInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMatchingPlayerInfo              OutMatchingPlayerInfo                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// class FString                           UserID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBPlayerInfoUtility::SetBotFMatchingPlayerInfo(struct FMatchingPlayerInfo* OutMatchingPlayerInfo, const class FString& UserID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBPlayerInfoUtility", "SetBotFMatchingPlayerInfo");

	Params::AJBPlayerInfoUtility_SetBotFMatchingPlayerInfo Parms{};

	Parms.UserID = std::move(UserID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMatchingPlayerInfo != nullptr)
		*OutMatchingPlayerInfo = std::move(Parms.OutMatchingPlayerInfo);
}


// Function AJB.AJBPrimaryDataAsset.GetIdentifierString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBPrimaryDataAsset::GetIdentifierString() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBPrimaryDataAsset", "GetIdentifierString");

	Params::AJBPrimaryDataAsset_GetIdentifierString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.AppendDebugTags
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            TagContainerIn                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAJBSettings::AppendDebugTags(const struct FGameplayTagContainer& TagContainerIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "AppendDebugTags");

	Params::AJBSettings_AppendDebugTags Parms{};

	Parms.TagContainerIn = std::move(TagContainerIn);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBSettings.GetAllowCreateMovieBlocking
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBSettings::GetAllowCreateMovieBlocking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetAllowCreateMovieBlocking");

	Params::AJBSettings_GetAllowCreateMovieBlocking Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetAutoPlayTestMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBSettings::GetAutoPlayTestMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetAutoPlayTestMode");

	Params::AJBSettings_GetAutoPlayTestMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetAvailableAllCharacters
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBSettings::GetAvailableAllCharacters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetAvailableAllCharacters");

	Params::AJBSettings_GetAvailableAllCharacters Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetAvailableAllStages
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBSettings::GetAvailableAllStages()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetAvailableAllStages");

	Params::AJBSettings_GetAvailableAllStages Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetChangeColorLivingPlayerCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBSettings::GetChangeColorLivingPlayerCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetChangeColorLivingPlayerCount");

	Params::AJBSettings_GetChangeColorLivingPlayerCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetContentRouterGatewayIP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBSettings::GetContentRouterGatewayIP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetContentRouterGatewayIP");

	Params::AJBSettings_GetContentRouterGatewayIP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetDebugTags
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer UAJBSettings::GetDebugTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetDebugTags");

	Params::AJBSettings_GetDebugTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetDefaultCredit
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBSettings::GetDefaultCredit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetDefaultCredit");

	Params::AJBSettings_GetDefaultCredit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetDifficultyMaxNum
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBSettings::GetDifficultyMaxNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetDifficultyMaxNum");

	Params::AJBSettings_GetDifficultyMaxNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetEMoneyPrice
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBSettings::GetEMoneyPrice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetEMoneyPrice");

	Params::AJBSettings_GetEMoneyPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetEnableSkinCustomDebug
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBSettings::GetEnableSkinCustomDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetEnableSkinCustomDebug");

	Params::AJBSettings_GetEnableSkinCustomDebug Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetHighlightVersion
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBSettings::GetHighlightVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetHighlightVersion");

	Params::AJBSettings_GetHighlightVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetInGameStartFadeInTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAJBSettings::GetInGameStartFadeInTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetInGameStartFadeInTime");

	Params::AJBSettings_GetInGameStartFadeInTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetInGameStartFadeOutTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAJBSettings::GetInGameStartFadeOutTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetInGameStartFadeOutTime");

	Params::AJBSettings_GetInGameStartFadeOutTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetJoystickLeftPlayHighInGame
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAJBSettings::GetJoystickLeftPlayHighInGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetJoystickLeftPlayHighInGame");

	Params::AJBSettings_GetJoystickLeftPlayHighInGame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetJoystickRightPlayHighInGame
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAJBSettings::GetJoystickRightPlayHighInGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetJoystickRightPlayHighInGame");

	Params::AJBSettings_GetJoystickRightPlayHighInGame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetMenuBGLevelName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UAJBSettings::GetMenuBGLevelName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetMenuBGLevelName");

	Params::AJBSettings_GetMenuBGLevelName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetMUCHAServerLocalIP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBSettings::GetMUCHAServerLocalIP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetMUCHAServerLocalIP");

	Params::AJBSettings_GetMUCHAServerLocalIP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetNetErrorComebackMap
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBSettings::GetNetErrorComebackMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetNetErrorComebackMap");

	Params::AJBSettings_GetNetErrorComebackMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetPlayerIconCabinetPath
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBSettings::GetPlayerIconCabinetPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetPlayerIconCabinetPath");

	Params::AJBSettings_GetPlayerIconCabinetPath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetPlayerIconDevelopPath
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBSettings::GetPlayerIconDevelopPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetPlayerIconDevelopPath");

	Params::AJBSettings_GetPlayerIconDevelopPath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetPlayerIconDistributionPath
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBSettings::GetPlayerIconDistributionPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetPlayerIconDistributionPath");

	Params::AJBSettings_GetPlayerIconDistributionPath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetPlayerIconEditorPath
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBSettings::GetPlayerIconEditorPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetPlayerIconEditorPath");

	Params::AJBSettings_GetPlayerIconEditorPath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetRewardPercentURL
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBSettings::GetRewardPercentURL()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetRewardPercentURL");

	Params::AJBSettings_GetRewardPercentURL Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetSettingNPCMinNum
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBSettings::GetSettingNPCMinNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetSettingNPCMinNum");

	Params::AJBSettings_GetSettingNPCMinNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetStartUpNextLevelName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UAJBSettings::GetStartUpNextLevelName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetStartUpNextLevelName");

	Params::AJBSettings_GetStartUpNextLevelName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.GetUseYButtonAsVictoryShot
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBSettings::GetUseYButtonAsVictoryShot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "GetUseYButtonAsVictoryShot");

	Params::AJBSettings_GetUseYButtonAsVictoryShot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.IsEnableDebugDisplay
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBSettings::IsEnableDebugDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "IsEnableDebugDisplay");

	Params::AJBSettings_IsEnableDebugDisplay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.IsEnableEMoneyBrandTest
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBSettings::IsEnableEMoneyBrandTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "IsEnableEMoneyBrandTest");

	Params::AJBSettings_IsEnableEMoneyBrandTest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.IsEnableInputCountForDev
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBSettings::IsEnableInputCountForDev()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "IsEnableInputCountForDev");

	Params::AJBSettings_IsEnableInputCountForDev Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.IsEnablePlayerIconRelativePath
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBSettings::IsEnablePlayerIconRelativePath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "IsEnablePlayerIconRelativePath");

	Params::AJBSettings_IsEnablePlayerIconRelativePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.IsEnablePromotionMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBSettings::IsEnablePromotionMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "IsEnablePromotionMode");

	Params::AJBSettings_IsEnablePromotionMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.IsForElectricalTest
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBSettings::IsForElectricalTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "IsForElectricalTest");

	Params::AJBSettings_IsForElectricalTest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.IsForLocationTest
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBSettings::IsForLocationTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "IsForLocationTest");

	Params::AJBSettings_IsForLocationTest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.IsForNegotiations
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBSettings::IsForNegotiations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "IsForNegotiations");

	Params::AJBSettings_IsForNegotiations Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSettings.IsShowShopSupportWebSiteInfo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBSettings::IsShowShopSupportWebSiteInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSettings", "IsShowShopSupportWebSiteInfo");

	Params::AJBSettings_IsShowShopSupportWebSiteInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSpringArmComponent.InitializeLocation
// (Final, Native, Public, BlueprintCallable)

void UAJBSpringArmComponent::InitializeLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBSpringArmComponent", "InitializeLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBStringTableManagerComponent.GetStringFromTable
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           String                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBStringTableManagerComponent::GetStringFromTable(const struct FGameplayTag& Tag, bool* bResult, class FString* String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBStringTableManagerComponent", "GetStringFromTable");

	Params::AJBStringTableManagerComponent_GetStringFromTable Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bResult != nullptr)
		*bResult = Parms.bResult;

	if (String != nullptr)
		*String = std::move(Parms.String);
}


// Function AJB.AJBStringTableManagerComponent.GetStringFromTableByKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           String                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBStringTableManagerComponent::GetStringFromTableByKey(const class FString& Key, bool* bResult, class FString* String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBStringTableManagerComponent", "GetStringFromTableByKey");

	Params::AJBStringTableManagerComponent_GetStringFromTableByKey Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bResult != nullptr)
		*bResult = Parms.bResult;

	if (String != nullptr)
		*String = std::move(Parms.String);
}


// Function AJB.AJBStringTableManagerComponent.GetStringTablePath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UAJBStringTableManagerComponent::GetStringTablePath() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBStringTableManagerComponent", "GetStringTablePath");

	Params::AJBStringTableManagerComponent_GetStringTablePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBSystemTestFunctionLibrary.DoInfiniteLoop
// (Final, Native, Static, Public, BlueprintCallable)

void UAJBSystemTestFunctionLibrary::DoInfiniteLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBSystemTestFunctionLibrary", "DoInfiniteLoop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBUtilityFunctionLibrary.AddComponentByClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Owner                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ComponentClass                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UActorComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UActorComponent* UAJBUtilityFunctionLibrary::AddComponentByClass(class AActor* Owner, class UClass* ComponentClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "AddComponentByClass");

	Params::AJBUtilityFunctionLibrary_AddComponentByClass Parms{};

	Parms.Owner = Owner;
	Parms.ComponentClass = ComponentClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.ApplyExposureSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPostProcessSettings             ApplyTarget                                            (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FPostProcessSettings             ApplySrc                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAJBUtilityFunctionLibrary::ApplyExposureSettings(struct FPostProcessSettings& ApplyTarget, const struct FPostProcessSettings& ApplySrc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "ApplyExposureSettings");

	Params::AJBUtilityFunctionLibrary_ApplyExposureSettings Parms{};

	Parms.ApplyTarget = std::move(ApplyTarget);
	Parms.ApplySrc = std::move(ApplySrc);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	ApplyTarget = std::move(Parms.ApplyTarget);
}


// Function AJB.AJBUtilityFunctionLibrary.CanAJBArcadeGamePlay
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBUtilityFunctionLibrary::CanAJBArcadeGamePlay(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "CanAJBArcadeGamePlay");

	Params::AJBUtilityFunctionLibrary_CanAJBArcadeGamePlay Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.ChangeUSIOInputProperty_DeadZone
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeadZone                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBUtilityFunctionLibrary::ChangeUSIOInputProperty_DeadZone(class APlayerController* PlayerController, float DeadZone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "ChangeUSIOInputProperty_DeadZone");

	Params::AJBUtilityFunctionLibrary_ChangeUSIOInputProperty_DeadZone Parms{};

	Parms.PlayerController = PlayerController;
	Parms.DeadZone = DeadZone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBUtilityFunctionLibrary.ChangeUSIOInputProperty_Exponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Exponent                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBUtilityFunctionLibrary::ChangeUSIOInputProperty_Exponent(class APlayerController* PlayerController, float Exponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "ChangeUSIOInputProperty_Exponent");

	Params::AJBUtilityFunctionLibrary_ChangeUSIOInputProperty_Exponent Parms{};

	Parms.PlayerController = PlayerController;
	Parms.Exponent = Exponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBUtilityFunctionLibrary.ChangeUSIOInputProperty_Invert
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInvert                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBUtilityFunctionLibrary::ChangeUSIOInputProperty_Invert(class APlayerController* PlayerController, bool bInvert)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "ChangeUSIOInputProperty_Invert");

	Params::AJBUtilityFunctionLibrary_ChangeUSIOInputProperty_Invert Parms{};

	Parms.PlayerController = PlayerController;
	Parms.bInvert = bInvert;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBUtilityFunctionLibrary.ChangeUSIOInputProperty_Sensitivity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Sensitivity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBUtilityFunctionLibrary::ChangeUSIOInputProperty_Sensitivity(class APlayerController* PlayerController, float Sensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "ChangeUSIOInputProperty_Sensitivity");

	Params::AJBUtilityFunctionLibrary_ChangeUSIOInputProperty_Sensitivity Parms{};

	Parms.PlayerController = PlayerController;
	Parms.Sensitivity = Sensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBUtilityFunctionLibrary.CheckAnimationLoop
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimationAsset*                  TargetAnimation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBUtilityFunctionLibrary::CheckAnimationLoop(class UAnimationAsset* TargetAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "CheckAnimationLoop");

	Params::AJBUtilityFunctionLibrary_CheckAnimationLoop Parms{};

	Parms.TargetAnimation = TargetAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.CheckDefaultListener
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAkComponent*                     In_pListener                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBUtilityFunctionLibrary::CheckDefaultListener(class UAkComponent* In_pListener)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "CheckDefaultListener");

	Params::AJBUtilityFunctionLibrary_CheckDefaultListener Parms{};

	Parms.In_pListener = In_pListener;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.ConvertAJBInGamePadIconKeyAction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAJBPadIconType                         UIPadIconType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAJBPadIconType                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAJBPadIconType UAJBUtilityFunctionLibrary::ConvertAJBInGamePadIconKeyAction(const class UObject* WorldContextObject, EAJBPadIconType UIPadIconType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "ConvertAJBInGamePadIconKeyAction");

	Params::AJBUtilityFunctionLibrary_ConvertAJBInGamePadIconKeyAction Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.UIPadIconType = UIPadIconType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.CreateAJBLevelSequencePlayer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMovieSceneSequencePlaybackSettingsSettings                                               (Parm, NativeAccessSpecifierPublic)
// class AAJBLevelSequenceActor*           OutActor                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequencePlayer*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULevelSequencePlayer* UAJBUtilityFunctionLibrary::CreateAJBLevelSequencePlayer(class UObject* WorldContextObject, class ULevelSequence* LevelSequence, const struct FMovieSceneSequencePlaybackSettings& Settings, class AAJBLevelSequenceActor** OutActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "CreateAJBLevelSequencePlayer");

	Params::AJBUtilityFunctionLibrary_CreateAJBLevelSequencePlayer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LevelSequence = LevelSequence;
	Parms.Settings = std::move(Settings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActor != nullptr)
		*OutActor = Parms.OutActor;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.FindAJBViewportWidgetOfClass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UAJBUserWidget>       AJBWidgetClass                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBUserWidget*                   OutWidget                                              (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBUtilityFunctionLibrary::FindAJBViewportWidgetOfClass(const class UObject* WorldContextObject, TSubclassOf<class UAJBUserWidget> AJBWidgetClass, bool* bSuccess, class UAJBUserWidget** OutWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "FindAJBViewportWidgetOfClass");

	Params::AJBUtilityFunctionLibrary_FindAJBViewportWidgetOfClass Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AJBWidgetClass = AJBWidgetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (OutWidget != nullptr)
		*OutWidget = Parms.OutWidget;
}


// Function AJB.AJBUtilityFunctionLibrary.FindAJBViewportWidgetsOfClass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UAJBUserWidget>       AJBWidgetClass                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UAJBUserWidget*>           OutWidgets                                             (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UAJBUtilityFunctionLibrary::FindAJBViewportWidgetsOfClass(const class UObject* WorldContextObject, TSubclassOf<class UAJBUserWidget> AJBWidgetClass, bool* bSuccess, TArray<class UAJBUserWidget*>* OutWidgets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "FindAJBViewportWidgetsOfClass");

	Params::AJBUtilityFunctionLibrary_FindAJBViewportWidgetsOfClass Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AJBWidgetClass = AJBWidgetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (OutWidgets != nullptr)
		*OutWidgets = std::move(Parms.OutWidgets);
}


// Function AJB.AJBUtilityFunctionLibrary.ForceUpdateOverlaps
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  Component                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBUtilityFunctionLibrary::ForceUpdateOverlaps(class USceneComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "ForceUpdateOverlaps");

	Params::AJBUtilityFunctionLibrary_ForceUpdateOverlaps Parms{};

	Parms.Component = Component;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBUtilityFunctionLibrary.GetAJBArcadeLimitAdditionalCredit
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBUtilityFunctionLibrary::GetAJBArcadeLimitAdditionalCredit(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetAJBArcadeLimitAdditionalCredit");

	Params::AJBUtilityFunctionLibrary_GetAJBArcadeLimitAdditionalCredit Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.GetAJBArcadeLimitNumPossessionPP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBUtilityFunctionLibrary::GetAJBArcadeLimitNumPossessionPP(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetAJBArcadeLimitNumPossessionPP");

	Params::AJBUtilityFunctionLibrary_GetAJBArcadeLimitNumPossessionPP Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.GetAJBArcadeTimeManager
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsValid                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBArcadeTimeManager*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBArcadeTimeManager* UAJBUtilityFunctionLibrary::GetAJBArcadeTimeManager(const class UObject* WorldContextObject, bool* bIsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetAJBArcadeTimeManager");

	Params::AJBUtilityFunctionLibrary_GetAJBArcadeTimeManager Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsValid != nullptr)
		*bIsValid = Parms.bIsValid;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.GetAJBCharacterInfoList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FAJBCharacterInfo>        OutCharacterInfoList                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAJBUtilityFunctionLibrary::GetAJBCharacterInfoList(const class UObject* WorldContextObject, TArray<struct FAJBCharacterInfo>* OutCharacterInfoList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetAJBCharacterInfoList");

	Params::AJBUtilityFunctionLibrary_GetAJBCharacterInfoList Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCharacterInfoList != nullptr)
		*OutCharacterInfoList = std::move(Parms.OutCharacterInfoList);
}


// Function AJB.AJBUtilityFunctionLibrary.GetAJBControlledInGameCharacter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AController*                      Controller                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsValid                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AAJBInGameCharacter*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAJBInGameCharacter* UAJBUtilityFunctionLibrary::GetAJBControlledInGameCharacter(const class AController* Controller, bool* bIsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetAJBControlledInGameCharacter");

	Params::AJBUtilityFunctionLibrary_GetAJBControlledInGameCharacter Parms{};

	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsValid != nullptr)
		*bIsValid = Parms.bIsValid;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.GetAJBDefaultGravityZ
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAJBUtilityFunctionLibrary::GetAJBDefaultGravityZ()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetAJBDefaultGravityZ");

	Params::AJBUtilityFunctionLibrary_GetAJBDefaultGravityZ Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.GetAJBGameInstanceFromWorldContextObjectChecked
// (Final, Native, Static, Public)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBGameInstance*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBGameInstance* UAJBUtilityFunctionLibrary::GetAJBGameInstanceFromWorldContextObjectChecked(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetAJBGameInstanceFromWorldContextObjectChecked");

	Params::AJBUtilityFunctionLibrary_GetAJBGameInstanceFromWorldContextObjectChecked Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.GetAJBHighlightManager
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsValid                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBHighlightManager*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBHighlightManager* UAJBUtilityFunctionLibrary::GetAJBHighlightManager(const class UObject* WorldContextObject, bool* bIsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetAJBHighlightManager");

	Params::AJBUtilityFunctionLibrary_GetAJBHighlightManager Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsValid != nullptr)
		*bIsValid = Parms.bIsValid;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.GetAJBHighlightOnlyInGamePlayerController
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsValid                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AAJBInGamePlayerController*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAJBInGamePlayerController* UAJBUtilityFunctionLibrary::GetAJBHighlightOnlyInGamePlayerController(const class UObject* WorldContextObject, bool* bIsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetAJBHighlightOnlyInGamePlayerController");

	Params::AJBUtilityFunctionLibrary_GetAJBHighlightOnlyInGamePlayerController Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsValid != nullptr)
		*bIsValid = Parms.bIsValid;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.GetAJBInGameDataStorageManager
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsValid                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAJBGameDataStorageManager*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAJBGameDataStorageManager* UAJBUtilityFunctionLibrary::GetAJBInGameDataStorageManager(const class UObject* WorldContextObject, bool* bIsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetAJBInGameDataStorageManager");

	Params::AJBUtilityFunctionLibrary_GetAJBInGameDataStorageManager Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsValid != nullptr)
		*bIsValid = Parms.bIsValid;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.GetAJBInGameGameState
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsValid                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AAJBInGameGameState*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAJBInGameGameState* UAJBUtilityFunctionLibrary::GetAJBInGameGameState(const class UObject* WorldContextObject, bool* bIsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetAJBInGameGameState");

	Params::AJBUtilityFunctionLibrary_GetAJBInGameGameState Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsValid != nullptr)
		*bIsValid = Parms.bIsValid;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.GetAJBInGameHUD
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsValid                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AAJBInGameHUD*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAJBInGameHUD* UAJBUtilityFunctionLibrary::GetAJBInGameHUD(const class UObject* WorldContextObject, bool* bIsValid, int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetAJBInGameHUD");

	Params::AJBUtilityFunctionLibrary_GetAJBInGameHUD Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerIndex = PlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsValid != nullptr)
		*bIsValid = Parms.bIsValid;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.GetAJBInGamePadIconByKeyAction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             KeyActionName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAJBPadIconType                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAJBPadIconType UAJBUtilityFunctionLibrary::GetAJBInGamePadIconByKeyAction(const class UObject* WorldContextObject, class FName KeyActionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetAJBInGamePadIconByKeyAction");

	Params::AJBUtilityFunctionLibrary_GetAJBInGamePadIconByKeyAction Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.KeyActionName = KeyActionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.GetAJBInGamePlayerController
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsValid                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AAJBInGamePlayerController*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAJBInGamePlayerController* UAJBUtilityFunctionLibrary::GetAJBInGamePlayerController(const class UObject* WorldContextObject, bool* bIsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetAJBInGamePlayerController");

	Params::AJBUtilityFunctionLibrary_GetAJBInGamePlayerController Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsValid != nullptr)
		*bIsValid = Parms.bIsValid;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.GetAJBLimitCoinNumber
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBUtilityFunctionLibrary::GetAJBLimitCoinNumber()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetAJBLimitCoinNumber");

	Params::AJBUtilityFunctionLibrary_GetAJBLimitCoinNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.GetAJBMaxBuyPP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAJBUtilityFunctionLibrary::GetAJBMaxBuyPP(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetAJBMaxBuyPP");

	Params::AJBUtilityFunctionLibrary_GetAJBMaxBuyPP Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.GetAllActorsByLevelName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>               ActorClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   OutActors                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAJBUtilityFunctionLibrary::GetAllActorsByLevelName(const class UObject* WorldContextObject, class FName LevelName, TSubclassOf<class AActor> ActorClass, TArray<class AActor*>* OutActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetAllActorsByLevelName");

	Params::AJBUtilityFunctionLibrary_GetAllActorsByLevelName Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LevelName = LevelName;
	Parms.ActorClass = ActorClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActors != nullptr)
		*OutActors = std::move(Parms.OutActors);
}


// Function AJB.AJBUtilityFunctionLibrary.GetCharacterInfoByCharaIndex
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAJBCharacterInfo                Out                                                    (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBUtilityFunctionLibrary::GetCharacterInfoByCharaIndex(const class UObject* WorldContextObject, int32 Index_0, struct FAJBCharacterInfo* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetCharacterInfoByCharaIndex");

	Params::AJBUtilityFunctionLibrary_GetCharacterInfoByCharaIndex Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out != nullptr)
		*Out = std::move(Parms.Out);

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.GetCharacterInfoByCharaTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAJBCharacterInfo                Out                                                    (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBUtilityFunctionLibrary::GetCharacterInfoByCharaTag(const class UObject* WorldContextObject, const struct FGameplayTag& Tag, struct FAJBCharacterInfo* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetCharacterInfoByCharaTag");

	Params::AJBUtilityFunctionLibrary_GetCharacterInfoByCharaTag Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out != nullptr)
		*Out = std::move(Parms.Out);

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.GetConnectionTimeout
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAJBUtilityFunctionLibrary::GetConnectionTimeout(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetConnectionTimeout");

	Params::AJBUtilityFunctionLibrary_GetConnectionTimeout Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.GetDayOfWeek
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDateTime                        Date                                                   (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAJBDayOfWeek                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAJBDayOfWeek UAJBUtilityFunctionLibrary::GetDayOfWeek(const struct FDateTime& Date)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetDayOfWeek");

	Params::AJBUtilityFunctionLibrary_GetDayOfWeek Parms{};

	Parms.Date = std::move(Date);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.GetInGameEffectPoolManagers
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AAJBInGameEffectPoolManager>EffectPoolManagerClass                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AAJBInGameEffectPoolManager*>OutEffectPoolManagers                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAJBUtilityFunctionLibrary::GetInGameEffectPoolManagers(const class UObject* WorldContextObject, TSubclassOf<class AAJBInGameEffectPoolManager> EffectPoolManagerClass, TArray<class AAJBInGameEffectPoolManager*>* OutEffectPoolManagers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetInGameEffectPoolManagers");

	Params::AJBUtilityFunctionLibrary_GetInGameEffectPoolManagers Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.EffectPoolManagerClass = EffectPoolManagerClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutEffectPoolManagers != nullptr)
		*OutEffectPoolManagers = std::move(Parms.OutEffectPoolManagers);
}


// Function AJB.AJBUtilityFunctionLibrary.GetInitialConnectTimeout
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAJBUtilityFunctionLibrary::GetInitialConnectTimeout(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetInitialConnectTimeout");

	Params::AJBUtilityFunctionLibrary_GetInitialConnectTimeout Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.GetJoinPawns
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class APawn>                PawnClass                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class APawn*>                    OutPawns                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAJBUtilityFunctionLibrary::GetJoinPawns(class UObject* WorldContextObject, TSubclassOf<class APawn> PawnClass, TArray<class APawn*>* OutPawns)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetJoinPawns");

	Params::AJBUtilityFunctionLibrary_GetJoinPawns Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PawnClass = PawnClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPawns != nullptr)
		*OutPawns = std::move(Parms.OutPawns);
}


// Function AJB.AJBUtilityFunctionLibrary.GetJoinPlayerControllers
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class APlayerController*>        OutPlayerControllers                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAJBUtilityFunctionLibrary::GetJoinPlayerControllers(class UObject* WorldContextObject, TArray<class APlayerController*>* OutPlayerControllers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetJoinPlayerControllers");

	Params::AJBUtilityFunctionLibrary_GetJoinPlayerControllers Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPlayerControllers != nullptr)
		*OutPlayerControllers = std::move(Parms.OutPlayerControllers);
}


// Function AJB.AJBUtilityFunctionLibrary.GetNPCAJBCharacterInfoList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FAJBCharacterInfo>        OutCharacterInfoList                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAJBUtilityFunctionLibrary::GetNPCAJBCharacterInfoList(const class UObject* WorldContextObject, TArray<struct FAJBCharacterInfo>* OutCharacterInfoList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "GetNPCAJBCharacterInfoList");

	Params::AJBUtilityFunctionLibrary_GetNPCAJBCharacterInfoList Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCharacterInfoList != nullptr)
		*OutCharacterInfoList = std::move(Parms.OutCharacterInfoList);
}


// Function AJB.AJBUtilityFunctionLibrary.HasGameplayTagFromStaticMesh
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UStaticMesh*                      TargetStaticMesh                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     TagToCheck                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExactMatch                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBUtilityFunctionLibrary::HasGameplayTagFromStaticMesh(class UStaticMesh* TargetStaticMesh, const struct FGameplayTag& TagToCheck, bool bExactMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "HasGameplayTagFromStaticMesh");

	Params::AJBUtilityFunctionLibrary_HasGameplayTagFromStaticMesh Parms{};

	Parms.TargetStaticMesh = TargetStaticMesh;
	Parms.TagToCheck = std::move(TagToCheck);
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.IsAJBArcadeTerminateGame
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBUtilityFunctionLibrary::IsAJBArcadeTerminateGame(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "IsAJBArcadeTerminateGame");

	Params::AJBUtilityFunctionLibrary_IsAJBArcadeTerminateGame Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.IsAJBOfflineMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBUtilityFunctionLibrary::IsAJBOfflineMode(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "IsAJBOfflineMode");

	Params::AJBUtilityFunctionLibrary_IsAJBOfflineMode Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.IsCommandlet
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBUtilityFunctionLibrary::IsCommandlet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "IsCommandlet");

	Params::AJBUtilityFunctionLibrary_IsCommandlet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.IsDistribution
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBUtilityFunctionLibrary::IsDistribution()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "IsDistribution");

	Params::AJBUtilityFunctionLibrary_IsDistribution Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.IsEditor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBUtilityFunctionLibrary::IsEditor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "IsEditor");

	Params::AJBUtilityFunctionLibrary_IsEditor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.IsEditorPreview
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBUtilityFunctionLibrary::IsEditorPreview(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "IsEditorPreview");

	Params::AJBUtilityFunctionLibrary_IsEditorPreview Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.IsEnableGachaSchedule
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBUtilityFunctionLibrary::IsEnableGachaSchedule(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "IsEnableGachaSchedule");

	Params::AJBUtilityFunctionLibrary_IsEnableGachaSchedule Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.IsShipping
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBUtilityFunctionLibrary::IsShipping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "IsShipping");

	Params::AJBUtilityFunctionLibrary_IsShipping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.IsStandalone
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBUtilityFunctionLibrary::IsStandalone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "IsStandalone");

	Params::AJBUtilityFunctionLibrary_IsStandalone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.IsTestBuild
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBUtilityFunctionLibrary::IsTestBuild()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "IsTestBuild");

	Params::AJBUtilityFunctionLibrary_IsTestBuild Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.LoadTexture2DFromDisk
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           FullFilePath                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAJBImageFormatType                     ImageFormat                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOutValid                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutWidth                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutHeight                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UAJBUtilityFunctionLibrary::LoadTexture2DFromDisk(const class FString& FullFilePath, const class FString& Filename, EAJBImageFormatType ImageFormat, bool* bOutValid, int32* OutWidth, int32* OutHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "LoadTexture2DFromDisk");

	Params::AJBUtilityFunctionLibrary_LoadTexture2DFromDisk Parms{};

	Parms.FullFilePath = std::move(FullFilePath);
	Parms.Filename = std::move(Filename);
	Parms.ImageFormat = ImageFormat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutValid != nullptr)
		*bOutValid = Parms.bOutValid;

	if (OutWidth != nullptr)
		*OutWidth = Parms.OutWidth;

	if (OutHeight != nullptr)
		*OutHeight = Parms.OutHeight;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.MakeGameplayTagByName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           TagName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ErrorIfNotFound                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     OutTag                                                 (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBUtilityFunctionLibrary::MakeGameplayTagByName(const class FString& TagName, bool ErrorIfNotFound, struct FGameplayTag* OutTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "MakeGameplayTagByName");

	Params::AJBUtilityFunctionLibrary_MakeGameplayTagByName Parms{};

	Parms.TagName = std::move(TagName);
	Parms.ErrorIfNotFound = ErrorIfNotFound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTag != nullptr)
		*OutTag = std::move(Parms.OutTag);

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.NewObjectFromBlueprint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           InClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UAJBUtilityFunctionLibrary::NewObjectFromBlueprint(class UObject* WorldContextObject, class UClass* InClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "NewObjectFromBlueprint");

	Params::AJBUtilityFunctionLibrary_NewObjectFromBlueprint Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InClass = InClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBUtilityFunctionLibrary.ParseStringToDateTime
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FDateTime                        OutDateTime                                            (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InDateTimeString                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBUtilityFunctionLibrary::ParseStringToDateTime(struct FDateTime* OutDateTime, const class FString& InDateTimeString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "ParseStringToDateTime");

	Params::AJBUtilityFunctionLibrary_ParseStringToDateTime Parms{};

	Parms.InDateTimeString = std::move(InDateTimeString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDateTime != nullptr)
		*OutDateTime = std::move(Parms.OutDateTime);
}


// Function AJB.AJBUtilityFunctionLibrary.ParseStringToScheduleDateTime
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FDateTime                        OutDateTime                                            (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InDateTimeString                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBUtilityFunctionLibrary::ParseStringToScheduleDateTime(struct FDateTime* OutDateTime, const class FString& InDateTimeString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "ParseStringToScheduleDateTime");

	Params::AJBUtilityFunctionLibrary_ParseStringToScheduleDateTime Parms{};

	Parms.InDateTimeString = std::move(InDateTimeString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDateTime != nullptr)
		*OutDateTime = std::move(Parms.OutDateTime);
}


// Function AJB.AJBUtilityFunctionLibrary.Screenshot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           InFilename                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInShowUI                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBUtilityFunctionLibrary::Screenshot(const class FString& InFilename, bool bInShowUI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "Screenshot");

	Params::AJBUtilityFunctionLibrary_Screenshot Parms{};

	Parms.InFilename = std::move(InFilename);
	Parms.bInShowUI = bInShowUI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBUtilityFunctionLibrary.SetAJBArcadeGameCoinLock
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLock                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBUtilityFunctionLibrary::SetAJBArcadeGameCoinLock(const class UObject* WorldContextObject, bool bLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "SetAJBArcadeGameCoinLock");

	Params::AJBUtilityFunctionLibrary_SetAJBArcadeGameCoinLock Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bLock = bLock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBUtilityFunctionLibrary.SetConnectionTimeout
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewTimeSec                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBUtilityFunctionLibrary::SetConnectionTimeout(const class UObject* WorldContextObject, float NewTimeSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "SetConnectionTimeout");

	Params::AJBUtilityFunctionLibrary_SetConnectionTimeout Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NewTimeSec = NewTimeSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBUtilityFunctionLibrary.SetInitialConnectTimeout
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewTimeSec                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBUtilityFunctionLibrary::SetInitialConnectTimeout(const class UObject* WorldContextObject, float NewTimeSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "SetInitialConnectTimeout");

	Params::AJBUtilityFunctionLibrary_SetInitialConnectTimeout Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NewTimeSec = NewTimeSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBUtilityFunctionLibrary.TryGetOwnerOfClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           InClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UAJBUtilityFunctionLibrary::TryGetOwnerOfClass(class AActor* InActor, class UClass* InClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBUtilityFunctionLibrary", "TryGetOwnerOfClass");

	Params::AJBUtilityFunctionLibrary_TryGetOwnerOfClass Parms{};

	Parms.InActor = InActor;
	Parms.InClass = InClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBVersion.GetBuildDate
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBVersion::GetBuildDate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBVersion", "GetBuildDate");

	Params::AJBVersion_GetBuildDate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBVersion.GetBuildName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBVersion::GetBuildName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBVersion", "GetBuildName");

	Params::AJBVersion_GetBuildName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBVersion.GetVersionNumber
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAJBVersion::GetVersionNumber()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBVersion", "GetVersionNumber");

	Params::AJBVersion_GetVersionNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBVideoRecorder.CreateDummyMovieData
// (Final, Native, Public, BlueprintCallable)

void AAJBVideoRecorder::CreateDummyMovieData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBVideoRecorder", "CreateDummyMovieData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBVideoRecorder.CreateThumbnailData
// (Final, Native, Public, BlueprintCallable)

void AAJBVideoRecorder::CreateThumbnailData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBVideoRecorder", "CreateThumbnailData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBVideoRecorder.FinalizeAviWriter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBVideoRecorder::FinalizeAviWriter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBVideoRecorder", "FinalizeAviWriter");

	Params::AJBVideoRecorder_FinalizeAviWriter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBVideoRecorder.GetProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AAJBVideoRecorder::GetProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBVideoRecorder", "GetProgress");

	Params::AJBVideoRecorder_GetProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBVideoRecorder.GetThumbnailData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FColor>                   Color                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   Width                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Height                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAJBVideoRecorder::GetThumbnailData(TArray<struct FColor>* Color, int32* Width, int32* Height, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBVideoRecorder", "GetThumbnailData");

	Params::AJBVideoRecorder_GetThumbnailData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Color != nullptr)
		*Color = std::move(Parms.Color);

	if (Width != nullptr)
		*Width = Parms.Width;

	if (Height != nullptr)
		*Height = Parms.Height;

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function AJB.AJBVideoRecorder.GetThumbnailTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* AAJBVideoRecorder::GetThumbnailTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBVideoRecorder", "GetThumbnailTexture");

	Params::AJBVideoRecorder_GetThumbnailTexture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBVideoRecorder.OnTryToTransitTestModeDuringCreatingMovie
// (Final, Native, Private)

void AAJBVideoRecorder::OnTryToTransitTestModeDuringCreatingMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBVideoRecorder", "OnTryToTransitTestModeDuringCreatingMovie");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBVideoRecorder.RequestCreatingMovieData
// (Final, Native, Public, BlueprintCallable)

void AAJBVideoRecorder::RequestCreatingMovieData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBVideoRecorder", "RequestCreatingMovieData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBVideoRecorder.StartCapture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAJBVideoRecorder::StartCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBVideoRecorder", "StartCapture");

	Params::AJBVideoRecorder_StartCapture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBVideoRecorder.StopCapture
// (Final, Native, Public, BlueprintCallable)

void AAJBVideoRecorder::StopCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBVideoRecorder", "StopCapture");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBWindowWidget.CallClosedWindowEvent
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bChangedCollapsedWindow                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBWindowWidget::CallClosedWindowEvent(bool bChangedCollapsedWindow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBWindowWidget", "CallClosedWindowEvent");

	Params::AJBWindowWidget_CallClosedWindowEvent Parms{};

	Parms.bChangedCollapsedWindow = bChangedCollapsedWindow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBWindowWidget.CallOpenedWindowEvent
// (Native, Public, BlueprintCallable)

void UAJBWindowWidget::CallOpenedWindowEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBWindowWidget", "CallOpenedWindowEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBWindowWidget.CloseWindow
// (Native, Public, BlueprintCallable)

void UAJBWindowWidget::CloseWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBWindowWidget", "CloseWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBWindowWidget.CurveAnimationFinishDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UWidget*                          AnimWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimSequence                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBWindowWidget::CurveAnimationFinishDelegate(TDelegate<void()> Delegate, class UWidget* AnimWidget, int32 AnimSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBWindowWidget", "CurveAnimationFinishDelegate");

	Params::AJBWindowWidget_CurveAnimationFinishDelegate Parms{};

	Parms.Delegate = Delegate;
	Parms.AnimWidget = AnimWidget;
	Parms.AnimSequence = AnimSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBWindowWidget.IsPlayingCurveAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWidget*                          AnimWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimSequence                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBWindowWidget::IsPlayingCurveAnimation(class UWidget* AnimWidget, int32 AnimSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBWindowWidget", "IsPlayingCurveAnimation");

	Params::AJBWindowWidget_IsPlayingCurveAnimation Parms{};

	Parms.AnimWidget = AnimWidget;
	Parms.AnimSequence = AnimSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJBWindowWidget.OnClosingWindow
// (Event, Public, BlueprintEvent)

void UAJBWindowWidget::OnClosingWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBWindowWidget", "OnClosingWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBWindowWidget.OnOpeningWindow
// (Event, Public, BlueprintEvent)

void UAJBWindowWidget::OnOpeningWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBWindowWidget", "OnOpeningWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AJB.AJBWindowWidget.OpenWindow
// (Native, Public, BlueprintCallable)

void UAJBWindowWidget::OpenWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBWindowWidget", "OpenWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBWindowWidget.OverrideCreditDisplayType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAJBCreditDisplayType                   Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBWindowWidget::OverrideCreditDisplayType(EAJBCreditDisplayType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBWindowWidget", "OverrideCreditDisplayType");

	Params::AJBWindowWidget_OverrideCreditDisplayType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBWindowWidget.OverrideErrorWindowFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewFlag                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBWindowWidget::OverrideErrorWindowFlag(bool bNewFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBWindowWidget", "OverrideErrorWindowFlag");

	Params::AJBWindowWidget_OverrideErrorWindowFlag Parms{};

	Parms.bNewFlag = bNewFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBWindowWidget.PlayCurveAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          AnimWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimSequence                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayingCheck                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUMGSequencePlayMode                    PlayMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoopToPlay                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBWindowWidget::PlayCurveAnimation(class UWidget* AnimWidget, int32 AnimSequence, bool bPlayingCheck, EUMGSequencePlayMode PlayMode, int32 NumLoopToPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBWindowWidget", "PlayCurveAnimation");

	Params::AJBWindowWidget_PlayCurveAnimation Parms{};

	Parms.AnimWidget = AnimWidget;
	Parms.AnimSequence = AnimSequence;
	Parms.bPlayingCheck = bPlayingCheck;
	Parms.PlayMode = PlayMode;
	Parms.NumLoopToPlay = NumLoopToPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBWindowWidget.RegisterCurve_Angle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          AnimWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      Curve                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimSequence                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBWindowWidget::RegisterCurve_Angle(class UWidget* AnimWidget, class UCurveFloat* Curve, int32 AnimSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBWindowWidget", "RegisterCurve_Angle");

	Params::AJBWindowWidget_RegisterCurve_Angle Parms{};

	Parms.AnimWidget = AnimWidget;
	Parms.Curve = Curve;
	Parms.AnimSequence = AnimSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBWindowWidget.RegisterCurve_Scale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          AnimWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveBase*                       Curve                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimSequence                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBWindowWidget::RegisterCurve_Scale(class UWidget* AnimWidget, class UCurveBase* Curve, int32 AnimSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBWindowWidget", "RegisterCurve_Scale");

	Params::AJBWindowWidget_RegisterCurve_Scale Parms{};

	Parms.AnimWidget = AnimWidget;
	Parms.Curve = Curve;
	Parms.AnimSequence = AnimSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBWindowWidget.RegisterCurve_Trans
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          AnimWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveVector*                     CurveVector                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimSequence                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBWindowWidget::RegisterCurve_Trans(class UWidget* AnimWidget, class UCurveVector* CurveVector, int32 AnimSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBWindowWidget", "RegisterCurve_Trans");

	Params::AJBWindowWidget_RegisterCurve_Trans Parms{};

	Parms.AnimWidget = AnimWidget;
	Parms.CurveVector = CurveVector;
	Parms.AnimSequence = AnimSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBWindowWidget.RegisterCurve_TransX
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          AnimWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      Curve                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimSequence                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBWindowWidget::RegisterCurve_TransX(class UWidget* AnimWidget, class UCurveFloat* Curve, int32 AnimSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBWindowWidget", "RegisterCurve_TransX");

	Params::AJBWindowWidget_RegisterCurve_TransX Parms{};

	Parms.AnimWidget = AnimWidget;
	Parms.Curve = Curve;
	Parms.AnimSequence = AnimSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBWindowWidget.RegisterCurve_TransY
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          AnimWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      Curve                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimSequence                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBWindowWidget::RegisterCurve_TransY(class UWidget* AnimWidget, class UCurveFloat* Curve, int32 AnimSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBWindowWidget", "RegisterCurve_TransY");

	Params::AJBWindowWidget_RegisterCurve_TransY Parms{};

	Parms.AnimWidget = AnimWidget;
	Parms.Curve = Curve;
	Parms.AnimSequence = AnimSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBWindowWidget.StopCurveAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          AnimWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimSequence                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAJBWindowWidget::StopCurveAnimation(class UWidget* AnimWidget, int32 AnimSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJBWindowWidget", "StopCurveAnimation");

	Params::AJBWindowWidget_StopCurveAnimation Parms{};

	Parms.AnimWidget = AnimWidget;
	Parms.AnimSequence = AnimSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.AJBWinPlatformUtils.IsConnectTouchPanel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAJBWinPlatformUtils::IsConnectTouchPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AJBWinPlatformUtils", "IsConnectTouchPanel");

	Params::AJBWinPlatformUtils_IsConnectTouchPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.AJB_HighlightSpringArmComponent.SetTargetRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         DesireRot                                              (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UAJB_HighlightSpringArmComponent::SetTargetRotation(const struct FRotator& DesireRot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AJB_HighlightSpringArmComponent", "SetTargetRotation");

	Params::AJB_HighlightSpringArmComponent_SetTargetRotation Parms{};

	Parms.DesireRot = std::move(DesireRot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.EventTagLocker.RequestLockWithTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     EventTagIn                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEventTagLocker::RequestLockWithTag(const struct FGameplayTag& EventTagIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventTagLocker", "RequestLockWithTag");

	Params::EventTagLocker_RequestLockWithTag Parms{};

	Parms.EventTagIn = std::move(EventTagIn);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.EventTagLocker.RequestUnlock
// (Final, Native, Public, BlueprintCallable)

void AEventTagLocker::RequestUnlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventTagLocker", "RequestUnlock");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.EventTagLocker.SetHolder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AEventTagLockHolder*              HolderRefIn                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEventTagLocker::SetHolder(class AEventTagLockHolder* HolderRefIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventTagLocker", "SetHolder");

	Params::EventTagLocker_SetHolder Parms{};

	Parms.HolderRefIn = HolderRefIn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.EventTagLocker.IsEventTagLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEventTagLocker::IsEventTagLocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventTagLocker", "IsEventTagLocked");

	Params::EventTagLocker_IsEventTagLocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.EventTagLocker.IsLockRequesting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEventTagLocker::IsLockRequesting() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventTagLocker", "IsLockRequesting");

	Params::EventTagLocker_IsLockRequesting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.EventTagLocker.IsValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEventTagLocker::IsValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventTagLocker", "IsValid");

	Params::EventTagLocker_IsValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.EventTagLockHolder.GetLockedEventTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer AEventTagLockHolder::GetLockedEventTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventTagLockHolder", "GetLockedEventTags");

	Params::EventTagLockHolder_GetLockedEventTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.EventTagLockHolder.IsLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     EventTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExactMatch                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEventTagLockHolder::IsLocked(const struct FGameplayTag& EventTag, bool bExactMatch) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventTagLockHolder", "IsLocked");

	Params::EventTagLockHolder_IsLocked Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.EventTagLockHolder.LockedCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     EventTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExactMatch                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEventTagLockHolder::LockedCount(const struct FGameplayTag& EventTag, bool bExactMatch) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventTagLockHolder", "LockedCount");

	Params::EventTagLockHolder_LockedCount Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.FadeInActionProxy.FadeIn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OverrideFadeTime                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFadeInActionProxy*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFadeInActionProxy* UFadeInActionProxy::FadeIn(class UObject* WorldContextObject, const float OverrideFadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FadeInActionProxy", "FadeIn");

	Params::FadeInActionProxy_FadeIn Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OverrideFadeTime = OverrideFadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.FadeInActionProxy.OnEndFade
// (Final, Native, Private)
// Parameters:
// EAJBFadeType                            Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFadeInActionProxy::OnEndFade(EAJBFadeType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FadeInActionProxy", "OnEndFade");

	Params::FadeInActionProxy_OnEndFade Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.FadeOutActionProxy.FadeOut
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OverrideFadeTime                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFadeOutActionProxy*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFadeOutActionProxy* UFadeOutActionProxy::FadeOut(class UObject* WorldContextObject, const float OverrideFadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FadeOutActionProxy", "FadeOut");

	Params::FadeOutActionProxy_FadeOut Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OverrideFadeTime = OverrideFadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AJB.FadeOutActionProxy.OnEndFade
// (Final, Native, Private)
// Parameters:
// EAJBFadeType                            Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFadeOutActionProxy::OnEndFade(EAJBFadeType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FadeOutActionProxy", "OnEndFade");

	Params::FadeOutActionProxy_OnEndFade Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AJB.VictoryShotCapture.Capture
// (Final, Native, Public, BlueprintCallable)

void AVictoryShotCapture::Capture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VictoryShotCapture", "Capture");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AJB.VictoryShotCapture.GetColorBuffer
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Width_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Height_0                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FColor>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FColor> AVictoryShotCapture::GetColorBuffer(int32* Width_0, int32* Height_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VictoryShotCapture", "GetColorBuffer");

	Params::VictoryShotCapture_GetColorBuffer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Width_0 != nullptr)
		*Width_0 = Parms.Width_0;

	if (Height_0 != nullptr)
		*Height_0 = Parms.Height_0;

	return Parms.ReturnValue;
}


// Function AJB.VictoryShotCapture.Init
// (Final, Native, Public, BlueprintCallable)

void AVictoryShotCapture::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VictoryShotCapture", "Init");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}


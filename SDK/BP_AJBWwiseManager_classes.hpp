#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBWwiseManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_WwiseManagerPlayMode_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBWwiseManager.BP_AJBWwiseManager_C
// 0x0018 (0x0340 - 0x0328)
class ABP_AJBWwiseManager_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowDebugPrint;                                   // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	E_WwiseManagerPlayMode                        PlayMode;                                          // 0x0339(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBWwiseManager(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ROS_PostWwiseEventAttached(const struct FGameplayTag& EventTag, const struct FVector& Location, bool bKeepRelative, class USceneComponent* SceneComponentToAttach);
	void ROC_PostWwiseEventAttached(const struct FGameplayTag& EventTag, const struct FVector& Location, bool bKeepRelative, class USceneComponent* SceneComponentToAttach);
	void ROS_PostWwiseEvent(const struct FGameplayTag& EventTag, const struct FVector& Location);
	void ROC_PostWwiseEvent(const struct FGameplayTag& EventTag, const struct FVector& Location);
	void UserConstructionScript();
	void PostWwiseEventOnLocal(const struct FGameplayTag& EventTag, const struct FVector& Location, bool AutoPost, bool AutoDestroy, class UAkComponent** AkComponent);
	void GetWwiseEventInfo(const struct FGameplayTag& EventTag, struct FST_WwiseEventInfo* WwiseEventInfo);
	void PostWwiseEventAttachedOnLocal(const struct FGameplayTag& EventTag, const struct FVector& Location, bool AutoPost, bool AutoDestroy, bool bKeepRelative, class USceneComponent* SceneComponentToAttach, class UAkComponent** AkComponent);
	void PostWwiseEventOnAll(const struct FGameplayTag& EventTag, const struct FVector& Location);
	void PostWwiseEventAttachedOnAll(const struct FGameplayTag& EventTag, const struct FVector& Location, bool bKeepRelative, class USceneComponent* SceneComponentToAttach);
	void PostWwiseBGMEvent(const struct FGameplayTag& EventTag, bool bShouldPlayFromStart);
	void StopWwiseBGMEvent();
	void ChangePlayMode(E_WwiseManagerPlayMode PlayMode_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBWwiseManager_C">();
	}
	static class ABP_AJBWwiseManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBWwiseManager_C>();
	}
};
static_assert(alignof(ABP_AJBWwiseManager_C) == 0x000008, "Wrong alignment on ABP_AJBWwiseManager_C");
static_assert(sizeof(ABP_AJBWwiseManager_C) == 0x000340, "Wrong size on ABP_AJBWwiseManager_C");
static_assert(offsetof(ABP_AJBWwiseManager_C, UberGraphFrame) == 0x000328, "Member 'ABP_AJBWwiseManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AJBWwiseManager_C, DefaultSceneRoot) == 0x000330, "Member 'ABP_AJBWwiseManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_AJBWwiseManager_C, bShowDebugPrint) == 0x000338, "Member 'ABP_AJBWwiseManager_C::bShowDebugPrint' has a wrong offset!");
static_assert(offsetof(ABP_AJBWwiseManager_C, PlayMode) == 0x000339, "Member 'ABP_AJBWwiseManager_C::PlayMode' has a wrong offset!");

}


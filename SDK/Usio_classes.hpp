#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Usio

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "Usio_structs.hpp"


namespace SDK
{

// Class Usio.UsioFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UUsioFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void ClearUsioSram();
	static bool CloseUsio();
	static int32 DecCoin(int32 Slot, int32 Count);
	static int32 DecService(int32 Slot, int32 Count);
	static int32 GetCoin(int32 Slot);
	static ECoinError GetCoinError(int32 Slot);
	static uint8 GetCoinLock(uint8 Channel);
	static int32 GetConnectCount();
	static int32 GetErrorCount();
	static class FString GetIoBoardName();
	static int32 GetService(int32 Slot);
	static ECoinError GetServiceError(int32 Slot);
	static int32 GetUsioAnalogIn(int32 ChannelNo);
	static int32 GetUsioEncoder();
	static bool GetUsioSwitchIn(EUsioInputKeyNames UsioInputKey);
	static void GetUsioSystemError(bool* bBackupError, bool* bFirmwareError, bool* bMemoryError, bool* bOtherError);
	static bool IsUsioConnected();
	static bool OpenUsio(int32 ThreadPriority);
	static int32 ResetCoin();
	static void ResetUsioBoard();
	static void SetAnalogCenter(int32 ChannelNo, int32 Center);
	static void SetAnalogPlayHigh(int32 ChannelNo, float High);
	static void SetAnalogPlayLow(int32 ChannelNo, float Low);
	static void SetAnalogRange(int32 ChannelNo, int32 Min, int32 Max);
	static bool SetCoinLock(uint8 Channel, uint8 Value);
	static int32 SetUsioGout(int32 ChannelNo, int32 OutValue);
	static void SetUsioPLCounter(int32 TimeoutMilliseconds);
	static bool SetUsioSystemError(int32 ErrorBit);
	static bool SetUsioSystemErrorByBool(bool bBackupError, bool bFirmwareError, bool bMemoryError);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UsioFunctionLibrary">();
	}
	static class UUsioFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUsioFunctionLibrary>();
	}
};
static_assert(alignof(UUsioFunctionLibrary) == 0x000008, "Wrong alignment on UUsioFunctionLibrary");
static_assert(sizeof(UUsioFunctionLibrary) == 0x000028, "Wrong size on UUsioFunctionLibrary");

}


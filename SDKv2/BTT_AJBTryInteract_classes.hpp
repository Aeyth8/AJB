#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_AJBTryInteract

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_AJBTryInteract.BTT_AJBTryInteract_C
// 0x0158 (0x01F8 - 0x00A0)
class UBTT_AJBTryInteract_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 RO_InteractTargetActorKey;                         // 0x00A8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FBlackboardKeySelector                 RO_OriginToInteractGateKey;                        // 0x00D0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FBlackboardKeySelector                 RO_GateDestinationKey;                             // 0x00F8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FBlackboardKeySelector                 InputDestinationKey;                               // 0x0120(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FBlackboardKeySelector                 InputLookForDirKey;                                // 0x0148(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	float                                         YawThreshold;                                      // 0x0170(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameAIImaginaryCharacter_C*    ImaginaryCharacterSelf;                            // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InteractTargetActor;                               // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PitchThreshold;                                    // 0x0188(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InteractOrigin;                                    // 0x018C(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InteractDirection;                                 // 0x0198(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          InteractTrigger;                                   // 0x01A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeLimit;                                         // 0x01B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugDrawOnTask_Cache;                            // 0x01B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBGate_C*                          InteractTargetActorAsDoor;                         // 0x01B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIRecognition_C*           Recognition;                                       // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIInputProxy_C*            Input;                                             // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInteractable;                                     // 0x01D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameAIImaginaryCharacter_C*    InteractTargetAsImaginaryCharacter;                // 0x01D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLongInteract;                                     // 0x01E0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LongInteractDuration;                              // 0x01E4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInteractToDeadCharacter;                        // 0x01E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          MyAIController;                                    // 0x01F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTT_AJBTryInteract(int32 EntryPoint);
	void AimToLivingPlayer();
	void AimToInteractTrigger();
	void AimToDeadCharacter();
	void TryTriggerInteract();
	void TryLongInteract();
	void CloseGateMoveAround();
	void OpenGateMoveAround();
	void MoveAround();
	void CleanUp();
	void ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void OnInteractActorChanged(class AActor* InteractActor);
	void TryInteract(class AActor* TargetActor);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_AJBTryInteract_C">();
	}
	static class UBTT_AJBTryInteract_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_AJBTryInteract_C>();
	}
};
static_assert(alignof(UBTT_AJBTryInteract_C) == 0x000008, "Wrong alignment on UBTT_AJBTryInteract_C");
static_assert(sizeof(UBTT_AJBTryInteract_C) == 0x0001F8, "Wrong size on UBTT_AJBTryInteract_C");
static_assert(offsetof(UBTT_AJBTryInteract_C, UberGraphFrame) == 0x0000A0, "Member 'UBTT_AJBTryInteract_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, RO_InteractTargetActorKey) == 0x0000A8, "Member 'UBTT_AJBTryInteract_C::RO_InteractTargetActorKey' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, RO_OriginToInteractGateKey) == 0x0000D0, "Member 'UBTT_AJBTryInteract_C::RO_OriginToInteractGateKey' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, RO_GateDestinationKey) == 0x0000F8, "Member 'UBTT_AJBTryInteract_C::RO_GateDestinationKey' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, InputDestinationKey) == 0x000120, "Member 'UBTT_AJBTryInteract_C::InputDestinationKey' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, InputLookForDirKey) == 0x000148, "Member 'UBTT_AJBTryInteract_C::InputLookForDirKey' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, YawThreshold) == 0x000170, "Member 'UBTT_AJBTryInteract_C::YawThreshold' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, ImaginaryCharacterSelf) == 0x000178, "Member 'UBTT_AJBTryInteract_C::ImaginaryCharacterSelf' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, InteractTargetActor) == 0x000180, "Member 'UBTT_AJBTryInteract_C::InteractTargetActor' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, PitchThreshold) == 0x000188, "Member 'UBTT_AJBTryInteract_C::PitchThreshold' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, InteractOrigin) == 0x00018C, "Member 'UBTT_AJBTryInteract_C::InteractOrigin' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, InteractDirection) == 0x000198, "Member 'UBTT_AJBTryInteract_C::InteractDirection' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, InteractTrigger) == 0x0001A8, "Member 'UBTT_AJBTryInteract_C::InteractTrigger' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, TimeLimit) == 0x0001B0, "Member 'UBTT_AJBTryInteract_C::TimeLimit' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, bDebugDrawOnTask_Cache) == 0x0001B4, "Member 'UBTT_AJBTryInteract_C::bDebugDrawOnTask_Cache' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, InteractTargetActorAsDoor) == 0x0001B8, "Member 'UBTT_AJBTryInteract_C::InteractTargetActorAsDoor' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, Recognition) == 0x0001C0, "Member 'UBTT_AJBTryInteract_C::Recognition' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, Input) == 0x0001C8, "Member 'UBTT_AJBTryInteract_C::Input' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, bInteractable) == 0x0001D0, "Member 'UBTT_AJBTryInteract_C::bInteractable' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, InteractTargetAsImaginaryCharacter) == 0x0001D8, "Member 'UBTT_AJBTryInteract_C::InteractTargetAsImaginaryCharacter' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, bLongInteract) == 0x0001E0, "Member 'UBTT_AJBTryInteract_C::bLongInteract' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, LongInteractDuration) == 0x0001E4, "Member 'UBTT_AJBTryInteract_C::LongInteractDuration' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, bIsInteractToDeadCharacter) == 0x0001E8, "Member 'UBTT_AJBTryInteract_C::bIsInteractToDeadCharacter' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTryInteract_C, MyAIController) == 0x0001F0, "Member 'UBTT_AJBTryInteract_C::MyAIController' has a wrong offset!");

}


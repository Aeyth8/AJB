#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBCharacterBehaviorManager

#include "Basic.hpp"

#include "AJB_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBCharacterBehaviorManager.BP_AJBCharacterBehaviorManager_C.OnCharacterBehaviorChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBCharacterBehaviorManager_C_OnCharacterBehaviorChanged__DelegateSignature final
{
public:
	class ABP_AJBInGameCharacter_C*               TargetCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      PrevBehavior;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      NextBehavior;                                      // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCharacterBehaviorManager_C_OnCharacterBehaviorChanged__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBCharacterBehaviorManager_C_OnCharacterBehaviorChanged__DelegateSignature");
static_assert(sizeof(BP_AJBCharacterBehaviorManager_C_OnCharacterBehaviorChanged__DelegateSignature) == 0x000010, "Wrong size on BP_AJBCharacterBehaviorManager_C_OnCharacterBehaviorChanged__DelegateSignature");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_OnCharacterBehaviorChanged__DelegateSignature, TargetCharacter) == 0x000000, "Member 'BP_AJBCharacterBehaviorManager_C_OnCharacterBehaviorChanged__DelegateSignature::TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_OnCharacterBehaviorChanged__DelegateSignature, PrevBehavior) == 0x000008, "Member 'BP_AJBCharacterBehaviorManager_C_OnCharacterBehaviorChanged__DelegateSignature::PrevBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_OnCharacterBehaviorChanged__DelegateSignature, NextBehavior) == 0x000009, "Member 'BP_AJBCharacterBehaviorManager_C_OnCharacterBehaviorChanged__DelegateSignature::NextBehavior' has a wrong offset!");

// Function BP_AJBCharacterBehaviorManager.BP_AJBCharacterBehaviorManager_C.ExecuteUbergraph_BP_AJBCharacterBehaviorManager
// 0x0060 (0x0060 - 0x0000)
struct BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      K2Node_CustomEvent_PrevBehavior2;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      K2Node_CustomEvent_NextBehavior2;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      K2Node_CustomEvent_PrevBehavior;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      K2Node_CustomEvent_NextBehavior;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      K2Node_CustomEvent_PrevBehavior1;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      K2Node_CustomEvent_NextBehavior1;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      K2Node_CustomEvent_NextBehavior3;                  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base1;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager) == 0x000008, "Wrong alignment on BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager");
static_assert(sizeof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager) == 0x000060, "Wrong size on BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager, EntryPoint) == 0x000000, "Member 'BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager, K2Node_DynamicCast_AsAJBIn_Game_Character_Base) == 0x000010, "Member 'BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager::K2Node_DynamicCast_AsAJBIn_Game_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager, CallFunc_HasLocalSharedController_ReturnValue) == 0x000019, "Member 'BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager, K2Node_Event_DeltaSeconds) == 0x00001C, "Member 'BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager, K2Node_CustomEvent_PrevBehavior2) == 0x000020, "Member 'BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager::K2Node_CustomEvent_PrevBehavior2' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager, K2Node_CustomEvent_NextBehavior2) == 0x000021, "Member 'BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager::K2Node_CustomEvent_NextBehavior2' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager, K2Node_CustomEvent_PrevBehavior) == 0x000022, "Member 'BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager::K2Node_CustomEvent_PrevBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager, K2Node_CustomEvent_NextBehavior) == 0x000023, "Member 'BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager::K2Node_CustomEvent_NextBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager, K2Node_CustomEvent_PrevBehavior1) == 0x000024, "Member 'BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager::K2Node_CustomEvent_PrevBehavior1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager, K2Node_CustomEvent_NextBehavior1) == 0x000025, "Member 'BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager::K2Node_CustomEvent_NextBehavior1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager, K2Node_CustomEvent_NextBehavior3) == 0x000026, "Member 'BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager::K2Node_CustomEvent_NextBehavior3' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager, CallFunc_GetOwner_ReturnValue1) == 0x000028, "Member 'BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000030, "Member 'BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager, K2Node_DynamicCast_AsAJBIn_Game_Character_Base1) == 0x000038, "Member 'BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager::K2Node_DynamicCast_AsAJBIn_Game_Character_Base1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager, K2Node_DynamicCast_bSuccess1) == 0x000040, "Member 'BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager, CallFunc_HasLocalSharedController_ReturnValue1) == 0x000041, "Member 'BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager, CallFunc_GetOwner_ReturnValue2) == 0x000048, "Member 'BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000050, "Member 'BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager, K2Node_DynamicCast_bSuccess2) == 0x000058, "Member 'BP_AJBCharacterBehaviorManager_C_ExecuteUbergraph_BP_AJBCharacterBehaviorManager::K2Node_DynamicCast_bSuccess2' has a wrong offset!");

// Function BP_AJBCharacterBehaviorManager.BP_AJBCharacterBehaviorManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBCharacterBehaviorManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCharacterBehaviorManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBCharacterBehaviorManager_C_ReceiveTick");
static_assert(sizeof(BP_AJBCharacterBehaviorManager_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBCharacterBehaviorManager_C_ReceiveTick");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBCharacterBehaviorManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBCharacterBehaviorManager.BP_AJBCharacterBehaviorManager_C.OnBehaviorChanged
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBCharacterBehaviorManager_C_OnBehaviorChanged final
{
public:
	ECharacterActiveBehavior                      PrevBehavior;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      NextBehavior;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCharacterBehaviorManager_C_OnBehaviorChanged) == 0x000001, "Wrong alignment on BP_AJBCharacterBehaviorManager_C_OnBehaviorChanged");
static_assert(sizeof(BP_AJBCharacterBehaviorManager_C_OnBehaviorChanged) == 0x000002, "Wrong size on BP_AJBCharacterBehaviorManager_C_OnBehaviorChanged");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_OnBehaviorChanged, PrevBehavior) == 0x000000, "Member 'BP_AJBCharacterBehaviorManager_C_OnBehaviorChanged::PrevBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_OnBehaviorChanged, NextBehavior) == 0x000001, "Member 'BP_AJBCharacterBehaviorManager_C_OnBehaviorChanged::NextBehavior' has a wrong offset!");

// Function BP_AJBCharacterBehaviorManager.BP_AJBCharacterBehaviorManager_C.MC_ChangeBehavior
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBCharacterBehaviorManager_C_MC_ChangeBehavior final
{
public:
	ECharacterActiveBehavior                      PrevBehavior;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      NextBehavior;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCharacterBehaviorManager_C_MC_ChangeBehavior) == 0x000001, "Wrong alignment on BP_AJBCharacterBehaviorManager_C_MC_ChangeBehavior");
static_assert(sizeof(BP_AJBCharacterBehaviorManager_C_MC_ChangeBehavior) == 0x000002, "Wrong size on BP_AJBCharacterBehaviorManager_C_MC_ChangeBehavior");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_MC_ChangeBehavior, PrevBehavior) == 0x000000, "Member 'BP_AJBCharacterBehaviorManager_C_MC_ChangeBehavior::PrevBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_MC_ChangeBehavior, NextBehavior) == 0x000001, "Member 'BP_AJBCharacterBehaviorManager_C_MC_ChangeBehavior::NextBehavior' has a wrong offset!");

// Function BP_AJBCharacterBehaviorManager.BP_AJBCharacterBehaviorManager_C.ROS_ChangeBehavior
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBCharacterBehaviorManager_C_ROS_ChangeBehavior final
{
public:
	ECharacterActiveBehavior                      PrevBehavior;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      NextBehavior;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCharacterBehaviorManager_C_ROS_ChangeBehavior) == 0x000001, "Wrong alignment on BP_AJBCharacterBehaviorManager_C_ROS_ChangeBehavior");
static_assert(sizeof(BP_AJBCharacterBehaviorManager_C_ROS_ChangeBehavior) == 0x000002, "Wrong size on BP_AJBCharacterBehaviorManager_C_ROS_ChangeBehavior");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ROS_ChangeBehavior, PrevBehavior) == 0x000000, "Member 'BP_AJBCharacterBehaviorManager_C_ROS_ChangeBehavior::PrevBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ROS_ChangeBehavior, NextBehavior) == 0x000001, "Member 'BP_AJBCharacterBehaviorManager_C_ROS_ChangeBehavior::NextBehavior' has a wrong offset!");

// Function BP_AJBCharacterBehaviorManager.BP_AJBCharacterBehaviorManager_C.ChangeBehavior_Local
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBCharacterBehaviorManager_C_ChangeBehavior_Local final
{
public:
	ECharacterActiveBehavior                      NextBehavior;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCharacterBehaviorManager_C_ChangeBehavior_Local) == 0x000001, "Wrong alignment on BP_AJBCharacterBehaviorManager_C_ChangeBehavior_Local");
static_assert(sizeof(BP_AJBCharacterBehaviorManager_C_ChangeBehavior_Local) == 0x000001, "Wrong size on BP_AJBCharacterBehaviorManager_C_ChangeBehavior_Local");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_ChangeBehavior_Local, NextBehavior) == 0x000000, "Member 'BP_AJBCharacterBehaviorManager_C_ChangeBehavior_Local::NextBehavior' has a wrong offset!");

// Function BP_AJBCharacterBehaviorManager.BP_AJBCharacterBehaviorManager_C.BehaviorChanged
// 0x01F0 (0x01F0 - 0x0000)
struct BP_AJBCharacterBehaviorManager_C_BehaviorChanged final
{
public:
	ECharacterActiveBehavior                      PrevBehavior;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      NextBehavior;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               OwnerCharacterBP;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_AJBSkillBase_C*>             CallFunc_GetComponentsByClass_ReturnValue;         // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSkillActive_IsActive;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AJBSkillBase_C*>             CallFunc_GetComponentsByClass_ReturnValue1;        // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillActive_ReturnValue;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item1;                          // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1; // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillActive_ReturnValue1;               // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface2; // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character3;     // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface3; // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue4;                    // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base;    // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue5;                    // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character4;     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface4; // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue6;                    // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue7;                    // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character5;     // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess11;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character6;     // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess12;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface5; // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess13;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue2;           // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue8;                    // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base1;   // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess14;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x01EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged) == 0x000008, "Wrong alignment on BP_AJBCharacterBehaviorManager_C_BehaviorChanged");
static_assert(sizeof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged) == 0x0001F0, "Wrong size on BP_AJBCharacterBehaviorManager_C_BehaviorChanged");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, PrevBehavior) == 0x000000, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::PrevBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, NextBehavior) == 0x000001, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::NextBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, OwnerCharacterBP) == 0x000008, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::OwnerCharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_MakeLiteralByte_ReturnValue) == 0x000010, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_GetComponentsByClass_ReturnValue) == 0x000020, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_CheckSkillActive_IsActive) == 0x000034, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_CheckSkillActive_IsActive' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000035, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_GetComponentsByClass_ReturnValue1) == 0x000038, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_GetComponentsByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_IsSkillActive_ReturnValue) == 0x000050, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_IsSkillActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_Array_Length_ReturnValue1) == 0x000054, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_BooleanAND_ReturnValue) == 0x000058, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_BooleanAND_ReturnValue1) == 0x00005A, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_Subtract_ByteByte_ReturnValue) == 0x00005B, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_GetOwner_ReturnValue) == 0x000060, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000068, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000070, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface) == 0x000080, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_bSuccess1) == 0x000090, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, Temp_int_Array_Index_Variable1) == 0x000094, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_GetOwner_ReturnValue1) == 0x000098, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_Array_Get_Item1) == 0x0000A0, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x0000A8, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_bSuccess2) == 0x0000B0, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1) == 0x0000B8, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_bSuccess3) == 0x0000C8, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_IsSkillActive_ReturnValue1) == 0x0000C9, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_IsSkillActive_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_GetOwner_ReturnValue2) == 0x0000D0, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x0000D8, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_bSuccess4) == 0x0000E0, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface2) == 0x0000E8, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface2' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_bSuccess5) == 0x0000F8, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_GetOwner_ReturnValue3) == 0x000100, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000108, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_AsBP_AJBIn_Game_Character3) == 0x000110, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_AsBP_AJBIn_Game_Character3' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_bSuccess6) == 0x000118, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface3) == 0x000120, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface3' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_bSuccess7) == 0x000130, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, Temp_int_Loop_Counter_Variable1) == 0x000134, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_Less_IntInt_ReturnValue1) == 0x000138, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_Add_IntInt_ReturnValue1) == 0x00013C, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_GetOwner_ReturnValue4) == 0x000140, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_GetOwner_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_AsAJBIn_Game_Character_Base) == 0x000148, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_AsAJBIn_Game_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_bSuccess8) == 0x000150, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_GetOwner_ReturnValue5) == 0x000158, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_GetOwner_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_HasLocalSharedController_ReturnValue) == 0x000160, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_AsBP_AJBIn_Game_Character4) == 0x000168, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_AsBP_AJBIn_Game_Character4' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_bSuccess9) == 0x000170, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface4) == 0x000178, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface4' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_bSuccess10) == 0x000188, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_GetOwner_ReturnValue6) == 0x000190, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_GetOwner_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_GetOwner_ReturnValue7) == 0x000198, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_GetOwner_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_AsBP_AJBIn_Game_Character5) == 0x0001A0, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_AsBP_AJBIn_Game_Character5' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_bSuccess11) == 0x0001A8, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_bSuccess11' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_AsBP_AJBIn_Game_Character6) == 0x0001B0, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_AsBP_AJBIn_Game_Character6' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_bSuccess12) == 0x0001B8, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_bSuccess12' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface5) == 0x0001C0, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface5' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_bSuccess13) == 0x0001D0, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_bSuccess13' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_IsDedicatedServer_ReturnValue) == 0x0001D1, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_IsDedicatedServer_ReturnValue1) == 0x0001D2, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_IsDedicatedServer_ReturnValue2) == 0x0001D3, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_IsDedicatedServer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_GetOwner_ReturnValue8) == 0x0001D8, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_GetOwner_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_AsAJBIn_Game_Character_Base1) == 0x0001E0, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_AsAJBIn_Game_Character_Base1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_DynamicCast_bSuccess14) == 0x0001E8, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_DynamicCast_bSuccess14' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, CallFunc_HasLocalSharedController_ReturnValue1) == 0x0001E9, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_SwitchEnum_CmpSuccess) == 0x0001EA, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_BehaviorChanged, K2Node_SwitchEnum1_CmpSuccess) == 0x0001EB, "Member 'BP_AJBCharacterBehaviorManager_C_BehaviorChanged::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");

// Function BP_AJBCharacterBehaviorManager.BP_AJBCharacterBehaviorManager_C.CheckBehavior
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBCharacterBehaviorManager_C_CheckBehavior final
{
public:
	ECharacterActiveBehavior                      ActiveBehavior;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRetValue;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCharacterBehaviorManager_C_CheckBehavior) == 0x000001, "Wrong alignment on BP_AJBCharacterBehaviorManager_C_CheckBehavior");
static_assert(sizeof(BP_AJBCharacterBehaviorManager_C_CheckBehavior) == 0x000003, "Wrong size on BP_AJBCharacterBehaviorManager_C_CheckBehavior");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_CheckBehavior, ActiveBehavior) == 0x000000, "Member 'BP_AJBCharacterBehaviorManager_C_CheckBehavior::ActiveBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_CheckBehavior, bRetValue) == 0x000001, "Member 'BP_AJBCharacterBehaviorManager_C_CheckBehavior::bRetValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_CheckBehavior, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_AJBCharacterBehaviorManager_C_CheckBehavior::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_AJBCharacterBehaviorManager.BP_AJBCharacterBehaviorManager_C.CheckBehaviorIsEmote
// 0x000A (0x000A - 0x0000)
struct BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote final
{
public:
	bool                                          bRetValue;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharacterActiveBehavior                      Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable5;                               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable6;                               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote) == 0x000001, "Wrong alignment on BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote");
static_assert(sizeof(BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote) == 0x00000A, "Wrong size on BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote, bRetValue) == 0x000000, "Member 'BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote::bRetValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote, Temp_byte_Variable) == 0x000001, "Member 'BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote, Temp_bool_Variable) == 0x000002, "Member 'BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote, Temp_bool_Variable1) == 0x000003, "Member 'BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote, Temp_bool_Variable2) == 0x000004, "Member 'BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote, Temp_bool_Variable3) == 0x000005, "Member 'BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote, Temp_bool_Variable4) == 0x000006, "Member 'BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote, Temp_bool_Variable5) == 0x000007, "Member 'BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote, Temp_bool_Variable6) == 0x000008, "Member 'BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote::Temp_bool_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote, K2Node_Select_Default) == 0x000009, "Member 'BP_AJBCharacterBehaviorManager_C_CheckBehaviorIsEmote::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBCharacterBehaviorManager.BP_AJBCharacterBehaviorManager_C.DefaultTick
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBCharacterBehaviorManager_C_DefaultTick final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCharacterBehaviorManager_C_DefaultTick) == 0x000008, "Wrong alignment on BP_AJBCharacterBehaviorManager_C_DefaultTick");
static_assert(sizeof(BP_AJBCharacterBehaviorManager_C_DefaultTick) == 0x000030, "Wrong size on BP_AJBCharacterBehaviorManager_C_DefaultTick");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_DefaultTick, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_AJBCharacterBehaviorManager_C_DefaultTick::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_DefaultTick, CallFunc_GetOwner_ReturnValue1) == 0x000008, "Member 'BP_AJBCharacterBehaviorManager_C_DefaultTick::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_DefaultTick, K2Node_DynamicCast_AsAJBIn_Game_Character_Base) == 0x000010, "Member 'BP_AJBCharacterBehaviorManager_C_DefaultTick::K2Node_DynamicCast_AsAJBIn_Game_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_DefaultTick, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBCharacterBehaviorManager_C_DefaultTick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_DefaultTick, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000020, "Member 'BP_AJBCharacterBehaviorManager_C_DefaultTick::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_DefaultTick, K2Node_DynamicCast_bSuccess1) == 0x000028, "Member 'BP_AJBCharacterBehaviorManager_C_DefaultTick::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_DefaultTick, CallFunc_HasLocalSharedController_ReturnValue) == 0x000029, "Member 'BP_AJBCharacterBehaviorManager_C_DefaultTick::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");

// Function BP_AJBCharacterBehaviorManager.BP_AJBCharacterBehaviorManager_C.EmoteTick
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBCharacterBehaviorManager_C_EmoteTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               TempCharacterBP;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAnimationLoop_ReturnValue;           // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCharacterBehaviorManager_C_EmoteTick) == 0x000008, "Wrong alignment on BP_AJBCharacterBehaviorManager_C_EmoteTick");
static_assert(sizeof(BP_AJBCharacterBehaviorManager_C_EmoteTick) == 0x000040, "Wrong size on BP_AJBCharacterBehaviorManager_C_EmoteTick");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_EmoteTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBCharacterBehaviorManager_C_EmoteTick::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_EmoteTick, TempCharacterBP) == 0x000008, "Member 'BP_AJBCharacterBehaviorManager_C_EmoteTick::TempCharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_EmoteTick, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_AJBCharacterBehaviorManager_C_EmoteTick::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_EmoteTick, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000011, "Member 'BP_AJBCharacterBehaviorManager_C_EmoteTick::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_EmoteTick, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'BP_AJBCharacterBehaviorManager_C_EmoteTick::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_EmoteTick, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'BP_AJBCharacterBehaviorManager_C_EmoteTick::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_EmoteTick, CallFunc_Montage_IsPlaying_ReturnValue) == 0x000020, "Member 'BP_AJBCharacterBehaviorManager_C_EmoteTick::CallFunc_Montage_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_EmoteTick, CallFunc_Not_PreBool_ReturnValue1) == 0x000021, "Member 'BP_AJBCharacterBehaviorManager_C_EmoteTick::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_EmoteTick, CallFunc_CheckAnimationLoop_ReturnValue) == 0x000022, "Member 'BP_AJBCharacterBehaviorManager_C_EmoteTick::CallFunc_CheckAnimationLoop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_EmoteTick, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_AJBCharacterBehaviorManager_C_EmoteTick::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_EmoteTick, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000030, "Member 'BP_AJBCharacterBehaviorManager_C_EmoteTick::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBCharacterBehaviorManager_C_EmoteTick, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_AJBCharacterBehaviorManager_C_EmoteTick::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameStand_STF

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_StencilDigit_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameStand_STF.BP_AJBInGameStand_STF_C.ExecuteUbergraph_BP_AJBInGameStand_STF
// 0x02C0 (0x02C0 - 0x0000)
struct BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue1;               // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue2;               // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue3;               // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0xB];                                       // 0x00E5(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue4;               // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0xF];                                      // 0x0121(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue5;               // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue6;               // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName2;                    // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x01C0(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_LaunchPart_PairOfOne_C*             CallFunc_FinishSpawningActor_ReturnValue;          // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1; // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStandPart_STFArm_C*        CallFunc_FinishSpawningActor_ReturnValue1;         // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue2; // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue3; // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_LaunchPart_PairOfOne_C*             CallFunc_FinishSpawningActor_ReturnValue2;         // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStandPart_STFArm_C*        CallFunc_FinishSpawningActor_ReturnValue3;         // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate1;             // 0x0210(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName3;                    // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShouldDestroy;                       // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_StandName;                            // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_SkinId;                               // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate2;             // 0x0248(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName4;                    // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName1;                    // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue4; // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStandPart_STF_Net_C*       CallFunc_FinishSpawningActor_ReturnValue4;         // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate3;             // 0x0278(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate4;             // 0x0290(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue5; // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_LaunchPart_C*                       CallFunc_FinishSpawningActor_ReturnValue5;         // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue6; // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStandPart_STF_String_C*    CallFunc_FinishSpawningActor_ReturnValue6;         // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF) == 0x000010, "Wrong alignment on BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF");
static_assert(sizeof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF) == 0x0002C0, "Wrong size on BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, EntryPoint) == 0x000000, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, K2Node_CustomEvent_NotifyName) == 0x000008, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, Temp_name_Variable) == 0x000010, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_MakeTransform_ReturnValue1) == 0x000050, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_MakeTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_MakeTransform_ReturnValue2) == 0x000080, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_MakeTransform_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_MakeTransform_ReturnValue3) == 0x0000B0, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_MakeTransform_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_IsValid_ReturnValue1) == 0x0000E1, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_IsValid_ReturnValue2) == 0x0000E2, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_IsValid_ReturnValue3) == 0x0000E3, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_IsValid_ReturnValue4) == 0x0000E4, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_MakeTransform_ReturnValue4) == 0x0000F0, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_MakeTransform_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_IsValid_ReturnValue5) == 0x000120, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_MakeTransform_ReturnValue5) == 0x000130, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_MakeTransform_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_MakeTransform_ReturnValue6) == 0x000160, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_MakeTransform_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_IsServer_ReturnValue) == 0x000190, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, K2Node_CustomEvent_NotifyName2) == 0x000198, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::K2Node_CustomEvent_NotifyName2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0001A0, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_IsValid_ReturnValue6) == 0x0001A8, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_GetOwner_ReturnValue) == 0x0001B0, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001B8, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, K2Node_CreateDelegate_OutputDelegate) == 0x0001C0, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001D0, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1) == 0x0001D8, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_FinishSpawningActor_ReturnValue1) == 0x0001E0, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_FinishSpawningActor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_GetOwner_ReturnValue1) == 0x0001E8, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue2) == 0x0001F0, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue3) == 0x0001F8, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_FinishSpawningActor_ReturnValue2) == 0x000200, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_FinishSpawningActor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_FinishSpawningActor_ReturnValue3) == 0x000208, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_FinishSpawningActor_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, K2Node_CreateDelegate_OutputDelegate1) == 0x000210, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, K2Node_CustomEvent_NotifyName3) == 0x000220, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::K2Node_CustomEvent_NotifyName3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, K2Node_Event_bShouldDestroy) == 0x000228, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::K2Node_Event_bShouldDestroy' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, K2Node_Event_StandName) == 0x000230, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::K2Node_Event_StandName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, K2Node_Event_SkinId) == 0x000240, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::K2Node_Event_SkinId' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, K2Node_CreateDelegate_OutputDelegate2) == 0x000248, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, K2Node_CustomEvent_NotifyName4) == 0x000258, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::K2Node_CustomEvent_NotifyName4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, K2Node_CustomEvent_NotifyName1) == 0x000260, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::K2Node_CustomEvent_NotifyName1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue4) == 0x000268, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_FinishSpawningActor_ReturnValue4) == 0x000270, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_FinishSpawningActor_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, K2Node_CreateDelegate_OutputDelegate3) == 0x000278, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_GetOwner_ReturnValue2) == 0x000288, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, K2Node_CreateDelegate_OutputDelegate4) == 0x000290, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue5) == 0x0002A0, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_FinishSpawningActor_ReturnValue5) == 0x0002A8, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_FinishSpawningActor_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue6) == 0x0002B0, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF, CallFunc_FinishSpawningActor_ReturnValue6) == 0x0002B8, "Member 'BP_AJBInGameStand_STF_C_ExecuteUbergraph_BP_AJBInGameStand_STF::CallFunc_FinishSpawningActor_ReturnValue6' has a wrong offset!");

// Function BP_AJBInGameStand_STF.BP_AJBInGameStand_STF_C.OnCompleted_C8501FA44DFD3B3E50F8A5B29FBC4659
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_STF_C_OnCompleted_C8501FA44DFD3B3E50F8A5B29FBC4659 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_STF_C_OnCompleted_C8501FA44DFD3B3E50F8A5B29FBC4659) == 0x000008, "Wrong alignment on BP_AJBInGameStand_STF_C_OnCompleted_C8501FA44DFD3B3E50F8A5B29FBC4659");
static_assert(sizeof(BP_AJBInGameStand_STF_C_OnCompleted_C8501FA44DFD3B3E50F8A5B29FBC4659) == 0x000008, "Wrong size on BP_AJBInGameStand_STF_C_OnCompleted_C8501FA44DFD3B3E50F8A5B29FBC4659");
static_assert(offsetof(BP_AJBInGameStand_STF_C_OnCompleted_C8501FA44DFD3B3E50F8A5B29FBC4659, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_STF_C_OnCompleted_C8501FA44DFD3B3E50F8A5B29FBC4659::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_STF.BP_AJBInGameStand_STF_C.OnBlendOut_C8501FA44DFD3B3E50F8A5B29FBC4659
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_STF_C_OnBlendOut_C8501FA44DFD3B3E50F8A5B29FBC4659 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_STF_C_OnBlendOut_C8501FA44DFD3B3E50F8A5B29FBC4659) == 0x000008, "Wrong alignment on BP_AJBInGameStand_STF_C_OnBlendOut_C8501FA44DFD3B3E50F8A5B29FBC4659");
static_assert(sizeof(BP_AJBInGameStand_STF_C_OnBlendOut_C8501FA44DFD3B3E50F8A5B29FBC4659) == 0x000008, "Wrong size on BP_AJBInGameStand_STF_C_OnBlendOut_C8501FA44DFD3B3E50F8A5B29FBC4659");
static_assert(offsetof(BP_AJBInGameStand_STF_C_OnBlendOut_C8501FA44DFD3B3E50F8A5B29FBC4659, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_STF_C_OnBlendOut_C8501FA44DFD3B3E50F8A5B29FBC4659::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_STF.BP_AJBInGameStand_STF_C.OnInterrupted_C8501FA44DFD3B3E50F8A5B29FBC4659
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_STF_C_OnInterrupted_C8501FA44DFD3B3E50F8A5B29FBC4659 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_STF_C_OnInterrupted_C8501FA44DFD3B3E50F8A5B29FBC4659) == 0x000008, "Wrong alignment on BP_AJBInGameStand_STF_C_OnInterrupted_C8501FA44DFD3B3E50F8A5B29FBC4659");
static_assert(sizeof(BP_AJBInGameStand_STF_C_OnInterrupted_C8501FA44DFD3B3E50F8A5B29FBC4659) == 0x000008, "Wrong size on BP_AJBInGameStand_STF_C_OnInterrupted_C8501FA44DFD3B3E50F8A5B29FBC4659");
static_assert(offsetof(BP_AJBInGameStand_STF_C_OnInterrupted_C8501FA44DFD3B3E50F8A5B29FBC4659, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_STF_C_OnInterrupted_C8501FA44DFD3B3E50F8A5B29FBC4659::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_STF.BP_AJBInGameStand_STF_C.OnNotifyBegin_C8501FA44DFD3B3E50F8A5B29FBC4659
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_STF_C_OnNotifyBegin_C8501FA44DFD3B3E50F8A5B29FBC4659 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_STF_C_OnNotifyBegin_C8501FA44DFD3B3E50F8A5B29FBC4659) == 0x000008, "Wrong alignment on BP_AJBInGameStand_STF_C_OnNotifyBegin_C8501FA44DFD3B3E50F8A5B29FBC4659");
static_assert(sizeof(BP_AJBInGameStand_STF_C_OnNotifyBegin_C8501FA44DFD3B3E50F8A5B29FBC4659) == 0x000008, "Wrong size on BP_AJBInGameStand_STF_C_OnNotifyBegin_C8501FA44DFD3B3E50F8A5B29FBC4659");
static_assert(offsetof(BP_AJBInGameStand_STF_C_OnNotifyBegin_C8501FA44DFD3B3E50F8A5B29FBC4659, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_STF_C_OnNotifyBegin_C8501FA44DFD3B3E50F8A5B29FBC4659::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_STF.BP_AJBInGameStand_STF_C.OnNotifyEnd_C8501FA44DFD3B3E50F8A5B29FBC4659
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_STF_C_OnNotifyEnd_C8501FA44DFD3B3E50F8A5B29FBC4659 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_STF_C_OnNotifyEnd_C8501FA44DFD3B3E50F8A5B29FBC4659) == 0x000008, "Wrong alignment on BP_AJBInGameStand_STF_C_OnNotifyEnd_C8501FA44DFD3B3E50F8A5B29FBC4659");
static_assert(sizeof(BP_AJBInGameStand_STF_C_OnNotifyEnd_C8501FA44DFD3B3E50F8A5B29FBC4659) == 0x000008, "Wrong size on BP_AJBInGameStand_STF_C_OnNotifyEnd_C8501FA44DFD3B3E50F8A5B29FBC4659");
static_assert(offsetof(BP_AJBInGameStand_STF_C_OnNotifyEnd_C8501FA44DFD3B3E50F8A5B29FBC4659, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_STF_C_OnNotifyEnd_C8501FA44DFD3B3E50F8A5B29FBC4659::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_STF.BP_AJBInGameStand_STF_C.GetDamageActorTargetLocation
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameStand_STF_C_GetDamageActorTargetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_STF_C_GetDamageActorTargetLocation) == 0x000004, "Wrong alignment on BP_AJBInGameStand_STF_C_GetDamageActorTargetLocation");
static_assert(sizeof(BP_AJBInGameStand_STF_C_GetDamageActorTargetLocation) == 0x00000C, "Wrong size on BP_AJBInGameStand_STF_C_GetDamageActorTargetLocation");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetDamageActorTargetLocation, Location) == 0x000000, "Member 'BP_AJBInGameStand_STF_C_GetDamageActorTargetLocation::Location' has a wrong offset!");

// Function BP_AJBInGameStand_STF.BP_AJBInGameStand_STF_C.GetAttackRange
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBInGameStand_STF_C_GetAttackRange final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackRange;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBStoneOraRushSkill_C*             CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBStringJailSkill_C*               CallFunc_GetComponentByClass_ReturnValue1;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBCloseRangeSkill_C*               K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_STF_C_GetAttackRange) == 0x000008, "Wrong alignment on BP_AJBInGameStand_STF_C_GetAttackRange");
static_assert(sizeof(BP_AJBInGameStand_STF_C_GetAttackRange) == 0x000048, "Wrong size on BP_AJBInGameStand_STF_C_GetAttackRange");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackRange, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_STF_C_GetAttackRange::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackRange, AttackRange) == 0x000004, "Member 'BP_AJBInGameStand_STF_C_GetAttackRange::AttackRange' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackRange, Temp_int_Variable) == 0x000008, "Member 'BP_AJBInGameStand_STF_C_GetAttackRange::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackRange, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBInGameStand_STF_C_GetAttackRange::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackRange, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBInGameStand_STF_C_GetAttackRange::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackRange, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameStand_STF_C_GetAttackRange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackRange, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'BP_AJBInGameStand_STF_C_GetAttackRange::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackRange, CallFunc_GetComponentByClass_ReturnValue1) == 0x000030, "Member 'BP_AJBInGameStand_STF_C_GetAttackRange::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackRange, K2Node_Select_Default) == 0x000038, "Member 'BP_AJBInGameStand_STF_C_GetAttackRange::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackRange, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_AJBInGameStand_STF_C_GetAttackRange::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackRange, CallFunc_Add_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_AJBInGameStand_STF_C_GetAttackRange::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_STF.BP_AJBInGameStand_STF_C.GetAttackCollisionRadius
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameStand_STF_C_GetAttackCollisionRadius final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBStringJailSkill_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBStoneOraRushSkill_C*             CallFunc_GetComponentByClass_ReturnValue1;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBCloseRangeSkill_C*               K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_STF_C_GetAttackCollisionRadius) == 0x000008, "Wrong alignment on BP_AJBInGameStand_STF_C_GetAttackCollisionRadius");
static_assert(sizeof(BP_AJBInGameStand_STF_C_GetAttackCollisionRadius) == 0x000040, "Wrong size on BP_AJBInGameStand_STF_C_GetAttackCollisionRadius");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackCollisionRadius, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_STF_C_GetAttackCollisionRadius::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackCollisionRadius, Radius) == 0x000004, "Member 'BP_AJBInGameStand_STF_C_GetAttackCollisionRadius::Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackCollisionRadius, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_STF_C_GetAttackCollisionRadius::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackCollisionRadius, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameStand_STF_C_GetAttackCollisionRadius::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackCollisionRadius, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameStand_STF_C_GetAttackCollisionRadius::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackCollisionRadius, Temp_int_Variable) == 0x00001C, "Member 'BP_AJBInGameStand_STF_C_GetAttackCollisionRadius::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackCollisionRadius, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_AJBInGameStand_STF_C_GetAttackCollisionRadius::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackCollisionRadius, CallFunc_GetComponentByClass_ReturnValue1) == 0x000028, "Member 'BP_AJBInGameStand_STF_C_GetAttackCollisionRadius::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackCollisionRadius, K2Node_Select_Default) == 0x000030, "Member 'BP_AJBInGameStand_STF_C_GetAttackCollisionRadius::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackCollisionRadius, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_AJBInGameStand_STF_C_GetAttackCollisionRadius::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_STF.BP_AJBInGameStand_STF_C.GetAttackLocation
// 0x0024 (0x0024 - 0x0000)
struct BP_AJBInGameStand_STF_C_GetAttackLocation final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x000C(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLaunchedActorHomeLocation_Location;    // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_STF_C_GetAttackLocation) == 0x000004, "Wrong alignment on BP_AJBInGameStand_STF_C_GetAttackLocation");
static_assert(sizeof(BP_AJBInGameStand_STF_C_GetAttackLocation) == 0x000024, "Wrong size on BP_AJBInGameStand_STF_C_GetAttackLocation");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackLocation, TargetLocation) == 0x000000, "Member 'BP_AJBInGameStand_STF_C_GetAttackLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackLocation, Location) == 0x00000C, "Member 'BP_AJBInGameStand_STF_C_GetAttackLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetAttackLocation, CallFunc_GetLaunchedActorHomeLocation_Location) == 0x000018, "Member 'BP_AJBInGameStand_STF_C_GetAttackLocation::CallFunc_GetLaunchedActorHomeLocation_Location' has a wrong offset!");

// Function BP_AJBInGameStand_STF.BP_AJBInGameStand_STF_C.GetStandAttackOffset
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameStand_STF_C_GetStandAttackOffset final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StandAttackOffset;                                 // 0x0004(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_STF_C_GetStandAttackOffset) == 0x000004, "Wrong alignment on BP_AJBInGameStand_STF_C_GetStandAttackOffset");
static_assert(sizeof(BP_AJBInGameStand_STF_C_GetStandAttackOffset) == 0x000010, "Wrong size on BP_AJBInGameStand_STF_C_GetStandAttackOffset");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetStandAttackOffset, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_STF_C_GetStandAttackOffset::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetStandAttackOffset, StandAttackOffset) == 0x000004, "Member 'BP_AJBInGameStand_STF_C_GetStandAttackOffset::StandAttackOffset' has a wrong offset!");

// Function BP_AJBInGameStand_STF.BP_AJBInGameStand_STF_C.GetLaunchedActorHomeLocation
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameStand_STF_C_GetLaunchedActorHomeLocation final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_Select1_Default;                            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_STF_C_GetLaunchedActorHomeLocation) == 0x000008, "Wrong alignment on BP_AJBInGameStand_STF_C_GetLaunchedActorHomeLocation");
static_assert(sizeof(BP_AJBInGameStand_STF_C_GetLaunchedActorHomeLocation) == 0x000038, "Wrong size on BP_AJBInGameStand_STF_C_GetLaunchedActorHomeLocation");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetLaunchedActorHomeLocation, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_STF_C_GetLaunchedActorHomeLocation::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetLaunchedActorHomeLocation, Location) == 0x000004, "Member 'BP_AJBInGameStand_STF_C_GetLaunchedActorHomeLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetLaunchedActorHomeLocation, Temp_int_Variable) == 0x000010, "Member 'BP_AJBInGameStand_STF_C_GetLaunchedActorHomeLocation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetLaunchedActorHomeLocation, Temp_bool_Variable) == 0x000014, "Member 'BP_AJBInGameStand_STF_C_GetLaunchedActorHomeLocation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetLaunchedActorHomeLocation, K2Node_Select_Default) == 0x000018, "Member 'BP_AJBInGameStand_STF_C_GetLaunchedActorHomeLocation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetLaunchedActorHomeLocation, K2Node_Select1_Default) == 0x000020, "Member 'BP_AJBInGameStand_STF_C_GetLaunchedActorHomeLocation::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetLaunchedActorHomeLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000028, "Member 'BP_AJBInGameStand_STF_C_GetLaunchedActorHomeLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_STF.BP_AJBInGameStand_STF_C.GetCloseRangeLaunchedActor
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameStand_STF_C_GetCloseRangeLaunchedActor final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LaunchedActor;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Select1_Default;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_STF_C_GetCloseRangeLaunchedActor) == 0x000008, "Wrong alignment on BP_AJBInGameStand_STF_C_GetCloseRangeLaunchedActor");
static_assert(sizeof(BP_AJBInGameStand_STF_C_GetCloseRangeLaunchedActor) == 0x000028, "Wrong size on BP_AJBInGameStand_STF_C_GetCloseRangeLaunchedActor");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetCloseRangeLaunchedActor, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_STF_C_GetCloseRangeLaunchedActor::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetCloseRangeLaunchedActor, LaunchedActor) == 0x000008, "Member 'BP_AJBInGameStand_STF_C_GetCloseRangeLaunchedActor::LaunchedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetCloseRangeLaunchedActor, Temp_int_Variable) == 0x000010, "Member 'BP_AJBInGameStand_STF_C_GetCloseRangeLaunchedActor::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetCloseRangeLaunchedActor, Temp_bool_Variable) == 0x000014, "Member 'BP_AJBInGameStand_STF_C_GetCloseRangeLaunchedActor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetCloseRangeLaunchedActor, K2Node_Select_Default) == 0x000018, "Member 'BP_AJBInGameStand_STF_C_GetCloseRangeLaunchedActor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetCloseRangeLaunchedActor, K2Node_Select1_Default) == 0x000020, "Member 'BP_AJBInGameStand_STF_C_GetCloseRangeLaunchedActor::K2Node_Select1_Default' has a wrong offset!");

// Function BP_AJBInGameStand_STF.BP_AJBInGameStand_STF_C.ChangeSkin
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameStand_STF_C_ChangeSkin final
{
public:
	class FString                                 StandName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         SkinID;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_STF_C_ChangeSkin) == 0x000008, "Wrong alignment on BP_AJBInGameStand_STF_C_ChangeSkin");
static_assert(sizeof(BP_AJBInGameStand_STF_C_ChangeSkin) == 0x000018, "Wrong size on BP_AJBInGameStand_STF_C_ChangeSkin");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ChangeSkin, StandName) == 0x000000, "Member 'BP_AJBInGameStand_STF_C_ChangeSkin::StandName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_ChangeSkin, SkinID) == 0x000010, "Member 'BP_AJBInGameStand_STF_C_ChangeSkin::SkinID' has a wrong offset!");

// Function BP_AJBInGameStand_STF.BP_AJBInGameStand_STF_C.CleanUp
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameStand_STF_C_CleanUp final
{
public:
	bool                                          bShouldDestroy;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_STF_C_CleanUp) == 0x000001, "Wrong alignment on BP_AJBInGameStand_STF_C_CleanUp");
static_assert(sizeof(BP_AJBInGameStand_STF_C_CleanUp) == 0x000001, "Wrong size on BP_AJBInGameStand_STF_C_CleanUp");
static_assert(offsetof(BP_AJBInGameStand_STF_C_CleanUp, bShouldDestroy) == 0x000000, "Member 'BP_AJBInGameStand_STF_C_CleanUp::bShouldDestroy' has a wrong offset!");

// Function BP_AJBInGameStand_STF.BP_AJBInGameStand_STF_C.GetPrimitivesToChangeStencil
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBInGameStand_STF_C_GetPrimitivesToChangeStencil final
{
public:
	E_StencilDigit                                StencilDigit;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            PrimitiveComponents;                               // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<class UPrimitiveComponent*>            Temp_Results;                                      // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UPrimitiveComponent*>            CallFunc_GetPrimitivesToChangeStencil_PrimitiveComponents; // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class UPrimitiveComponent*>            K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AJBInGameStand_STF_C_GetPrimitivesToChangeStencil) == 0x000008, "Wrong alignment on BP_AJBInGameStand_STF_C_GetPrimitivesToChangeStencil");
static_assert(sizeof(BP_AJBInGameStand_STF_C_GetPrimitivesToChangeStencil) == 0x000048, "Wrong size on BP_AJBInGameStand_STF_C_GetPrimitivesToChangeStencil");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetPrimitivesToChangeStencil, StencilDigit) == 0x000000, "Member 'BP_AJBInGameStand_STF_C_GetPrimitivesToChangeStencil::StencilDigit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetPrimitivesToChangeStencil, PrimitiveComponents) == 0x000008, "Member 'BP_AJBInGameStand_STF_C_GetPrimitivesToChangeStencil::PrimitiveComponents' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetPrimitivesToChangeStencil, Temp_Results) == 0x000018, "Member 'BP_AJBInGameStand_STF_C_GetPrimitivesToChangeStencil::Temp_Results' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetPrimitivesToChangeStencil, CallFunc_GetPrimitivesToChangeStencil_PrimitiveComponents) == 0x000028, "Member 'BP_AJBInGameStand_STF_C_GetPrimitivesToChangeStencil::CallFunc_GetPrimitivesToChangeStencil_PrimitiveComponents' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_STF_C_GetPrimitivesToChangeStencil, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_AJBInGameStand_STF_C_GetPrimitivesToChangeStencil::K2Node_MakeArray_Array' has a wrong offset!");

}


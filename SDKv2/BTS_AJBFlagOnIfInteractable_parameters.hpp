#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_AJBFlagOnIfInteractable

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BTS_AJBFlagOnIfInteractable.BTS_AJBFlagOnIfInteractable_C.ExecuteUbergraph_BTS_AJBFlagOnIfInteractable
// 0x0178 (0x0178 - 0x0000)
struct BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController2;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn2;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIRecognition_C*           CallFunc_GetRecognition_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController1;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn1;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_InteractActor;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* InteractActor)>  K2Node_CreateDelegate_OutputDelegate;              // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* InteractActor)>  K2Node_CreateDelegate_OutputDelegate1;             // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                CallFunc_GetBlackboardValueAsObject_ReturnValue;   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetRawActorFromBlackboardCharacterValue_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEventTagLocked_ReturnValue;             // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameAIImaginaryCharacter_C*    CallFunc_GetControllingImaginaryCharacter_ReturnValue; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_ReturnValue;                  // 0x00B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue;                       // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AI_VectorDiffSq_ReturnValue;              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_AITraceObjectTypesWithoutPlayers_ReturnValue; // 0x00D0(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x00E8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable) == 0x000008, "Wrong alignment on BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable");
static_assert(sizeof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable) == 0x000178, "Wrong size on BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, EntryPoint) == 0x000000, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, Temp_object_Variable) == 0x000008, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, Temp_bool_Has_Been_Initd_Variable) == 0x000018, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, K2Node_Event_OwnerController2) == 0x000020, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::K2Node_Event_OwnerController2' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, K2Node_Event_ControlledPawn2) == 0x000028, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::K2Node_Event_ControlledPawn2' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, CallFunc_GetRecognition_ReturnValue) == 0x000030, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::CallFunc_GetRecognition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, K2Node_Event_OwnerController1) == 0x000038, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::K2Node_Event_OwnerController1' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, K2Node_Event_ControlledPawn1) == 0x000040, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::K2Node_Event_ControlledPawn1' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, K2Node_CustomEvent_InteractActor) == 0x000048, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::K2Node_CustomEvent_InteractActor' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, K2Node_CreateDelegate_OutputDelegate1) == 0x000060, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, CallFunc_GetBlackboardValueAsObject_ReturnValue) == 0x000070, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::CallFunc_GetBlackboardValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000078, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, CallFunc_GetRawActorFromBlackboardCharacterValue_ReturnValue) == 0x000080, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::CallFunc_GetRawActorFromBlackboardCharacterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, K2Node_Event_OwnerController) == 0x000088, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, K2Node_Event_ControlledPawn) == 0x000090, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, K2Node_Event_DeltaSeconds) == 0x000098, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, Temp_bool_IsClosed_Variable) == 0x00009C, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, CallFunc_IsEventTagLocked_ReturnValue) == 0x00009D, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::CallFunc_IsEventTagLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A0, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, CallFunc_GetControllingImaginaryCharacter_ReturnValue) == 0x0000B0, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::CallFunc_GetControllingImaginaryCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, CallFunc_GetLocation_ReturnValue) == 0x0000B8, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::CallFunc_GetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, CallFunc_Square_ReturnValue) == 0x0000C4, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, CallFunc_AI_VectorDiffSq_ReturnValue) == 0x0000C8, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::CallFunc_AI_VectorDiffSq_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, CallFunc_AITraceObjectTypesWithoutPlayers_ReturnValue) == 0x0000D0, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::CallFunc_AITraceObjectTypesWithoutPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000E0, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0000E8, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000170, "Member 'BTS_AJBFlagOnIfInteractable_C_ExecuteUbergraph_BTS_AJBFlagOnIfInteractable::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");

// Function BTS_AJBFlagOnIfInteractable.BTS_AJBFlagOnIfInteractable_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTS_AJBFlagOnIfInteractable_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBFlagOnIfInteractable_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTS_AJBFlagOnIfInteractable_C_ReceiveTickAI");
static_assert(sizeof(BTS_AJBFlagOnIfInteractable_C_ReceiveTickAI) == 0x000018, "Wrong size on BTS_AJBFlagOnIfInteractable_C_ReceiveTickAI");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTS_AJBFlagOnIfInteractable_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTS_AJBFlagOnIfInteractable_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTS_AJBFlagOnIfInteractable_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTS_AJBFlagOnIfInteractable.BTS_AJBFlagOnIfInteractable_C.OnInteractActorChanged
// 0x0008 (0x0008 - 0x0000)
struct BTS_AJBFlagOnIfInteractable_C_OnInteractActorChanged final
{
public:
	class AActor*                                 InteractActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBFlagOnIfInteractable_C_OnInteractActorChanged) == 0x000008, "Wrong alignment on BTS_AJBFlagOnIfInteractable_C_OnInteractActorChanged");
static_assert(sizeof(BTS_AJBFlagOnIfInteractable_C_OnInteractActorChanged) == 0x000008, "Wrong size on BTS_AJBFlagOnIfInteractable_C_OnInteractActorChanged");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_OnInteractActorChanged, InteractActor) == 0x000000, "Member 'BTS_AJBFlagOnIfInteractable_C_OnInteractActorChanged::InteractActor' has a wrong offset!");

// Function BTS_AJBFlagOnIfInteractable.BTS_AJBFlagOnIfInteractable_C.ReceiveActivationAI
// 0x0010 (0x0010 - 0x0000)
struct BTS_AJBFlagOnIfInteractable_C_ReceiveActivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBFlagOnIfInteractable_C_ReceiveActivationAI) == 0x000008, "Wrong alignment on BTS_AJBFlagOnIfInteractable_C_ReceiveActivationAI");
static_assert(sizeof(BTS_AJBFlagOnIfInteractable_C_ReceiveActivationAI) == 0x000010, "Wrong size on BTS_AJBFlagOnIfInteractable_C_ReceiveActivationAI");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ReceiveActivationAI, OwnerController) == 0x000000, "Member 'BTS_AJBFlagOnIfInteractable_C_ReceiveActivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ReceiveActivationAI, ControlledPawn) == 0x000008, "Member 'BTS_AJBFlagOnIfInteractable_C_ReceiveActivationAI::ControlledPawn' has a wrong offset!");

// Function BTS_AJBFlagOnIfInteractable.BTS_AJBFlagOnIfInteractable_C.ReceiveDeactivationAI
// 0x0010 (0x0010 - 0x0000)
struct BTS_AJBFlagOnIfInteractable_C_ReceiveDeactivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBFlagOnIfInteractable_C_ReceiveDeactivationAI) == 0x000008, "Wrong alignment on BTS_AJBFlagOnIfInteractable_C_ReceiveDeactivationAI");
static_assert(sizeof(BTS_AJBFlagOnIfInteractable_C_ReceiveDeactivationAI) == 0x000010, "Wrong size on BTS_AJBFlagOnIfInteractable_C_ReceiveDeactivationAI");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ReceiveDeactivationAI, OwnerController) == 0x000000, "Member 'BTS_AJBFlagOnIfInteractable_C_ReceiveDeactivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBFlagOnIfInteractable_C_ReceiveDeactivationAI, ControlledPawn) == 0x000008, "Member 'BTS_AJBFlagOnIfInteractable_C_ReceiveDeactivationAI::ControlledPawn' has a wrong offset!");

}


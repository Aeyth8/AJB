#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameItemSpawnerMaster

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBInGameItemSpawnerMaster.BP_AJBInGameItemSpawnerMaster_C
// 0x0050 (0x0140 - 0x00F0)
class UBP_AJBInGameItemSpawnerMaster_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F0(0x0008)(Transient, DuplicateTransient)
	class UDataTable*                             ItemSpawnAmountData;                               // 0x00F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RatioOfIgnoreCluster;                              // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ProcessingItemClass;                               // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActorClusterHost*                      ClusterHost;                                       // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugShowArrows;                                  // 0x0118(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 SpawnedItemCounts;                                 // 0x0120(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         ProcessingItemSpawnedCount;                        // 0x0130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UnfixedSpawnerCount;                               // 0x0134(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bItemSpawned;                                      // 0x0138(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_AJBInGameItemSpawnerMaster(int32 EntryPoint);
	void DebugLoggingAndShowArrows();
	void TestClustering();
	void SpawnAllItemsRandomly();
	void SpawnAllItemsByClustering();
	void ClearAllItems();
	void SpawnAllItems();
	void ReceiveBeginPlay();
	void SpawnItemsOnEmptySpawnerRandomly(int32 ItemCount, class UClass* ItemClass);
	void LogSpawnedInfo();
	int32 GetCountOfHouses();
	void GetSpawnItemCount(int32 A, float* AsFloat, int32* AsInt);
	void GetItemSpawnPercent(class FName ItemTagName, int32* SpawnPercent);
	bool IsItemSpawned();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBInGameItemSpawnerMaster_C">();
	}
	static class UBP_AJBInGameItemSpawnerMaster_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBInGameItemSpawnerMaster_C>();
	}
};
static_assert(alignof(UBP_AJBInGameItemSpawnerMaster_C) == 0x000008, "Wrong alignment on UBP_AJBInGameItemSpawnerMaster_C");
static_assert(sizeof(UBP_AJBInGameItemSpawnerMaster_C) == 0x000140, "Wrong size on UBP_AJBInGameItemSpawnerMaster_C");
static_assert(offsetof(UBP_AJBInGameItemSpawnerMaster_C, UberGraphFrame) == 0x0000F0, "Member 'UBP_AJBInGameItemSpawnerMaster_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameItemSpawnerMaster_C, ItemSpawnAmountData) == 0x0000F8, "Member 'UBP_AJBInGameItemSpawnerMaster_C::ItemSpawnAmountData' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameItemSpawnerMaster_C, RatioOfIgnoreCluster) == 0x000100, "Member 'UBP_AJBInGameItemSpawnerMaster_C::RatioOfIgnoreCluster' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameItemSpawnerMaster_C, ProcessingItemClass) == 0x000108, "Member 'UBP_AJBInGameItemSpawnerMaster_C::ProcessingItemClass' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameItemSpawnerMaster_C, ClusterHost) == 0x000110, "Member 'UBP_AJBInGameItemSpawnerMaster_C::ClusterHost' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameItemSpawnerMaster_C, bDebugShowArrows) == 0x000118, "Member 'UBP_AJBInGameItemSpawnerMaster_C::bDebugShowArrows' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameItemSpawnerMaster_C, SpawnedItemCounts) == 0x000120, "Member 'UBP_AJBInGameItemSpawnerMaster_C::SpawnedItemCounts' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameItemSpawnerMaster_C, ProcessingItemSpawnedCount) == 0x000130, "Member 'UBP_AJBInGameItemSpawnerMaster_C::ProcessingItemSpawnedCount' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameItemSpawnerMaster_C, UnfixedSpawnerCount) == 0x000134, "Member 'UBP_AJBInGameItemSpawnerMaster_C::UnfixedSpawnerCount' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameItemSpawnerMaster_C, bItemSpawned) == 0x000138, "Member 'UBP_AJBInGameItemSpawnerMaster_C::bItemSpawned' has a wrong offset!");

}


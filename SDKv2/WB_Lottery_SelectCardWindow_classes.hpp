#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Lottery_SelectCardWindow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C
// 0x00C0 (0x0380 - 0x02C0)
class UWB_Lottery_SelectCardWindow_C final : public UAJBWindowWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Release;                                           // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Appear;                                            // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_1;                                        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_5;                                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_6;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_7;                                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          AJBTextBlock_KindDescription;                      // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          AJBTextBlock_RewardNumMax;                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Horiz_RewardDetail;                                // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Over_RewardCountIcon;                              // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          Txt_RewardNum;                                     // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          Txt_TicketNum;                                     // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Lottery_Card_C*                     WB_LotteryCard_0;                                  // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Lottery_Card_C*                     WB_LotteryCard_1;                                  // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Lottery_Card_C*                     WB_LotteryCard_2;                                  // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UWB_Lottery_Card_C*>             Cards;                                             // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         MaxTime;                                           // 0x0350(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedTime;                                       // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUpdateTimer;                                      // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bPremiumMode;                                      // 0x0359(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A[0x2];                                      // 0x035A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TicketNum;                                         // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentRewardNum;                                  // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxRewardNum;                                      // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUnitTest;                                         // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Lottery_Card_C*                     CacnedTimeoutSelectCard;                           // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WaitTransitionTime;                                // 0x0378(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_Lottery_SelectCardWindow(int32 EntryPoint);
	void SetupParam(bool bPremiumMode_0, int32 TicketNum_0, int32 CurrentRewardNum_0, int32 MaxRewardNum_0);
	void OnFinishedAppearAnim();
	void LotteryCard_2();
	void LotteryCard_1();
	void LotteryCard_0();
	void ResetTimeOutCheck();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnClickedCard(class UWB_Lottery_Card_C* ClickCardWidget);
	void Construct();
	void OnClosingWindow();
	void OnOpeningWindow();
	bool OnInputTurnRate(float Value);
	bool OnInputReleasedUp();
	bool OnInputReleasedTouch();
	bool OnInputReleasedRight();
	bool OnInputReleasedR2();
	bool OnInputReleasedR1();
	bool OnInputReleasedLeft();
	bool OnInputReleasedL3();
	bool OnInputReleasedL2();
	bool OnInputReleasedL1();
	bool OnInputReleasedDown();
	bool OnInputReleasedDecide();
	bool OnInputReleasedCancel();
	bool OnInputPressedUp();
	bool OnInputPressedTouch(const float LocationX, const float LocationY);
	bool OnInputPressedRight();
	bool OnInputPressedR2();
	bool OnInputPressedR1();
	bool OnInputPressedLeft();
	bool OnInputPressedL3();
	bool OnInputPressedL2();
	bool OnInputPressedL1();
	bool OnInputPressedDown();
	bool OnInputPressedDecide();
	bool OnInputPressedCancel();
	bool OnInputMoveRight(float Value);
	bool OnInputMoveForward(float Value);
	bool OnInputLookupRate(float Value);
	bool IsModeless();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Lottery_SelectCardWindow_C">();
	}
	static class UWB_Lottery_SelectCardWindow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Lottery_SelectCardWindow_C>();
	}
};
static_assert(alignof(UWB_Lottery_SelectCardWindow_C) == 0x000008, "Wrong alignment on UWB_Lottery_SelectCardWindow_C");
static_assert(sizeof(UWB_Lottery_SelectCardWindow_C) == 0x000380, "Wrong size on UWB_Lottery_SelectCardWindow_C");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, UberGraphFrame) == 0x0002C0, "Member 'UWB_Lottery_SelectCardWindow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, Release) == 0x0002C8, "Member 'UWB_Lottery_SelectCardWindow_C::Release' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, Appear) == 0x0002D0, "Member 'UWB_Lottery_SelectCardWindow_C::Appear' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, AJBImage_1) == 0x0002D8, "Member 'UWB_Lottery_SelectCardWindow_C::AJBImage_1' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, AJBImage_5) == 0x0002E0, "Member 'UWB_Lottery_SelectCardWindow_C::AJBImage_5' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, AJBImage_6) == 0x0002E8, "Member 'UWB_Lottery_SelectCardWindow_C::AJBImage_6' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, AJBImage_7) == 0x0002F0, "Member 'UWB_Lottery_SelectCardWindow_C::AJBImage_7' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, AJBTextBlock_KindDescription) == 0x0002F8, "Member 'UWB_Lottery_SelectCardWindow_C::AJBTextBlock_KindDescription' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, AJBTextBlock_RewardNumMax) == 0x000300, "Member 'UWB_Lottery_SelectCardWindow_C::AJBTextBlock_RewardNumMax' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, Horiz_RewardDetail) == 0x000308, "Member 'UWB_Lottery_SelectCardWindow_C::Horiz_RewardDetail' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, Over_RewardCountIcon) == 0x000310, "Member 'UWB_Lottery_SelectCardWindow_C::Over_RewardCountIcon' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, Txt_RewardNum) == 0x000318, "Member 'UWB_Lottery_SelectCardWindow_C::Txt_RewardNum' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, Txt_TicketNum) == 0x000320, "Member 'UWB_Lottery_SelectCardWindow_C::Txt_TicketNum' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, WB_LotteryCard_0) == 0x000328, "Member 'UWB_Lottery_SelectCardWindow_C::WB_LotteryCard_0' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, WB_LotteryCard_1) == 0x000330, "Member 'UWB_Lottery_SelectCardWindow_C::WB_LotteryCard_1' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, WB_LotteryCard_2) == 0x000338, "Member 'UWB_Lottery_SelectCardWindow_C::WB_LotteryCard_2' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, Cards) == 0x000340, "Member 'UWB_Lottery_SelectCardWindow_C::Cards' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, MaxTime) == 0x000350, "Member 'UWB_Lottery_SelectCardWindow_C::MaxTime' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, ElapsedTime) == 0x000354, "Member 'UWB_Lottery_SelectCardWindow_C::ElapsedTime' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, bUpdateTimer) == 0x000358, "Member 'UWB_Lottery_SelectCardWindow_C::bUpdateTimer' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, bPremiumMode) == 0x000359, "Member 'UWB_Lottery_SelectCardWindow_C::bPremiumMode' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, TicketNum) == 0x00035C, "Member 'UWB_Lottery_SelectCardWindow_C::TicketNum' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, CurrentRewardNum) == 0x000360, "Member 'UWB_Lottery_SelectCardWindow_C::CurrentRewardNum' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, MaxRewardNum) == 0x000364, "Member 'UWB_Lottery_SelectCardWindow_C::MaxRewardNum' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, bUnitTest) == 0x000368, "Member 'UWB_Lottery_SelectCardWindow_C::bUnitTest' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, CacnedTimeoutSelectCard) == 0x000370, "Member 'UWB_Lottery_SelectCardWindow_C::CacnedTimeoutSelectCard' has a wrong offset!");
static_assert(offsetof(UWB_Lottery_SelectCardWindow_C, WaitTransitionTime) == 0x000378, "Member 'UWB_Lottery_SelectCardWindow_C::WaitTransitionTime' has a wrong offset!");

}


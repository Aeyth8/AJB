#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TestModeMenuBase

#include "Basic.hpp"

#include "WB_TestModeMenuBase_classes.hpp"
#include "WB_TestModeMenuBase_parameters.hpp"


namespace SDK
{

// Function WB_TestModeMenuBase.WB_TestModeMenuBase_C.ExecuteUbergraph_WB_TestModeMenuBase
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TestModeMenuBase_C::ExecuteUbergraph_WB_TestModeMenuBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuBase_C", "ExecuteUbergraph_WB_TestModeMenuBase");

	Params::WB_TestModeMenuBase_C_ExecuteUbergraph_WB_TestModeMenuBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TestModeMenuBase.WB_TestModeMenuBase_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_TestModeMenuBase_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuBase_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TestModeMenuBase.WB_TestModeMenuBase_C.OnClosingWindow
// (Event, Public, BlueprintEvent)

void UWB_TestModeMenuBase_C::OnClosingWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuBase_C", "OnClosingWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TestModeMenuBase.WB_TestModeMenuBase_C.OnOpeningWindow
// (Event, Public, BlueprintEvent)

void UWB_TestModeMenuBase_C::OnOpeningWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuBase_C", "OnOpeningWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TestModeMenuBase.WB_TestModeMenuBase_C.CreateMenuPage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             PageName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ValueOffsetX                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        BasePosition                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             TitleText                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// class UUserWidget*                      PageWidget                                             (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TestModeMenuBase_C::CreateMenuPage(class UClass* Class_0, class FName PageName, float ValueOffsetX, const struct FVector2D& BasePosition, const class FText& TitleText, class UUserWidget** PageWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuBase_C", "CreateMenuPage");

	Params::WB_TestModeMenuBase_C_CreateMenuPage Parms{};

	Parms.Class_0 = Class_0;
	Parms.PageName = PageName;
	Parms.ValueOffsetX = ValueOffsetX;
	Parms.BasePosition = std::move(BasePosition);
	Parms.TitleText = std::move(TitleText);

	UObject::ProcessEvent(Func, &Parms);

	if (PageWidget != nullptr)
		*PageWidget = Parms.PageWidget;
}


// Function WB_TestModeMenuBase.WB_TestModeMenuBase_C.OpenMenuPage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             OpenPageName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TestModeMenuBase_C::OpenMenuPage(class FName OpenPageName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuBase_C", "OpenMenuPage");

	Params::WB_TestModeMenuBase_C_OpenMenuPage Parms{};

	Parms.OpenPageName = OpenPageName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TestModeMenuBase.WB_TestModeMenuBase_C.OpenTopPage
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_TestModeMenuBase_C::OpenTopPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuBase_C", "OpenTopPage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TestModeMenuBase.WB_TestModeMenuBase_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWB_TestModeMenuBase_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuBase_C", "OnKeyDown");

	Params::WB_TestModeMenuBase_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_TestModeMenuBase.WB_TestModeMenuBase_C.IsInputDecideButton
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FKeyEvent                        KeyEvent                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_TestModeMenuBase_C::IsInputDecideButton(struct FKeyEvent& KeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuBase_C", "IsInputDecideButton");

	Params::WB_TestModeMenuBase_C_IsInputDecideButton Parms{};

	Parms.KeyEvent = std::move(KeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	KeyEvent = std::move(Parms.KeyEvent);

	return Parms.ReturnValue;
}


// Function WB_TestModeMenuBase.WB_TestModeMenuBase_C.IsInputCancelButton
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FKeyEvent                        KeyEvent                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_TestModeMenuBase_C::IsInputCancelButton(struct FKeyEvent& KeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuBase_C", "IsInputCancelButton");

	Params::WB_TestModeMenuBase_C_IsInputCancelButton Parms{};

	Parms.KeyEvent = std::move(KeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	KeyEvent = std::move(Parms.KeyEvent);

	return Parms.ReturnValue;
}


// Function WB_TestModeMenuBase.WB_TestModeMenuBase_C.IsInputPrevButton
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FKeyEvent                        KeyEvent                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_TestModeMenuBase_C::IsInputPrevButton(struct FKeyEvent& KeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuBase_C", "IsInputPrevButton");

	Params::WB_TestModeMenuBase_C_IsInputPrevButton Parms{};

	Parms.KeyEvent = std::move(KeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	KeyEvent = std::move(Parms.KeyEvent);

	return Parms.ReturnValue;
}


// Function WB_TestModeMenuBase.WB_TestModeMenuBase_C.IsInputNextButton
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FKeyEvent                        KeyEvent                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_TestModeMenuBase_C::IsInputNextButton(struct FKeyEvent& KeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuBase_C", "IsInputNextButton");

	Params::WB_TestModeMenuBase_C_IsInputNextButton Parms{};

	Parms.KeyEvent = std::move(KeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	KeyEvent = std::move(Parms.KeyEvent);

	return Parms.ReturnValue;
}


// Function WB_TestModeMenuBase.WB_TestModeMenuBase_C.OnKeyUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWB_TestModeMenuBase_C::OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuBase_C", "OnKeyUp");

	Params::WB_TestModeMenuBase_C_OnKeyUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_TestModeMenuBase.WB_TestModeMenuBase_C.ResetMenuParameter
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_TestModeMenuBase_C::ResetMenuParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuBase_C", "ResetMenuParameter");

	UObject::ProcessEvent(Func, nullptr);
}

}


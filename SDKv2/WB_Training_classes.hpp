#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Training

#include "Basic.hpp"

#include "ETrainingCPUStrength_structs.hpp"
#include "Engine_structs.hpp"
#include "AJB_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Training.WB_Training_C
// 0x0110 (0x03D0 - 0x02C0)
class UWB_Training_C final : public UAJBWindowWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Close;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Open;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          AJBTextBlock_OneRow;                               // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          AJBTextBlock_Respawnable;                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          AreaSubTitle;                                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          AreaTitle;                                         // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_TwoRow;                                // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ArrowButton_L_C*                    WB_ArrowButton_CPUNumDown;                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ArrowButton_C*                      WB_ArrowButton_CPUNumUp;                           // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ArrowButton_L_C*                    WB_ArrowButton_CPUStrengthDown;                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ArrowButton_C*                      WB_ArrowButton_CPUStrengthUp;                      // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ArrowButton_L_C*                    WB_ArrowButton_RespawnDown;                        // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ArrowButton_C*                      WB_ArrowButton_RespawnUp;                          // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CommonButton_C*                     WB_CommonButton_START;                             // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Easy_C*                             WB_EASY;                                           // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Hard_C*                             WB_Hard;                                           // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Normal_C*                           WB_Normal;                                         // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_VeryHard_C*                         WB_VERYHARD;                                       // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_AreaTitle;                          // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_difficulty;                         // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ABP_AJBOutGameHUD_C*                    CachedOutGameHUD;                                  // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CountDownMaxTime;                                  // 0x0370(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bEnableUpdateTimeCountDown;                        // 0x0374(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_375[0x3];                                      // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ElapsedTime;                                       // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentDisplayAreaIndex;                           // 0x037C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCurrentRespawnable;                               // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   EnableSpawnText;                                   // 0x0388(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	class FText                                   DisableSpawnText;                                  // 0x03A0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	ETrainingCPUStrength                          CurrentCPUStrength;                                // 0x03B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x3];                                      // 0x03B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CPUDefaultNum;                                     // 0x03BC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<int32>                                 DamageAreaIndexList;                               // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_WB_Training(int32 EntryPoint);
	void StopTimeCountDown();
	void StartTimeCountDown();
	void OnOpeningWindow();
	void ForceTransitionNextFlow();
	void UpdateCPUStrength(ETrainingCPUStrength CPUStrength);
	void UpdateRespawnable(bool bRespawnable);
	void UpdateAreaID(int32 Num);
	void BndEvt__WB_ArrowButton_RespawnUp_K2Node_ComponentBoundEvent_6_OnAJBButtonEvent__DelegateSignature(class UAJBButtonWidget* OwnerWidget, class UAJBButton* TargetButton);
	void BndEvt__WB_ArrowButton_RespawnDown_K2Node_ComponentBoundEvent_5_OnAJBButtonEvent__DelegateSignature(class UAJBButtonWidget* OwnerWidget, class UAJBButton* TargetButton);
	void BndEvt__WB_ArrowButton_CPUNumUp_K2Node_ComponentBoundEvent_4_OnAJBButtonEvent__DelegateSignature(class UAJBButtonWidget* OwnerWidget, class UAJBButton* TargetButton);
	void BndEvt__WB_ArrowButton_CPUNumDown_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature(class UAJBButtonWidget* OwnerWidget, class UAJBButton* TargetButton);
	void BndEvt__WB_ArrowButton_CPULevelUp_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature(class UAJBButtonWidget* OwnerWidget, class UAJBButton* TargetButton);
	void BndEvt__WB_ArrowButton_CPULevelDown_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature(class UAJBButtonWidget* OwnerWidget, class UAJBButton* TargetButton);
	void BndEvt__WB_CommonButton_START_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature(class UAJBButtonWidget* OwnerWidget, class UAJBButton* TargetButton);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void OnCloseAnimationFinished();
	void OnClosingWindow();
	void SetTimeCountDownElapsedTime(float ElapsedTime_0);
	void OnOpenAnimationFinished();
	void Finished_4BE78F6D4E71950BAFF06BB963E4A64D();
	void Finished_431388E24B39C9EA920BA9AF0F962282();
	void SwitchingCPUStrength();
	void SetAreaTitle();
	bool OnInputTurnRate(float Value);
	bool OnInputReleasedUp();
	bool OnInputReleasedTouch();
	bool OnInputReleasedRight();
	bool OnInputReleasedLeft();
	bool OnInputReleasedDown();
	bool OnInputReleasedDecide();
	bool OnInputReleasedCancel();
	bool OnInputPressedUp();
	bool OnInputPressedTouch(const float LocationX, const float LocationY);
	bool OnInputPressedRight();
	bool OnInputPressedLeft();
	bool OnInputPressedDown();
	bool OnInputPressedDecide();
	bool OnInputPressedCancel();
	bool OnInputMoveRight(float Value);
	bool OnInputMoveForward(float Value);
	bool OnInputLookupRate(float Value);
	bool IsModeless();
	bool OnInputReleasedR2();
	bool OnInputReleasedR1();
	bool OnInputReleasedL2();
	bool OnInputReleasedL1();
	bool OnInputPressedR2();
	bool OnInputPressedR1();
	bool OnInputPressedL2();
	bool OnInputPressedL1();
	bool OnInputReleasedL3();
	bool OnInputPressedL3();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Training_C">();
	}
	static class UWB_Training_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Training_C>();
	}
};
static_assert(alignof(UWB_Training_C) == 0x000008, "Wrong alignment on UWB_Training_C");
static_assert(sizeof(UWB_Training_C) == 0x0003D0, "Wrong size on UWB_Training_C");
static_assert(offsetof(UWB_Training_C, UberGraphFrame) == 0x0002C0, "Member 'UWB_Training_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, Anim_Close) == 0x0002C8, "Member 'UWB_Training_C::Anim_Close' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, Anim_Open) == 0x0002D0, "Member 'UWB_Training_C::Anim_Open' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, AJBTextBlock_OneRow) == 0x0002D8, "Member 'UWB_Training_C::AJBTextBlock_OneRow' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, AJBTextBlock_Respawnable) == 0x0002E0, "Member 'UWB_Training_C::AJBTextBlock_Respawnable' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, AreaSubTitle) == 0x0002E8, "Member 'UWB_Training_C::AreaSubTitle' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, AreaTitle) == 0x0002F0, "Member 'UWB_Training_C::AreaTitle' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, VerticalBox_TwoRow) == 0x0002F8, "Member 'UWB_Training_C::VerticalBox_TwoRow' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, WB_ArrowButton_CPUNumDown) == 0x000300, "Member 'UWB_Training_C::WB_ArrowButton_CPUNumDown' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, WB_ArrowButton_CPUNumUp) == 0x000308, "Member 'UWB_Training_C::WB_ArrowButton_CPUNumUp' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, WB_ArrowButton_CPUStrengthDown) == 0x000310, "Member 'UWB_Training_C::WB_ArrowButton_CPUStrengthDown' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, WB_ArrowButton_CPUStrengthUp) == 0x000318, "Member 'UWB_Training_C::WB_ArrowButton_CPUStrengthUp' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, WB_ArrowButton_RespawnDown) == 0x000320, "Member 'UWB_Training_C::WB_ArrowButton_RespawnDown' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, WB_ArrowButton_RespawnUp) == 0x000328, "Member 'UWB_Training_C::WB_ArrowButton_RespawnUp' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, WB_CommonButton_START) == 0x000330, "Member 'UWB_Training_C::WB_CommonButton_START' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, WB_EASY) == 0x000338, "Member 'UWB_Training_C::WB_EASY' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, WB_Hard) == 0x000340, "Member 'UWB_Training_C::WB_Hard' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, WB_Normal) == 0x000348, "Member 'UWB_Training_C::WB_Normal' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, WB_VERYHARD) == 0x000350, "Member 'UWB_Training_C::WB_VERYHARD' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, WidgetSwitcher_AreaTitle) == 0x000358, "Member 'UWB_Training_C::WidgetSwitcher_AreaTitle' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, WidgetSwitcher_difficulty) == 0x000360, "Member 'UWB_Training_C::WidgetSwitcher_difficulty' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, CachedOutGameHUD) == 0x000368, "Member 'UWB_Training_C::CachedOutGameHUD' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, CountDownMaxTime) == 0x000370, "Member 'UWB_Training_C::CountDownMaxTime' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, bEnableUpdateTimeCountDown) == 0x000374, "Member 'UWB_Training_C::bEnableUpdateTimeCountDown' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, ElapsedTime) == 0x000378, "Member 'UWB_Training_C::ElapsedTime' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, CurrentDisplayAreaIndex) == 0x00037C, "Member 'UWB_Training_C::CurrentDisplayAreaIndex' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, bCurrentRespawnable) == 0x000380, "Member 'UWB_Training_C::bCurrentRespawnable' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, EnableSpawnText) == 0x000388, "Member 'UWB_Training_C::EnableSpawnText' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, DisableSpawnText) == 0x0003A0, "Member 'UWB_Training_C::DisableSpawnText' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, CurrentCPUStrength) == 0x0003B8, "Member 'UWB_Training_C::CurrentCPUStrength' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, CPUDefaultNum) == 0x0003BC, "Member 'UWB_Training_C::CPUDefaultNum' has a wrong offset!");
static_assert(offsetof(UWB_Training_C, DamageAreaIndexList) == 0x0003C0, "Member 'UWB_Training_C::DamageAreaIndexList' has a wrong offset!");

}


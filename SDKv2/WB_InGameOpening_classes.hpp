#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_InGameOpening

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_InGameOpening.WB_InGameOpening_C
// 0x0078 (0x0338 - 0x02C0)
class UWB_InGameOpening_C final : public UAJBWindowWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       CountAnim;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Opening;                                           // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_Belt;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_Flare;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_FlareL;                                   // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_MoveFlare1;                               // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_OTGBelt;                                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          CountDownText;                                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          CountDownText_Effect;                              // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         CountNumber;                                       // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUnitTest;                                         // 0x0314(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_315[0x3];                                      // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         OpeningSequencer;                                  // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBLevelSequenceActor*                 CachedSequencerActor;                              // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnFinishedCountDownDispatcher;                     // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnFinishedCountDownDispatcher__DelegateSignature();
	void ExecuteUbergraph_WB_InGameOpening(int32 EntryPoint);
	void OnClosingWindow();
	void OnFinishedAnim();
	void OnFinishedCountDownAnim();
	void OnOpeningWindow();
	void PlayCountDown();
	void PlayOpenTheGame();
	void ResetGate();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_InGameOpening_C">();
	}
	static class UWB_InGameOpening_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_InGameOpening_C>();
	}
};
static_assert(alignof(UWB_InGameOpening_C) == 0x000008, "Wrong alignment on UWB_InGameOpening_C");
static_assert(sizeof(UWB_InGameOpening_C) == 0x000338, "Wrong size on UWB_InGameOpening_C");
static_assert(offsetof(UWB_InGameOpening_C, UberGraphFrame) == 0x0002C0, "Member 'UWB_InGameOpening_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_InGameOpening_C, CountAnim) == 0x0002C8, "Member 'UWB_InGameOpening_C::CountAnim' has a wrong offset!");
static_assert(offsetof(UWB_InGameOpening_C, Opening) == 0x0002D0, "Member 'UWB_InGameOpening_C::Opening' has a wrong offset!");
static_assert(offsetof(UWB_InGameOpening_C, AJBImage_Belt) == 0x0002D8, "Member 'UWB_InGameOpening_C::AJBImage_Belt' has a wrong offset!");
static_assert(offsetof(UWB_InGameOpening_C, AJBImage_Flare) == 0x0002E0, "Member 'UWB_InGameOpening_C::AJBImage_Flare' has a wrong offset!");
static_assert(offsetof(UWB_InGameOpening_C, AJBImage_FlareL) == 0x0002E8, "Member 'UWB_InGameOpening_C::AJBImage_FlareL' has a wrong offset!");
static_assert(offsetof(UWB_InGameOpening_C, AJBImage_MoveFlare1) == 0x0002F0, "Member 'UWB_InGameOpening_C::AJBImage_MoveFlare1' has a wrong offset!");
static_assert(offsetof(UWB_InGameOpening_C, AJBImage_OTGBelt) == 0x0002F8, "Member 'UWB_InGameOpening_C::AJBImage_OTGBelt' has a wrong offset!");
static_assert(offsetof(UWB_InGameOpening_C, CountDownText) == 0x000300, "Member 'UWB_InGameOpening_C::CountDownText' has a wrong offset!");
static_assert(offsetof(UWB_InGameOpening_C, CountDownText_Effect) == 0x000308, "Member 'UWB_InGameOpening_C::CountDownText_Effect' has a wrong offset!");
static_assert(offsetof(UWB_InGameOpening_C, CountNumber) == 0x000310, "Member 'UWB_InGameOpening_C::CountNumber' has a wrong offset!");
static_assert(offsetof(UWB_InGameOpening_C, bUnitTest) == 0x000314, "Member 'UWB_InGameOpening_C::bUnitTest' has a wrong offset!");
static_assert(offsetof(UWB_InGameOpening_C, OpeningSequencer) == 0x000318, "Member 'UWB_InGameOpening_C::OpeningSequencer' has a wrong offset!");
static_assert(offsetof(UWB_InGameOpening_C, CachedSequencerActor) == 0x000320, "Member 'UWB_InGameOpening_C::CachedSequencerActor' has a wrong offset!");
static_assert(offsetof(UWB_InGameOpening_C, OnFinishedCountDownDispatcher) == 0x000328, "Member 'UWB_InGameOpening_C::OnFinishedCountDownDispatcher' has a wrong offset!");

}


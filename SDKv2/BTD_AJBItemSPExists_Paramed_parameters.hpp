#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_AJBItemSPExists_Paramed

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTD_AJBItemSPExists_Paramed.BTD_AJBItemSPExists_Paramed_C.PerformConditionCheckAI
// 0x00C0 (0x00C0 - 0x0000)
struct BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameAIImaginaryCharacter_C*    CallFunc_GetImaginaryCharacterBody_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetRawPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_ReturnValue;                  // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_ReturnValue1;                 // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIRecognition_C*           CallFunc_GetRecognition_ReturnValue;               // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBInGameItem_SP_C*>         CallFunc_GetItemSPs_ReturnValue;                   // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBInGameAIRecognition_C*           CallFunc_GetRecognition_ReturnValue1;              // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasObjectValue_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameItem_SP_C*                 CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNavigationPath*                        CallFunc_FindPathToLocationSynchronously_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AI_VectorDiffSq_ReturnValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPathValidAndReachable_ReturnValue;      // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatParam_ReturnValue;                // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatParam_Found;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Square_ReturnValue;                       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI) == 0x000008, "Wrong alignment on BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI");
static_assert(sizeof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI) == 0x0000C0, "Wrong size on BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, OwnerController) == 0x000000, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, ControlledPawn) == 0x000008, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, ReturnValue) == 0x000010, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, Temp_bool_IsClosed_Variable) == 0x000011, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, CallFunc_GetImaginaryCharacterBody_ReturnValue) == 0x000018, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::CallFunc_GetImaginaryCharacterBody_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, CallFunc_GetRawPawn_ReturnValue) == 0x000020, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::CallFunc_GetRawPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, CallFunc_GetLocation_ReturnValue) == 0x000028, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::CallFunc_GetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, CallFunc_GetLocation_ReturnValue1) == 0x000034, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::CallFunc_GetLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, CallFunc_GetRecognition_ReturnValue) == 0x000040, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::CallFunc_GetRecognition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, Temp_bool_Has_Been_Initd_Variable) == 0x000048, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, CallFunc_GetItemSPs_ReturnValue) == 0x000050, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::CallFunc_GetItemSPs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, CallFunc_GetRecognition_ReturnValue1) == 0x000068, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::CallFunc_GetRecognition_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, CallFunc_HasObjectValue_ReturnValue) == 0x000070, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::CallFunc_HasObjectValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, CallFunc_Array_Get_Item) == 0x000088, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, CallFunc_FindPathToLocationSynchronously_ReturnValue) == 0x0000A0, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::CallFunc_FindPathToLocationSynchronously_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, CallFunc_AI_VectorDiffSq_ReturnValue) == 0x0000A8, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::CallFunc_AI_VectorDiffSq_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, CallFunc_IsPathValidAndReachable_ReturnValue) == 0x0000AC, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::CallFunc_IsPathValidAndReachable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, Temp_bool_True_if_break_was_hit_Variable) == 0x0000AD, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000AE, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, CallFunc_Not_PreBool_ReturnValue) == 0x0000AF, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, CallFunc_BooleanAND_ReturnValue) == 0x0000B0, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, CallFunc_GetFloatParam_ReturnValue) == 0x0000B4, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::CallFunc_GetFloatParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, CallFunc_GetFloatParam_Found) == 0x0000B8, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::CallFunc_GetFloatParam_Found' has a wrong offset!");
static_assert(offsetof(BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI, CallFunc_Square_ReturnValue) == 0x0000BC, "Member 'BTD_AJBItemSPExists_Paramed_C_PerformConditionCheckAI::CallFunc_Square_ReturnValue' has a wrong offset!");

}


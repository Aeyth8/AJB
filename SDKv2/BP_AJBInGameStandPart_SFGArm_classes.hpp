#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameStandPart_SFGArm

#include "Basic.hpp"

#include "E_SFGArmType_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBInGameStandPart_SFGArm.BP_AJBInGameStandPart_SFGArm_C
// 0x0020 (0x0348 - 0x0328)
class ABP_AJBInGameStandPart_SFGArm_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 Arm;                                               // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	E_SFGArmType                                  ArmType;                                           // 0x0340(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBInGameStandPart_SFGArm(int32 EntryPoint);
	void ChangeSkin(const class FString& StandName, uint8 SkinID);
	void Init_Server_(E_SFGArmType ArmType_0);
	void OnLoaded_298012C24B597589320DE7BED25641A8(class UObject* Loaded);
	void UserConstructionScript();
	void SetArmMesh(E_SFGArmType ArmType_0);
	void OnRep_ArmType();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBInGameStandPart_SFGArm_C">();
	}
	static class ABP_AJBInGameStandPart_SFGArm_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBInGameStandPart_SFGArm_C>();
	}
};
static_assert(alignof(ABP_AJBInGameStandPart_SFGArm_C) == 0x000008, "Wrong alignment on ABP_AJBInGameStandPart_SFGArm_C");
static_assert(sizeof(ABP_AJBInGameStandPart_SFGArm_C) == 0x000348, "Wrong size on ABP_AJBInGameStandPart_SFGArm_C");
static_assert(offsetof(ABP_AJBInGameStandPart_SFGArm_C, UberGraphFrame) == 0x000328, "Member 'ABP_AJBInGameStandPart_SFGArm_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStandPart_SFGArm_C, Arm) == 0x000330, "Member 'ABP_AJBInGameStandPart_SFGArm_C::Arm' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStandPart_SFGArm_C, DefaultSceneRoot) == 0x000338, "Member 'ABP_AJBInGameStandPart_SFGArm_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStandPart_SFGArm_C, ArmType) == 0x000340, "Member 'ABP_AJBInGameStandPart_SFGArm_C::ArmType' has a wrong offset!");

}


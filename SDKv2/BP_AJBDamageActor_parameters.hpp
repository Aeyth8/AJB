#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBDamageActor

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.OnTargetHit__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBDamageActor_C_OnTargetHit__DelegateSignature final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableDamage;                                    // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsPenetration_0;                                  // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_OnTargetHit__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_OnTargetHit__DelegateSignature");
static_assert(sizeof(BP_AJBDamageActor_C_OnTargetHit__DelegateSignature) == 0x000028, "Wrong size on BP_AJBDamageActor_C_OnTargetHit__DelegateSignature");
static_assert(offsetof(BP_AJBDamageActor_C_OnTargetHit__DelegateSignature, HitActor) == 0x000000, "Member 'BP_AJBDamageActor_C_OnTargetHit__DelegateSignature::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_OnTargetHit__DelegateSignature, HitLocation) == 0x000008, "Member 'BP_AJBDamageActor_C_OnTargetHit__DelegateSignature::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_OnTargetHit__DelegateSignature, HitNormal) == 0x000014, "Member 'BP_AJBDamageActor_C_OnTargetHit__DelegateSignature::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_OnTargetHit__DelegateSignature, SurfaceType) == 0x000020, "Member 'BP_AJBDamageActor_C_OnTargetHit__DelegateSignature::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_OnTargetHit__DelegateSignature, bDisableDamage) == 0x000021, "Member 'BP_AJBDamageActor_C_OnTargetHit__DelegateSignature::bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_OnTargetHit__DelegateSignature, bIsPenetration_0) == 0x000022, "Member 'BP_AJBDamageActor_C_OnTargetHit__DelegateSignature::bIsPenetration_0' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.OnBlocking__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBDamageActor_C_OnBlocking__DelegateSignature final
{
public:
	class AActor*                                 BlockedActor_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CuttingRate;                                       // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInvincible;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsPenetration_0;                                  // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_OnBlocking__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_OnBlocking__DelegateSignature");
static_assert(sizeof(BP_AJBDamageActor_C_OnBlocking__DelegateSignature) == 0x000020, "Wrong size on BP_AJBDamageActor_C_OnBlocking__DelegateSignature");
static_assert(offsetof(BP_AJBDamageActor_C_OnBlocking__DelegateSignature, BlockedActor_0) == 0x000000, "Member 'BP_AJBDamageActor_C_OnBlocking__DelegateSignature::BlockedActor_0' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_OnBlocking__DelegateSignature, HitLocation) == 0x000008, "Member 'BP_AJBDamageActor_C_OnBlocking__DelegateSignature::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_OnBlocking__DelegateSignature, CuttingRate) == 0x000014, "Member 'BP_AJBDamageActor_C_OnBlocking__DelegateSignature::CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_OnBlocking__DelegateSignature, bInvincible) == 0x000018, "Member 'BP_AJBDamageActor_C_OnBlocking__DelegateSignature::bInvincible' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_OnBlocking__DelegateSignature, bIsPenetration_0) == 0x000019, "Member 'BP_AJBDamageActor_C_OnBlocking__DelegateSignature::bIsPenetration_0' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.OnTargetOverlap__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBDamageActor_C_OnTargetOverlap__DelegateSignature final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDamageActor_C_OnTargetOverlap__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_OnTargetOverlap__DelegateSignature");
static_assert(sizeof(BP_AJBDamageActor_C_OnTargetOverlap__DelegateSignature) == 0x000020, "Wrong size on BP_AJBDamageActor_C_OnTargetOverlap__DelegateSignature");
static_assert(offsetof(BP_AJBDamageActor_C_OnTargetOverlap__DelegateSignature, Target) == 0x000000, "Member 'BP_AJBDamageActor_C_OnTargetOverlap__DelegateSignature::Target' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_OnTargetOverlap__DelegateSignature, DamageCauser) == 0x000008, "Member 'BP_AJBDamageActor_C_OnTargetOverlap__DelegateSignature::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_OnTargetOverlap__DelegateSignature, HitLocation) == 0x000010, "Member 'BP_AJBDamageActor_C_OnTargetOverlap__DelegateSignature::HitLocation' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.OnPenetrateHit__DelegateSignature
// 0x001C (0x001C - 0x0000)
struct BP_AJBDamageActor_C_OnPenetrateHit__DelegateSignature final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCharacter;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_OnPenetrateHit__DelegateSignature) == 0x000004, "Wrong alignment on BP_AJBDamageActor_C_OnPenetrateHit__DelegateSignature");
static_assert(sizeof(BP_AJBDamageActor_C_OnPenetrateHit__DelegateSignature) == 0x00001C, "Wrong size on BP_AJBDamageActor_C_OnPenetrateHit__DelegateSignature");
static_assert(offsetof(BP_AJBDamageActor_C_OnPenetrateHit__DelegateSignature, Location) == 0x000000, "Member 'BP_AJBDamageActor_C_OnPenetrateHit__DelegateSignature::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_OnPenetrateHit__DelegateSignature, Normal) == 0x00000C, "Member 'BP_AJBDamageActor_C_OnPenetrateHit__DelegateSignature::Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_OnPenetrateHit__DelegateSignature, bCharacter) == 0x000018, "Member 'BP_AJBDamageActor_C_OnPenetrateHit__DelegateSignature::bCharacter' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.ExecuteUbergraph_BP_AJBDamageActor
// 0x0740 (0x0740 - 0x0000)
struct BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0028(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x00D0(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckShouldCharacterHit_bShouldCharacterHit; // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15E[0x2];                                      // 0x015E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0168(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0174(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0180(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x018C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckTargetMatch_bMatch;                  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_BlockingRushOperatorInterface_C> K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface; // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBlockingValid_bBlockingValid;        // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F2[0x6];                                      // 0x01F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface;              // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IfCheckDamageOverlap_ReturnValue;         // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20A[0x6];                                      // 0x020A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_BlockingRushOperatorInterface_C> K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface1; // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_BlockingRushOperatorInterface_C> K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface2; // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBlockingComponent_bBlockingComponent; // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IgnoreGivePassive_bIgnore;                // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x023B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface1;             // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface2;             // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bCharacter;                   // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bLeftAP;                      // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26B[0x5];                                      // 0x026B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_OwnHitParam_ParticleTagBlockedByAAP;      // 0x0270(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_OwnHitParam_SETagBlockedByAAP;            // 0x0278(0x0008)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface3;             // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_BlockingRushOperatorInterface_C> K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface3; // 0x0298(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveFromHittedActor_ReturnValue;        // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x02AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue1;      // 0x02AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x02AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AF[0x1];                                      // 0x02AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface4;             // 0x02B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bCharacter1;                  // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bLeftAP1;                     // 0x02C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C3[0x5];                                      // 0x02C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_OwnHitParam_ParticleTagBlockedByAAP1;     // 0x02C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_OwnHitParam_SETagBlockedByAAP1;           // 0x02D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IfCheckDamageOverlap_ReturnValue1;        // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DA[0x2];                                      // 0x02DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalcHitLocation_Deprecated__HitLocation;  // 0x02DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcHitLocation_Deprecated__HitNormal;    // 0x02E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Target;                         // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_CauserType;                     // 0x0308(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SerialNumber;                   // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface5;             // 0x0328(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDisableDamage_bDisableDamage;        // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckNoDamage_bNoDamage;                  // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x033B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckTargetSelf_bTarget;                  // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x033D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E[0x2];                                      // 0x033E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect; // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A[0x2];                                      // 0x034A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x034C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362[0x6];                                      // 0x0362(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue1;             // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_372[0x6];                                      // 0x0372(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess11;                     // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBInGameSkillComponent*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0390(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_PassiveSkillAffecterInterface_C> K2Node_DynamicCast_AsBI_Passive_Skill_Affecter_Interface; // 0x0398(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess12;                     // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetPassiveSkillTag_PassiveSkillTag;       // 0x03B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDisablePassive_bDisablePassive;      // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x03BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB[0x5];                                      // 0x03BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess13;                     // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x03DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue6;                 // 0x03DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_OverlappedComponent;                  // 0x03E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x03F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_OtherBodyIndex;                       // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bFromSweep;                           // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FD[0x3];                                      // 0x03FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_SweepResult;                          // 0x0400(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FGameplayTag                           CallFunc_GetSkillInfoOnPassiveAdded_SkillTag;      // 0x0488(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillInfoOnPassiveAdded_SerialNumber;  // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcHitLocation_HitImpactPoint;           // 0x0494(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcHitLocation_HitImpactNormal;          // 0x04A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcHitLocation_HitLocation;              // 0x04AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface6;             // 0x04B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess14;                     // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface7;             // 0x04D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess15;                     // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckTargetSelf_bTarget1;                 // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bCharacter2;                  // 0x04E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bLeftAP2;                     // 0x04E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E4[0x4];                                      // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_OwnHitParam_ParticleTagBlockedByAAP2;     // 0x04E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_OwnHitParam_SETagBlockedByAAP2;           // 0x04F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue2;      // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F9[0x7];                                      // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_BlockedActor;                         // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor1;                          // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0510(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x051C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_CuttingProjectile___;                 // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_CuttingOther___;                      // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInvincible;                          // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bReflectProjectile;                   // 0x0531(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_532[0x2];                                      // 0x0532(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Event_ReflectRotation;                      // 0x0534(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAvoidSkill;                          // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bSeparateStandAttack;                 // 0x0541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_542[0x6];                                      // 0x0542(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_ReflectSkillTag;                      // 0x0548(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_BlockingRushOperatorInterface_C> K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface4; // 0x0558(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess16;                     // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_569[0x3];                                      // 0x0569(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IgnoreGivePassive_bIgnore1;               // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue7;                 // 0x0571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_572[0x2];                                      // 0x0572(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue1;              // 0x0579(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x057A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue8;                 // 0x057B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcHitLocation_Deprecated__HitLocation1; // 0x0580(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcHitLocation_Deprecated__HitNormal1;   // 0x058C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue4;                    // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue5;                    // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character3;     // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess17;                     // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B1[0x7];                                      // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base;    // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess18;                     // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x05C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C2[0x6];                                      // 0x05C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface; // 0x05C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess19;                     // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D9[0x3];                                      // 0x05D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLaunchedActorHomeLocation_Location;    // 0x05DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue6;                    // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1;       // 0x05F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue2;       // 0x05FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue1;                // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0614(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0615(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_616[0x2];                                      // 0x0616(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue7;                    // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character4;     // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess20;                     // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_629[0x3];                                      // 0x0629(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalcDamage_DamageForHPAP;                 // 0x062C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcDamage_DamageForAAP;                  // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcDamage_CutDamage;                     // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcDamage_bRemainHP;                     // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcDamage_bDamageIsCutByAAP;             // 0x0639(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63A[0x6];                                      // 0x063A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface1; // 0x0640(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess21;                     // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_651[0x3];                                      // 0x0651(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLaunchedActorHomeLocation_Location1;   // 0x0654(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue3;       // 0x0660(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66C[0x4];                                      // 0x066C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue8;                    // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0678(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_684[0x4];                                      // 0x0684(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character5;     // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess22;                     // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_691[0x3];                                      // 0x0691(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0694(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A1[0x3];                                      // 0x06A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue3;                   // 0x06A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue4;                   // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AC[0x4];                                      // 0x06AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetSkillInfoOnPassiveAdded_SkillTag1;     // 0x06B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillInfoOnPassiveAdded_SerialNumber1; // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BC[0x4];                                      // 0x06BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetSkillInfoOnPassiveAdded_SkillTag2;     // 0x06C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillInfoOnPassiveAdded_SerialNumber2; // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CC[0x4];                                      // 0x06CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x06D0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue9;                 // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0711(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_712[0x2];                                      // 0x0712(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0719(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select1_Default;                            // 0x071A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x071B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select2_Default;                            // 0x071C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x071D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71E[0x2];                                      // 0x071E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select3_Default;                            // 0x0720(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_724[0x4];                                      // 0x0724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_BlockingRushInterface_C> K2Node_DynamicCast_AsBI_Blocking_Rush_Interface;   // 0x0728(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess23;                     // 0x0738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BlockPenetrate_bBlock;                    // 0x0739(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckIgnoreBlocking_bIgnore;              // 0x073A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue10;                // 0x073B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x073C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor) == 0x000010, "Wrong alignment on BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor");
static_assert(sizeof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor) == 0x000740, "Wrong size on BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, EntryPoint) == 0x000000, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_IsServer_ReturnValue) == 0x000005, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_CustomEvent_OtherActor) == 0x000010, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_CustomEvent_OtherComp) == 0x000018, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_CustomEvent_bFromSweep) == 0x000020, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_CustomEvent_SweepResult) == 0x000028, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000B0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_ComponentBoundEvent_OtherActor) == 0x0000B8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_ComponentBoundEvent_OtherComp) == 0x0000C0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000C8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_ComponentBoundEvent_bFromSweep) == 0x0000CC, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_ComponentBoundEvent_SweepResult) == 0x0000D0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetSurfaceType_ReturnValue) == 0x000158, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetCollisionObjectType_ReturnValue) == 0x000159, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_CheckShouldCharacterHit_bShouldCharacterHit) == 0x00015A, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_CheckShouldCharacterHit_bShouldCharacterHit' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00015B, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BreakHitResult_bBlockingHit) == 0x00015C, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BreakHitResult_bInitialOverlap) == 0x00015D, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BreakHitResult_Time) == 0x000160, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BreakHitResult_Distance) == 0x000164, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BreakHitResult_Location) == 0x000168, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BreakHitResult_ImpactPoint) == 0x000174, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BreakHitResult_Normal) == 0x000180, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BreakHitResult_ImpactNormal) == 0x00018C, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BreakHitResult_PhysMat) == 0x000198, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BreakHitResult_HitActor) == 0x0001A0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BreakHitResult_HitComponent) == 0x0001A8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BreakHitResult_HitBoneName) == 0x0001B0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BreakHitResult_HitItem) == 0x0001B8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BreakHitResult_FaceIndex) == 0x0001BC, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BreakHitResult_TraceStart) == 0x0001C0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BreakHitResult_TraceEnd) == 0x0001CC, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_CheckTargetMatch_bMatch) == 0x0001D8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_CheckTargetMatch_bMatch' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface) == 0x0001E0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess) == 0x0001F0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_CheckBlockingValid_bBlockingValid) == 0x0001F1, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_CheckBlockingValid_bBlockingValid' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBI_AJBInterface) == 0x0001F8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBI_AJBInterface' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess1) == 0x000208, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_IfCheckDamageOverlap_ReturnValue) == 0x000209, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_IfCheckDamageOverlap_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface1) == 0x000210, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess2) == 0x000220, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface2) == 0x000228, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess3) == 0x000238, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_CheckBlockingComponent_bBlockingComponent) == 0x000239, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_CheckBlockingComponent_bBlockingComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_IgnoreGivePassive_bIgnore) == 0x00023A, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_IgnoreGivePassive_bIgnore' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Not_PreBool_ReturnValue1) == 0x00023B, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBI_AJBInterface1) == 0x000240, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBI_AJBInterface1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess4) == 0x000250, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBI_AJBInterface2) == 0x000258, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBI_AJBInterface2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess5) == 0x000268, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_OwnHitParam_bCharacter) == 0x000269, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_OwnHitParam_bCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_OwnHitParam_bLeftAP) == 0x00026A, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_OwnHitParam_bLeftAP' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_OwnHitParam_ParticleTagBlockedByAAP) == 0x000270, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_OwnHitParam_ParticleTagBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_OwnHitParam_SETagBlockedByAAP) == 0x000278, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_OwnHitParam_SETagBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBI_AJBInterface3) == 0x000280, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBI_AJBInterface3' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess6) == 0x000290, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface3) == 0x000298, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface3' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess7) == 0x0002A8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_RemoveFromHittedActor_ReturnValue) == 0x0002A9, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_RemoveFromHittedActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_DoesImplementInterface_ReturnValue) == 0x0002AA, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_DoesImplementInterface_ReturnValue1) == 0x0002AB, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_DoesImplementInterface_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_IsValid_ReturnValue) == 0x0002AC, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Not_PreBool_ReturnValue2) == 0x0002AD, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BooleanOR_ReturnValue) == 0x0002AE, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBI_AJBInterface4) == 0x0002B0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBI_AJBInterface4' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess8) == 0x0002C0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_OwnHitParam_bCharacter1) == 0x0002C1, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_OwnHitParam_bCharacter1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_OwnHitParam_bLeftAP1) == 0x0002C2, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_OwnHitParam_bLeftAP1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_OwnHitParam_ParticleTagBlockedByAAP1) == 0x0002C8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_OwnHitParam_ParticleTagBlockedByAAP1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_OwnHitParam_SETagBlockedByAAP1) == 0x0002D0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_OwnHitParam_SETagBlockedByAAP1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_IfCheckDamageOverlap_ReturnValue1) == 0x0002D8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_IfCheckDamageOverlap_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BooleanAND_ReturnValue) == 0x0002D9, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_CalcHitLocation_Deprecated__HitLocation) == 0x0002DC, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_CalcHitLocation_Deprecated__HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_CalcHitLocation_Deprecated__HitNormal) == 0x0002E8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_CalcHitLocation_Deprecated__HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetOwner_ReturnValue) == 0x0002F8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_CustomEvent_Target) == 0x000300, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_CustomEvent_CauserType) == 0x000308, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_CustomEvent_CauserType' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_CustomEvent_SerialNumber) == 0x000310, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_CustomEvent_SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000318, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess9) == 0x000320, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBI_AJBInterface5) == 0x000328, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBI_AJBInterface5' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess10) == 0x000338, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_CheckDisableDamage_bDisableDamage) == 0x000339, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_CheckDisableDamage_bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_CheckNoDamage_bNoDamage) == 0x00033A, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_CheckNoDamage_bNoDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BooleanOR_ReturnValue1) == 0x00033B, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_CheckTargetSelf_bTarget) == 0x00033C, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_CheckTargetSelf_bTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Not_PreBool_ReturnValue3) == 0x00033D, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect) == 0x000340, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_IsValid_ReturnValue1) == 0x000348, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000349, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00034C, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, Temp_bool_Variable) == 0x000358, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_VSize_ReturnValue) == 0x00035C, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000360, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_MakeLiteralBool_ReturnValue) == 0x000361, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetObjectClass_ReturnValue) == 0x000368, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_MakeLiteralBool_ReturnValue1) == 0x000370, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_MakeLiteralBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_ClassIsChildOf_ReturnValue) == 0x000371, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetOwner_ReturnValue1) == 0x000378, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000380, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess11) == 0x000388, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess11' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetComponentByClass_ReturnValue) == 0x000390, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBI_Passive_Skill_Affecter_Interface) == 0x000398, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBI_Passive_Skill_Affecter_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess12) == 0x0003A8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess12' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetPassiveSkillTag_PassiveSkillTag) == 0x0003B0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetPassiveSkillTag_PassiveSkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_IsValid_ReturnValue2) == 0x0003B8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_CheckDisablePassive_bDisablePassive) == 0x0003B9, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_CheckDisablePassive_bDisablePassive' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Not_PreBool_ReturnValue4) == 0x0003BA, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetOwner_ReturnValue2) == 0x0003C0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetOwner_ReturnValue3) == 0x0003C8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x0003D0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess13) == 0x0003D8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess13' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Not_PreBool_ReturnValue5) == 0x0003D9, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Array_Contains_ReturnValue) == 0x0003DA, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Not_PreBool_ReturnValue6) == 0x0003DB, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Not_PreBool_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Event_OverlappedComponent) == 0x0003E0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Event_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Event_OtherActor) == 0x0003E8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Event_OtherComp) == 0x0003F0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Event_OtherBodyIndex) == 0x0003F8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Event_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Event_bFromSweep) == 0x0003FC, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Event_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Event_SweepResult) == 0x000400, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Event_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetSkillInfoOnPassiveAdded_SkillTag) == 0x000488, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetSkillInfoOnPassiveAdded_SkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetSkillInfoOnPassiveAdded_SerialNumber) == 0x000490, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetSkillInfoOnPassiveAdded_SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_CalcHitLocation_HitImpactPoint) == 0x000494, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_CalcHitLocation_HitImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_CalcHitLocation_HitImpactNormal) == 0x0004A0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_CalcHitLocation_HitImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_CalcHitLocation_HitLocation) == 0x0004AC, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_CalcHitLocation_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBI_AJBInterface6) == 0x0004B8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBI_AJBInterface6' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess14) == 0x0004C8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess14' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBI_AJBInterface7) == 0x0004D0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBI_AJBInterface7' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess15) == 0x0004E0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess15' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_CheckTargetSelf_bTarget1) == 0x0004E1, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_CheckTargetSelf_bTarget1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_OwnHitParam_bCharacter2) == 0x0004E2, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_OwnHitParam_bCharacter2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_OwnHitParam_bLeftAP2) == 0x0004E3, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_OwnHitParam_bLeftAP2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_OwnHitParam_ParticleTagBlockedByAAP2) == 0x0004E8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_OwnHitParam_ParticleTagBlockedByAAP2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_OwnHitParam_SETagBlockedByAAP2) == 0x0004F0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_OwnHitParam_SETagBlockedByAAP2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_DoesImplementInterface_ReturnValue2) == 0x0004F8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_DoesImplementInterface_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Event_BlockedActor) == 0x000500, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Event_BlockedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Event_OtherActor1) == 0x000508, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Event_OtherActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Event_HitLocation) == 0x000510, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Event_HitNormal) == 0x00051C, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Event_CuttingProjectile___) == 0x000528, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Event_CuttingProjectile___' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Event_CuttingOther___) == 0x00052C, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Event_CuttingOther___' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Event_bInvincible) == 0x000530, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Event_bInvincible' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Event_bReflectProjectile) == 0x000531, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Event_bReflectProjectile' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Event_ReflectRotation) == 0x000534, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Event_ReflectRotation' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Event_bAvoidSkill) == 0x000540, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Event_bAvoidSkill' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Event_bSeparateStandAttack) == 0x000541, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Event_bSeparateStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Event_ReflectSkillTag) == 0x000548, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Event_ReflectSkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Array_Add_ReturnValue) == 0x000550, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000554, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface4) == 0x000558, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface4' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess16) == 0x000568, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess16' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00056C, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_IgnoreGivePassive_bIgnore1) == 0x000570, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_IgnoreGivePassive_bIgnore1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Not_PreBool_ReturnValue7) == 0x000571, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Not_PreBool_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Array_Add_ReturnValue1) == 0x000574, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BooleanAND_ReturnValue1) == 0x000578, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Array_Contains_ReturnValue1) == 0x000579, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Array_Contains_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00057A, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Not_PreBool_ReturnValue8) == 0x00057B, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Not_PreBool_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Array_Add_ReturnValue2) == 0x00057C, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_CalcHitLocation_Deprecated__HitLocation1) == 0x000580, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_CalcHitLocation_Deprecated__HitLocation1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_CalcHitLocation_Deprecated__HitNormal1) == 0x00058C, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_CalcHitLocation_Deprecated__HitNormal1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetOwner_ReturnValue4) == 0x000598, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetOwner_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetOwner_ReturnValue5) == 0x0005A0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetOwner_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBP_AJBIn_Game_Character3) == 0x0005A8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBP_AJBIn_Game_Character3' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess17) == 0x0005B0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess17' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsAJBIn_Game_Character_Base) == 0x0005B8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsAJBIn_Game_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess18) == 0x0005C0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess18' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_HasLocalSharedController_ReturnValue) == 0x0005C1, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface) == 0x0005C8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess19) == 0x0005D8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess19' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetLaunchedActorHomeLocation_Location) == 0x0005DC, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetLaunchedActorHomeLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetOwner_ReturnValue6) == 0x0005E8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetOwner_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Subtract_VectorVector_ReturnValue1) == 0x0005F0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Subtract_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Subtract_VectorVector_ReturnValue2) == 0x0005FC, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Subtract_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_VSizeSquared_ReturnValue) == 0x000608, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_VSizeSquared_ReturnValue1) == 0x00060C, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_VSizeSquared_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000610, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_IsValid_ReturnValue3) == 0x000614, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000615, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetOwner_ReturnValue7) == 0x000618, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetOwner_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBP_AJBIn_Game_Character4) == 0x000620, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBP_AJBIn_Game_Character4' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess20) == 0x000628, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess20' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_CalcDamage_DamageForHPAP) == 0x00062C, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_CalcDamage_DamageForHPAP' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_CalcDamage_DamageForAAP) == 0x000630, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_CalcDamage_DamageForAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_CalcDamage_CutDamage) == 0x000634, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_CalcDamage_CutDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_CalcDamage_bRemainHP) == 0x000638, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_CalcDamage_bRemainHP' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_CalcDamage_bDamageIsCutByAAP) == 0x000639, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_CalcDamage_bDamageIsCutByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface1) == 0x000640, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess21) == 0x000650, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess21' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetLaunchedActorHomeLocation_Location1) == 0x000654, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetLaunchedActorHomeLocation_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Subtract_VectorVector_ReturnValue3) == 0x000660, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Subtract_VectorVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetOwner_ReturnValue8) == 0x000670, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetOwner_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Normal_ReturnValue) == 0x000678, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBP_AJBIn_Game_Character5) == 0x000688, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBP_AJBIn_Game_Character5' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess22) == 0x000690, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess22' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Select_Default) == 0x000694, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BooleanAND_ReturnValue2) == 0x0006A0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Array_Add_ReturnValue3) == 0x0006A4, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Array_Add_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Array_Add_ReturnValue4) == 0x0006A8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Array_Add_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetSkillInfoOnPassiveAdded_SkillTag1) == 0x0006B0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetSkillInfoOnPassiveAdded_SkillTag1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetSkillInfoOnPassiveAdded_SerialNumber1) == 0x0006B8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetSkillInfoOnPassiveAdded_SerialNumber1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetSkillInfoOnPassiveAdded_SkillTag2) == 0x0006C0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetSkillInfoOnPassiveAdded_SkillTag2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetSkillInfoOnPassiveAdded_SerialNumber2) == 0x0006C8, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetSkillInfoOnPassiveAdded_SerialNumber2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_GetTransform_ReturnValue) == 0x0006D0, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000700, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_FinishSpawningActor_ReturnValue) == 0x000708, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Not_PreBool_ReturnValue9) == 0x000710, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Not_PreBool_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Event_EndPlayReason) == 0x000711, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, Temp_float_Variable) == 0x000714, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, Temp_bool_Variable1) == 0x000718, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, Temp_bool_Variable2) == 0x000719, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Select1_Default) == 0x00071A, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, Temp_bool_Variable3) == 0x00071B, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Select2_Default) == 0x00071C, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BooleanOR_ReturnValue2) == 0x00071D, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_Select3_Default) == 0x000720, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_AsBI_Blocking_Rush_Interface) == 0x000728, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_AsBI_Blocking_Rush_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, K2Node_DynamicCast_bSuccess23) == 0x000738, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::K2Node_DynamicCast_bSuccess23' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BlockPenetrate_bBlock) == 0x000739, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BlockPenetrate_bBlock' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_CheckIgnoreBlocking_bIgnore) == 0x00073A, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_CheckIgnoreBlocking_bIgnore' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_Not_PreBool_ReturnValue10) == 0x00073B, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_Not_PreBool_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor, CallFunc_BooleanAND_ReturnValue3) == 0x00073C, "Member 'BP_AJBDamageActor_C_ExecuteUbergraph_BP_AJBDamageActor::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBDamageActor_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDamageActor_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_AJBDamageActor_C_ReceiveEndPlay");
static_assert(sizeof(BP_AJBDamageActor_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_AJBDamageActor_C_ReceiveEndPlay");
static_assert(offsetof(BP_AJBDamageActor_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_AJBDamageActor_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_AJBDamageActor_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBDamageActor_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AJBDamageActor_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_AJBDamageActor_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AJBDamageActor_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AJBDamageActor_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AJBDamageActor_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AJBDamageActor_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AJBDamageActor_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_AJBDamageActor_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_AJBDamageActor_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.OnHit
// 0x00A0 (0x00A0 - 0x0000)
struct BP_AJBDamageActor_C_OnHit final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0018(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBDamageActor_C_OnHit) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_OnHit");
static_assert(sizeof(BP_AJBDamageActor_C_OnHit) == 0x0000A0, "Wrong size on BP_AJBDamageActor_C_OnHit");
static_assert(offsetof(BP_AJBDamageActor_C_OnHit, OtherActor) == 0x000000, "Member 'BP_AJBDamageActor_C_OnHit::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_OnHit, OtherComp) == 0x000008, "Member 'BP_AJBDamageActor_C_OnHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_OnHit, bFromSweep) == 0x000010, "Member 'BP_AJBDamageActor_C_OnHit::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_OnHit, SweepResult) == 0x000018, "Member 'BP_AJBDamageActor_C_OnHit::SweepResult' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBDamageActor_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDamageActor_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBDamageActor_C_ReceiveTick");
static_assert(sizeof(BP_AJBDamageActor_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBDamageActor_C_ReceiveTick");
static_assert(offsetof(BP_AJBDamageActor_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBDamageActor_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.TryGivePassive
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBDamageActor_C_TryGivePassive final
{
public:
	class UObject*                                Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CauserType;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDamageActor_C_TryGivePassive) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_TryGivePassive");
static_assert(sizeof(BP_AJBDamageActor_C_TryGivePassive) == 0x000018, "Wrong size on BP_AJBDamageActor_C_TryGivePassive");
static_assert(offsetof(BP_AJBDamageActor_C_TryGivePassive, Target) == 0x000000, "Member 'BP_AJBDamageActor_C_TryGivePassive::Target' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_TryGivePassive, CauserType) == 0x000008, "Member 'BP_AJBDamageActor_C_TryGivePassive::CauserType' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_TryGivePassive, SerialNumber) == 0x000010, "Member 'BP_AJBDamageActor_C_TryGivePassive::SerialNumber' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.OnOverlapped
// 0x00A8 (0x00A8 - 0x0000)
struct BP_AJBDamageActor_C_OnOverlapped final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBDamageActor_C_OnOverlapped) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_OnOverlapped");
static_assert(sizeof(BP_AJBDamageActor_C_OnOverlapped) == 0x0000A8, "Wrong size on BP_AJBDamageActor_C_OnOverlapped");
static_assert(offsetof(BP_AJBDamageActor_C_OnOverlapped, OverlappedComponent) == 0x000000, "Member 'BP_AJBDamageActor_C_OnOverlapped::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_OnOverlapped, OtherActor) == 0x000008, "Member 'BP_AJBDamageActor_C_OnOverlapped::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_OnOverlapped, OtherComp) == 0x000010, "Member 'BP_AJBDamageActor_C_OnOverlapped::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_OnOverlapped, OtherBodyIndex) == 0x000018, "Member 'BP_AJBDamageActor_C_OnOverlapped::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_OnOverlapped, bFromSweep) == 0x00001C, "Member 'BP_AJBDamageActor_C_OnOverlapped::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_OnOverlapped, SweepResult) == 0x000020, "Member 'BP_AJBDamageActor_C_OnOverlapped::SweepResult' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.Blocking
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBDamageActor_C_Blocking final
{
public:
	class AActor*                                 BlockedActor_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CuttingProjectile___;                              // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CuttingOther___;                                   // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInvincible;                                       // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bReflectProjectile;                                // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               ReflectRotation;                                   // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          bAvoidSkill;                                       // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSeparateStandAttack;                              // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ReflectSkillTag;                                   // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDamageActor_C_Blocking) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_Blocking");
static_assert(sizeof(BP_AJBDamageActor_C_Blocking) == 0x000050, "Wrong size on BP_AJBDamageActor_C_Blocking");
static_assert(offsetof(BP_AJBDamageActor_C_Blocking, BlockedActor_0) == 0x000000, "Member 'BP_AJBDamageActor_C_Blocking::BlockedActor_0' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_Blocking, OtherActor) == 0x000008, "Member 'BP_AJBDamageActor_C_Blocking::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_Blocking, HitLocation) == 0x000010, "Member 'BP_AJBDamageActor_C_Blocking::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_Blocking, HitNormal) == 0x00001C, "Member 'BP_AJBDamageActor_C_Blocking::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_Blocking, CuttingProjectile___) == 0x000028, "Member 'BP_AJBDamageActor_C_Blocking::CuttingProjectile___' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_Blocking, CuttingOther___) == 0x00002C, "Member 'BP_AJBDamageActor_C_Blocking::CuttingOther___' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_Blocking, bInvincible) == 0x000030, "Member 'BP_AJBDamageActor_C_Blocking::bInvincible' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_Blocking, bReflectProjectile) == 0x000031, "Member 'BP_AJBDamageActor_C_Blocking::bReflectProjectile' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_Blocking, ReflectRotation) == 0x000034, "Member 'BP_AJBDamageActor_C_Blocking::ReflectRotation' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_Blocking, bAvoidSkill) == 0x000040, "Member 'BP_AJBDamageActor_C_Blocking::bAvoidSkill' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_Blocking, bSeparateStandAttack) == 0x000041, "Member 'BP_AJBDamageActor_C_Blocking::bSeparateStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_Blocking, ReflectSkillTag) == 0x000048, "Member 'BP_AJBDamageActor_C_Blocking::ReflectSkillTag' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.ChangeEnable
// 0x00A0 (0x00A0 - 0x0000)
struct BP_AJBDamageActor_C_ChangeEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor_0;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        TargetComponent_0;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetActorHitLocation;                            // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CloseRangeSkillNo_0;                               // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Temp_object_Variable1;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x0054(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Select1_Default;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select2_Default;                            // 0x0070(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable3;                               // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CollisionDetector_C> K2Node_DynamicCast_AsBI_Collision_Detector;        // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select3_Default;                            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_ChangeEnable) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_ChangeEnable");
static_assert(sizeof(BP_AJBDamageActor_C_ChangeEnable) == 0x0000A0, "Wrong size on BP_AJBDamageActor_C_ChangeEnable");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeEnable, bEnable) == 0x000000, "Member 'BP_AJBDamageActor_C_ChangeEnable::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeEnable, TargetActor_0) == 0x000008, "Member 'BP_AJBDamageActor_C_ChangeEnable::TargetActor_0' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeEnable, TargetComponent_0) == 0x000010, "Member 'BP_AJBDamageActor_C_ChangeEnable::TargetComponent_0' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeEnable, TargetActorHitLocation) == 0x000018, "Member 'BP_AJBDamageActor_C_ChangeEnable::TargetActorHitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeEnable, CloseRangeSkillNo_0) == 0x000024, "Member 'BP_AJBDamageActor_C_ChangeEnable::CloseRangeSkillNo_0' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeEnable, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_AJBDamageActor_C_ChangeEnable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeEnable, Temp_object_Variable) == 0x000030, "Member 'BP_AJBDamageActor_C_ChangeEnable::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeEnable, Temp_bool_Variable) == 0x000038, "Member 'BP_AJBDamageActor_C_ChangeEnable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeEnable, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BP_AJBDamageActor_C_ChangeEnable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeEnable, K2Node_Select_Default) == 0x000040, "Member 'BP_AJBDamageActor_C_ChangeEnable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeEnable, Temp_object_Variable1) == 0x000048, "Member 'BP_AJBDamageActor_C_ChangeEnable::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeEnable, Temp_bool_Variable1) == 0x000050, "Member 'BP_AJBDamageActor_C_ChangeEnable::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeEnable, Temp_struct_Variable) == 0x000054, "Member 'BP_AJBDamageActor_C_ChangeEnable::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeEnable, K2Node_Select1_Default) == 0x000060, "Member 'BP_AJBDamageActor_C_ChangeEnable::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeEnable, Temp_bool_Variable2) == 0x000068, "Member 'BP_AJBDamageActor_C_ChangeEnable::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeEnable, Temp_int_Variable) == 0x00006C, "Member 'BP_AJBDamageActor_C_ChangeEnable::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeEnable, K2Node_Select2_Default) == 0x000070, "Member 'BP_AJBDamageActor_C_ChangeEnable::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeEnable, Temp_bool_Variable3) == 0x00007C, "Member 'BP_AJBDamageActor_C_ChangeEnable::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeEnable, K2Node_DynamicCast_AsBI_Collision_Detector) == 0x000080, "Member 'BP_AJBDamageActor_C_ChangeEnable::K2Node_DynamicCast_AsBI_Collision_Detector' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeEnable, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_AJBDamageActor_C_ChangeEnable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeEnable, K2Node_Select3_Default) == 0x000094, "Member 'BP_AJBDamageActor_C_ChangeEnable::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeEnable, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'BP_AJBDamageActor_C_ChangeEnable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.CheckTargetMatch
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBDamageActor_C_CheckTargetMatch final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HitComponent;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMatch;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue1;     // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue1;       // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_CheckTargetMatch) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_CheckTargetMatch");
static_assert(sizeof(BP_AJBDamageActor_C_CheckTargetMatch) == 0x000018, "Wrong size on BP_AJBDamageActor_C_CheckTargetMatch");
static_assert(offsetof(BP_AJBDamageActor_C_CheckTargetMatch, HitActor) == 0x000000, "Member 'BP_AJBDamageActor_C_CheckTargetMatch::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckTargetMatch, HitComponent) == 0x000008, "Member 'BP_AJBDamageActor_C_CheckTargetMatch::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckTargetMatch, bMatch) == 0x000010, "Member 'BP_AJBDamageActor_C_CheckTargetMatch::bMatch' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckTargetMatch, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000011, "Member 'BP_AJBDamageActor_C_CheckTargetMatch::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckTargetMatch, CallFunc_EqualEqual_ObjectObject_ReturnValue1) == 0x000012, "Member 'BP_AJBDamageActor_C_CheckTargetMatch::CallFunc_EqualEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckTargetMatch, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000013, "Member 'BP_AJBDamageActor_C_CheckTargetMatch::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckTargetMatch, CallFunc_NotEqual_ObjectObject_ReturnValue1) == 0x000014, "Member 'BP_AJBDamageActor_C_CheckTargetMatch::CallFunc_NotEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckTargetMatch, CallFunc_BooleanAND_ReturnValue) == 0x000015, "Member 'BP_AJBDamageActor_C_CheckTargetMatch::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckTargetMatch, CallFunc_BooleanAND_ReturnValue1) == 0x000016, "Member 'BP_AJBDamageActor_C_CheckTargetMatch::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckTargetMatch, CallFunc_BooleanAND_ReturnValue2) == 0x000017, "Member 'BP_AJBDamageActor_C_CheckTargetMatch::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.TrackingStandPoint
// 0x00D8 (0x00D8 - 0x0000)
struct BP_AJBDamageActor_C_TrackingStandPoint final
{
public:
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0000(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_CloseRangeLaunchedActorInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launched_Actor_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetDamageActorTargetLocation_Location;    // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0048(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_TrackingStandPoint) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_TrackingStandPoint");
static_assert(sizeof(BP_AJBDamageActor_C_TrackingStandPoint) == 0x0000D8, "Wrong size on BP_AJBDamageActor_C_TrackingStandPoint");
static_assert(offsetof(BP_AJBDamageActor_C_TrackingStandPoint, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000000, "Member 'BP_AJBDamageActor_C_TrackingStandPoint::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_TrackingStandPoint, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x00000C, "Member 'BP_AJBDamageActor_C_TrackingStandPoint::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_TrackingStandPoint, K2Node_DynamicCast_AsBI_Close_Range_Launched_Actor_Interface) == 0x000018, "Member 'BP_AJBDamageActor_C_TrackingStandPoint::K2Node_DynamicCast_AsBI_Close_Range_Launched_Actor_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_TrackingStandPoint, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBDamageActor_C_TrackingStandPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_TrackingStandPoint, CallFunc_GetDamageActorTargetLocation_Location) == 0x00002C, "Member 'BP_AJBDamageActor_C_TrackingStandPoint::CallFunc_GetDamageActorTargetLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_TrackingStandPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'BP_AJBDamageActor_C_TrackingStandPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_TrackingStandPoint, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000048, "Member 'BP_AJBDamageActor_C_TrackingStandPoint::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_TrackingStandPoint, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000D0, "Member 'BP_AJBDamageActor_C_TrackingStandPoint::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.TrackingStandRotation
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBDamageActor_C_TrackingStandRotation final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_TrackingStandRotation) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_TrackingStandRotation");
static_assert(sizeof(BP_AJBDamageActor_C_TrackingStandRotation) == 0x000028, "Wrong size on BP_AJBDamageActor_C_TrackingStandRotation");
static_assert(offsetof(BP_AJBDamageActor_C_TrackingStandRotation, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_AJBDamageActor_C_TrackingStandRotation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_TrackingStandRotation, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000008, "Member 'BP_AJBDamageActor_C_TrackingStandRotation::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_TrackingStandRotation, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_AJBDamageActor_C_TrackingStandRotation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_TrackingStandRotation, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000018, "Member 'BP_AJBDamageActor_C_TrackingStandRotation::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_TrackingStandRotation, K2Node_DynamicCast_bSuccess1) == 0x000020, "Member 'BP_AJBDamageActor_C_TrackingStandRotation::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_TrackingStandRotation, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000021, "Member 'BP_AJBDamageActor_C_TrackingStandRotation::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.ChangeCollisionEnable
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) BP_AJBDamageActor_C_ChangeCollisionEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable1;                               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDamageActor_C_ChangeCollisionEnable) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_ChangeCollisionEnable");
static_assert(sizeof(BP_AJBDamageActor_C_ChangeCollisionEnable) == 0x000028, "Wrong size on BP_AJBDamageActor_C_ChangeCollisionEnable");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeCollisionEnable, bEnable) == 0x000000, "Member 'BP_AJBDamageActor_C_ChangeCollisionEnable::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeCollisionEnable, Temp_name_Variable) == 0x000008, "Member 'BP_AJBDamageActor_C_ChangeCollisionEnable::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeCollisionEnable, Temp_name_Variable1) == 0x000010, "Member 'BP_AJBDamageActor_C_ChangeCollisionEnable::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeCollisionEnable, CallFunc_BooleanAND_ReturnValue) == 0x000018, "Member 'BP_AJBDamageActor_C_ChangeCollisionEnable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeCollisionEnable, Temp_bool_Variable) == 0x000019, "Member 'BP_AJBDamageActor_C_ChangeCollisionEnable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ChangeCollisionEnable, K2Node_Select_Default) == 0x000020, "Member 'BP_AJBDamageActor_C_ChangeCollisionEnable::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.CheckCollisionEnable
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) BP_AJBDamageActor_C_CheckCollisionEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCollisionProfileName_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_CheckCollisionEnable) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_CheckCollisionEnable");
static_assert(sizeof(BP_AJBDamageActor_C_CheckCollisionEnable) == 0x000018, "Wrong size on BP_AJBDamageActor_C_CheckCollisionEnable");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCollisionEnable, bEnable) == 0x000000, "Member 'BP_AJBDamageActor_C_CheckCollisionEnable::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCollisionEnable, CallFunc_GetCollisionProfileName_ReturnValue) == 0x000008, "Member 'BP_AJBDamageActor_C_CheckCollisionEnable::CallFunc_GetCollisionProfileName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCollisionEnable, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000010, "Member 'BP_AJBDamageActor_C_CheckCollisionEnable::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.DebugShowCollision
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBDamageActor_C_DebugShowCollision final
{
public:
	bool                                          bNeedEnableCheck;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           LineColor;                                         // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCollisionEnable_bEnable;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledSphereRadius_ReturnValue;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDamageActor_C_DebugShowCollision) == 0x000004, "Wrong alignment on BP_AJBDamageActor_C_DebugShowCollision");
static_assert(sizeof(BP_AJBDamageActor_C_DebugShowCollision) == 0x000028, "Wrong size on BP_AJBDamageActor_C_DebugShowCollision");
static_assert(offsetof(BP_AJBDamageActor_C_DebugShowCollision, bNeedEnableCheck) == 0x000000, "Member 'BP_AJBDamageActor_C_DebugShowCollision::bNeedEnableCheck' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_DebugShowCollision, LineColor) == 0x000004, "Member 'BP_AJBDamageActor_C_DebugShowCollision::LineColor' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_DebugShowCollision, CallFunc_CheckCollisionEnable_bEnable) == 0x000014, "Member 'BP_AJBDamageActor_C_DebugShowCollision::CallFunc_CheckCollisionEnable_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_DebugShowCollision, CallFunc_GetScaledSphereRadius_ReturnValue) == 0x000018, "Member 'BP_AJBDamageActor_C_DebugShowCollision::CallFunc_GetScaledSphereRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_DebugShowCollision, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00001C, "Member 'BP_AJBDamageActor_C_DebugShowCollision::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.DebugShowLine
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBDamageActor_C_DebugShowLine final
{
public:
	struct FVector                                NextLocation;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCollisionEnable_bEnable;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_DebugShowLine) == 0x000004, "Wrong alignment on BP_AJBDamageActor_C_DebugShowLine");
static_assert(sizeof(BP_AJBDamageActor_C_DebugShowLine) == 0x000020, "Wrong size on BP_AJBDamageActor_C_DebugShowLine");
static_assert(offsetof(BP_AJBDamageActor_C_DebugShowLine, NextLocation) == 0x000000, "Member 'BP_AJBDamageActor_C_DebugShowLine::NextLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_DebugShowLine, CallFunc_CheckCollisionEnable_bEnable) == 0x00000C, "Member 'BP_AJBDamageActor_C_DebugShowLine::CallFunc_CheckCollisionEnable_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_DebugShowLine, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_AJBDamageActor_C_DebugShowLine::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_DebugShowLine, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'BP_AJBDamageActor_C_DebugShowLine::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.TryChangeDisable
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBDamageActor_C_TryChangeDisable final
{
public:
	bool                                          bIsCharacter;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_TryChangeDisable) == 0x000001, "Wrong alignment on BP_AJBDamageActor_C_TryChangeDisable");
static_assert(sizeof(BP_AJBDamageActor_C_TryChangeDisable) == 0x000003, "Wrong size on BP_AJBDamageActor_C_TryChangeDisable");
static_assert(offsetof(BP_AJBDamageActor_C_TryChangeDisable, bIsCharacter) == 0x000000, "Member 'BP_AJBDamageActor_C_TryChangeDisable::bIsCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_TryChangeDisable, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'BP_AJBDamageActor_C_TryChangeDisable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_TryChangeDisable, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_AJBDamageActor_C_TryChangeDisable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.UpdateLocationPreTick
// 0x000C (0x000C - 0x0000)
struct BP_AJBDamageActor_C_UpdateLocationPreTick final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDamageActor_C_UpdateLocationPreTick) == 0x000004, "Wrong alignment on BP_AJBDamageActor_C_UpdateLocationPreTick");
static_assert(sizeof(BP_AJBDamageActor_C_UpdateLocationPreTick) == 0x00000C, "Wrong size on BP_AJBDamageActor_C_UpdateLocationPreTick");
static_assert(offsetof(BP_AJBDamageActor_C_UpdateLocationPreTick, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_AJBDamageActor_C_UpdateLocationPreTick::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.CheckShouldCharacterHit
// 0x0110 (0x0110 - 0x0000)
struct BP_AJBDamageActor_C_CheckShouldCharacterHit final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bShouldCharacterHit;                               // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterHitTarget_bHit;             // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterHitOwner_bHit;              // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F[0x1];                                       // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0098(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x00FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckTargetMatch_bMatch;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_CheckShouldCharacterHit) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_CheckShouldCharacterHit");
static_assert(sizeof(BP_AJBDamageActor_C_CheckShouldCharacterHit) == 0x000110, "Wrong size on BP_AJBDamageActor_C_CheckShouldCharacterHit");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, HitResult) == 0x000000, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::HitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, bShouldCharacterHit) == 0x000088, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::bShouldCharacterHit' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, CallFunc_CheckCharacterHitTarget_bHit) == 0x000089, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::CallFunc_CheckCharacterHitTarget_bHit' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, CallFunc_CheckCharacterHitOwner_bHit) == 0x00008A, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::CallFunc_CheckCharacterHitOwner_bHit' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, CallFunc_Not_PreBool_ReturnValue) == 0x00008B, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, CallFunc_Not_PreBool_ReturnValue1) == 0x00008C, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, CallFunc_BreakHitResult_bBlockingHit) == 0x00008D, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, CallFunc_BreakHitResult_bInitialOverlap) == 0x00008E, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, CallFunc_BreakHitResult_Time) == 0x000090, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, CallFunc_BreakHitResult_Distance) == 0x000094, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, CallFunc_BreakHitResult_Location) == 0x000098, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, CallFunc_BreakHitResult_ImpactPoint) == 0x0000A4, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, CallFunc_BreakHitResult_Normal) == 0x0000B0, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, CallFunc_BreakHitResult_ImpactNormal) == 0x0000BC, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, CallFunc_BreakHitResult_PhysMat) == 0x0000C8, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, CallFunc_BreakHitResult_HitActor) == 0x0000D0, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, CallFunc_BreakHitResult_HitComponent) == 0x0000D8, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, CallFunc_BreakHitResult_HitBoneName) == 0x0000E0, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, CallFunc_BreakHitResult_HitItem) == 0x0000E8, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, CallFunc_BreakHitResult_FaceIndex) == 0x0000EC, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, CallFunc_BreakHitResult_TraceStart) == 0x0000F0, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, CallFunc_BreakHitResult_TraceEnd) == 0x0000FC, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, CallFunc_CheckTargetMatch_bMatch) == 0x000108, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::CallFunc_CheckTargetMatch_bMatch' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckShouldCharacterHit, CallFunc_Not_PreBool_ReturnValue2) == 0x000109, "Member 'BP_AJBDamageActor_C_CheckShouldCharacterHit::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.CheckHit
// 0x0098 (0x0098 - 0x0000)
struct BP_AJBDamageActor_C_CheckHit final
{
public:
	struct FVector                                TempStartLocation;                                 // 0x0000(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempDirection;                                     // 0x000C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempConsumeDistance;                               // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempLeftDistance;                                  // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTempBreak;                                        // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempLoopNum;                                       // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HitTrace_bContinued;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue1;        // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0064(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCollisionEnable_bEnable;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0074(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0088(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDamageActor_C_CheckHit) == 0x000004, "Wrong alignment on BP_AJBDamageActor_C_CheckHit");
static_assert(sizeof(BP_AJBDamageActor_C_CheckHit) == 0x000098, "Wrong size on BP_AJBDamageActor_C_CheckHit");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, TempStartLocation) == 0x000000, "Member 'BP_AJBDamageActor_C_CheckHit::TempStartLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, TempDirection) == 0x00000C, "Member 'BP_AJBDamageActor_C_CheckHit::TempDirection' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, TempConsumeDistance) == 0x000018, "Member 'BP_AJBDamageActor_C_CheckHit::TempConsumeDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, TempLeftDistance) == 0x00001C, "Member 'BP_AJBDamageActor_C_CheckHit::TempLeftDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, bTempBreak) == 0x000020, "Member 'BP_AJBDamageActor_C_CheckHit::bTempBreak' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, TempLoopNum) == 0x000024, "Member 'BP_AJBDamageActor_C_CheckHit::TempLoopNum' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_AJBDamageActor_C_CheckHit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_AJBDamageActor_C_CheckHit::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00002D, "Member 'BP_AJBDamageActor_C_CheckHit::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_AJBDamageActor_C_CheckHit::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000034, "Member 'BP_AJBDamageActor_C_CheckHit::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, CallFunc_Add_VectorVector_ReturnValue) == 0x000040, "Member 'BP_AJBDamageActor_C_CheckHit::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, Temp_bool_Variable) == 0x00004C, "Member 'BP_AJBDamageActor_C_CheckHit::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, CallFunc_Not_PreBool_ReturnValue) == 0x00004D, "Member 'BP_AJBDamageActor_C_CheckHit::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, CallFunc_BooleanAND_ReturnValue) == 0x00004E, "Member 'BP_AJBDamageActor_C_CheckHit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000050, "Member 'BP_AJBDamageActor_C_CheckHit::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, CallFunc_HitTrace_bContinued) == 0x000054, "Member 'BP_AJBDamageActor_C_CheckHit::CallFunc_HitTrace_bContinued' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, CallFunc_LessEqual_FloatFloat_ReturnValue1) == 0x000055, "Member 'BP_AJBDamageActor_C_CheckHit::CallFunc_LessEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, CallFunc_Not_PreBool_ReturnValue1) == 0x000056, "Member 'BP_AJBDamageActor_C_CheckHit::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, CallFunc_BooleanOR_ReturnValue) == 0x000057, "Member 'BP_AJBDamageActor_C_CheckHit::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_AJBDamageActor_C_CheckHit::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, Temp_int_Variable) == 0x00005C, "Member 'BP_AJBDamageActor_C_CheckHit::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, CallFunc_Not_PreBool_ReturnValue2) == 0x000060, "Member 'BP_AJBDamageActor_C_CheckHit::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000064, "Member 'BP_AJBDamageActor_C_CheckHit::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, CallFunc_CheckCollisionEnable_bEnable) == 0x000070, "Member 'BP_AJBDamageActor_C_CheckHit::CallFunc_CheckCollisionEnable_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000074, "Member 'BP_AJBDamageActor_C_CheckHit::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, CallFunc_VSize_ReturnValue) == 0x000080, "Member 'BP_AJBDamageActor_C_CheckHit::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, CallFunc_BooleanAND_ReturnValue1) == 0x000084, "Member 'BP_AJBDamageActor_C_CheckHit::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, CallFunc_Normal_ReturnValue) == 0x000088, "Member 'BP_AJBDamageActor_C_CheckHit::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckHit, K2Node_Select_Default) == 0x000094, "Member 'BP_AJBDamageActor_C_CheckHit::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.HitTrace
// 0x0198 (0x0198 - 0x0000)
struct BP_AJBDamageActor_C_HitTrace final
{
public:
	struct FVector                                StartLocation;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bContinued;                                        // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCollisionEnable_bEnable;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCollisionEnable_bEnable1;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array1;                           // 0x0060(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_AJBMultiSphereTraceForObjects_OutHits;    // 0x0070(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_AJBMultiSphereTraceForObjects_ReturnValue; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0088(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113[0x1];                                      // 0x0113(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x011C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0128(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0134(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0140(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0178(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0184(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldHitCheck_bShouldHit;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_HitTrace) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_HitTrace");
static_assert(sizeof(BP_AJBDamageActor_C_HitTrace) == 0x000198, "Wrong size on BP_AJBDamageActor_C_HitTrace");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, StartLocation) == 0x000000, "Member 'BP_AJBDamageActor_C_HitTrace::StartLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, Direction) == 0x00000C, "Member 'BP_AJBDamageActor_C_HitTrace::Direction' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, Distance) == 0x000018, "Member 'BP_AJBDamageActor_C_HitTrace::Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, bContinued) == 0x00001C, "Member 'BP_AJBDamageActor_C_HitTrace::bContinued' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_AJBDamageActor_C_HitTrace::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_CheckCollisionEnable_bEnable) == 0x000024, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_CheckCollisionEnable_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_AJBDamageActor_C_HitTrace::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00002C, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_CheckCollisionEnable_bEnable1) == 0x000048, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_CheckCollisionEnable_bEnable1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, K2Node_MakeArray_Array) == 0x000050, "Member 'BP_AJBDamageActor_C_HitTrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, K2Node_MakeArray_Array1) == 0x000060, "Member 'BP_AJBDamageActor_C_HitTrace::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_AJBMultiSphereTraceForObjects_OutHits) == 0x000070, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_AJBMultiSphereTraceForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_AJBMultiSphereTraceForObjects_ReturnValue) == 0x000080, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_AJBMultiSphereTraceForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x000111, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x000112, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_BreakHitResult_Time) == 0x000114, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_BreakHitResult_Distance) == 0x000118, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_BreakHitResult_Location) == 0x00011C, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x000128, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_BreakHitResult_Normal) == 0x000134, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x000140, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_BreakHitResult_PhysMat) == 0x000150, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_BreakHitResult_HitActor) == 0x000158, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_BreakHitResult_HitComponent) == 0x000160, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_BreakHitResult_HitBoneName) == 0x000168, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_BreakHitResult_HitItem) == 0x000170, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_BreakHitResult_FaceIndex) == 0x000174, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_BreakHitResult_TraceStart) == 0x000178, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_BreakHitResult_TraceEnd) == 0x000184, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_HitTrace, CallFunc_ShouldHitCheck_bShouldHit) == 0x000190, "Member 'BP_AJBDamageActor_C_HitTrace::CallFunc_ShouldHitCheck_bShouldHit' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.CheckCharacterHitOwner
// 0x02F8 (0x02F8 - 0x0000)
struct BP_AJBDamageActor_C_CheckCharacterHitOwner final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bHit;                                              // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TempHitLocation;                                   // 0x008C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempCamLocation;                                   // 0x0098(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempStartLocation;                                 // 0x00A4(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempUnitVecFromCamToTarget;                        // 0x00B0(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempVecFromCamToDA;                                // 0x00BC(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00F4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0100(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0138(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0144(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x015C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0168(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0178(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1;       // 0x0184(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0190(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x019C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x01B8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_AJBMultiLineTraceForObjects_OutHits;      // 0x01C8(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_AJBMultiLineTraceForObjects_ReturnValue;  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x01E0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit1;             // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap1;          // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26B[0x1];                                      // 0x026B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time1;                     // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance1;                 // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location1;                 // 0x0274(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint1;              // 0x0280(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal1;                   // 0x028C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal1;             // 0x0298(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat1;                  // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor1;                 // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent1;             // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName1;              // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem1;                  // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex1;                // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart1;               // 0x02D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd1;                 // 0x02DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameWindow_C*                  K2Node_DynamicCast_AsBP_AJBIn_Game_Window;         // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBroken_ReturnValue;                     // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_CheckCharacterHitOwner) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_CheckCharacterHitOwner");
static_assert(sizeof(BP_AJBDamageActor_C_CheckCharacterHitOwner) == 0x0002F8, "Wrong size on BP_AJBDamageActor_C_CheckCharacterHitOwner");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, HitResult) == 0x000000, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::HitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, bHit) == 0x000088, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::bHit' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, TempHitLocation) == 0x00008C, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::TempHitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, TempCamLocation) == 0x000098, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::TempCamLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, TempStartLocation) == 0x0000A4, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::TempStartLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, TempUnitVecFromCamToTarget) == 0x0000B0, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::TempUnitVecFromCamToTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, TempVecFromCamToDA) == 0x0000BC, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::TempVecFromCamToDA' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_GetOwner_ReturnValue) == 0x0000C8, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_bBlockingHit) == 0x0000D0, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000D1, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_Time) == 0x0000D4, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_Distance) == 0x0000D8, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_Location) == 0x0000DC, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_ImpactPoint) == 0x0000E8, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_Normal) == 0x0000F4, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_ImpactNormal) == 0x000100, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_PhysMat) == 0x000110, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_HitActor) == 0x000118, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_HitComponent) == 0x000120, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_HitBoneName) == 0x000128, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_HitItem) == 0x000130, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_FaceIndex) == 0x000134, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_TraceStart) == 0x000138, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_TraceEnd) == 0x000144, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000150, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, K2Node_DynamicCast_bSuccess) == 0x000158, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00015C, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000168, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_Dot_VectorVector_ReturnValue) == 0x000174, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000178, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_Subtract_VectorVector_ReturnValue1) == 0x000184, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_Subtract_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_Add_VectorVector_ReturnValue) == 0x000190, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_Normal_ReturnValue) == 0x00019C, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, Temp_int_Array_Index_Variable) == 0x0001A8, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, Temp_int_Loop_Counter_Variable) == 0x0001AC, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_Add_IntInt_ReturnValue) == 0x0001B0, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, K2Node_MakeArray_Array) == 0x0001B8, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_AJBMultiLineTraceForObjects_OutHits) == 0x0001C8, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_AJBMultiLineTraceForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_AJBMultiLineTraceForObjects_ReturnValue) == 0x0001D8, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_AJBMultiLineTraceForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_Array_Length_ReturnValue) == 0x0001DC, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_Array_Get_Item) == 0x0001E0, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_Less_IntInt_ReturnValue) == 0x000268, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_bBlockingHit1) == 0x000269, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_bBlockingHit1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_bInitialOverlap1) == 0x00026A, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_bInitialOverlap1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_Time1) == 0x00026C, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_Time1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_Distance1) == 0x000270, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_Distance1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_Location1) == 0x000274, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_ImpactPoint1) == 0x000280, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_ImpactPoint1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_Normal1) == 0x00028C, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_Normal1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_ImpactNormal1) == 0x000298, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_ImpactNormal1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_PhysMat1) == 0x0002A8, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_PhysMat1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_HitActor1) == 0x0002B0, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_HitActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_HitComponent1) == 0x0002B8, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_HitComponent1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_HitBoneName1) == 0x0002C0, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_HitBoneName1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_HitItem1) == 0x0002C8, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_HitItem1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_FaceIndex1) == 0x0002CC, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_FaceIndex1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_TraceStart1) == 0x0002D0, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_TraceStart1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_BreakHitResult_TraceEnd1) == 0x0002DC, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_BreakHitResult_TraceEnd1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, K2Node_DynamicCast_AsBP_AJBIn_Game_Window) == 0x0002E8, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::K2Node_DynamicCast_AsBP_AJBIn_Game_Window' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, K2Node_DynamicCast_bSuccess1) == 0x0002F0, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitOwner, CallFunc_IsBroken_ReturnValue) == 0x0002F1, "Member 'BP_AJBDamageActor_C_CheckCharacterHitOwner::CallFunc_IsBroken_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.CheckCharacterHitTarget
// 0x0290 (0x0290 - 0x0000)
struct BP_AJBDamageActor_C_CheckCharacterHitTarget final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bHit;                                              // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x009C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0104(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0120(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0134(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0140(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0150(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_AJBMultiLineTraceForObjects_OutHits;      // 0x0160(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_AJBMultiLineTraceForObjects_ReturnValue;  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0178(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit1;             // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap1;          // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_203[0x1];                                      // 0x0203(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time1;                     // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance1;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location1;                 // 0x020C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint1;              // 0x0218(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal1;                   // 0x0224(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal1;             // 0x0230(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat1;                  // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor1;                 // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent1;             // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName1;              // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem1;                  // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex1;                // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart1;               // 0x0268(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd1;                 // 0x0274(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameWindow_C*                  K2Node_DynamicCast_AsBP_AJBIn_Game_Window;         // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBroken_ReturnValue;                     // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_CheckCharacterHitTarget) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_CheckCharacterHitTarget");
static_assert(sizeof(BP_AJBDamageActor_C_CheckCharacterHitTarget) == 0x000290, "Wrong size on BP_AJBDamageActor_C_CheckCharacterHitTarget");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, HitResult) == 0x000000, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::HitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, bHit) == 0x000088, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::bHit' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, Temp_int_Array_Index_Variable) == 0x00008C, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_bBlockingHit) == 0x000090, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_bInitialOverlap) == 0x000091, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_Time) == 0x000094, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_Distance) == 0x000098, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_Location) == 0x00009C, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_ImpactPoint) == 0x0000A8, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_Normal) == 0x0000B4, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_ImpactNormal) == 0x0000C0, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_PhysMat) == 0x0000D0, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_HitActor) == 0x0000D8, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_HitComponent) == 0x0000E0, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_HitBoneName) == 0x0000E8, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_HitItem) == 0x0000F0, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_FaceIndex) == 0x0000F4, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_TraceStart) == 0x0000F8, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_TraceEnd) == 0x000104, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000110, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, Temp_int_Loop_Counter_Variable) == 0x00011C, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000120, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_Add_IntInt_ReturnValue) == 0x00012C, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000130, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_MakeVector_ReturnValue) == 0x000134, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_Add_VectorVector_ReturnValue) == 0x000140, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, K2Node_MakeArray_Array) == 0x000150, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_AJBMultiLineTraceForObjects_OutHits) == 0x000160, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_AJBMultiLineTraceForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_AJBMultiLineTraceForObjects_ReturnValue) == 0x000170, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_AJBMultiLineTraceForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_Array_Length_ReturnValue) == 0x000174, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_Array_Get_Item) == 0x000178, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_Less_IntInt_ReturnValue) == 0x000200, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_bBlockingHit1) == 0x000201, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_bBlockingHit1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_bInitialOverlap1) == 0x000202, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_bInitialOverlap1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_Time1) == 0x000204, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_Time1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_Distance1) == 0x000208, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_Distance1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_Location1) == 0x00020C, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_ImpactPoint1) == 0x000218, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_ImpactPoint1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_Normal1) == 0x000224, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_Normal1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_ImpactNormal1) == 0x000230, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_ImpactNormal1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_PhysMat1) == 0x000240, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_PhysMat1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_HitActor1) == 0x000248, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_HitActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_HitComponent1) == 0x000250, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_HitComponent1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_HitBoneName1) == 0x000258, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_HitBoneName1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_HitItem1) == 0x000260, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_HitItem1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_FaceIndex1) == 0x000264, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_FaceIndex1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_TraceStart1) == 0x000268, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_TraceStart1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_BreakHitResult_TraceEnd1) == 0x000274, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_BreakHitResult_TraceEnd1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, K2Node_DynamicCast_AsBP_AJBIn_Game_Window) == 0x000280, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::K2Node_DynamicCast_AsBP_AJBIn_Game_Window' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, K2Node_DynamicCast_bSuccess1) == 0x000288, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckCharacterHitTarget, CallFunc_IsBroken_ReturnValue) == 0x000289, "Member 'BP_AJBDamageActor_C_CheckCharacterHitTarget::CallFunc_IsBroken_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.NotifyEndMultipleHit
// 0x00A8 (0x00A8 - 0x0000)
struct BP_AJBDamageActor_C_NotifyEndMultipleHit final
{
public:
	int32                                         BlockedActorCount;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HittedCharacterCount;                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBInGameSkillComponent*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     K2Node_DynamicCast_AsBP_AJBSkill_Base;             // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item1;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHittableCharacter_bIsHittable;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue1;              // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHittableCharacter_bIsHittable1;         // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue2;              // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_NotifyEndMultipleHit) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_NotifyEndMultipleHit");
static_assert(sizeof(BP_AJBDamageActor_C_NotifyEndMultipleHit) == 0x0000A8, "Wrong size on BP_AJBDamageActor_C_NotifyEndMultipleHit");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, BlockedActorCount) == 0x000000, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::BlockedActorCount' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, HittedCharacterCount) == 0x000004, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::HittedCharacterCount' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000020, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, Temp_int_Array_Index_Variable1) == 0x00002C, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_GetOwner_ReturnValue1) == 0x000038, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_Add_IntInt_ReturnValue1) == 0x000040, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_Add_IntInt_ReturnValue2) == 0x000050, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, K2Node_DynamicCast_AsBP_AJBSkill_Base) == 0x000058, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::K2Node_DynamicCast_AsBP_AJBSkill_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, K2Node_DynamicCast_bSuccess1) == 0x000060, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_Greater_IntInt_ReturnValue) == 0x000061, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_Add_IntInt_ReturnValue3) == 0x000064, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_Add_IntInt_ReturnValue4) == 0x000068, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, Temp_int_Loop_Counter_Variable1) == 0x00006C, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_Add_IntInt_ReturnValue5) == 0x000070, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_Array_Get_Item1) == 0x000080, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_IsHittableCharacter_bIsHittable) == 0x000088, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_IsHittableCharacter_bIsHittable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_Array_Contains_ReturnValue) == 0x000089, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_Array_Contains_ReturnValue1) == 0x00008A, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_Array_Contains_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_Not_PreBool_ReturnValue) == 0x00008B, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_Not_PreBool_ReturnValue1) == 0x00008C, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_IsHittableCharacter_bIsHittable1) == 0x00008D, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_IsHittableCharacter_bIsHittable1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_Array_Contains_ReturnValue2) == 0x00008E, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_Array_Contains_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_BooleanAND_ReturnValue) == 0x00008F, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_Not_PreBool_ReturnValue2) == 0x000090, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_BooleanAND_ReturnValue1) == 0x000091, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000092, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_BooleanAND_ReturnValue2) == 0x000093, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_Array_Length_ReturnValue1) == 0x000094, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_BooleanAND_ReturnValue3) == 0x000098, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_Less_IntInt_ReturnValue) == 0x000099, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_Array_Length_ReturnValue2) == 0x00009C, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_NotifyEndMultipleHit, CallFunc_Less_IntInt_ReturnValue1) == 0x0000A0, "Member 'BP_AJBDamageActor_C_NotifyEndMultipleHit::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.IsPassiveOnly
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBDamageActor_C_IsPassiveOnly final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetPassiveSkillTag_PassiveSkillTag;       // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_IsPassiveOnly) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_IsPassiveOnly");
static_assert(sizeof(BP_AJBDamageActor_C_IsPassiveOnly) == 0x000018, "Wrong size on BP_AJBDamageActor_C_IsPassiveOnly");
static_assert(offsetof(BP_AJBDamageActor_C_IsPassiveOnly, ReturnValue) == 0x000000, "Member 'BP_AJBDamageActor_C_IsPassiveOnly::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsPassiveOnly, CallFunc_GetPassiveSkillTag_PassiveSkillTag) == 0x000008, "Member 'BP_AJBDamageActor_C_IsPassiveOnly::CallFunc_GetPassiveSkillTag_PassiveSkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsPassiveOnly, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x000010, "Member 'BP_AJBDamageActor_C_IsPassiveOnly::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsPassiveOnly, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000011, "Member 'BP_AJBDamageActor_C_IsPassiveOnly::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsPassiveOnly, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'BP_AJBDamageActor_C_IsPassiveOnly::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.RemoveFromHittedActor
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBDamageActor_C_RemoveFromHittedActor final
{
public:
	const class AActor*                           TargetActor_0;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_RemoveFromHittedActor) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_RemoveFromHittedActor");
static_assert(sizeof(BP_AJBDamageActor_C_RemoveFromHittedActor) == 0x000010, "Wrong size on BP_AJBDamageActor_C_RemoveFromHittedActor");
static_assert(offsetof(BP_AJBDamageActor_C_RemoveFromHittedActor, TargetActor_0) == 0x000000, "Member 'BP_AJBDamageActor_C_RemoveFromHittedActor::TargetActor_0' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_RemoveFromHittedActor, ReturnValue) == 0x000008, "Member 'BP_AJBDamageActor_C_RemoveFromHittedActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_RemoveFromHittedActor, CallFunc_Array_RemoveItem_ReturnValue) == 0x000009, "Member 'BP_AJBDamageActor_C_RemoveFromHittedActor::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_RemoveFromHittedActor, CallFunc_Array_Contains_ReturnValue) == 0x00000A, "Member 'BP_AJBDamageActor_C_RemoveFromHittedActor::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.IsHittableCharacter
// 0x0080 (0x0080 - 0x0000)
struct BP_AJBDamageActor_C_IsHittableCharacter final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsHittable;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameMovableStand*                 K2Node_DynamicCast_AsAJBIn_Game_Movable_Stand;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue; // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue1; // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPair_bPairCharacter;                    // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDeathAndEnd_ReturnValue;                // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDeathAndEnd_ReturnValue1;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character3;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPair_bPairCharacter1;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_IsHittableCharacter) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_IsHittableCharacter");
static_assert(sizeof(BP_AJBDamageActor_C_IsHittableCharacter) == 0x000080, "Wrong size on BP_AJBDamageActor_C_IsHittableCharacter");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, Actor) == 0x000000, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::Actor' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, bIsHittable) == 0x000008, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::bIsHittable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, K2Node_DynamicCast_AsAJBIn_Game_Movable_Stand) == 0x000018, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::K2Node_DynamicCast_AsAJBIn_Game_Movable_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000028, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, CallFunc_GetOwner_ReturnValue1) == 0x000038, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000040, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x000050, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, K2Node_DynamicCast_bSuccess3) == 0x000058, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue) == 0x000059, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue1) == 0x00005A, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x00005B, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, CallFunc_Not_PreBool_ReturnValue1) == 0x00005C, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, CallFunc_IsPair_bPairCharacter) == 0x00005D, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::CallFunc_IsPair_bPairCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, CallFunc_IsDeathAndEnd_ReturnValue) == 0x00005E, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::CallFunc_IsDeathAndEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, CallFunc_Not_PreBool_ReturnValue2) == 0x00005F, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, CallFunc_Not_PreBool_ReturnValue3) == 0x000060, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, CallFunc_IsDeathAndEnd_ReturnValue1) == 0x000061, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::CallFunc_IsDeathAndEnd_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, CallFunc_BooleanAND_ReturnValue) == 0x000062, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, CallFunc_Not_PreBool_ReturnValue4) == 0x000063, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, CallFunc_BooleanAND_ReturnValue1) == 0x000064, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, CallFunc_GetOwner_ReturnValue2) == 0x000068, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Character3) == 0x000070, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Character3' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, K2Node_DynamicCast_bSuccess4) == 0x000078, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, CallFunc_IsPair_bPairCharacter1) == 0x000079, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::CallFunc_IsPair_bPairCharacter1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, CallFunc_Not_PreBool_ReturnValue5) == 0x00007A, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, CallFunc_BooleanAND_ReturnValue2) == 0x00007B, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_IsHittableCharacter, CallFunc_BooleanAND_ReturnValue3) == 0x00007C, "Member 'BP_AJBDamageActor_C_IsHittableCharacter::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.GetSkillInfoOnPassiveAdded
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBDamageActor_C_GetSkillInfoOnPassiveAdded final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBInGameSkillComponent*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBSkillBase_C*                     K2Node_DynamicCast_AsBP_AJBSkill_Base;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_GetSkillInfoOnPassiveAdded) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_GetSkillInfoOnPassiveAdded");
static_assert(sizeof(BP_AJBDamageActor_C_GetSkillInfoOnPassiveAdded) == 0x000040, "Wrong size on BP_AJBDamageActor_C_GetSkillInfoOnPassiveAdded");
static_assert(offsetof(BP_AJBDamageActor_C_GetSkillInfoOnPassiveAdded, SkillTag) == 0x000000, "Member 'BP_AJBDamageActor_C_GetSkillInfoOnPassiveAdded::SkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_GetSkillInfoOnPassiveAdded, SerialNumber) == 0x000008, "Member 'BP_AJBDamageActor_C_GetSkillInfoOnPassiveAdded::SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_GetSkillInfoOnPassiveAdded, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBDamageActor_C_GetSkillInfoOnPassiveAdded::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_GetSkillInfoOnPassiveAdded, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBDamageActor_C_GetSkillInfoOnPassiveAdded::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_GetSkillInfoOnPassiveAdded, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBDamageActor_C_GetSkillInfoOnPassiveAdded::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_GetSkillInfoOnPassiveAdded, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'BP_AJBDamageActor_C_GetSkillInfoOnPassiveAdded::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_GetSkillInfoOnPassiveAdded, K2Node_DynamicCast_AsBP_AJBSkill_Base) == 0x000030, "Member 'BP_AJBDamageActor_C_GetSkillInfoOnPassiveAdded::K2Node_DynamicCast_AsBP_AJBSkill_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_GetSkillInfoOnPassiveAdded, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'BP_AJBDamageActor_C_GetSkillInfoOnPassiveAdded::K2Node_DynamicCast_bSuccess1' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.ShouldHitCheck
// 0x0128 (0x0128 - 0x0000)
struct BP_AJBDamageActor_C_ShouldHitCheck final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bShouldHit;                                        // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B[0x1];                                       // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0094(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x00FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCollisionProfileName_ReturnValue;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_ShouldHitCheck) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_ShouldHitCheck");
static_assert(sizeof(BP_AJBDamageActor_C_ShouldHitCheck) == 0x000128, "Wrong size on BP_AJBDamageActor_C_ShouldHitCheck");
static_assert(offsetof(BP_AJBDamageActor_C_ShouldHitCheck, HitResult) == 0x000000, "Member 'BP_AJBDamageActor_C_ShouldHitCheck::HitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ShouldHitCheck, bShouldHit) == 0x000088, "Member 'BP_AJBDamageActor_C_ShouldHitCheck::bShouldHit' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ShouldHitCheck, CallFunc_BreakHitResult_bBlockingHit) == 0x000089, "Member 'BP_AJBDamageActor_C_ShouldHitCheck::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ShouldHitCheck, CallFunc_BreakHitResult_bInitialOverlap) == 0x00008A, "Member 'BP_AJBDamageActor_C_ShouldHitCheck::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ShouldHitCheck, CallFunc_BreakHitResult_Time) == 0x00008C, "Member 'BP_AJBDamageActor_C_ShouldHitCheck::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ShouldHitCheck, CallFunc_BreakHitResult_Distance) == 0x000090, "Member 'BP_AJBDamageActor_C_ShouldHitCheck::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ShouldHitCheck, CallFunc_BreakHitResult_Location) == 0x000094, "Member 'BP_AJBDamageActor_C_ShouldHitCheck::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ShouldHitCheck, CallFunc_BreakHitResult_ImpactPoint) == 0x0000A0, "Member 'BP_AJBDamageActor_C_ShouldHitCheck::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ShouldHitCheck, CallFunc_BreakHitResult_Normal) == 0x0000AC, "Member 'BP_AJBDamageActor_C_ShouldHitCheck::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ShouldHitCheck, CallFunc_BreakHitResult_ImpactNormal) == 0x0000B8, "Member 'BP_AJBDamageActor_C_ShouldHitCheck::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ShouldHitCheck, CallFunc_BreakHitResult_PhysMat) == 0x0000C8, "Member 'BP_AJBDamageActor_C_ShouldHitCheck::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ShouldHitCheck, CallFunc_BreakHitResult_HitActor) == 0x0000D0, "Member 'BP_AJBDamageActor_C_ShouldHitCheck::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ShouldHitCheck, CallFunc_BreakHitResult_HitComponent) == 0x0000D8, "Member 'BP_AJBDamageActor_C_ShouldHitCheck::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ShouldHitCheck, CallFunc_BreakHitResult_HitBoneName) == 0x0000E0, "Member 'BP_AJBDamageActor_C_ShouldHitCheck::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ShouldHitCheck, CallFunc_BreakHitResult_HitItem) == 0x0000E8, "Member 'BP_AJBDamageActor_C_ShouldHitCheck::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ShouldHitCheck, CallFunc_BreakHitResult_FaceIndex) == 0x0000EC, "Member 'BP_AJBDamageActor_C_ShouldHitCheck::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ShouldHitCheck, CallFunc_BreakHitResult_TraceStart) == 0x0000F0, "Member 'BP_AJBDamageActor_C_ShouldHitCheck::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ShouldHitCheck, CallFunc_BreakHitResult_TraceEnd) == 0x0000FC, "Member 'BP_AJBDamageActor_C_ShouldHitCheck::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ShouldHitCheck, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000108, "Member 'BP_AJBDamageActor_C_ShouldHitCheck::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ShouldHitCheck, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'BP_AJBDamageActor_C_ShouldHitCheck::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ShouldHitCheck, CallFunc_GetCollisionProfileName_ReturnValue) == 0x000118, "Member 'BP_AJBDamageActor_C_ShouldHitCheck::CallFunc_GetCollisionProfileName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_ShouldHitCheck, CallFunc_NotEqual_NameName_ReturnValue) == 0x000120, "Member 'BP_AJBDamageActor_C_ShouldHitCheck::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.CheckIgnoreBlocking
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBDamageActor_C_CheckIgnoreBlocking final
{
public:
	class AActor*                                 TargetActor_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnore;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_CheckIgnoreBlocking) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_CheckIgnoreBlocking");
static_assert(sizeof(BP_AJBDamageActor_C_CheckIgnoreBlocking) == 0x000010, "Wrong size on BP_AJBDamageActor_C_CheckIgnoreBlocking");
static_assert(offsetof(BP_AJBDamageActor_C_CheckIgnoreBlocking, TargetActor_0) == 0x000000, "Member 'BP_AJBDamageActor_C_CheckIgnoreBlocking::TargetActor_0' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckIgnoreBlocking, bIgnore) == 0x000008, "Member 'BP_AJBDamageActor_C_CheckIgnoreBlocking::bIgnore' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.CheckPassiveOnly
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBDamageActor_C_CheckPassiveOnly final
{
public:
	bool                                          bIsPassiveOnly;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPassiveOnly_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_CheckPassiveOnly) == 0x000001, "Wrong alignment on BP_AJBDamageActor_C_CheckPassiveOnly");
static_assert(sizeof(BP_AJBDamageActor_C_CheckPassiveOnly) == 0x000002, "Wrong size on BP_AJBDamageActor_C_CheckPassiveOnly");
static_assert(offsetof(BP_AJBDamageActor_C_CheckPassiveOnly, bIsPassiveOnly) == 0x000000, "Member 'BP_AJBDamageActor_C_CheckPassiveOnly::bIsPassiveOnly' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_CheckPassiveOnly, CallFunc_IsPassiveOnly_ReturnValue) == 0x000001, "Member 'BP_AJBDamageActor_C_CheckPassiveOnly::CallFunc_IsPassiveOnly_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.GetDuration
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBDamageActor_C_GetDuration final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBInGameSkillComponent*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBSkillBase_C*                     K2Node_DynamicCast_AsBP_AJBSkill_Base;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_GetDuration) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_GetDuration");
static_assert(sizeof(BP_AJBDamageActor_C_GetDuration) == 0x000038, "Wrong size on BP_AJBDamageActor_C_GetDuration");
static_assert(offsetof(BP_AJBDamageActor_C_GetDuration, Duration) == 0x000000, "Member 'BP_AJBDamageActor_C_GetDuration::Duration' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_GetDuration, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBDamageActor_C_GetDuration::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_GetDuration, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBDamageActor_C_GetDuration::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_GetDuration, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBDamageActor_C_GetDuration::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_GetDuration, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_AJBDamageActor_C_GetDuration::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_GetDuration, K2Node_DynamicCast_AsBP_AJBSkill_Base) == 0x000028, "Member 'BP_AJBDamageActor_C_GetDuration::K2Node_DynamicCast_AsBP_AJBSkill_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_GetDuration, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_AJBDamageActor_C_GetDuration::K2Node_DynamicCast_bSuccess1' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.GetPassiveSkillTag
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBDamageActor_C_GetPassiveSkillTag final
{
public:
	struct FGameplayTag                           PassiveSkillTag;                                   // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBInGameSkillComponent*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBSkillBase_C*                     K2Node_DynamicCast_AsBP_AJBSkill_Base;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_GetPassiveSkillTag) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_GetPassiveSkillTag");
static_assert(sizeof(BP_AJBDamageActor_C_GetPassiveSkillTag) == 0x000038, "Wrong size on BP_AJBDamageActor_C_GetPassiveSkillTag");
static_assert(offsetof(BP_AJBDamageActor_C_GetPassiveSkillTag, PassiveSkillTag) == 0x000000, "Member 'BP_AJBDamageActor_C_GetPassiveSkillTag::PassiveSkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_GetPassiveSkillTag, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBDamageActor_C_GetPassiveSkillTag::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_GetPassiveSkillTag, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBDamageActor_C_GetPassiveSkillTag::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_GetPassiveSkillTag, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBDamageActor_C_GetPassiveSkillTag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_GetPassiveSkillTag, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_AJBDamageActor_C_GetPassiveSkillTag::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_GetPassiveSkillTag, K2Node_DynamicCast_AsBP_AJBSkill_Base) == 0x000028, "Member 'BP_AJBDamageActor_C_GetPassiveSkillTag::K2Node_DynamicCast_AsBP_AJBSkill_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_GetPassiveSkillTag, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_AJBDamageActor_C_GetPassiveSkillTag::K2Node_DynamicCast_bSuccess1' has a wrong offset!");

// Function BP_AJBDamageActor.BP_AJBDamageActor_C.GetCauserOwnerCharacterBP
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBDamageActor_C_GetCauserOwnerCharacterBP final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageActor_C_GetCauserOwnerCharacterBP) == 0x000008, "Wrong alignment on BP_AJBDamageActor_C_GetCauserOwnerCharacterBP");
static_assert(sizeof(BP_AJBDamageActor_C_GetCauserOwnerCharacterBP) == 0x000020, "Wrong size on BP_AJBDamageActor_C_GetCauserOwnerCharacterBP");
static_assert(offsetof(BP_AJBDamageActor_C_GetCauserOwnerCharacterBP, CharacterBP) == 0x000000, "Member 'BP_AJBDamageActor_C_GetCauserOwnerCharacterBP::CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_GetCauserOwnerCharacterBP, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBDamageActor_C_GetCauserOwnerCharacterBP::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_GetCauserOwnerCharacterBP, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBDamageActor_C_GetCauserOwnerCharacterBP::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageActor_C_GetCauserOwnerCharacterBP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBDamageActor_C_GetCauserOwnerCharacterBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


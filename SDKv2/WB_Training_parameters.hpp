#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Training

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "AJB_structs.hpp"
#include "ETrainingCPUStrength_structs.hpp"


namespace SDK::Params
{

// Function WB_Training.WB_Training_C.ExecuteUbergraph_WB_Training
// 0x02C0 (0x02C0 - 0x0000)
struct WB_Training_C_ExecuteUbergraph_WB_Training final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	ETrainingCPUStrength                          Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETrainingCPUStrength                          Temp_byte_Variable1;                               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETrainingCPUStrength                          Temp_byte_Variable2;                               // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	class UFadeOutActionProxy*                    CallFunc_FadeOut_ReturnValue;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFadeInActionProxy*                     CallFunc_FadeIn_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETrainingCPUStrength                          Temp_byte_Variable3;                               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Temp_byte_Variable4;                               // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable5;                               // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable6;                               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable7;                               // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETrainingCPUStrength                          Temp_byte_Variable8;                               // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable9;                               // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable10;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable11;                              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable12;                              // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETrainingCPUStrength                          Temp_byte_Variable13;                              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_ElapsedTime;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETrainingCPUStrength                          Temp_byte_Variable14;                              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETrainingCPUStrength                          Temp_byte_Variable15;                              // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBOutGameHUD_BP_bSuccess;             // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77[0x1];                                       // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBOutGameHUD_C*                    CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0080(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget6;           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton6;          // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget5;           // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton5;          // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget4;           // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton4;          // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget3;           // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton3;          // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget2;           // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton2;          // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget1;           // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton1;          // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget;            // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton;           // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Num;                            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bRespawnable;                   // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETrainingCPUStrength                          K2Node_CustomEvent_CPUStrength;                    // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETrainingCPUStrength                          K2Node_Select_Default;                             // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETrainingCPUStrength                          Temp_byte_Variable16;                              // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_146[0x2];                                      // 0x0146(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue1;           // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChangeStateFromPlayerController_ReturnValue; // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetMenuBGLevelName_ReturnValue;           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent1;    // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select1_Default;                            // 0x0180(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingAnimationButton_ReturnValue;     // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingAnimationButton_ReturnValue1;    // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingAnimationButton_ReturnValue2;    // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingAnimationButton_ReturnValue3;    // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingAnimationButton_ReturnValue4;    // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingAnimationButton_ReturnValue5;    // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess1;             // 0x019F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance1;    // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStageID_StageTypeID;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, struct FAJBStageAreaTitleInfo>    CallFunc_GetAJBAreaTitleMap_AreaTitleMap;          // 0x01B0(0x0050)(ZeroConstructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0208(0x0010)(ZeroConstructor, ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x0218(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         K2Node_Select2_Default;                            // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_232[0x2];                                      // 0x0232(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBBattleSettings                     K2Node_MakeStruct_AJBBattleSettings;               // 0x0234(0x0008)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess2;             // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance2;    // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess3;             // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance3;    // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Select3_Default;                            // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue1;             // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomAreaNo_AreaNo;                      // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_265[0x3];                                      // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBBattleSettings                     K2Node_MakeStruct_AJBBattleSettings1;              // 0x0268(0x0008)(IsPlainOldData, NoDestructor)
	ETrainingCPUStrength                          Temp_byte_Variable17;                              // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAMSystemErrorMode_ReturnValue;          // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0273(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETrainingCPUStrength                          Temp_byte_Variable18;                              // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_276[0x2];                                      // 0x0276(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess4;             // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance4;    // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBBattleSettings                     K2Node_MakeStruct_AJBBattleSettings2;              // 0x0294(0x0008)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess5;             // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29D[0x3];                                      // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance5;    // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETrainingCPUStrength                          Temp_byte_Variable19;                              // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess6;             // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AA[0x6];                                      // 0x02AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance6;    // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETrainingCPUStrength                          K2Node_Select4_Default;                            // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsForLocationTest_ReturnValue;            // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_ExecuteUbergraph_WB_Training) == 0x000008, "Wrong alignment on WB_Training_C_ExecuteUbergraph_WB_Training");
static_assert(sizeof(WB_Training_C_ExecuteUbergraph_WB_Training) == 0x0002C0, "Wrong size on WB_Training_C_ExecuteUbergraph_WB_Training");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, EntryPoint) == 0x000000, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, Temp_byte_Variable) == 0x000018, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, Temp_byte_Variable1) == 0x000019, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, Temp_byte_Variable2) == 0x00001A, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_CreateDelegate_OutputDelegate1) == 0x000020, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_FadeOut_ReturnValue) == 0x000030, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_FadeOut_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_CreateDelegate_OutputDelegate2) == 0x000038, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_FadeIn_ReturnValue) == 0x000050, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_FadeIn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_IsValid_ReturnValue1) == 0x000058, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_IsValid_ReturnValue2) == 0x000059, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, Temp_int_Variable) == 0x00005C, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, Temp_byte_Variable3) == 0x000060, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_IsValid_ReturnValue3) == 0x000061, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, Temp_byte_Variable4) == 0x000062, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, Temp_byte_Variable5) == 0x000063, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::Temp_byte_Variable5' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, Temp_byte_Variable6) == 0x000064, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::Temp_byte_Variable6' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, Temp_byte_Variable7) == 0x000065, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::Temp_byte_Variable7' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, Temp_byte_Variable8) == 0x000066, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::Temp_byte_Variable8' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, Temp_byte_Variable9) == 0x000067, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::Temp_byte_Variable9' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, Temp_byte_Variable10) == 0x000068, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::Temp_byte_Variable10' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, Temp_byte_Variable11) == 0x000069, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::Temp_byte_Variable11' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, Temp_byte_Variable12) == 0x00006A, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::Temp_byte_Variable12' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_IsValid_ReturnValue4) == 0x00006B, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, Temp_byte_Variable13) == 0x00006C, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::Temp_byte_Variable13' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_CustomEvent_ElapsedTime) == 0x000070, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_CustomEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, Temp_byte_Variable14) == 0x000074, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::Temp_byte_Variable14' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, Temp_byte_Variable15) == 0x000075, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::Temp_byte_Variable15' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_GetAJBOutGameHUD_BP_bSuccess) == 0x000076, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_GetAJBOutGameHUD_BP_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD) == 0x000078, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_Event_MyGeometry) == 0x000080, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_Event_InDeltaTime) == 0x0000B8, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_ComponentBoundEvent_OwnerWidget6) == 0x0000C0, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_ComponentBoundEvent_OwnerWidget6' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_ComponentBoundEvent_TargetButton6) == 0x0000C8, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_ComponentBoundEvent_TargetButton6' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_ComponentBoundEvent_OwnerWidget5) == 0x0000D0, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_ComponentBoundEvent_OwnerWidget5' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_ComponentBoundEvent_TargetButton5) == 0x0000D8, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_ComponentBoundEvent_TargetButton5' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_ComponentBoundEvent_OwnerWidget4) == 0x0000E0, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_ComponentBoundEvent_OwnerWidget4' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_ComponentBoundEvent_TargetButton4) == 0x0000E8, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_ComponentBoundEvent_TargetButton4' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_ComponentBoundEvent_OwnerWidget3) == 0x0000F0, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_ComponentBoundEvent_OwnerWidget3' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_ComponentBoundEvent_TargetButton3) == 0x0000F8, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_ComponentBoundEvent_TargetButton3' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_ComponentBoundEvent_OwnerWidget2) == 0x000100, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_ComponentBoundEvent_OwnerWidget2' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_ComponentBoundEvent_TargetButton2) == 0x000108, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_ComponentBoundEvent_TargetButton2' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_ComponentBoundEvent_OwnerWidget1) == 0x000110, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_ComponentBoundEvent_OwnerWidget1' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_ComponentBoundEvent_TargetButton1) == 0x000118, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_ComponentBoundEvent_TargetButton1' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_ComponentBoundEvent_OwnerWidget) == 0x000120, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_ComponentBoundEvent_OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_ComponentBoundEvent_TargetButton) == 0x000128, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_ComponentBoundEvent_TargetButton' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_CustomEvent_Num) == 0x000130, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_CustomEvent_Num' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_Greater_IntInt_ReturnValue) == 0x000134, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_Add_IntInt_ReturnValue) == 0x000138, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_Subtract_IntInt_ReturnValue) == 0x00013C, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_CustomEvent_bRespawnable) == 0x000140, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_CustomEvent_bRespawnable' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_Not_PreBool_ReturnValue) == 0x000141, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_CustomEvent_CPUStrength) == 0x000142, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_CustomEvent_CPUStrength' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_Select_Default) == 0x000143, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, Temp_byte_Variable16) == 0x000144, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::Temp_byte_Variable16' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000145, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000148, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_NotEqual_ByteByte_ReturnValue1) == 0x000150, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_NotEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_GetAJBGameInstance_bSuccess) == 0x000151, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000158, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_ChangeStateFromPlayerController_ReturnValue) == 0x000160, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_ChangeStateFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_GetMenuBGLevelName_ReturnValue) == 0x000168, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_GetMenuBGLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, Temp_bool_Variable) == 0x000170, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_RequestWwiseEventOnLocal_AkComponent1) == 0x000178, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_RequestWwiseEventOnLocal_AkComponent1' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_Select1_Default) == 0x000180, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_IsValid_ReturnValue5) == 0x000198, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_IsPlayingAnimationButton_ReturnValue) == 0x000199, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_IsPlayingAnimationButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_IsPlayingAnimationButton_ReturnValue1) == 0x00019A, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_IsPlayingAnimationButton_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_IsPlayingAnimationButton_ReturnValue2) == 0x00019B, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_IsPlayingAnimationButton_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_IsPlayingAnimationButton_ReturnValue3) == 0x00019C, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_IsPlayingAnimationButton_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_IsPlayingAnimationButton_ReturnValue4) == 0x00019D, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_IsPlayingAnimationButton_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_IsPlayingAnimationButton_ReturnValue5) == 0x00019E, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_IsPlayingAnimationButton_ReturnValue5' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_GetAJBGameInstance_bSuccess1) == 0x00019F, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_GetAJBGameInstance_bSuccess1' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_GetAJBGameInstance_AJB_Game_Instance1) == 0x0001A0, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_GetAJBGameInstance_AJB_Game_Instance1' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_GetStageID_StageTypeID) == 0x0001A8, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_GetStageID_StageTypeID' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_GetAJBAreaTitleMap_AreaTitleMap) == 0x0001B0, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_GetAJBAreaTitleMap_AreaTitleMap' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_Array_Add_ReturnValue) == 0x000200, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_Map_Keys_Keys) == 0x000208, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_CreateDelegate_OutputDelegate3) == 0x000218, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_Array_LastIndex_ReturnValue) == 0x000228, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_Clamp_ReturnValue) == 0x00022C, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000230, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_Select2_Default) == 0x000231, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_MakeStruct_AJBBattleSettings) == 0x000234, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_MakeStruct_AJBBattleSettings' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_GetAJBGameInstance_bSuccess2) == 0x00023C, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_GetAJBGameInstance_bSuccess2' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_GetAJBGameInstance_AJB_Game_Instance2) == 0x000240, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_GetAJBGameInstance_AJB_Game_Instance2' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_GetAJBGameInstance_bSuccess3) == 0x000248, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_GetAJBGameInstance_bSuccess3' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_GetAJBGameInstance_AJB_Game_Instance3) == 0x000250, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_GetAJBGameInstance_AJB_Game_Instance3' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_Select3_Default) == 0x000258, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_Array_LastIndex_ReturnValue1) == 0x00025C, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_Array_LastIndex_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_RandomAreaNo_AreaNo) == 0x000260, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_RandomAreaNo_AreaNo' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_Less_IntInt_ReturnValue) == 0x000264, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_MakeStruct_AJBBattleSettings1) == 0x000268, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_MakeStruct_AJBBattleSettings1' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, Temp_byte_Variable17) == 0x000270, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::Temp_byte_Variable17' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_IsAMSystemErrorMode_ReturnValue) == 0x000271, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_IsAMSystemErrorMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_Not_PreBool_ReturnValue1) == 0x000272, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_BooleanAND_ReturnValue) == 0x000273, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000274, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, Temp_byte_Variable18) == 0x000275, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::Temp_byte_Variable18' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000278, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_FMax_ReturnValue) == 0x00027C, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_GetAJBGameInstance_bSuccess4) == 0x000280, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_GetAJBGameInstance_bSuccess4' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_GetAJBGameInstance_AJB_Game_Instance4) == 0x000288, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_GetAJBGameInstance_AJB_Game_Instance4' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_IsValid_ReturnValue6) == 0x000290, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_MakeStruct_AJBBattleSettings2) == 0x000294, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_MakeStruct_AJBBattleSettings2' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_GetAJBGameInstance_bSuccess5) == 0x00029C, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_GetAJBGameInstance_bSuccess5' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_GetAJBGameInstance_AJB_Game_Instance5) == 0x0002A0, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_GetAJBGameInstance_AJB_Game_Instance5' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, Temp_byte_Variable19) == 0x0002A8, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::Temp_byte_Variable19' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_GetAJBGameInstance_bSuccess6) == 0x0002A9, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_GetAJBGameInstance_bSuccess6' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_GetAJBGameInstance_AJB_Game_Instance6) == 0x0002B0, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_GetAJBGameInstance_AJB_Game_Instance6' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, K2Node_Select4_Default) == 0x0002B8, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(WB_Training_C_ExecuteUbergraph_WB_Training, CallFunc_IsForLocationTest_ReturnValue) == 0x0002B9, "Member 'WB_Training_C_ExecuteUbergraph_WB_Training::CallFunc_IsForLocationTest_ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.UpdateCPUStrength
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_UpdateCPUStrength final
{
public:
	ETrainingCPUStrength                          CPUStrength;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Training_C_UpdateCPUStrength) == 0x000001, "Wrong alignment on WB_Training_C_UpdateCPUStrength");
static_assert(sizeof(WB_Training_C_UpdateCPUStrength) == 0x000001, "Wrong size on WB_Training_C_UpdateCPUStrength");
static_assert(offsetof(WB_Training_C_UpdateCPUStrength, CPUStrength) == 0x000000, "Member 'WB_Training_C_UpdateCPUStrength::CPUStrength' has a wrong offset!");

// Function WB_Training.WB_Training_C.UpdateRespawnable
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_UpdateRespawnable final
{
public:
	bool                                          bRespawnable;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_UpdateRespawnable) == 0x000001, "Wrong alignment on WB_Training_C_UpdateRespawnable");
static_assert(sizeof(WB_Training_C_UpdateRespawnable) == 0x000001, "Wrong size on WB_Training_C_UpdateRespawnable");
static_assert(offsetof(WB_Training_C_UpdateRespawnable, bRespawnable) == 0x000000, "Member 'WB_Training_C_UpdateRespawnable::bRespawnable' has a wrong offset!");

// Function WB_Training.WB_Training_C.UpdateAreaID
// 0x0004 (0x0004 - 0x0000)
struct WB_Training_C_UpdateAreaID final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Training_C_UpdateAreaID) == 0x000004, "Wrong alignment on WB_Training_C_UpdateAreaID");
static_assert(sizeof(WB_Training_C_UpdateAreaID) == 0x000004, "Wrong size on WB_Training_C_UpdateAreaID");
static_assert(offsetof(WB_Training_C_UpdateAreaID, Num) == 0x000000, "Member 'WB_Training_C_UpdateAreaID::Num' has a wrong offset!");

// Function WB_Training.WB_Training_C.BndEvt__WB_ArrowButton_RespawnUp_K2Node_ComponentBoundEvent_6_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_Training_C_BndEvt__WB_ArrowButton_RespawnUp_K2Node_ComponentBoundEvent_6_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Training_C_BndEvt__WB_ArrowButton_RespawnUp_K2Node_ComponentBoundEvent_6_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_Training_C_BndEvt__WB_ArrowButton_RespawnUp_K2Node_ComponentBoundEvent_6_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_Training_C_BndEvt__WB_ArrowButton_RespawnUp_K2Node_ComponentBoundEvent_6_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_Training_C_BndEvt__WB_ArrowButton_RespawnUp_K2Node_ComponentBoundEvent_6_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_Training_C_BndEvt__WB_ArrowButton_RespawnUp_K2Node_ComponentBoundEvent_6_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_Training_C_BndEvt__WB_ArrowButton_RespawnUp_K2Node_ComponentBoundEvent_6_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_Training_C_BndEvt__WB_ArrowButton_RespawnUp_K2Node_ComponentBoundEvent_6_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_Training_C_BndEvt__WB_ArrowButton_RespawnUp_K2Node_ComponentBoundEvent_6_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_Training.WB_Training_C.BndEvt__WB_ArrowButton_RespawnDown_K2Node_ComponentBoundEvent_5_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_Training_C_BndEvt__WB_ArrowButton_RespawnDown_K2Node_ComponentBoundEvent_5_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Training_C_BndEvt__WB_ArrowButton_RespawnDown_K2Node_ComponentBoundEvent_5_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_Training_C_BndEvt__WB_ArrowButton_RespawnDown_K2Node_ComponentBoundEvent_5_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_Training_C_BndEvt__WB_ArrowButton_RespawnDown_K2Node_ComponentBoundEvent_5_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_Training_C_BndEvt__WB_ArrowButton_RespawnDown_K2Node_ComponentBoundEvent_5_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_Training_C_BndEvt__WB_ArrowButton_RespawnDown_K2Node_ComponentBoundEvent_5_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_Training_C_BndEvt__WB_ArrowButton_RespawnDown_K2Node_ComponentBoundEvent_5_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_Training_C_BndEvt__WB_ArrowButton_RespawnDown_K2Node_ComponentBoundEvent_5_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_Training_C_BndEvt__WB_ArrowButton_RespawnDown_K2Node_ComponentBoundEvent_5_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_Training.WB_Training_C.BndEvt__WB_ArrowButton_CPUNumUp_K2Node_ComponentBoundEvent_4_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_Training_C_BndEvt__WB_ArrowButton_CPUNumUp_K2Node_ComponentBoundEvent_4_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Training_C_BndEvt__WB_ArrowButton_CPUNumUp_K2Node_ComponentBoundEvent_4_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_Training_C_BndEvt__WB_ArrowButton_CPUNumUp_K2Node_ComponentBoundEvent_4_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_Training_C_BndEvt__WB_ArrowButton_CPUNumUp_K2Node_ComponentBoundEvent_4_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_Training_C_BndEvt__WB_ArrowButton_CPUNumUp_K2Node_ComponentBoundEvent_4_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_Training_C_BndEvt__WB_ArrowButton_CPUNumUp_K2Node_ComponentBoundEvent_4_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_Training_C_BndEvt__WB_ArrowButton_CPUNumUp_K2Node_ComponentBoundEvent_4_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_Training_C_BndEvt__WB_ArrowButton_CPUNumUp_K2Node_ComponentBoundEvent_4_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_Training_C_BndEvt__WB_ArrowButton_CPUNumUp_K2Node_ComponentBoundEvent_4_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_Training.WB_Training_C.BndEvt__WB_ArrowButton_CPUNumDown_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_Training_C_BndEvt__WB_ArrowButton_CPUNumDown_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Training_C_BndEvt__WB_ArrowButton_CPUNumDown_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_Training_C_BndEvt__WB_ArrowButton_CPUNumDown_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_Training_C_BndEvt__WB_ArrowButton_CPUNumDown_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_Training_C_BndEvt__WB_ArrowButton_CPUNumDown_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_Training_C_BndEvt__WB_ArrowButton_CPUNumDown_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_Training_C_BndEvt__WB_ArrowButton_CPUNumDown_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_Training_C_BndEvt__WB_ArrowButton_CPUNumDown_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_Training_C_BndEvt__WB_ArrowButton_CPUNumDown_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_Training.WB_Training_C.BndEvt__WB_ArrowButton_CPULevelUp_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_Training_C_BndEvt__WB_ArrowButton_CPULevelUp_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Training_C_BndEvt__WB_ArrowButton_CPULevelUp_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_Training_C_BndEvt__WB_ArrowButton_CPULevelUp_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_Training_C_BndEvt__WB_ArrowButton_CPULevelUp_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_Training_C_BndEvt__WB_ArrowButton_CPULevelUp_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_Training_C_BndEvt__WB_ArrowButton_CPULevelUp_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_Training_C_BndEvt__WB_ArrowButton_CPULevelUp_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_Training_C_BndEvt__WB_ArrowButton_CPULevelUp_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_Training_C_BndEvt__WB_ArrowButton_CPULevelUp_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_Training.WB_Training_C.BndEvt__WB_ArrowButton_CPULevelDown_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_Training_C_BndEvt__WB_ArrowButton_CPULevelDown_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Training_C_BndEvt__WB_ArrowButton_CPULevelDown_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_Training_C_BndEvt__WB_ArrowButton_CPULevelDown_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_Training_C_BndEvt__WB_ArrowButton_CPULevelDown_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_Training_C_BndEvt__WB_ArrowButton_CPULevelDown_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_Training_C_BndEvt__WB_ArrowButton_CPULevelDown_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_Training_C_BndEvt__WB_ArrowButton_CPULevelDown_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_Training_C_BndEvt__WB_ArrowButton_CPULevelDown_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_Training_C_BndEvt__WB_ArrowButton_CPULevelDown_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_Training.WB_Training_C.BndEvt__WB_CommonButton_START_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_Training_C_BndEvt__WB_CommonButton_START_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Training_C_BndEvt__WB_CommonButton_START_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_Training_C_BndEvt__WB_CommonButton_START_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_Training_C_BndEvt__WB_CommonButton_START_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_Training_C_BndEvt__WB_CommonButton_START_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_Training_C_BndEvt__WB_CommonButton_START_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_Training_C_BndEvt__WB_CommonButton_START_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_Training_C_BndEvt__WB_CommonButton_START_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_Training_C_BndEvt__WB_CommonButton_START_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_Training.WB_Training_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_Training_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Training_C_Tick) == 0x000004, "Wrong alignment on WB_Training_C_Tick");
static_assert(sizeof(WB_Training_C_Tick) == 0x00003C, "Wrong size on WB_Training_C_Tick");
static_assert(offsetof(WB_Training_C_Tick, MyGeometry) == 0x000000, "Member 'WB_Training_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Training_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_Training_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_Training.WB_Training_C.SetTimeCountDownElapsedTime
// 0x0004 (0x0004 - 0x0000)
struct WB_Training_C_SetTimeCountDownElapsedTime final
{
public:
	float                                         ElapsedTime_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Training_C_SetTimeCountDownElapsedTime) == 0x000004, "Wrong alignment on WB_Training_C_SetTimeCountDownElapsedTime");
static_assert(sizeof(WB_Training_C_SetTimeCountDownElapsedTime) == 0x000004, "Wrong size on WB_Training_C_SetTimeCountDownElapsedTime");
static_assert(offsetof(WB_Training_C_SetTimeCountDownElapsedTime, ElapsedTime_0) == 0x000000, "Member 'WB_Training_C_SetTimeCountDownElapsedTime::ElapsedTime_0' has a wrong offset!");

// Function WB_Training.WB_Training_C.SwitchingCPUStrength
// 0x0008 (0x0008 - 0x0000)
struct WB_Training_C_SwitchingCPUStrength final
{
public:
	int32                                         LActiveIndex;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Training_C_SwitchingCPUStrength) == 0x000004, "Wrong alignment on WB_Training_C_SwitchingCPUStrength");
static_assert(sizeof(WB_Training_C_SwitchingCPUStrength) == 0x000008, "Wrong size on WB_Training_C_SwitchingCPUStrength");
static_assert(offsetof(WB_Training_C_SwitchingCPUStrength, LActiveIndex) == 0x000000, "Member 'WB_Training_C_SwitchingCPUStrength::LActiveIndex' has a wrong offset!");
static_assert(offsetof(WB_Training_C_SwitchingCPUStrength, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'WB_Training_C_SwitchingCPUStrength::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.SetAreaTitle
// 0x0108 (0x0108 - 0x0000)
struct WB_Training_C_SetAreaTitle final
{
public:
	struct FAJBStageAreaTitleInfo                 LTitleInfo;                                        // 0x0000(0x0048)(Edit, BlueprintVisible)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStageID_StageTypeID;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, struct FAJBStageAreaTitleInfo>    CallFunc_GetAJBAreaTitleMap_AreaTitleMap;          // 0x0060(0x0050)(ZeroConstructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBStageAreaTitleInfo                 CallFunc_Map_Find_Value;                           // 0x00B8(0x0048)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_SetAreaTitle) == 0x000008, "Wrong alignment on WB_Training_C_SetAreaTitle");
static_assert(sizeof(WB_Training_C_SetAreaTitle) == 0x000108, "Wrong size on WB_Training_C_SetAreaTitle");
static_assert(offsetof(WB_Training_C_SetAreaTitle, LTitleInfo) == 0x000000, "Member 'WB_Training_C_SetAreaTitle::LTitleInfo' has a wrong offset!");
static_assert(offsetof(WB_Training_C_SetAreaTitle, CallFunc_GetAJBGameInstance_bSuccess) == 0x000048, "Member 'WB_Training_C_SetAreaTitle::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Training_C_SetAreaTitle, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000050, "Member 'WB_Training_C_SetAreaTitle::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_Training_C_SetAreaTitle, CallFunc_GetStageID_StageTypeID) == 0x000058, "Member 'WB_Training_C_SetAreaTitle::CallFunc_GetStageID_StageTypeID' has a wrong offset!");
static_assert(offsetof(WB_Training_C_SetAreaTitle, CallFunc_GetAJBAreaTitleMap_AreaTitleMap) == 0x000060, "Member 'WB_Training_C_SetAreaTitle::CallFunc_GetAJBAreaTitleMap_AreaTitleMap' has a wrong offset!");
static_assert(offsetof(WB_Training_C_SetAreaTitle, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000B0, "Member 'WB_Training_C_SetAreaTitle::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Training_C_SetAreaTitle, CallFunc_Map_Find_Value) == 0x0000B8, "Member 'WB_Training_C_SetAreaTitle::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WB_Training_C_SetAreaTitle, CallFunc_Map_Find_ReturnValue) == 0x000100, "Member 'WB_Training_C_SetAreaTitle::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputTurnRate
// 0x0008 (0x0008 - 0x0000)
struct WB_Training_C_OnInputTurnRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputTurnRate) == 0x000004, "Wrong alignment on WB_Training_C_OnInputTurnRate");
static_assert(sizeof(WB_Training_C_OnInputTurnRate) == 0x000008, "Wrong size on WB_Training_C_OnInputTurnRate");
static_assert(offsetof(WB_Training_C_OnInputTurnRate, Value) == 0x000000, "Member 'WB_Training_C_OnInputTurnRate::Value' has a wrong offset!");
static_assert(offsetof(WB_Training_C_OnInputTurnRate, ReturnValue) == 0x000004, "Member 'WB_Training_C_OnInputTurnRate::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputReleasedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputReleasedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputReleasedUp) == 0x000001, "Wrong alignment on WB_Training_C_OnInputReleasedUp");
static_assert(sizeof(WB_Training_C_OnInputReleasedUp) == 0x000001, "Wrong size on WB_Training_C_OnInputReleasedUp");
static_assert(offsetof(WB_Training_C_OnInputReleasedUp, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputReleasedUp::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputReleasedTouch
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputReleasedTouch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputReleasedTouch) == 0x000001, "Wrong alignment on WB_Training_C_OnInputReleasedTouch");
static_assert(sizeof(WB_Training_C_OnInputReleasedTouch) == 0x000001, "Wrong size on WB_Training_C_OnInputReleasedTouch");
static_assert(offsetof(WB_Training_C_OnInputReleasedTouch, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputReleasedTouch::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputReleasedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputReleasedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputReleasedRight) == 0x000001, "Wrong alignment on WB_Training_C_OnInputReleasedRight");
static_assert(sizeof(WB_Training_C_OnInputReleasedRight) == 0x000001, "Wrong size on WB_Training_C_OnInputReleasedRight");
static_assert(offsetof(WB_Training_C_OnInputReleasedRight, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputReleasedRight::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputReleasedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputReleasedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputReleasedLeft) == 0x000001, "Wrong alignment on WB_Training_C_OnInputReleasedLeft");
static_assert(sizeof(WB_Training_C_OnInputReleasedLeft) == 0x000001, "Wrong size on WB_Training_C_OnInputReleasedLeft");
static_assert(offsetof(WB_Training_C_OnInputReleasedLeft, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputReleasedLeft::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputReleasedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputReleasedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputReleasedDown) == 0x000001, "Wrong alignment on WB_Training_C_OnInputReleasedDown");
static_assert(sizeof(WB_Training_C_OnInputReleasedDown) == 0x000001, "Wrong size on WB_Training_C_OnInputReleasedDown");
static_assert(offsetof(WB_Training_C_OnInputReleasedDown, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputReleasedDown::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputReleasedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputReleasedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputReleasedDecide) == 0x000001, "Wrong alignment on WB_Training_C_OnInputReleasedDecide");
static_assert(sizeof(WB_Training_C_OnInputReleasedDecide) == 0x000001, "Wrong size on WB_Training_C_OnInputReleasedDecide");
static_assert(offsetof(WB_Training_C_OnInputReleasedDecide, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputReleasedDecide::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputReleasedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputReleasedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputReleasedCancel) == 0x000001, "Wrong alignment on WB_Training_C_OnInputReleasedCancel");
static_assert(sizeof(WB_Training_C_OnInputReleasedCancel) == 0x000001, "Wrong size on WB_Training_C_OnInputReleasedCancel");
static_assert(offsetof(WB_Training_C_OnInputReleasedCancel, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputReleasedCancel::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputPressedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputPressedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputPressedUp) == 0x000001, "Wrong alignment on WB_Training_C_OnInputPressedUp");
static_assert(sizeof(WB_Training_C_OnInputPressedUp) == 0x000001, "Wrong size on WB_Training_C_OnInputPressedUp");
static_assert(offsetof(WB_Training_C_OnInputPressedUp, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputPressedUp::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputPressedTouch
// 0x000C (0x000C - 0x0000)
struct WB_Training_C_OnInputPressedTouch final
{
public:
	float                                         LocationX;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocationY;                                         // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputPressedTouch) == 0x000004, "Wrong alignment on WB_Training_C_OnInputPressedTouch");
static_assert(sizeof(WB_Training_C_OnInputPressedTouch) == 0x00000C, "Wrong size on WB_Training_C_OnInputPressedTouch");
static_assert(offsetof(WB_Training_C_OnInputPressedTouch, LocationX) == 0x000000, "Member 'WB_Training_C_OnInputPressedTouch::LocationX' has a wrong offset!");
static_assert(offsetof(WB_Training_C_OnInputPressedTouch, LocationY) == 0x000004, "Member 'WB_Training_C_OnInputPressedTouch::LocationY' has a wrong offset!");
static_assert(offsetof(WB_Training_C_OnInputPressedTouch, ReturnValue) == 0x000008, "Member 'WB_Training_C_OnInputPressedTouch::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputPressedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputPressedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputPressedRight) == 0x000001, "Wrong alignment on WB_Training_C_OnInputPressedRight");
static_assert(sizeof(WB_Training_C_OnInputPressedRight) == 0x000001, "Wrong size on WB_Training_C_OnInputPressedRight");
static_assert(offsetof(WB_Training_C_OnInputPressedRight, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputPressedRight::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputPressedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputPressedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputPressedLeft) == 0x000001, "Wrong alignment on WB_Training_C_OnInputPressedLeft");
static_assert(sizeof(WB_Training_C_OnInputPressedLeft) == 0x000001, "Wrong size on WB_Training_C_OnInputPressedLeft");
static_assert(offsetof(WB_Training_C_OnInputPressedLeft, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputPressedLeft::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputPressedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputPressedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputPressedDown) == 0x000001, "Wrong alignment on WB_Training_C_OnInputPressedDown");
static_assert(sizeof(WB_Training_C_OnInputPressedDown) == 0x000001, "Wrong size on WB_Training_C_OnInputPressedDown");
static_assert(offsetof(WB_Training_C_OnInputPressedDown, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputPressedDown::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputPressedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputPressedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputPressedDecide) == 0x000001, "Wrong alignment on WB_Training_C_OnInputPressedDecide");
static_assert(sizeof(WB_Training_C_OnInputPressedDecide) == 0x000001, "Wrong size on WB_Training_C_OnInputPressedDecide");
static_assert(offsetof(WB_Training_C_OnInputPressedDecide, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputPressedDecide::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputPressedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputPressedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputPressedCancel) == 0x000001, "Wrong alignment on WB_Training_C_OnInputPressedCancel");
static_assert(sizeof(WB_Training_C_OnInputPressedCancel) == 0x000001, "Wrong size on WB_Training_C_OnInputPressedCancel");
static_assert(offsetof(WB_Training_C_OnInputPressedCancel, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputPressedCancel::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputMoveRight
// 0x0008 (0x0008 - 0x0000)
struct WB_Training_C_OnInputMoveRight final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputMoveRight) == 0x000004, "Wrong alignment on WB_Training_C_OnInputMoveRight");
static_assert(sizeof(WB_Training_C_OnInputMoveRight) == 0x000008, "Wrong size on WB_Training_C_OnInputMoveRight");
static_assert(offsetof(WB_Training_C_OnInputMoveRight, Value) == 0x000000, "Member 'WB_Training_C_OnInputMoveRight::Value' has a wrong offset!");
static_assert(offsetof(WB_Training_C_OnInputMoveRight, ReturnValue) == 0x000004, "Member 'WB_Training_C_OnInputMoveRight::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputMoveForward
// 0x0008 (0x0008 - 0x0000)
struct WB_Training_C_OnInputMoveForward final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputMoveForward) == 0x000004, "Wrong alignment on WB_Training_C_OnInputMoveForward");
static_assert(sizeof(WB_Training_C_OnInputMoveForward) == 0x000008, "Wrong size on WB_Training_C_OnInputMoveForward");
static_assert(offsetof(WB_Training_C_OnInputMoveForward, Value) == 0x000000, "Member 'WB_Training_C_OnInputMoveForward::Value' has a wrong offset!");
static_assert(offsetof(WB_Training_C_OnInputMoveForward, ReturnValue) == 0x000004, "Member 'WB_Training_C_OnInputMoveForward::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputLookupRate
// 0x0008 (0x0008 - 0x0000)
struct WB_Training_C_OnInputLookupRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputLookupRate) == 0x000004, "Wrong alignment on WB_Training_C_OnInputLookupRate");
static_assert(sizeof(WB_Training_C_OnInputLookupRate) == 0x000008, "Wrong size on WB_Training_C_OnInputLookupRate");
static_assert(offsetof(WB_Training_C_OnInputLookupRate, Value) == 0x000000, "Member 'WB_Training_C_OnInputLookupRate::Value' has a wrong offset!");
static_assert(offsetof(WB_Training_C_OnInputLookupRate, ReturnValue) == 0x000004, "Member 'WB_Training_C_OnInputLookupRate::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.IsModeless
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_IsModeless final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_IsModeless) == 0x000001, "Wrong alignment on WB_Training_C_IsModeless");
static_assert(sizeof(WB_Training_C_IsModeless) == 0x000001, "Wrong size on WB_Training_C_IsModeless");
static_assert(offsetof(WB_Training_C_IsModeless, ReturnValue) == 0x000000, "Member 'WB_Training_C_IsModeless::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputReleasedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputReleasedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputReleasedR2) == 0x000001, "Wrong alignment on WB_Training_C_OnInputReleasedR2");
static_assert(sizeof(WB_Training_C_OnInputReleasedR2) == 0x000001, "Wrong size on WB_Training_C_OnInputReleasedR2");
static_assert(offsetof(WB_Training_C_OnInputReleasedR2, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputReleasedR2::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputReleasedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputReleasedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputReleasedR1) == 0x000001, "Wrong alignment on WB_Training_C_OnInputReleasedR1");
static_assert(sizeof(WB_Training_C_OnInputReleasedR1) == 0x000001, "Wrong size on WB_Training_C_OnInputReleasedR1");
static_assert(offsetof(WB_Training_C_OnInputReleasedR1, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputReleasedR1::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputReleasedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputReleasedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputReleasedL2) == 0x000001, "Wrong alignment on WB_Training_C_OnInputReleasedL2");
static_assert(sizeof(WB_Training_C_OnInputReleasedL2) == 0x000001, "Wrong size on WB_Training_C_OnInputReleasedL2");
static_assert(offsetof(WB_Training_C_OnInputReleasedL2, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputReleasedL2::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputReleasedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputReleasedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputReleasedL1) == 0x000001, "Wrong alignment on WB_Training_C_OnInputReleasedL1");
static_assert(sizeof(WB_Training_C_OnInputReleasedL1) == 0x000001, "Wrong size on WB_Training_C_OnInputReleasedL1");
static_assert(offsetof(WB_Training_C_OnInputReleasedL1, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputReleasedL1::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputPressedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputPressedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputPressedR2) == 0x000001, "Wrong alignment on WB_Training_C_OnInputPressedR2");
static_assert(sizeof(WB_Training_C_OnInputPressedR2) == 0x000001, "Wrong size on WB_Training_C_OnInputPressedR2");
static_assert(offsetof(WB_Training_C_OnInputPressedR2, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputPressedR2::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputPressedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputPressedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputPressedR1) == 0x000001, "Wrong alignment on WB_Training_C_OnInputPressedR1");
static_assert(sizeof(WB_Training_C_OnInputPressedR1) == 0x000001, "Wrong size on WB_Training_C_OnInputPressedR1");
static_assert(offsetof(WB_Training_C_OnInputPressedR1, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputPressedR1::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputPressedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputPressedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputPressedL2) == 0x000001, "Wrong alignment on WB_Training_C_OnInputPressedL2");
static_assert(sizeof(WB_Training_C_OnInputPressedL2) == 0x000001, "Wrong size on WB_Training_C_OnInputPressedL2");
static_assert(offsetof(WB_Training_C_OnInputPressedL2, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputPressedL2::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputPressedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputPressedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputPressedL1) == 0x000001, "Wrong alignment on WB_Training_C_OnInputPressedL1");
static_assert(sizeof(WB_Training_C_OnInputPressedL1) == 0x000001, "Wrong size on WB_Training_C_OnInputPressedL1");
static_assert(offsetof(WB_Training_C_OnInputPressedL1, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputPressedL1::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputReleasedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputReleasedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputReleasedL3) == 0x000001, "Wrong alignment on WB_Training_C_OnInputReleasedL3");
static_assert(sizeof(WB_Training_C_OnInputReleasedL3) == 0x000001, "Wrong size on WB_Training_C_OnInputReleasedL3");
static_assert(offsetof(WB_Training_C_OnInputReleasedL3, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputReleasedL3::ReturnValue' has a wrong offset!");

// Function WB_Training.WB_Training_C.OnInputPressedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_Training_C_OnInputPressedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Training_C_OnInputPressedL3) == 0x000001, "Wrong alignment on WB_Training_C_OnInputPressedL3");
static_assert(sizeof(WB_Training_C_OnInputPressedL3) == 0x000001, "Wrong size on WB_Training_C_OnInputPressedL3");
static_assert(offsetof(WB_Training_C_OnInputPressedL3, ReturnValue) == 0x000000, "Member 'WB_Training_C_OnInputPressedL3::ReturnValue' has a wrong offset!");

}


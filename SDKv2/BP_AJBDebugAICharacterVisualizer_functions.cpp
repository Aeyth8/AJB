#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBDebugAICharacterVisualizer

#include "Basic.hpp"

#include "BP_AJBDebugAICharacterVisualizer_classes.hpp"
#include "BP_AJBDebugAICharacterVisualizer_parameters.hpp"


namespace SDK
{

// Function BP_AJBDebugAICharacterVisualizer.BP_AJBDebugAICharacterVisualizer_C.ExecuteUbergraph_BP_AJBDebugAICharacterVisualizer
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDebugAICharacterVisualizer_C::ExecuteUbergraph_BP_AJBDebugAICharacterVisualizer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugAICharacterVisualizer_C", "ExecuteUbergraph_BP_AJBDebugAICharacterVisualizer");

	Params::BP_AJBDebugAICharacterVisualizer_C_ExecuteUbergraph_BP_AJBDebugAICharacterVisualizer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDebugAICharacterVisualizer.BP_AJBDebugAICharacterVisualizer_C.UpdateLocation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InputDestination_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          FinalDestination_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDebugAICharacterVisualizer_C::UpdateLocation(const struct FVector& Location, const struct FVector& InputDestination_0, const struct FVector& FinalDestination_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugAICharacterVisualizer_C", "UpdateLocation");

	Params::BP_AJBDebugAICharacterVisualizer_C_UpdateLocation Parms{};

	Parms.Location = std::move(Location);
	Parms.InputDestination_0 = std::move(InputDestination_0);
	Parms.FinalDestination_0 = std::move(FinalDestination_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDebugAICharacterVisualizer.BP_AJBDebugAICharacterVisualizer_C.NotifyDead
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDebugAICharacterVisualizer_C::NotifyDead(const struct FGameplayTag& DamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugAICharacterVisualizer_C", "NotifyDead");

	Params::BP_AJBDebugAICharacterVisualizer_C_NotifyDead Parms{};

	Parms.DamageType = std::move(DamageType);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDebugAICharacterVisualizer.BP_AJBDebugAICharacterVisualizer_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDebugAICharacterVisualizer_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugAICharacterVisualizer_C", "ReceiveTick");

	Params::BP_AJBDebugAICharacterVisualizer_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDebugAICharacterVisualizer.BP_AJBDebugAICharacterVisualizer_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBDebugAICharacterVisualizer_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugAICharacterVisualizer_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDebugAICharacterVisualizer.BP_AJBDebugAICharacterVisualizer_C.UpdateDebugString
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBDebugAICharacterVisualizer_C::UpdateDebugString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugAICharacterVisualizer_C", "UpdateDebugString");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDebugAICharacterVisualizer.BP_AJBDebugAICharacterVisualizer_C.SetShowDebugStatus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBDebugAICharacterVisualizer_C::SetShowDebugStatus(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugAICharacterVisualizer_C", "SetShowDebugStatus");

	Params::BP_AJBDebugAICharacterVisualizer_C_SetShowDebugStatus Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDebugAICharacterVisualizer.BP_AJBDebugAICharacterVisualizer_C.UpdatePawn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDebugAICharacterVisualizer_C::UpdatePawn(class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugAICharacterVisualizer_C", "UpdatePawn");

	Params::BP_AJBDebugAICharacterVisualizer_C_UpdatePawn Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}

}


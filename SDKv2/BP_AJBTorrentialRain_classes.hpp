#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBTorrentialRain

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AJBPassiveSkillBase_classes.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBTorrentialRain.BP_AJBTorrentialRain_C
// 0x0058 (0x0248 - 0x01F0)
class UBP_AJBTorrentialRain_C final : public UBP_AJBPassiveSkillBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBTorrentialRain_C;             // 0x01F0(0x0008)(Transient, DuplicateTransient)
	class ABP_AJBTorrentialRainCloud_C*           TorrentialRainCloud;                               // 0x01F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaterialIndex_Character;                           // 0x0200(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaterialIndex_Stand;                               // 0x0204(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMITorrentialRain;                                 // 0x0208(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rep_Phase_Server_;                                 // 0x0210(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxPhase;                                          // 0x0214(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharacterMoveSpeedScalePhase1;                     // 0x0218(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharacterMoveSpeedScalePhase2;                     // 0x021C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharacterMoveSpeedScalePhase3;                     // 0x0220(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharacterMovementDistanceScalePhase1;              // 0x0224(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharacterMovementDistanceScalePhase2;              // 0x0228(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharacterMovementDistanceScalePhase3;              // 0x022C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StandLaunchVelocityScalePhase1;                    // 0x0230(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StandLaunchVelocityScalePhase2;                    // 0x0234(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StandLaunchVelocityScalePhase3;                    // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharacterMoveSpeedScaleByStandPhase1;              // 0x023C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharacterMoveSpeedScaleByStandPhase2;              // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharacterMoveSpeedScaleByStandPhase3;              // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBTorrentialRain(int32 EntryPoint);
	void ChangeEnable(bool bEnable);
	void OnMC_ActivePassive(class UObject* Causer, const struct FGameplayTag& CauserType, int32 SerialNumber);
	void ChangeEnableVisual(bool bEnable);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void TryGetTorrentialRainCloud(class ABP_AJBTorrentialRainCloud_C** TorrentialRainCloud_0);
	void OnRep_Rep_Phase_Server_();
	void SetPoliticMoveSpeed();
	void GetGameplayTagTorrentialRain(int32 PhaseNum, struct FGameplayTag* GameplayTag);
	void SetPoliticMoveDistance();
	void SetPoliticStandLaunchVelocityScale();
	void SetPoliticMoveSpeedByStand();
	void ChangeParticleVisibility(bool bNewVisibility);
	void ActivePassive(class UObject* Causer, bool bTriggeredByStand, const struct FGameplayTag& CauserType, int32 SerialNumber);
	void NotifyChangeFXVisibility(const struct FST_FXVisibilityInfo& PrevFXVisibility, const struct FST_FXVisibilityInfo& FXVisibility);
	void GetCurrentPhase(int32* Phase);
	void ReceiveBeginPlay();
	void InactiveAction();
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBTorrentialRain_C">();
	}
	static class UBP_AJBTorrentialRain_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBTorrentialRain_C>();
	}
};
static_assert(alignof(UBP_AJBTorrentialRain_C) == 0x000008, "Wrong alignment on UBP_AJBTorrentialRain_C");
static_assert(sizeof(UBP_AJBTorrentialRain_C) == 0x000248, "Wrong size on UBP_AJBTorrentialRain_C");
static_assert(offsetof(UBP_AJBTorrentialRain_C, UberGraphFrame_BP_AJBTorrentialRain_C) == 0x0001F0, "Member 'UBP_AJBTorrentialRain_C::UberGraphFrame_BP_AJBTorrentialRain_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBTorrentialRain_C, TorrentialRainCloud) == 0x0001F8, "Member 'UBP_AJBTorrentialRain_C::TorrentialRainCloud' has a wrong offset!");
static_assert(offsetof(UBP_AJBTorrentialRain_C, MaterialIndex_Character) == 0x000200, "Member 'UBP_AJBTorrentialRain_C::MaterialIndex_Character' has a wrong offset!");
static_assert(offsetof(UBP_AJBTorrentialRain_C, MaterialIndex_Stand) == 0x000204, "Member 'UBP_AJBTorrentialRain_C::MaterialIndex_Stand' has a wrong offset!");
static_assert(offsetof(UBP_AJBTorrentialRain_C, DMITorrentialRain) == 0x000208, "Member 'UBP_AJBTorrentialRain_C::DMITorrentialRain' has a wrong offset!");
static_assert(offsetof(UBP_AJBTorrentialRain_C, Rep_Phase_Server_) == 0x000210, "Member 'UBP_AJBTorrentialRain_C::Rep_Phase_Server_' has a wrong offset!");
static_assert(offsetof(UBP_AJBTorrentialRain_C, MaxPhase) == 0x000214, "Member 'UBP_AJBTorrentialRain_C::MaxPhase' has a wrong offset!");
static_assert(offsetof(UBP_AJBTorrentialRain_C, CharacterMoveSpeedScalePhase1) == 0x000218, "Member 'UBP_AJBTorrentialRain_C::CharacterMoveSpeedScalePhase1' has a wrong offset!");
static_assert(offsetof(UBP_AJBTorrentialRain_C, CharacterMoveSpeedScalePhase2) == 0x00021C, "Member 'UBP_AJBTorrentialRain_C::CharacterMoveSpeedScalePhase2' has a wrong offset!");
static_assert(offsetof(UBP_AJBTorrentialRain_C, CharacterMoveSpeedScalePhase3) == 0x000220, "Member 'UBP_AJBTorrentialRain_C::CharacterMoveSpeedScalePhase3' has a wrong offset!");
static_assert(offsetof(UBP_AJBTorrentialRain_C, CharacterMovementDistanceScalePhase1) == 0x000224, "Member 'UBP_AJBTorrentialRain_C::CharacterMovementDistanceScalePhase1' has a wrong offset!");
static_assert(offsetof(UBP_AJBTorrentialRain_C, CharacterMovementDistanceScalePhase2) == 0x000228, "Member 'UBP_AJBTorrentialRain_C::CharacterMovementDistanceScalePhase2' has a wrong offset!");
static_assert(offsetof(UBP_AJBTorrentialRain_C, CharacterMovementDistanceScalePhase3) == 0x00022C, "Member 'UBP_AJBTorrentialRain_C::CharacterMovementDistanceScalePhase3' has a wrong offset!");
static_assert(offsetof(UBP_AJBTorrentialRain_C, StandLaunchVelocityScalePhase1) == 0x000230, "Member 'UBP_AJBTorrentialRain_C::StandLaunchVelocityScalePhase1' has a wrong offset!");
static_assert(offsetof(UBP_AJBTorrentialRain_C, StandLaunchVelocityScalePhase2) == 0x000234, "Member 'UBP_AJBTorrentialRain_C::StandLaunchVelocityScalePhase2' has a wrong offset!");
static_assert(offsetof(UBP_AJBTorrentialRain_C, StandLaunchVelocityScalePhase3) == 0x000238, "Member 'UBP_AJBTorrentialRain_C::StandLaunchVelocityScalePhase3' has a wrong offset!");
static_assert(offsetof(UBP_AJBTorrentialRain_C, CharacterMoveSpeedScaleByStandPhase1) == 0x00023C, "Member 'UBP_AJBTorrentialRain_C::CharacterMoveSpeedScaleByStandPhase1' has a wrong offset!");
static_assert(offsetof(UBP_AJBTorrentialRain_C, CharacterMoveSpeedScaleByStandPhase2) == 0x000240, "Member 'UBP_AJBTorrentialRain_C::CharacterMoveSpeedScaleByStandPhase2' has a wrong offset!");
static_assert(offsetof(UBP_AJBTorrentialRain_C, CharacterMoveSpeedScaleByStandPhase3) == 0x000244, "Member 'UBP_AJBTorrentialRain_C::CharacterMoveSpeedScaleByStandPhase3' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_AJBReachToLocationByPath

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTS_AJBReachToLocationByPath.BTS_AJBReachToLocationByPath_C
// 0x00F8 (0x0190 - 0x0098)
class UBTS_AJBReachToLocationByPath_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 RO_InitialPathKey;                                 // 0x00A0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FBlackboardKeySelector                 NextMovementPointKey;                              // 0x00C8(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 IfArrivedKey;                                      // 0x00F0(0x0028)(Edit, BlueprintVisible)
	float                                         ArrivedDistanceXYThreshLastPoint;                  // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInitialized;                                      // 0x011C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBAIPathController_C*              PathController;                                    // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBlackboardKeySelector                 RO_FinalDestinationKey;                            // 0x0128(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 IfServiceDoneKey;                                  // 0x0150(0x0028)(Edit, BlueprintVisible)
	class AAIController*                          AIController;                                      // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEventTagLocker*                        FixLookAtLocker;                                   // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIRecognition_C*           Recognition;                                       // 0x0188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTS_AJBReachToLocationByPath(int32 EntryPoint);
	void OnTrapAdded(class AActor* Trap);
	void OnExecutionFinish(class AAIController* OwnerController, class APawn* ControlledPawn, EBTNodeResult NodeResult);
	void OnExecutionStart(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTS_AJBReachToLocationByPath_C">();
	}
	static class UBTS_AJBReachToLocationByPath_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTS_AJBReachToLocationByPath_C>();
	}
};
static_assert(alignof(UBTS_AJBReachToLocationByPath_C) == 0x000008, "Wrong alignment on UBTS_AJBReachToLocationByPath_C");
static_assert(sizeof(UBTS_AJBReachToLocationByPath_C) == 0x000190, "Wrong size on UBTS_AJBReachToLocationByPath_C");
static_assert(offsetof(UBTS_AJBReachToLocationByPath_C, UberGraphFrame) == 0x000098, "Member 'UBTS_AJBReachToLocationByPath_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTS_AJBReachToLocationByPath_C, RO_InitialPathKey) == 0x0000A0, "Member 'UBTS_AJBReachToLocationByPath_C::RO_InitialPathKey' has a wrong offset!");
static_assert(offsetof(UBTS_AJBReachToLocationByPath_C, NextMovementPointKey) == 0x0000C8, "Member 'UBTS_AJBReachToLocationByPath_C::NextMovementPointKey' has a wrong offset!");
static_assert(offsetof(UBTS_AJBReachToLocationByPath_C, IfArrivedKey) == 0x0000F0, "Member 'UBTS_AJBReachToLocationByPath_C::IfArrivedKey' has a wrong offset!");
static_assert(offsetof(UBTS_AJBReachToLocationByPath_C, ArrivedDistanceXYThreshLastPoint) == 0x000118, "Member 'UBTS_AJBReachToLocationByPath_C::ArrivedDistanceXYThreshLastPoint' has a wrong offset!");
static_assert(offsetof(UBTS_AJBReachToLocationByPath_C, bInitialized) == 0x00011C, "Member 'UBTS_AJBReachToLocationByPath_C::bInitialized' has a wrong offset!");
static_assert(offsetof(UBTS_AJBReachToLocationByPath_C, PathController) == 0x000120, "Member 'UBTS_AJBReachToLocationByPath_C::PathController' has a wrong offset!");
static_assert(offsetof(UBTS_AJBReachToLocationByPath_C, RO_FinalDestinationKey) == 0x000128, "Member 'UBTS_AJBReachToLocationByPath_C::RO_FinalDestinationKey' has a wrong offset!");
static_assert(offsetof(UBTS_AJBReachToLocationByPath_C, IfServiceDoneKey) == 0x000150, "Member 'UBTS_AJBReachToLocationByPath_C::IfServiceDoneKey' has a wrong offset!");
static_assert(offsetof(UBTS_AJBReachToLocationByPath_C, AIController) == 0x000178, "Member 'UBTS_AJBReachToLocationByPath_C::AIController' has a wrong offset!");
static_assert(offsetof(UBTS_AJBReachToLocationByPath_C, FixLookAtLocker) == 0x000180, "Member 'UBTS_AJBReachToLocationByPath_C::FixLookAtLocker' has a wrong offset!");
static_assert(offsetof(UBTS_AJBReachToLocationByPath_C, Recognition) == 0x000188, "Member 'UBTS_AJBReachToLocationByPath_C::Recognition' has a wrong offset!");

}


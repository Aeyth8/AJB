#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameCharacter_DVL

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_AJBInGameCharacter_classes.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C
// 0x0040 (0x1670 - 0x1630)
class ABP_AJBInGameCharacter_DVL_C final : public ABP_AJBInGameCharacter_C
{
public:
	uint8                                         Pad_1621[0x7];                                     // 0x1621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBInGameCharacter_DVL_C;        // 0x1628(0x0008)(Transient, DuplicateTransient)
	class UArrowComponent*                        Arrow1;                                            // 0x1630(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BlockingBox;                                       // 0x1638(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBCrimsonDimensionSkill_C*         BP_AJBCrimsonDimensionSkill;                       // 0x1640(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBVanishingOfTimeSkill_C*          BP_AJBVanishingOfTimeSkill;                        // 0x1648(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBRushKCRSkill_C*                  BP_AJBRushKCRSkill;                                // 0x1650(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBAccompanyCRDSkill_C*             BP_AJBAccompanyCRDSkill;                           // 0x1658(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              InputValueForVOT;                                  // 0x1660(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ProfileNameDamageThrough;                          // 0x1668(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBInGameCharacter_DVL(int32 EntryPoint);
	void ROC_TryCancelVanishingOfTimeSkill();
	void OnBlocking(const struct FVector& BlockingLocation, bool Reflect, bool bIsPairAttack, bool bImpulseDamage, class AActor* DamageOwner, bool bSeparateStandAttack);
	void CheckBlockingComponent(class UPrimitiveComponent* Component, bool* bBlockingComponent);
	void CheckBlockingValid(class AActor* DamageActor, bool* bBlockingValid);
	void IgnoreGivePassive(class UPrimitiveComponent* Component, bool* bIgnore);
	void BlockPenetrate(class AActor* CauserActor, bool* bBlock);
	void GetDummyShotLocation(struct FVector* Location);
	void ShouldShowNGPoint(bool* bResult);
	void GetShutTraceRadius(float* Radius);
	void GetShotLocation(bool bConsiderCharacterCapsuleRadius, const struct FGameplayTag& SkillTag, TArray<struct FVector>* Locations);
	void CheckLocallyControlled(bool* bLocallyControlled);
	void PressedButton_ActiveBase();
	void PressedButton_Ultimate();
	void ReleasedButton_ActiveSpecial();
	void PressedButton_ActiveSpecial();
	void ReleasedButton_Basic();
	void PressedButton_Basic();
	void MoveRight(float Value);
	void MoveForward(float Value);
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void OnGainSupportSkillServer();
	void UserConstructionScript();
	void OnBeforeInteract(bool* bShouldInteract);
	void CheckPossibleDetection(bool* bPossibleDetection);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBInGameCharacter_DVL_C">();
	}
	static class ABP_AJBInGameCharacter_DVL_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBInGameCharacter_DVL_C>();
	}
};
static_assert(alignof(ABP_AJBInGameCharacter_DVL_C) == 0x000010, "Wrong alignment on ABP_AJBInGameCharacter_DVL_C");
static_assert(sizeof(ABP_AJBInGameCharacter_DVL_C) == 0x001670, "Wrong size on ABP_AJBInGameCharacter_DVL_C");
static_assert(offsetof(ABP_AJBInGameCharacter_DVL_C, UberGraphFrame_BP_AJBInGameCharacter_DVL_C) == 0x001628, "Member 'ABP_AJBInGameCharacter_DVL_C::UberGraphFrame_BP_AJBInGameCharacter_DVL_C' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_DVL_C, Arrow1) == 0x001630, "Member 'ABP_AJBInGameCharacter_DVL_C::Arrow1' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_DVL_C, BlockingBox) == 0x001638, "Member 'ABP_AJBInGameCharacter_DVL_C::BlockingBox' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_DVL_C, BP_AJBCrimsonDimensionSkill) == 0x001640, "Member 'ABP_AJBInGameCharacter_DVL_C::BP_AJBCrimsonDimensionSkill' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_DVL_C, BP_AJBVanishingOfTimeSkill) == 0x001648, "Member 'ABP_AJBInGameCharacter_DVL_C::BP_AJBVanishingOfTimeSkill' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_DVL_C, BP_AJBRushKCRSkill) == 0x001650, "Member 'ABP_AJBInGameCharacter_DVL_C::BP_AJBRushKCRSkill' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_DVL_C, BP_AJBAccompanyCRDSkill) == 0x001658, "Member 'ABP_AJBInGameCharacter_DVL_C::BP_AJBAccompanyCRDSkill' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_DVL_C, InputValueForVOT) == 0x001660, "Member 'ABP_AJBInGameCharacter_DVL_C::InputValueForVOT' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_DVL_C, ProfileNameDamageThrough) == 0x001668, "Member 'ABP_AJBInGameCharacter_DVL_C::ProfileNameDamageThrough' has a wrong offset!");

}


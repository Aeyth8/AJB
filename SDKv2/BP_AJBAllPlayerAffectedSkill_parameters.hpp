#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBAllPlayerAffectedSkill

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBAllPlayerAffectedSkill.BP_AJBAllPlayerAffectedSkill_C.ExecuteUbergraph_BP_AJBAllPlayerAffectedSkill
// 0x0014 (0x0014 - 0x0000)
struct BP_AJBAllPlayerAffectedSkill_C_ExecuteUbergraph_BP_AJBAllPlayerAffectedSkill final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckValidState_bValidState;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Value;                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBAllPlayerAffectedSkill_C_ExecuteUbergraph_BP_AJBAllPlayerAffectedSkill) == 0x000004, "Wrong alignment on BP_AJBAllPlayerAffectedSkill_C_ExecuteUbergraph_BP_AJBAllPlayerAffectedSkill");
static_assert(sizeof(BP_AJBAllPlayerAffectedSkill_C_ExecuteUbergraph_BP_AJBAllPlayerAffectedSkill) == 0x000014, "Wrong size on BP_AJBAllPlayerAffectedSkill_C_ExecuteUbergraph_BP_AJBAllPlayerAffectedSkill");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_ExecuteUbergraph_BP_AJBAllPlayerAffectedSkill, EntryPoint) == 0x000000, "Member 'BP_AJBAllPlayerAffectedSkill_C_ExecuteUbergraph_BP_AJBAllPlayerAffectedSkill::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_ExecuteUbergraph_BP_AJBAllPlayerAffectedSkill, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_AJBAllPlayerAffectedSkill_C_ExecuteUbergraph_BP_AJBAllPlayerAffectedSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_ExecuteUbergraph_BP_AJBAllPlayerAffectedSkill, CallFunc_CheckValidState_bValidState) == 0x000005, "Member 'BP_AJBAllPlayerAffectedSkill_C_ExecuteUbergraph_BP_AJBAllPlayerAffectedSkill::CallFunc_CheckValidState_bValidState' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_ExecuteUbergraph_BP_AJBAllPlayerAffectedSkill, K2Node_Event_Value) == 0x000008, "Member 'BP_AJBAllPlayerAffectedSkill_C_ExecuteUbergraph_BP_AJBAllPlayerAffectedSkill::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_ExecuteUbergraph_BP_AJBAllPlayerAffectedSkill, CallFunc_IsServer_ReturnValue) == 0x00000C, "Member 'BP_AJBAllPlayerAffectedSkill_C_ExecuteUbergraph_BP_AJBAllPlayerAffectedSkill::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_ExecuteUbergraph_BP_AJBAllPlayerAffectedSkill, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_AJBAllPlayerAffectedSkill_C_ExecuteUbergraph_BP_AJBAllPlayerAffectedSkill::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBAllPlayerAffectedSkill.BP_AJBAllPlayerAffectedSkill_C.GetSkillAffecterServer
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBAllPlayerAffectedSkill_C_GetSkillAffecterServer final
{
public:
	class UClass*                                 AffecterClass;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBSkillAffecterBase_C*             SkillAffecter_0;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBSkillAffecterBase_C*             TempSkillAffecter;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_AJBSkillAffecterBase_C*>     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_AJBSkillAffecterBase_C*             CallFunc_SpawnSkillAffecterCore_SkillAffecterBase; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBSkillAffecterBase_C*             CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBAllPlayerAffectedSkill_C_GetSkillAffecterServer) == 0x000008, "Wrong alignment on BP_AJBAllPlayerAffectedSkill_C_GetSkillAffecterServer");
static_assert(sizeof(BP_AJBAllPlayerAffectedSkill_C_GetSkillAffecterServer) == 0x000040, "Wrong size on BP_AJBAllPlayerAffectedSkill_C_GetSkillAffecterServer");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_GetSkillAffecterServer, AffecterClass) == 0x000000, "Member 'BP_AJBAllPlayerAffectedSkill_C_GetSkillAffecterServer::AffecterClass' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_GetSkillAffecterServer, SkillAffecter_0) == 0x000008, "Member 'BP_AJBAllPlayerAffectedSkill_C_GetSkillAffecterServer::SkillAffecter_0' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_GetSkillAffecterServer, TempSkillAffecter) == 0x000010, "Member 'BP_AJBAllPlayerAffectedSkill_C_GetSkillAffecterServer::TempSkillAffecter' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_GetSkillAffecterServer, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'BP_AJBAllPlayerAffectedSkill_C_GetSkillAffecterServer::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_GetSkillAffecterServer, CallFunc_SpawnSkillAffecterCore_SkillAffecterBase) == 0x000028, "Member 'BP_AJBAllPlayerAffectedSkill_C_GetSkillAffecterServer::CallFunc_SpawnSkillAffecterCore_SkillAffecterBase' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_GetSkillAffecterServer, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_AJBAllPlayerAffectedSkill_C_GetSkillAffecterServer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_GetSkillAffecterServer, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000038, "Member 'BP_AJBAllPlayerAffectedSkill_C_GetSkillAffecterServer::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_GetSkillAffecterServer, CallFunc_IsServer_ReturnValue) == 0x000039, "Member 'BP_AJBAllPlayerAffectedSkill_C_GetSkillAffecterServer::CallFunc_IsServer_ReturnValue' has a wrong offset!");

// Function BP_AJBAllPlayerAffectedSkill.BP_AJBAllPlayerAffectedSkill_C.CheckPossibleAction
// 0x0005 (0x0005 - 0x0000)
struct BP_AJBAllPlayerAffectedSkill_C_CheckPossibleAction final
{
public:
	bool                                          bPossibleAction;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckValidState_bValidState;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBAllPlayerAffectedSkill_C_CheckPossibleAction) == 0x000001, "Wrong alignment on BP_AJBAllPlayerAffectedSkill_C_CheckPossibleAction");
static_assert(sizeof(BP_AJBAllPlayerAffectedSkill_C_CheckPossibleAction) == 0x000005, "Wrong size on BP_AJBAllPlayerAffectedSkill_C_CheckPossibleAction");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_CheckPossibleAction, bPossibleAction) == 0x000000, "Member 'BP_AJBAllPlayerAffectedSkill_C_CheckPossibleAction::bPossibleAction' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_CheckPossibleAction, CallFunc_IsServer_ReturnValue) == 0x000001, "Member 'BP_AJBAllPlayerAffectedSkill_C_CheckPossibleAction::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_CheckPossibleAction, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_AJBAllPlayerAffectedSkill_C_CheckPossibleAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_CheckPossibleAction, CallFunc_CheckValidState_bValidState) == 0x000003, "Member 'BP_AJBAllPlayerAffectedSkill_C_CheckPossibleAction::CallFunc_CheckValidState_bValidState' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_CheckPossibleAction, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_AJBAllPlayerAffectedSkill_C_CheckPossibleAction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AJBAllPlayerAffectedSkill.BP_AJBAllPlayerAffectedSkill_C.SetSkillAffecterSettings
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBAllPlayerAffectedSkill_C_SetSkillAffecterSettings final
{
public:
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBAllPlayerAffectedSkill_C_SetSkillAffecterSettings) == 0x000008, "Wrong alignment on BP_AJBAllPlayerAffectedSkill_C_SetSkillAffecterSettings");
static_assert(sizeof(BP_AJBAllPlayerAffectedSkill_C_SetSkillAffecterSettings) == 0x000020, "Wrong size on BP_AJBAllPlayerAffectedSkill_C_SetSkillAffecterSettings");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_SetSkillAffecterSettings, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000000, "Member 'BP_AJBAllPlayerAffectedSkill_C_SetSkillAffecterSettings::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_SetSkillAffecterSettings, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBAllPlayerAffectedSkill_C_SetSkillAffecterSettings::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_SetSkillAffecterSettings, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBAllPlayerAffectedSkill_C_SetSkillAffecterSettings::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_SetSkillAffecterSettings, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBAllPlayerAffectedSkill_C_SetSkillAffecterSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_SetSkillAffecterSettings, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_AJBAllPlayerAffectedSkill_C_SetSkillAffecterSettings::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBAllPlayerAffectedSkill.BP_AJBAllPlayerAffectedSkill_C.SpawnSkillAffecterCore
// 0x0080 (0x0080 - 0x0000)
struct BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore final
{
public:
	class UClass*                                 AffecterClass;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBSkillAffecterBase_C*             SkillAffecterBase;                                 // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0xF];                                       // 0x0021(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBSkillAffecterBase_C*             CallFunc_FinishSpawningActor_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore) == 0x000010, "Wrong alignment on BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore");
static_assert(sizeof(BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore) == 0x000080, "Wrong size on BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore, AffecterClass) == 0x000000, "Member 'BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore::AffecterClass' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore, SkillAffecterBase) == 0x000008, "Member 'BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore::SkillAffecterBase' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000010, "Member 'BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore, CallFunc_GetObjectClass_ReturnValue) == 0x000060, "Member 'BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000068, "Member 'BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore, CallFunc_FinishSpawningActor_ReturnValue) == 0x000070, "Member 'BP_AJBAllPlayerAffectedSkill_C_SpawnSkillAffecterCore::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_AJBAllPlayerAffectedSkill.BP_AJBAllPlayerAffectedSkill_C.TimeExtension_Server
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBAllPlayerAffectedSkill_C_TimeExtension_Server final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBAllPlayerAffectedSkill_C_TimeExtension_Server) == 0x000004, "Wrong alignment on BP_AJBAllPlayerAffectedSkill_C_TimeExtension_Server");
static_assert(sizeof(BP_AJBAllPlayerAffectedSkill_C_TimeExtension_Server) == 0x000004, "Wrong size on BP_AJBAllPlayerAffectedSkill_C_TimeExtension_Server");
static_assert(offsetof(BP_AJBAllPlayerAffectedSkill_C_TimeExtension_Server, Value) == 0x000000, "Member 'BP_AJBAllPlayerAffectedSkill_C_TimeExtension_Server::Value' has a wrong offset!");

}


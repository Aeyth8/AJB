#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBCloseRangeSkill

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AJB_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ExecuteUbergraph_BP_AJBCloseRangeSkill
// 0x0FC0 (0x0FC0 - 0x0000)
struct BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLaunchedActorLocation_ActorLocation;   // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_DeltaSeconds;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bShouldRestore;                       // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue1;               // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue1;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue2;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_IsAlive;                          // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         K2Node_CustomEvent_RepeatCount3;                   // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bRedash3;                       // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_HitActor4;                      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation9;                   // 0x00A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal4;                     // 0x00AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CuttingRate4;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_CustomEvent_SurfaceType4;                   // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bDisableDamage4;                // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bInvincible4;                   // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsPenetration5;                // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bBlockedByAAP2;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bHeadShot2;                     // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPoliticDamage_Damage;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DamageDecal_CloseRange_C*           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x011C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_HitActor3;                      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation8;                   // 0x0138(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal3;                     // 0x0144(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CuttingRate3;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_CustomEvent_SurfaceType3;                   // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bDisableDamage3;                // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bInvincible3;                   // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_157[0x1];                                      // 0x0157(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_SerialNumber;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsPenetration4;                // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bBlockedByAAP1;                 // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bHeadShot1;                     // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x015F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetPoliticDamage_Damage1;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_HitActor2;                      // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation7;                   // 0x0170(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal2;                     // 0x017C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CuttingRate2;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_CustomEvent_SurfaceType2;                   // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bDisableDamage2;                // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bInvincible2;                   // 0x018E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsPenetration3;                // 0x018F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bBlockedByAAP;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bHeadShot;                      // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_192[0x6];                                      // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue3;           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A3[0x1];                                      // 0x01A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_DeltaSeconds1;                  // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaSeconds2;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaSeconds3;                  // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BackToCharacter_bReached;                 // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_DeltaSeconds4;                  // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_TargetDirection1;               // 0x01C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_TargetActor1;                   // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        K2Node_CustomEvent_TargetComponent1;               // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_RepeatCount2;                   // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bRedash2;                       // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E2[0x2];                                      // 0x01E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_TargetDirection;                // 0x01E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_TargetActor;                    // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        K2Node_CustomEvent_TargetComponent;                // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_RepeatCount1;                   // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bRedash1;                       // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue1;     // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_203[0x1];                                      // 0x0203(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_RepeatCount;                    // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bRedash;                        // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20A[0x2];                                      // 0x020A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetRepeatCount_Result;                    // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DashToTarget_bReached;                    // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         K2Node_Event_NextState;                            // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue2;               // 0x0216(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x0217(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface;              // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface1;             // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bCharacter;                   // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bLeftAP;                      // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_243[0x5];                                      // 0x0243(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_OwnHitParam_ParticleTagBlockedByAAP;      // 0x0248(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_OwnHitParam_SETagBlockedByAAP;            // 0x0250(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OwnHitParam_bCharacter1;                  // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bLeftAP1;                     // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A[0x6];                                      // 0x025A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_OwnHitParam_ParticleTagBlockedByAAP1;     // 0x0260(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_OwnHitParam_SETagBlockedByAAP1;           // 0x0268(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeakVoice_bWillBeSpoken;            // 0x0273(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeakVoice_bWillBeSpoken1;           // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum3_CmpSuccess;                     // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum4_CmpSuccess;                     // 0x0276(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_277[0x1];                                      // 0x0277(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBDamageActor_C*                   CallFunc_TryGetDamageActor_DamageActor;            // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSatisfiedMP_IsSatisfied;                // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue6;                 // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_282[0x6];                                      // 0x0282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_HitActor1;                      // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation6;                   // 0x0290(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal1;                     // 0x029C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CuttingRate1;                   // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_CustomEvent_SurfaceType1;                   // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bDisableDamage1;                // 0x02AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bInvincible1;                   // 0x02AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsPenetration2;                // 0x02AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeakVoice_bWillBeSpoken2;           // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x02B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue4;           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue2;    // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x02C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x02C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue5;           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue3;    // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D3[0x5];                                      // 0x02D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue6;           // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBDamageActor_C*                   CallFunc_TryGetDamageActor_DamageActor1;           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillActive_ReturnValue;                // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue7;           // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue4;    // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue8;                     // 0x02FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x02FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue5;                  // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue8;           // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue1;               // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue5;    // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1;         // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue9;                     // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_322[0x6];                                      // 0x0322(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue2;               // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue6;                  // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand2;         // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue7;                 // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue3;               // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand3;         // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue1;             // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_362[0x6];                                      // 0x0362(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBDamageActor_C*                   CallFunc_TryGetDamageActor_DamageActor2;           // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue4;               // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand4;         // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue10;                    // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_382[0x6];                                      // 0x0382(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface; // 0x0388(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue5;               // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand5;         // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBDamageActor_C*                   CallFunc_TryGetDamageActor_DamageActor3;           // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue11;                    // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCollisionEnable_bEnable;             // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C2[0x2];                                      // 0x03C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SetRepeatCount_Result1;                   // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetRepeatCount_Result2;                   // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x03E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x03E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E7[0x1];                                      // 0x03E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue6;               // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand6;         // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess11;                     // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue7;               // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Target1;                        // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser1;                  // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation5;                   // 0x0418(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand7;         // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess12;                     // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Target;                         // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation4;                   // 0x0448(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue8;               // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface2;             // 0x0460(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess13;                     // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand8;         // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess14;                     // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface1; // 0x0488(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess15;                     // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue12;                    // 0x0499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x049A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49B[0x5];                                      // 0x049B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue9;               // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand9;         // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess16;                     // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue2;             // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B2[0x6];                                      // 0x04B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface2; // 0x04B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess17;                     // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C9[0x3];                                      // 0x04C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLaunchedActorHomeLocation_Location;    // 0x04CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* Target, class AActor* DamageCauser, const struct FVector& HitLocation)> K2Node_CreateDelegate_OutputDelegate;              // 0x04D8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_DuringTheWorld_Result;                    // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue9;           // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue6;    // 0x04FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue13;                    // 0x04FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue7;                  // 0x04FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue3;             // 0x04FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue10;              // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand10;        // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess18;                     // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue4;             // 0x0511(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_512[0x6];                                      // 0x0512(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface3; // 0x0518(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess19;                     // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_529[0x3];                                      // 0x0529(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSkillState_bMatch;                   // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue8;                 // 0x0531(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_532[0x2];                                      // 0x0532(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue10;          // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue11;          // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess20;                     // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue7;    // 0x0551(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue14;                    // 0x0552(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_553[0x5];                                      // 0x0553(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue12;          // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue8;                  // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue8;    // 0x0561(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue15;                    // 0x0562(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue9;                  // 0x0563(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue16;                    // 0x0564(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue9;                 // 0x0565(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_566[0x2];                                      // 0x0566(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue13;          // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue3;               // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue9;    // 0x0571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue17;                    // 0x0572(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_573[0x5];                                      // 0x0573(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0578(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue10;                 // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DuringTheWorld_Result1;                   // 0x0589(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58A[0x6];                                      // 0x058A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue11;              // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand11;        // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess21;                     // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface4; // 0x05A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess22;                     // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DuringTheWorld_Result2;                   // 0x05B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DuringTheWorld_Result3;                   // 0x05BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BB[0x5];                                      // 0x05BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue14;          // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bHitCharacter;                  // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue10;   // 0x05C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue18;                    // 0x05CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5CB[0x5];                                      // 0x05CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue12;              // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue11;                 // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D9[0x7];                                      // 0x05D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand12;        // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess23;                     // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E9[0x3];                                      // 0x05E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GenerateSerialNumber_SerialNumber;        // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GenerateSerialNumber_SerialNumber1;       // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4[0x4];                                      // 0x05F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue13;              // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand13;        // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess24;                     // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_609[0x7];                                      // 0x0609(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue15;          // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface5; // 0x0618(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess25;                     // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue11;   // 0x0629(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62A[0x2];                                      // 0x062A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLaunchedActorHomeLocation_Location1;   // 0x062C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue19;                    // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue12;                 // 0x0639(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63A[0x2];                                      // 0x063A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetViewRotation_Rotation;                 // 0x063C(0x000C)(IsPlainOldData, NoDestructor)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue16;          // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum5_CmpSuccess;                     // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue12;   // 0x0651(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue20;                    // 0x0652(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Hit1;                           // 0x0653(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_CustomEvent_HitLocation3;                   // 0x0654(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue13;                 // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Hit;                            // 0x0661(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_662[0x2];                                      // 0x0662(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_HitLocation2;                   // 0x0664(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue17;          // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bCancel3;                       // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bRestore3;                      // 0x0679(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bCancel2;                       // 0x067A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bRestore2;                      // 0x067B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bCancel1;                       // 0x067C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bRestore1;                      // 0x067D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bCancel;                        // 0x067E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bRestore;                       // 0x067F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue18;          // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetCloseRangeLaunchedActor_LaunchedActor; // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue13;   // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_691[0x3];                                      // 0x0691(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0694(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue21;                    // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A1[0x3];                                      // 0x06A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x06A4(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue14;                 // 0x06B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B1[0x7];                                      // 0x06B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue19;          // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue14;   // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue3;                   // 0x06C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue22;                    // 0x06C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue15;                 // 0x06C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C4[0x4];                                      // 0x06C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue20;          // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue15;   // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue23;                    // 0x06D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue16;                 // 0x06D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D3[0x5];                                      // 0x06D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue21;          // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue22;          // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue16;   // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue17;   // 0x06E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue24;                    // 0x06EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue25;                    // 0x06EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue17;                 // 0x06EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue18;                 // 0x06ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x06EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess1;             // 0x06EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance1;    // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue1;             // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F9[0x7];                                      // 0x06F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0700(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestGion_AkComponent__LocalOnly_;      // 0x0708(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_; // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_711[0x7];                                      // 0x0711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue23;          // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue5;             // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue18;   // 0x0721(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue26;                    // 0x0722(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue19;                 // 0x0723(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_724[0x4];                                      // 0x0724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue24;          // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character3;     // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess26;                     // 0x0738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_739[0x7];                                      // 0x0739(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue25;          // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character4;     // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess27;                     // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_751[0x3];                                      // 0x0751(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetViewRotation_Rotation1;                // 0x0754(0x000C)(IsPlainOldData, NoDestructor)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue14;              // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue26;          // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand14;        // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess28;                     // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_779[0x7];                                      // 0x0779(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character5;     // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess29;                     // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_789[0x7];                                      // 0x0789(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface6; // 0x0790(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess30;                     // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess2;             // 0x07A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A2[0x6];                                      // 0x07A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance2;    // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue27;          // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue2;             // 0x07B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue19;   // 0x07B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue20;                 // 0x07BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue27;                    // 0x07BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue21;                 // 0x07BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7BD[0x3];                                      // 0x07BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue28;          // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character6;     // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess31;                     // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D1[0x7];                                      // 0x07D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x07D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue15;              // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x07F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand15;        // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess32;                     // 0x0808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_809[0x7];                                      // 0x0809(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0810(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface7; // 0x0820(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess33;                     // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_831[0x3];                                      // 0x0831(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLaunchedActorHomeLocation_Location2;   // 0x0834(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetCloseRangeLaunchedActor_LaunchedActor1; // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetCloseRangeLaunchedActor_LaunchedActor2; // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0850(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85C[0x4];                                      // 0x085C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0860(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0868(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0874(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x087C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x0880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0888(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x088C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue3;              // 0x0890(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0894(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue4;              // 0x08A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1;       // 0x08A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindTraceLocationsFromCamera_TraceStartLocation; // 0x08B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindTraceLocationsFromCamera_TraceEndLocation; // 0x08BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AJBMultiLineTrace_bTargetHit;             // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C9[0x7];                                      // 0x08C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_AJBMultiLineTrace_TargetActor;            // 0x08D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_AJBMultiLineTrace_TargetComponent;        // 0x08D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AJBMultiLineTrace_TargetLocation;         // 0x08E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8EC[0x4];                                      // 0x08EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue16;              // 0x08F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue17;              // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_901[0x7];                                      // 0x0901(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue1;         // 0x0908(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue28;                    // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue29;                    // 0x0911(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_912[0x6];                                      // 0x0912(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue18;              // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0920(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92C[0x4];                                      // 0x092C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand16;        // 0x0930(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess34;                     // 0x0938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_939[0x3];                                      // 0x0939(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x093C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0948(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0954(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue2;       // 0x0960(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96C[0x4];                                      // 0x096C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue19;              // 0x0970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand17;        // 0x0978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess35;                     // 0x0980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_981[0x7];                                      // 0x0981(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue20;              // 0x0988(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand18;        // 0x0990(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess36;                     // 0x0998(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_999[0x3];                                      // 0x0999(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue1; // 0x099C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x09A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B4[0x4];                                      // 0x09B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue21;              // 0x09B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue3;       // 0x09C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9CC[0x4];                                      // 0x09CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand19;        // 0x09D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess37;                     // 0x09D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D9[0x3];                                      // 0x09D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue1;                      // 0x09DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface8; // 0x09E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess38;                     // 0x09F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9F9[0x3];                                      // 0x09F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue4;       // 0x09FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* HitActor, const struct FVector& HitLocation, const struct FVector& HitNormal, EPhysicalSurface SurfaceType, bool bDisableDamage, bool bIsPenetration)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0A08(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1C[0x4];                                      // 0x0A1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue29;          // 0x0A20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue20;   // 0x0A28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue30;                    // 0x0A29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2A[0x6];                                      // 0x0A2A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue30;          // 0x0A30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue22;                 // 0x0A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A39[0x7];                                      // 0x0A39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character7;     // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess39;                     // 0x0A48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x0A49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A4A[0x6];                                      // 0x0A4A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* BlockedActor, const struct FVector& HitLocation, float CuttingRate, bool bInvincible, bool bIsPenetration)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0A50(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue5;       // 0x0A60(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue2;                      // 0x0A6C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue2;            // 0x0A78(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue1;          // 0x0A84(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue3;            // 0x0A90(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue2; // 0x0A9C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue2;          // 0x0AA8(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue4;            // 0x0AB4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue3; // 0x0AC0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue6;       // 0x0ACC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue5;            // 0x0AD8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue3;          // 0x0AE4(0x000C)(IsPlainOldData, NoDestructor)
	class ABP_AJBDamageActor_C*                   CallFunc_TryGetDamageActor_DamageActor4;           // 0x0AF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBDamageActor_C*                   CallFunc_TryGetDamageActor_DamageActor5;           // 0x0AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0B00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B04[0x4];                                      // 0x0B04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue22;              // 0x0B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand20;        // 0x0B10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess40;                     // 0x0B18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B19[0x7];                                      // 0x0B19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface9; // 0x0B20(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess41;                     // 0x0B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B31[0x7];                                      // 0x0B31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCloseRangeLaunchedActor_LaunchedActor3; // 0x0B38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_CloseRangeLaunchedActorInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launched_Actor_Interface; // 0x0B40(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess42;                     // 0x0B50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B51[0x7];                                      // 0x0B51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue31;          // 0x0B58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue21;   // 0x0B60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue31;                    // 0x0B61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue23;                 // 0x0B62(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue2;           // 0x0B63(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B64[0x4];                                      // 0x0B64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item;                           // 0x0B68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue32;                    // 0x0B70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B71[0x3];                                      // 0x0B71(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0B74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0B78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B79[0x7];                                      // 0x0B79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue32;          // 0x0B80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character8;     // 0x0B88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess43;                     // 0x0B90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOperatingSeparatedStand_ReturnValue;    // 0x0B91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B92[0x6];                                      // 0x0B92(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue33;          // 0x0B98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue3;           // 0x0BA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue22;   // 0x0BA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue33;                    // 0x0BA2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA3[0x1];                                      // 0x0BA3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0BA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue24;                 // 0x0BA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA9[0x7];                                      // 0x0BA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCloseRangeLaunchedActor_LaunchedActor4; // 0x0BB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_CloseRangeLaunchedActorInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launched_Actor_Interface1; // 0x0BB8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess44;                     // 0x0BC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess3;             // 0x0BC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BCA[0x6];                                      // 0x0BCA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance3;    // 0x0BD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess4;             // 0x0BD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD9[0x7];                                      // 0x0BD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance4;    // 0x0BE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue3;             // 0x0BE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue4;             // 0x0BE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue10;                // 0x0BEA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BEB[0x1];                                      // 0x0BEB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable1;                              // 0x0BEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetCloseRangeLaunchedActor_LaunchedActor5; // 0x0BF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_CloseRangeLaunchedActorInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launched_Actor_Interface2; // 0x0BF8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess45;                     // 0x0C08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C09[0x7];                                      // 0x0C09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue34;          // 0x0C10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetDashParticleTag_DashParticleTag;       // 0x0C18(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue23;   // 0x0C20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C21[0x7];                                      // 0x0C21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect; // 0x0C28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0C30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue25;                 // 0x0C31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue34;                    // 0x0C32(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue26;                 // 0x0C33(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C34[0x4];                                      // 0x0C34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetDashParticleTag_DashParticleTag1;      // 0x0C38(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue1;          // 0x0C40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C41[0x7];                                      // 0x0C41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0C48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue4;                   // 0x0C50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C51[0x7];                                      // 0x0C51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0C58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName1;                    // 0x0C60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate3;             // 0x0C68(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_AJBDamageActor_C*                   CallFunc_TryGetDamageActor_DamageActor6;           // 0x0C78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBDamageActor_C*                   CallFunc_TryGetDamageActor_DamageActor7;           // 0x0C80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* HitActor, const struct FVector& HitLocation, const struct FVector& HitNormal, EPhysicalSurface SurfaceType, bool bDisableDamage, bool bIsPenetration)> K2Node_CreateDelegate_OutputDelegate4;             // 0x0C88(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* BlockedActor, const struct FVector& HitLocation, float CuttingRate, bool bInvincible, bool bIsPenetration)> K2Node_CreateDelegate_OutputDelegate5;             // 0x0C98(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_HitActor;                       // 0x0CA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation1;                   // 0x0CB0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal;                      // 0x0CBC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_CustomEvent_SurfaceType;                    // 0x0CC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bDisableDamage;                 // 0x0CC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsPenetration1;                // 0x0CCA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CCB[0x5];                                      // 0x0CCB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_BlockedActor;                   // 0x0CD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HItLocation;                    // 0x0CD8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CuttingRate;                    // 0x0CE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInvincible;                    // 0x0CE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsPenetration;                 // 0x0CE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CEA[0x6];                                      // 0x0CEA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName2;                    // 0x0CF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate6;             // 0x0CF8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName3;                    // 0x0D08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate7;             // 0x0D10(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName4;                    // 0x0D20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate8;             // 0x0D28(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_AJBDamageActor_C*                   CallFunc_TryGetDamageActor_DamageActor8;           // 0x0D38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate9;             // 0x0D40(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_CheckHeadShot_bHeadShot;                  // 0x0D50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D51[0x7];                                      // 0x0D51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBDamageActor_C*                   CallFunc_TryGetDamageActor_DamageActor9;           // 0x0D58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue27;                 // 0x0D60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D61[0x7];                                      // 0x0D61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable1;                               // 0x0D68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPoliticDamage_Damage2;                 // 0x0D70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPoliticDamage_Damage3;                 // 0x0D74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcAAPInfo_bDamageCutByAAP;              // 0x0D78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcAAPInfo_bDamageBlockByAAP;            // 0x0D79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D7A[0x6];                                      // 0x0D7A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName5;                    // 0x0D80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName6;                    // 0x0D88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate10;            // 0x0D90(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                K2Node_CustomEvent_Location3;                      // 0x0DA0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Normal3;                        // 0x0DAC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bCharacter3;                    // 0x0DB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB9[0x7];                                      // 0x0DB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate11;            // 0x0DC0(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                K2Node_CustomEvent_Location2;                      // 0x0DD0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Normal2;                        // 0x0DDC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bCharacter2;                    // 0x0DE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE9[0x7];                                      // 0x0DE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCloseRangeLaunchedActor_LaunchedActor6; // 0x0DF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue35;          // 0x0DF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character9;     // 0x0E00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess46;                     // 0x0E08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E09[0x3];                                      // 0x0E09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0E0C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue7;       // 0x0E18(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E24[0x4];                                      // 0x0E24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameMovableStand_C*            K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand;  // 0x0E28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess47;                     // 0x0E30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E31[0x3];                                      // 0x0E31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue1;                       // 0x0E34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsForwardTransition_ReturnValue;          // 0x0E38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E39[0x3];                                      // 0x0E39(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0E3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue28;                 // 0x0E40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E41[0x3];                                      // 0x0E41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0E44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue29;                 // 0x0E48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E49[0x3];                                      // 0x0E49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue1;             // 0x0E4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue2;          // 0x0E50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E51[0x7];                                      // 0x0E51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName7;                    // 0x0E58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate12;            // 0x0E60(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName8;                    // 0x0E70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue3;          // 0x0E78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue5;                   // 0x0E79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E7A[0x6];                                      // 0x0E7A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate13;            // 0x0E80(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName9;                    // 0x0E90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate14;            // 0x0E98(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                K2Node_CustomEvent_Location1;                      // 0x0EA8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Normal1;                        // 0x0EB4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bCharacter1;                    // 0x0EC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0EC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EC2[0x6];                                      // 0x0EC2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBDamageActor_C*                   CallFunc_TryGetDamageActor_DamageActor10;          // 0x0EC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x0ED0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue3;         // 0x0ED4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0EE0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Normal;                         // 0x0EEC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bCharacter;                     // 0x0EF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EF9[0x3];                                      // 0x0EF9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0EFC(0x000C)(IsPlainOldData, NoDestructor)
	TDelegate<void(const struct FVector& Location, const struct FVector& Normal, bool bCharacter)> K2Node_CreateDelegate_OutputDelegate15;            // 0x0F08(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0F18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1C[0x4];                                      // 0x0F1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue23;              // 0x0F20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0F28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2C[0x4];                                      // 0x0F2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand21;        // 0x0F30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess48;                     // 0x0F38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F39[0x3];                                      // 0x0F39(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0F3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface10; // 0x0F40(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess49;                     // 0x0F50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F51[0x7];                                      // 0x0F51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item1;                          // 0x0F58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetCloseRangeLaunchedActor_LaunchedActor7; // 0x0F60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0F68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue35;                    // 0x0F70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F71[0x7];                                      // 0x0F71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBInGameMovementComponent*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0F78(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue1;             // 0x0F80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0F81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F82[0x2];                                      // 0x0F82(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x0F84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue1;              // 0x0F88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F8C[0x4];                                      // 0x0F8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select2_Default;                            // 0x0F90(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectOnLocal_ParticleEffect; // 0x0F98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_Array_Get_Item2;                          // 0x0FA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue4;          // 0x0FA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA9[0x7];                                      // 0x0FA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue1; // 0x0FB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue36;                    // 0x0FB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill) == 0x000010, "Wrong alignment on BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill) == 0x000FC0, "Wrong size on BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, EntryPoint) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetValidValue_ReturnValue) == 0x000008, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000009, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_SwitchEnum_CmpSuccess) == 0x00000A, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetLaunchedActorLocation_ActorLocation) == 0x00000C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetLaunchedActorLocation_ActorLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue) == 0x000018, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000020, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetActorForwardVector_ReturnValue) == 0x00002C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_DeltaSeconds) == 0x00003C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanOR_ReturnValue) == 0x000040, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Not_PreBool_ReturnValue) == 0x000041, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000048, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000050, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess1) == 0x000058, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_Event_bShouldRestore) == 0x000059, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_Event_bShouldRestore' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetValidValue_ReturnValue1) == 0x00005A, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetValidValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_SwitchEnum1_CmpSuccess) == 0x00005B, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue1) == 0x000060, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetAJBGameInstance_bSuccess) == 0x000068, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000070, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue) == 0x000078, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsPlayingReplay_ReturnValue) == 0x000079, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue1) == 0x00007A, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue) == 0x00007B, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue2) == 0x000080, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000088, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess2) == 0x000090, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsAlive_IsAlive) == 0x000091, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsAlive_IsAlive' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_RepeatCount3) == 0x000092, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_RepeatCount3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bRedash3) == 0x000093, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bRedash3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_HitActor4) == 0x000098, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_HitActor4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_HitLocation9) == 0x0000A0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_HitLocation9' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_HitNormal4) == 0x0000AC, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_HitNormal4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_CuttingRate4) == 0x0000B8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_CuttingRate4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_SurfaceType4) == 0x0000BC, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_SurfaceType4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bDisableDamage4) == 0x0000BD, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bDisableDamage4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bInvincible4) == 0x0000BE, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bInvincible4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bIsPenetration5) == 0x0000BF, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bIsPenetration5' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bBlockedByAAP2) == 0x0000C0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bBlockedByAAP2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bHeadShot2) == 0x0000C1, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bHeadShot2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetPoliticDamage_Damage) == 0x0000C4, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetPoliticDamage_Damage' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Not_PreBool_ReturnValue1) == 0x0000C8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0000C9, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanOR_ReturnValue1) == 0x0000CA, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Not_PreBool_ReturnValue2) == 0x000100, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000108, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_FinishSpawningActor_ReturnValue) == 0x000110, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000118, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Not_PreBool_ReturnValue3) == 0x000119, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00011C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000128, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_HitActor3) == 0x000130, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_HitActor3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_HitLocation8) == 0x000138, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_HitLocation8' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_HitNormal3) == 0x000144, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_HitNormal3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_CuttingRate3) == 0x000150, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_CuttingRate3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_SurfaceType3) == 0x000154, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_SurfaceType3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bDisableDamage3) == 0x000155, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bDisableDamage3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bInvincible3) == 0x000156, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bInvincible3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_SerialNumber) == 0x000158, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bIsPenetration4) == 0x00015C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bIsPenetration4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bBlockedByAAP1) == 0x00015D, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bBlockedByAAP1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bHeadShot1) == 0x00015E, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bHeadShot1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanOR_ReturnValue2) == 0x00015F, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetPoliticDamage_Damage1) == 0x000160, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetPoliticDamage_Damage1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Not_PreBool_ReturnValue4) == 0x000164, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_HitActor2) == 0x000168, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_HitActor2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_HitLocation7) == 0x000170, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_HitLocation7' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_HitNormal2) == 0x00017C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_HitNormal2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_CuttingRate2) == 0x000188, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_CuttingRate2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_SurfaceType2) == 0x00018C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_SurfaceType2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bDisableDamage2) == 0x00018D, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bDisableDamage2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bInvincible2) == 0x00018E, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bInvincible2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bIsPenetration3) == 0x00018F, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bIsPenetration3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bBlockedByAAP) == 0x000190, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bHeadShot) == 0x000191, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue3) == 0x000198, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue1) == 0x0001A0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue2) == 0x0001A1, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue1) == 0x0001A2, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_DeltaSeconds1) == 0x0001A4, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_DeltaSeconds1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_DeltaSeconds2) == 0x0001A8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_DeltaSeconds2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_DeltaSeconds3) == 0x0001AC, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_DeltaSeconds3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001B0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BackToCharacter_bReached) == 0x0001B4, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BackToCharacter_bReached' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_DeltaSeconds4) == 0x0001B8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_DeltaSeconds4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Add_FloatFloat_ReturnValue1) == 0x0001BC, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_TargetDirection1) == 0x0001C0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_TargetDirection1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_TargetActor1) == 0x0001D0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_TargetActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_TargetComponent1) == 0x0001D8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_TargetComponent1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_RepeatCount2) == 0x0001E0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_RepeatCount2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bRedash2) == 0x0001E1, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bRedash2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_TargetDirection) == 0x0001E4, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_TargetDirection' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_TargetActor) == 0x0001F0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_TargetComponent) == 0x0001F8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_TargetComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_RepeatCount1) == 0x000200, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_RepeatCount1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bRedash1) == 0x000201, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bRedash1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GreaterEqual_FloatFloat_ReturnValue1) == 0x000202, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GreaterEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_FClamp_ReturnValue) == 0x000204, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_RepeatCount) == 0x000208, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_RepeatCount' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bRedash) == 0x000209, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bRedash' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00020C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_SetRepeatCount_Result) == 0x000210, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_SetRepeatCount_Result' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_DashToTarget_bReached) == 0x000214, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_DashToTarget_bReached' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_Event_NextState) == 0x000215, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_Event_NextState' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetValidValue_ReturnValue2) == 0x000216, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetValidValue_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_SwitchEnum2_CmpSuccess) == 0x000217, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBI_AJBInterface) == 0x000218, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBI_AJBInterface' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess3) == 0x000228, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBI_AJBInterface1) == 0x000230, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBI_AJBInterface1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess4) == 0x000240, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_OwnHitParam_bCharacter) == 0x000241, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_OwnHitParam_bCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_OwnHitParam_bLeftAP) == 0x000242, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_OwnHitParam_bLeftAP' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_OwnHitParam_ParticleTagBlockedByAAP) == 0x000248, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_OwnHitParam_ParticleTagBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_OwnHitParam_SETagBlockedByAAP) == 0x000250, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_OwnHitParam_SETagBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_OwnHitParam_bCharacter1) == 0x000258, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_OwnHitParam_bCharacter1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_OwnHitParam_bLeftAP1) == 0x000259, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_OwnHitParam_bLeftAP1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_OwnHitParam_ParticleTagBlockedByAAP1) == 0x000260, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_OwnHitParam_ParticleTagBlockedByAAP1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_OwnHitParam_SETagBlockedByAAP1) == 0x000268, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_OwnHitParam_SETagBlockedByAAP1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Not_PreBool_ReturnValue5) == 0x000270, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue3) == 0x000271, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue4) == 0x000272, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_TryToSpeakVoice_bWillBeSpoken) == 0x000273, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_TryToSpeakVoice_bWillBeSpoken' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_TryToSpeakVoice_bWillBeSpoken1) == 0x000274, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_TryToSpeakVoice_bWillBeSpoken1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_SwitchEnum3_CmpSuccess) == 0x000275, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_SwitchEnum3_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_SwitchEnum4_CmpSuccess) == 0x000276, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_SwitchEnum4_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_TryGetDamageActor_DamageActor) == 0x000278, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_TryGetDamageActor_DamageActor' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsSatisfiedMP_IsSatisfied) == 0x000280, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsSatisfiedMP_IsSatisfied' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Not_PreBool_ReturnValue6) == 0x000281, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Not_PreBool_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_HitActor1) == 0x000288, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_HitActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_HitLocation6) == 0x000290, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_HitLocation6' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_HitNormal1) == 0x00029C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_HitNormal1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_CuttingRate1) == 0x0002A8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_CuttingRate1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_SurfaceType1) == 0x0002AC, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_SurfaceType1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bDisableDamage1) == 0x0002AD, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bDisableDamage1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bInvincible1) == 0x0002AE, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bInvincible1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bIsPenetration2) == 0x0002AF, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bIsPenetration2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_TryToSpeakVoice_bWillBeSpoken2) == 0x0002B0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_TryToSpeakVoice_bWillBeSpoken2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002B1, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0002B2, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x0002B3, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue4) == 0x0002B8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue2) == 0x0002C0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue5) == 0x0002C1, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue2) == 0x0002C2, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_Event_EndPlayReason) == 0x0002C3, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue6) == 0x0002C4, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue5) == 0x0002C8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue3) == 0x0002D0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue7) == 0x0002D1, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue3) == 0x0002D2, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue6) == 0x0002D8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_TryGetDamageActor_DamageActor1) == 0x0002E0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_TryGetDamageActor_DamageActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsSkillActive_ReturnValue) == 0x0002E8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsSkillActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue7) == 0x0002F0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue4) == 0x0002F8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue4) == 0x0002F9, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue8) == 0x0002FA, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_MakeLiteralByte_ReturnValue) == 0x0002FB, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue5) == 0x0002FC, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue8) == 0x000300, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue1) == 0x000308, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue5) == 0x000310, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1) == 0x000318, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess5) == 0x000320, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue9) == 0x000321, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue2) == 0x000328, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue6) == 0x000330, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand2) == 0x000338, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess6) == 0x000340, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_Event_DeltaSeconds) == 0x000344, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Not_PreBool_ReturnValue7) == 0x000348, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Not_PreBool_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue3) == 0x000350, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand3) == 0x000358, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess7) == 0x000360, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_MakeLiteralByte_ReturnValue1) == 0x000361, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_MakeLiteralByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_TryGetDamageActor_DamageActor2) == 0x000368, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_TryGetDamageActor_DamageActor2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue4) == 0x000370, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand4) == 0x000378, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess8) == 0x000380, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue10) == 0x000381, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface) == 0x000388, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess9) == 0x000398, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue5) == 0x0003A0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand5) == 0x0003A8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand5' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess10) == 0x0003B0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_TryGetDamageActor_DamageActor3) == 0x0003B8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_TryGetDamageActor_DamageActor3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue11) == 0x0003C0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_CheckCollisionEnable_bEnable) == 0x0003C1, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_CheckCollisionEnable_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_SetRepeatCount_Result1) == 0x0003C4, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_SetRepeatCount_Result1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Add_IntInt_ReturnValue) == 0x0003C8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_SetRepeatCount_Result2) == 0x0003CC, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_SetRepeatCount_Result2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Conv_IntToByte_ReturnValue) == 0x0003D0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_Event_Operator) == 0x0003D8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_Event_Time) == 0x0003E0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_Event_Timing) == 0x0003E4, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_Event_bEnable) == 0x0003E5, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_Event_bOperatorIsEmpty) == 0x0003E6, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue6) == 0x0003E8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand6) == 0x0003F0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand6' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess11) == 0x0003F8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess11' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue7) == 0x000400, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_Target1) == 0x000408, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_Target1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_DamageCauser1) == 0x000410, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_DamageCauser1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_HitLocation5) == 0x000418, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_HitLocation5' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand7) == 0x000428, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand7' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess12) == 0x000430, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess12' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_Target) == 0x000438, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_DamageCauser) == 0x000440, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_HitLocation4) == 0x000448, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_HitLocation4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue8) == 0x000458, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBI_AJBInterface2) == 0x000460, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBI_AJBInterface2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess13) == 0x000470, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess13' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand8) == 0x000478, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand8' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess14) == 0x000480, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess14' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface1) == 0x000488, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess15) == 0x000498, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess15' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue12) == 0x000499, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsDedicatedServer_ReturnValue) == 0x00049A, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue9) == 0x0004A0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand9) == 0x0004A8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand9' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess16) == 0x0004B0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess16' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_MakeLiteralByte_ReturnValue2) == 0x0004B1, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_MakeLiteralByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface2) == 0x0004B8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess17) == 0x0004C8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess17' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetLaunchedActorHomeLocation_Location) == 0x0004CC, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetLaunchedActorHomeLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CreateDelegate_OutputDelegate) == 0x0004D8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_DuringTheWorld_Result) == 0x0004E8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_DuringTheWorld_Result' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue9) == 0x0004F0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, Temp_int_Array_Index_Variable) == 0x0004F8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue6) == 0x0004FC, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue13) == 0x0004FD, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue7) == 0x0004FE, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_MakeLiteralByte_ReturnValue3) == 0x0004FF, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_MakeLiteralByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue10) == 0x000500, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand10) == 0x000508, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand10' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess18) == 0x000510, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess18' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_MakeLiteralByte_ReturnValue4) == 0x000511, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_MakeLiteralByte_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface3) == 0x000518, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess19) == 0x000528, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess19' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, Temp_int_Loop_Counter_Variable) == 0x00052C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_CheckSkillState_bMatch) == 0x000530, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_CheckSkillState_bMatch' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Not_PreBool_ReturnValue8) == 0x000531, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Not_PreBool_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Add_IntInt_ReturnValue1) == 0x000534, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue10) == 0x000538, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue11) == 0x000540, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x000548, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess20) == 0x000550, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess20' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue7) == 0x000551, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue14) == 0x000552, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue12) == 0x000558, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue8) == 0x000560, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue8) == 0x000561, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue15) == 0x000562, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue9) == 0x000563, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue16) == 0x000564, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Not_PreBool_ReturnValue9) == 0x000565, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Not_PreBool_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue13) == 0x000568, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetValidValue_ReturnValue3) == 0x000570, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetValidValue_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue9) == 0x000571, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue17) == 0x000572, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000578, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue10) == 0x000588, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_DuringTheWorld_Result1) == 0x000589, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_DuringTheWorld_Result1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue11) == 0x000590, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand11) == 0x000598, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand11' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess21) == 0x0005A0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess21' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface4) == 0x0005A8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess22) == 0x0005B8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess22' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_DuringTheWorld_Result2) == 0x0005B9, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_DuringTheWorld_Result2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_DuringTheWorld_Result3) == 0x0005BA, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_DuringTheWorld_Result3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue14) == 0x0005C0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bHitCharacter) == 0x0005C8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bHitCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue10) == 0x0005C9, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue18) == 0x0005CA, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue12) == 0x0005D0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue11) == 0x0005D8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand12) == 0x0005E0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand12' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess23) == 0x0005E8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess23' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GenerateSerialNumber_SerialNumber) == 0x0005EC, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GenerateSerialNumber_SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GenerateSerialNumber_SerialNumber1) == 0x0005F0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GenerateSerialNumber_SerialNumber1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue13) == 0x0005F8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand13) == 0x000600, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand13' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess24) == 0x000608, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess24' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue15) == 0x000610, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface5) == 0x000618, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface5' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess25) == 0x000628, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess25' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue11) == 0x000629, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetLaunchedActorHomeLocation_Location1) == 0x00062C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetLaunchedActorHomeLocation_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue19) == 0x000638, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue12) == 0x000639, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetViewRotation_Rotation) == 0x00063C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetViewRotation_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue16) == 0x000648, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_SwitchEnum5_CmpSuccess) == 0x000650, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_SwitchEnum5_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue12) == 0x000651, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue20) == 0x000652, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue20' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_Hit1) == 0x000653, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_Hit1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_HitLocation3) == 0x000654, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_HitLocation3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue13) == 0x000660, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_Hit) == 0x000661, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_HitLocation2) == 0x000664, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_HitLocation2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue17) == 0x000670, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bCancel3) == 0x000678, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bCancel3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bRestore3) == 0x000679, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bRestore3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bCancel2) == 0x00067A, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bCancel2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bRestore2) == 0x00067B, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bRestore2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bCancel1) == 0x00067C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bCancel1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bRestore1) == 0x00067D, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bRestore1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bCancel) == 0x00067E, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bCancel' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bRestore) == 0x00067F, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bRestore' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue18) == 0x000680, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetCloseRangeLaunchedActor_LaunchedActor) == 0x000688, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetCloseRangeLaunchedActor_LaunchedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue13) == 0x000690, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000694, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue21) == 0x0006A0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue21' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_FindLookAtRotation_ReturnValue) == 0x0006A4, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue14) == 0x0006B0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue19) == 0x0006B8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue14) == 0x0006C0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanOR_ReturnValue3) == 0x0006C1, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanOR_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue22) == 0x0006C2, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue22' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue15) == 0x0006C3, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue20) == 0x0006C8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue20' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue15) == 0x0006D0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue23) == 0x0006D1, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue23' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue16) == 0x0006D2, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue21) == 0x0006D8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue21' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue22) == 0x0006E0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue22' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue16) == 0x0006E8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue17) == 0x0006E9, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue24) == 0x0006EA, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue24' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue25) == 0x0006EB, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue25' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue17) == 0x0006EC, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue18) == 0x0006ED, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, Temp_bool_Variable) == 0x0006EE, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetAJBGameInstance_bSuccess1) == 0x0006EF, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetAJBGameInstance_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetAJBGameInstance_AJB_Game_Instance1) == 0x0006F0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetAJBGameInstance_AJB_Game_Instance1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsPlayingReplay_ReturnValue1) == 0x0006F8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsPlayingReplay_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_Select_Default) == 0x000700, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_RequestGion_AkComponent__LocalOnly_) == 0x000708, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_RequestGion_AkComponent__LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_) == 0x000710, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue23) == 0x000718, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue23' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_MakeLiteralByte_ReturnValue5) == 0x000720, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_MakeLiteralByte_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue18) == 0x000721, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue26) == 0x000722, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue26' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue19) == 0x000723, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue24) == 0x000728, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue24' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character3) == 0x000730, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess26) == 0x000738, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess26' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue25) == 0x000740, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue25' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character4) == 0x000748, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess27) == 0x000750, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess27' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetViewRotation_Rotation1) == 0x000754, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetViewRotation_Rotation1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue14) == 0x000760, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue26) == 0x000768, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue26' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand14) == 0x000770, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand14' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess28) == 0x000778, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess28' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character5) == 0x000780, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character5' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess29) == 0x000788, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess29' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface6) == 0x000790, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface6' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess30) == 0x0007A0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess30' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetAJBGameInstance_bSuccess2) == 0x0007A1, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetAJBGameInstance_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetAJBGameInstance_AJB_Game_Instance2) == 0x0007A8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetAJBGameInstance_AJB_Game_Instance2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue27) == 0x0007B0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue27' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsPlayingReplay_ReturnValue2) == 0x0007B8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsPlayingReplay_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue19) == 0x0007B9, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue20) == 0x0007BA, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue20' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue27) == 0x0007BB, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue27' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue21) == 0x0007BC, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue21' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue28) == 0x0007C0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue28' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character6) == 0x0007C8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character6' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess31) == 0x0007D0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess31' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetDisplayName_ReturnValue) == 0x0007D8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue15) == 0x0007E8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Concat_StrStr_ReturnValue) == 0x0007F0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand15) == 0x000800, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand15' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess32) == 0x000808, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess32' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Concat_StrStr_ReturnValue1) == 0x000810, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface7) == 0x000820, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface7' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess33) == 0x000830, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess33' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetLaunchedActorHomeLocation_Location2) == 0x000834, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetLaunchedActorHomeLocation_Location2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetCloseRangeLaunchedActor_LaunchedActor1) == 0x000840, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetCloseRangeLaunchedActor_LaunchedActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetCloseRangeLaunchedActor_LaunchedActor2) == 0x000848, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetCloseRangeLaunchedActor_LaunchedActor2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000850, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000860, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Normal_ReturnValue) == 0x000868, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BreakVector_X) == 0x000874, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BreakVector_Y) == 0x000878, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BreakVector_Z) == 0x00087C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BreakVector_X1) == 0x000880, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BreakVector_Y1) == 0x000884, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BreakVector_Z1) == 0x000888, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Add_FloatFloat_ReturnValue2) == 0x00088C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Add_FloatFloat_ReturnValue3) == 0x000890, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Add_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000894, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Add_FloatFloat_ReturnValue4) == 0x0008A0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Add_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Subtract_VectorVector_ReturnValue1) == 0x0008A4, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Subtract_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_FindTraceLocationsFromCamera_TraceStartLocation) == 0x0008B0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_FindTraceLocationsFromCamera_TraceStartLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_FindTraceLocationsFromCamera_TraceEndLocation) == 0x0008BC, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_FindTraceLocationsFromCamera_TraceEndLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_AJBMultiLineTrace_bTargetHit) == 0x0008C8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_AJBMultiLineTrace_bTargetHit' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_AJBMultiLineTrace_TargetActor) == 0x0008D0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_AJBMultiLineTrace_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_AJBMultiLineTrace_TargetComponent) == 0x0008D8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_AJBMultiLineTrace_TargetComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_AJBMultiLineTrace_TargetLocation) == 0x0008E0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_AJBMultiLineTrace_TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue16) == 0x0008F0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue17) == 0x0008F8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000900, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_K2_GetRootComponent_ReturnValue1) == 0x000908, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_K2_GetRootComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue28) == 0x000910, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue28' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue29) == 0x000911, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue29' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue18) == 0x000918, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_MakeVector_ReturnValue) == 0x000920, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand16) == 0x000930, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand16' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess34) == 0x000938, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess34' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Add_VectorVector_ReturnValue) == 0x00093C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000948, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000954, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Subtract_VectorVector_ReturnValue2) == 0x000960, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Subtract_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue19) == 0x000970, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand17) == 0x000978, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand17' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess35) == 0x000980, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess35' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue20) == 0x000988, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue20' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand18) == 0x000990, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand18' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess36) == 0x000998, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess36' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GreaterGreater_VectorRotator_ReturnValue1) == 0x00099C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GreaterGreater_VectorRotator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Add_VectorVector_ReturnValue1) == 0x0009A8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue21) == 0x0009B8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue21' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Subtract_VectorVector_ReturnValue3) == 0x0009C0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Subtract_VectorVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand19) == 0x0009D0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand19' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess37) == 0x0009D8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess37' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Normal_ReturnValue1) == 0x0009DC, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Normal_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface8) == 0x0009E8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface8' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess38) == 0x0009F8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess38' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Subtract_VectorVector_ReturnValue4) == 0x0009FC, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Subtract_VectorVector_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CreateDelegate_OutputDelegate1) == 0x000A08, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_VSize_ReturnValue) == 0x000A18, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue29) == 0x000A20, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue29' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue20) == 0x000A28, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue20' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue30) == 0x000A29, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue30' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue30) == 0x000A30, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue30' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue22) == 0x000A38, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue22' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character7) == 0x000A40, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character7' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess39) == 0x000A48, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess39' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsDedicatedServer_ReturnValue1) == 0x000A49, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CreateDelegate_OutputDelegate2) == 0x000A50, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Subtract_VectorVector_ReturnValue5) == 0x000A60, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Subtract_VectorVector_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Normal_ReturnValue2) == 0x000A6C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Normal_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Add_VectorVector_ReturnValue2) == 0x000A78, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Add_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_FindLookAtRotation_ReturnValue1) == 0x000A84, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_FindLookAtRotation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Add_VectorVector_ReturnValue3) == 0x000A90, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Add_VectorVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GreaterGreater_VectorRotator_ReturnValue2) == 0x000A9C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GreaterGreater_VectorRotator_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_FindLookAtRotation_ReturnValue2) == 0x000AA8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_FindLookAtRotation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Add_VectorVector_ReturnValue4) == 0x000AB4, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Add_VectorVector_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GreaterGreater_VectorRotator_ReturnValue3) == 0x000AC0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GreaterGreater_VectorRotator_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Subtract_VectorVector_ReturnValue6) == 0x000ACC, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Subtract_VectorVector_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Add_VectorVector_ReturnValue5) == 0x000AD8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Add_VectorVector_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_FindLookAtRotation_ReturnValue3) == 0x000AE4, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_FindLookAtRotation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_TryGetDamageActor_DamageActor4) == 0x000AF0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_TryGetDamageActor_DamageActor4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_TryGetDamageActor_DamageActor5) == 0x000AF8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_TryGetDamageActor_DamageActor5' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Add_IntInt_ReturnValue2) == 0x000B00, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue22) == 0x000B08, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue22' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand20) == 0x000B10, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand20' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess40) == 0x000B18, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess40' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface9) == 0x000B20, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface9' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess41) == 0x000B30, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess41' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetCloseRangeLaunchedActor_LaunchedActor3) == 0x000B38, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetCloseRangeLaunchedActor_LaunchedActor3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBI_Close_Range_Launched_Actor_Interface) == 0x000B40, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBI_Close_Range_Launched_Actor_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess42) == 0x000B50, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess42' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue31) == 0x000B58, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue31' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue21) == 0x000B60, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue21' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue31) == 0x000B61, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue31' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue23) == 0x000B62, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue23' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsDedicatedServer_ReturnValue2) == 0x000B63, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsDedicatedServer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Array_Get_Item) == 0x000B68, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue32) == 0x000B70, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue32' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Array_Length_ReturnValue1) == 0x000B74, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Less_IntInt_ReturnValue) == 0x000B78, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue32) == 0x000B80, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue32' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character8) == 0x000B88, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character8' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess43) == 0x000B90, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess43' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsOperatingSeparatedStand_ReturnValue) == 0x000B91, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsOperatingSeparatedStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue33) == 0x000B98, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue33' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsDedicatedServer_ReturnValue3) == 0x000BA0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsDedicatedServer_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue22) == 0x000BA1, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue22' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue33) == 0x000BA2, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue33' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, Temp_float_Variable) == 0x000BA4, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue24) == 0x000BA8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue24' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetCloseRangeLaunchedActor_LaunchedActor4) == 0x000BB0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetCloseRangeLaunchedActor_LaunchedActor4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBI_Close_Range_Launched_Actor_Interface1) == 0x000BB8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBI_Close_Range_Launched_Actor_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess44) == 0x000BC8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess44' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetAJBGameInstance_bSuccess3) == 0x000BC9, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetAJBGameInstance_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetAJBGameInstance_AJB_Game_Instance3) == 0x000BD0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetAJBGameInstance_AJB_Game_Instance3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetAJBGameInstance_bSuccess4) == 0x000BD8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetAJBGameInstance_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetAJBGameInstance_AJB_Game_Instance4) == 0x000BE0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetAJBGameInstance_AJB_Game_Instance4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsPlayingReplay_ReturnValue3) == 0x000BE8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsPlayingReplay_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsPlayingReplay_ReturnValue4) == 0x000BE9, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsPlayingReplay_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Not_PreBool_ReturnValue10) == 0x000BEA, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Not_PreBool_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, Temp_float_Variable1) == 0x000BEC, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetCloseRangeLaunchedActor_LaunchedActor5) == 0x000BF0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetCloseRangeLaunchedActor_LaunchedActor5' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBI_Close_Range_Launched_Actor_Interface2) == 0x000BF8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBI_Close_Range_Launched_Actor_Interface2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess45) == 0x000C08, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess45' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue34) == 0x000C10, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue34' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetDashParticleTag_DashParticleTag) == 0x000C18, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetDashParticleTag_DashParticleTag' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_HasLocalSharedController_ReturnValue23) == 0x000C20, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_HasLocalSharedController_ReturnValue23' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect) == 0x000C28, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000C30, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue25) == 0x000C31, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue25' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue34) == 0x000C32, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue34' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue26) == 0x000C33, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue26' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetDashParticleTag_DashParticleTag1) == 0x000C38, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetDashParticleTag_DashParticleTag1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsGameplayTagValid_ReturnValue1) == 0x000C40, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsGameplayTagValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, Temp_name_Variable) == 0x000C48, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanOR_ReturnValue4) == 0x000C50, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanOR_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_NotifyName) == 0x000C58, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_NotifyName1) == 0x000C60, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_NotifyName1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CreateDelegate_OutputDelegate3) == 0x000C68, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_TryGetDamageActor_DamageActor6) == 0x000C78, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_TryGetDamageActor_DamageActor6' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_TryGetDamageActor_DamageActor7) == 0x000C80, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_TryGetDamageActor_DamageActor7' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CreateDelegate_OutputDelegate4) == 0x000C88, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CreateDelegate_OutputDelegate5) == 0x000C98, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_HitActor) == 0x000CA8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_HitLocation1) == 0x000CB0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_HitLocation1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_HitNormal) == 0x000CBC, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_SurfaceType) == 0x000CC8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bDisableDamage) == 0x000CC9, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bIsPenetration1) == 0x000CCA, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bIsPenetration1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_BlockedActor) == 0x000CD0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_BlockedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_HItLocation) == 0x000CD8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_HItLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_CuttingRate) == 0x000CE4, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bInvincible) == 0x000CE8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bInvincible' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bIsPenetration) == 0x000CE9, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bIsPenetration' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_NotifyName2) == 0x000CF0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_NotifyName2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CreateDelegate_OutputDelegate6) == 0x000CF8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_NotifyName3) == 0x000D08, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_NotifyName3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CreateDelegate_OutputDelegate7) == 0x000D10, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_NotifyName4) == 0x000D20, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_NotifyName4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CreateDelegate_OutputDelegate8) == 0x000D28, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_TryGetDamageActor_DamageActor8) == 0x000D38, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_TryGetDamageActor_DamageActor8' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CreateDelegate_OutputDelegate9) == 0x000D40, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_CheckHeadShot_bHeadShot) == 0x000D50, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_CheckHeadShot_bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_TryGetDamageActor_DamageActor9) == 0x000D58, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_TryGetDamageActor_DamageActor9' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue27) == 0x000D60, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue27' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, Temp_name_Variable1) == 0x000D68, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetPoliticDamage_Damage2) == 0x000D70, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetPoliticDamage_Damage2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetPoliticDamage_Damage3) == 0x000D74, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetPoliticDamage_Damage3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_CalcAAPInfo_bDamageCutByAAP) == 0x000D78, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_CalcAAPInfo_bDamageCutByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_CalcAAPInfo_bDamageBlockByAAP) == 0x000D79, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_CalcAAPInfo_bDamageBlockByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_NotifyName5) == 0x000D80, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_NotifyName5' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_NotifyName6) == 0x000D88, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_NotifyName6' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CreateDelegate_OutputDelegate10) == 0x000D90, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CreateDelegate_OutputDelegate10' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_Location3) == 0x000DA0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_Location3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_Normal3) == 0x000DAC, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_Normal3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bCharacter3) == 0x000DB8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bCharacter3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CreateDelegate_OutputDelegate11) == 0x000DC0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CreateDelegate_OutputDelegate11' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_Location2) == 0x000DD0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_Location2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_Normal2) == 0x000DDC, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_Normal2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bCharacter2) == 0x000DE8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bCharacter2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetCloseRangeLaunchedActor_LaunchedActor6) == 0x000DF0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetCloseRangeLaunchedActor_LaunchedActor6' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue35) == 0x000DF8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue35' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character9) == 0x000E00, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character9' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess46) == 0x000E08, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess46' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000E0C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Subtract_VectorVector_ReturnValue7) == 0x000E18, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Subtract_VectorVector_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand) == 0x000E28, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess47) == 0x000E30, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess47' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_VSize_ReturnValue1) == 0x000E34, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_VSize_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsForwardTransition_ReturnValue) == 0x000E38, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsForwardTransition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_MapRangeClamped_ReturnValue) == 0x000E3C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue28) == 0x000E40, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue28' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Ease_ReturnValue) == 0x000E44, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanAND_ReturnValue29) == 0x000E48, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanAND_ReturnValue29' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_MapRangeClamped_ReturnValue1) == 0x000E4C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_MapRangeClamped_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsGameplayTagValid_ReturnValue2) == 0x000E50, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsGameplayTagValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_NotifyName7) == 0x000E58, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_NotifyName7' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CreateDelegate_OutputDelegate12) == 0x000E60, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_NotifyName8) == 0x000E70, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_NotifyName8' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsGameplayTagValid_ReturnValue3) == 0x000E78, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsGameplayTagValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_BooleanOR_ReturnValue5) == 0x000E79, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_BooleanOR_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CreateDelegate_OutputDelegate13) == 0x000E80, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CreateDelegate_OutputDelegate13' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_NotifyName9) == 0x000E90, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_NotifyName9' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CreateDelegate_OutputDelegate14) == 0x000E98, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CreateDelegate_OutputDelegate14' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_Location1) == 0x000EA8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_Normal1) == 0x000EB4, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_Normal1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bCharacter1) == 0x000EC0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bCharacter1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, Temp_bool_Variable1) == 0x000EC1, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_TryGetDamageActor_DamageActor10) == 0x000EC8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_TryGetDamageActor_DamageActor10' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_Select1_Default) == 0x000ED0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_K2_GetActorLocation_ReturnValue3) == 0x000ED4, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_K2_GetActorLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_Location) == 0x000EE0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_Normal) == 0x000EEC, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CustomEvent_bCharacter) == 0x000EF8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CustomEvent_bCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000EFC, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_CreateDelegate_OutputDelegate15) == 0x000F08, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_CreateDelegate_OutputDelegate15' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Subtract_IntInt_ReturnValue) == 0x000F18, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetOwnerStand_ReturnValue23) == 0x000F20, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetOwnerStand_ReturnValue23' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Array_Length_ReturnValue2) == 0x000F28, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand21) == 0x000F30, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand21' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess48) == 0x000F38, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess48' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Percent_IntInt_ReturnValue) == 0x000F3C, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface10) == 0x000F40, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface10' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_DynamicCast_bSuccess49) == 0x000F50, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_DynamicCast_bSuccess49' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Array_Get_Item1) == 0x000F58, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetCloseRangeLaunchedActor_LaunchedActor7) == 0x000F60, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetCloseRangeLaunchedActor_LaunchedActor7' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000F68, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue35) == 0x000F70, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue35' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_GetComponentByClass_ReturnValue) == 0x000F78, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_NotEqual_IntInt_ReturnValue1) == 0x000F80, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_NotEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, Temp_bool_Variable2) == 0x000F81, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Subtract_IntInt_ReturnValue1) == 0x000F84, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Percent_IntInt_ReturnValue1) == 0x000F88, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Percent_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, K2Node_Select2_Default) == 0x000F90, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_RequestParticleEffectOnLocal_ParticleEffect) == 0x000F98, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_RequestParticleEffectOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_Array_Get_Item2) == 0x000FA0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsGameplayTagValid_ReturnValue4) == 0x000FA8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsGameplayTagValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue1) == 0x000FB0, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill, CallFunc_IsValid_ReturnValue36) == 0x000FB8, "Member 'BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill::CallFunc_IsValid_ReturnValue36' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnMC_Penetrate
// 0x001C (0x001C - 0x0000)
struct BP_AJBCloseRangeSkill_C_OnMC_Penetrate final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCharacter;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_OnMC_Penetrate) == 0x000004, "Wrong alignment on BP_AJBCloseRangeSkill_C_OnMC_Penetrate");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_OnMC_Penetrate) == 0x00001C, "Wrong size on BP_AJBCloseRangeSkill_C_OnMC_Penetrate");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnMC_Penetrate, Location) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_OnMC_Penetrate::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnMC_Penetrate, Normal) == 0x00000C, "Member 'BP_AJBCloseRangeSkill_C_OnMC_Penetrate::Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnMC_Penetrate, bCharacter) == 0x000018, "Member 'BP_AJBCloseRangeSkill_C_OnMC_Penetrate::bCharacter' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnPenetrate
// 0x001C (0x001C - 0x0000)
struct BP_AJBCloseRangeSkill_C_OnPenetrate final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCharacter;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_OnPenetrate) == 0x000004, "Wrong alignment on BP_AJBCloseRangeSkill_C_OnPenetrate");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_OnPenetrate) == 0x00001C, "Wrong size on BP_AJBCloseRangeSkill_C_OnPenetrate");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnPenetrate, Location) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_OnPenetrate::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnPenetrate, Normal) == 0x00000C, "Member 'BP_AJBCloseRangeSkill_C_OnPenetrate::Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnPenetrate, bCharacter) == 0x000018, "Member 'BP_AJBCloseRangeSkill_C_OnPenetrate::bCharacter' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.MC_Penetrate
// 0x001C (0x001C - 0x0000)
struct BP_AJBCloseRangeSkill_C_MC_Penetrate final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCharacter;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_MC_Penetrate) == 0x000004, "Wrong alignment on BP_AJBCloseRangeSkill_C_MC_Penetrate");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_MC_Penetrate) == 0x00001C, "Wrong size on BP_AJBCloseRangeSkill_C_MC_Penetrate");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_MC_Penetrate, Location) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_MC_Penetrate::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_MC_Penetrate, Normal) == 0x00000C, "Member 'BP_AJBCloseRangeSkill_C_MC_Penetrate::Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_MC_Penetrate, bCharacter) == 0x000018, "Member 'BP_AJBCloseRangeSkill_C_MC_Penetrate::bCharacter' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ROS_Penetrate
// 0x001C (0x001C - 0x0000)
struct BP_AJBCloseRangeSkill_C_ROS_Penetrate final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCharacter;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_ROS_Penetrate) == 0x000004, "Wrong alignment on BP_AJBCloseRangeSkill_C_ROS_Penetrate");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_ROS_Penetrate) == 0x00001C, "Wrong size on BP_AJBCloseRangeSkill_C_ROS_Penetrate");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_Penetrate, Location) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_ROS_Penetrate::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_Penetrate, Normal) == 0x00000C, "Member 'BP_AJBCloseRangeSkill_C_ROS_Penetrate::Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_Penetrate, bCharacter) == 0x000018, "Member 'BP_AJBCloseRangeSkill_C_ROS_Penetrate::bCharacter' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnBlocking
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBCloseRangeSkill_C_OnBlocking final
{
public:
	class AActor*                                 BlockedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CuttingRate;                                       // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInvincible;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsPenetration;                                    // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_OnBlocking) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_OnBlocking");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_OnBlocking) == 0x000020, "Wrong size on BP_AJBCloseRangeSkill_C_OnBlocking");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnBlocking, BlockedActor) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_OnBlocking::BlockedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnBlocking, HitLocation) == 0x000008, "Member 'BP_AJBCloseRangeSkill_C_OnBlocking::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnBlocking, CuttingRate) == 0x000014, "Member 'BP_AJBCloseRangeSkill_C_OnBlocking::CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnBlocking, bInvincible) == 0x000018, "Member 'BP_AJBCloseRangeSkill_C_OnBlocking::bInvincible' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnBlocking, bIsPenetration) == 0x000019, "Member 'BP_AJBCloseRangeSkill_C_OnBlocking::bIsPenetration' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnTargetHit
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBCloseRangeSkill_C_OnTargetHit final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableDamage;                                    // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsPenetration;                                    // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_OnTargetHit) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_OnTargetHit");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_OnTargetHit) == 0x000028, "Wrong size on BP_AJBCloseRangeSkill_C_OnTargetHit");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnTargetHit, HitActor) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_OnTargetHit::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnTargetHit, HitLocation) == 0x000008, "Member 'BP_AJBCloseRangeSkill_C_OnTargetHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnTargetHit, HitNormal) == 0x000014, "Member 'BP_AJBCloseRangeSkill_C_OnTargetHit::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnTargetHit, SurfaceType) == 0x000020, "Member 'BP_AJBCloseRangeSkill_C_OnTargetHit::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnTargetHit, bDisableDamage) == 0x000021, "Member 'BP_AJBCloseRangeSkill_C_OnTargetHit::bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnTargetHit, bIsPenetration) == 0x000022, "Member 'BP_AJBCloseRangeSkill_C_OnTargetHit::bIsPenetration' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.MC_EndState
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBCloseRangeSkill_C_MC_EndState final
{
public:
	bool                                          bCancel;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRestore;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_MC_EndState) == 0x000001, "Wrong alignment on BP_AJBCloseRangeSkill_C_MC_EndState");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_MC_EndState) == 0x000002, "Wrong size on BP_AJBCloseRangeSkill_C_MC_EndState");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_MC_EndState, bCancel) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_MC_EndState::bCancel' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_MC_EndState, bRestore) == 0x000001, "Member 'BP_AJBCloseRangeSkill_C_MC_EndState::bRestore' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ROS_EndState
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBCloseRangeSkill_C_ROS_EndState final
{
public:
	bool                                          bCancel;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRestore;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_ROS_EndState) == 0x000001, "Wrong alignment on BP_AJBCloseRangeSkill_C_ROS_EndState");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_ROS_EndState) == 0x000002, "Wrong size on BP_AJBCloseRangeSkill_C_ROS_EndState");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_EndState, bCancel) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_ROS_EndState::bCancel' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_EndState, bRestore) == 0x000001, "Member 'BP_AJBCloseRangeSkill_C_ROS_EndState::bRestore' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.EndState_Local
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBCloseRangeSkill_C_EndState_Local final
{
public:
	bool                                          bCancel;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRestore;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_EndState_Local) == 0x000001, "Wrong alignment on BP_AJBCloseRangeSkill_C_EndState_Local");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_EndState_Local) == 0x000002, "Wrong size on BP_AJBCloseRangeSkill_C_EndState_Local");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_EndState_Local, bCancel) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_EndState_Local::bCancel' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_EndState_Local, bRestore) == 0x000001, "Member 'BP_AJBCloseRangeSkill_C_EndState_Local::bRestore' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnEndState
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBCloseRangeSkill_C_OnEndState final
{
public:
	bool                                          bCancel;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRestore;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_OnEndState) == 0x000001, "Wrong alignment on BP_AJBCloseRangeSkill_C_OnEndState");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_OnEndState) == 0x000002, "Wrong size on BP_AJBCloseRangeSkill_C_OnEndState");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnEndState, bCancel) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_OnEndState::bCancel' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnEndState, bRestore) == 0x000001, "Member 'BP_AJBCloseRangeSkill_C_OnEndState::bRestore' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.MC_RequestHitWaitGion
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBCloseRangeSkill_C_MC_RequestHitWaitGion final
{
public:
	bool                                          Hit;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_MC_RequestHitWaitGion) == 0x000004, "Wrong alignment on BP_AJBCloseRangeSkill_C_MC_RequestHitWaitGion");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_MC_RequestHitWaitGion) == 0x000010, "Wrong size on BP_AJBCloseRangeSkill_C_MC_RequestHitWaitGion");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_MC_RequestHitWaitGion, Hit) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_MC_RequestHitWaitGion::Hit' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_MC_RequestHitWaitGion, HitLocation) == 0x000004, "Member 'BP_AJBCloseRangeSkill_C_MC_RequestHitWaitGion::HitLocation' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ROS_RequestHitWaitGion
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBCloseRangeSkill_C_ROS_RequestHitWaitGion final
{
public:
	bool                                          Hit;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_ROS_RequestHitWaitGion) == 0x000004, "Wrong alignment on BP_AJBCloseRangeSkill_C_ROS_RequestHitWaitGion");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_ROS_RequestHitWaitGion) == 0x000010, "Wrong size on BP_AJBCloseRangeSkill_C_ROS_RequestHitWaitGion");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_RequestHitWaitGion, Hit) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_ROS_RequestHitWaitGion::Hit' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_RequestHitWaitGion, HitLocation) == 0x000004, "Member 'BP_AJBCloseRangeSkill_C_ROS_RequestHitWaitGion::HitLocation' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.SpeakRushHitVoice
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBCloseRangeSkill_C_SpeakRushHitVoice final
{
public:
	bool                                          bHitCharacter;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_SpeakRushHitVoice) == 0x000001, "Wrong alignment on BP_AJBCloseRangeSkill_C_SpeakRushHitVoice");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_SpeakRushHitVoice) == 0x000001, "Wrong size on BP_AJBCloseRangeSkill_C_SpeakRushHitVoice");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_SpeakRushHitVoice, bHitCharacter) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_SpeakRushHitVoice::bHitCharacter' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ROS_DamageOverlap
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBCloseRangeSkill_C_ROS_DamageOverlap final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_ROS_DamageOverlap) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_ROS_DamageOverlap");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_ROS_DamageOverlap) == 0x000020, "Wrong size on BP_AJBCloseRangeSkill_C_ROS_DamageOverlap");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_DamageOverlap, Target) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_ROS_DamageOverlap::Target' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_DamageOverlap, DamageCauser) == 0x000008, "Member 'BP_AJBCloseRangeSkill_C_ROS_DamageOverlap::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_DamageOverlap, HitLocation) == 0x000010, "Member 'BP_AJBCloseRangeSkill_C_ROS_DamageOverlap::HitLocation' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnDamageOverlap
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBCloseRangeSkill_C_OnDamageOverlap final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_OnDamageOverlap) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_OnDamageOverlap");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_OnDamageOverlap) == 0x000020, "Wrong size on BP_AJBCloseRangeSkill_C_OnDamageOverlap");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnDamageOverlap, Target) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_OnDamageOverlap::Target' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnDamageOverlap, DamageCauser) == 0x000008, "Member 'BP_AJBCloseRangeSkill_C_OnDamageOverlap::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnDamageOverlap, HitLocation) == 0x000010, "Member 'BP_AJBCloseRangeSkill_C_OnDamageOverlap::HitLocation' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBCloseRangeSkill_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBCloseRangeSkill_C_ReceiveTick");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBCloseRangeSkill_C_ReceiveTick");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBCloseRangeSkill_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_AJBCloseRangeSkill_C_ReceiveEndPlay");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_AJBCloseRangeSkill_C_ReceiveEndPlay");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnHit
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBCloseRangeSkill_C_OnHit final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CuttingRate;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableDamage;                                    // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInvincible;                                       // 0x0026(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsPenetration;                                    // 0x0027(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_OnHit) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_OnHit");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_OnHit) == 0x000028, "Wrong size on BP_AJBCloseRangeSkill_C_OnHit");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnHit, HitActor) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_OnHit::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnHit, HitLocation) == 0x000008, "Member 'BP_AJBCloseRangeSkill_C_OnHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnHit, HitNormal) == 0x000014, "Member 'BP_AJBCloseRangeSkill_C_OnHit::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnHit, CuttingRate) == 0x000020, "Member 'BP_AJBCloseRangeSkill_C_OnHit::CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnHit, SurfaceType) == 0x000024, "Member 'BP_AJBCloseRangeSkill_C_OnHit::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnHit, bDisableDamage) == 0x000025, "Member 'BP_AJBCloseRangeSkill_C_OnHit::bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnHit, bInvincible) == 0x000026, "Member 'BP_AJBCloseRangeSkill_C_OnHit::bInvincible' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnHit, bIsPenetration) == 0x000027, "Member 'BP_AJBCloseRangeSkill_C_OnHit::bIsPenetration' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ChangeState
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBCloseRangeSkill_C_ChangeState final
{
public:
	uint8                                         NextState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_ChangeState) == 0x000001, "Wrong alignment on BP_AJBCloseRangeSkill_C_ChangeState");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_ChangeState) == 0x000001, "Wrong size on BP_AJBCloseRangeSkill_C_ChangeState");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ChangeState, NextState) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_ChangeState::NextState' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnDash
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBCloseRangeSkill_C_OnDash final
{
public:
	uint8                                         RepeatCount_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRedash;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_OnDash) == 0x000001, "Wrong alignment on BP_AJBCloseRangeSkill_C_OnDash");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_OnDash) == 0x000002, "Wrong size on BP_AJBCloseRangeSkill_C_OnDash");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnDash, RepeatCount_0) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_OnDash::RepeatCount_0' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnDash, bRedash) == 0x000001, "Member 'BP_AJBCloseRangeSkill_C_OnDash::bRedash' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.MC_Dash
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBCloseRangeSkill_C_MC_Dash final
{
public:
	struct FVector                                TargetDirection_0;                                 // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor_0;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        TargetComponent_0;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         RepeatCount_0;                                     // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRedash;                                           // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_MC_Dash) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_MC_Dash");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_MC_Dash) == 0x000028, "Wrong size on BP_AJBCloseRangeSkill_C_MC_Dash");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_MC_Dash, TargetDirection_0) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_MC_Dash::TargetDirection_0' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_MC_Dash, TargetActor_0) == 0x000010, "Member 'BP_AJBCloseRangeSkill_C_MC_Dash::TargetActor_0' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_MC_Dash, TargetComponent_0) == 0x000018, "Member 'BP_AJBCloseRangeSkill_C_MC_Dash::TargetComponent_0' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_MC_Dash, RepeatCount_0) == 0x000020, "Member 'BP_AJBCloseRangeSkill_C_MC_Dash::RepeatCount_0' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_MC_Dash, bRedash) == 0x000021, "Member 'BP_AJBCloseRangeSkill_C_MC_Dash::bRedash' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ROS_Dash
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBCloseRangeSkill_C_ROS_Dash final
{
public:
	struct FVector                                TargetDirection_0;                                 // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor_0;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        TargetComponent_0;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         RepeatCount_0;                                     // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRedash;                                           // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_ROS_Dash) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_ROS_Dash");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_ROS_Dash) == 0x000028, "Wrong size on BP_AJBCloseRangeSkill_C_ROS_Dash");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_Dash, TargetDirection_0) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_ROS_Dash::TargetDirection_0' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_Dash, TargetActor_0) == 0x000010, "Member 'BP_AJBCloseRangeSkill_C_ROS_Dash::TargetActor_0' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_Dash, TargetComponent_0) == 0x000018, "Member 'BP_AJBCloseRangeSkill_C_ROS_Dash::TargetComponent_0' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_Dash, RepeatCount_0) == 0x000020, "Member 'BP_AJBCloseRangeSkill_C_ROS_Dash::RepeatCount_0' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_Dash, bRedash) == 0x000021, "Member 'BP_AJBCloseRangeSkill_C_ROS_Dash::bRedash' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.MC_HitWait
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBCloseRangeSkill_C_MC_HitWait final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CuttingRate;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableDamage;                                    // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInvincible;                                       // 0x0026(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsPenetration;                                    // 0x0027(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bBlockedByAAP;                                     // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHeadShot;                                         // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_MC_HitWait) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_MC_HitWait");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_MC_HitWait) == 0x000030, "Wrong size on BP_AJBCloseRangeSkill_C_MC_HitWait");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_MC_HitWait, HitActor) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_MC_HitWait::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_MC_HitWait, HitLocation) == 0x000008, "Member 'BP_AJBCloseRangeSkill_C_MC_HitWait::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_MC_HitWait, HitNormal) == 0x000014, "Member 'BP_AJBCloseRangeSkill_C_MC_HitWait::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_MC_HitWait, CuttingRate) == 0x000020, "Member 'BP_AJBCloseRangeSkill_C_MC_HitWait::CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_MC_HitWait, SurfaceType) == 0x000024, "Member 'BP_AJBCloseRangeSkill_C_MC_HitWait::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_MC_HitWait, bDisableDamage) == 0x000025, "Member 'BP_AJBCloseRangeSkill_C_MC_HitWait::bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_MC_HitWait, bInvincible) == 0x000026, "Member 'BP_AJBCloseRangeSkill_C_MC_HitWait::bInvincible' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_MC_HitWait, bIsPenetration) == 0x000027, "Member 'BP_AJBCloseRangeSkill_C_MC_HitWait::bIsPenetration' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_MC_HitWait, bBlockedByAAP) == 0x000028, "Member 'BP_AJBCloseRangeSkill_C_MC_HitWait::bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_MC_HitWait, bHeadShot) == 0x000029, "Member 'BP_AJBCloseRangeSkill_C_MC_HitWait::bHeadShot' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ROS_HitWait
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBCloseRangeSkill_C_ROS_HitWait final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CuttingRate;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableDamage;                                    // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInvincible;                                       // 0x0026(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SerialNumber_0;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPenetration;                                    // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bBlockedByAAP;                                     // 0x002D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHeadShot;                                         // 0x002E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_ROS_HitWait) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_ROS_HitWait");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_ROS_HitWait) == 0x000030, "Wrong size on BP_AJBCloseRangeSkill_C_ROS_HitWait");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_HitWait, HitActor) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_ROS_HitWait::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_HitWait, HitLocation) == 0x000008, "Member 'BP_AJBCloseRangeSkill_C_ROS_HitWait::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_HitWait, HitNormal) == 0x000014, "Member 'BP_AJBCloseRangeSkill_C_ROS_HitWait::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_HitWait, CuttingRate) == 0x000020, "Member 'BP_AJBCloseRangeSkill_C_ROS_HitWait::CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_HitWait, SurfaceType) == 0x000024, "Member 'BP_AJBCloseRangeSkill_C_ROS_HitWait::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_HitWait, bDisableDamage) == 0x000025, "Member 'BP_AJBCloseRangeSkill_C_ROS_HitWait::bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_HitWait, bInvincible) == 0x000026, "Member 'BP_AJBCloseRangeSkill_C_ROS_HitWait::bInvincible' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_HitWait, SerialNumber_0) == 0x000028, "Member 'BP_AJBCloseRangeSkill_C_ROS_HitWait::SerialNumber_0' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_HitWait, bIsPenetration) == 0x00002C, "Member 'BP_AJBCloseRangeSkill_C_ROS_HitWait::bIsPenetration' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_HitWait, bBlockedByAAP) == 0x00002D, "Member 'BP_AJBCloseRangeSkill_C_ROS_HitWait::bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ROS_HitWait, bHeadShot) == 0x00002E, "Member 'BP_AJBCloseRangeSkill_C_ROS_HitWait::bHeadShot' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.HitWait
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBCloseRangeSkill_C_HitWait final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CuttingRate;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableDamage;                                    // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInvincible;                                       // 0x0026(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsPenetration;                                    // 0x0027(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bBlockedByAAP;                                     // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHeadShot;                                         // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_HitWait) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_HitWait");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_HitWait) == 0x000030, "Wrong size on BP_AJBCloseRangeSkill_C_HitWait");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_HitWait, HitActor) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_HitWait::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_HitWait, HitLocation) == 0x000008, "Member 'BP_AJBCloseRangeSkill_C_HitWait::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_HitWait, HitNormal) == 0x000014, "Member 'BP_AJBCloseRangeSkill_C_HitWait::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_HitWait, CuttingRate) == 0x000020, "Member 'BP_AJBCloseRangeSkill_C_HitWait::CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_HitWait, SurfaceType) == 0x000024, "Member 'BP_AJBCloseRangeSkill_C_HitWait::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_HitWait, bDisableDamage) == 0x000025, "Member 'BP_AJBCloseRangeSkill_C_HitWait::bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_HitWait, bInvincible) == 0x000026, "Member 'BP_AJBCloseRangeSkill_C_HitWait::bInvincible' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_HitWait, bIsPenetration) == 0x000027, "Member 'BP_AJBCloseRangeSkill_C_HitWait::bIsPenetration' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_HitWait, bBlockedByAAP) == 0x000028, "Member 'BP_AJBCloseRangeSkill_C_HitWait::bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_HitWait, bHeadShot) == 0x000029, "Member 'BP_AJBCloseRangeSkill_C_HitWait::bHeadShot' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.Dash
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBCloseRangeSkill_C_Dash final
{
public:
	uint8                                         RepeatCount_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRedash;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_Dash) == 0x000001, "Wrong alignment on BP_AJBCloseRangeSkill_C_Dash");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_Dash) == 0x000002, "Wrong size on BP_AJBCloseRangeSkill_C_Dash");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_Dash, RepeatCount_0) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_Dash::RepeatCount_0' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_Dash, bRedash) == 0x000001, "Member 'BP_AJBCloseRangeSkill_C_Dash::bRedash' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.StateBeginPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBCloseRangeSkill_C_StateBeginPlay final
{
public:
	bool                                          bShouldRestore;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_StateBeginPlay) == 0x000001, "Wrong alignment on BP_AJBCloseRangeSkill_C_StateBeginPlay");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_StateBeginPlay) == 0x000001, "Wrong size on BP_AJBCloseRangeSkill_C_StateBeginPlay");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_StateBeginPlay, bShouldRestore) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_StateBeginPlay::bShouldRestore' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.StateTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBCloseRangeSkill_C_StateTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_StateTick) == 0x000004, "Wrong alignment on BP_AJBCloseRangeSkill_C_StateTick");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_StateTick) == 0x000004, "Wrong size on BP_AJBCloseRangeSkill_C_StateTick");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_StateTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_StateTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.Update_Dash
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBCloseRangeSkill_C_Update_Dash final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_Update_Dash) == 0x000004, "Wrong alignment on BP_AJBCloseRangeSkill_C_Update_Dash");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_Update_Dash) == 0x000004, "Wrong size on BP_AJBCloseRangeSkill_C_Update_Dash");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_Update_Dash, DeltaSeconds) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_Update_Dash::DeltaSeconds' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.Update_AccompanyWait
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBCloseRangeSkill_C_Update_AccompanyWait final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_Update_AccompanyWait) == 0x000004, "Wrong alignment on BP_AJBCloseRangeSkill_C_Update_AccompanyWait");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_Update_AccompanyWait) == 0x000004, "Wrong size on BP_AJBCloseRangeSkill_C_Update_AccompanyWait");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_Update_AccompanyWait, DeltaSeconds) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_Update_AccompanyWait::DeltaSeconds' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.Update_BackToPlayer
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBCloseRangeSkill_C_Update_BackToPlayer final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_Update_BackToPlayer) == 0x000004, "Wrong alignment on BP_AJBCloseRangeSkill_C_Update_BackToPlayer");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_Update_BackToPlayer) == 0x000004, "Wrong size on BP_AJBCloseRangeSkill_C_Update_BackToPlayer");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_Update_BackToPlayer, DeltaSeconds) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_Update_BackToPlayer::DeltaSeconds' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.Update_HitWait
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBCloseRangeSkill_C_Update_HitWait final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_Update_HitWait) == 0x000004, "Wrong alignment on BP_AJBCloseRangeSkill_C_Update_HitWait");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_Update_HitWait) == 0x000004, "Wrong size on BP_AJBCloseRangeSkill_C_Update_HitWait");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_Update_HitWait, DeltaSeconds) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_Update_HitWait::DeltaSeconds' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBCloseRangeSkill_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBCloseRangeSkill_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBCloseRangeSkill_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBCloseRangeSkill_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBCloseRangeSkill_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBCloseRangeSkill_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnCompleted_A3F1CD754137FA8BD996C6838AB7F546
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBCloseRangeSkill_C_OnCompleted_A3F1CD754137FA8BD996C6838AB7F546 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_OnCompleted_A3F1CD754137FA8BD996C6838AB7F546) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_OnCompleted_A3F1CD754137FA8BD996C6838AB7F546");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_OnCompleted_A3F1CD754137FA8BD996C6838AB7F546) == 0x000008, "Wrong size on BP_AJBCloseRangeSkill_C_OnCompleted_A3F1CD754137FA8BD996C6838AB7F546");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnCompleted_A3F1CD754137FA8BD996C6838AB7F546, NotifyName) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_OnCompleted_A3F1CD754137FA8BD996C6838AB7F546::NotifyName' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnBlendOut_A3F1CD754137FA8BD996C6838AB7F546
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBCloseRangeSkill_C_OnBlendOut_A3F1CD754137FA8BD996C6838AB7F546 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_OnBlendOut_A3F1CD754137FA8BD996C6838AB7F546) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_OnBlendOut_A3F1CD754137FA8BD996C6838AB7F546");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_OnBlendOut_A3F1CD754137FA8BD996C6838AB7F546) == 0x000008, "Wrong size on BP_AJBCloseRangeSkill_C_OnBlendOut_A3F1CD754137FA8BD996C6838AB7F546");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnBlendOut_A3F1CD754137FA8BD996C6838AB7F546, NotifyName) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_OnBlendOut_A3F1CD754137FA8BD996C6838AB7F546::NotifyName' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnInterrupted_A3F1CD754137FA8BD996C6838AB7F546
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBCloseRangeSkill_C_OnInterrupted_A3F1CD754137FA8BD996C6838AB7F546 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_OnInterrupted_A3F1CD754137FA8BD996C6838AB7F546) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_OnInterrupted_A3F1CD754137FA8BD996C6838AB7F546");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_OnInterrupted_A3F1CD754137FA8BD996C6838AB7F546) == 0x000008, "Wrong size on BP_AJBCloseRangeSkill_C_OnInterrupted_A3F1CD754137FA8BD996C6838AB7F546");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnInterrupted_A3F1CD754137FA8BD996C6838AB7F546, NotifyName) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_OnInterrupted_A3F1CD754137FA8BD996C6838AB7F546::NotifyName' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnNotifyBegin_A3F1CD754137FA8BD996C6838AB7F546
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBCloseRangeSkill_C_OnNotifyBegin_A3F1CD754137FA8BD996C6838AB7F546 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_OnNotifyBegin_A3F1CD754137FA8BD996C6838AB7F546) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_OnNotifyBegin_A3F1CD754137FA8BD996C6838AB7F546");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_OnNotifyBegin_A3F1CD754137FA8BD996C6838AB7F546) == 0x000008, "Wrong size on BP_AJBCloseRangeSkill_C_OnNotifyBegin_A3F1CD754137FA8BD996C6838AB7F546");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnNotifyBegin_A3F1CD754137FA8BD996C6838AB7F546, NotifyName) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_OnNotifyBegin_A3F1CD754137FA8BD996C6838AB7F546::NotifyName' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnNotifyEnd_A3F1CD754137FA8BD996C6838AB7F546
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBCloseRangeSkill_C_OnNotifyEnd_A3F1CD754137FA8BD996C6838AB7F546 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_OnNotifyEnd_A3F1CD754137FA8BD996C6838AB7F546) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_OnNotifyEnd_A3F1CD754137FA8BD996C6838AB7F546");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_OnNotifyEnd_A3F1CD754137FA8BD996C6838AB7F546) == 0x000008, "Wrong size on BP_AJBCloseRangeSkill_C_OnNotifyEnd_A3F1CD754137FA8BD996C6838AB7F546");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnNotifyEnd_A3F1CD754137FA8BD996C6838AB7F546, NotifyName) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_OnNotifyEnd_A3F1CD754137FA8BD996C6838AB7F546::NotifyName' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnCompleted_F3884152406B329A4C600188A0955544
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBCloseRangeSkill_C_OnCompleted_F3884152406B329A4C600188A0955544 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_OnCompleted_F3884152406B329A4C600188A0955544) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_OnCompleted_F3884152406B329A4C600188A0955544");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_OnCompleted_F3884152406B329A4C600188A0955544) == 0x000008, "Wrong size on BP_AJBCloseRangeSkill_C_OnCompleted_F3884152406B329A4C600188A0955544");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnCompleted_F3884152406B329A4C600188A0955544, NotifyName) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_OnCompleted_F3884152406B329A4C600188A0955544::NotifyName' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnBlendOut_F3884152406B329A4C600188A0955544
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBCloseRangeSkill_C_OnBlendOut_F3884152406B329A4C600188A0955544 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_OnBlendOut_F3884152406B329A4C600188A0955544) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_OnBlendOut_F3884152406B329A4C600188A0955544");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_OnBlendOut_F3884152406B329A4C600188A0955544) == 0x000008, "Wrong size on BP_AJBCloseRangeSkill_C_OnBlendOut_F3884152406B329A4C600188A0955544");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnBlendOut_F3884152406B329A4C600188A0955544, NotifyName) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_OnBlendOut_F3884152406B329A4C600188A0955544::NotifyName' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnInterrupted_F3884152406B329A4C600188A0955544
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBCloseRangeSkill_C_OnInterrupted_F3884152406B329A4C600188A0955544 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_OnInterrupted_F3884152406B329A4C600188A0955544) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_OnInterrupted_F3884152406B329A4C600188A0955544");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_OnInterrupted_F3884152406B329A4C600188A0955544) == 0x000008, "Wrong size on BP_AJBCloseRangeSkill_C_OnInterrupted_F3884152406B329A4C600188A0955544");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnInterrupted_F3884152406B329A4C600188A0955544, NotifyName) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_OnInterrupted_F3884152406B329A4C600188A0955544::NotifyName' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnNotifyBegin_F3884152406B329A4C600188A0955544
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBCloseRangeSkill_C_OnNotifyBegin_F3884152406B329A4C600188A0955544 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_OnNotifyBegin_F3884152406B329A4C600188A0955544) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_OnNotifyBegin_F3884152406B329A4C600188A0955544");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_OnNotifyBegin_F3884152406B329A4C600188A0955544) == 0x000008, "Wrong size on BP_AJBCloseRangeSkill_C_OnNotifyBegin_F3884152406B329A4C600188A0955544");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnNotifyBegin_F3884152406B329A4C600188A0955544, NotifyName) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_OnNotifyBegin_F3884152406B329A4C600188A0955544::NotifyName' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnNotifyEnd_F3884152406B329A4C600188A0955544
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBCloseRangeSkill_C_OnNotifyEnd_F3884152406B329A4C600188A0955544 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_OnNotifyEnd_F3884152406B329A4C600188A0955544) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_OnNotifyEnd_F3884152406B329A4C600188A0955544");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_OnNotifyEnd_F3884152406B329A4C600188A0955544) == 0x000008, "Wrong size on BP_AJBCloseRangeSkill_C_OnNotifyEnd_F3884152406B329A4C600188A0955544");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_OnNotifyEnd_F3884152406B329A4C600188A0955544, NotifyName) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_OnNotifyEnd_F3884152406B329A4C600188A0955544::NotifyName' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.SetRepeatCount
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBCloseRangeSkill_C_SetRepeatCount final
{
public:
	int32                                         RepeatCount_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Result;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_SetRepeatCount) == 0x000004, "Wrong alignment on BP_AJBCloseRangeSkill_C_SetRepeatCount");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_SetRepeatCount) == 0x000008, "Wrong size on BP_AJBCloseRangeSkill_C_SetRepeatCount");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_SetRepeatCount, RepeatCount_0) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_SetRepeatCount::RepeatCount_0' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_SetRepeatCount, Result) == 0x000004, "Member 'BP_AJBCloseRangeSkill_C_SetRepeatCount::Result' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.DashToTarget
// 0x00B0 (0x00B0 - 0x0000)
struct BP_AJBCloseRangeSkill_C_DashToTarget final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReached;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBDamageActor_C*                   CallFunc_TryGetDamageActor_DamageActor;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCloseRangeLaunchedActor_LaunchedActor; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0050(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x005C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0074(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0080(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x008C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x00A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_DashToTarget) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_DashToTarget");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_DashToTarget) == 0x0000B0, "Wrong size on BP_AJBCloseRangeSkill_C_DashToTarget");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_DashToTarget, Speed) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_DashToTarget::Speed' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_DashToTarget, DeltaSeconds) == 0x000004, "Member 'BP_AJBCloseRangeSkill_C_DashToTarget::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_DashToTarget, bReached) == 0x000008, "Member 'BP_AJBCloseRangeSkill_C_DashToTarget::bReached' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_DashToTarget, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_AJBCloseRangeSkill_C_DashToTarget::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_DashToTarget, CallFunc_TryGetDamageActor_DamageActor) == 0x000010, "Member 'BP_AJBCloseRangeSkill_C_DashToTarget::CallFunc_TryGetDamageActor_DamageActor' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_DashToTarget, CallFunc_GetOwnerStand_ReturnValue) == 0x000018, "Member 'BP_AJBCloseRangeSkill_C_DashToTarget::CallFunc_GetOwnerStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_DashToTarget, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000020, "Member 'BP_AJBCloseRangeSkill_C_DashToTarget::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_DashToTarget, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBCloseRangeSkill_C_DashToTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_DashToTarget, Temp_bool_Variable) == 0x000029, "Member 'BP_AJBCloseRangeSkill_C_DashToTarget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_DashToTarget, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface) == 0x000030, "Member 'BP_AJBCloseRangeSkill_C_DashToTarget::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_DashToTarget, K2Node_DynamicCast_bSuccess1) == 0x000040, "Member 'BP_AJBCloseRangeSkill_C_DashToTarget::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_DashToTarget, CallFunc_GetCloseRangeLaunchedActor_LaunchedActor) == 0x000048, "Member 'BP_AJBCloseRangeSkill_C_DashToTarget::CallFunc_GetCloseRangeLaunchedActor_LaunchedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_DashToTarget, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000050, "Member 'BP_AJBCloseRangeSkill_C_DashToTarget::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_DashToTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00005C, "Member 'BP_AJBCloseRangeSkill_C_DashToTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_DashToTarget, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'BP_AJBCloseRangeSkill_C_DashToTarget::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_DashToTarget, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000074, "Member 'BP_AJBCloseRangeSkill_C_DashToTarget::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_DashToTarget, CallFunc_Add_VectorVector_ReturnValue1) == 0x000080, "Member 'BP_AJBCloseRangeSkill_C_DashToTarget::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_DashToTarget, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00008C, "Member 'BP_AJBCloseRangeSkill_C_DashToTarget::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_DashToTarget, CallFunc_VSize_ReturnValue) == 0x000098, "Member 'BP_AJBCloseRangeSkill_C_DashToTarget::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_DashToTarget, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00009C, "Member 'BP_AJBCloseRangeSkill_C_DashToTarget::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_DashToTarget, K2Node_Select_Default) == 0x0000A0, "Member 'BP_AJBCloseRangeSkill_C_DashToTarget::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.TryRedash
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBCloseRangeSkill_C_TryRedash final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSkillState_bMatch;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_TryRedash) == 0x000001, "Wrong alignment on BP_AJBCloseRangeSkill_C_TryRedash");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_TryRedash) == 0x000002, "Wrong size on BP_AJBCloseRangeSkill_C_TryRedash");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryRedash, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_TryRedash::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryRedash, CallFunc_CheckSkillState_bMatch) == 0x000001, "Member 'BP_AJBCloseRangeSkill_C_TryRedash::CallFunc_CheckSkillState_bMatch' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.TryGetDamageActor
// 0x0100 (0x0100 - 0x0000)
struct BP_AJBCloseRangeSkill_C_TryGetDamageActor final
{
public:
	class ABP_AJBDamageActor_C*                   DamageActor_0;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x004C(0x000C)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetPoliticDamage_Damage;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLaunchedActorHomeLocation_Location;    // 0x005C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBDamageActor_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue1;               // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1;         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface1; // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCloseRangeLaunchedActor_LaunchedActor; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_TryGetDamageActor) == 0x000010, "Wrong alignment on BP_AJBCloseRangeSkill_C_TryGetDamageActor");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_TryGetDamageActor) == 0x000100, "Wrong size on BP_AJBCloseRangeSkill_C_TryGetDamageActor");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, DamageActor_0) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::DamageActor_0' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, CallFunc_GetOwnerStand_ReturnValue) == 0x000008, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::CallFunc_GetOwnerStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000010, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000020, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface) == 0x000028, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000040, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00004C, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, CallFunc_GetPoliticDamage_Damage) == 0x000058, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::CallFunc_GetPoliticDamage_Damage' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, CallFunc_GetLaunchedActorHomeLocation_Location) == 0x00005C, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::CallFunc_GetLaunchedActorHomeLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A0, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, CallFunc_GetObjectClass_ReturnValue) == 0x0000A8, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000B0, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, CallFunc_GetOwnerStand_ReturnValue1) == 0x0000C0, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::CallFunc_GetOwnerStand_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1) == 0x0000C8, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, K2Node_DynamicCast_bSuccess3) == 0x0000D0, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface1) == 0x0000D8, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, K2Node_DynamicCast_bSuccess4) == 0x0000E8, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, CallFunc_GetCloseRangeLaunchedActor_LaunchedActor) == 0x0000F0, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::CallFunc_GetCloseRangeLaunchedActor_LaunchedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryGetDamageActor, CallFunc_IsValid_ReturnValue1) == 0x0000F8, "Member 'BP_AJBCloseRangeSkill_C_TryGetDamageActor::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.BackToCharacter
// 0x00F0 (0x00F0 - 0x0000)
struct BP_AJBCloseRangeSkill_C_BackToCharacter final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReached;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue1;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface1; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCloseRangeLaunchedActor_LaunchedActor; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0078(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCloseRangeLaunchedActor_LaunchedActor1; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0090(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x009C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1;       // 0x00C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue1;                       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue1;        // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue2;        // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_BackToCharacter) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_BackToCharacter");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_BackToCharacter) == 0x0000F0, "Wrong size on BP_AJBCloseRangeSkill_C_BackToCharacter");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, Speed) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::Speed' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, DeltaSeconds) == 0x000004, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, bReached) == 0x000008, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::bReached' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, CallFunc_GetOwnerStand_ReturnValue) == 0x000010, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::CallFunc_GetOwnerStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, CallFunc_GetOwnerStand_ReturnValue1) == 0x000018, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::CallFunc_GetOwnerStand_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000020, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1) == 0x000030, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface) == 0x000040, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, K2Node_DynamicCast_bSuccess2) == 0x000050, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface1) == 0x000058, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, K2Node_DynamicCast_bSuccess3) == 0x000068, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, CallFunc_GetCloseRangeLaunchedActor_LaunchedActor) == 0x000070, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::CallFunc_GetCloseRangeLaunchedActor_LaunchedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000078, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, CallFunc_GetCloseRangeLaunchedActor_LaunchedActor1) == 0x000088, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::CallFunc_GetCloseRangeLaunchedActor_LaunchedActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000090, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x00009C, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A8, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000B4, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, CallFunc_VSize_ReturnValue) == 0x0000C0, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000C4, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, CallFunc_Subtract_VectorVector_ReturnValue1) == 0x0000C8, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::CallFunc_Subtract_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, CallFunc_Normal_ReturnValue) == 0x0000D4, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, CallFunc_VSize_ReturnValue1) == 0x0000E0, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::CallFunc_VSize_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000E4, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, CallFunc_LessEqual_FloatFloat_ReturnValue1) == 0x0000E8, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::CallFunc_LessEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_BackToCharacter, CallFunc_LessEqual_FloatFloat_ReturnValue2) == 0x0000E9, "Member 'BP_AJBCloseRangeSkill_C_BackToCharacter::CallFunc_LessEqual_FloatFloat_ReturnValue2' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.SetLaunchedActorLocationReliable
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBCloseRangeSkill_C_SetLaunchedActorLocationReliable final
{
public:
	struct FVector                                NewLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCloseRangeLaunchedActor_LaunchedActor; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBInGameMovementComponent*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_SetLaunchedActorLocationReliable) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_SetLaunchedActorLocationReliable");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_SetLaunchedActorLocationReliable) == 0x000050, "Wrong size on BP_AJBCloseRangeSkill_C_SetLaunchedActorLocationReliable");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_SetLaunchedActorLocationReliable, NewLocation) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_SetLaunchedActorLocationReliable::NewLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_SetLaunchedActorLocationReliable, CallFunc_GetOwnerStand_ReturnValue) == 0x000010, "Member 'BP_AJBCloseRangeSkill_C_SetLaunchedActorLocationReliable::CallFunc_GetOwnerStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_SetLaunchedActorLocationReliable, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000018, "Member 'BP_AJBCloseRangeSkill_C_SetLaunchedActorLocationReliable::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_SetLaunchedActorLocationReliable, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBCloseRangeSkill_C_SetLaunchedActorLocationReliable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_SetLaunchedActorLocationReliable, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface) == 0x000028, "Member 'BP_AJBCloseRangeSkill_C_SetLaunchedActorLocationReliable::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_SetLaunchedActorLocationReliable, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'BP_AJBCloseRangeSkill_C_SetLaunchedActorLocationReliable::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_SetLaunchedActorLocationReliable, CallFunc_GetCloseRangeLaunchedActor_LaunchedActor) == 0x000040, "Member 'BP_AJBCloseRangeSkill_C_SetLaunchedActorLocationReliable::CallFunc_GetCloseRangeLaunchedActor_LaunchedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_SetLaunchedActorLocationReliable, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'BP_AJBCloseRangeSkill_C_SetLaunchedActorLocationReliable::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.GetLaunchedActorLocation
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBCloseRangeSkill_C_GetLaunchedActorLocation final
{
public:
	struct FVector                                ActorLocation;                                     // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCloseRangeLaunchedActor_LaunchedActor; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBInGameMovementComponent*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_GetLaunchedActorLocation) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_GetLaunchedActorLocation");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_GetLaunchedActorLocation) == 0x000050, "Wrong size on BP_AJBCloseRangeSkill_C_GetLaunchedActorLocation");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetLaunchedActorLocation, ActorLocation) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_GetLaunchedActorLocation::ActorLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetLaunchedActorLocation, CallFunc_GetOwnerStand_ReturnValue) == 0x000010, "Member 'BP_AJBCloseRangeSkill_C_GetLaunchedActorLocation::CallFunc_GetOwnerStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetLaunchedActorLocation, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000018, "Member 'BP_AJBCloseRangeSkill_C_GetLaunchedActorLocation::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetLaunchedActorLocation, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBCloseRangeSkill_C_GetLaunchedActorLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetLaunchedActorLocation, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface) == 0x000028, "Member 'BP_AJBCloseRangeSkill_C_GetLaunchedActorLocation::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetLaunchedActorLocation, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'BP_AJBCloseRangeSkill_C_GetLaunchedActorLocation::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetLaunchedActorLocation, CallFunc_GetCloseRangeLaunchedActor_LaunchedActor) == 0x000040, "Member 'BP_AJBCloseRangeSkill_C_GetLaunchedActorLocation::CallFunc_GetCloseRangeLaunchedActor_LaunchedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetLaunchedActorLocation, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'BP_AJBCloseRangeSkill_C_GetLaunchedActorLocation::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.UpdateStandRotation
// 0x0138 (0x0138 - 0x0000)
struct BP_AJBCloseRangeSkill_C_UpdateStandRotation final
{
public:
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue1;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckStandSeparation_bSeparation;         // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue1;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue2;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DuringTheWorld_Result;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue3;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetViewRotation_Rotation;                 // 0x0080(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameMovableStand_C*            K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand;  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x009C(0x000C)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x00A8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_UpdateStandRotation) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_UpdateStandRotation");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_UpdateStandRotation) == 0x000138, "Wrong size on BP_AJBCloseRangeSkill_C_UpdateStandRotation");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, CallFunc_GetOwnerCharacter_ReturnValue1) == 0x000008, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::CallFunc_GetOwnerCharacter_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, CallFunc_HasLocalSharedController_ReturnValue) == 0x000019, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, CallFunc_CheckStandSeparation_bSeparation) == 0x00001A, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::CallFunc_CheckStandSeparation_bSeparation' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, CallFunc_IsValid_ReturnValue) == 0x00001B, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, CallFunc_GetOwnerStand_ReturnValue) == 0x000020, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::CallFunc_GetOwnerStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000028, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, CallFunc_GetOwnerStand_ReturnValue1) == 0x000038, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::CallFunc_GetOwnerStand_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1) == 0x000040, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, CallFunc_GetOwnerCharacter_ReturnValue2) == 0x000050, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::CallFunc_GetOwnerCharacter_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, CallFunc_HasLocalSharedController_ReturnValue1) == 0x000058, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, CallFunc_IsValid_ReturnValue1) == 0x000059, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, CallFunc_DuringTheWorld_Result) == 0x00005A, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::CallFunc_DuringTheWorld_Result' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, CallFunc_BooleanAND_ReturnValue1) == 0x00005B, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, CallFunc_Not_PreBool_ReturnValue) == 0x00005C, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, CallFunc_GetOwnerCharacter_ReturnValue3) == 0x000060, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::CallFunc_GetOwnerCharacter_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000068, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, K2Node_DynamicCast_bSuccess3) == 0x000070, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, CallFunc_GetOwner_ReturnValue) == 0x000078, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, CallFunc_GetViewRotation_Rotation) == 0x000080, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::CallFunc_GetViewRotation_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand) == 0x000090, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, K2Node_DynamicCast_bSuccess4) == 0x000098, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00009C, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0000A8, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_UpdateStandRotation, CallFunc_BooleanAND_ReturnValue2) == 0x000130, "Member 'BP_AJBCloseRangeSkill_C_UpdateStandRotation::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ChangeAttackRangeWithRate
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBCloseRangeSkill_C_ChangeAttackRangeWithRate final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_ChangeAttackRangeWithRate) == 0x000004, "Wrong alignment on BP_AJBCloseRangeSkill_C_ChangeAttackRangeWithRate");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_ChangeAttackRangeWithRate) == 0x000008, "Wrong size on BP_AJBCloseRangeSkill_C_ChangeAttackRangeWithRate");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ChangeAttackRangeWithRate, Rate) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_ChangeAttackRangeWithRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_ChangeAttackRangeWithRate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_AJBCloseRangeSkill_C_ChangeAttackRangeWithRate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.PlayHitSE
// 0x00A0 (0x00A0 - 0x0000)
struct BP_AJBCloseRangeSkill_C_PlayHitSE final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBlockedByAAP;                                     // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHeadShot;                                         // 0x0016(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue1;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue2;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base;    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue2;    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue2;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface;              // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bCharacter;                   // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bLeftAP;                      // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B[0x5];                                       // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_OwnHitParam_ParticleTagBlockedByAAP;      // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_OwnHitParam_SETagBlockedByAAP;            // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_PlayHitSE) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_PlayHitSE");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_PlayHitSE) == 0x0000A0, "Wrong size on BP_AJBCloseRangeSkill_C_PlayHitSE");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, HitActor) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, HitLocation) == 0x000008, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, SurfaceType) == 0x000014, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, bBlockedByAAP) == 0x000015, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, bHeadShot) == 0x000016, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000018, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000020, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, CallFunc_IsPlayerController_ReturnValue) == 0x000029, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::CallFunc_IsPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, CallFunc_HasLocalSharedController_ReturnValue) == 0x00002A, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, CallFunc_GetOwnerCharacter_ReturnValue1) == 0x000030, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::CallFunc_GetOwnerCharacter_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000038, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, K2Node_DynamicCast_bSuccess1) == 0x000040, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, CallFunc_IsPlayerController_ReturnValue1) == 0x000041, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::CallFunc_IsPlayerController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, CallFunc_GetOwnerCharacter_ReturnValue2) == 0x000048, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::CallFunc_GetOwnerCharacter_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, CallFunc_HasLocalSharedController_ReturnValue1) == 0x000050, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, CallFunc_BooleanAND_ReturnValue) == 0x000052, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, K2Node_DynamicCast_AsAJBIn_Game_Character_Base) == 0x000058, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::K2Node_DynamicCast_AsAJBIn_Game_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, K2Node_DynamicCast_bSuccess2) == 0x000060, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000068, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, CallFunc_HasLocalSharedController_ReturnValue2) == 0x000070, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::CallFunc_HasLocalSharedController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, CallFunc_IsPlayerController_ReturnValue2) == 0x000071, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::CallFunc_IsPlayerController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, K2Node_DynamicCast_AsBI_AJBInterface) == 0x000078, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::K2Node_DynamicCast_AsBI_AJBInterface' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, K2Node_DynamicCast_bSuccess3) == 0x000088, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, CallFunc_OwnHitParam_bCharacter) == 0x000089, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::CallFunc_OwnHitParam_bCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, CallFunc_OwnHitParam_bLeftAP) == 0x00008A, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::CallFunc_OwnHitParam_bLeftAP' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, CallFunc_OwnHitParam_ParticleTagBlockedByAAP) == 0x000090, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::CallFunc_OwnHitParam_ParticleTagBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayHitSE, CallFunc_OwnHitParam_SETagBlockedByAAP) == 0x000098, "Member 'BP_AJBCloseRangeSkill_C_PlayHitSE::CallFunc_OwnHitParam_SETagBlockedByAAP' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.PlayRushSE
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBCloseRangeSkill_C_PlayRushSE final
{
public:
	class USceneComponent*                        AttachComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestGion_AkComponent__LocalOnly_;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_PlayRushSE) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_PlayRushSE");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_PlayRushSE) == 0x000030, "Wrong size on BP_AJBCloseRangeSkill_C_PlayRushSE");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayRushSE, AttachComponent) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_PlayRushSE::AttachComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayRushSE, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBCloseRangeSkill_C_PlayRushSE::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayRushSE, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'BP_AJBCloseRangeSkill_C_PlayRushSE::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayRushSE, CallFunc_RequestGion_AkComponent__LocalOnly_) == 0x000020, "Member 'BP_AJBCloseRangeSkill_C_PlayRushSE::CallFunc_RequestGion_AkComponent__LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_PlayRushSE, CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_) == 0x000028, "Member 'BP_AJBCloseRangeSkill_C_PlayRushSE::CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.RequestHitWaitGion
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBCloseRangeSkill_C_RequestHitWaitGion final
{
public:
	bool                                          bHit;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_RequestHitWaitGion) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_RequestHitWaitGion");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_RequestHitWaitGion) == 0x000030, "Wrong size on BP_AJBCloseRangeSkill_C_RequestHitWaitGion");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_RequestHitWaitGion, bHit) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_RequestHitWaitGion::bHit' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_RequestHitWaitGion, HitLocation) == 0x000004, "Member 'BP_AJBCloseRangeSkill_C_RequestHitWaitGion::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_RequestHitWaitGion, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_AJBCloseRangeSkill_C_RequestHitWaitGion::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_RequestHitWaitGion, Temp_bool_Variable) == 0x000011, "Member 'BP_AJBCloseRangeSkill_C_RequestHitWaitGion::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_RequestHitWaitGion, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000018, "Member 'BP_AJBCloseRangeSkill_C_RequestHitWaitGion::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_RequestHitWaitGion, K2Node_Select_Default) == 0x000020, "Member 'BP_AJBCloseRangeSkill_C_RequestHitWaitGion::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_RequestHitWaitGion, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000028, "Member 'BP_AJBCloseRangeSkill_C_RequestHitWaitGion::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.GetPoliticDamage
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBCloseRangeSkill_C_GetPoliticDamage final
{
public:
	bool                                          bHeadShot;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Damage_0;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempDamage;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSeparation_IsSeparate;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select1_Default;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_GetPoliticDamage) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_GetPoliticDamage");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_GetPoliticDamage) == 0x000038, "Wrong size on BP_AJBCloseRangeSkill_C_GetPoliticDamage");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetPoliticDamage, bHeadShot) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_GetPoliticDamage::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetPoliticDamage, Damage_0) == 0x000004, "Member 'BP_AJBCloseRangeSkill_C_GetPoliticDamage::Damage_0' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetPoliticDamage, TempDamage) == 0x000008, "Member 'BP_AJBCloseRangeSkill_C_GetPoliticDamage::TempDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetPoliticDamage, CallFunc_GetOwnerStand_ReturnValue) == 0x000010, "Member 'BP_AJBCloseRangeSkill_C_GetPoliticDamage::CallFunc_GetOwnerStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetPoliticDamage, Temp_bool_Variable) == 0x000018, "Member 'BP_AJBCloseRangeSkill_C_GetPoliticDamage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetPoliticDamage, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000020, "Member 'BP_AJBCloseRangeSkill_C_GetPoliticDamage::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetPoliticDamage, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBCloseRangeSkill_C_GetPoliticDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetPoliticDamage, CallFunc_CheckSeparation_IsSeparate) == 0x000029, "Member 'BP_AJBCloseRangeSkill_C_GetPoliticDamage::CallFunc_CheckSeparation_IsSeparate' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetPoliticDamage, Temp_bool_Variable1) == 0x00002A, "Member 'BP_AJBCloseRangeSkill_C_GetPoliticDamage::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetPoliticDamage, K2Node_Select_Default) == 0x00002C, "Member 'BP_AJBCloseRangeSkill_C_GetPoliticDamage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetPoliticDamage, K2Node_Select1_Default) == 0x000030, "Member 'BP_AJBCloseRangeSkill_C_GetPoliticDamage::K2Node_Select1_Default' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.TryDestroyDashParticle
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBCloseRangeSkill_C_TryDestroyDashParticle final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_TryDestroyDashParticle) == 0x000001, "Wrong alignment on BP_AJBCloseRangeSkill_C_TryDestroyDashParticle");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_TryDestroyDashParticle) == 0x000001, "Wrong size on BP_AJBCloseRangeSkill_C_TryDestroyDashParticle");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_TryDestroyDashParticle, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_TryDestroyDashParticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.GetDashParticleTag
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBCloseRangeSkill_C_GetDashParticleTag final
{
public:
	struct FGameplayTag                           DashParticleTag_0;                                 // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStageDark_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_GetDashParticleTag) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_GetDashParticleTag");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_GetDashParticleTag) == 0x000018, "Wrong size on BP_AJBCloseRangeSkill_C_GetDashParticleTag");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetDashParticleTag, DashParticleTag_0) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_GetDashParticleTag::DashParticleTag_0' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetDashParticleTag, CallFunc_IsStageDark_ReturnValue) == 0x000008, "Member 'BP_AJBCloseRangeSkill_C_GetDashParticleTag::CallFunc_IsStageDark_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetDashParticleTag, Temp_bool_Variable) == 0x000009, "Member 'BP_AJBCloseRangeSkill_C_GetDashParticleTag::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetDashParticleTag, CallFunc_IsGameplayTagValid_ReturnValue) == 0x00000A, "Member 'BP_AJBCloseRangeSkill_C_GetDashParticleTag::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetDashParticleTag, K2Node_Select_Default) == 0x000010, "Member 'BP_AJBCloseRangeSkill_C_GetDashParticleTag::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.CheckHeadShot
// 0x01A8 (0x01A8 - 0x0000)
struct BP_AJBCloseRangeSkill_C_CheckHeadShot final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageActor_0;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHeadShot;                                         // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array1;                           // 0x0050(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x006C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_AJBMultiSphereTraceForObjects_Deprecated__OutHits; // 0x0078(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_AJBMultiSphereTraceForObjects_Deprecated__ReturnValue; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0098(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x012C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0138(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0144(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0150(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0188(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0194(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_CheckHeadShot) == 0x000008, "Wrong alignment on BP_AJBCloseRangeSkill_C_CheckHeadShot");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_CheckHeadShot) == 0x0001A8, "Wrong size on BP_AJBCloseRangeSkill_C_CheckHeadShot");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, HitActor) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, DamageActor_0) == 0x000008, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::DamageActor_0' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, HitLocation) == 0x000010, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, bHeadShot) == 0x00001C, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_GetActorForwardVector_ReturnValue) == 0x000020, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, K2Node_MakeArray_Array1) == 0x000050, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_Add_VectorVector_ReturnValue) == 0x00006C, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_AJBMultiSphereTraceForObjects_Deprecated__OutHits) == 0x000078, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_AJBMultiSphereTraceForObjects_Deprecated__OutHits' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_AJBMultiSphereTraceForObjects_Deprecated__ReturnValue) == 0x000088, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_AJBMultiSphereTraceForObjects_Deprecated__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_BreakHitResult_bBlockingHit) == 0x000120, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_BreakHitResult_bInitialOverlap) == 0x000121, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_BreakHitResult_Time) == 0x000124, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_BreakHitResult_Distance) == 0x000128, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_BreakHitResult_Location) == 0x00012C, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_BreakHitResult_ImpactPoint) == 0x000138, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_BreakHitResult_Normal) == 0x000144, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_BreakHitResult_ImpactNormal) == 0x000150, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_BreakHitResult_PhysMat) == 0x000160, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_BreakHitResult_HitActor) == 0x000168, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_BreakHitResult_HitComponent) == 0x000170, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_BreakHitResult_HitBoneName) == 0x000178, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_BreakHitResult_HitItem) == 0x000180, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_BreakHitResult_FaceIndex) == 0x000184, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_BreakHitResult_TraceStart) == 0x000188, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_BreakHitResult_TraceEnd) == 0x000194, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_CheckHeadShot, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001A0, "Member 'BP_AJBCloseRangeSkill_C_CheckHeadShot::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.GetSkillAttackRange
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBCloseRangeSkill_C_GetSkillAttackRange final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloseRangeSkill_C_GetSkillAttackRange) == 0x000004, "Wrong alignment on BP_AJBCloseRangeSkill_C_GetSkillAttackRange");
static_assert(sizeof(BP_AJBCloseRangeSkill_C_GetSkillAttackRange) == 0x000004, "Wrong size on BP_AJBCloseRangeSkill_C_GetSkillAttackRange");
static_assert(offsetof(BP_AJBCloseRangeSkill_C_GetSkillAttackRange, ReturnValue) == 0x000000, "Member 'BP_AJBCloseRangeSkill_C_GetSkillAttackRange::ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBActionBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AJBComponentBase_classes.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBActionBase.BP_AJBActionBase_C
// 0x0020 (0x0110 - 0x00F0)
class UBP_AJBActionBase_C : public UBP_AJBComponentBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F0(0x0008)(Transient, DuplicateTransient)
	bool                                          bDebugPrintTiming;                                 // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         CurrentState;                                      // 0x00F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bExecSuperActivate;                                // 0x00FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bUseMulticast;                                     // 0x00FB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Rep_CurrentState;                                  // 0x00FC(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StateTime;                                         // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDuringTheWorld;                                   // 0x0104(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bShouldRestoreActionState;                         // 0x0105(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bMulticastHasCome;                                 // 0x0106(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FAJBActionInfo                         ActionInfo;                                        // 0x0107(0x0002)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)

public:
	void ExecuteUbergraph_BP_AJBActionBase(int32 EntryPoint);
	void OnSetViewTargetToNewSpectator();
	void StateBeginPlay(bool bShouldRestore, bool bUseNextState, uint8 NextState);
	void MC_CancelActionServer();
	void CancelActionServer();
	void OnDisconnected();
	void ReceiveBeginPlay();
	void ActionCancel_All();
	void MC_ActionCancel();
	void ROS_ActionCancel();
	void ActionCancel_Local();
	void OnCancel();
	void OnInactiveAction_OnLocal();
	void OnActiveAction_OnLocal();
	void ChangeActionActivity(bool bIsActive_0, bool bTriggeredByStand);
	void MC_ChangeActionActivity(bool bIsActive_0, bool bTriggeredByStand);
	void Blanked_ChangeActionActivity(bool bIsActive_0, bool bTriggeredByStand);
	void ReceiveTick(float DeltaSeconds);
	void InactiveAction();
	void ActiveAction(bool bTriggeredByStand);
	void OnActionInactivate(bool bTriggeredByStand);
	void OnActionActivate(bool bTriggeredByStand);
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void OnRelatedCharacterBecomeLastSurvivor();
	void ChangeState(uint8 NextState, bool bResetStateTime);
	void CheckState(uint8 State, bool* bMatch);
	void CheckActive(bool* bActive);
	void OnRep_Rep_CurrentState();
	void OnRep_ActionInfo();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBActionBase_C">();
	}
	static class UBP_AJBActionBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBActionBase_C>();
	}
};
static_assert(alignof(UBP_AJBActionBase_C) == 0x000008, "Wrong alignment on UBP_AJBActionBase_C");
static_assert(sizeof(UBP_AJBActionBase_C) == 0x000110, "Wrong size on UBP_AJBActionBase_C");
static_assert(offsetof(UBP_AJBActionBase_C, UberGraphFrame) == 0x0000F0, "Member 'UBP_AJBActionBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AJBActionBase_C, bDebugPrintTiming) == 0x0000F8, "Member 'UBP_AJBActionBase_C::bDebugPrintTiming' has a wrong offset!");
static_assert(offsetof(UBP_AJBActionBase_C, CurrentState) == 0x0000F9, "Member 'UBP_AJBActionBase_C::CurrentState' has a wrong offset!");
static_assert(offsetof(UBP_AJBActionBase_C, bExecSuperActivate) == 0x0000FA, "Member 'UBP_AJBActionBase_C::bExecSuperActivate' has a wrong offset!");
static_assert(offsetof(UBP_AJBActionBase_C, bUseMulticast) == 0x0000FB, "Member 'UBP_AJBActionBase_C::bUseMulticast' has a wrong offset!");
static_assert(offsetof(UBP_AJBActionBase_C, Rep_CurrentState) == 0x0000FC, "Member 'UBP_AJBActionBase_C::Rep_CurrentState' has a wrong offset!");
static_assert(offsetof(UBP_AJBActionBase_C, StateTime) == 0x000100, "Member 'UBP_AJBActionBase_C::StateTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBActionBase_C, bDuringTheWorld) == 0x000104, "Member 'UBP_AJBActionBase_C::bDuringTheWorld' has a wrong offset!");
static_assert(offsetof(UBP_AJBActionBase_C, bShouldRestoreActionState) == 0x000105, "Member 'UBP_AJBActionBase_C::bShouldRestoreActionState' has a wrong offset!");
static_assert(offsetof(UBP_AJBActionBase_C, bMulticastHasCome) == 0x000106, "Member 'UBP_AJBActionBase_C::bMulticastHasCome' has a wrong offset!");
static_assert(offsetof(UBP_AJBActionBase_C, ActionInfo) == 0x000107, "Member 'UBP_AJBActionBase_C::ActionInfo' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SequencerNotifyFade

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_SequencerTrackBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SequencerNotifyFade.BP_SequencerNotifyFade_C
// 0x0010 (0x0348 - 0x0338)
class ABP_SequencerNotifyFade_C final : public ABP_SequencerTrackBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_SequencerNotifyFade_C;           // 0x0338(0x0008)(Transient, DuplicateTransient)
	bool                                          bFadeInFlag;                                       // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FadeTimeSecond;                                    // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SequencerNotifyFade(int32 EntryPoint);
	void Finished_111D18E44A96B86DBB23D48474C7CE49();
	void Finished_E24BA0104DF6A31801249C93000BA0B6();
	void ReceiveBeginPlay();
	void SkipTrack();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SequencerNotifyFade_C">();
	}
	static class ABP_SequencerNotifyFade_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SequencerNotifyFade_C>();
	}
};
static_assert(alignof(ABP_SequencerNotifyFade_C) == 0x000008, "Wrong alignment on ABP_SequencerNotifyFade_C");
static_assert(sizeof(ABP_SequencerNotifyFade_C) == 0x000348, "Wrong size on ABP_SequencerNotifyFade_C");
static_assert(offsetof(ABP_SequencerNotifyFade_C, UberGraphFrame_BP_SequencerNotifyFade_C) == 0x000338, "Member 'ABP_SequencerNotifyFade_C::UberGraphFrame_BP_SequencerNotifyFade_C' has a wrong offset!");
static_assert(offsetof(ABP_SequencerNotifyFade_C, bFadeInFlag) == 0x000340, "Member 'ABP_SequencerNotifyFade_C::bFadeInFlag' has a wrong offset!");
static_assert(offsetof(ABP_SequencerNotifyFade_C, FadeTimeSecond) == 0x000344, "Member 'ABP_SequencerNotifyFade_C::FadeTimeSecond' has a wrong offset!");

}


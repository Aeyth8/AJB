#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_RewardEffect

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_RewardEffect.WB_RewardEffect_C.ExecuteUbergraph_WB_RewardEffect
// 0x0048 (0x0048 - 0x0000)
struct WB_RewardEffect_C_ExecuteUbergraph_WB_RewardEffect final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Rarity;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x000C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_RewardEffect_C_ExecuteUbergraph_WB_RewardEffect) == 0x000004, "Wrong alignment on WB_RewardEffect_C_ExecuteUbergraph_WB_RewardEffect");
static_assert(sizeof(WB_RewardEffect_C_ExecuteUbergraph_WB_RewardEffect) == 0x000048, "Wrong size on WB_RewardEffect_C_ExecuteUbergraph_WB_RewardEffect");
static_assert(offsetof(WB_RewardEffect_C_ExecuteUbergraph_WB_RewardEffect, EntryPoint) == 0x000000, "Member 'WB_RewardEffect_C_ExecuteUbergraph_WB_RewardEffect::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_RewardEffect_C_ExecuteUbergraph_WB_RewardEffect, K2Node_CustomEvent_Rarity) == 0x000004, "Member 'WB_RewardEffect_C_ExecuteUbergraph_WB_RewardEffect::K2Node_CustomEvent_Rarity' has a wrong offset!");
static_assert(offsetof(WB_RewardEffect_C_ExecuteUbergraph_WB_RewardEffect, K2Node_SwitchInteger_CmpSuccess) == 0x000008, "Member 'WB_RewardEffect_C_ExecuteUbergraph_WB_RewardEffect::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_RewardEffect_C_ExecuteUbergraph_WB_RewardEffect, K2Node_Event_MyGeometry) == 0x00000C, "Member 'WB_RewardEffect_C_ExecuteUbergraph_WB_RewardEffect::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_RewardEffect_C_ExecuteUbergraph_WB_RewardEffect, K2Node_Event_InDeltaTime) == 0x000044, "Member 'WB_RewardEffect_C_ExecuteUbergraph_WB_RewardEffect::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function WB_RewardEffect.WB_RewardEffect_C.PlayRewardAnimation
// 0x0004 (0x0004 - 0x0000)
struct WB_RewardEffect_C_PlayRewardAnimation final
{
public:
	int32                                         Rarity;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_RewardEffect_C_PlayRewardAnimation) == 0x000004, "Wrong alignment on WB_RewardEffect_C_PlayRewardAnimation");
static_assert(sizeof(WB_RewardEffect_C_PlayRewardAnimation) == 0x000004, "Wrong size on WB_RewardEffect_C_PlayRewardAnimation");
static_assert(offsetof(WB_RewardEffect_C_PlayRewardAnimation, Rarity) == 0x000000, "Member 'WB_RewardEffect_C_PlayRewardAnimation::Rarity' has a wrong offset!");

// Function WB_RewardEffect.WB_RewardEffect_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_RewardEffect_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_RewardEffect_C_Tick) == 0x000004, "Wrong alignment on WB_RewardEffect_C_Tick");
static_assert(sizeof(WB_RewardEffect_C_Tick) == 0x00003C, "Wrong size on WB_RewardEffect_C_Tick");
static_assert(offsetof(WB_RewardEffect_C_Tick, MyGeometry) == 0x000000, "Member 'WB_RewardEffect_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_RewardEffect_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_RewardEffect_C_Tick::InDeltaTime' has a wrong offset!");

}


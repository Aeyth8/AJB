#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameSceneCamera

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameSceneCamera.BP_AJBInGameSceneCamera_C.ExecuteUbergraph_BP_AJBInGameSceneCamera
// 0x00B8 (0x00B8 - 0x0000)
struct BP_AJBInGameSceneCamera_C_ExecuteUbergraph_BP_AJBInGameSceneCamera final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0024(0x000C)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0030(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBInGameSceneCamera_C_ExecuteUbergraph_BP_AJBInGameSceneCamera) == 0x000008, "Wrong alignment on BP_AJBInGameSceneCamera_C_ExecuteUbergraph_BP_AJBInGameSceneCamera");
static_assert(sizeof(BP_AJBInGameSceneCamera_C_ExecuteUbergraph_BP_AJBInGameSceneCamera) == 0x0000B8, "Wrong size on BP_AJBInGameSceneCamera_C_ExecuteUbergraph_BP_AJBInGameSceneCamera");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_ExecuteUbergraph_BP_AJBInGameSceneCamera, EntryPoint) == 0x000000, "Member 'BP_AJBInGameSceneCamera_C_ExecuteUbergraph_BP_AJBInGameSceneCamera::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_ExecuteUbergraph_BP_AJBInGameSceneCamera, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_AJBInGameSceneCamera_C_ExecuteUbergraph_BP_AJBInGameSceneCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_ExecuteUbergraph_BP_AJBInGameSceneCamera, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_AJBInGameSceneCamera_C_ExecuteUbergraph_BP_AJBInGameSceneCamera::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_ExecuteUbergraph_BP_AJBInGameSceneCamera, CallFunc_GetSocketLocation_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameSceneCamera_C_ExecuteUbergraph_BP_AJBInGameSceneCamera::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_ExecuteUbergraph_BP_AJBInGameSceneCamera, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_AJBInGameSceneCamera_C_ExecuteUbergraph_BP_AJBInGameSceneCamera::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_ExecuteUbergraph_BP_AJBInGameSceneCamera, CallFunc_FindLookAtRotation_ReturnValue) == 0x000024, "Member 'BP_AJBInGameSceneCamera_C_ExecuteUbergraph_BP_AJBInGameSceneCamera::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_ExecuteUbergraph_BP_AJBInGameSceneCamera, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000030, "Member 'BP_AJBInGameSceneCamera_C_ExecuteUbergraph_BP_AJBInGameSceneCamera::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

// Function BP_AJBInGameSceneCamera.BP_AJBInGameSceneCamera_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameSceneCamera_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSceneCamera_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBInGameSceneCamera_C_ReceiveTick");
static_assert(sizeof(BP_AJBInGameSceneCamera_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBInGameSceneCamera_C_ReceiveTick");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameSceneCamera_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameSceneCamera.BP_AJBInGameSceneCamera_C.GetDegreeFromIndex_OneWay
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_OneWay final
{
public:
	int32                                         PriorityIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IntervalDegree;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Degree;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_OneWay) == 0x000004, "Wrong alignment on BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_OneWay");
static_assert(sizeof(BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_OneWay) == 0x000010, "Wrong size on BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_OneWay");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_OneWay, PriorityIndex) == 0x000000, "Member 'BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_OneWay::PriorityIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_OneWay, IntervalDegree) == 0x000004, "Member 'BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_OneWay::IntervalDegree' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_OneWay, Degree) == 0x000008, "Member 'BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_OneWay::Degree' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_OneWay, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_OneWay::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameSceneCamera.BP_AJBInGameSceneCamera_C.GetDegreeFromIndex_TickTack
// 0x0034 (0x0034 - 0x0000)
struct BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack final
{
public:
	int32                                         PriorityIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FirstIntervalDegree;                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LaterIntervalDegree_;                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Degree;                                            // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable1;                              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack) == 0x000004, "Wrong alignment on BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack");
static_assert(sizeof(BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack) == 0x000034, "Wrong size on BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack, PriorityIndex) == 0x000000, "Member 'BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack::PriorityIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack, FirstIntervalDegree) == 0x000004, "Member 'BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack::FirstIntervalDegree' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack, LaterIntervalDegree_) == 0x000008, "Member 'BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack::LaterIntervalDegree_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack, Degree) == 0x00000C, "Member 'BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack::Degree' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack, Temp_float_Variable) == 0x000010, "Member 'BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack, K2Node_MathExpression_ReturnValue) == 0x000014, "Member 'BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000018, "Member 'BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack, CallFunc_Percent_IntInt_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack, K2Node_SwitchInteger_CmpSuccess) == 0x000020, "Member 'BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack, Temp_float_Variable1) == 0x000024, "Member 'BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack, Temp_int_Variable) == 0x000028, "Member 'BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack, K2Node_Select_Default) == 0x00002C, "Member 'BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000030, "Member 'BP_AJBInGameSceneCamera_C_GetDegreeFromIndex_TickTack::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");

// Function BP_AJBInGameSceneCamera.BP_AJBInGameSceneCamera_C.SearchProperLocationAndRotation
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBInGameSceneCamera_C_SearchProperLocationAndRotation final
{
public:
	class AAJBInGameCharacterBase*                TargetCharacterBase;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StartTargetSocketName;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   EndTargetSocketName;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFound;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                StartLocation_0;                                   // 0x001C(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               StartRotation_0;                                   // 0x0028(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FVector                                EndLocation_0;                                     // 0x0034(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               EndRotation_0;                                     // 0x0040(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameSceneCamera_C_SearchProperLocationAndRotation) == 0x000008, "Wrong alignment on BP_AJBInGameSceneCamera_C_SearchProperLocationAndRotation");
static_assert(sizeof(BP_AJBInGameSceneCamera_C_SearchProperLocationAndRotation) == 0x000050, "Wrong size on BP_AJBInGameSceneCamera_C_SearchProperLocationAndRotation");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_SearchProperLocationAndRotation, TargetCharacterBase) == 0x000000, "Member 'BP_AJBInGameSceneCamera_C_SearchProperLocationAndRotation::TargetCharacterBase' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_SearchProperLocationAndRotation, StartTargetSocketName) == 0x000008, "Member 'BP_AJBInGameSceneCamera_C_SearchProperLocationAndRotation::StartTargetSocketName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_SearchProperLocationAndRotation, EndTargetSocketName) == 0x000010, "Member 'BP_AJBInGameSceneCamera_C_SearchProperLocationAndRotation::EndTargetSocketName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_SearchProperLocationAndRotation, bFound) == 0x000018, "Member 'BP_AJBInGameSceneCamera_C_SearchProperLocationAndRotation::bFound' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_SearchProperLocationAndRotation, StartLocation_0) == 0x00001C, "Member 'BP_AJBInGameSceneCamera_C_SearchProperLocationAndRotation::StartLocation_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_SearchProperLocationAndRotation, StartRotation_0) == 0x000028, "Member 'BP_AJBInGameSceneCamera_C_SearchProperLocationAndRotation::StartRotation_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_SearchProperLocationAndRotation, EndLocation_0) == 0x000034, "Member 'BP_AJBInGameSceneCamera_C_SearchProperLocationAndRotation::EndLocation_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_SearchProperLocationAndRotation, EndRotation_0) == 0x000040, "Member 'BP_AJBInGameSceneCamera_C_SearchProperLocationAndRotation::EndRotation_0' has a wrong offset!");

// Function BP_AJBInGameSceneCamera.BP_AJBInGameSceneCamera_C.PreprocessToDeterminePath
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath final
{
public:
	class AAJBInGameCharacterBase*                TargetCharacterBase;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StartTargetSocketName;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   EndTargetSocketName;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDetermined;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SearchProperLocationAndRotation_bFound;   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SearchProperLocationAndRotation_StartLocation; // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_SearchProperLocationAndRotation_StartRotation; // 0x0028(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_SearchProperLocationAndRotation_EndLocation; // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_SearchProperLocationAndRotation_EndRotation; // 0x0040(0x000C)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath) == 0x000008, "Wrong alignment on BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath");
static_assert(sizeof(BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath) == 0x000050, "Wrong size on BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath, TargetCharacterBase) == 0x000000, "Member 'BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath::TargetCharacterBase' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath, StartTargetSocketName) == 0x000008, "Member 'BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath::StartTargetSocketName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath, EndTargetSocketName) == 0x000010, "Member 'BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath::EndTargetSocketName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath, bDetermined) == 0x000018, "Member 'BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath::bDetermined' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath, CallFunc_SearchProperLocationAndRotation_bFound) == 0x000019, "Member 'BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath::CallFunc_SearchProperLocationAndRotation_bFound' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath, CallFunc_SearchProperLocationAndRotation_StartLocation) == 0x00001C, "Member 'BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath::CallFunc_SearchProperLocationAndRotation_StartLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath, CallFunc_SearchProperLocationAndRotation_StartRotation) == 0x000028, "Member 'BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath::CallFunc_SearchProperLocationAndRotation_StartRotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath, CallFunc_SearchProperLocationAndRotation_EndLocation) == 0x000034, "Member 'BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath::CallFunc_SearchProperLocationAndRotation_EndLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath, CallFunc_SearchProperLocationAndRotation_EndRotation) == 0x000040, "Member 'BP_AJBInGameSceneCamera_C_PreprocessToDeterminePath::CallFunc_SearchProperLocationAndRotation_EndRotation' has a wrong offset!");

// Function BP_AJBInGameSceneCamera.BP_AJBInGameSceneCamera_C.Move
// 0x0150 (0x0150 - 0x0000)
struct BP_AJBInGameSceneCamera_C_Move final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ClampedRate;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetStartLocation_StartLocation;           // 0x0008(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEndLocation_EndLocation;               // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0034(0x000C)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0040(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x00C8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBInGameSceneCamera_C_Move) == 0x000008, "Wrong alignment on BP_AJBInGameSceneCamera_C_Move");
static_assert(sizeof(BP_AJBInGameSceneCamera_C_Move) == 0x000150, "Wrong size on BP_AJBInGameSceneCamera_C_Move");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_Move, Rate) == 0x000000, "Member 'BP_AJBInGameSceneCamera_C_Move::Rate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_Move, ClampedRate) == 0x000004, "Member 'BP_AJBInGameSceneCamera_C_Move::ClampedRate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_Move, CallFunc_GetStartLocation_StartLocation) == 0x000008, "Member 'BP_AJBInGameSceneCamera_C_Move::CallFunc_GetStartLocation_StartLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_Move, CallFunc_FClamp_ReturnValue) == 0x000014, "Member 'BP_AJBInGameSceneCamera_C_Move::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_Move, CallFunc_GetEndLocation_EndLocation) == 0x000018, "Member 'BP_AJBInGameSceneCamera_C_Move::CallFunc_GetEndLocation_EndLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_Move, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'BP_AJBInGameSceneCamera_C_Move::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_Move, CallFunc_VLerp_ReturnValue) == 0x000028, "Member 'BP_AJBInGameSceneCamera_C_Move::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_Move, CallFunc_RLerp_ReturnValue) == 0x000034, "Member 'BP_AJBInGameSceneCamera_C_Move::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_Move, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000040, "Member 'BP_AJBInGameSceneCamera_C_Move::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_Move, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0000C8, "Member 'BP_AJBInGameSceneCamera_C_Move::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

// Function BP_AJBInGameSceneCamera.BP_AJBInGameSceneCamera_C.GetEndLocation
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameSceneCamera_C_GetEndLocation final
{
public:
	struct FVector                                EndLocation_0;                                     // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSceneCamera_C_GetEndLocation) == 0x000004, "Wrong alignment on BP_AJBInGameSceneCamera_C_GetEndLocation");
static_assert(sizeof(BP_AJBInGameSceneCamera_C_GetEndLocation) == 0x00000C, "Wrong size on BP_AJBInGameSceneCamera_C_GetEndLocation");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_GetEndLocation, EndLocation_0) == 0x000000, "Member 'BP_AJBInGameSceneCamera_C_GetEndLocation::EndLocation_0' has a wrong offset!");

// Function BP_AJBInGameSceneCamera.BP_AJBInGameSceneCamera_C.GetStartLocation
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameSceneCamera_C_GetStartLocation final
{
public:
	struct FVector                                StartLocation_0;                                   // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSceneCamera_C_GetStartLocation) == 0x000004, "Wrong alignment on BP_AJBInGameSceneCamera_C_GetStartLocation");
static_assert(sizeof(BP_AJBInGameSceneCamera_C_GetStartLocation) == 0x00000C, "Wrong size on BP_AJBInGameSceneCamera_C_GetStartLocation");
static_assert(offsetof(BP_AJBInGameSceneCamera_C_GetStartLocation, StartLocation_0) == 0x000000, "Member 'BP_AJBInGameSceneCamera_C_GetStartLocation::StartLocation_0' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SequencerPlaySEReceiver

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_SequencerTrackBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SequencerPlaySEReceiver.BP_SequencerPlaySEReceiver_C
// 0x0010 (0x0348 - 0x0338)
class ABP_SequencerPlaySEReceiver_C final : public ABP_SequencerTrackBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_SequencerPlaySEReceiver_C;       // 0x0338(0x0008)(Transient, DuplicateTransient)
	class UAkComponent*                           CurrentAkComponent;                                // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SequencerPlaySEReceiver(int32 EntryPoint);
	void OnPlaySE_Play_CS_IntoBoard();
	void OnPlaySE_Play_CS_Intro();
	void OnPlaySE_Play_Voice_AllMenbersPlaceChip_1_DBI();
	void OnPlaySE_Play_Voice_AllMenbersPlaceChip_2_DBI();
	void OnPlaySE_Play_Voice_MatchCompletePlayerOnly_DBI();
	void OnPlaySE_Play_Voice_MatchCompleteUnder20_DBI();
	void OnPlaySE_Play_Voice_MatchingStandbyScreenTimeOut_DBI();
	void OnPlaySE_Play_Voice_MatchingStandbyScreenTransition_1_DBI();
	void OnPlaySE_Play_Voice_MatchingStandbyScreenTransition_2_DBI();
	void OnPlaySE_Play_Voice_MatchIntro_DBI();
	void OnPlaySE_Play_Voice_PlayerDonotPlaceChip_1_DBI();
	void OnPlaySE_Play_Voice_PlayerDonotPlaceChip_2_DBI();
	void OnPlaySE_Play_Voice_PlayerPlaceChip_1_DBI();
	void OnPlaySE_Play_Voice_PlayerPlaceChip_2_DBI();
	void OnPlaySE_Play_Voice_PlayerPlaceChip_3_DBI();
	void OnPlaySE_Play_Voice_PlayerPlacedChipWaitOtherPlayers_DBI();
	void OnPlaySE_Play_Voice_StartPointSelectScreemDirection_1_DBI();
	void OnPlaySE_Play_Voice_StartPointSelectScreemDirection_2_DBI();
	void OnPlaySE_Play_Voice_StartPointSelectScreemDirection_3_DBI();
	void OnPlaySE_Play_Voice_TrainingIntro_DBI();
	void OnPlaySE_Play_Voice_TrainingIntro_Easy_DBI();
	void OnPlaySE_Play_Voice_TrainingIntro_Hard_DBI();
	void OnPlaySE_Play_Voice_TrainingIntro_Normal_DBI();
	void OnPlaySE_Play_Voice_TrainingIntro_VeryHard_DBI();
	void OnPlaySE_Play_Voice_TrainingRemainingOneThird_DBI();
	void OnPlaySE_Play_Voice_TrainingRemainingTwo_DBI();
	void OnPlaySE_Play_Voice_TutorialIntro_1_DBI();
	void OnPlaySE_Play_Voice_TutorialIntro_2_DBI();
	void OnPlaySE_Play_Voice_TutorialIntro_3_DBI();
	void OnPlaySE_Play_Voice_TutorialIntro_4_DBI();
	void SkipTrack();
	void StopSE();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SequencerPlaySEReceiver_C">();
	}
	static class ABP_SequencerPlaySEReceiver_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SequencerPlaySEReceiver_C>();
	}
};
static_assert(alignof(ABP_SequencerPlaySEReceiver_C) == 0x000008, "Wrong alignment on ABP_SequencerPlaySEReceiver_C");
static_assert(sizeof(ABP_SequencerPlaySEReceiver_C) == 0x000348, "Wrong size on ABP_SequencerPlaySEReceiver_C");
static_assert(offsetof(ABP_SequencerPlaySEReceiver_C, UberGraphFrame_BP_SequencerPlaySEReceiver_C) == 0x000338, "Member 'ABP_SequencerPlaySEReceiver_C::UberGraphFrame_BP_SequencerPlaySEReceiver_C' has a wrong offset!");
static_assert(offsetof(ABP_SequencerPlaySEReceiver_C, CurrentAkComponent) == 0x000340, "Member 'ABP_SequencerPlaySEReceiver_C::CurrentAkComponent' has a wrong offset!");

}


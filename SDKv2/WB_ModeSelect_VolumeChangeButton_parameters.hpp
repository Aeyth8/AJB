#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ModeSelect_VolumeChangeButton

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WB_ModeSelect_VolumeChangeButton.WB_ModeSelect_VolumeChangeButton_C.ExecuteUbergraph_WB_ModeSelect_VolumeChangeButton
// 0x0038 (0x0038 - 0x0000)
struct WB_ModeSelect_VolumeChangeButton_C_ExecuteUbergraph_WB_ModeSelect_VolumeChangeButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentVolumeRate_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_VolumeChangeButton_C_ExecuteUbergraph_WB_ModeSelect_VolumeChangeButton) == 0x000008, "Wrong alignment on WB_ModeSelect_VolumeChangeButton_C_ExecuteUbergraph_WB_ModeSelect_VolumeChangeButton");
static_assert(sizeof(WB_ModeSelect_VolumeChangeButton_C_ExecuteUbergraph_WB_ModeSelect_VolumeChangeButton) == 0x000038, "Wrong size on WB_ModeSelect_VolumeChangeButton_C_ExecuteUbergraph_WB_ModeSelect_VolumeChangeButton");
static_assert(offsetof(WB_ModeSelect_VolumeChangeButton_C_ExecuteUbergraph_WB_ModeSelect_VolumeChangeButton, EntryPoint) == 0x000000, "Member 'WB_ModeSelect_VolumeChangeButton_C_ExecuteUbergraph_WB_ModeSelect_VolumeChangeButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_VolumeChangeButton_C_ExecuteUbergraph_WB_ModeSelect_VolumeChangeButton, CallFunc_GetCurrentVolumeRate_ReturnValue) == 0x000004, "Member 'WB_ModeSelect_VolumeChangeButton_C_ExecuteUbergraph_WB_ModeSelect_VolumeChangeButton::CallFunc_GetCurrentVolumeRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_VolumeChangeButton_C_ExecuteUbergraph_WB_ModeSelect_VolumeChangeButton, K2Node_ComponentBoundEvent_Value) == 0x000008, "Member 'WB_ModeSelect_VolumeChangeButton_C_ExecuteUbergraph_WB_ModeSelect_VolumeChangeButton::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_VolumeChangeButton_C_ExecuteUbergraph_WB_ModeSelect_VolumeChangeButton, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WB_ModeSelect_VolumeChangeButton_C_ExecuteUbergraph_WB_ModeSelect_VolumeChangeButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_VolumeChangeButton_C_ExecuteUbergraph_WB_ModeSelect_VolumeChangeButton, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'WB_ModeSelect_VolumeChangeButton_C_ExecuteUbergraph_WB_ModeSelect_VolumeChangeButton::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_VolumeChangeButton_C_ExecuteUbergraph_WB_ModeSelect_VolumeChangeButton, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000028, "Member 'WB_ModeSelect_VolumeChangeButton_C_ExecuteUbergraph_WB_ModeSelect_VolumeChangeButton::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_VolumeChangeButton_C_ExecuteUbergraph_WB_ModeSelect_VolumeChangeButton, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'WB_ModeSelect_VolumeChangeButton_C_ExecuteUbergraph_WB_ModeSelect_VolumeChangeButton::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_VolumeChangeButton.WB_ModeSelect_VolumeChangeButton_C.BndEvt__Slider_Volume_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WB_ModeSelect_VolumeChangeButton_C_BndEvt__Slider_Volume_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ModeSelect_VolumeChangeButton_C_BndEvt__Slider_Volume_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WB_ModeSelect_VolumeChangeButton_C_BndEvt__Slider_Volume_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(WB_ModeSelect_VolumeChangeButton_C_BndEvt__Slider_Volume_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WB_ModeSelect_VolumeChangeButton_C_BndEvt__Slider_Volume_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(WB_ModeSelect_VolumeChangeButton_C_BndEvt__Slider_Volume_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'WB_ModeSelect_VolumeChangeButton_C_BndEvt__Slider_Volume_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function WB_ModeSelect_VolumeChangeButton.WB_ModeSelect_VolumeChangeButton_C.GetButton
// 0x0008 (0x0008 - 0x0000)
struct WB_ModeSelect_VolumeChangeButton_C_GetButton final
{
public:
	class UAJBButton*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ModeSelect_VolumeChangeButton_C_GetButton) == 0x000008, "Wrong alignment on WB_ModeSelect_VolumeChangeButton_C_GetButton");
static_assert(sizeof(WB_ModeSelect_VolumeChangeButton_C_GetButton) == 0x000008, "Wrong size on WB_ModeSelect_VolumeChangeButton_C_GetButton");
static_assert(offsetof(WB_ModeSelect_VolumeChangeButton_C_GetButton, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_VolumeChangeButton_C_GetButton::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_VolumeChangeButton.WB_ModeSelect_VolumeChangeButton_C.SetCurrentValueRate
// 0x0020 (0x0020 - 0x0000)
struct WB_ModeSelect_VolumeChangeButton_C_SetCurrentValueRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentVolumeRateLocal;                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ModeSelect_VolumeChangeButton_C_SetCurrentValueRate) == 0x000008, "Wrong alignment on WB_ModeSelect_VolumeChangeButton_C_SetCurrentValueRate");
static_assert(sizeof(WB_ModeSelect_VolumeChangeButton_C_SetCurrentValueRate) == 0x000020, "Wrong size on WB_ModeSelect_VolumeChangeButton_C_SetCurrentValueRate");
static_assert(offsetof(WB_ModeSelect_VolumeChangeButton_C_SetCurrentValueRate, Value) == 0x000000, "Member 'WB_ModeSelect_VolumeChangeButton_C_SetCurrentValueRate::Value' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_VolumeChangeButton_C_SetCurrentValueRate, CurrentVolumeRateLocal) == 0x000004, "Member 'WB_ModeSelect_VolumeChangeButton_C_SetCurrentValueRate::CurrentVolumeRateLocal' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_VolumeChangeButton_C_SetCurrentValueRate, CallFunc_GetAJBGameInstance_bSuccess) == 0x000008, "Member 'WB_ModeSelect_VolumeChangeButton_C_SetCurrentValueRate::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_VolumeChangeButton_C_SetCurrentValueRate, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000010, "Member 'WB_ModeSelect_VolumeChangeButton_C_SetCurrentValueRate::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_VolumeChangeButton_C_SetCurrentValueRate, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'WB_ModeSelect_VolumeChangeButton_C_SetCurrentValueRate::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_VolumeChangeButton.WB_ModeSelect_VolumeChangeButton_C.GetCurrentVolumeRate
// 0x0018 (0x0018 - 0x0000)
struct WB_ModeSelect_VolumeChangeButton_C_GetCurrentVolumeRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUserSettingVolumeRate_ReturnValue;     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ModeSelect_VolumeChangeButton_C_GetCurrentVolumeRate) == 0x000008, "Wrong alignment on WB_ModeSelect_VolumeChangeButton_C_GetCurrentVolumeRate");
static_assert(sizeof(WB_ModeSelect_VolumeChangeButton_C_GetCurrentVolumeRate) == 0x000018, "Wrong size on WB_ModeSelect_VolumeChangeButton_C_GetCurrentVolumeRate");
static_assert(offsetof(WB_ModeSelect_VolumeChangeButton_C_GetCurrentVolumeRate, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_VolumeChangeButton_C_GetCurrentVolumeRate::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_VolumeChangeButton_C_GetCurrentVolumeRate, CallFunc_GetAJBGameInstance_bSuccess) == 0x000004, "Member 'WB_ModeSelect_VolumeChangeButton_C_GetCurrentVolumeRate::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_VolumeChangeButton_C_GetCurrentVolumeRate, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000008, "Member 'WB_ModeSelect_VolumeChangeButton_C_GetCurrentVolumeRate::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_VolumeChangeButton_C_GetCurrentVolumeRate, CallFunc_GetUserSettingVolumeRate_ReturnValue) == 0x000010, "Member 'WB_ModeSelect_VolumeChangeButton_C_GetCurrentVolumeRate::CallFunc_GetUserSettingVolumeRate_ReturnValue' has a wrong offset!");

}


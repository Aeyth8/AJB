#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBDiverShootSkill

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.ExecuteUbergraph_BP_AJBDiverShootSkill
// 0x0450 (0x0450 - 0x0000)
struct BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName10;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue2;           // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& SkillTag, int32 SerialNumber, float AttackDistance, uint8 KilledCharacterId, bool bWithSeparatedStandAttack, bool bHitEnemysSeparatedStand, bool bFirstBlood, int32 UltimateSkillSerialNumberIfInEffect, float ElapsedTime, int32 DeadPlayerID, bool bIsLastDefeated, bool bPlayerKill, bool bSpecialKill)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName11;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue3;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate2;             // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue2;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName12;                   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate3;             // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue4;           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E7[0x1];                                       // 0x00E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaSeconds;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName1;                    // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate4;             // 0x0128(0x0010)(ZeroConstructor, NoDestructor)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate5;             // 0x0140(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_bCancel;                              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bRestore;                             // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeakVoice_bWillBeSpoken;            // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_156[0x2];                                      // 0x0156(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName2;                    // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToSpeakVoice_bWillBeSpoken1;           // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName3;                    // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate6;             // 0x0170(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate7;             // 0x0188(0x0010)(ZeroConstructor, NoDestructor)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue3;           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DuringTheWorld_Result;                    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A3[0x5];                                      // 0x01A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName4;                    // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable1;                               // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate8;             // 0x01C0(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         K2Node_Event_RepeatCount;                          // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bRedash;                              // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D2[0x6];                                      // 0x01D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue4;           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue1;               // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName13;                   // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName5;                    // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate9;             // 0x0228(0x0010)(ZeroConstructor, NoDestructor)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue2;               // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate10;            // 0x0240(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1;         // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName6;                    // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue1; // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestGion_AkComponent__LocalOnly_;      // 0x0278(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_; // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAJBSkillType                                 K2Node_CustomEvent_SkillType;                      // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282[0x2];                                      // 0x0282(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_HittedCharacterCount;           // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_BlockedCharacterCount;          // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InvalidatedCharacterCount;      // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate11;            // 0x0290(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAJBSkillType SkillType, int32 HittedCharacterCount, int32 BlockedCharacterCount, int32 InvalidatedCharacterCount)> K2Node_CreateDelegate_OutputDelegate12;            // 0x02B0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName7;                    // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_SkillTag;                       // 0x02C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SerialNumber;                   // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_AttackDistance;                 // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_KilledCharacterId;              // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWithSeparatedStandAttack;      // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bHitEnemysSeparatedStand;       // 0x02DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bFirstBlood;                    // 0x02DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_CustomEvent_UltimateSkillSerialNumberIfInEffect; // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_ElapsedTime;                    // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_DeadPlayerId;                   // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsLastDefeated;                // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bPlayerKill;                    // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bSpecialKill;                   // 0x02EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EB[0x5];                                      // 0x02EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate13;            // 0x02F0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName14;                   // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName8;                    // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue3;               // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand2;         // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate14;            // 0x0338(0x0010)(ZeroConstructor, NoDestructor)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue2; // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Location;                             // 0x0350(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Normal;                               // 0x035C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bCharacter;                           // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36A[0x6];                                      // 0x036A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0370(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DamageDecal_DiverShoot_C*           CallFunc_FinishSpawningActor_ReturnValue;          // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue8;                     // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName9;                    // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_HitActor;                             // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x03C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x03D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CuttingRate;                          // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_Event_SurfaceType;                          // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDisableDamage;                       // 0x03E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInvincible;                          // 0x03E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsPenetration;                       // 0x03E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bBlockedByAAP;                        // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bHeadShot;                            // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EA[0x6];                                      // 0x03EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate15;            // 0x03F0(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable2;                               // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue4;               // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand3;         // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate16;            // 0x0438(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect; // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill) == 0x000010, "Wrong alignment on BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill");
static_assert(sizeof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill) == 0x000450, "Wrong size on BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, EntryPoint) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000008, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_NotifyName10) == 0x000010, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_NotifyName10' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_GetOwnerCharacter_ReturnValue1) == 0x000038, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_GetOwnerCharacter_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_HasLocalSharedController_ReturnValue) == 0x000040, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_IsValid_ReturnValue1) == 0x000042, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_IsDedicatedServer_ReturnValue1) == 0x000043, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_BooleanAND_ReturnValue) == 0x000044, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_IsDedicatedServer_ReturnValue2) == 0x000045, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_IsDedicatedServer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CreateDelegate_OutputDelegate1) == 0x000048, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_NotifyName11) == 0x000058, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_NotifyName11' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_IsDedicatedServer_ReturnValue3) == 0x000060, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_IsDedicatedServer_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CreateDelegate_OutputDelegate2) == 0x000068, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_IsValid_ReturnValue2) == 0x000078, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_IsValid_ReturnValue3) == 0x000079, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_GetOwnerStand_ReturnValue) == 0x000080, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_GetOwnerStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_MakeLiteralByte_ReturnValue) == 0x000088, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000090, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_IsValid_ReturnValue4) == 0x000098, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_GetOwnerCharacter_ReturnValue2) == 0x0000A0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_GetOwnerCharacter_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_NotifyName12) == 0x0000A8, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_NotifyName12' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x0000B0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_DynamicCast_bSuccess1) == 0x0000B8, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CreateDelegate_OutputDelegate3) == 0x0000C0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_IsDedicatedServer_ReturnValue4) == 0x0000D0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_IsDedicatedServer_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_Operator) == 0x0000D8, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_Time) == 0x0000E0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_Timing) == 0x0000E4, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_bEnable) == 0x0000E5, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_bOperatorIsEmpty) == 0x0000E6, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, Temp_float_Variable) == 0x0000E8, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, Temp_float_Variable1) == 0x0000EC, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, Temp_bool_Variable) == 0x0000F0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_GetValidValue_ReturnValue) == 0x0000F1, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Select_Default) == 0x0000F4, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_SwitchEnum_CmpSuccess) == 0x0000F8, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_DeltaSeconds) == 0x0000FC, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_DeltaSeconds) == 0x000100, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000104, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_Add_FloatFloat_ReturnValue) == 0x000108, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, Temp_name_Variable) == 0x000110, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_NotifyName) == 0x000118, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_NotifyName1) == 0x000120, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_NotifyName1' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CreateDelegate_OutputDelegate4) == 0x000128, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000138, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CreateDelegate_OutputDelegate5) == 0x000140, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_bCancel) == 0x000150, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_bCancel' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_bRestore) == 0x000151, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_bRestore' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_TryToSpeakVoice_bWillBeSpoken) == 0x000152, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_TryToSpeakVoice_bWillBeSpoken' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_BooleanOR_ReturnValue) == 0x000153, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_Not_PreBool_ReturnValue) == 0x000154, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000155, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_NotifyName2) == 0x000158, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_NotifyName2' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_TryToSpeakVoice_bWillBeSpoken1) == 0x000160, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_TryToSpeakVoice_bWillBeSpoken1' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_NotifyName3) == 0x000168, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_NotifyName3' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CreateDelegate_OutputDelegate6) == 0x000170, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, Temp_int_Variable) == 0x000180, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CreateDelegate_OutputDelegate7) == 0x000188, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_GetOwnerCharacter_ReturnValue3) == 0x000198, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_GetOwnerCharacter_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_DuringTheWorld_Result) == 0x0001A0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_DuringTheWorld_Result' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_HasLocalSharedController_ReturnValue1) == 0x0001A1, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_IsValid_ReturnValue5) == 0x0001A2, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_NotifyName4) == 0x0001A8, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_NotifyName4' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_BooleanAND_ReturnValue1) == 0x0001B0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, Temp_name_Variable1) == 0x0001B8, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CreateDelegate_OutputDelegate8) == 0x0001C0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_RepeatCount) == 0x0001D0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_RepeatCount' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_bRedash) == 0x0001D1, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_bRedash' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_GetOwnerCharacter_ReturnValue4) == 0x0001D8, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_GetOwnerCharacter_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001E0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_GetOwnerStand_ReturnValue1) == 0x0001F0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_GetOwnerStand_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_NotifyName13) == 0x0001F8, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_NotifyName13' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000200, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_DynamicCast_bSuccess2) == 0x000208, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_NotifyName5) == 0x000210, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_NotifyName5' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000218, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_IsValid_ReturnValue6) == 0x000220, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CreateDelegate_OutputDelegate9) == 0x000228, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_GetOwnerStand_ReturnValue2) == 0x000238, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_GetOwnerStand_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CreateDelegate_OutputDelegate10) == 0x000240, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CreateDelegate_OutputDelegate10' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1) == 0x000250, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_DynamicCast_bSuccess3) == 0x000258, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_NotifyName6) == 0x000260, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_NotifyName6' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue1) == 0x000268, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_IsValid_ReturnValue7) == 0x000270, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_RequestGion_AkComponent__LocalOnly_) == 0x000278, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_RequestGion_AkComponent__LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_) == 0x000280, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_SkillType) == 0x000281, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_SkillType' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_HittedCharacterCount) == 0x000284, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_HittedCharacterCount' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_BlockedCharacterCount) == 0x000288, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_BlockedCharacterCount' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_InvalidatedCharacterCount) == 0x00028C, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_InvalidatedCharacterCount' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CreateDelegate_OutputDelegate11) == 0x000290, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CreateDelegate_OutputDelegate11' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_Add_IntInt_ReturnValue) == 0x0002A0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_Add_IntInt_ReturnValue1) == 0x0002A4, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_Greater_IntInt_ReturnValue) == 0x0002A8, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CreateDelegate_OutputDelegate12) == 0x0002B0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_NotifyName7) == 0x0002C0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_NotifyName7' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_SkillTag) == 0x0002C8, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_SkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_SerialNumber) == 0x0002D0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_AttackDistance) == 0x0002D4, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_AttackDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_KilledCharacterId) == 0x0002D8, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_KilledCharacterId' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_bWithSeparatedStandAttack) == 0x0002D9, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_bWithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_bHitEnemysSeparatedStand) == 0x0002DA, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_bHitEnemysSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_bFirstBlood) == 0x0002DB, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_bFirstBlood' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_UltimateSkillSerialNumberIfInEffect) == 0x0002DC, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_UltimateSkillSerialNumberIfInEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_ElapsedTime) == 0x0002E0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_DeadPlayerId) == 0x0002E4, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_DeadPlayerId' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_bIsLastDefeated) == 0x0002E8, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_bIsLastDefeated' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_bPlayerKill) == 0x0002E9, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_bPlayerKill' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_bSpecialKill) == 0x0002EA, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_bSpecialKill' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CreateDelegate_OutputDelegate13) == 0x0002F0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CreateDelegate_OutputDelegate13' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000300, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_NotifyName14) == 0x000308, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_NotifyName14' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_Add_IntInt_ReturnValue2) == 0x000310, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_NotifyName8) == 0x000318, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_NotifyName8' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_GetOwnerStand_ReturnValue3) == 0x000320, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_GetOwnerStand_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand2) == 0x000328, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand2' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_DynamicCast_bSuccess4) == 0x000330, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CreateDelegate_OutputDelegate14) == 0x000338, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CreateDelegate_OutputDelegate14' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue2) == 0x000348, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_Location) == 0x000350, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_Normal) == 0x00035C, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_bCharacter) == 0x000368, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_bCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_Not_PreBool_ReturnValue1) == 0x000369, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_MakeTransform_ReturnValue) == 0x000370, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0003A0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_FinishSpawningActor_ReturnValue) == 0x0003A8, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_IsValid_ReturnValue8) == 0x0003B0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_IsValid_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CustomEvent_NotifyName9) == 0x0003B8, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CustomEvent_NotifyName9' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_HitActor) == 0x0003C0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_HitLocation) == 0x0003C8, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_HitNormal) == 0x0003D4, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_CuttingRate) == 0x0003E0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_SurfaceType) == 0x0003E4, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_bDisableDamage) == 0x0003E5, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_bInvincible) == 0x0003E6, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_bInvincible' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_bIsPenetration) == 0x0003E7, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_bIsPenetration' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_bBlockedByAAP) == 0x0003E8, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_Event_bHeadShot) == 0x0003E9, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_Event_bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CreateDelegate_OutputDelegate15) == 0x0003F0, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CreateDelegate_OutputDelegate15' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x000400, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_DynamicCast_bSuccess5) == 0x000408, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, Temp_name_Variable2) == 0x000410, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::Temp_name_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_Array_Add_ReturnValue) == 0x000418, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_GetOwnerStand_ReturnValue4) == 0x000420, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_GetOwnerStand_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand3) == 0x000428, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand3' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_DynamicCast_bSuccess6) == 0x000430, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, K2Node_CreateDelegate_OutputDelegate16) == 0x000438, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::K2Node_CreateDelegate_OutputDelegate16' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill, CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect) == 0x000448, "Member 'BP_AJBDiverShootSkill_C_ExecuteUbergraph_BP_AJBDiverShootSkill::CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.OnMC_Penetrate
// 0x001C (0x001C - 0x0000)
struct BP_AJBDiverShootSkill_C_OnMC_Penetrate final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCharacter;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_OnMC_Penetrate) == 0x000004, "Wrong alignment on BP_AJBDiverShootSkill_C_OnMC_Penetrate");
static_assert(sizeof(BP_AJBDiverShootSkill_C_OnMC_Penetrate) == 0x00001C, "Wrong size on BP_AJBDiverShootSkill_C_OnMC_Penetrate");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnMC_Penetrate, Location) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_OnMC_Penetrate::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnMC_Penetrate, Normal) == 0x00000C, "Member 'BP_AJBDiverShootSkill_C_OnMC_Penetrate::Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnMC_Penetrate, bCharacter) == 0x000018, "Member 'BP_AJBDiverShootSkill_C_OnMC_Penetrate::bCharacter' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.OnKill
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBDiverShootSkill_C_OnKill final
{
public:
	struct FGameplayTag                           SkillTag_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber_0;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackDistance;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         KilledCharacterId;                                 // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWithSeparatedStandAttack;                         // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHitEnemysSeparatedStand;                          // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFirstBlood;                                       // 0x0013(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         UltimateSkillSerialNumberIfInEffect;               // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedTime;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DeadPlayerID;                                      // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLastDefeated;                                   // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPlayerKill;                                       // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSpecialKill;                                      // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_OnKill) == 0x000008, "Wrong alignment on BP_AJBDiverShootSkill_C_OnKill");
static_assert(sizeof(BP_AJBDiverShootSkill_C_OnKill) == 0x000028, "Wrong size on BP_AJBDiverShootSkill_C_OnKill");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnKill, SkillTag_0) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_OnKill::SkillTag_0' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnKill, SerialNumber_0) == 0x000008, "Member 'BP_AJBDiverShootSkill_C_OnKill::SerialNumber_0' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnKill, AttackDistance) == 0x00000C, "Member 'BP_AJBDiverShootSkill_C_OnKill::AttackDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnKill, KilledCharacterId) == 0x000010, "Member 'BP_AJBDiverShootSkill_C_OnKill::KilledCharacterId' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnKill, bWithSeparatedStandAttack) == 0x000011, "Member 'BP_AJBDiverShootSkill_C_OnKill::bWithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnKill, bHitEnemysSeparatedStand) == 0x000012, "Member 'BP_AJBDiverShootSkill_C_OnKill::bHitEnemysSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnKill, bFirstBlood) == 0x000013, "Member 'BP_AJBDiverShootSkill_C_OnKill::bFirstBlood' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnKill, UltimateSkillSerialNumberIfInEffect) == 0x000014, "Member 'BP_AJBDiverShootSkill_C_OnKill::UltimateSkillSerialNumberIfInEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnKill, ElapsedTime) == 0x000018, "Member 'BP_AJBDiverShootSkill_C_OnKill::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnKill, DeadPlayerID) == 0x00001C, "Member 'BP_AJBDiverShootSkill_C_OnKill::DeadPlayerID' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnKill, bIsLastDefeated) == 0x000020, "Member 'BP_AJBDiverShootSkill_C_OnKill::bIsLastDefeated' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnKill, bPlayerKill) == 0x000021, "Member 'BP_AJBDiverShootSkill_C_OnKill::bPlayerKill' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnKill, bSpecialKill) == 0x000022, "Member 'BP_AJBDiverShootSkill_C_OnKill::bSpecialKill' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.OnMultipleHit
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBDiverShootSkill_C_OnMultipleHit final
{
public:
	EAJBSkillType                                 SkillType_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HittedCharacterCount;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BlockedCharacterCount;                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InvalidatedCharacterCount;                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_OnMultipleHit) == 0x000004, "Wrong alignment on BP_AJBDiverShootSkill_C_OnMultipleHit");
static_assert(sizeof(BP_AJBDiverShootSkill_C_OnMultipleHit) == 0x000010, "Wrong size on BP_AJBDiverShootSkill_C_OnMultipleHit");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnMultipleHit, SkillType_0) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_OnMultipleHit::SkillType_0' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnMultipleHit, HittedCharacterCount) == 0x000004, "Member 'BP_AJBDiverShootSkill_C_OnMultipleHit::HittedCharacterCount' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnMultipleHit, BlockedCharacterCount) == 0x000008, "Member 'BP_AJBDiverShootSkill_C_OnMultipleHit::BlockedCharacterCount' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnMultipleHit, InvalidatedCharacterCount) == 0x00000C, "Member 'BP_AJBDiverShootSkill_C_OnMultipleHit::InvalidatedCharacterCount' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.UpdateCharge
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBDiverShootSkill_C_UpdateCharge final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_UpdateCharge) == 0x000004, "Wrong alignment on BP_AJBDiverShootSkill_C_UpdateCharge");
static_assert(sizeof(BP_AJBDiverShootSkill_C_UpdateCharge) == 0x000004, "Wrong size on BP_AJBDiverShootSkill_C_UpdateCharge");
static_assert(offsetof(BP_AJBDiverShootSkill_C_UpdateCharge, DeltaSeconds) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_UpdateCharge::DeltaSeconds' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.OnBlendOut_7B45FB9D406D5826C78546BC45D65994
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBDiverShootSkill_C_OnBlendOut_7B45FB9D406D5826C78546BC45D65994 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_OnBlendOut_7B45FB9D406D5826C78546BC45D65994) == 0x000008, "Wrong alignment on BP_AJBDiverShootSkill_C_OnBlendOut_7B45FB9D406D5826C78546BC45D65994");
static_assert(sizeof(BP_AJBDiverShootSkill_C_OnBlendOut_7B45FB9D406D5826C78546BC45D65994) == 0x000008, "Wrong size on BP_AJBDiverShootSkill_C_OnBlendOut_7B45FB9D406D5826C78546BC45D65994");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnBlendOut_7B45FB9D406D5826C78546BC45D65994, NotifyName) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_OnBlendOut_7B45FB9D406D5826C78546BC45D65994::NotifyName' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.OnBlendOut_7B45FB9D406D5826C78546BC9E185F52
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBDiverShootSkill_C_OnBlendOut_7B45FB9D406D5826C78546BC9E185F52 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_OnBlendOut_7B45FB9D406D5826C78546BC9E185F52) == 0x000008, "Wrong alignment on BP_AJBDiverShootSkill_C_OnBlendOut_7B45FB9D406D5826C78546BC9E185F52");
static_assert(sizeof(BP_AJBDiverShootSkill_C_OnBlendOut_7B45FB9D406D5826C78546BC9E185F52) == 0x000008, "Wrong size on BP_AJBDiverShootSkill_C_OnBlendOut_7B45FB9D406D5826C78546BC9E185F52");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnBlendOut_7B45FB9D406D5826C78546BC9E185F52, NotifyName) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_OnBlendOut_7B45FB9D406D5826C78546BC9E185F52::NotifyName' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.OnBlendOut_7B45FB9D406D5826C78546BCD09E7689
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBDiverShootSkill_C_OnBlendOut_7B45FB9D406D5826C78546BCD09E7689 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_OnBlendOut_7B45FB9D406D5826C78546BCD09E7689) == 0x000008, "Wrong alignment on BP_AJBDiverShootSkill_C_OnBlendOut_7B45FB9D406D5826C78546BCD09E7689");
static_assert(sizeof(BP_AJBDiverShootSkill_C_OnBlendOut_7B45FB9D406D5826C78546BCD09E7689) == 0x000008, "Wrong size on BP_AJBDiverShootSkill_C_OnBlendOut_7B45FB9D406D5826C78546BCD09E7689");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnBlendOut_7B45FB9D406D5826C78546BCD09E7689, NotifyName) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_OnBlendOut_7B45FB9D406D5826C78546BCD09E7689::NotifyName' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.OnCompleted_7B45FB9D406D5826C78546BC45D65994
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBDiverShootSkill_C_OnCompleted_7B45FB9D406D5826C78546BC45D65994 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_OnCompleted_7B45FB9D406D5826C78546BC45D65994) == 0x000008, "Wrong alignment on BP_AJBDiverShootSkill_C_OnCompleted_7B45FB9D406D5826C78546BC45D65994");
static_assert(sizeof(BP_AJBDiverShootSkill_C_OnCompleted_7B45FB9D406D5826C78546BC45D65994) == 0x000008, "Wrong size on BP_AJBDiverShootSkill_C_OnCompleted_7B45FB9D406D5826C78546BC45D65994");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnCompleted_7B45FB9D406D5826C78546BC45D65994, NotifyName) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_OnCompleted_7B45FB9D406D5826C78546BC45D65994::NotifyName' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.OnCompleted_7B45FB9D406D5826C78546BC9E185F52
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBDiverShootSkill_C_OnCompleted_7B45FB9D406D5826C78546BC9E185F52 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_OnCompleted_7B45FB9D406D5826C78546BC9E185F52) == 0x000008, "Wrong alignment on BP_AJBDiverShootSkill_C_OnCompleted_7B45FB9D406D5826C78546BC9E185F52");
static_assert(sizeof(BP_AJBDiverShootSkill_C_OnCompleted_7B45FB9D406D5826C78546BC9E185F52) == 0x000008, "Wrong size on BP_AJBDiverShootSkill_C_OnCompleted_7B45FB9D406D5826C78546BC9E185F52");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnCompleted_7B45FB9D406D5826C78546BC9E185F52, NotifyName) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_OnCompleted_7B45FB9D406D5826C78546BC9E185F52::NotifyName' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.OnCompleted_7B45FB9D406D5826C78546BCD09E7689
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBDiverShootSkill_C_OnCompleted_7B45FB9D406D5826C78546BCD09E7689 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_OnCompleted_7B45FB9D406D5826C78546BCD09E7689) == 0x000008, "Wrong alignment on BP_AJBDiverShootSkill_C_OnCompleted_7B45FB9D406D5826C78546BCD09E7689");
static_assert(sizeof(BP_AJBDiverShootSkill_C_OnCompleted_7B45FB9D406D5826C78546BCD09E7689) == 0x000008, "Wrong size on BP_AJBDiverShootSkill_C_OnCompleted_7B45FB9D406D5826C78546BCD09E7689");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnCompleted_7B45FB9D406D5826C78546BCD09E7689, NotifyName) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_OnCompleted_7B45FB9D406D5826C78546BCD09E7689::NotifyName' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.OnInterrupted_7B45FB9D406D5826C78546BC45D65994
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBDiverShootSkill_C_OnInterrupted_7B45FB9D406D5826C78546BC45D65994 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_OnInterrupted_7B45FB9D406D5826C78546BC45D65994) == 0x000008, "Wrong alignment on BP_AJBDiverShootSkill_C_OnInterrupted_7B45FB9D406D5826C78546BC45D65994");
static_assert(sizeof(BP_AJBDiverShootSkill_C_OnInterrupted_7B45FB9D406D5826C78546BC45D65994) == 0x000008, "Wrong size on BP_AJBDiverShootSkill_C_OnInterrupted_7B45FB9D406D5826C78546BC45D65994");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnInterrupted_7B45FB9D406D5826C78546BC45D65994, NotifyName) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_OnInterrupted_7B45FB9D406D5826C78546BC45D65994::NotifyName' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.OnInterrupted_7B45FB9D406D5826C78546BC9E185F52
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBDiverShootSkill_C_OnInterrupted_7B45FB9D406D5826C78546BC9E185F52 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_OnInterrupted_7B45FB9D406D5826C78546BC9E185F52) == 0x000008, "Wrong alignment on BP_AJBDiverShootSkill_C_OnInterrupted_7B45FB9D406D5826C78546BC9E185F52");
static_assert(sizeof(BP_AJBDiverShootSkill_C_OnInterrupted_7B45FB9D406D5826C78546BC9E185F52) == 0x000008, "Wrong size on BP_AJBDiverShootSkill_C_OnInterrupted_7B45FB9D406D5826C78546BC9E185F52");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnInterrupted_7B45FB9D406D5826C78546BC9E185F52, NotifyName) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_OnInterrupted_7B45FB9D406D5826C78546BC9E185F52::NotifyName' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.OnInterrupted_7B45FB9D406D5826C78546BCD09E7689
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBDiverShootSkill_C_OnInterrupted_7B45FB9D406D5826C78546BCD09E7689 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_OnInterrupted_7B45FB9D406D5826C78546BCD09E7689) == 0x000008, "Wrong alignment on BP_AJBDiverShootSkill_C_OnInterrupted_7B45FB9D406D5826C78546BCD09E7689");
static_assert(sizeof(BP_AJBDiverShootSkill_C_OnInterrupted_7B45FB9D406D5826C78546BCD09E7689) == 0x000008, "Wrong size on BP_AJBDiverShootSkill_C_OnInterrupted_7B45FB9D406D5826C78546BCD09E7689");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnInterrupted_7B45FB9D406D5826C78546BCD09E7689, NotifyName) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_OnInterrupted_7B45FB9D406D5826C78546BCD09E7689::NotifyName' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.OnNotifyBegin_7B45FB9D406D5826C78546BC45D65994
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBDiverShootSkill_C_OnNotifyBegin_7B45FB9D406D5826C78546BC45D65994 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_OnNotifyBegin_7B45FB9D406D5826C78546BC45D65994) == 0x000008, "Wrong alignment on BP_AJBDiverShootSkill_C_OnNotifyBegin_7B45FB9D406D5826C78546BC45D65994");
static_assert(sizeof(BP_AJBDiverShootSkill_C_OnNotifyBegin_7B45FB9D406D5826C78546BC45D65994) == 0x000008, "Wrong size on BP_AJBDiverShootSkill_C_OnNotifyBegin_7B45FB9D406D5826C78546BC45D65994");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnNotifyBegin_7B45FB9D406D5826C78546BC45D65994, NotifyName) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_OnNotifyBegin_7B45FB9D406D5826C78546BC45D65994::NotifyName' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.OnNotifyBegin_7B45FB9D406D5826C78546BC9E185F52
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBDiverShootSkill_C_OnNotifyBegin_7B45FB9D406D5826C78546BC9E185F52 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_OnNotifyBegin_7B45FB9D406D5826C78546BC9E185F52) == 0x000008, "Wrong alignment on BP_AJBDiverShootSkill_C_OnNotifyBegin_7B45FB9D406D5826C78546BC9E185F52");
static_assert(sizeof(BP_AJBDiverShootSkill_C_OnNotifyBegin_7B45FB9D406D5826C78546BC9E185F52) == 0x000008, "Wrong size on BP_AJBDiverShootSkill_C_OnNotifyBegin_7B45FB9D406D5826C78546BC9E185F52");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnNotifyBegin_7B45FB9D406D5826C78546BC9E185F52, NotifyName) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_OnNotifyBegin_7B45FB9D406D5826C78546BC9E185F52::NotifyName' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.OnNotifyBegin_7B45FB9D406D5826C78546BCD09E7689
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBDiverShootSkill_C_OnNotifyBegin_7B45FB9D406D5826C78546BCD09E7689 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_OnNotifyBegin_7B45FB9D406D5826C78546BCD09E7689) == 0x000008, "Wrong alignment on BP_AJBDiverShootSkill_C_OnNotifyBegin_7B45FB9D406D5826C78546BCD09E7689");
static_assert(sizeof(BP_AJBDiverShootSkill_C_OnNotifyBegin_7B45FB9D406D5826C78546BCD09E7689) == 0x000008, "Wrong size on BP_AJBDiverShootSkill_C_OnNotifyBegin_7B45FB9D406D5826C78546BCD09E7689");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnNotifyBegin_7B45FB9D406D5826C78546BCD09E7689, NotifyName) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_OnNotifyBegin_7B45FB9D406D5826C78546BCD09E7689::NotifyName' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.OnNotifyEnd_7B45FB9D406D5826C78546BC45D65994
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBDiverShootSkill_C_OnNotifyEnd_7B45FB9D406D5826C78546BC45D65994 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_OnNotifyEnd_7B45FB9D406D5826C78546BC45D65994) == 0x000008, "Wrong alignment on BP_AJBDiverShootSkill_C_OnNotifyEnd_7B45FB9D406D5826C78546BC45D65994");
static_assert(sizeof(BP_AJBDiverShootSkill_C_OnNotifyEnd_7B45FB9D406D5826C78546BC45D65994) == 0x000008, "Wrong size on BP_AJBDiverShootSkill_C_OnNotifyEnd_7B45FB9D406D5826C78546BC45D65994");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnNotifyEnd_7B45FB9D406D5826C78546BC45D65994, NotifyName) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_OnNotifyEnd_7B45FB9D406D5826C78546BC45D65994::NotifyName' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.OnNotifyEnd_7B45FB9D406D5826C78546BC9E185F52
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBDiverShootSkill_C_OnNotifyEnd_7B45FB9D406D5826C78546BC9E185F52 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_OnNotifyEnd_7B45FB9D406D5826C78546BC9E185F52) == 0x000008, "Wrong alignment on BP_AJBDiverShootSkill_C_OnNotifyEnd_7B45FB9D406D5826C78546BC9E185F52");
static_assert(sizeof(BP_AJBDiverShootSkill_C_OnNotifyEnd_7B45FB9D406D5826C78546BC9E185F52) == 0x000008, "Wrong size on BP_AJBDiverShootSkill_C_OnNotifyEnd_7B45FB9D406D5826C78546BC9E185F52");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnNotifyEnd_7B45FB9D406D5826C78546BC9E185F52, NotifyName) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_OnNotifyEnd_7B45FB9D406D5826C78546BC9E185F52::NotifyName' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.OnNotifyEnd_7B45FB9D406D5826C78546BCD09E7689
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBDiverShootSkill_C_OnNotifyEnd_7B45FB9D406D5826C78546BCD09E7689 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_OnNotifyEnd_7B45FB9D406D5826C78546BCD09E7689) == 0x000008, "Wrong alignment on BP_AJBDiverShootSkill_C_OnNotifyEnd_7B45FB9D406D5826C78546BCD09E7689");
static_assert(sizeof(BP_AJBDiverShootSkill_C_OnNotifyEnd_7B45FB9D406D5826C78546BCD09E7689) == 0x000008, "Wrong size on BP_AJBDiverShootSkill_C_OnNotifyEnd_7B45FB9D406D5826C78546BCD09E7689");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnNotifyEnd_7B45FB9D406D5826C78546BCD09E7689, NotifyName) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_OnNotifyEnd_7B45FB9D406D5826C78546BCD09E7689::NotifyName' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.OnEndState
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBDiverShootSkill_C_OnEndState final
{
public:
	bool                                          bCancel;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRestore;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_OnEndState) == 0x000001, "Wrong alignment on BP_AJBDiverShootSkill_C_OnEndState");
static_assert(sizeof(BP_AJBDiverShootSkill_C_OnEndState) == 0x000002, "Wrong size on BP_AJBDiverShootSkill_C_OnEndState");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnEndState, bCancel) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_OnEndState::bCancel' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnEndState, bRestore) == 0x000001, "Member 'BP_AJBDiverShootSkill_C_OnEndState::bRestore' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.OnDash
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBDiverShootSkill_C_OnDash final
{
public:
	uint8                                         RepeatCount_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRedash;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_OnDash) == 0x000001, "Wrong alignment on BP_AJBDiverShootSkill_C_OnDash");
static_assert(sizeof(BP_AJBDiverShootSkill_C_OnDash) == 0x000002, "Wrong size on BP_AJBDiverShootSkill_C_OnDash");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnDash, RepeatCount_0) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_OnDash::RepeatCount_0' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_OnDash, bRedash) == 0x000001, "Member 'BP_AJBDiverShootSkill_C_OnDash::bRedash' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.HitWait
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBDiverShootSkill_C_HitWait final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CuttingRate;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableDamage;                                    // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInvincible;                                       // 0x0026(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsPenetration;                                    // 0x0027(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bBlockedByAAP;                                     // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHeadShot;                                         // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_HitWait) == 0x000008, "Wrong alignment on BP_AJBDiverShootSkill_C_HitWait");
static_assert(sizeof(BP_AJBDiverShootSkill_C_HitWait) == 0x000030, "Wrong size on BP_AJBDiverShootSkill_C_HitWait");
static_assert(offsetof(BP_AJBDiverShootSkill_C_HitWait, HitActor) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_HitWait::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_HitWait, HitLocation) == 0x000008, "Member 'BP_AJBDiverShootSkill_C_HitWait::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_HitWait, HitNormal) == 0x000014, "Member 'BP_AJBDiverShootSkill_C_HitWait::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_HitWait, CuttingRate) == 0x000020, "Member 'BP_AJBDiverShootSkill_C_HitWait::CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_HitWait, SurfaceType) == 0x000024, "Member 'BP_AJBDiverShootSkill_C_HitWait::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_HitWait, bDisableDamage) == 0x000025, "Member 'BP_AJBDiverShootSkill_C_HitWait::bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_HitWait, bInvincible) == 0x000026, "Member 'BP_AJBDiverShootSkill_C_HitWait::bInvincible' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_HitWait, bIsPenetration) == 0x000027, "Member 'BP_AJBDiverShootSkill_C_HitWait::bIsPenetration' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_HitWait, bBlockedByAAP) == 0x000028, "Member 'BP_AJBDiverShootSkill_C_HitWait::bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_HitWait, bHeadShot) == 0x000029, "Member 'BP_AJBDiverShootSkill_C_HitWait::bHeadShot' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.StateTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBDiverShootSkill_C_StateTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_StateTick) == 0x000004, "Wrong alignment on BP_AJBDiverShootSkill_C_StateTick");
static_assert(sizeof(BP_AJBDiverShootSkill_C_StateTick) == 0x000004, "Wrong size on BP_AJBDiverShootSkill_C_StateTick");
static_assert(offsetof(BP_AJBDiverShootSkill_C_StateTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_StateTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBDiverShootSkill.BP_AJBDiverShootSkill_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBDiverShootSkill_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDiverShootSkill_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBDiverShootSkill_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBDiverShootSkill_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBDiverShootSkill_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBDiverShootSkill_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBDiverShootSkill_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBDiverShootSkill_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBDiverShootSkill_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBDiverShootSkill_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBDiverShootSkill_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBDiverShootSkill_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

}


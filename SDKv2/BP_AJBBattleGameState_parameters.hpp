#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBBattleGameState

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AJB_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.OnChangeLivingPlayerCount__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BP_AJBBattleGameState_C_OnChangeLivingPlayerCount__DelegateSignature final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LivingPlayerRate;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PairCount;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_OnChangeLivingPlayerCount__DelegateSignature) == 0x000004, "Wrong alignment on BP_AJBBattleGameState_C_OnChangeLivingPlayerCount__DelegateSignature");
static_assert(sizeof(BP_AJBBattleGameState_C_OnChangeLivingPlayerCount__DelegateSignature) == 0x00000C, "Wrong size on BP_AJBBattleGameState_C_OnChangeLivingPlayerCount__DelegateSignature");
static_assert(offsetof(BP_AJBBattleGameState_C_OnChangeLivingPlayerCount__DelegateSignature, Count) == 0x000000, "Member 'BP_AJBBattleGameState_C_OnChangeLivingPlayerCount__DelegateSignature::Count' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_OnChangeLivingPlayerCount__DelegateSignature, LivingPlayerRate) == 0x000004, "Member 'BP_AJBBattleGameState_C_OnChangeLivingPlayerCount__DelegateSignature::LivingPlayerRate' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_OnChangeLivingPlayerCount__DelegateSignature, PairCount) == 0x000008, "Member 'BP_AJBBattleGameState_C_OnChangeLivingPlayerCount__DelegateSignature::PairCount' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.OnSetLivingPlayerCountForHighlight__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBBattleGameState_C_OnSetLivingPlayerCountForHighlight__DelegateSignature final
{
public:
	int32                                         LivingPlayerCount_0;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LivingPairCount_0;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_OnSetLivingPlayerCountForHighlight__DelegateSignature) == 0x000004, "Wrong alignment on BP_AJBBattleGameState_C_OnSetLivingPlayerCountForHighlight__DelegateSignature");
static_assert(sizeof(BP_AJBBattleGameState_C_OnSetLivingPlayerCountForHighlight__DelegateSignature) == 0x000008, "Wrong size on BP_AJBBattleGameState_C_OnSetLivingPlayerCountForHighlight__DelegateSignature");
static_assert(offsetof(BP_AJBBattleGameState_C_OnSetLivingPlayerCountForHighlight__DelegateSignature, LivingPlayerCount_0) == 0x000000, "Member 'BP_AJBBattleGameState_C_OnSetLivingPlayerCountForHighlight__DelegateSignature::LivingPlayerCount_0' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_OnSetLivingPlayerCountForHighlight__DelegateSignature, LivingPairCount_0) == 0x000004, "Member 'BP_AJBBattleGameState_C_OnSetLivingPlayerCountForHighlight__DelegateSignature::LivingPairCount_0' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.ExecuteUbergraph_BP_AJBBattleGameState
// 0x0420 (0x0420 - 0x0000)
struct BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_______________Variable;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F[0x1];                                       // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable1;                                // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess;              // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              K2Node_CustomEvent_BattleStartGameTime;            // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        K2Node_CustomEvent_PlayerController;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_LivingPlayerCount;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_LivingPlayerCountWithoutCPU;    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Now_ReturnValue1;                         // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue2;                         // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_RemainingTime;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetElapsedGameTimespan_FromBeforeCountDown_ReturnValue; // 0x00D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBInGameCharacter_C*>       CallFunc_GetJoinPawns_OutPawns;                    // 0x00E0(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_GetElapsedInGameTimespan_ReturnValue;     // 0x0100(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Private_IsPlayingReplay_ReturnValue;      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBInGameTimeRecorder_C*>    CallFunc_GetAllActorsOfClass_OutActors;            // 0x0110(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_AJBInGameTimeRecorder_C*            CallFunc_Array_Get_Item;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable2;                                // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameTimeRecorder_C*            CallFunc_FinishSpawningActor_ReturnValue;          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Private_IsPlayingReplay_ReturnValue1;     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue1;               // 0x0180(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1; // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameTimeRecorder_C*            CallFunc_FinishSpawningActor_ReturnValue1;         // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable3;                                // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable4;                                // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable3;                   // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesCharacterHavePlayerController_ReturnValue; // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D5[0x3];                                      // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerMatchingIndexIdByActor_PlayerMatchingIndex; // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue;     // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue6;                  // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue1;                    // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1ED[0x3];                                      // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable5;                                // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Now_ReturnValue3;                         // 0x01F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PlayerCount;                    // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PairCount;                      // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPairCount_Svr__Num;                    // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable3;                    // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Array_Get_Item1;                          // 0x0210(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue1;             // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_CustomEvent_LastSurvivorMainCharacter1;     // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_LastSurvivorMainMatchingPlayerIndex; // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_CustomEvent_LastSurvivorPairCharacter1;     // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_CustomEvent_LastDefeatedCharacter1;         // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_LastDefeatedMatchingPlayerIndex; // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bShouldPayAttentionTo2ndOnCut1; // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBBattleGameMode_C*                K2Node_DynamicCast_AsBP_AJBBattle_Game_Mode;       // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetCurrentFlowState_CurrentFlowState;     // 0x0260(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_AJBInGameCharacter_C*>       CallFunc_GetJoinPawns_OutPawns1;                   // 0x0268(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue1;    // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27A[0x2];                                      // 0x027A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue2;             // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue1;            // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue2;            // 0x0285(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_286[0x2];                                      // 0x0286(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_CustomEvent_LastSurvivorMainCharacter;      // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_CustomEvent_LastSurvivorPairCharacter;      // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_CustomEvent_LastDefeatedCharacter;          // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_LastDamageCauser;               // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBInGameCharacter_C*>       K2Node_MakeArray_Array;                            // 0x02B0(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_AJBInGameCharacter_C*               CallFunc_Array_Get_Item2;                          // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDeathAndEnd_ReturnValue;                // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CB[0x1];                                      // 0x02CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue4;                // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller; // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DA[0x6];                                      // 0x02DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBInGameCharacter_C*>       Temp_wildcard_Variable;                            // 0x02E0(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_AJBInGameCharacter_C*               CallFunc_Array_Get_Item3;                          // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue5;                // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_______________Variable1;                  // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A[0x6];                                      // 0x030A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerController*>              CallFunc_GetJoinPlayerControllers_OutPlayerControllers; // 0x0310(0x0010)(ZeroConstructor, ReferenceParm)
	class APlayerController*                      CallFunc_Array_Get_Item4;                          // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGamePlayerController*             K2Node_DynamicCast_AsAJBIn_Game_Player_Controller; // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue6;                // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayModeIsPair_ReturnValue;               // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33A[0x2];                                      // 0x033A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable6;                                // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue2;    // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue3;            // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0342(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_343[0x1];                                      // 0x0343(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue7;                  // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue8;                  // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue4;                         // 0x0350(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMatchingPlayerInfo                    CallFunc_TryGetMatchingPlayerInfoByPlayerIDPureFunction_Out; // 0x0368(0x0088)()
	bool                                          CallFunc_TryGetMatchingPlayerInfoByPlayerIDPureFunction_ReturnValue; // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x03F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select1_Default;                            // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x040A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x040B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x040C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40D[0x3];                                      // 0x040D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select2_Default;                            // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue9;                  // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState) == 0x000010, "Wrong alignment on BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState");
static_assert(sizeof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState) == 0x000420, "Wrong size on BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, EntryPoint) == 0x000000, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_bool_Variable) == 0x000004, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_int_______________Variable) == 0x000014, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_int_______________Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_int_Loop_Counter_Variable1) == 0x000018, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Add_IntInt_ReturnValue1) == 0x00001C, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_int_Array_Index_Variable1) == 0x000020, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_bool_Variable1) == 0x000024, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_int_Loop_Counter_Variable2) == 0x000028, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Add_IntInt_ReturnValue2) == 0x00002C, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Conv_FloatToString_ReturnValue) == 0x000030, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_int_Variable) == 0x000050, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_bool_IsClosed_Variable) == 0x000054, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Add_IntInt_ReturnValue3) == 0x000058, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_bool_Has_Been_Initd_Variable) == 0x00005C, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_Event_Operator) == 0x000060, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_Event_Time) == 0x000068, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_Event_Timing) == 0x00006C, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_Event_bEnable) == 0x00006D, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_Event_bOperatorIsEmpty) == 0x00006E, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Now_ReturnValue) == 0x000070, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_SwitchEnum_CmpSuccess) == 0x000078, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_int_Variable1) == 0x00007C, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_bool_Has_Been_Initd_Variable1) == 0x000085, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_bool_IsClosed_Variable1) == 0x000086, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_GetAJBInGameHUD_BP_bSuccess) == 0x000087, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_GetAJBInGameHUD_BP_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD) == 0x000088, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_CustomEvent_BattleStartGameTime) == 0x000090, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_CustomEvent_BattleStartGameTime' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_CustomEvent_PlayerController) == 0x000098, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_CustomEvent_PlayerController' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_Event_DeltaSeconds) == 0x0000A0, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Add_IntInt_ReturnValue4) == 0x0000A4, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_CustomEvent_LivingPlayerCount) == 0x0000A8, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_CustomEvent_LivingPlayerCount' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_CustomEvent_LivingPlayerCountWithoutCPU) == 0x0000AC, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_CustomEvent_LivingPlayerCountWithoutCPU' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_int_Array_Index_Variable2) == 0x0000B0, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Now_ReturnValue1) == 0x0000B8, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Now_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Now_ReturnValue2) == 0x0000C0, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Now_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_CustomEvent_RemainingTime) == 0x0000C8, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_CustomEvent_RemainingTime' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_GetElapsedGameTimespan_FromBeforeCountDown_ReturnValue) == 0x0000D0, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_GetElapsedGameTimespan_FromBeforeCountDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_GetTotalSeconds_ReturnValue) == 0x0000D8, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_GetJoinPawns_OutPawns) == 0x0000E0, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_GetJoinPawns_OutPawns' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Array_Length_ReturnValue1) == 0x0000F0, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Array_Length_ReturnValue2) == 0x0000F4, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Subtract_IntInt_ReturnValue1) == 0x0000FC, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_GetElapsedInGameTimespan_ReturnValue) == 0x000100, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_GetElapsedInGameTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Private_IsPlayingReplay_ReturnValue) == 0x000108, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Private_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_GetAllActorsOfClass_OutActors) == 0x000110, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Array_Get_Item) == 0x000120, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000128, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_int_Variable2) == 0x00012C, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_MakeTransform_ReturnValue) == 0x000130, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000160, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_IsServer_ReturnValue) == 0x000168, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_FinishSpawningActor_ReturnValue) == 0x000170, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Private_IsPlayingReplay_ReturnValue1) == 0x000178, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Private_IsPlayingReplay_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_MakeTransform_ReturnValue1) == 0x000180, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_MakeTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_IsValid_ReturnValue) == 0x0001B0, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1) == 0x0001B8, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_FinishSpawningActor_ReturnValue1) == 0x0001C0, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_FinishSpawningActor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_int_Variable3) == 0x0001C8, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_int_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_int_Variable4) == 0x0001CC, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_int_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_int_Loop_Counter_Variable3) == 0x0001D0, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_int_Loop_Counter_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_DoesCharacterHavePlayerController_ReturnValue) == 0x0001D4, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_DoesCharacterHavePlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_GetPlayerMatchingIndexIdByActor_PlayerMatchingIndex) == 0x0001D8, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_GetPlayerMatchingIndexIdByActor_PlayerMatchingIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_CharacterBehaviorMatches_ReturnValue) == 0x0001DC, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_CharacterBehaviorMatches_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Add_IntInt_ReturnValue5) == 0x0001E0, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001E4, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Add_IntInt_ReturnValue6) == 0x0001E8, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Add_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_IsServer_ReturnValue1) == 0x0001EC, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_IsServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_int_Variable5) == 0x0001F0, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_int_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Now_ReturnValue3) == 0x0001F8, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Now_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_CustomEvent_PlayerCount) == 0x000200, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_CustomEvent_PlayerCount' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_CustomEvent_PairCount) == 0x000204, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_CustomEvent_PairCount' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_GetPairCount_Svr__Num) == 0x000208, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_GetPairCount_Svr__Num' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_int_Array_Index_Variable3) == 0x00020C, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_int_Array_Index_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Array_Get_Item1) == 0x000210, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_GetTotalSeconds_ReturnValue1) == 0x000218, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_GetTotalSeconds_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Add_FloatFloat_ReturnValue) == 0x00021C, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_CustomEvent_LastSurvivorMainCharacter1) == 0x000220, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_CustomEvent_LastSurvivorMainCharacter1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_CustomEvent_LastSurvivorMainMatchingPlayerIndex) == 0x000228, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_CustomEvent_LastSurvivorMainMatchingPlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_CustomEvent_LastSurvivorPairCharacter1) == 0x000230, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_CustomEvent_LastSurvivorPairCharacter1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_CustomEvent_LastDefeatedCharacter1) == 0x000238, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_CustomEvent_LastDefeatedCharacter1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_CustomEvent_LastDefeatedMatchingPlayerIndex) == 0x000240, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_CustomEvent_LastDefeatedMatchingPlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_CustomEvent_bShouldPayAttentionTo2ndOnCut1) == 0x000244, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_CustomEvent_bShouldPayAttentionTo2ndOnCut1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_GetGameMode_ReturnValue) == 0x000248, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_DynamicCast_AsBP_AJBBattle_Game_Mode) == 0x000250, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_DynamicCast_AsBP_AJBBattle_Game_Mode' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_DynamicCast_bSuccess) == 0x000258, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_GetCurrentFlowState_CurrentFlowState) == 0x000260, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_GetCurrentFlowState_CurrentFlowState' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_GetJoinPawns_OutPawns1) == 0x000268, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_GetJoinPawns_OutPawns1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000278, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_CharacterBehaviorMatches_ReturnValue1) == 0x000279, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_CharacterBehaviorMatches_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Array_Length_ReturnValue3) == 0x00027C, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Subtract_IntInt_ReturnValue2) == 0x000280, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Subtract_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_LessEqual_IntInt_ReturnValue1) == 0x000284, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_LessEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_LessEqual_IntInt_ReturnValue2) == 0x000285, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_LessEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_CustomEvent_LastSurvivorMainCharacter) == 0x000288, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_CustomEvent_LastSurvivorMainCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_CustomEvent_LastSurvivorPairCharacter) == 0x000290, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_CustomEvent_LastSurvivorPairCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_CustomEvent_LastDefeatedCharacter) == 0x000298, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_CustomEvent_LastDefeatedCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_CustomEvent_LastDamageCauser) == 0x0002A0, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_CustomEvent_LastDamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0002A8, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_MakeArray_Array) == 0x0002B0, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Array_Get_Item2) == 0x0002C0, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_IsDeathAndEnd_ReturnValue) == 0x0002C8, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_IsDeathAndEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_IsValid_ReturnValue1) == 0x0002C9, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Not_PreBool_ReturnValue) == 0x0002CA, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Array_Length_ReturnValue4) == 0x0002CC, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Array_Length_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller) == 0x0002D0, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_DynamicCast_bSuccess1) == 0x0002D8, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Less_IntInt_ReturnValue1) == 0x0002D9, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_wildcard_Variable) == 0x0002E0, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Array_Get_Item3) == 0x0002F0, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Array_Length_ReturnValue5) == 0x0002F8, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Array_Length_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Less_IntInt_ReturnValue2) == 0x0002FC, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Array_Add_ReturnValue) == 0x000300, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_int_______________Variable1) == 0x000304, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_int_______________Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_bool_Variable2) == 0x000308, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_bool_Variable3) == 0x000309, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_GetJoinPlayerControllers_OutPlayerControllers) == 0x000310, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_GetJoinPlayerControllers_OutPlayerControllers' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Array_Get_Item4) == 0x000320, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_DynamicCast_AsAJBIn_Game_Player_Controller) == 0x000328, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_DynamicCast_AsAJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_DynamicCast_bSuccess2) == 0x000330, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Array_Length_ReturnValue6) == 0x000334, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Array_Length_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Less_IntInt_ReturnValue3) == 0x000338, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_PlayModeIsPair_ReturnValue) == 0x000339, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_PlayModeIsPair_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, Temp_int_Variable6) == 0x00033C, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::Temp_int_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_CharacterBehaviorMatches_ReturnValue2) == 0x000340, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_CharacterBehaviorMatches_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_LessEqual_IntInt_ReturnValue3) == 0x000341, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_LessEqual_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_BooleanAND_ReturnValue) == 0x000342, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Add_IntInt_ReturnValue7) == 0x000344, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Add_IntInt_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_Select_Default) == 0x000348, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Add_IntInt_ReturnValue8) == 0x00034C, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Add_IntInt_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Now_ReturnValue4) == 0x000350, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Now_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_GetAJBGameInstance_bSuccess) == 0x000358, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000360, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_TryGetMatchingPlayerInfoByPlayerIDPureFunction_Out) == 0x000368, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_TryGetMatchingPlayerInfoByPlayerIDPureFunction_Out' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_TryGetMatchingPlayerInfoByPlayerIDPureFunction_ReturnValue) == 0x0003F0, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_TryGetMatchingPlayerInfoByPlayerIDPureFunction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Left_ReturnValue) == 0x0003F8, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000408, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_Select1_Default) == 0x000409, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_BooleanOR_ReturnValue) == 0x00040A, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_BooleanAND_ReturnValue1) == 0x00040B, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_BooleanAND_ReturnValue2) == 0x00040C, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, K2Node_Select2_Default) == 0x000410, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState, CallFunc_Add_IntInt_ReturnValue9) == 0x000414, "Member 'BP_AJBBattleGameState_C_ExecuteUbergraph_BP_AJBBattleGameState::CallFunc_Add_IntInt_ReturnValue9' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.StartLastSurvivorScene(Server)
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBBattleGameState_C_StartLastSurvivorScene_Server_ final
{
public:
	class ABP_AJBInGameCharacter_C*               LastSurvivorMainCharacter;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               LastSurvivorPairCharacter;                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               LastDefeatedCharacter;                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LastDamageCauser;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_StartLastSurvivorScene_Server_) == 0x000008, "Wrong alignment on BP_AJBBattleGameState_C_StartLastSurvivorScene_Server_");
static_assert(sizeof(BP_AJBBattleGameState_C_StartLastSurvivorScene_Server_) == 0x000020, "Wrong size on BP_AJBBattleGameState_C_StartLastSurvivorScene_Server_");
static_assert(offsetof(BP_AJBBattleGameState_C_StartLastSurvivorScene_Server_, LastSurvivorMainCharacter) == 0x000000, "Member 'BP_AJBBattleGameState_C_StartLastSurvivorScene_Server_::LastSurvivorMainCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_StartLastSurvivorScene_Server_, LastSurvivorPairCharacter) == 0x000008, "Member 'BP_AJBBattleGameState_C_StartLastSurvivorScene_Server_::LastSurvivorPairCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_StartLastSurvivorScene_Server_, LastDefeatedCharacter) == 0x000010, "Member 'BP_AJBBattleGameState_C_StartLastSurvivorScene_Server_::LastDefeatedCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_StartLastSurvivorScene_Server_, LastDamageCauser) == 0x000018, "Member 'BP_AJBBattleGameState_C_StartLastSurvivorScene_Server_::LastDamageCauser' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.MC_StartLastSurvivorScene
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBBattleGameState_C_MC_StartLastSurvivorScene final
{
public:
	class ABP_AJBInGameCharacter_C*               LastSurvivorMainCharacter;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastSurvivorMainMatchingPlayerIndex;               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               LastSurvivorPairCharacter;                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               LastDefeatedCharacter;                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastDefeatedMatchingPlayerIndex;                   // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldPayAttentionTo2ndOnCut1;                    // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBBattleGameState_C_MC_StartLastSurvivorScene) == 0x000008, "Wrong alignment on BP_AJBBattleGameState_C_MC_StartLastSurvivorScene");
static_assert(sizeof(BP_AJBBattleGameState_C_MC_StartLastSurvivorScene) == 0x000028, "Wrong size on BP_AJBBattleGameState_C_MC_StartLastSurvivorScene");
static_assert(offsetof(BP_AJBBattleGameState_C_MC_StartLastSurvivorScene, LastSurvivorMainCharacter) == 0x000000, "Member 'BP_AJBBattleGameState_C_MC_StartLastSurvivorScene::LastSurvivorMainCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_MC_StartLastSurvivorScene, LastSurvivorMainMatchingPlayerIndex) == 0x000008, "Member 'BP_AJBBattleGameState_C_MC_StartLastSurvivorScene::LastSurvivorMainMatchingPlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_MC_StartLastSurvivorScene, LastSurvivorPairCharacter) == 0x000010, "Member 'BP_AJBBattleGameState_C_MC_StartLastSurvivorScene::LastSurvivorPairCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_MC_StartLastSurvivorScene, LastDefeatedCharacter) == 0x000018, "Member 'BP_AJBBattleGameState_C_MC_StartLastSurvivorScene::LastDefeatedCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_MC_StartLastSurvivorScene, LastDefeatedMatchingPlayerIndex) == 0x000020, "Member 'BP_AJBBattleGameState_C_MC_StartLastSurvivorScene::LastDefeatedMatchingPlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_MC_StartLastSurvivorScene, bShouldPayAttentionTo2ndOnCut1) == 0x000024, "Member 'BP_AJBBattleGameState_C_MC_StartLastSurvivorScene::bShouldPayAttentionTo2ndOnCut1' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.MC_SetLivingPlayerCount
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBBattleGameState_C_MC_SetLivingPlayerCount final
{
public:
	int32                                         PlayerCount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PairCount;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_MC_SetLivingPlayerCount) == 0x000004, "Wrong alignment on BP_AJBBattleGameState_C_MC_SetLivingPlayerCount");
static_assert(sizeof(BP_AJBBattleGameState_C_MC_SetLivingPlayerCount) == 0x000008, "Wrong size on BP_AJBBattleGameState_C_MC_SetLivingPlayerCount");
static_assert(offsetof(BP_AJBBattleGameState_C_MC_SetLivingPlayerCount, PlayerCount) == 0x000000, "Member 'BP_AJBBattleGameState_C_MC_SetLivingPlayerCount::PlayerCount' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_MC_SetLivingPlayerCount, PairCount) == 0x000004, "Member 'BP_AJBBattleGameState_C_MC_SetLivingPlayerCount::PairCount' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.UpdateTheWorldRemainingTime
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBBattleGameState_C_UpdateTheWorldRemainingTime final
{
public:
	float                                         RemainingTime;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_UpdateTheWorldRemainingTime) == 0x000004, "Wrong alignment on BP_AJBBattleGameState_C_UpdateTheWorldRemainingTime");
static_assert(sizeof(BP_AJBBattleGameState_C_UpdateTheWorldRemainingTime) == 0x000004, "Wrong size on BP_AJBBattleGameState_C_UpdateTheWorldRemainingTime");
static_assert(offsetof(BP_AJBBattleGameState_C_UpdateTheWorldRemainingTime, RemainingTime) == 0x000000, "Member 'BP_AJBBattleGameState_C_UpdateTheWorldRemainingTime::RemainingTime' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.SetLivingPlayerCount(Svr)
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBBattleGameState_C_SetLivingPlayerCount_Svr_ final
{
public:
	int32                                         LivingPlayerCount_0;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LivingPlayerCountWithoutCPU;                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_SetLivingPlayerCount_Svr_) == 0x000004, "Wrong alignment on BP_AJBBattleGameState_C_SetLivingPlayerCount_Svr_");
static_assert(sizeof(BP_AJBBattleGameState_C_SetLivingPlayerCount_Svr_) == 0x000008, "Wrong size on BP_AJBBattleGameState_C_SetLivingPlayerCount_Svr_");
static_assert(offsetof(BP_AJBBattleGameState_C_SetLivingPlayerCount_Svr_, LivingPlayerCount_0) == 0x000000, "Member 'BP_AJBBattleGameState_C_SetLivingPlayerCount_Svr_::LivingPlayerCount_0' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_SetLivingPlayerCount_Svr_, LivingPlayerCountWithoutCPU) == 0x000004, "Member 'BP_AJBBattleGameState_C_SetLivingPlayerCount_Svr_::LivingPlayerCountWithoutCPU' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBBattleGameState_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBBattleGameState_C_ReceiveTick");
static_assert(sizeof(BP_AJBBattleGameState_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBBattleGameState_C_ReceiveTick");
static_assert(offsetof(BP_AJBBattleGameState_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBBattleGameState_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.OnEntryPlayer
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBBattleGameState_C_OnEntryPlayer final
{
public:
	class ABP_AJBInGamePlayerController_C*        PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_OnEntryPlayer) == 0x000008, "Wrong alignment on BP_AJBBattleGameState_C_OnEntryPlayer");
static_assert(sizeof(BP_AJBBattleGameState_C_OnEntryPlayer) == 0x000008, "Wrong size on BP_AJBBattleGameState_C_OnEntryPlayer");
static_assert(offsetof(BP_AJBBattleGameState_C_OnEntryPlayer, PlayerController) == 0x000000, "Member 'BP_AJBBattleGameState_C_OnEntryPlayer::PlayerController' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.MC_OnBattleGameStart
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBBattleGameState_C_MC_OnBattleGameStart final
{
public:
	struct FDateTime                              BattleStartGameTime_0;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_MC_OnBattleGameStart) == 0x000008, "Wrong alignment on BP_AJBBattleGameState_C_MC_OnBattleGameStart");
static_assert(sizeof(BP_AJBBattleGameState_C_MC_OnBattleGameStart) == 0x000008, "Wrong size on BP_AJBBattleGameState_C_MC_OnBattleGameStart");
static_assert(offsetof(BP_AJBBattleGameState_C_MC_OnBattleGameStart, BattleStartGameTime_0) == 0x000000, "Member 'BP_AJBBattleGameState_C_MC_OnBattleGameStart::BattleStartGameTime_0' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBBattleGameState_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBBattleGameState_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBBattleGameState_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBBattleGameState_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBBattleGameState_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBBattleGameState_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBBattleGameState_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBBattleGameState_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBBattleGameState_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBBattleGameState_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBBattleGameState_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.GetElapsedGameTimespan
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBBattleGameState_C_GetElapsedGameTimespan final
{
public:
	struct FTimespan                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_FromMilliseconds_ReturnValue;             // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_FromSeconds_ReturnValue;                  // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetRecordedElapsedInGameTime_ReturnValue; // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Private_IsPlayingReplay_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Add_DateTimeTimespan_ReturnValue;         // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              K2Node_Select_Default;                             // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_GetElapsedGameTimespan) == 0x000008, "Wrong alignment on BP_AJBBattleGameState_C_GetElapsedGameTimespan");
static_assert(sizeof(BP_AJBBattleGameState_C_GetElapsedGameTimespan) == 0x000050, "Wrong size on BP_AJBBattleGameState_C_GetElapsedGameTimespan");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespan, ReturnValue) == 0x000000, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespan::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespan, CallFunc_FromMilliseconds_ReturnValue) == 0x000008, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespan::CallFunc_FromMilliseconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespan, CallFunc_FromSeconds_ReturnValue) == 0x000010, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespan::CallFunc_FromSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespan, Temp_bool_Variable) == 0x000018, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespan::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespan, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespan::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespan, CallFunc_GetRecordedElapsedInGameTime_ReturnValue) == 0x000020, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespan::CallFunc_GetRecordedElapsedInGameTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespan, CallFunc_Private_IsPlayingReplay_ReturnValue) == 0x000028, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespan::CallFunc_Private_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespan, CallFunc_Add_DateTimeTimespan_ReturnValue) == 0x000030, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespan::CallFunc_Add_DateTimeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespan, CallFunc_Now_ReturnValue) == 0x000038, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespan::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespan, K2Node_Select_Default) == 0x000040, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespan::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespan, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000048, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespan::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.GetBattleStartGameTime
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBBattleGameState_C_GetBattleStartGameTime final
{
public:
	struct FDateTime                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_GetBattleStartGameTime) == 0x000008, "Wrong alignment on BP_AJBBattleGameState_C_GetBattleStartGameTime");
static_assert(sizeof(BP_AJBBattleGameState_C_GetBattleStartGameTime) == 0x000008, "Wrong size on BP_AJBBattleGameState_C_GetBattleStartGameTime");
static_assert(offsetof(BP_AJBBattleGameState_C_GetBattleStartGameTime, ReturnValue) == 0x000000, "Member 'BP_AJBBattleGameState_C_GetBattleStartGameTime::ReturnValue' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.GetLivingPlayerCount
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBBattleGameState_C_GetLivingPlayerCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_GetLivingPlayerCount) == 0x000004, "Wrong alignment on BP_AJBBattleGameState_C_GetLivingPlayerCount");
static_assert(sizeof(BP_AJBBattleGameState_C_GetLivingPlayerCount) == 0x000004, "Wrong size on BP_AJBBattleGameState_C_GetLivingPlayerCount");
static_assert(offsetof(BP_AJBBattleGameState_C_GetLivingPlayerCount, Count) == 0x000000, "Member 'BP_AJBBattleGameState_C_GetLivingPlayerCount::Count' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.UpdateCurrentTime
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBBattleGameState_C_UpdateCurrentTime final
{
public:
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_UpdateCurrentTime) == 0x000008, "Wrong alignment on BP_AJBBattleGameState_C_UpdateCurrentTime");
static_assert(sizeof(BP_AJBBattleGameState_C_UpdateCurrentTime) == 0x000018, "Wrong size on BP_AJBBattleGameState_C_UpdateCurrentTime");
static_assert(offsetof(BP_AJBBattleGameState_C_UpdateCurrentTime, CallFunc_Now_ReturnValue) == 0x000000, "Member 'BP_AJBBattleGameState_C_UpdateCurrentTime::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_UpdateCurrentTime, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000008, "Member 'BP_AJBBattleGameState_C_UpdateCurrentTime::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_UpdateCurrentTime, CallFunc_Array_Add_ReturnValue) == 0x000010, "Member 'BP_AJBBattleGameState_C_UpdateCurrentTime::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.GetTheWorldRemainingTime
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBBattleGameState_C_GetTheWorldRemainingTime final
{
public:
	float                                         RemainingTime;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_GetTheWorldRemainingTime) == 0x000004, "Wrong alignment on BP_AJBBattleGameState_C_GetTheWorldRemainingTime");
static_assert(sizeof(BP_AJBBattleGameState_C_GetTheWorldRemainingTime) == 0x000004, "Wrong size on BP_AJBBattleGameState_C_GetTheWorldRemainingTime");
static_assert(offsetof(BP_AJBBattleGameState_C_GetTheWorldRemainingTime, RemainingTime) == 0x000000, "Member 'BP_AJBBattleGameState_C_GetTheWorldRemainingTime::RemainingTime' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.GetCurrentGameTime
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBBattleGameState_C_GetCurrentGameTime final
{
public:
	struct FDateTime                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_GetElapsedGameTimespan_ReturnValue;       // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_GetBattleStartGameTime_ReturnValue;       // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Add_DateTimeTimespan_ReturnValue;         // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_GetCurrentGameTime) == 0x000008, "Wrong alignment on BP_AJBBattleGameState_C_GetCurrentGameTime");
static_assert(sizeof(BP_AJBBattleGameState_C_GetCurrentGameTime) == 0x000020, "Wrong size on BP_AJBBattleGameState_C_GetCurrentGameTime");
static_assert(offsetof(BP_AJBBattleGameState_C_GetCurrentGameTime, ReturnValue) == 0x000000, "Member 'BP_AJBBattleGameState_C_GetCurrentGameTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetCurrentGameTime, CallFunc_GetElapsedGameTimespan_ReturnValue) == 0x000008, "Member 'BP_AJBBattleGameState_C_GetCurrentGameTime::CallFunc_GetElapsedGameTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetCurrentGameTime, CallFunc_GetBattleStartGameTime_ReturnValue) == 0x000010, "Member 'BP_AJBBattleGameState_C_GetCurrentGameTime::CallFunc_GetBattleStartGameTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetCurrentGameTime, CallFunc_Add_DateTimeTimespan_ReturnValue) == 0x000018, "Member 'BP_AJBBattleGameState_C_GetCurrentGameTime::CallFunc_Add_DateTimeTimespan_ReturnValue' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.GetElapsedGameTimespan_FromBeforeCountDown
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBBattleGameState_C_GetElapsedGameTimespan_FromBeforeCountDown final
{
public:
	struct FTimespan                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_FromSeconds_ReturnValue;                  // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Add_DateTimeTimespan_ReturnValue;         // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              K2Node_Select_Default;                             // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_GetElapsedGameTimespan_FromBeforeCountDown) == 0x000008, "Wrong alignment on BP_AJBBattleGameState_C_GetElapsedGameTimespan_FromBeforeCountDown");
static_assert(sizeof(BP_AJBBattleGameState_C_GetElapsedGameTimespan_FromBeforeCountDown) == 0x000038, "Wrong size on BP_AJBBattleGameState_C_GetElapsedGameTimespan_FromBeforeCountDown");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespan_FromBeforeCountDown, ReturnValue) == 0x000000, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespan_FromBeforeCountDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespan_FromBeforeCountDown, Temp_bool_Variable) == 0x000008, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespan_FromBeforeCountDown::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespan_FromBeforeCountDown, CallFunc_FromSeconds_ReturnValue) == 0x000010, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespan_FromBeforeCountDown::CallFunc_FromSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespan_FromBeforeCountDown, CallFunc_Add_DateTimeTimespan_ReturnValue) == 0x000018, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespan_FromBeforeCountDown::CallFunc_Add_DateTimeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespan_FromBeforeCountDown, CallFunc_Now_ReturnValue) == 0x000020, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespan_FromBeforeCountDown::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespan_FromBeforeCountDown, K2Node_Select_Default) == 0x000028, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespan_FromBeforeCountDown::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespan_FromBeforeCountDown, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000030, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespan_FromBeforeCountDown::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.UpdateInitialPlayerLivingCount
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBBattleGameState_C_UpdateInitialPlayerLivingCount final
{
public:
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBBattleGameState_C_UpdateInitialPlayerLivingCount) == 0x000001, "Wrong alignment on BP_AJBBattleGameState_C_UpdateInitialPlayerLivingCount");
static_assert(sizeof(BP_AJBBattleGameState_C_UpdateInitialPlayerLivingCount) == 0x000001, "Wrong size on BP_AJBBattleGameState_C_UpdateInitialPlayerLivingCount");
static_assert(offsetof(BP_AJBBattleGameState_C_UpdateInitialPlayerLivingCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000000, "Member 'BP_AJBBattleGameState_C_UpdateInitialPlayerLivingCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.GetInitialPlayerLivingCount
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBBattleGameState_C_GetInitialPlayerLivingCount final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InitialPlayerLivingCount_0;                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_GetInitialPlayerLivingCount) == 0x000004, "Wrong alignment on BP_AJBBattleGameState_C_GetInitialPlayerLivingCount");
static_assert(sizeof(BP_AJBBattleGameState_C_GetInitialPlayerLivingCount) == 0x000008, "Wrong size on BP_AJBBattleGameState_C_GetInitialPlayerLivingCount");
static_assert(offsetof(BP_AJBBattleGameState_C_GetInitialPlayerLivingCount, bSuccess) == 0x000000, "Member 'BP_AJBBattleGameState_C_GetInitialPlayerLivingCount::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetInitialPlayerLivingCount, InitialPlayerLivingCount_0) == 0x000004, "Member 'BP_AJBBattleGameState_C_GetInitialPlayerLivingCount::InitialPlayerLivingCount_0' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.IsFinishedBattleGame
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBBattleGameState_C_IsFinishedBattleGame final
{
public:
	bool                                          bFinished;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBBattleGameState_C_IsFinishedBattleGame) == 0x000001, "Wrong alignment on BP_AJBBattleGameState_C_IsFinishedBattleGame");
static_assert(sizeof(BP_AJBBattleGameState_C_IsFinishedBattleGame) == 0x000001, "Wrong size on BP_AJBBattleGameState_C_IsFinishedBattleGame");
static_assert(offsetof(BP_AJBBattleGameState_C_IsFinishedBattleGame, bFinished) == 0x000000, "Member 'BP_AJBBattleGameState_C_IsFinishedBattleGame::bFinished' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.JudgeFirstBlood
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBBattleGameState_C_JudgeFirstBlood final
{
public:
	bool                                          IsFirstBlood;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBBattleGameState_C_JudgeFirstBlood) == 0x000001, "Wrong alignment on BP_AJBBattleGameState_C_JudgeFirstBlood");
static_assert(sizeof(BP_AJBBattleGameState_C_JudgeFirstBlood) == 0x000002, "Wrong size on BP_AJBBattleGameState_C_JudgeFirstBlood");
static_assert(offsetof(BP_AJBBattleGameState_C_JudgeFirstBlood, IsFirstBlood) == 0x000000, "Member 'BP_AJBBattleGameState_C_JudgeFirstBlood::IsFirstBlood' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_JudgeFirstBlood, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_AJBBattleGameState_C_JudgeFirstBlood::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.GetElapsedInGameTimespan
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBBattleGameState_C_GetElapsedInGameTimespan final
{
public:
	struct FTimespan                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_GetElapsedGameTimespan_ReturnValue;       // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_GetElapsedInGameTimespan) == 0x000008, "Wrong alignment on BP_AJBBattleGameState_C_GetElapsedInGameTimespan");
static_assert(sizeof(BP_AJBBattleGameState_C_GetElapsedInGameTimespan) == 0x000010, "Wrong size on BP_AJBBattleGameState_C_GetElapsedInGameTimespan");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedInGameTimespan, ReturnValue) == 0x000000, "Member 'BP_AJBBattleGameState_C_GetElapsedInGameTimespan::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedInGameTimespan, CallFunc_GetElapsedGameTimespan_ReturnValue) == 0x000008, "Member 'BP_AJBBattleGameState_C_GetElapsedInGameTimespan::CallFunc_GetElapsedGameTimespan_ReturnValue' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.Private_IsPlayingReplay
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBBattleGameState_C_Private_IsPlayingReplay final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBHighlightManager_bIsValid;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBHighlightManager*                   CallFunc_GetAJBHighlightManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBBattleGameState_C_Private_IsPlayingReplay) == 0x000008, "Wrong alignment on BP_AJBBattleGameState_C_Private_IsPlayingReplay");
static_assert(sizeof(BP_AJBBattleGameState_C_Private_IsPlayingReplay) == 0x000018, "Wrong size on BP_AJBBattleGameState_C_Private_IsPlayingReplay");
static_assert(offsetof(BP_AJBBattleGameState_C_Private_IsPlayingReplay, ReturnValue) == 0x000000, "Member 'BP_AJBBattleGameState_C_Private_IsPlayingReplay::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_Private_IsPlayingReplay, CallFunc_GetAJBHighlightManager_bIsValid) == 0x000001, "Member 'BP_AJBBattleGameState_C_Private_IsPlayingReplay::CallFunc_GetAJBHighlightManager_bIsValid' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_Private_IsPlayingReplay, CallFunc_GetAJBHighlightManager_ReturnValue) == 0x000008, "Member 'BP_AJBBattleGameState_C_Private_IsPlayingReplay::CallFunc_GetAJBHighlightManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_Private_IsPlayingReplay, CallFunc_IsPlayingReplay_ReturnValue) == 0x000010, "Member 'BP_AJBBattleGameState_C_Private_IsPlayingReplay::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.IsStartBattleGame
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBBattleGameState_C_IsStartBattleGame final
{
public:
	bool                                          bStart;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBBattleGameState_C_IsStartBattleGame) == 0x000001, "Wrong alignment on BP_AJBBattleGameState_C_IsStartBattleGame");
static_assert(sizeof(BP_AJBBattleGameState_C_IsStartBattleGame) == 0x000001, "Wrong size on BP_AJBBattleGameState_C_IsStartBattleGame");
static_assert(offsetof(BP_AJBBattleGameState_C_IsStartBattleGame, bStart) == 0x000000, "Member 'BP_AJBBattleGameState_C_IsStartBattleGame::bStart' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.GetLivingPlayerCountWithoutCPU(Server)
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBBattleGameState_C_GetLivingPlayerCountWithoutCPU_Server_ final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_GetLivingPlayerCountWithoutCPU_Server_) == 0x000004, "Wrong alignment on BP_AJBBattleGameState_C_GetLivingPlayerCountWithoutCPU_Server_");
static_assert(sizeof(BP_AJBBattleGameState_C_GetLivingPlayerCountWithoutCPU_Server_) == 0x000004, "Wrong size on BP_AJBBattleGameState_C_GetLivingPlayerCountWithoutCPU_Server_");
static_assert(offsetof(BP_AJBBattleGameState_C_GetLivingPlayerCountWithoutCPU_Server_, Count) == 0x000000, "Member 'BP_AJBBattleGameState_C_GetLivingPlayerCountWithoutCPU_Server_::Count' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.UpdateLossTimeBySlomo
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBBattleGameState_C_UpdateLossTimeBySlomo final
{
public:
	float                                         Temp_GlobalTimeDilation;                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Multiply_TimespanFloat_ReturnValue;       // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBBattleGameState_C_UpdateLossTimeBySlomo) == 0x000008, "Wrong alignment on BP_AJBBattleGameState_C_UpdateLossTimeBySlomo");
static_assert(sizeof(BP_AJBBattleGameState_C_UpdateLossTimeBySlomo) == 0x000028, "Wrong size on BP_AJBBattleGameState_C_UpdateLossTimeBySlomo");
static_assert(offsetof(BP_AJBBattleGameState_C_UpdateLossTimeBySlomo, Temp_GlobalTimeDilation) == 0x000000, "Member 'BP_AJBBattleGameState_C_UpdateLossTimeBySlomo::Temp_GlobalTimeDilation' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_UpdateLossTimeBySlomo, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_AJBBattleGameState_C_UpdateLossTimeBySlomo::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_UpdateLossTimeBySlomo, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'BP_AJBBattleGameState_C_UpdateLossTimeBySlomo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_UpdateLossTimeBySlomo, CallFunc_IsServer_ReturnValue) == 0x000006, "Member 'BP_AJBBattleGameState_C_UpdateLossTimeBySlomo::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_UpdateLossTimeBySlomo, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBBattleGameState_C_UpdateLossTimeBySlomo::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_UpdateLossTimeBySlomo, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x00000C, "Member 'BP_AJBBattleGameState_C_UpdateLossTimeBySlomo::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_UpdateLossTimeBySlomo, CallFunc_Multiply_TimespanFloat_ReturnValue) == 0x000010, "Member 'BP_AJBBattleGameState_C_UpdateLossTimeBySlomo::CallFunc_Multiply_TimespanFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_UpdateLossTimeBySlomo, CallFunc_GetTotalSeconds_ReturnValue) == 0x000018, "Member 'BP_AJBBattleGameState_C_UpdateLossTimeBySlomo::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_UpdateLossTimeBySlomo, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_AJBBattleGameState_C_UpdateLossTimeBySlomo::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_UpdateLossTimeBySlomo, CallFunc_Not_PreBool_ReturnValue1) == 0x000020, "Member 'BP_AJBBattleGameState_C_UpdateLossTimeBySlomo::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_UpdateLossTimeBySlomo, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'BP_AJBBattleGameState_C_UpdateLossTimeBySlomo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.UpdateRealDeltaTime
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBBattleGameState_C_UpdateRealDeltaTime final
{
public:
	struct FDateTime                              Temp_Now;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_UpdateRealDeltaTime) == 0x000008, "Wrong alignment on BP_AJBBattleGameState_C_UpdateRealDeltaTime");
static_assert(sizeof(BP_AJBBattleGameState_C_UpdateRealDeltaTime) == 0x000020, "Wrong size on BP_AJBBattleGameState_C_UpdateRealDeltaTime");
static_assert(offsetof(BP_AJBBattleGameState_C_UpdateRealDeltaTime, Temp_Now) == 0x000000, "Member 'BP_AJBBattleGameState_C_UpdateRealDeltaTime::Temp_Now' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_UpdateRealDeltaTime, CallFunc_GetTotalSeconds_ReturnValue) == 0x000008, "Member 'BP_AJBBattleGameState_C_UpdateRealDeltaTime::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_UpdateRealDeltaTime, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000010, "Member 'BP_AJBBattleGameState_C_UpdateRealDeltaTime::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_UpdateRealDeltaTime, CallFunc_Now_ReturnValue) == 0x000018, "Member 'BP_AJBBattleGameState_C_UpdateRealDeltaTime::CallFunc_Now_ReturnValue' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.CallChangeLivingPlayerCountEvent
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBBattleGameState_C_CallChangeLivingPlayerCountEvent final
{
public:
	float                                         LRate;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BuildString_Int_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLivingRate_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_CallChangeLivingPlayerCountEvent) == 0x000008, "Wrong alignment on BP_AJBBattleGameState_C_CallChangeLivingPlayerCountEvent");
static_assert(sizeof(BP_AJBBattleGameState_C_CallChangeLivingPlayerCountEvent) == 0x000020, "Wrong size on BP_AJBBattleGameState_C_CallChangeLivingPlayerCountEvent");
static_assert(offsetof(BP_AJBBattleGameState_C_CallChangeLivingPlayerCountEvent, LRate) == 0x000000, "Member 'BP_AJBBattleGameState_C_CallChangeLivingPlayerCountEvent::LRate' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_CallChangeLivingPlayerCountEvent, CallFunc_BuildString_Int_ReturnValue) == 0x000008, "Member 'BP_AJBBattleGameState_C_CallChangeLivingPlayerCountEvent::CallFunc_BuildString_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_CallChangeLivingPlayerCountEvent, CallFunc_GetLivingRate_ReturnValue) == 0x000018, "Member 'BP_AJBBattleGameState_C_CallChangeLivingPlayerCountEvent::CallFunc_GetLivingRate_ReturnValue' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.GetLivingPairCount
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBBattleGameState_C_GetLivingPairCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_GetLivingPairCount) == 0x000004, "Wrong alignment on BP_AJBBattleGameState_C_GetLivingPairCount");
static_assert(sizeof(BP_AJBBattleGameState_C_GetLivingPairCount) == 0x000004, "Wrong size on BP_AJBBattleGameState_C_GetLivingPairCount");
static_assert(offsetof(BP_AJBBattleGameState_C_GetLivingPairCount, Count) == 0x000000, "Member 'BP_AJBBattleGameState_C_GetLivingPairCount::Count' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.GetLivingRate
// 0x0014 (0x0014 - 0x0000)
struct BP_AJBBattleGameState_C_GetLivingRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_GetLivingRate) == 0x000004, "Wrong alignment on BP_AJBBattleGameState_C_GetLivingRate");
static_assert(sizeof(BP_AJBBattleGameState_C_GetLivingRate) == 0x000014, "Wrong size on BP_AJBBattleGameState_C_GetLivingRate");
static_assert(offsetof(BP_AJBBattleGameState_C_GetLivingRate, ReturnValue) == 0x000000, "Member 'BP_AJBBattleGameState_C_GetLivingRate::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetLivingRate, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'BP_AJBBattleGameState_C_GetLivingRate::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetLivingRate, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x000008, "Member 'BP_AJBBattleGameState_C_GetLivingRate::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetLivingRate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_AJBBattleGameState_C_GetLivingRate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetLivingRate, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'BP_AJBBattleGameState_C_GetLivingRate::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.CallChangeLivingPlayerCount
// 0x000C (0x000C - 0x0000)
struct BP_AJBBattleGameState_C_CallChangeLivingPlayerCount final
{
public:
	int32                                         LivingPlayerCount_0;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LivingPairCount_0;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLivingRate_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_CallChangeLivingPlayerCount) == 0x000004, "Wrong alignment on BP_AJBBattleGameState_C_CallChangeLivingPlayerCount");
static_assert(sizeof(BP_AJBBattleGameState_C_CallChangeLivingPlayerCount) == 0x00000C, "Wrong size on BP_AJBBattleGameState_C_CallChangeLivingPlayerCount");
static_assert(offsetof(BP_AJBBattleGameState_C_CallChangeLivingPlayerCount, LivingPlayerCount_0) == 0x000000, "Member 'BP_AJBBattleGameState_C_CallChangeLivingPlayerCount::LivingPlayerCount_0' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_CallChangeLivingPlayerCount, LivingPairCount_0) == 0x000004, "Member 'BP_AJBBattleGameState_C_CallChangeLivingPlayerCount::LivingPairCount_0' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_CallChangeLivingPlayerCount, CallFunc_GetLivingRate_ReturnValue) == 0x000008, "Member 'BP_AJBBattleGameState_C_CallChangeLivingPlayerCount::CallFunc_GetLivingRate_ReturnValue' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.InterruptLastSurvivorScene
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBBattleGameState_C_InterruptLastSurvivorScene final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBBattleGameState_C_InterruptLastSurvivorScene) == 0x000001, "Wrong alignment on BP_AJBBattleGameState_C_InterruptLastSurvivorScene");
static_assert(sizeof(BP_AJBBattleGameState_C_InterruptLastSurvivorScene) == 0x000001, "Wrong size on BP_AJBBattleGameState_C_InterruptLastSurvivorScene");
static_assert(offsetof(BP_AJBBattleGameState_C_InterruptLastSurvivorScene, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_AJBBattleGameState_C_InterruptLastSurvivorScene::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.DoesCharacterHavePlayerController
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBBattleGameState_C_DoesCharacterHavePlayerController final
{
public:
	class AAJBInGameCharacterBase*                CharacterBase;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBBattleGameState_C_DoesCharacterHavePlayerController) == 0x000008, "Wrong alignment on BP_AJBBattleGameState_C_DoesCharacterHavePlayerController");
static_assert(sizeof(BP_AJBBattleGameState_C_DoesCharacterHavePlayerController) == 0x000010, "Wrong size on BP_AJBBattleGameState_C_DoesCharacterHavePlayerController");
static_assert(offsetof(BP_AJBBattleGameState_C_DoesCharacterHavePlayerController, CharacterBase) == 0x000000, "Member 'BP_AJBBattleGameState_C_DoesCharacterHavePlayerController::CharacterBase' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_DoesCharacterHavePlayerController, ReturnValue) == 0x000008, "Member 'BP_AJBBattleGameState_C_DoesCharacterHavePlayerController::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_DoesCharacterHavePlayerController, CallFunc_IsPlayerController_ReturnValue) == 0x000009, "Member 'BP_AJBBattleGameState_C_DoesCharacterHavePlayerController::CallFunc_IsPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_DoesCharacterHavePlayerController, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'BP_AJBBattleGameState_C_DoesCharacterHavePlayerController::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.GetRemainingLimitTimespan_FromAfterOpenTheGame
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame final
{
public:
	struct FTimespan                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_TimespanZeroValue_ReturnValue;            // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_TimespanTimespan_ReturnValue;    // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_TimespanTimespan_ReturnValue;   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              K2Node_Select_Default;                             // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_Select1_Default;                            // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame) == 0x000008, "Wrong alignment on BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame");
static_assert(sizeof(BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame) == 0x000050, "Wrong size on BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame");
static_assert(offsetof(BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame, ReturnValue) == 0x000000, "Member 'BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame, Temp_bool_Variable) == 0x000008, "Member 'BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame, Temp_bool_Variable1) == 0x000009, "Member 'BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame, CallFunc_MakeTimespan_ReturnValue) == 0x000010, "Member 'BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame, CallFunc_TimespanZeroValue_ReturnValue) == 0x000018, "Member 'BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame::CallFunc_TimespanZeroValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame, CallFunc_Now_ReturnValue) == 0x000020, "Member 'BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000028, "Member 'BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame, CallFunc_Subtract_TimespanTimespan_ReturnValue) == 0x000030, "Member 'BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame::CallFunc_Subtract_TimespanTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame, CallFunc_LessEqual_TimespanTimespan_ReturnValue) == 0x000038, "Member 'BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame::CallFunc_LessEqual_TimespanTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame, K2Node_Select_Default) == 0x000040, "Member 'BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame, K2Node_Select1_Default) == 0x000048, "Member 'BP_AJBBattleGameState_C_GetRemainingLimitTimespan_FromAfterOpenTheGame::K2Node_Select1_Default' has a wrong offset!");

// Function BP_AJBBattleGameState.BP_AJBBattleGameState_C.GetElapsedGameTimespanWithoutTheWorld
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld final
{
public:
	struct FTimespan                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_FromMilliseconds_ReturnValue;             // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Private_IsPlayingReplay_ReturnValue;      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetRecordedElapsedInGameTime_ReturnValue; // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              K2Node_Select_Default;                             // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld) == 0x000008, "Wrong alignment on BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld");
static_assert(sizeof(BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld) == 0x000038, "Wrong size on BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld, ReturnValue) == 0x000000, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld, CallFunc_FromMilliseconds_ReturnValue) == 0x000008, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld::CallFunc_FromMilliseconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld, Temp_bool_Variable) == 0x000011, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld, CallFunc_Private_IsPlayingReplay_ReturnValue) == 0x000012, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld::CallFunc_Private_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld, CallFunc_GetRecordedElapsedInGameTime_ReturnValue) == 0x000018, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld::CallFunc_GetRecordedElapsedInGameTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld, CallFunc_Now_ReturnValue) == 0x000020, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld, K2Node_Select_Default) == 0x000028, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000030, "Member 'BP_AJBBattleGameState_C_GetElapsedGameTimespanWithoutTheWorld::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");

}


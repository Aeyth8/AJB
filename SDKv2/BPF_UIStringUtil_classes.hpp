#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPF_UIStringUtil

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPF_UIStringUtil.BPF_UIStringUtil_C
// 0x0000 (0x0028 - 0x0028)
class UBPF_UIStringUtil_C final : public UBlueprintFunctionLibrary
{
public:
	static void GetAJBBattleTypeString(ECharacterBattleType Type, class UObject* __WorldContext, class FText* Out);
	static void GetAJBRewardItemTypeString(ERewardItemType Type, class UObject* __WorldContext, class FText* Out);
	static void GetAJBAreaTitle(int32 StageId, int32 AreaId, class UObject* __WorldContext, class FText* Title, class FText* Sub_Title);
	static void GetAJBCurrentAreaTitle(class UObject* __WorldContext, class FText* Title, class FText* Sub_Title);
	static void GetAJBAreaTitleMap(int32 StageId, class UObject* __WorldContext, TMap<int32, struct FAJBStageAreaTitleInfo>* AreaTitleMap);
	static void GetAJBEmoteVoiceLimitStringLen(class UObject* __WorldContext, int32* Len);
	static void GetAJBRewardLimitStringLen(class UObject* __WorldContext, int32* Len);
	static void GetAJBEmoteChangeLimitStringLen(class UObject* __WorldContext, int32* Len);
	static void GetAJBRewardCharaProfileCardString(class UObject* __WorldContext, class FText* Out);
	static void GetAJBPadIconString(EAJBPadIconType PadType, class UObject* __WorldContext, class FText* Out);
	static class FString GetAJBRewardNameShortenedString(const class FString& Name_0, ERewardItemType ItemType, int32 LimitLength, class UObject* __WorldContext);
	static class FString GetAJBRewardNameForChallengeEventClassItem(const struct FChallengeEventClassContext& ClassContext, class UObject* __WorldContext);
	static void GetAJBConvertedServerDateTimeStringToText(const class FString& DateTimeWithYear, bool bBy27Hours, class UObject* __WorldContext, class FText* Result);
	static void GetAJBConvertedDateTimeBy27Hours(const class FString& YearIn, const class FString& MonthIn, const class FString& DayIn, const class FString& HourIn, class UObject* __WorldContext, class FString* YearOut, class FString* MonthOut, class FString* DayOut, class FString* HourOut);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPF_UIStringUtil_C">();
	}
	static class UBPF_UIStringUtil_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPF_UIStringUtil_C>();
	}
};
static_assert(alignof(UBPF_UIStringUtil_C) == 0x000008, "Wrong alignment on UBPF_UIStringUtil_C");
static_assert(sizeof(UBPF_UIStringUtil_C) == 0x000028, "Wrong size on UBPF_UIStringUtil_C");

}


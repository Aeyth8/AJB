#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBPassiveSkillBase

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AJB_structs.hpp"
#include "ST_FXVisibilityInfo_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.ExecuteUbergraph_BP_AJBPassiveSkillBase
// 0x0340 (0x0340 - 0x0000)
struct BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_FXVisibilityInfo                   K2Node_Event_PrevFXVisibility;                     // 0x0004(0x0002)(HasGetValueTypeHash)
	struct FST_FXVisibilityInfo                   K2Node_Event_FXVisibility;                         // 0x0006(0x0002)(HasGetValueTypeHash)
	bool                                          CallFunc_CheckActive_bActive;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanXOR_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0020(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAssociatedAkEvent_ReturnValue;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldUpdateLeftActiveTime_bShould;       // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Causer5;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bTriggeredByStand;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_CauserType2;                    // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SerialNumber2;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bTriggeredByStand1;                   // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bTriggeredByStand;                    // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanRequestEffect_ReturnValue;             // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77[0x1];                                       // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Causer4;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_PassiveSkillAffecterInterface_C> K2Node_DynamicCast_AsBI_Passive_Skill_Affecter_Interface; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDuration_Duration;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable1;                           // 0x00A8(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostAssociatedAkEvent_ReturnValue1;       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Causer3;                        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Causer2;                        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGameHUD_bIsValid;                 // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameHUD*                          CallFunc_GetAJBInGameHUD_ReturnValue;              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBInGameHUD_C>    K2Node_DynamicCast_AsBI_AJBIn_Game_HUD;            // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RegisterNewPassiveSkill_bSuccess;         // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetCurrentPossessedCharacter_CharacterBase; // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_CustomEvent_SeparateFrom;                   // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_CustomEvent_SeparateTo;                     // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue1;         // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameMovableStand_C*            K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand;  // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsForwardTransition_ReturnValue;          // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Causer1;                        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_CauserType1;                    // 0x0188(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SerialNumber1;                  // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character3;     // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Causer;                         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_CauserType;                     // 0x01B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SerialNumber;                   // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_PassiveSkillAffecterInterface_C> K2Node_DynamicCast_AsBI_Passive_Skill_Affecter_Interface1; // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetCauserOwnerCharacterBP_CharacterBP;    // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bActiveForOwner;                // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bActiveForMovableStand;         // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x01E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue8;                     // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue9;                     // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x01E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E7[0x1];                                      // 0x01E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue4;                    // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base;    // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FA[0x6];                                      // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue5;                    // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character4;     // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue6;                    // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character5;     // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x022C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23A[0x2];                                      // 0x023A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select1_Default;                            // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue10;                    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_243[0x5];                                      // 0x0243(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_FactorTag;                      // 0x0248(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bShouldUpdateActiveTime;        // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckShouldUpdateLeftActiveTime_bShouldupdateLeftActiveTime; // 0x0252(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue1;          // 0x0253(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent1;    // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_262[0x6];                                      // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AAJBInGameCharacterBase* SeparateFrom, class AAJBInGameCharacterBase* SeparateTo)> K2Node_CreateDelegate_OutputDelegate;              // 0x0268(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_bShouldUpdateLeftActiveTime;    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue1;                    // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x027A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x027B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetParticleTag_ParticleTag;               // 0x0280(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue2;          // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_AdditionalTime1;                // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_AdditionalTime;                 // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue7;                    // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character6;     // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess11;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue11;                    // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AA[0x6];                                      // 0x02AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue2;         // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue1;        // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BA[0x6];                                      // 0x02BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetParticleTag_ParticleTag1;              // 0x02C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetParticleTag_ParticleTag2;              // 0x02C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect; // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect1; // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue12;                    // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue8;                    // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character7;     // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess12;                     // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue13;                    // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue14;                    // 0x02FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue; // 0x02FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue; // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x02FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FE[0x2];                                      // 0x02FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface; // 0x0300(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess13;                     // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy;         // 0x0318(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase) == 0x000008, "Wrong alignment on BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase) == 0x000340, "Wrong size on BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, EntryPoint) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_Event_PrevFXVisibility) == 0x000004, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_Event_PrevFXVisibility' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_Event_FXVisibility) == 0x000006, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_Event_FXVisibility' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_CheckActive_bActive) == 0x000008, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_CheckActive_bActive' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, Temp_float_Variable) == 0x00000C, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_BooleanXOR_ReturnValue) == 0x000010, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_BooleanXOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, Temp_delegate_Variable) == 0x000020, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000030, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_Event_DeltaSeconds) == 0x00003C, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_PostAssociatedAkEvent_ReturnValue) == 0x000040, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_PostAssociatedAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsValid_ReturnValue1) == 0x000044, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsValid_ReturnValue2) == 0x000045, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_FClamp_ReturnValue) == 0x00004C, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_ShouldUpdateLeftActiveTime_bShould) == 0x000051, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_ShouldUpdateLeftActiveTime_bShould' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CustomEvent_Causer5) == 0x000058, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CustomEvent_Causer5' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CustomEvent_bTriggeredByStand) == 0x000060, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CustomEvent_bTriggeredByStand' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CustomEvent_CauserType2) == 0x000068, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CustomEvent_CauserType2' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CustomEvent_SerialNumber2) == 0x000070, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CustomEvent_SerialNumber2' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_Event_bTriggeredByStand1) == 0x000074, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_Event_bTriggeredByStand1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_Event_bTriggeredByStand) == 0x000075, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_Event_bTriggeredByStand' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_CanRequestEffect_ReturnValue) == 0x000076, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_CanRequestEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CustomEvent_Causer4) == 0x000078, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CustomEvent_Causer4' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, Temp_float_Variable1) == 0x000080, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_AsBI_Passive_Skill_Affecter_Interface) == 0x000088, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_AsBI_Passive_Skill_Affecter_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_bSuccess1) == 0x000098, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_GetDuration_Duration) == 0x00009C, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_GetDuration_Duration' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_DoesImplementInterface_ReturnValue) == 0x0000A0, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, Temp_delegate_Variable1) == 0x0000A8, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::Temp_delegate_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_PostAssociatedAkEvent_ReturnValue1) == 0x0000B8, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_PostAssociatedAkEvent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsValid_ReturnValue3) == 0x0000BC, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsValid_ReturnValue4) == 0x0000BD, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_Event_Operator) == 0x0000C0, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_Event_Time) == 0x0000C8, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_Event_Timing) == 0x0000CC, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_Event_bEnable) == 0x0000CD, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_Event_bOperatorIsEmpty) == 0x0000CE, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, Temp_bool_Variable) == 0x0000CF, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_GetOwner_ReturnValue1) == 0x0000D0, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x0000D8, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_bSuccess2) == 0x0000E0, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_Select_Default) == 0x0000E4, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CustomEvent_Causer3) == 0x0000E8, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CustomEvent_Causer3' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CustomEvent_Causer2) == 0x0000F0, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CustomEvent_Causer2' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsValidClass_ReturnValue) == 0x0000F8, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsValid_ReturnValue5) == 0x0000F9, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsGameplayTagValid_ReturnValue) == 0x0000FA, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_GetAJBInGameHUD_bIsValid) == 0x0000FB, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_GetAJBInGameHUD_bIsValid' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_GetAJBInGameHUD_ReturnValue) == 0x000100, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_GetAJBInGameHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_AsBI_AJBIn_Game_HUD) == 0x000108, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_AsBI_AJBIn_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_bSuccess3) == 0x000118, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_RegisterNewPassiveSkill_bSuccess) == 0x000119, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_RegisterNewPassiveSkill_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000120, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_GetCurrentPossessedCharacter_CharacterBase) == 0x000128, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_GetCurrentPossessedCharacter_CharacterBase' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000130, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_GetOwner_ReturnValue2) == 0x000138, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CustomEvent_SeparateFrom) == 0x000140, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CustomEvent_SeparateFrom' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CustomEvent_SeparateTo) == 0x000148, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CustomEvent_SeparateTo' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x000150, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_bSuccess4) == 0x000158, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_K2_GetRootComponent_ReturnValue1) == 0x000160, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_K2_GetRootComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand) == 0x000168, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_bSuccess5) == 0x000170, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsForwardTransition_ReturnValue) == 0x000171, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsForwardTransition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_GetOwner_ReturnValue3) == 0x000178, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CustomEvent_Causer1) == 0x000180, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CustomEvent_Causer1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CustomEvent_CauserType1) == 0x000188, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CustomEvent_CauserType1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CustomEvent_SerialNumber1) == 0x000190, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CustomEvent_SerialNumber1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character3) == 0x000198, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character3' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_bSuccess6) == 0x0001A0, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CustomEvent_Causer) == 0x0001A8, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CustomEvent_Causer' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CustomEvent_CauserType) == 0x0001B0, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CustomEvent_CauserType' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CustomEvent_SerialNumber) == 0x0001B8, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CustomEvent_SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_AsBI_Passive_Skill_Affecter_Interface1) == 0x0001C0, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_AsBI_Passive_Skill_Affecter_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_bSuccess7) == 0x0001D0, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_GetCauserOwnerCharacterBP_CharacterBP) == 0x0001D8, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_GetCauserOwnerCharacterBP_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsValid_ReturnValue6) == 0x0001E0, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CustomEvent_bActiveForOwner) == 0x0001E1, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CustomEvent_bActiveForOwner' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CustomEvent_bActiveForMovableStand) == 0x0001E2, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CustomEvent_bActiveForMovableStand' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsValid_ReturnValue7) == 0x0001E3, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsValid_ReturnValue8) == 0x0001E4, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsValid_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsValid_ReturnValue9) == 0x0001E5, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsValid_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, Temp_bool_Has_Been_Initd_Variable) == 0x0001E6, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_GetOwner_ReturnValue4) == 0x0001E8, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_GetOwner_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_AsAJBIn_Game_Character_Base) == 0x0001F0, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_AsAJBIn_Game_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_bSuccess8) == 0x0001F8, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_HasLocalSharedController_ReturnValue) == 0x0001F9, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_GetOwner_ReturnValue5) == 0x000200, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_GetOwner_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character4) == 0x000208, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character4' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_bSuccess9) == 0x000210, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_GetOwner_ReturnValue6) == 0x000218, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_GetOwner_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character5) == 0x000220, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character5' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_bSuccess10) == 0x000228, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00022C, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, Temp_bool_Variable1) == 0x000238, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000239, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_Select1_Default) == 0x00023C, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsValid_ReturnValue10) == 0x000240, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsValid_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000241, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsServer_ReturnValue) == 0x000242, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CustomEvent_FactorTag) == 0x000248, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CustomEvent_FactorTag' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CustomEvent_bShouldUpdateActiveTime) == 0x000250, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CustomEvent_bShouldUpdateActiveTime' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_Event_EndPlayReason) == 0x000251, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_CheckShouldUpdateLeftActiveTime_bShouldupdateLeftActiveTime) == 0x000252, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_CheckShouldUpdateLeftActiveTime_bShouldupdateLeftActiveTime' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsGameplayTagValid_ReturnValue1) == 0x000253, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsGameplayTagValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_RequestWwiseEventOnLocal_AkComponent1) == 0x000258, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_RequestWwiseEventOnLocal_AkComponent1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsDedicatedServer_ReturnValue) == 0x000260, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsDedicatedServer_ReturnValue1) == 0x000261, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CreateDelegate_OutputDelegate) == 0x000268, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CustomEvent_bShouldUpdateLeftActiveTime) == 0x000278, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CustomEvent_bShouldUpdateLeftActiveTime' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsServer_ReturnValue1) == 0x000279, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_Not_PreBool_ReturnValue) == 0x00027A, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, Temp_bool_IsClosed_Variable) == 0x00027B, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_GetParticleTag_ParticleTag) == 0x000280, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_GetParticleTag_ParticleTag' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsGameplayTagValid_ReturnValue2) == 0x000288, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsGameplayTagValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CustomEvent_AdditionalTime1) == 0x00028C, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CustomEvent_AdditionalTime1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_CustomEvent_AdditionalTime) == 0x000290, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_CustomEvent_AdditionalTime' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_Add_FloatFloat_ReturnValue) == 0x000294, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_GetOwner_ReturnValue7) == 0x000298, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_GetOwner_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character6) == 0x0002A0, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character6' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_bSuccess11) == 0x0002A8, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_bSuccess11' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsValid_ReturnValue11) == 0x0002A9, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsValid_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_K2_GetRootComponent_ReturnValue2) == 0x0002B0, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_K2_GetRootComponent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_K2_AttachToComponent_ReturnValue1) == 0x0002B8, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_K2_AttachToComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x0002B9, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_GetParticleTag_ParticleTag1) == 0x0002C0, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_GetParticleTag_ParticleTag1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_GetParticleTag_ParticleTag2) == 0x0002C8, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_GetParticleTag_ParticleTag2' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect) == 0x0002D0, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect1) == 0x0002D8, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsValid_ReturnValue12) == 0x0002E0, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsValid_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_GetOwner_ReturnValue8) == 0x0002E8, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_GetOwner_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character7) == 0x0002F0, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character7' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_bSuccess12) == 0x0002F8, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_bSuccess12' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsValid_ReturnValue13) == 0x0002F9, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsValid_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_IsValid_ReturnValue14) == 0x0002FA, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_IsValid_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_CheckCharacterBehavior_Critical_bReturnValue) == 0x0002FB, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_CheckCharacterBehavior_Critical_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_CheckCharacterBehavior_Active_bReturnValue) == 0x0002FC, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_CheckCharacterBehavior_Active_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_Not_PreBool_ReturnValue1) == 0x0002FD, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface) == 0x000300, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, K2Node_DynamicCast_bSuccess13) == 0x000310, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::K2Node_DynamicCast_bSuccess13' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_GetGameplayTags_TagContainerCopy) == 0x000318, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_GetGameplayTags_TagContainerCopy' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase, CallFunc_HasTag_ReturnValue) == 0x000338, "Member 'BP_AJBPassiveSkillBase_C_ExecuteUbergraph_BP_AJBPassiveSkillBase::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.ROS_ExtendActiveTime
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBPassiveSkillBase_C_ROS_ExtendActiveTime final
{
public:
	float                                         AdditionalTime;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_ROS_ExtendActiveTime) == 0x000004, "Wrong alignment on BP_AJBPassiveSkillBase_C_ROS_ExtendActiveTime");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_ROS_ExtendActiveTime) == 0x000004, "Wrong size on BP_AJBPassiveSkillBase_C_ROS_ExtendActiveTime");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ROS_ExtendActiveTime, AdditionalTime) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_ROS_ExtendActiveTime::AdditionalTime' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.ExtendActiveTime_Local
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBPassiveSkillBase_C_ExtendActiveTime_Local final
{
public:
	float                                         AdditionalTime;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_ExtendActiveTime_Local) == 0x000004, "Wrong alignment on BP_AJBPassiveSkillBase_C_ExtendActiveTime_Local");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_ExtendActiveTime_Local) == 0x000004, "Wrong size on BP_AJBPassiveSkillBase_C_ExtendActiveTime_Local");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ExtendActiveTime_Local, AdditionalTime) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_ExtendActiveTime_Local::AdditionalTime' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.MC_SetShouldUpdateLectActiveTime
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBPassiveSkillBase_C_MC_SetShouldUpdateLectActiveTime final
{
public:
	bool                                          bShouldUpdateLeftActiveTime;                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_MC_SetShouldUpdateLectActiveTime) == 0x000001, "Wrong alignment on BP_AJBPassiveSkillBase_C_MC_SetShouldUpdateLectActiveTime");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_MC_SetShouldUpdateLectActiveTime) == 0x000001, "Wrong size on BP_AJBPassiveSkillBase_C_MC_SetShouldUpdateLectActiveTime");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_MC_SetShouldUpdateLectActiveTime, bShouldUpdateLeftActiveTime) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_MC_SetShouldUpdateLectActiveTime::bShouldUpdateLeftActiveTime' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBPassiveSkillBase_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_AJBPassiveSkillBase_C_ReceiveEndPlay");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_AJBPassiveSkillBase_C_ReceiveEndPlay");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.ROS_SetShouldUpdateLeftActiveTime
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBPassiveSkillBase_C_ROS_SetShouldUpdateLeftActiveTime final
{
public:
	struct FGameplayTag                           FactorTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldUpdateActiveTime;                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_ROS_SetShouldUpdateLeftActiveTime) == 0x000008, "Wrong alignment on BP_AJBPassiveSkillBase_C_ROS_SetShouldUpdateLeftActiveTime");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_ROS_SetShouldUpdateLeftActiveTime) == 0x000010, "Wrong size on BP_AJBPassiveSkillBase_C_ROS_SetShouldUpdateLeftActiveTime");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ROS_SetShouldUpdateLeftActiveTime, FactorTag) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_ROS_SetShouldUpdateLeftActiveTime::FactorTag' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ROS_SetShouldUpdateLeftActiveTime, bShouldUpdateActiveTime) == 0x000008, "Member 'BP_AJBPassiveSkillBase_C_ROS_SetShouldUpdateLeftActiveTime::bShouldUpdateActiveTime' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.ActiveContinuedParticle
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBPassiveSkillBase_C_ActiveContinuedParticle final
{
public:
	bool                                          bActiveForOwner;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bActiveForMovableStand;                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_ActiveContinuedParticle) == 0x000001, "Wrong alignment on BP_AJBPassiveSkillBase_C_ActiveContinuedParticle");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_ActiveContinuedParticle) == 0x000002, "Wrong size on BP_AJBPassiveSkillBase_C_ActiveContinuedParticle");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ActiveContinuedParticle, bActiveForOwner) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_ActiveContinuedParticle::bActiveForOwner' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ActiveContinuedParticle, bActiveForMovableStand) == 0x000001, "Member 'BP_AJBPassiveSkillBase_C_ActiveContinuedParticle::bActiveForMovableStand' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.OnMC_ActivePassive
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBPassiveSkillBase_C_OnMC_ActivePassive final
{
public:
	class UObject*                                Causer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CauserType;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_OnMC_ActivePassive) == 0x000008, "Wrong alignment on BP_AJBPassiveSkillBase_C_OnMC_ActivePassive");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_OnMC_ActivePassive) == 0x000018, "Wrong size on BP_AJBPassiveSkillBase_C_OnMC_ActivePassive");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_OnMC_ActivePassive, Causer) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_OnMC_ActivePassive::Causer' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_OnMC_ActivePassive, CauserType) == 0x000008, "Member 'BP_AJBPassiveSkillBase_C_OnMC_ActivePassive::CauserType' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_OnMC_ActivePassive, SerialNumber) == 0x000010, "Member 'BP_AJBPassiveSkillBase_C_OnMC_ActivePassive::SerialNumber' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.MC_ActivePassive_
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBPassiveSkillBase_C_MC_ActivePassive_ final
{
public:
	class UObject*                                Causer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CauserType;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_MC_ActivePassive_) == 0x000008, "Wrong alignment on BP_AJBPassiveSkillBase_C_MC_ActivePassive_");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_MC_ActivePassive_) == 0x000018, "Wrong size on BP_AJBPassiveSkillBase_C_MC_ActivePassive_");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_MC_ActivePassive_, Causer) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_MC_ActivePassive_::Causer' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_MC_ActivePassive_, CauserType) == 0x000008, "Member 'BP_AJBPassiveSkillBase_C_MC_ActivePassive_::CauserType' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_MC_ActivePassive_, SerialNumber) == 0x000010, "Member 'BP_AJBPassiveSkillBase_C_MC_ActivePassive_::SerialNumber' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.OnPossessTargetChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBPassiveSkillBase_C_OnPossessTargetChanged final
{
public:
	class AAJBInGameCharacterBase*                SeparateFrom;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                SeparateTo;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_OnPossessTargetChanged) == 0x000008, "Wrong alignment on BP_AJBPassiveSkillBase_C_OnPossessTargetChanged");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_OnPossessTargetChanged) == 0x000010, "Wrong size on BP_AJBPassiveSkillBase_C_OnPossessTargetChanged");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_OnPossessTargetChanged, SeparateFrom) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_OnPossessTargetChanged::SeparateFrom' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_OnPossessTargetChanged, SeparateTo) == 0x000008, "Member 'BP_AJBPassiveSkillBase_C_OnPossessTargetChanged::SeparateTo' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.StopSE
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBPassiveSkillBase_C_StopSE final
{
public:
	class UObject*                                Causer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_StopSE) == 0x000008, "Wrong alignment on BP_AJBPassiveSkillBase_C_StopSE");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_StopSE) == 0x000008, "Wrong size on BP_AJBPassiveSkillBase_C_StopSE");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_StopSE, Causer) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_StopSE::Causer' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.PlaySE
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBPassiveSkillBase_C_PlaySE final
{
public:
	class UObject*                                Causer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_PlaySE) == 0x000008, "Wrong alignment on BP_AJBPassiveSkillBase_C_PlaySE");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_PlaySE) == 0x000008, "Wrong size on BP_AJBPassiveSkillBase_C_PlaySE");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_PlaySE, Causer) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_PlaySE::Causer' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.UpdateLeftTime
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBPassiveSkillBase_C_UpdateLeftTime final
{
public:
	class UObject*                                Causer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_UpdateLeftTime) == 0x000008, "Wrong alignment on BP_AJBPassiveSkillBase_C_UpdateLeftTime");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_UpdateLeftTime) == 0x000008, "Wrong size on BP_AJBPassiveSkillBase_C_UpdateLeftTime");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_UpdateLeftTime, Causer) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_UpdateLeftTime::Causer' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.ActivePassive
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBPassiveSkillBase_C_ActivePassive final
{
public:
	class UObject*                                Causer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTriggeredByStand;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CauserType;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_ActivePassive) == 0x000008, "Wrong alignment on BP_AJBPassiveSkillBase_C_ActivePassive");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_ActivePassive) == 0x000020, "Wrong size on BP_AJBPassiveSkillBase_C_ActivePassive");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ActivePassive, Causer) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_ActivePassive::Causer' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ActivePassive, bTriggeredByStand) == 0x000008, "Member 'BP_AJBPassiveSkillBase_C_ActivePassive::bTriggeredByStand' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ActivePassive, CauserType) == 0x000010, "Member 'BP_AJBPassiveSkillBase_C_ActivePassive::CauserType' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ActivePassive, SerialNumber) == 0x000018, "Member 'BP_AJBPassiveSkillBase_C_ActivePassive::SerialNumber' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.NotifyChangeFXVisibility
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBPassiveSkillBase_C_NotifyChangeFXVisibility final
{
public:
	struct FST_FXVisibilityInfo                   PrevFXVisibility;                                  // 0x0000(0x0002)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FST_FXVisibilityInfo                   FXVisibility;                                      // 0x0002(0x0002)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_NotifyChangeFXVisibility) == 0x000001, "Wrong alignment on BP_AJBPassiveSkillBase_C_NotifyChangeFXVisibility");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_NotifyChangeFXVisibility) == 0x000004, "Wrong size on BP_AJBPassiveSkillBase_C_NotifyChangeFXVisibility");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_NotifyChangeFXVisibility, PrevFXVisibility) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_NotifyChangeFXVisibility::PrevFXVisibility' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_NotifyChangeFXVisibility, FXVisibility) == 0x000002, "Member 'BP_AJBPassiveSkillBase_C_NotifyChangeFXVisibility::FXVisibility' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.ShouldUpdateLeftActiveTime
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBPassiveSkillBase_C_ShouldUpdateLeftActiveTime final
{
public:
	bool                                          bShould;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_ShouldUpdateLeftActiveTime) == 0x000001, "Wrong alignment on BP_AJBPassiveSkillBase_C_ShouldUpdateLeftActiveTime");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_ShouldUpdateLeftActiveTime) == 0x000003, "Wrong size on BP_AJBPassiveSkillBase_C_ShouldUpdateLeftActiveTime");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ShouldUpdateLeftActiveTime, bShould) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_ShouldUpdateLeftActiveTime::bShould' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ShouldUpdateLeftActiveTime, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'BP_AJBPassiveSkillBase_C_ShouldUpdateLeftActiveTime::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ShouldUpdateLeftActiveTime, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_AJBPassiveSkillBase_C_ShouldUpdateLeftActiveTime::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.GetCurrentPossessedCharacter
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBPassiveSkillBase_C_GetCurrentPossessedCharacter final
{
public:
	class AAJBInGameCharacterBase*                CharacterBase;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckStandSeparation_bSeparation;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_GetCurrentPossessedCharacter) == 0x000008, "Wrong alignment on BP_AJBPassiveSkillBase_C_GetCurrentPossessedCharacter");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_GetCurrentPossessedCharacter) == 0x000030, "Wrong size on BP_AJBPassiveSkillBase_C_GetCurrentPossessedCharacter");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_GetCurrentPossessedCharacter, CharacterBase) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_GetCurrentPossessedCharacter::CharacterBase' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_GetCurrentPossessedCharacter, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBPassiveSkillBase_C_GetCurrentPossessedCharacter::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_GetCurrentPossessedCharacter, Temp_bool_Variable) == 0x000010, "Member 'BP_AJBPassiveSkillBase_C_GetCurrentPossessedCharacter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_GetCurrentPossessedCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBPassiveSkillBase_C_GetCurrentPossessedCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_GetCurrentPossessedCharacter, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBPassiveSkillBase_C_GetCurrentPossessedCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_GetCurrentPossessedCharacter, CallFunc_CheckStandSeparation_bSeparation) == 0x000021, "Member 'BP_AJBPassiveSkillBase_C_GetCurrentPossessedCharacter::CallFunc_CheckStandSeparation_bSeparation' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_GetCurrentPossessedCharacter, CallFunc_IsValid_ReturnValue) == 0x000022, "Member 'BP_AJBPassiveSkillBase_C_GetCurrentPossessedCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_GetCurrentPossessedCharacter, K2Node_Select_Default) == 0x000028, "Member 'BP_AJBPassiveSkillBase_C_GetCurrentPossessedCharacter::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.ChangeParticleVisibility
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBPassiveSkillBase_C_ChangeParticleVisibility final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_ChangeParticleVisibility) == 0x000001, "Wrong alignment on BP_AJBPassiveSkillBase_C_ChangeParticleVisibility");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_ChangeParticleVisibility) == 0x000003, "Wrong size on BP_AJBPassiveSkillBase_C_ChangeParticleVisibility");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ChangeParticleVisibility, bNewVisibility) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_ChangeParticleVisibility::bNewVisibility' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ChangeParticleVisibility, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_AJBPassiveSkillBase_C_ChangeParticleVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ChangeParticleVisibility, CallFunc_IsValid_ReturnValue1) == 0x000002, "Member 'BP_AJBPassiveSkillBase_C_ChangeParticleVisibility::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.OnRegisterPassiveWidget
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBPassiveSkillBase_C_OnRegisterPassiveWidget final
{
public:
	class UWB_AJBPassiveSkillWidget_C*            NewPassiveWidget;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_OnRegisterPassiveWidget) == 0x000008, "Wrong alignment on BP_AJBPassiveSkillBase_C_OnRegisterPassiveWidget");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_OnRegisterPassiveWidget) == 0x000010, "Wrong size on BP_AJBPassiveSkillBase_C_OnRegisterPassiveWidget");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_OnRegisterPassiveWidget, NewPassiveWidget) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_OnRegisterPassiveWidget::NewPassiveWidget' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_OnRegisterPassiveWidget, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_AJBPassiveSkillBase_C_OnRegisterPassiveWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.OnUnregisterPassiveWidget
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBPassiveSkillBase_C_OnUnregisterPassiveWidget final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_OnUnregisterPassiveWidget) == 0x000001, "Wrong alignment on BP_AJBPassiveSkillBase_C_OnUnregisterPassiveWidget");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_OnUnregisterPassiveWidget) == 0x000001, "Wrong size on BP_AJBPassiveSkillBase_C_OnUnregisterPassiveWidget");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_OnUnregisterPassiveWidget, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_OnUnregisterPassiveWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.TryDestroyParticles
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBPassiveSkillBase_C_TryDestroyParticles final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_TryDestroyParticles) == 0x000001, "Wrong alignment on BP_AJBPassiveSkillBase_C_TryDestroyParticles");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_TryDestroyParticles) == 0x000002, "Wrong size on BP_AJBPassiveSkillBase_C_TryDestroyParticles");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_TryDestroyParticles, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_TryDestroyParticles::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_TryDestroyParticles, CallFunc_IsValid_ReturnValue1) == 0x000001, "Member 'BP_AJBPassiveSkillBase_C_TryDestroyParticles::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.GetParticleTag
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBPassiveSkillBase_C_GetParticleTag final
{
public:
	struct FGameplayTag                           ParticleTag_0;                                     // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStageDark_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_GetParticleTag) == 0x000008, "Wrong alignment on BP_AJBPassiveSkillBase_C_GetParticleTag");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_GetParticleTag) == 0x000018, "Wrong size on BP_AJBPassiveSkillBase_C_GetParticleTag");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_GetParticleTag, ParticleTag_0) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_GetParticleTag::ParticleTag_0' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_GetParticleTag, CallFunc_IsStageDark_ReturnValue) == 0x000008, "Member 'BP_AJBPassiveSkillBase_C_GetParticleTag::CallFunc_IsStageDark_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_GetParticleTag, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000009, "Member 'BP_AJBPassiveSkillBase_C_GetParticleTag::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_GetParticleTag, Temp_bool_Variable) == 0x00000A, "Member 'BP_AJBPassiveSkillBase_C_GetParticleTag::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_GetParticleTag, K2Node_Select_Default) == 0x000010, "Member 'BP_AJBPassiveSkillBase_C_GetParticleTag::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.CheckShouldUpdateLeftActiveTime
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime final
{
public:
	struct FGameplayTag                           NewFactorTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bShouldUpdateLeftActiveTime;                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<bool>                                  CallFunc_Map_Values_Values;                        // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Array_Get_Item;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime) == 0x000008, "Wrong alignment on BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime) == 0x000040, "Wrong size on BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime, NewFactorTag) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime::NewFactorTag' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime, NewParam) == 0x000008, "Member 'BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime::NewParam' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime, bShouldUpdateLeftActiveTime) == 0x000009, "Member 'BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime::bShouldUpdateLeftActiveTime' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime, CallFunc_Map_Values_Values) == 0x000018, "Member 'BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime, CallFunc_Array_Length_ReturnValue1) == 0x000034, "Member 'BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BP_AJBPassiveSkillBase_C_CheckShouldUpdateLeftActiveTime::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.DebugPrintShouldUpdateMap
// 0x0098 (0x0098 - 0x0000)
struct BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  CallFunc_Map_Values_Values;                        // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FGameplayTag>                   CallFunc_Map_Keys_Keys;                            // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Array_Get_Item;                           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item1;                          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap) == 0x000008, "Wrong alignment on BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap) == 0x000098, "Wrong size on BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap, CallFunc_Map_Values_Values) == 0x000010, "Member 'BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap, CallFunc_Map_Keys_Keys) == 0x000020, "Member 'BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap, CallFunc_Array_Get_Item1) == 0x000038, "Member 'BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap, CallFunc_Conv_BoolToString_ReturnValue) == 0x000040, "Member 'BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap, CallFunc_GetTagName_ReturnValue) == 0x000050, "Member 'BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap, CallFunc_Conv_NameToString_ReturnValue) == 0x000060, "Member 'BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap, CallFunc_Concat_StrStr_ReturnValue1) == 0x000088, "Member 'BP_AJBPassiveSkillBase_C_DebugPrintShouldUpdateMap::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.GetCurrentPhase
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBPassiveSkillBase_C_GetCurrentPhase final
{
public:
	int32                                         Phase;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_GetCurrentPhase) == 0x000004, "Wrong alignment on BP_AJBPassiveSkillBase_C_GetCurrentPhase");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_GetCurrentPhase) == 0x000004, "Wrong size on BP_AJBPassiveSkillBase_C_GetCurrentPhase");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_GetCurrentPhase, Phase) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_GetCurrentPhase::Phase' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBPassiveSkillBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBPassiveSkillBase_C_ReceiveTick");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBPassiveSkillBase_C_ReceiveTick");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.OnActionInactivate
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBPassiveSkillBase_C_OnActionInactivate final
{
public:
	bool                                          bTriggeredByStand;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_OnActionInactivate) == 0x000001, "Wrong alignment on BP_AJBPassiveSkillBase_C_OnActionInactivate");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_OnActionInactivate) == 0x000001, "Wrong size on BP_AJBPassiveSkillBase_C_OnActionInactivate");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_OnActionInactivate, bTriggeredByStand) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_OnActionInactivate::bTriggeredByStand' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.OnActionActivate
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBPassiveSkillBase_C_OnActionActivate final
{
public:
	bool                                          bTriggeredByStand;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_OnActionActivate) == 0x000001, "Wrong alignment on BP_AJBPassiveSkillBase_C_OnActionActivate");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_OnActionActivate) == 0x000001, "Wrong size on BP_AJBPassiveSkillBase_C_OnActionActivate");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_OnActionActivate, bTriggeredByStand) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_OnActionActivate::bTriggeredByStand' has a wrong offset!");

// Function BP_AJBPassiveSkillBase.BP_AJBPassiveSkillBase_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBPassiveSkillBase_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPassiveSkillBase_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBPassiveSkillBase_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBPassiveSkillBase_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBPassiveSkillBase_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBPassiveSkillBase_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBPassiveSkillBase_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBPassiveSkillBase_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBPassiveSkillBase_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveSkillBase_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBPassiveSkillBase_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

}


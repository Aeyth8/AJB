#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBTorrentialRainCloud

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BP_AJBActorBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBTorrentialRainCloud.BP_AJBTorrentialRainCloud_C
// 0x0168 (0x0498 - 0x0330)
class ABP_AJBTorrentialRainCloud_C final : public ABP_AJBActorBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0330(0x0008)(Transient, DuplicateTransient)
	class UDecalComponent*                        Decal;                                             // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         EndTimeline_PPRate_E28FE874410355B3E3AED1A0946B0099; // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndTimeline_DecalRate_E28FE874410355B3E3AED1A0946B0099; // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            EndTimeline__Direction_E28FE874410355B3E3AED1A0946B0099; // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     EndTimeline;                                       // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StatTimeline_PPRate_45818A93487BA87ABE737180F368C2C3; // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StatTimeline_DecalRate_45818A93487BA87ABE737180F368C2C3; // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            StatTimeline__Direction_45818A93487BA87ABE737180F368C2C3; // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     StatTimeline;                                      // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bActive;                                           // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DMIDecal;                                          // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DecalMaxOpacity;                                   // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DecalOpacityParameterName;                         // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMIPP;                                             // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              MTPP;                                              // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaterialIndexCharacter;                            // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaterialIndexStand;                                // 0x03A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PPMaxOpacity;                                      // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   PPOpacityParameterName;                            // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ActorMoveInterpSpeed;                              // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x03BC(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffsetZFromHead;                                   // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PPMaxIntencity;                                    // 0x03CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PPIntencityParameterName;                          // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 IntencityList;                                     // 0x03D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class ABP_AJBInGameParticleEffect_C*          AJBCloudParticle;                                  // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CloudParticleTagList;                              // 0x03F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         GionThunderRepeatCount;                            // 0x0400(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GionThunderRepeatInterval;                         // 0x0404(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GionThunderRepeatNum;                              // 0x0408(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Causer;                                            // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GionRainRepeatInterval;                            // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TimerHandleGionRainRepeat;                         // 0x0420(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TArray<struct FGameplayTag>                   CloudStartParticleTagList;                         // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FGameplayTag>                   SETagListActive;                                   // 0x0438(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UAkComponent*                           SEActive;                                          // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   GameplayTagsRepeat;                                // 0x0450(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         GionRainLoopCount;                                 // 0x0460(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GionRainLoopLimit;                                 // 0x0464(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LargeGionPercentage;                               // 0x0468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDuringTimeStop;                                   // 0x046C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DecalZUnderOffset;                                 // 0x0470(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PrevOwnerCapsuleHalfHeight;                        // 0x0474(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DecalSizeX;                                        // 0x0478(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DecalSizeY;                                        // 0x047C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugShowDecalLocationAndSize;                    // 0x0480(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bEnableActiveSE;                                   // 0x0481(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_482[0x2];                                      // 0x0482(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InWaterCloudPositionZOffset;                       // 0x0484(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           UnderWaterParticleTag;                             // 0x0488(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          UnderwaterParticle;                                // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBTorrentialRainCloud(int32 EntryPoint);
	void UpdateUnderWaterParticle();
	void OnChangeCameraStatus(bool IsCameraInWater);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ChangeFXVisibility(bool bEnable);
	void ChangeVisibility(bool bNewVisibility);
	void ChangeTimeStop(bool bEnable);
	void RetryRequestGionThunder();
	void RequestGionRain();
	void RequestGionThunder();
	void TryEndActiveSE();
	void PlayActiveSE(int32 NextPhase);
	void RetryRequestGionRainLoop();
	void ChangePhase(int32 NewPhase);
	void ReceiveTick(float DeltaSeconds);
	void ChangeEnable(bool bEnable);
	void StopEndTimeline();
	void StopStartTimeline();
	void PlayEndTimeline();
	void PlayStartTimeline();
	void EndTimeline__UpdateFunc();
	void EndTimeline__FinishedFunc();
	void StatTimeline__UpdateFunc();
	void StatTimeline__FinishedFunc();
	void UserConstructionScript();
	void SetDecalOpacity(float Value);
	void TryCreateDMIs();
	void SetPPOpacity(float Value);
	void SetPPIntencity(float Value);
	void GetCharacterHeadLocation(struct FVector* HeadLocation);
	void DestroyParticlePolitic(int32 NewPhase);
	void TrySpeakVoiceEnd();
	void RequestSEThunder();
	void RequestRepeatGion();
	void UpdateDecal();
	void ChangeEnableActiveSE(bool bEnable);
	struct FVector GetCloudPositionInWater();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBTorrentialRainCloud_C">();
	}
	static class ABP_AJBTorrentialRainCloud_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBTorrentialRainCloud_C>();
	}
};
static_assert(alignof(ABP_AJBTorrentialRainCloud_C) == 0x000008, "Wrong alignment on ABP_AJBTorrentialRainCloud_C");
static_assert(sizeof(ABP_AJBTorrentialRainCloud_C) == 0x000498, "Wrong size on ABP_AJBTorrentialRainCloud_C");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, UberGraphFrame) == 0x000330, "Member 'ABP_AJBTorrentialRainCloud_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, Decal) == 0x000338, "Member 'ABP_AJBTorrentialRainCloud_C::Decal' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, EndTimeline_PPRate_E28FE874410355B3E3AED1A0946B0099) == 0x000340, "Member 'ABP_AJBTorrentialRainCloud_C::EndTimeline_PPRate_E28FE874410355B3E3AED1A0946B0099' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, EndTimeline_DecalRate_E28FE874410355B3E3AED1A0946B0099) == 0x000344, "Member 'ABP_AJBTorrentialRainCloud_C::EndTimeline_DecalRate_E28FE874410355B3E3AED1A0946B0099' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, EndTimeline__Direction_E28FE874410355B3E3AED1A0946B0099) == 0x000348, "Member 'ABP_AJBTorrentialRainCloud_C::EndTimeline__Direction_E28FE874410355B3E3AED1A0946B0099' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, EndTimeline) == 0x000350, "Member 'ABP_AJBTorrentialRainCloud_C::EndTimeline' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, StatTimeline_PPRate_45818A93487BA87ABE737180F368C2C3) == 0x000358, "Member 'ABP_AJBTorrentialRainCloud_C::StatTimeline_PPRate_45818A93487BA87ABE737180F368C2C3' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, StatTimeline_DecalRate_45818A93487BA87ABE737180F368C2C3) == 0x00035C, "Member 'ABP_AJBTorrentialRainCloud_C::StatTimeline_DecalRate_45818A93487BA87ABE737180F368C2C3' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, StatTimeline__Direction_45818A93487BA87ABE737180F368C2C3) == 0x000360, "Member 'ABP_AJBTorrentialRainCloud_C::StatTimeline__Direction_45818A93487BA87ABE737180F368C2C3' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, StatTimeline) == 0x000368, "Member 'ABP_AJBTorrentialRainCloud_C::StatTimeline' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, bActive) == 0x000370, "Member 'ABP_AJBTorrentialRainCloud_C::bActive' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, DMIDecal) == 0x000378, "Member 'ABP_AJBTorrentialRainCloud_C::DMIDecal' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, DecalMaxOpacity) == 0x000380, "Member 'ABP_AJBTorrentialRainCloud_C::DecalMaxOpacity' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, DecalOpacityParameterName) == 0x000388, "Member 'ABP_AJBTorrentialRainCloud_C::DecalOpacityParameterName' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, DMIPP) == 0x000390, "Member 'ABP_AJBTorrentialRainCloud_C::DMIPP' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, MTPP) == 0x000398, "Member 'ABP_AJBTorrentialRainCloud_C::MTPP' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, MaterialIndexCharacter) == 0x0003A0, "Member 'ABP_AJBTorrentialRainCloud_C::MaterialIndexCharacter' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, MaterialIndexStand) == 0x0003A4, "Member 'ABP_AJBTorrentialRainCloud_C::MaterialIndexStand' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, PPMaxOpacity) == 0x0003A8, "Member 'ABP_AJBTorrentialRainCloud_C::PPMaxOpacity' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, PPOpacityParameterName) == 0x0003B0, "Member 'ABP_AJBTorrentialRainCloud_C::PPOpacityParameterName' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, ActorMoveInterpSpeed) == 0x0003B8, "Member 'ABP_AJBTorrentialRainCloud_C::ActorMoveInterpSpeed' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, TargetLocation) == 0x0003BC, "Member 'ABP_AJBTorrentialRainCloud_C::TargetLocation' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, OffsetZFromHead) == 0x0003C8, "Member 'ABP_AJBTorrentialRainCloud_C::OffsetZFromHead' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, PPMaxIntencity) == 0x0003CC, "Member 'ABP_AJBTorrentialRainCloud_C::PPMaxIntencity' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, PPIntencityParameterName) == 0x0003D0, "Member 'ABP_AJBTorrentialRainCloud_C::PPIntencityParameterName' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, IntencityList) == 0x0003D8, "Member 'ABP_AJBTorrentialRainCloud_C::IntencityList' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, AJBCloudParticle) == 0x0003E8, "Member 'ABP_AJBTorrentialRainCloud_C::AJBCloudParticle' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, CloudParticleTagList) == 0x0003F0, "Member 'ABP_AJBTorrentialRainCloud_C::CloudParticleTagList' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, GionThunderRepeatCount) == 0x000400, "Member 'ABP_AJBTorrentialRainCloud_C::GionThunderRepeatCount' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, GionThunderRepeatInterval) == 0x000404, "Member 'ABP_AJBTorrentialRainCloud_C::GionThunderRepeatInterval' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, GionThunderRepeatNum) == 0x000408, "Member 'ABP_AJBTorrentialRainCloud_C::GionThunderRepeatNum' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, Causer) == 0x000410, "Member 'ABP_AJBTorrentialRainCloud_C::Causer' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, GionRainRepeatInterval) == 0x000418, "Member 'ABP_AJBTorrentialRainCloud_C::GionRainRepeatInterval' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, TimerHandleGionRainRepeat) == 0x000420, "Member 'ABP_AJBTorrentialRainCloud_C::TimerHandleGionRainRepeat' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, CloudStartParticleTagList) == 0x000428, "Member 'ABP_AJBTorrentialRainCloud_C::CloudStartParticleTagList' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, SETagListActive) == 0x000438, "Member 'ABP_AJBTorrentialRainCloud_C::SETagListActive' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, SEActive) == 0x000448, "Member 'ABP_AJBTorrentialRainCloud_C::SEActive' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, GameplayTagsRepeat) == 0x000450, "Member 'ABP_AJBTorrentialRainCloud_C::GameplayTagsRepeat' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, GionRainLoopCount) == 0x000460, "Member 'ABP_AJBTorrentialRainCloud_C::GionRainLoopCount' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, GionRainLoopLimit) == 0x000464, "Member 'ABP_AJBTorrentialRainCloud_C::GionRainLoopLimit' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, LargeGionPercentage) == 0x000468, "Member 'ABP_AJBTorrentialRainCloud_C::LargeGionPercentage' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, bDuringTimeStop) == 0x00046C, "Member 'ABP_AJBTorrentialRainCloud_C::bDuringTimeStop' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, DecalZUnderOffset) == 0x000470, "Member 'ABP_AJBTorrentialRainCloud_C::DecalZUnderOffset' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, PrevOwnerCapsuleHalfHeight) == 0x000474, "Member 'ABP_AJBTorrentialRainCloud_C::PrevOwnerCapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, DecalSizeX) == 0x000478, "Member 'ABP_AJBTorrentialRainCloud_C::DecalSizeX' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, DecalSizeY) == 0x00047C, "Member 'ABP_AJBTorrentialRainCloud_C::DecalSizeY' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, bDebugShowDecalLocationAndSize) == 0x000480, "Member 'ABP_AJBTorrentialRainCloud_C::bDebugShowDecalLocationAndSize' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, bEnableActiveSE) == 0x000481, "Member 'ABP_AJBTorrentialRainCloud_C::bEnableActiveSE' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, InWaterCloudPositionZOffset) == 0x000484, "Member 'ABP_AJBTorrentialRainCloud_C::InWaterCloudPositionZOffset' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, UnderWaterParticleTag) == 0x000488, "Member 'ABP_AJBTorrentialRainCloud_C::UnderWaterParticleTag' has a wrong offset!");
static_assert(offsetof(ABP_AJBTorrentialRainCloud_C, UnderwaterParticle) == 0x000490, "Member 'ABP_AJBTorrentialRainCloud_C::UnderwaterParticle' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameEffectPoolManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ST_GionInfo_structs.hpp"
#include "E_GionSpawnedSpace_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "ST_ParticleEffectInfo_structs.hpp"
#include "AJB_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameEffectPoolManager.BP_AJBInGameEffectPoolManager_C.ExecuteUbergraph_BP_AJBInGameEffectPoolManager
// 0x0430 (0x0430 - 0x0000)
struct BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_ParticleType3;                  // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location5;                      // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation3;                      // 0x0034(0x000C)(IsPlainOldData, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_ParticleType2;                  // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location4;                      // 0x0048(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation2;                      // 0x0054(0x000C)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          CallFunc_EmitParticleEffect_ParticleEffect;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_GionInfo                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0078(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames1;        // 0x00E8(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_EffectType1;                    // 0x0100(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Owner1;                         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GionSpawnedSpace                            K2Node_CustomEvent_SpanwedSpaceInOwnersEnv1;       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GionSpawnedSpace                            K2Node_CustomEvent_SpawnedSpaceInNotOwnersEnv;     // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location3;                      // 0x0114(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_WwiseEventTag1;                 // 0x0120(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWwiseAutoPost1;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bWwiseAutoDestroy1;             // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_CustomEvent_SceneComponentToAttachWwise1;   // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bGionDryRun1;                   // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bWwiseDryRun1;                  // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_EffectType;                     // 0x0140(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Owner;                          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GionSpawnedSpace                            K2Node_CustomEvent_SpanwedSpaceInOwnersEnv;        // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GionSpawnedSpace                            K2Node_CustomEvent_SpanwedSpaceInNotOwnersEnv;     // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152[0x2];                                      // 0x0152(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location2;                      // 0x0154(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_WwiseEventTag;                  // 0x0160(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWwiseAutoPost;                 // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bWwiseAutoDestroy;              // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_CustomEvent_SceneComponentToAttachWwise;    // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bGionDryRun;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bWwiseDryRun;                   // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x6];                                      // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_LocalGionEffect_AkComponent_LocalOnly_;   // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LocalGionEffect_bFullfilGionDisplayingCondition; // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A2[0x2];                                      // 0x01A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ParticleType1;                  // 0x01B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location1;                      // 0x01B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation1;                      // 0x01C4(0x000C)(IsPlainOldData, NoDestructor)
	class USceneComponent*                        K2Node_CustomEvent_SceneComponentToAttach;         // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_SocketName1;                    // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ParticleType;                   // 0x01E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x01E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation;                       // 0x01F4(0x000C)(IsPlainOldData, NoDestructor)
	class USceneComponent*                        K2Node_CustomEvent_AttachToComponent;              // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_SocketName;                     // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_EmitParticleEffectAttached_ParticleEffect; // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable3;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable3;                    // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable4;                    // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item1;                          // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_GionInfo                           CallFunc_Map_Find_Value;                           // 0x0230(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_ParticleEffectInfo                 CallFunc_GetDataTableRowFromName_OutRow1;          // 0x0298(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue1;     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable4;                   // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x02B0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_AJBInGameEffectPoolManager_C*> CallFunc_GetInGameEffectPoolManagers_OutEffectPoolManagers; // 0x02C8(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class ABP_AJBInGameEffectPoolManager_C*> CallFunc_GetInGameEffectPoolManagers_OutEffectPoolManagers1; // 0x02D8(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_AJBInGameEffectPoolManager_C*       CallFunc_Array_Get_Item2;                          // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameEffectPoolManager_C*       CallFunc_Array_Get_Item3;                          // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGamePlayerController*             K2Node_DynamicCast_AsAJBIn_Game_Player_Controller; // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0320(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGamePlayerController*             K2Node_DynamicCast_AsAJBIn_Game_Player_Controller1; // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x3];                                      // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x033C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue1;           // 0x034C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1;       // 0x035C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue1;                // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue1;       // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue1;             // 0x036D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E[0x2];                                      // 0x036E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37A[0x6];                                      // 0x037A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBInGameEffectPoolManager_C*> CallFunc_GetInGameEffectPoolManagers_OutEffectPoolManagers2; // 0x0380(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess;              // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD;           // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameEffectPoolManager_C*       CallFunc_Array_Get_Item4;                          // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_InGameMain_C*                       CallFunc_FindAJBWidgetOfClass_OutWidget;           // 0x03A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue2;       // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGamePlayerController*             K2Node_DynamicCast_AsAJBIn_Game_Player_Controller2; // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue2;           // 0x03EC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue2;       // 0x03F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue2;                // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue4;                // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue4;                 // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue2;             // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x041A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41B[0x5];                                      // 0x041B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExecutedReplay_ReturnValue;             // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager) == 0x000008, "Wrong alignment on BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager");
static_assert(sizeof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager) == 0x000430, "Wrong size on BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, EntryPoint) == 0x000000, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000008, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_ParticleType3) == 0x000020, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_ParticleType3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_Location5) == 0x000028, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_Location5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_Rotation3) == 0x000034, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_Rotation3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_ParticleType2) == 0x000040, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_ParticleType2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_Location4) == 0x000048, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_Location4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_Rotation2) == 0x000054, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_Rotation2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_EmitParticleEffect_ParticleEffect) == 0x000068, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_EmitParticleEffect_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_GetDataTableRowFromName_OutRow) == 0x000078, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000D8, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000DC, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, Temp_int_Array_Index_Variable1) == 0x0000E0, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_GetDataTableRowNames_OutRowNames1) == 0x0000E8, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_GetDataTableRowNames_OutRowNames1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Array_Length_ReturnValue1) == 0x0000F8, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_EffectType1) == 0x000100, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_EffectType1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_Owner1) == 0x000108, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_Owner1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_SpanwedSpaceInOwnersEnv1) == 0x000110, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_SpanwedSpaceInOwnersEnv1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_SpawnedSpaceInNotOwnersEnv) == 0x000111, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_SpawnedSpaceInNotOwnersEnv' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_Location3) == 0x000114, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_Location3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_WwiseEventTag1) == 0x000120, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_WwiseEventTag1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_bWwiseAutoPost1) == 0x000128, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_bWwiseAutoPost1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_bWwiseAutoDestroy1) == 0x000129, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_bWwiseAutoDestroy1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_SceneComponentToAttachWwise1) == 0x000130, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_SceneComponentToAttachWwise1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_bGionDryRun1) == 0x000138, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_bGionDryRun1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_bWwiseDryRun1) == 0x000139, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_bWwiseDryRun1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_EffectType) == 0x000140, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_EffectType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_Owner) == 0x000148, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_Owner' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_SpanwedSpaceInOwnersEnv) == 0x000150, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_SpanwedSpaceInOwnersEnv' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_SpanwedSpaceInNotOwnersEnv) == 0x000151, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_SpanwedSpaceInNotOwnersEnv' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_Location2) == 0x000154, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_Location2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_WwiseEventTag) == 0x000160, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_WwiseEventTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_bWwiseAutoPost) == 0x000168, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_bWwiseAutoPost' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_bWwiseAutoDestroy) == 0x000169, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_bWwiseAutoDestroy' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_SceneComponentToAttachWwise) == 0x000170, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_SceneComponentToAttachWwise' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_bGionDryRun) == 0x000178, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_bGionDryRun' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_bWwiseDryRun) == 0x000179, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_bWwiseDryRun' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_LocalGionEffect_AkComponent_LocalOnly_) == 0x000180, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_LocalGionEffect_AkComponent_LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_LocalGionEffect_bFullfilGionDisplayingCondition) == 0x000188, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_LocalGionEffect_bFullfilGionDisplayingCondition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, Temp_int_Loop_Counter_Variable) == 0x00018C, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, Temp_int_Loop_Counter_Variable1) == 0x000190, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Add_IntInt_ReturnValue) == 0x000194, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Add_IntInt_ReturnValue1) == 0x000198, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, Temp_int_Loop_Counter_Variable2) == 0x00019C, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_IsDedicatedServer_ReturnValue) == 0x0001A0, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Less_IntInt_ReturnValue) == 0x0001A1, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Add_IntInt_ReturnValue2) == 0x0001A4, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0001A8, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, Temp_int_Array_Index_Variable2) == 0x0001AC, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_ParticleType1) == 0x0001B0, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_ParticleType1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_Location1) == 0x0001B8, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_Rotation1) == 0x0001C4, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_Rotation1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_SceneComponentToAttach) == 0x0001D0, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_SceneComponentToAttach' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_SocketName1) == 0x0001D8, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_SocketName1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_ParticleType) == 0x0001E0, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_ParticleType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_Location) == 0x0001E8, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_Rotation) == 0x0001F4, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_AttachToComponent) == 0x000200, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_AttachToComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CustomEvent_SocketName) == 0x000208, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CustomEvent_SocketName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_EmitParticleEffectAttached_ParticleEffect) == 0x000210, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_EmitParticleEffectAttached_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, Temp_int_Loop_Counter_Variable3) == 0x000218, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::Temp_int_Loop_Counter_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, Temp_int_Array_Index_Variable3) == 0x00021C, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::Temp_int_Array_Index_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Add_IntInt_ReturnValue3) == 0x000220, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, Temp_int_Array_Index_Variable4) == 0x000224, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::Temp_int_Array_Index_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Array_Get_Item1) == 0x000228, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Map_Find_Value) == 0x000230, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Map_Find_ReturnValue) == 0x000290, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_GetDataTableRowFromName_OutRow1) == 0x000298, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_GetDataTableRowFromName_OutRow1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_GetDataTableRowFromName_ReturnValue1) == 0x0002A8, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_GetDataTableRowFromName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, Temp_int_Loop_Counter_Variable4) == 0x0002AC, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::Temp_int_Loop_Counter_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_CreateDelegate_OutputDelegate) == 0x0002B0, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Less_IntInt_ReturnValue1) == 0x0002C0, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Add_IntInt_ReturnValue4) == 0x0002C4, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_GetInGameEffectPoolManagers_OutEffectPoolManagers) == 0x0002C8, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_GetInGameEffectPoolManagers_OutEffectPoolManagers' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_GetInGameEffectPoolManagers_OutEffectPoolManagers1) == 0x0002D8, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_GetInGameEffectPoolManagers_OutEffectPoolManagers1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Array_Get_Item2) == 0x0002E8, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Array_Get_Item3) == 0x0002F0, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_GetOwner_ReturnValue) == 0x0002F8, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000300, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_DynamicCast_AsAJBIn_Game_Player_Controller) == 0x000308, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_DynamicCast_AsAJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_DynamicCast_bSuccess) == 0x000310, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_GetOwner_ReturnValue1) == 0x000318, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_GetCameraLocation_ReturnValue) == 0x000320, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_DynamicCast_AsAJBIn_Game_Player_Controller1) == 0x000330, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_DynamicCast_AsAJBIn_Game_Player_Controller1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_DynamicCast_bSuccess1) == 0x000338, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00033C, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_VSizeSquared_ReturnValue) == 0x000348, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_GetCameraLocation_ReturnValue1) == 0x00034C, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_GetCameraLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Less_FloatFloat_ReturnValue) == 0x000358, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Subtract_VectorVector_ReturnValue1) == 0x00035C, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Subtract_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_VSizeSquared_ReturnValue1) == 0x000368, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_VSizeSquared_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_NotEqual_ObjectObject_ReturnValue1) == 0x00036C, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_NotEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Less_FloatFloat_ReturnValue1) == 0x00036D, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Less_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Array_Length_ReturnValue2) == 0x000370, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Array_Length_ReturnValue3) == 0x000374, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Less_IntInt_ReturnValue2) == 0x000378, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Less_IntInt_ReturnValue3) == 0x000379, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_GetInGameEffectPoolManagers_OutEffectPoolManagers2) == 0x000380, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_GetInGameEffectPoolManagers_OutEffectPoolManagers2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_GetAJBInGameHUD_BP_bSuccess) == 0x000390, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_GetAJBInGameHUD_BP_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD) == 0x000398, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Array_Get_Item4) == 0x0003A0, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_FindAJBWidgetOfClass_OutWidget) == 0x0003A8, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_FindAJBWidgetOfClass_OutWidget' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_IsValid_ReturnValue) == 0x0003B0, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_GetOwner_ReturnValue2) == 0x0003B8, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_NotEqual_ObjectObject_ReturnValue2) == 0x0003C0, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_NotEqual_ObjectObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_DynamicCast_AsAJBIn_Game_Player_Controller2) == 0x0003C8, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_DynamicCast_AsAJBIn_Game_Player_Controller2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, K2Node_DynamicCast_bSuccess2) == 0x0003D0, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_GetViewTarget_ReturnValue) == 0x0003D8, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x0003E0, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x0003E8, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_GetCameraLocation_ReturnValue2) == 0x0003EC, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_GetCameraLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Subtract_VectorVector_ReturnValue2) == 0x0003F8, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Subtract_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000404, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_VSizeSquared_ReturnValue2) == 0x000408, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_VSizeSquared_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x00040C, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Array_Length_ReturnValue4) == 0x000410, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Array_Length_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x000414, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Less_IntInt_ReturnValue4) == 0x000418, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Less_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Less_FloatFloat_ReturnValue2) == 0x000419, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Less_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_GetAJBGameInstance_bSuccess) == 0x00041A, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000420, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_IsExecutedReplay_ReturnValue) == 0x000428, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_IsExecutedReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager, CallFunc_Not_PreBool_ReturnValue) == 0x000429, "Member 'BP_AJBInGameEffectPoolManager_C_ExecuteUbergraph_BP_AJBInGameEffectPoolManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameEffectPoolManager.BP_AJBInGameEffectPoolManager_C.ROC_RequestParticleEffectAttached
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffectAttached final
{
public:
	struct FGameplayTag                           ParticleType;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class USceneComponent*                        AttachToComponent;                                 // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffectAttached) == 0x000008, "Wrong alignment on BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffectAttached");
static_assert(sizeof(BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffectAttached) == 0x000030, "Wrong size on BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffectAttached");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffectAttached, ParticleType) == 0x000000, "Member 'BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffectAttached::ParticleType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffectAttached, Location) == 0x000008, "Member 'BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffectAttached::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffectAttached, Rotation) == 0x000014, "Member 'BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffectAttached::Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffectAttached, AttachToComponent) == 0x000020, "Member 'BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffectAttached::AttachToComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffectAttached, SocketName) == 0x000028, "Member 'BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffectAttached::SocketName' has a wrong offset!");

// Function BP_AJBInGameEffectPoolManager.BP_AJBInGameEffectPoolManager_C.ROS_RequestParticleEffectAttached
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffectAttached final
{
public:
	struct FGameplayTag                           ParticleType;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class USceneComponent*                        SceneComponentToAttach;                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffectAttached) == 0x000008, "Wrong alignment on BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffectAttached");
static_assert(sizeof(BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffectAttached) == 0x000030, "Wrong size on BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffectAttached");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffectAttached, ParticleType) == 0x000000, "Member 'BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffectAttached::ParticleType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffectAttached, Location) == 0x000008, "Member 'BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffectAttached::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffectAttached, Rotation) == 0x000014, "Member 'BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffectAttached::Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffectAttached, SceneComponentToAttach) == 0x000020, "Member 'BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffectAttached::SceneComponentToAttach' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffectAttached, SocketName) == 0x000028, "Member 'BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffectAttached::SocketName' has a wrong offset!");

// Function BP_AJBInGameEffectPoolManager.BP_AJBInGameEffectPoolManager_C.ROC_RequestGionEffect
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect final
{
public:
	struct FGameplayTag                           EffectType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Owner_0;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GionSpawnedSpace                            SpanwedSpaceInOwnersEnv;                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GionSpawnedSpace                            SpanwedSpaceInNotOwnersEnv;                        // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           WwiseEventTag;                                     // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bWwiseAutoPost;                                    // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWwiseAutoDestroy;                                 // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        SceneComponentToAttachWwise;                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGionDryRun;                                       // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWwiseDryRun;                                      // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect) == 0x000008, "Wrong alignment on BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect");
static_assert(sizeof(BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect) == 0x000040, "Wrong size on BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect, EffectType) == 0x000000, "Member 'BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect::EffectType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect, Owner_0) == 0x000008, "Member 'BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect::Owner_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect, SpanwedSpaceInOwnersEnv) == 0x000010, "Member 'BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect::SpanwedSpaceInOwnersEnv' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect, SpanwedSpaceInNotOwnersEnv) == 0x000011, "Member 'BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect::SpanwedSpaceInNotOwnersEnv' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect, Location) == 0x000014, "Member 'BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect, WwiseEventTag) == 0x000020, "Member 'BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect::WwiseEventTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect, bWwiseAutoPost) == 0x000028, "Member 'BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect::bWwiseAutoPost' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect, bWwiseAutoDestroy) == 0x000029, "Member 'BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect::bWwiseAutoDestroy' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect, SceneComponentToAttachWwise) == 0x000030, "Member 'BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect::SceneComponentToAttachWwise' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect, bGionDryRun) == 0x000038, "Member 'BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect::bGionDryRun' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect, bWwiseDryRun) == 0x000039, "Member 'BP_AJBInGameEffectPoolManager_C_ROC_RequestGionEffect::bWwiseDryRun' has a wrong offset!");

// Function BP_AJBInGameEffectPoolManager.BP_AJBInGameEffectPoolManager_C.ROS_RequestGionEffect
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect final
{
public:
	struct FGameplayTag                           EffectType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Owner_0;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GionSpawnedSpace                            SpanwedSpaceInOwnersEnv;                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GionSpawnedSpace                            SpawnedSpaceInNotOwnersEnv;                        // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           WwiseEventTag;                                     // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bWwiseAutoPost;                                    // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWwiseAutoDestroy;                                 // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        SceneComponentToAttachWwise;                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGionDryRun;                                       // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWwiseDryRun;                                      // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect) == 0x000008, "Wrong alignment on BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect");
static_assert(sizeof(BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect) == 0x000040, "Wrong size on BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect, EffectType) == 0x000000, "Member 'BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect::EffectType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect, Owner_0) == 0x000008, "Member 'BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect::Owner_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect, SpanwedSpaceInOwnersEnv) == 0x000010, "Member 'BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect::SpanwedSpaceInOwnersEnv' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect, SpawnedSpaceInNotOwnersEnv) == 0x000011, "Member 'BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect::SpawnedSpaceInNotOwnersEnv' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect, Location) == 0x000014, "Member 'BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect, WwiseEventTag) == 0x000020, "Member 'BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect::WwiseEventTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect, bWwiseAutoPost) == 0x000028, "Member 'BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect::bWwiseAutoPost' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect, bWwiseAutoDestroy) == 0x000029, "Member 'BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect::bWwiseAutoDestroy' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect, SceneComponentToAttachWwise) == 0x000030, "Member 'BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect::SceneComponentToAttachWwise' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect, bGionDryRun) == 0x000038, "Member 'BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect::bGionDryRun' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect, bWwiseDryRun) == 0x000039, "Member 'BP_AJBInGameEffectPoolManager_C_ROS_RequestGionEffect::bWwiseDryRun' has a wrong offset!");

// Function BP_AJBInGameEffectPoolManager.BP_AJBInGameEffectPoolManager_C.ROC_RequestParticleEffect
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffect final
{
public:
	struct FGameplayTag                           ParticleType;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffect) == 0x000008, "Wrong alignment on BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffect");
static_assert(sizeof(BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffect) == 0x000020, "Wrong size on BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffect");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffect, ParticleType) == 0x000000, "Member 'BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffect::ParticleType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffect, Location) == 0x000008, "Member 'BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffect::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffect, Rotation) == 0x000014, "Member 'BP_AJBInGameEffectPoolManager_C_ROC_RequestParticleEffect::Rotation' has a wrong offset!");

// Function BP_AJBInGameEffectPoolManager.BP_AJBInGameEffectPoolManager_C.ROS_RequestParticleEffect
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffect final
{
public:
	struct FGameplayTag                           ParticleType;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffect) == 0x000008, "Wrong alignment on BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffect");
static_assert(sizeof(BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffect) == 0x000020, "Wrong size on BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffect");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffect, ParticleType) == 0x000000, "Member 'BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffect::ParticleType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffect, Location) == 0x000008, "Member 'BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffect::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffect, Rotation) == 0x000014, "Member 'BP_AJBInGameEffectPoolManager_C_ROS_RequestParticleEffect::Rotation' has a wrong offset!");

// Function BP_AJBInGameEffectPoolManager.BP_AJBInGameEffectPoolManager_C.IsOwnerEffect
// 0x0168 (0x0168 - 0x0000)
struct BP_AJBInGameEffectPoolManager_C_IsOwnerEffect final
{
public:
	class AActor*                                 InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOwnerClient;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue1;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBInGameCharacterProperty_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInGameCharacterProperty_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property1; // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAJBCharacterPropertyType                     CallFunc_GetPropertyType_PropertyType;             // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetPropertyOwnerCharacterBP_CharacterBP;  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue1;     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue2;     // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93[0x5];                                       // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameSceneCamera_C*             K2Node_DynamicCast_AsBP_AJBIn_Game_Scene_Camera;   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameMovableStand*                 K2Node_DynamicCast_AsAJBIn_Game_Movable_Stand;     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        K2Node_DynamicCast_AsAJBIn_Game_Stand;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue3;     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue4;     // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetFocusActor_ReturnValue;                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue2;         // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBInGameCharacterProperty_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property2; // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue5;     // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetPropertyOwnerCharacterBP_CharacterBP1; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue6;     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInGameCharacterProperty_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property3; // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAJBCharacterPropertyType                     CallFunc_GetPropertyType_PropertyType1;            // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue7;     // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameMovableStand*                 K2Node_DynamicCast_AsAJBIn_Game_Movable_Stand1;    // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        K2Node_DynamicCast_AsAJBIn_Game_Stand1;            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue8;     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue9;     // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect) == 0x000008, "Wrong alignment on BP_AJBInGameEffectPoolManager_C_IsOwnerEffect");
static_assert(sizeof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect) == 0x000168, "Wrong size on BP_AJBInGameEffectPoolManager_C_IsOwnerEffect");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, InputPin) == 0x000000, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::InputPin' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, IsOwnerClient) == 0x000008, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::IsOwnerClient' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, K2Node_DynamicCast_AsPawn) == 0x000010, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller) == 0x000028, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000032, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_GetAJBGameInstance_bSuccess) == 0x000033, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000038, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_GetPlayerController_ReturnValue1) == 0x000040, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_GetPlayerController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_IsPlayingReplay_ReturnValue) == 0x000048, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_GetViewTarget_ReturnValue) == 0x000050, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property) == 0x000058, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, K2Node_DynamicCast_bSuccess2) == 0x000068, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property1) == 0x000070, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, K2Node_DynamicCast_bSuccess3) == 0x000080, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_GetPropertyType_PropertyType) == 0x000081, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_GetPropertyType_PropertyType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_GetPropertyOwnerCharacterBP_CharacterBP) == 0x000088, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_GetPropertyOwnerCharacterBP_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_EqualEqual_ObjectObject_ReturnValue1) == 0x000090, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_EqualEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000091, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_EqualEqual_ObjectObject_ReturnValue2) == 0x000092, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_EqualEqual_ObjectObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, K2Node_DynamicCast_AsBP_AJBIn_Game_Scene_Camera) == 0x000098, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::K2Node_DynamicCast_AsBP_AJBIn_Game_Scene_Camera' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, K2Node_DynamicCast_bSuccess4) == 0x0000A0, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, K2Node_DynamicCast_AsAJBIn_Game_Movable_Stand) == 0x0000A8, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::K2Node_DynamicCast_AsAJBIn_Game_Movable_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, K2Node_DynamicCast_bSuccess5) == 0x0000B0, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, K2Node_DynamicCast_AsAJBIn_Game_Stand) == 0x0000B8, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::K2Node_DynamicCast_AsAJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, K2Node_DynamicCast_bSuccess6) == 0x0000C0, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_GetOwner_ReturnValue) == 0x0000C8, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_GetOwner_ReturnValue1) == 0x0000D0, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_EqualEqual_ObjectObject_ReturnValue3) == 0x0000D8, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_EqualEqual_ObjectObject_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_EqualEqual_ObjectObject_ReturnValue4) == 0x0000D9, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_EqualEqual_ObjectObject_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_GetFocusActor_ReturnValue) == 0x0000E0, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_GetFocusActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_GetPlayerController_ReturnValue2) == 0x0000E8, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_GetPlayerController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property2) == 0x0000F0, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, K2Node_DynamicCast_bSuccess7) == 0x000100, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_EqualEqual_ObjectObject_ReturnValue5) == 0x000101, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_EqualEqual_ObjectObject_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_GetPropertyOwnerCharacterBP_CharacterBP1) == 0x000108, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_GetPropertyOwnerCharacterBP_CharacterBP1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_EqualEqual_ObjectObject_ReturnValue6) == 0x000110, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_EqualEqual_ObjectObject_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property3) == 0x000118, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, K2Node_DynamicCast_bSuccess8) == 0x000128, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_GetPropertyType_PropertyType1) == 0x000129, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_GetPropertyType_PropertyType1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_EqualEqual_ObjectObject_ReturnValue7) == 0x00012A, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_EqualEqual_ObjectObject_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x00012B, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, K2Node_DynamicCast_AsAJBIn_Game_Movable_Stand1) == 0x000130, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::K2Node_DynamicCast_AsAJBIn_Game_Movable_Stand1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, K2Node_DynamicCast_bSuccess9) == 0x000138, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, K2Node_DynamicCast_AsAJBIn_Game_Stand1) == 0x000140, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::K2Node_DynamicCast_AsAJBIn_Game_Stand1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, K2Node_DynamicCast_bSuccess10) == 0x000148, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_GetOwner_ReturnValue2) == 0x000150, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_GetOwner_ReturnValue3) == 0x000158, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_EqualEqual_ObjectObject_ReturnValue8) == 0x000160, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_EqualEqual_ObjectObject_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_IsOwnerEffect, CallFunc_EqualEqual_ObjectObject_ReturnValue9) == 0x000161, "Member 'BP_AJBInGameEffectPoolManager_C_IsOwnerEffect::CallFunc_EqualEqual_ObjectObject_ReturnValue9' has a wrong offset!");

// Function BP_AJBInGameEffectPoolManager.BP_AJBInGameEffectPoolManager_C.SetupEffectScreen
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameEffectPoolManager_C_SetupEffectScreen final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GionEffect_C>     K2Node_DynamicCast_AsBPI_Gion_Effect;              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_AJBInGameGionScreen_C*              CallFunc_GetGionScreenWidget_GionScreen;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameEffectPoolManager_C_SetupEffectScreen) == 0x000008, "Wrong alignment on BP_AJBInGameEffectPoolManager_C_SetupEffectScreen");
static_assert(sizeof(BP_AJBInGameEffectPoolManager_C_SetupEffectScreen) == 0x000040, "Wrong size on BP_AJBInGameEffectPoolManager_C_SetupEffectScreen");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_SetupEffectScreen, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_AJBInGameEffectPoolManager_C_SetupEffectScreen::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_SetupEffectScreen, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_AJBInGameEffectPoolManager_C_SetupEffectScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_SetupEffectScreen, CallFunc_IsValid_ReturnValue1) == 0x000009, "Member 'BP_AJBInGameEffectPoolManager_C_SetupEffectScreen::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_SetupEffectScreen, CallFunc_GetHUD_ReturnValue) == 0x000010, "Member 'BP_AJBInGameEffectPoolManager_C_SetupEffectScreen::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_SetupEffectScreen, CallFunc_IsValid_ReturnValue2) == 0x000018, "Member 'BP_AJBInGameEffectPoolManager_C_SetupEffectScreen::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_SetupEffectScreen, K2Node_DynamicCast_AsBPI_Gion_Effect) == 0x000020, "Member 'BP_AJBInGameEffectPoolManager_C_SetupEffectScreen::K2Node_DynamicCast_AsBPI_Gion_Effect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_SetupEffectScreen, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_AJBInGameEffectPoolManager_C_SetupEffectScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_SetupEffectScreen, CallFunc_GetGionScreenWidget_GionScreen) == 0x000038, "Member 'BP_AJBInGameEffectPoolManager_C_SetupEffectScreen::CallFunc_GetGionScreenWidget_GionScreen' has a wrong offset!");

// Function BP_AJBInGameEffectPoolManager.BP_AJBInGameEffectPoolManager_C.EmitParticleEffect
// 0x0088 (0x0088 - 0x0000)
struct BP_AJBInGameEffectPoolManager_C_EmitParticleEffect final
{
public:
	struct FGameplayTag                           ParticleType;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class ABP_AJBInGameParticleEffect_C*          ParticleEffect;                                    // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_ParticleEffectInfo                 CallFunc_Map_Find_Value;                           // 0x0030(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindEffectActor_bIsFound;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameEffectActor*                  CallFunc_FindEffectActor_UseEffectActor;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          K2Node_DynamicCast_AsBP_AJBIn_Game_Particle_Effect; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffect) == 0x000008, "Wrong alignment on BP_AJBInGameEffectPoolManager_C_EmitParticleEffect");
static_assert(sizeof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffect) == 0x000088, "Wrong size on BP_AJBInGameEffectPoolManager_C_EmitParticleEffect");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffect, ParticleType) == 0x000000, "Member 'BP_AJBInGameEffectPoolManager_C_EmitParticleEffect::ParticleType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffect, Location) == 0x000008, "Member 'BP_AJBInGameEffectPoolManager_C_EmitParticleEffect::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffect, Rotation) == 0x000014, "Member 'BP_AJBInGameEffectPoolManager_C_EmitParticleEffect::Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffect, ParticleEffect) == 0x000020, "Member 'BP_AJBInGameEffectPoolManager_C_EmitParticleEffect::ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffect, CallFunc_GetTagName_ReturnValue) == 0x000028, "Member 'BP_AJBInGameEffectPoolManager_C_EmitParticleEffect::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffect, CallFunc_Map_Find_Value) == 0x000030, "Member 'BP_AJBInGameEffectPoolManager_C_EmitParticleEffect::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffect, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'BP_AJBInGameEffectPoolManager_C_EmitParticleEffect::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffect, CallFunc_Conv_NameToString_ReturnValue) == 0x000048, "Member 'BP_AJBInGameEffectPoolManager_C_EmitParticleEffect::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffect, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'BP_AJBInGameEffectPoolManager_C_EmitParticleEffect::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffect, CallFunc_FindEffectActor_bIsFound) == 0x000068, "Member 'BP_AJBInGameEffectPoolManager_C_EmitParticleEffect::CallFunc_FindEffectActor_bIsFound' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffect, CallFunc_FindEffectActor_UseEffectActor) == 0x000070, "Member 'BP_AJBInGameEffectPoolManager_C_EmitParticleEffect::CallFunc_FindEffectActor_UseEffectActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffect, K2Node_DynamicCast_AsBP_AJBIn_Game_Particle_Effect) == 0x000078, "Member 'BP_AJBInGameEffectPoolManager_C_EmitParticleEffect::K2Node_DynamicCast_AsBP_AJBIn_Game_Particle_Effect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffect, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_AJBInGameEffectPoolManager_C_EmitParticleEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AJBInGameEffectPoolManager.BP_AJBInGameEffectPoolManager_C.RequestParticleEffectOnAll
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameEffectPoolManager_C_RequestParticleEffectOnAll final
{
public:
	struct FGameplayTag                           ParticleType;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          CallFunc_EmitParticleEffect_ParticleEffect;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameEffectPoolManager_C_RequestParticleEffectOnAll) == 0x000008, "Wrong alignment on BP_AJBInGameEffectPoolManager_C_RequestParticleEffectOnAll");
static_assert(sizeof(BP_AJBInGameEffectPoolManager_C_RequestParticleEffectOnAll) == 0x000030, "Wrong size on BP_AJBInGameEffectPoolManager_C_RequestParticleEffectOnAll");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestParticleEffectOnAll, ParticleType) == 0x000000, "Member 'BP_AJBInGameEffectPoolManager_C_RequestParticleEffectOnAll::ParticleType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestParticleEffectOnAll, Location) == 0x000008, "Member 'BP_AJBInGameEffectPoolManager_C_RequestParticleEffectOnAll::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestParticleEffectOnAll, Rotation) == 0x000014, "Member 'BP_AJBInGameEffectPoolManager_C_RequestParticleEffectOnAll::Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestParticleEffectOnAll, CallFunc_IsServer_ReturnValue) == 0x000020, "Member 'BP_AJBInGameEffectPoolManager_C_RequestParticleEffectOnAll::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestParticleEffectOnAll, CallFunc_EmitParticleEffect_ParticleEffect) == 0x000028, "Member 'BP_AJBInGameEffectPoolManager_C_RequestParticleEffectOnAll::CallFunc_EmitParticleEffect_ParticleEffect' has a wrong offset!");

// Function BP_AJBInGameEffectPoolManager.BP_AJBInGameEffectPoolManager_C.LocalGionEffect
// 0x01A8 (0x01A8 - 0x0000)
struct BP_AJBInGameEffectPoolManager_C_LocalGionEffect final
{
public:
	struct FGameplayTag                           EffectType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Owner_0;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GionSpawnedSpace                            SpanwedSpaceInOwnersEnv;                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GionSpawnedSpace                            SpanwedSpaceInNotOwnersEnv;                        // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           WwiseEventTag;                                     // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bWwiseAutoPost;                                    // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWwiseAutoDestroy;                                 // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        SceneComponentToAttachWwise;                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGionDryRun;                                       // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWwiseDryRun;                                      // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           AkComponent_LocalOnly_;                            // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFullfilGionDisplayingCondition;                   // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameGion_C*                    Temp_GionActor;                                    // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_GionInfo                           Temp_GionInfo;                                     // 0x0058(0x0060)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FST_GionInfo                           CallFunc_Map_Find_Value;                           // 0x00B8(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FulfillGionDisplayingConditionByDistance_Result; // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOwnerEffect_IsOwnerClient;              // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOwnerEffect_IsOwnerClient1;             // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldDisplayGionIn3DWorldSpace_ReturnValue; // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12E[0x2];                                      // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBHighlightManager*                   CallFunc_GetHighlightManager_ReturnValue;          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetFocusActor_ReturnValue;                // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent; // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FindEffectActor_bIsFound;                 // 0x0183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameEffectActor*                  CallFunc_FindEffectActor_UseEffectActor;           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Select_Default;                             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameGion_C*                    K2Node_DynamicCast_AsBP_AJBIn_Game_Gion;           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPair_bPairCharacter;                    // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect) == 0x000008, "Wrong alignment on BP_AJBInGameEffectPoolManager_C_LocalGionEffect");
static_assert(sizeof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect) == 0x0001A8, "Wrong size on BP_AJBInGameEffectPoolManager_C_LocalGionEffect");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, EffectType) == 0x000000, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::EffectType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, Owner_0) == 0x000008, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::Owner_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, SpanwedSpaceInOwnersEnv) == 0x000010, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::SpanwedSpaceInOwnersEnv' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, SpanwedSpaceInNotOwnersEnv) == 0x000011, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::SpanwedSpaceInNotOwnersEnv' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, Location) == 0x000014, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, WwiseEventTag) == 0x000020, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::WwiseEventTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, bWwiseAutoPost) == 0x000028, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::bWwiseAutoPost' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, bWwiseAutoDestroy) == 0x000029, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::bWwiseAutoDestroy' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, SceneComponentToAttachWwise) == 0x000030, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::SceneComponentToAttachWwise' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, bGionDryRun) == 0x000038, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::bGionDryRun' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, bWwiseDryRun) == 0x000039, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::bWwiseDryRun' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, AkComponent_LocalOnly_) == 0x000040, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::AkComponent_LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, bFullfilGionDisplayingCondition) == 0x000048, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::bFullfilGionDisplayingCondition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, Temp_GionActor) == 0x000050, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::Temp_GionActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, Temp_GionInfo) == 0x000058, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::Temp_GionInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_Map_Find_Value) == 0x0000B8, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_Map_Find_ReturnValue) == 0x000118, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_FulfillGionDisplayingConditionByDistance_Result) == 0x000119, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_FulfillGionDisplayingConditionByDistance_Result' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_Not_PreBool_ReturnValue) == 0x00011A, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_IsValid_ReturnValue) == 0x00011B, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000120, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000128, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_IsOwnerEffect_IsOwnerClient) == 0x000129, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_IsOwnerEffect_IsOwnerClient' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_IsOwnerEffect_IsOwnerClient1) == 0x00012A, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_IsOwnerEffect_IsOwnerClient1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_ShouldDisplayGionIn3DWorldSpace_ReturnValue) == 0x00012B, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_ShouldDisplayGionIn3DWorldSpace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_Not_PreBool_ReturnValue1) == 0x00012C, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_GetAJBGameInstance_bSuccess) == 0x00012D, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000130, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_BooleanAND_ReturnValue) == 0x000138, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_GetHighlightManager_ReturnValue) == 0x000140, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_GetHighlightManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_GetFocusActor_ReturnValue) == 0x000148, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_GetFocusActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_IsPlayingReplay_ReturnValue) == 0x000150, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_GetPlayerController_ReturnValue) == 0x000158, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_MakeLiteralBool_ReturnValue) == 0x000160, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_GetViewTarget_ReturnValue) == 0x000168, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent) == 0x000170, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000178, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000180, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_IsDedicatedServer_ReturnValue) == 0x000181, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, Temp_bool_Variable) == 0x000182, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_FindEffectActor_bIsFound) == 0x000183, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_FindEffectActor_bIsFound' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_FindEffectActor_UseEffectActor) == 0x000188, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_FindEffectActor_UseEffectActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, K2Node_Select_Default) == 0x000190, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, K2Node_DynamicCast_AsBP_AJBIn_Game_Gion) == 0x000198, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::K2Node_DynamicCast_AsBP_AJBIn_Game_Gion' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, K2Node_DynamicCast_bSuccess) == 0x0001A0, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_LocalGionEffect, CallFunc_IsPair_bPairCharacter) == 0x0001A1, "Member 'BP_AJBInGameEffectPoolManager_C_LocalGionEffect::CallFunc_IsPair_bPairCharacter' has a wrong offset!");

// Function BP_AJBInGameEffectPoolManager.BP_AJBInGameEffectPoolManager_C.ShouldDisplayGionIn3DWorldSpace
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace final
{
public:
	struct FGameplayTag                           EffectType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Owner_0;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GionSpawnedSpace                            GionSpawnedSpaceInOwnersEnv;                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GionSpawnedSpace                            GionSpawnedSpaceInNotOwnersEnv;                    // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0012(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOwnerEffect_IsOwnerClient;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_GionSpawnedSpace                            Temp_byte_Variable;                                // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable5;                               // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable6;                               // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable7;                               // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_GionSpawnedSpace                            Temp_byte_Variable1;                               // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select1_Default;                            // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace) == 0x000008, "Wrong alignment on BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace");
static_assert(sizeof(BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace) == 0x000020, "Wrong size on BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace, EffectType) == 0x000000, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace::EffectType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace, Owner_0) == 0x000008, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace::Owner_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace, GionSpawnedSpaceInOwnersEnv) == 0x000010, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace::GionSpawnedSpaceInOwnersEnv' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace, GionSpawnedSpaceInNotOwnersEnv) == 0x000011, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace::GionSpawnedSpaceInNotOwnersEnv' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace, ReturnValue) == 0x000012, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace, Temp_bool_Variable) == 0x000013, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace, CallFunc_IsOwnerEffect_IsOwnerClient) == 0x000014, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace::CallFunc_IsOwnerEffect_IsOwnerClient' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace, Temp_bool_Variable1) == 0x000015, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace, Temp_byte_Variable) == 0x000016, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace, Temp_bool_Variable2) == 0x000017, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace, Temp_bool_Variable3) == 0x000018, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace, Temp_bool_Variable4) == 0x000019, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace, Temp_bool_Variable5) == 0x00001A, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace, Temp_bool_Variable6) == 0x00001B, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace::Temp_bool_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace, K2Node_Select_Default) == 0x00001C, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace, Temp_bool_Variable7) == 0x00001D, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace::Temp_bool_Variable7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace, Temp_byte_Variable1) == 0x00001E, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace, K2Node_Select1_Default) == 0x00001F, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldDisplayGionIn3DWorldSpace::K2Node_Select1_Default' has a wrong offset!");

// Function BP_AJBInGameEffectPoolManager.BP_AJBInGameEffectPoolManager_C.EmitParticleEffectAttached
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached final
{
public:
	struct FGameplayTag                           EffectTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class USceneComponent*                        AttachToComponent;                                 // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          ParticleEffect;                                    // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          CallFunc_EmitParticleEffect_ParticleEffect;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached) == 0x000008, "Wrong alignment on BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached");
static_assert(sizeof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached) == 0x000050, "Wrong size on BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached, EffectTag) == 0x000000, "Member 'BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached::EffectTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached, Location) == 0x000008, "Member 'BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached, Rotation) == 0x000014, "Member 'BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached::Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached, AttachToComponent) == 0x000020, "Member 'BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached::AttachToComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached, SocketName) == 0x000028, "Member 'BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached::SocketName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached, ParticleEffect) == 0x000030, "Member 'BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached::ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached, CallFunc_EmitParticleEffect_ParticleEffect) == 0x000040, "Member 'BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached::CallFunc_EmitParticleEffect_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached, CallFunc_IsValid_ReturnValue1) == 0x000048, "Member 'BP_AJBInGameEffectPoolManager_C_EmitParticleEffectAttached::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameEffectPoolManager.BP_AJBInGameEffectPoolManager_C.RequestParticleEffectAttachedOnAll
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameEffectPoolManager_C_RequestParticleEffectAttachedOnAll final
{
public:
	struct FGameplayTag                           ParticleType;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class USceneComponent*                        SceneComponentToAttach;                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          CallFunc_EmitParticleEffectAttached_ParticleEffect; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameEffectPoolManager_C_RequestParticleEffectAttachedOnAll) == 0x000008, "Wrong alignment on BP_AJBInGameEffectPoolManager_C_RequestParticleEffectAttachedOnAll");
static_assert(sizeof(BP_AJBInGameEffectPoolManager_C_RequestParticleEffectAttachedOnAll) == 0x000040, "Wrong size on BP_AJBInGameEffectPoolManager_C_RequestParticleEffectAttachedOnAll");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestParticleEffectAttachedOnAll, ParticleType) == 0x000000, "Member 'BP_AJBInGameEffectPoolManager_C_RequestParticleEffectAttachedOnAll::ParticleType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestParticleEffectAttachedOnAll, Location) == 0x000008, "Member 'BP_AJBInGameEffectPoolManager_C_RequestParticleEffectAttachedOnAll::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestParticleEffectAttachedOnAll, Rotation) == 0x000014, "Member 'BP_AJBInGameEffectPoolManager_C_RequestParticleEffectAttachedOnAll::Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestParticleEffectAttachedOnAll, SceneComponentToAttach) == 0x000020, "Member 'BP_AJBInGameEffectPoolManager_C_RequestParticleEffectAttachedOnAll::SceneComponentToAttach' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestParticleEffectAttachedOnAll, SocketName) == 0x000028, "Member 'BP_AJBInGameEffectPoolManager_C_RequestParticleEffectAttachedOnAll::SocketName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestParticleEffectAttachedOnAll, CallFunc_IsServer_ReturnValue) == 0x000030, "Member 'BP_AJBInGameEffectPoolManager_C_RequestParticleEffectAttachedOnAll::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestParticleEffectAttachedOnAll, CallFunc_EmitParticleEffectAttached_ParticleEffect) == 0x000038, "Member 'BP_AJBInGameEffectPoolManager_C_RequestParticleEffectAttachedOnAll::CallFunc_EmitParticleEffectAttached_ParticleEffect' has a wrong offset!");

// Function BP_AJBInGameEffectPoolManager.BP_AJBInGameEffectPoolManager_C.RequestGionEffect
// 0x0068 (0x0068 - 0x0000)
struct BP_AJBInGameEffectPoolManager_C_RequestGionEffect final
{
public:
	struct FGameplayTag                           EffectTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Owner_0;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GionSpawnedSpace                            SpawnedSpaceInOwnersEnv;                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GionSpawnedSpace                            SpawnedSpaceInNotOwnersEnv;                        // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WorldLocation;                                     // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocalOnly;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           WwiseEventTag;                                     // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bWwiseAutoPost;                                    // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWwiseAutoDestroy;                                 // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        SceneComponentToAttachWwise;                       // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGionDryRun;                                       // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWwiseDryRun;                                      // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           AkComponent_LocalOnly_;                            // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFullfilDisplayCond_LocalOnly_;                    // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_LocalGionEffect_AkComponent_LocalOnly_;   // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LocalGionEffect_bFullfilGionDisplayingCondition; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameEffectPoolManager_C_RequestGionEffect) == 0x000008, "Wrong alignment on BP_AJBInGameEffectPoolManager_C_RequestGionEffect");
static_assert(sizeof(BP_AJBInGameEffectPoolManager_C_RequestGionEffect) == 0x000068, "Wrong size on BP_AJBInGameEffectPoolManager_C_RequestGionEffect");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestGionEffect, EffectTag) == 0x000000, "Member 'BP_AJBInGameEffectPoolManager_C_RequestGionEffect::EffectTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestGionEffect, Owner_0) == 0x000008, "Member 'BP_AJBInGameEffectPoolManager_C_RequestGionEffect::Owner_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestGionEffect, SpawnedSpaceInOwnersEnv) == 0x000010, "Member 'BP_AJBInGameEffectPoolManager_C_RequestGionEffect::SpawnedSpaceInOwnersEnv' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestGionEffect, SpawnedSpaceInNotOwnersEnv) == 0x000011, "Member 'BP_AJBInGameEffectPoolManager_C_RequestGionEffect::SpawnedSpaceInNotOwnersEnv' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestGionEffect, WorldLocation) == 0x000014, "Member 'BP_AJBInGameEffectPoolManager_C_RequestGionEffect::WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestGionEffect, bIsLocalOnly) == 0x000020, "Member 'BP_AJBInGameEffectPoolManager_C_RequestGionEffect::bIsLocalOnly' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestGionEffect, WwiseEventTag) == 0x000028, "Member 'BP_AJBInGameEffectPoolManager_C_RequestGionEffect::WwiseEventTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestGionEffect, bWwiseAutoPost) == 0x000030, "Member 'BP_AJBInGameEffectPoolManager_C_RequestGionEffect::bWwiseAutoPost' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestGionEffect, bWwiseAutoDestroy) == 0x000031, "Member 'BP_AJBInGameEffectPoolManager_C_RequestGionEffect::bWwiseAutoDestroy' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestGionEffect, SceneComponentToAttachWwise) == 0x000038, "Member 'BP_AJBInGameEffectPoolManager_C_RequestGionEffect::SceneComponentToAttachWwise' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestGionEffect, bGionDryRun) == 0x000040, "Member 'BP_AJBInGameEffectPoolManager_C_RequestGionEffect::bGionDryRun' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestGionEffect, bWwiseDryRun) == 0x000041, "Member 'BP_AJBInGameEffectPoolManager_C_RequestGionEffect::bWwiseDryRun' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestGionEffect, AkComponent_LocalOnly_) == 0x000048, "Member 'BP_AJBInGameEffectPoolManager_C_RequestGionEffect::AkComponent_LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestGionEffect, bFullfilDisplayCond_LocalOnly_) == 0x000050, "Member 'BP_AJBInGameEffectPoolManager_C_RequestGionEffect::bFullfilDisplayCond_LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestGionEffect, CallFunc_LocalGionEffect_AkComponent_LocalOnly_) == 0x000058, "Member 'BP_AJBInGameEffectPoolManager_C_RequestGionEffect::CallFunc_LocalGionEffect_AkComponent_LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestGionEffect, CallFunc_LocalGionEffect_bFullfilGionDisplayingCondition) == 0x000060, "Member 'BP_AJBInGameEffectPoolManager_C_RequestGionEffect::CallFunc_LocalGionEffect_bFullfilGionDisplayingCondition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestGionEffect, CallFunc_Not_PreBool_ReturnValue) == 0x000061, "Member 'BP_AJBInGameEffectPoolManager_C_RequestGionEffect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestGionEffect, CallFunc_IsServer_ReturnValue) == 0x000062, "Member 'BP_AJBInGameEffectPoolManager_C_RequestGionEffect::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_RequestGionEffect, CallFunc_IsDedicatedServer_ReturnValue) == 0x000063, "Member 'BP_AJBInGameEffectPoolManager_C_RequestGionEffect::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameEffectPoolManager.BP_AJBInGameEffectPoolManager_C.ShouldPostWwiseEvent
// 0x00F0 (0x00F0 - 0x0000)
struct BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent final
{
public:
	struct FGameplayTag                           WwiseEventTag;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GionWorldLocation;                                 // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_GionInfo                           GionInfo;                                          // 0x0018(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class AActor*                                 Owner_0;                                           // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GionSpawnedSpace                            SpanwedSpaceInOwnersEnv;                           // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GionSpawnedSpace                            SpanwedSpaceInNotOwnersEnv;                        // 0x0081(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0082(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_ShouldConsiderDistance;                       // 0x0083(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_HearingAbilityRate;                           // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_DistanceBetweenCameraAndGion;                 // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_CameraLocation;                               // 0x008C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOwnerEffect_IsOwnerClient;              // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_GionSpawnedSpace                            Temp_byte_Variable;                                // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable5;                               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable6;                               // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable7;                               // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable8;                               // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_GionSpawnedSpace                            Temp_byte_Variable1;                               // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select1_Default;                            // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select2_Default;                            // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BF[0x1];                                       // 0x00BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x00D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base;    // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent) == 0x000008, "Wrong alignment on BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent");
static_assert(sizeof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent) == 0x0000F0, "Wrong size on BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, WwiseEventTag) == 0x000000, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::WwiseEventTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, GionWorldLocation) == 0x000008, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::GionWorldLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, GionInfo) == 0x000018, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::GionInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, Owner_0) == 0x000078, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::Owner_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, SpanwedSpaceInOwnersEnv) == 0x000080, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::SpanwedSpaceInOwnersEnv' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, SpanwedSpaceInNotOwnersEnv) == 0x000081, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::SpanwedSpaceInNotOwnersEnv' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, Result) == 0x000082, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::Result' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, Temp_ShouldConsiderDistance) == 0x000083, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::Temp_ShouldConsiderDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, Temp_HearingAbilityRate) == 0x000084, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::Temp_HearingAbilityRate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, Temp_DistanceBetweenCameraAndGion) == 0x000088, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::Temp_DistanceBetweenCameraAndGion' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, Temp_CameraLocation) == 0x00008C, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::Temp_CameraLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, Temp_bool_Variable) == 0x000098, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, CallFunc_IsOwnerEffect_IsOwnerClient) == 0x000099, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::CallFunc_IsOwnerEffect_IsOwnerClient' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, CallFunc_IsGameplayTagValid_ReturnValue) == 0x00009A, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, Temp_byte_Variable) == 0x00009B, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, Temp_bool_Variable1) == 0x00009C, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, Temp_bool_Variable2) == 0x00009D, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, Temp_bool_Variable3) == 0x00009E, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, Temp_bool_Variable4) == 0x00009F, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, Temp_bool_Variable5) == 0x0000A0, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, K2Node_Select_Default) == 0x0000A1, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000A4, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, CallFunc_VSize_ReturnValue) == 0x0000B0, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, Temp_bool_Variable6) == 0x0000B4, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::Temp_bool_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, Temp_bool_Variable7) == 0x0000B5, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::Temp_bool_Variable7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, Temp_bool_Variable8) == 0x0000B6, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::Temp_bool_Variable8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, Temp_byte_Variable1) == 0x0000B7, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000B8, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000BC, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, K2Node_Select1_Default) == 0x0000BD, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, K2Node_Select2_Default) == 0x0000BE, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, CallFunc_GetPlayerController_ReturnValue) == 0x0000C0, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, CallFunc_GetViewTarget_ReturnValue) == 0x0000C8, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, CallFunc_GetCameraLocation_ReturnValue) == 0x0000D0, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, K2Node_DynamicCast_AsAJBIn_Game_Character_Base) == 0x0000E0, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::K2Node_DynamicCast_AsAJBIn_Game_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'BP_AJBInGameEffectPoolManager_C_ShouldPostWwiseEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AJBInGameEffectPoolManager.BP_AJBInGameEffectPoolManager_C.FulfillGionDisplayingConditionByDistance
// 0x00E8 (0x00E8 - 0x0000)
struct BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance final
{
public:
	struct FVector                                GionWorldLocation;                                 // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_GionInfo                           GionInfo;                                          // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class AActor*                                 Owner_0;                                           // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GionSpawnedSpace                            SpanwedSpaceInOwnersEnv;                           // 0x0078(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GionSpawnedSpace                            SpanwedSpaceInNotOwnersEnv;                        // 0x0079(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x007A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_ShouldConsiderDistance;                       // 0x007B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_HearingAbilityRate;                           // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_DistanceBetweenCameraAndGion;                 // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_CameraLocation;                               // 0x0084(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOwnerEffect_IsOwnerClient;              // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_GionSpawnedSpace                            Temp_byte_Variable;                                // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable5;                               // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x009C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTargetActor_ViewTargetActor;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable6;                               // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable7;                               // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable8;                               // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_GionSpawnedSpace                            Temp_byte_Variable1;                               // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select1_Default;                            // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select2_Default;                            // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CF[0x1];                                       // 0x00CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x00D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance) == 0x000008, "Wrong alignment on BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance");
static_assert(sizeof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance) == 0x0000E8, "Wrong size on BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, GionWorldLocation) == 0x000000, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::GionWorldLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, GionInfo) == 0x000010, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::GionInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, Owner_0) == 0x000070, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::Owner_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, SpanwedSpaceInOwnersEnv) == 0x000078, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::SpanwedSpaceInOwnersEnv' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, SpanwedSpaceInNotOwnersEnv) == 0x000079, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::SpanwedSpaceInNotOwnersEnv' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, Result) == 0x00007A, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::Result' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, Temp_ShouldConsiderDistance) == 0x00007B, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::Temp_ShouldConsiderDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, Temp_HearingAbilityRate) == 0x00007C, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::Temp_HearingAbilityRate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, Temp_DistanceBetweenCameraAndGion) == 0x000080, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::Temp_DistanceBetweenCameraAndGion' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, Temp_CameraLocation) == 0x000084, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::Temp_CameraLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, Temp_bool_Variable) == 0x000090, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, CallFunc_IsOwnerEffect_IsOwnerClient) == 0x000091, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::CallFunc_IsOwnerEffect_IsOwnerClient' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, Temp_byte_Variable) == 0x000092, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, Temp_bool_Variable1) == 0x000093, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, Temp_bool_Variable2) == 0x000094, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, Temp_bool_Variable3) == 0x000095, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, Temp_bool_Variable4) == 0x000096, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, Temp_bool_Variable5) == 0x000097, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, K2Node_Select_Default) == 0x000098, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00009C, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, CallFunc_VSize_ReturnValue) == 0x0000A8, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, CallFunc_GetViewTargetActor_ViewTargetActor) == 0x0000B0, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::CallFunc_GetViewTargetActor_ViewTargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x0000B8, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x0000C0, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, Temp_bool_Variable6) == 0x0000C1, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::Temp_bool_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, Temp_bool_Variable7) == 0x0000C2, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::Temp_bool_Variable7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, Temp_bool_Variable8) == 0x0000C3, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::Temp_bool_Variable8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, Temp_byte_Variable1) == 0x0000C4, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C8, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000CC, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, K2Node_Select1_Default) == 0x0000CD, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, K2Node_Select2_Default) == 0x0000CE, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, CallFunc_GetPlayerController_ReturnValue) == 0x0000D0, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance, CallFunc_GetCameraLocation_ReturnValue) == 0x0000D8, "Member 'BP_AJBInGameEffectPoolManager_C_FulfillGionDisplayingConditionByDistance::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");

}


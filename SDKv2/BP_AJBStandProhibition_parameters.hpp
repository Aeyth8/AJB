#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBStandProhibition

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_AJBStandProhibition.BP_AJBStandProhibition_C.ExecuteUbergraph_BP_AJBStandProhibition
// 0x0090 (0x0090 - 0x0000)
struct BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bTriggeredByStand1;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bTriggeredByStand;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_Causer;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBHeavensLockSkill_C*              K2Node_DynamicCast_AsBP_AJBHeavens_Lock_Skill;     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue1;          // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition) == 0x000008, "Wrong alignment on BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition");
static_assert(sizeof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition) == 0x000090, "Wrong size on BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, EntryPoint) == 0x000000, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, K2Node_Event_bTriggeredByStand1) == 0x000004, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::K2Node_Event_bTriggeredByStand1' has a wrong offset!");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, K2Node_Event_bTriggeredByStand) == 0x000005, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::K2Node_Event_bTriggeredByStand' has a wrong offset!");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, K2Node_Event_Causer) == 0x000008, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::K2Node_Event_Causer' has a wrong offset!");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, K2Node_DynamicCast_AsBP_AJBHeavens_Lock_Skill) == 0x000018, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::K2Node_DynamicCast_AsBP_AJBHeavens_Lock_Skill' has a wrong offset!");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000028, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000038, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, CallFunc_HasLocalSharedController_ReturnValue) == 0x000040, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, CallFunc_IsPlayerController_ReturnValue) == 0x000041, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::CallFunc_IsPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller) == 0x000048, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, K2Node_DynamicCast_bSuccess2) == 0x000050, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, CallFunc_GetOwner_ReturnValue1) == 0x000058, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, CallFunc_GetOwner_ReturnValue2) == 0x000060, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000068, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, K2Node_DynamicCast_bSuccess3) == 0x000070, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x000078, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, K2Node_DynamicCast_bSuccess4) == 0x000080, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, CallFunc_HasLocalSharedController_ReturnValue1) == 0x000081, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, CallFunc_IsPlayerController_ReturnValue1) == 0x000082, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::CallFunc_IsPlayerController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition, CallFunc_GetOwner_ReturnValue3) == 0x000088, "Member 'BP_AJBStandProhibition_C_ExecuteUbergraph_BP_AJBStandProhibition::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");

// Function BP_AJBStandProhibition.BP_AJBStandProhibition_C.PlaySE
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBStandProhibition_C_PlaySE final
{
public:
	class UObject*                                Causer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBStandProhibition_C_PlaySE) == 0x000008, "Wrong alignment on BP_AJBStandProhibition_C_PlaySE");
static_assert(sizeof(BP_AJBStandProhibition_C_PlaySE) == 0x000008, "Wrong size on BP_AJBStandProhibition_C_PlaySE");
static_assert(offsetof(BP_AJBStandProhibition_C_PlaySE, Causer) == 0x000000, "Member 'BP_AJBStandProhibition_C_PlaySE::Causer' has a wrong offset!");

// Function BP_AJBStandProhibition.BP_AJBStandProhibition_C.OnActionInactivate
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBStandProhibition_C_OnActionInactivate final
{
public:
	bool                                          bTriggeredByStand;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBStandProhibition_C_OnActionInactivate) == 0x000001, "Wrong alignment on BP_AJBStandProhibition_C_OnActionInactivate");
static_assert(sizeof(BP_AJBStandProhibition_C_OnActionInactivate) == 0x000001, "Wrong size on BP_AJBStandProhibition_C_OnActionInactivate");
static_assert(offsetof(BP_AJBStandProhibition_C_OnActionInactivate, bTriggeredByStand) == 0x000000, "Member 'BP_AJBStandProhibition_C_OnActionInactivate::bTriggeredByStand' has a wrong offset!");

// Function BP_AJBStandProhibition.BP_AJBStandProhibition_C.OnActionActivate
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBStandProhibition_C_OnActionActivate final
{
public:
	bool                                          bTriggeredByStand;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBStandProhibition_C_OnActionActivate) == 0x000001, "Wrong alignment on BP_AJBStandProhibition_C_OnActionActivate");
static_assert(sizeof(BP_AJBStandProhibition_C_OnActionActivate) == 0x000001, "Wrong size on BP_AJBStandProhibition_C_OnActionActivate");
static_assert(offsetof(BP_AJBStandProhibition_C_OnActionActivate, bTriggeredByStand) == 0x000000, "Member 'BP_AJBStandProhibition_C_OnActionActivate::bTriggeredByStand' has a wrong offset!");

}


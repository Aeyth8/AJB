#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MapGuideLine

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WB_MapGuideLine.WB_MapGuideLine_C.ExecuteUbergraph_WB_MapGuideLine
// 0x00F8 (0x00F8 - 0x0000)
struct WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_CustomEvent_FromPosition1;                  // 0x000C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_NormalizedCircleCenter;         // 0x0014(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NormalizedRadius;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DFloat_ReturnValue;       // 0x0024(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_ToPosition;                     // 0x002C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_FromPosition;                   // 0x0034(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x003C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0044(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x004C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue1;     // 0x0054(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue2;     // 0x005C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0064(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DFloat_ReturnValue;            // 0x006C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0078(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue1;      // 0x0084(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue1;        // 0x0090(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue2;        // 0x0098(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x00A8(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DFloat_ReturnValue1;           // 0x00B0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select1_Default;                            // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_CustomEvent_OuterMapSize;                   // 0x00C8(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsVisible;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_CustomEvent_OuterPositionOffset;            // 0x00D4(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OuterScale;                     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X1;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y1;                         // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00E8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine) == 0x000008, "Wrong alignment on WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine");
static_assert(sizeof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine) == 0x0000F8, "Wrong size on WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, EntryPoint) == 0x000000, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, Temp_byte_Variable) == 0x000004, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, Temp_byte_Variable1) == 0x000005, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, Temp_bool_Variable) == 0x000006, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, Temp_byte_Variable2) == 0x000007, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, Temp_byte_Variable3) == 0x000008, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, K2Node_CustomEvent_FromPosition1) == 0x00000C, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::K2Node_CustomEvent_FromPosition1' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, K2Node_CustomEvent_NormalizedCircleCenter) == 0x000014, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::K2Node_CustomEvent_NormalizedCircleCenter' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, K2Node_CustomEvent_NormalizedRadius) == 0x00001C, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::K2Node_CustomEvent_NormalizedRadius' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, K2Node_Select_Default) == 0x000020, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, CallFunc_Subtract_Vector2DFloat_ReturnValue) == 0x000024, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::CallFunc_Subtract_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, K2Node_CustomEvent_ToPosition) == 0x00002C, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::K2Node_CustomEvent_ToPosition' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, K2Node_CustomEvent_FromPosition) == 0x000034, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::K2Node_CustomEvent_FromPosition' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x00003C, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000044, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x00004C, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, CallFunc_Divide_Vector2DVector2D_ReturnValue1) == 0x000054, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::CallFunc_Divide_Vector2DVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, CallFunc_Divide_Vector2DVector2D_ReturnValue2) == 0x00005C, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::CallFunc_Divide_Vector2DVector2D_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000064, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, CallFunc_Add_Vector2DFloat_ReturnValue) == 0x00006C, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::CallFunc_Add_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, CallFunc_VSize2D_ReturnValue) == 0x000074, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, CallFunc_Normal2D_ReturnValue) == 0x000078, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, CallFunc_Less_FloatFloat_ReturnValue) == 0x000080, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, CallFunc_Multiply_Vector2DFloat_ReturnValue1) == 0x000084, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::CallFunc_Multiply_Vector2DFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, CallFunc_BooleanAND_ReturnValue) == 0x00008C, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, CallFunc_Add_Vector2DVector2D_ReturnValue1) == 0x000090, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::CallFunc_Add_Vector2DVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, CallFunc_Add_Vector2DVector2D_ReturnValue2) == 0x000098, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::CallFunc_Add_Vector2DVector2D_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000A0, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x0000A8, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, CallFunc_Add_Vector2DFloat_ReturnValue1) == 0x0000B0, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::CallFunc_Add_Vector2DFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, Temp_bool_Variable1) == 0x0000B8, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, CallFunc_BreakVector2D_X) == 0x0000BC, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, CallFunc_BreakVector2D_Y) == 0x0000C0, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, K2Node_Select1_Default) == 0x0000C4, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, K2Node_CustomEvent_OuterMapSize) == 0x0000C8, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::K2Node_CustomEvent_OuterMapSize' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, K2Node_CustomEvent_bIsVisible) == 0x0000D0, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::K2Node_CustomEvent_bIsVisible' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, K2Node_CustomEvent_OuterPositionOffset) == 0x0000D4, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::K2Node_CustomEvent_OuterPositionOffset' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, K2Node_CustomEvent_OuterScale) == 0x0000DC, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::K2Node_CustomEvent_OuterScale' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, CallFunc_BreakVector2D_X1) == 0x0000E0, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::CallFunc_BreakVector2D_X1' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, CallFunc_BreakVector2D_Y1) == 0x0000E4, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::CallFunc_BreakVector2D_Y1' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine, K2Node_MakeStruct_LinearColor) == 0x0000E8, "Member 'WB_MapGuideLine_C_ExecuteUbergraph_WB_MapGuideLine::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function WB_MapGuideLine.WB_MapGuideLine_C.Update
// 0x000C (0x000C - 0x0000)
struct WB_MapGuideLine_C_Update final
{
public:
	struct FVector2D                              OuterPositionOffset_0;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OuterScale_0;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapGuideLine_C_Update) == 0x000004, "Wrong alignment on WB_MapGuideLine_C_Update");
static_assert(sizeof(WB_MapGuideLine_C_Update) == 0x00000C, "Wrong size on WB_MapGuideLine_C_Update");
static_assert(offsetof(WB_MapGuideLine_C_Update, OuterPositionOffset_0) == 0x000000, "Member 'WB_MapGuideLine_C_Update::OuterPositionOffset_0' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_Update, OuterScale_0) == 0x000008, "Member 'WB_MapGuideLine_C_Update::OuterScale_0' has a wrong offset!");

// Function WB_MapGuideLine.WB_MapGuideLine_C.Setup
// 0x000C (0x000C - 0x0000)
struct WB_MapGuideLine_C_Setup final
{
public:
	struct FVector2D                              OuterMapSize_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsVisible_0;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MapGuideLine_C_Setup) == 0x000004, "Wrong alignment on WB_MapGuideLine_C_Setup");
static_assert(sizeof(WB_MapGuideLine_C_Setup) == 0x00000C, "Wrong size on WB_MapGuideLine_C_Setup");
static_assert(offsetof(WB_MapGuideLine_C_Setup, OuterMapSize_0) == 0x000000, "Member 'WB_MapGuideLine_C_Setup::OuterMapSize_0' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_Setup, bIsVisible_0) == 0x000008, "Member 'WB_MapGuideLine_C_Setup::bIsVisible_0' has a wrong offset!");

// Function WB_MapGuideLine.WB_MapGuideLine_C.SetPosition
// 0x0010 (0x0010 - 0x0000)
struct WB_MapGuideLine_C_SetPosition final
{
public:
	struct FVector2D                              ToPosition_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              FromPosition_0;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapGuideLine_C_SetPosition) == 0x000004, "Wrong alignment on WB_MapGuideLine_C_SetPosition");
static_assert(sizeof(WB_MapGuideLine_C_SetPosition) == 0x000010, "Wrong size on WB_MapGuideLine_C_SetPosition");
static_assert(offsetof(WB_MapGuideLine_C_SetPosition, ToPosition_0) == 0x000000, "Member 'WB_MapGuideLine_C_SetPosition::ToPosition_0' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_SetPosition, FromPosition_0) == 0x000008, "Member 'WB_MapGuideLine_C_SetPosition::FromPosition_0' has a wrong offset!");

// Function WB_MapGuideLine.WB_MapGuideLine_C.SetCircleIntersectPosition
// 0x0014 (0x0014 - 0x0000)
struct WB_MapGuideLine_C_SetCircleIntersectPosition final
{
public:
	struct FVector2D                              FromPosition_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NormalizedCircleCenter;                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NormalizedRadius;                                  // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapGuideLine_C_SetCircleIntersectPosition) == 0x000004, "Wrong alignment on WB_MapGuideLine_C_SetCircleIntersectPosition");
static_assert(sizeof(WB_MapGuideLine_C_SetCircleIntersectPosition) == 0x000014, "Wrong size on WB_MapGuideLine_C_SetCircleIntersectPosition");
static_assert(offsetof(WB_MapGuideLine_C_SetCircleIntersectPosition, FromPosition_0) == 0x000000, "Member 'WB_MapGuideLine_C_SetCircleIntersectPosition::FromPosition_0' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_SetCircleIntersectPosition, NormalizedCircleCenter) == 0x000008, "Member 'WB_MapGuideLine_C_SetCircleIntersectPosition::NormalizedCircleCenter' has a wrong offset!");
static_assert(offsetof(WB_MapGuideLine_C_SetCircleIntersectPosition, NormalizedRadius) == 0x000010, "Member 'WB_MapGuideLine_C_SetCircleIntersectPosition::NormalizedRadius' has a wrong offset!");

}


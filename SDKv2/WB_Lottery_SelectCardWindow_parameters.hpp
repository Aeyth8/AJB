#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Lottery_SelectCardWindow

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.ExecuteUbergraph_WB_Lottery_SelectCardWindow
// 0x01B0 (0x01B0 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWB_Lottery_Card_C*>             K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Lottery_Card_C*                     K2Node_CustomEvent_ClickCardWidget;                // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBOutGameHUD_BP_bSuccess;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBOutGameHUD_C*                    CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0060(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBOutGameHUD_BP_bSuccess1;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBOutGameHUD_C*                    CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD1;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Lottery_Card_C*                     CallFunc_Array_Get_Item;                           // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBOutGameHUD_BP_bSuccess2;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBOutGameHUD_C*                    CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD2;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Lottery_Card_C*                     CallFunc_Array_Get_Item1;                          // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_Lottery_Card_C*                     CallFunc_Array_Get_Item2;                          // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_Lottery_Card_C*                     CallFunc_Array_Get_Item3;                          // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bPremiumMode;                   // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_TicketNum;                      // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CurrentRewardNum;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MaxRewardNum;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0128(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue1;              // 0x0140(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue2;              // 0x0158(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0170(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UWB_Lottery_Card_C* ClickCardWidget)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0188(0x0010)(ZeroConstructor, NoDestructor)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent1;    // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent2;    // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow) == 0x000008, "Wrong alignment on WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow) == 0x0001B0, "Wrong size on WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, EntryPoint) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, Temp_bool_Has_Been_Initd_Variable) == 0x00000C, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, Temp_bool_IsClosed_Variable) == 0x00001C, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, Temp_int_Loop_Counter_Variable1) == 0x000020, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_Add_IntInt_ReturnValue1) == 0x000028, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, K2Node_MakeArray_Array) == 0x000030, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, Temp_int_Array_Index_Variable1) == 0x000040, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, K2Node_CustomEvent_ClickCardWidget) == 0x000048, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::K2Node_CustomEvent_ClickCardWidget' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_GetAJBOutGameHUD_BP_bSuccess) == 0x000050, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_GetAJBOutGameHUD_BP_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD) == 0x000058, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, K2Node_Event_MyGeometry) == 0x000060, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, K2Node_Event_InDeltaTime) == 0x000098, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00009C, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A0, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_FMax_ReturnValue) == 0x0000A4, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_GetAJBOutGameHUD_BP_bSuccess1) == 0x0000A8, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_GetAJBOutGameHUD_BP_bSuccess1' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD1) == 0x0000B0, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD1' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_Array_Length_ReturnValue1) == 0x0000B8, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_RandomInteger_ReturnValue) == 0x0000BC, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_BooleanAND_ReturnValue) == 0x0000C0, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_GetAJBOutGameHUD_BP_bSuccess2) == 0x0000D0, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_GetAJBOutGameHUD_BP_bSuccess2' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD2) == 0x0000D8, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD2' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, Temp_int_Array_Index_Variable2) == 0x0000E0, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_Array_Get_Item1) == 0x0000E8, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_Array_Get_Item2) == 0x0000F0, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_Array_Get_Item3) == 0x0000F8, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_Array_Length_ReturnValue2) == 0x000100, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_Array_Length_ReturnValue3) == 0x000104, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_Less_IntInt_ReturnValue1) == 0x000108, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, K2Node_CustomEvent_bPremiumMode) == 0x000109, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::K2Node_CustomEvent_bPremiumMode' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, K2Node_CustomEvent_TicketNum) == 0x00010C, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::K2Node_CustomEvent_TicketNum' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, K2Node_CustomEvent_CurrentRewardNum) == 0x000110, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::K2Node_CustomEvent_CurrentRewardNum' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, K2Node_CustomEvent_MaxRewardNum) == 0x000114, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::K2Node_CustomEvent_MaxRewardNum' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, Temp_int_Loop_Counter_Variable2) == 0x000118, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_Less_IntInt_ReturnValue2) == 0x00011C, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_Add_IntInt_ReturnValue2) == 0x000120, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_Conv_IntToText_ReturnValue) == 0x000128, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_Conv_IntToText_ReturnValue1) == 0x000140, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_Conv_IntToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_Conv_IntToText_ReturnValue2) == 0x000158, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_Conv_IntToText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, K2Node_CreateDelegate_OutputDelegate) == 0x000170, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000180, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, K2Node_CreateDelegate_OutputDelegate1) == 0x000188, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000198, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_RequestWwiseEventOnLocal_AkComponent1) == 0x0001A0, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_RequestWwiseEventOnLocal_AkComponent1' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow, CallFunc_RequestWwiseEventOnLocal_AkComponent2) == 0x0001A8, "Member 'WB_Lottery_SelectCardWindow_C_ExecuteUbergraph_WB_Lottery_SelectCardWindow::CallFunc_RequestWwiseEventOnLocal_AkComponent2' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.SetupParam
// 0x0010 (0x0010 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_SetupParam final
{
public:
	bool                                          bPremiumMode_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TicketNum_0;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentRewardNum_0;                                // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxRewardNum_0;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_SetupParam) == 0x000004, "Wrong alignment on WB_Lottery_SelectCardWindow_C_SetupParam");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_SetupParam) == 0x000010, "Wrong size on WB_Lottery_SelectCardWindow_C_SetupParam");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_SetupParam, bPremiumMode_0) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_SetupParam::bPremiumMode_0' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_SetupParam, TicketNum_0) == 0x000004, "Member 'WB_Lottery_SelectCardWindow_C_SetupParam::TicketNum_0' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_SetupParam, CurrentRewardNum_0) == 0x000008, "Member 'WB_Lottery_SelectCardWindow_C_SetupParam::CurrentRewardNum_0' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_SetupParam, MaxRewardNum_0) == 0x00000C, "Member 'WB_Lottery_SelectCardWindow_C_SetupParam::MaxRewardNum_0' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_Lottery_SelectCardWindow_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_Tick) == 0x000004, "Wrong alignment on WB_Lottery_SelectCardWindow_C_Tick");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_Tick) == 0x00003C, "Wrong size on WB_Lottery_SelectCardWindow_C_Tick");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_Tick, MyGeometry) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_Lottery_SelectCardWindow_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnClickedCard
// 0x0008 (0x0008 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnClickedCard final
{
public:
	class UWB_Lottery_Card_C*                     ClickCardWidget;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnClickedCard) == 0x000008, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnClickedCard");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnClickedCard) == 0x000008, "Wrong size on WB_Lottery_SelectCardWindow_C_OnClickedCard");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnClickedCard, ClickCardWidget) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnClickedCard::ClickCardWidget' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputTurnRate
// 0x0008 (0x0008 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputTurnRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputTurnRate) == 0x000004, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputTurnRate");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputTurnRate) == 0x000008, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputTurnRate");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputTurnRate, Value) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputTurnRate::Value' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputTurnRate, ReturnValue) == 0x000004, "Member 'WB_Lottery_SelectCardWindow_C_OnInputTurnRate::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputReleasedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputReleasedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputReleasedUp) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputReleasedUp");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputReleasedUp) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputReleasedUp");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputReleasedUp, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputReleasedUp::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputReleasedTouch
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputReleasedTouch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputReleasedTouch) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputReleasedTouch");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputReleasedTouch) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputReleasedTouch");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputReleasedTouch, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputReleasedTouch::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputReleasedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputReleasedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputReleasedRight) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputReleasedRight");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputReleasedRight) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputReleasedRight");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputReleasedRight, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputReleasedRight::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputReleasedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputReleasedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputReleasedR2) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputReleasedR2");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputReleasedR2) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputReleasedR2");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputReleasedR2, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputReleasedR2::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputReleasedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputReleasedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputReleasedR1) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputReleasedR1");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputReleasedR1) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputReleasedR1");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputReleasedR1, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputReleasedR1::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputReleasedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputReleasedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputReleasedLeft) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputReleasedLeft");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputReleasedLeft) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputReleasedLeft");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputReleasedLeft, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputReleasedLeft::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputReleasedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputReleasedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputReleasedL3) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputReleasedL3");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputReleasedL3) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputReleasedL3");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputReleasedL3, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputReleasedL3::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputReleasedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputReleasedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputReleasedL2) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputReleasedL2");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputReleasedL2) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputReleasedL2");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputReleasedL2, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputReleasedL2::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputReleasedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputReleasedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputReleasedL1) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputReleasedL1");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputReleasedL1) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputReleasedL1");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputReleasedL1, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputReleasedL1::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputReleasedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputReleasedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputReleasedDown) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputReleasedDown");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputReleasedDown) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputReleasedDown");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputReleasedDown, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputReleasedDown::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputReleasedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputReleasedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputReleasedDecide) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputReleasedDecide");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputReleasedDecide) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputReleasedDecide");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputReleasedDecide, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputReleasedDecide::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputReleasedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputReleasedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputReleasedCancel) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputReleasedCancel");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputReleasedCancel) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputReleasedCancel");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputReleasedCancel, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputReleasedCancel::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputPressedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputPressedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputPressedUp) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputPressedUp");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputPressedUp) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputPressedUp");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputPressedUp, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputPressedUp::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputPressedTouch
// 0x000C (0x000C - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputPressedTouch final
{
public:
	float                                         LocationX;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocationY;                                         // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputPressedTouch) == 0x000004, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputPressedTouch");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputPressedTouch) == 0x00000C, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputPressedTouch");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputPressedTouch, LocationX) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputPressedTouch::LocationX' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputPressedTouch, LocationY) == 0x000004, "Member 'WB_Lottery_SelectCardWindow_C_OnInputPressedTouch::LocationY' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputPressedTouch, ReturnValue) == 0x000008, "Member 'WB_Lottery_SelectCardWindow_C_OnInputPressedTouch::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputPressedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputPressedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputPressedRight) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputPressedRight");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputPressedRight) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputPressedRight");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputPressedRight, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputPressedRight::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputPressedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputPressedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputPressedR2) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputPressedR2");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputPressedR2) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputPressedR2");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputPressedR2, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputPressedR2::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputPressedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputPressedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputPressedR1) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputPressedR1");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputPressedR1) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputPressedR1");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputPressedR1, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputPressedR1::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputPressedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputPressedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputPressedLeft) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputPressedLeft");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputPressedLeft) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputPressedLeft");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputPressedLeft, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputPressedLeft::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputPressedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputPressedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputPressedL3) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputPressedL3");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputPressedL3) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputPressedL3");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputPressedL3, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputPressedL3::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputPressedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputPressedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputPressedL2) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputPressedL2");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputPressedL2) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputPressedL2");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputPressedL2, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputPressedL2::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputPressedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputPressedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputPressedL1) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputPressedL1");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputPressedL1) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputPressedL1");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputPressedL1, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputPressedL1::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputPressedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputPressedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputPressedDown) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputPressedDown");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputPressedDown) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputPressedDown");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputPressedDown, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputPressedDown::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputPressedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputPressedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputPressedDecide) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputPressedDecide");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputPressedDecide) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputPressedDecide");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputPressedDecide, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputPressedDecide::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputPressedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputPressedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputPressedCancel) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputPressedCancel");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputPressedCancel) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputPressedCancel");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputPressedCancel, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputPressedCancel::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputMoveRight
// 0x0008 (0x0008 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputMoveRight final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputMoveRight) == 0x000004, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputMoveRight");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputMoveRight) == 0x000008, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputMoveRight");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputMoveRight, Value) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputMoveRight::Value' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputMoveRight, ReturnValue) == 0x000004, "Member 'WB_Lottery_SelectCardWindow_C_OnInputMoveRight::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputMoveForward
// 0x0008 (0x0008 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputMoveForward final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputMoveForward) == 0x000004, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputMoveForward");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputMoveForward) == 0x000008, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputMoveForward");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputMoveForward, Value) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputMoveForward::Value' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputMoveForward, ReturnValue) == 0x000004, "Member 'WB_Lottery_SelectCardWindow_C_OnInputMoveForward::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.OnInputLookupRate
// 0x0008 (0x0008 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_OnInputLookupRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_OnInputLookupRate) == 0x000004, "Wrong alignment on WB_Lottery_SelectCardWindow_C_OnInputLookupRate");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_OnInputLookupRate) == 0x000008, "Wrong size on WB_Lottery_SelectCardWindow_C_OnInputLookupRate");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputLookupRate, Value) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_OnInputLookupRate::Value' has a wrong offset!");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_OnInputLookupRate, ReturnValue) == 0x000004, "Member 'WB_Lottery_SelectCardWindow_C_OnInputLookupRate::ReturnValue' has a wrong offset!");

// Function WB_Lottery_SelectCardWindow.WB_Lottery_SelectCardWindow_C.IsModeless
// 0x0001 (0x0001 - 0x0000)
struct WB_Lottery_SelectCardWindow_C_IsModeless final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Lottery_SelectCardWindow_C_IsModeless) == 0x000001, "Wrong alignment on WB_Lottery_SelectCardWindow_C_IsModeless");
static_assert(sizeof(WB_Lottery_SelectCardWindow_C_IsModeless) == 0x000001, "Wrong size on WB_Lottery_SelectCardWindow_C_IsModeless");
static_assert(offsetof(WB_Lottery_SelectCardWindow_C_IsModeless, ReturnValue) == 0x000000, "Member 'WB_Lottery_SelectCardWindow_C_IsModeless::ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Tutorial

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ETutorialType_structs.hpp"
#include "AJB_structs.hpp"
#include "AJB_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Tutorial.WB_Tutorial_C
// 0x0050 (0x0298 - 0x0248)
class UWB_Tutorial_C final : public UAJBUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0248(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Appear;                                            // 0x0250(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_1;                                        // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_2;                                        // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_Highlight;                                     // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          Text;                                              // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          Txt_Title;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Tutorial_Arrow_C*                   WB_Tutorial_Arrow;                                 // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Tutorial_GamePadGuide_C*            WB_Tutorial_GamePadGuide;                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         DisplayTime;                                       // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedTime;                                       // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_Tutorial(int32 EntryPoint);
	void Show(ETutorialType Type, const class FText& DisplayText, float DisplayTime_0, bool bEnablPadIcon, EAJBPadIconType PadIconType, bool bEnableReticleArrow);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OverrideFontMaterial(class UTextBlock* TextWidget, class UObject* Font_Material);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Tutorial_C">();
	}
	static class UWB_Tutorial_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Tutorial_C>();
	}
};
static_assert(alignof(UWB_Tutorial_C) == 0x000008, "Wrong alignment on UWB_Tutorial_C");
static_assert(sizeof(UWB_Tutorial_C) == 0x000298, "Wrong size on UWB_Tutorial_C");
static_assert(offsetof(UWB_Tutorial_C, UberGraphFrame) == 0x000248, "Member 'UWB_Tutorial_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_Tutorial_C, Appear) == 0x000250, "Member 'UWB_Tutorial_C::Appear' has a wrong offset!");
static_assert(offsetof(UWB_Tutorial_C, AJBImage_1) == 0x000258, "Member 'UWB_Tutorial_C::AJBImage_1' has a wrong offset!");
static_assert(offsetof(UWB_Tutorial_C, AJBImage_2) == 0x000260, "Member 'UWB_Tutorial_C::AJBImage_2' has a wrong offset!");
static_assert(offsetof(UWB_Tutorial_C, Img_Highlight) == 0x000268, "Member 'UWB_Tutorial_C::Img_Highlight' has a wrong offset!");
static_assert(offsetof(UWB_Tutorial_C, Text) == 0x000270, "Member 'UWB_Tutorial_C::Text' has a wrong offset!");
static_assert(offsetof(UWB_Tutorial_C, Txt_Title) == 0x000278, "Member 'UWB_Tutorial_C::Txt_Title' has a wrong offset!");
static_assert(offsetof(UWB_Tutorial_C, WB_Tutorial_Arrow) == 0x000280, "Member 'UWB_Tutorial_C::WB_Tutorial_Arrow' has a wrong offset!");
static_assert(offsetof(UWB_Tutorial_C, WB_Tutorial_GamePadGuide) == 0x000288, "Member 'UWB_Tutorial_C::WB_Tutorial_GamePadGuide' has a wrong offset!");
static_assert(offsetof(UWB_Tutorial_C, DisplayTime) == 0x000290, "Member 'UWB_Tutorial_C::DisplayTime' has a wrong offset!");
static_assert(offsetof(UWB_Tutorial_C, ElapsedTime) == 0x000294, "Member 'UWB_Tutorial_C::ElapsedTime' has a wrong offset!");

}


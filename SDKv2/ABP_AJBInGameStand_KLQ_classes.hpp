#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_AJBInGameStand_KLQ

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_AJBInGameStand_KLQ.ABP_AJBInGameStand_KLQ_C
// 0x0438 (0x0790 - 0x0358)
class UABP_AJBInGameStand_KLQ_C final : public UAnimInstance
{
public:
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_C12DCD57498F44003BCFD5A0CCD1EECE; // 0x0368(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8AEC6569471116EC19E32E9D26779990; // 0x03B0(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1F2A060B401E66185B8EFA91E5594F64; // 0x03F8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8DE8E2EB478A03BA6D5915A95DEA78DF; // 0x0440(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_StateResult_16BF3DDE413EED1AA65F09B667538A65; // 0x04F0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_AB4B71A94A0D43385406CDAEBDDAAC96; // 0x0538(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_StateResult_3C5A09FD4AEFA7A3D9F948A0E58F4586; // 0x05E8(0x0048)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_FDFD2A09415CA28B46A3DFA491B9E3D8; // 0x0630(0x00E0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_789C64BE4FB9A25BBD9BDAB62736C128; // 0x0710(0x0070)()
	bool                                          bIsOwnerMove;                                      // 0x0780(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_781[0x3];                                      // 0x0781(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OwnerMovementRate;                                 // 0x0784(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveRate;                                          // 0x0788(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_AJBInGameStand_KLQ(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBInGameStand_KLQ_AnimGraphNode_TransitionResult_1F2A060B401E66185B8EFA91E5594F64();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBInGameStand_KLQ_AnimGraphNode_TransitionResult_8AEC6569471116EC19E32E9D26779990();
	void CanOwnerMove(bool* bCanMove);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_AJBInGameStand_KLQ_C">();
	}
	static class UABP_AJBInGameStand_KLQ_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_AJBInGameStand_KLQ_C>();
	}
};
static_assert(alignof(UABP_AJBInGameStand_KLQ_C) == 0x000008, "Wrong alignment on UABP_AJBInGameStand_KLQ_C");
static_assert(sizeof(UABP_AJBInGameStand_KLQ_C) == 0x000790, "Wrong size on UABP_AJBInGameStand_KLQ_C");
static_assert(offsetof(UABP_AJBInGameStand_KLQ_C, UberGraphFrame) == 0x000360, "Member 'UABP_AJBInGameStand_KLQ_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_KLQ_C, AnimGraphNode_Root_C12DCD57498F44003BCFD5A0CCD1EECE) == 0x000368, "Member 'UABP_AJBInGameStand_KLQ_C::AnimGraphNode_Root_C12DCD57498F44003BCFD5A0CCD1EECE' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_KLQ_C, AnimGraphNode_TransitionResult_8AEC6569471116EC19E32E9D26779990) == 0x0003B0, "Member 'UABP_AJBInGameStand_KLQ_C::AnimGraphNode_TransitionResult_8AEC6569471116EC19E32E9D26779990' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_KLQ_C, AnimGraphNode_TransitionResult_1F2A060B401E66185B8EFA91E5594F64) == 0x0003F8, "Member 'UABP_AJBInGameStand_KLQ_C::AnimGraphNode_TransitionResult_1F2A060B401E66185B8EFA91E5594F64' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_KLQ_C, AnimGraphNode_SequencePlayer_8DE8E2EB478A03BA6D5915A95DEA78DF) == 0x000440, "Member 'UABP_AJBInGameStand_KLQ_C::AnimGraphNode_SequencePlayer_8DE8E2EB478A03BA6D5915A95DEA78DF' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_KLQ_C, AnimGraphNode_StateResult_16BF3DDE413EED1AA65F09B667538A65) == 0x0004F0, "Member 'UABP_AJBInGameStand_KLQ_C::AnimGraphNode_StateResult_16BF3DDE413EED1AA65F09B667538A65' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_KLQ_C, AnimGraphNode_SequencePlayer_AB4B71A94A0D43385406CDAEBDDAAC96) == 0x000538, "Member 'UABP_AJBInGameStand_KLQ_C::AnimGraphNode_SequencePlayer_AB4B71A94A0D43385406CDAEBDDAAC96' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_KLQ_C, AnimGraphNode_StateResult_3C5A09FD4AEFA7A3D9F948A0E58F4586) == 0x0005E8, "Member 'UABP_AJBInGameStand_KLQ_C::AnimGraphNode_StateResult_3C5A09FD4AEFA7A3D9F948A0E58F4586' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_KLQ_C, AnimGraphNode_StateMachine_FDFD2A09415CA28B46A3DFA491B9E3D8) == 0x000630, "Member 'UABP_AJBInGameStand_KLQ_C::AnimGraphNode_StateMachine_FDFD2A09415CA28B46A3DFA491B9E3D8' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_KLQ_C, AnimGraphNode_Slot_789C64BE4FB9A25BBD9BDAB62736C128) == 0x000710, "Member 'UABP_AJBInGameStand_KLQ_C::AnimGraphNode_Slot_789C64BE4FB9A25BBD9BDAB62736C128' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_KLQ_C, bIsOwnerMove) == 0x000780, "Member 'UABP_AJBInGameStand_KLQ_C::bIsOwnerMove' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_KLQ_C, OwnerMovementRate) == 0x000784, "Member 'UABP_AJBInGameStand_KLQ_C::OwnerMovementRate' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_KLQ_C, MoveRate) == 0x000788, "Member 'UABP_AJBInGameStand_KLQ_C::MoveRate' has a wrong offset!");

}


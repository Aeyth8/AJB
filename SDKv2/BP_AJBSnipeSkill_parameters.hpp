#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBSnipeSkill

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.ExecuteUbergraph_BP_AJBSnipeSkill
// 0x03E0 (0x03E0 - 0x0000)
struct BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetShotParticleTag_ShotParticleTag;       // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_SpeedScale;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Power;                                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location6;                      // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation6;                      // 0x003C(0x000C)(IsPlainOldData, NoDestructor)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location5;                      // 0x0054(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation5;                      // 0x0060(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_WithAddSerialNumber;            // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location4;                      // 0x0070(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation4;                      // 0x007C(0x000C)(IsPlainOldData, NoDestructor)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectOnLocal_ParticleEffect; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_CustomEvent_Location3;                      // 0x00C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation3;                      // 0x00CC(0x000C)(IsPlainOldData, NoDestructor)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue1;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue2;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue3;           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOperatingSeparatedStand_ReturnValue;    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameProjectile_C*              CallFunc_FinishSpawningActor_ReturnValue;          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue4;           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14B[0x1];                                      // 0x014B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPoliticSpreadParam_LowerSpread;        // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPoliticSpreadParam_SpreadHealStopTime; // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location2;                      // 0x0158(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation2;                      // 0x0164(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_CustomEvent_Location1;                      // 0x0170(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation1;                      // 0x017C(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x01A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation;                       // 0x01AC(0x000C)(IsPlainOldData, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName1;                    // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x01C0(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_AJBInGameProjectile_C*              K2Node_CustomEvent_Bullet;                         // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_NextState;                            // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue1;               // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA[0x6];                                      // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate1;             // 0x01E0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue5;           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character3;     // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue6;           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName2;                    // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate2;             // 0x0228(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue1;          // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23A[0x6];                                      // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName3;                    // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate3;             // 0x0248(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName4;                    // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue7;           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_SkillTag1;                      // 0x0268(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character4;     // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27A[0x6];                                      // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_CustomEvent_CharacterBP;                    // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_SkillTag;                       // 0x0298(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bAvoidSkill;                    // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue1;      // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A2[0x6];                                      // 0x02A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate4;             // 0x02A8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 Damage, const struct FGameplayTag& DamageType, class AActor* DamageReceiver, bool bRemainHP, bool bDamageIsCut, int32 SerialNumber, bool DamageReceiverIsPlayer, bool bWithSeparatedStandAttack, bool bEnemysSeparateStand)> K2Node_CreateDelegate_OutputDelegate5;             // 0x02B8(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_GenerateSerialNumber_SerialNumber;        // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Damage;                         // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_DamageType;                     // 0x02D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageReceiver;                 // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bRemainHP;                      // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bDamageIsCut;                   // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E2[0x2];                                      // 0x02E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_SerialNumber;                   // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DamageReceiverIsPlayer;         // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bWithSeparatedStandAttack;      // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bEnemysSeparateStand;           // 0x02EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBHighlightManager_bIsValid;          // 0x02EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBHighlightManager*                   CallFunc_GetAJBHighlightManager_ReturnValue;       // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue2;      // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeakVoice_bWillBeSpoken;            // 0x02FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeakVoice_bWillBeSpoken1;           // 0x02FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBHighlightManager_bIsValid1;         // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBHighlightManager*                   CallFunc_GetAJBHighlightManager_ReturnValue1;      // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue1;             // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue8;           // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character5;     // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue1;             // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_322[0x6];                                      // 0x0322(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& SkillTag, bool bAvoidSkill)> K2Node_CreateDelegate_OutputDelegate6;             // 0x0328(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_CalcShotTransform_bSuccess;               // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     CallFunc_CalcShotTransform_Transforms;             // 0x0340(0x0010)(ZeroConstructor, ReferenceParm)
	TDelegate<void(const struct FGameplayTag& SkillTag)> K2Node_CreateDelegate_OutputDelegate7;             // 0x0350(0x0010)(ZeroConstructor, NoDestructor)
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0360(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0390(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x039C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x03A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x03B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B5[0x3];                                      // 0x03B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ProcessingShotTransform_OutLocation;      // 0x03B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeakVoice_bWillBeSpoken2;           // 0x03C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue2;             // 0x03C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C7[0x1];                                      // 0x03C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue3;             // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x03CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CE[0x2];                                      // 0x03CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select1_Default;                            // 0x03D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToSpeakVoice_bWillBeSpoken3;           // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill) == 0x000010, "Wrong alignment on BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill");
static_assert(sizeof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill) == 0x0003E0, "Wrong size on BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, EntryPoint) == 0x000000, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_GetShotParticleTag_ShotParticleTag) == 0x000008, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_GetShotParticleTag_ShotParticleTag' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_Event_SpeedScale) == 0x000010, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_Event_SpeedScale' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000014, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_GetValidValue_ReturnValue) == 0x00001C, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_SwitchEnum_CmpSuccess) == 0x00001D, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_Event_Power) == 0x000020, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_Event_Power' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000028, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_Location6) == 0x000030, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_Location6' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_Rotation6) == 0x00003C, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_Rotation6' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000048, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_Location5) == 0x000054, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_Location5' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_Rotation5) == 0x000060, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_Rotation5' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_WithAddSerialNumber) == 0x00006C, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_WithAddSerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_Location4) == 0x000070, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_Location4' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_Rotation4) == 0x00007C, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_Rotation4' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_RequestParticleEffectOnLocal_ParticleEffect) == 0x000088, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_RequestParticleEffectOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_Location3) == 0x0000C0, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_Location3' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_Rotation3) == 0x0000CC, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_Rotation3' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_GetOwnerCharacter_ReturnValue1) == 0x0000D8, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_GetOwnerCharacter_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x0000E0, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_DynamicCast_bSuccess1) == 0x0000E8, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000E9, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_GetOwnerCharacter_ReturnValue2) == 0x0000F0, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_GetOwnerCharacter_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_HasLocalSharedController_ReturnValue) == 0x0000F8, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_IsValid_ReturnValue) == 0x0000F9, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_GetOwnerCharacter_ReturnValue3) == 0x000100, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_GetOwnerCharacter_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_BooleanAND_ReturnValue) == 0x000108, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x000110, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_DynamicCast_bSuccess2) == 0x000118, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000120, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_IsOperatingSeparatedStand_ReturnValue) == 0x000128, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_IsOperatingSeparatedStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_FinishSpawningActor_ReturnValue) == 0x000130, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_IsValid_ReturnValue1) == 0x000138, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_GetOwnerCharacter_ReturnValue4) == 0x000140, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_GetOwnerCharacter_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_HasLocalSharedController_ReturnValue1) == 0x000148, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_IsValid_ReturnValue2) == 0x000149, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_BooleanAND_ReturnValue1) == 0x00014A, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_GetPoliticSpreadParam_LowerSpread) == 0x00014C, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_GetPoliticSpreadParam_LowerSpread' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_GetPoliticSpreadParam_SpreadHealStopTime) == 0x000150, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_GetPoliticSpreadParam_SpreadHealStopTime' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, Temp_bool_Variable) == 0x000154, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_Location2) == 0x000158, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_Location2' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_Rotation2) == 0x000164, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_Rotation2' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_Location1) == 0x000170, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_Rotation1) == 0x00017C, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_Rotation1' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, Temp_bool_Variable1) == 0x000188, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, Temp_name_Variable) == 0x000190, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_NotifyName) == 0x000198, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_Location) == 0x0001A0, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_Rotation) == 0x0001AC, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_NotifyName1) == 0x0001B8, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_NotifyName1' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CreateDelegate_OutputDelegate) == 0x0001C0, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_Bullet) == 0x0001D0, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_Bullet' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_Event_NextState) == 0x0001D8, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_Event_NextState' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_GetValidValue_ReturnValue1) == 0x0001D9, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_GetValidValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CreateDelegate_OutputDelegate1) == 0x0001E0, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_SwitchEnum1_CmpSuccess) == 0x0001F0, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_GetOwnerCharacter_ReturnValue5) == 0x0001F8, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_GetOwnerCharacter_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character3) == 0x000200, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character3' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_DynamicCast_bSuccess3) == 0x000208, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_GetOwnerCharacter_ReturnValue6) == 0x000210, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_GetOwnerCharacter_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_NotifyName2) == 0x000218, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_NotifyName2' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000220, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CreateDelegate_OutputDelegate2) == 0x000228, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_IsGameplayTagValid_ReturnValue1) == 0x000238, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_IsGameplayTagValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_MakeLiteralByte_ReturnValue) == 0x000239, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_NotifyName3) == 0x000240, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_NotifyName3' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CreateDelegate_OutputDelegate3) == 0x000248, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_NotifyName4) == 0x000258, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_NotifyName4' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_GetOwnerCharacter_ReturnValue7) == 0x000260, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_GetOwnerCharacter_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_SkillTag1) == 0x000268, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_SkillTag1' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character4) == 0x000270, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character4' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_DynamicCast_bSuccess4) == 0x000278, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000279, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000280, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_IsValid_ReturnValue3) == 0x000288, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_CharacterBP) == 0x000290, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_SkillTag) == 0x000298, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_SkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_bAvoidSkill) == 0x0002A0, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_bAvoidSkill' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_EqualEqual_GameplayTag_ReturnValue1) == 0x0002A1, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_EqualEqual_GameplayTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CreateDelegate_OutputDelegate4) == 0x0002A8, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CreateDelegate_OutputDelegate5) == 0x0002B8, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_GenerateSerialNumber_SerialNumber) == 0x0002C8, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_GenerateSerialNumber_SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_Damage) == 0x0002CC, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_DamageType) == 0x0002D0, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_DamageReceiver) == 0x0002D8, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_DamageReceiver' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_bRemainHP) == 0x0002E0, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_bRemainHP' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_bDamageIsCut) == 0x0002E1, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_bDamageIsCut' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_SerialNumber) == 0x0002E4, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_DamageReceiverIsPlayer) == 0x0002E8, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_DamageReceiverIsPlayer' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_bWithSeparatedStandAttack) == 0x0002E9, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_bWithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CustomEvent_bEnemysSeparateStand) == 0x0002EA, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CustomEvent_bEnemysSeparateStand' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_GetAJBHighlightManager_bIsValid) == 0x0002EB, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_GetAJBHighlightManager_bIsValid' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_GetAJBHighlightManager_ReturnValue) == 0x0002F0, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_GetAJBHighlightManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_EqualEqual_GameplayTag_ReturnValue2) == 0x0002F8, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_EqualEqual_GameplayTag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_IsPlayingReplay_ReturnValue) == 0x0002F9, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_TryToSpeakVoice_bWillBeSpoken) == 0x0002FA, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_TryToSpeakVoice_bWillBeSpoken' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_TryToSpeakVoice_bWillBeSpoken1) == 0x0002FB, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_TryToSpeakVoice_bWillBeSpoken1' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_GetAJBHighlightManager_bIsValid1) == 0x0002FC, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_GetAJBHighlightManager_bIsValid1' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_GetAJBHighlightManager_ReturnValue1) == 0x000300, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_GetAJBHighlightManager_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_IsPlayingReplay_ReturnValue1) == 0x000308, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_IsPlayingReplay_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_GetOwnerCharacter_ReturnValue8) == 0x000310, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_GetOwnerCharacter_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character5) == 0x000318, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character5' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_DynamicCast_bSuccess5) == 0x000320, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_MakeLiteralByte_ReturnValue1) == 0x000321, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_MakeLiteralByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CreateDelegate_OutputDelegate6) == 0x000328, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_CalcShotTransform_bSuccess) == 0x000338, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_CalcShotTransform_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_CalcShotTransform_Transforms) == 0x000340, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_CalcShotTransform_Transforms' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_CreateDelegate_OutputDelegate7) == 0x000350, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_Array_Get_Item) == 0x000360, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_BreakTransform_Location) == 0x000390, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_BreakTransform_Rotation) == 0x00039C, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_BreakTransform_Scale) == 0x0003A8, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0003B4, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_ProcessingShotTransform_OutLocation) == 0x0003B8, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_ProcessingShotTransform_OutLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_BooleanAND_ReturnValue2) == 0x0003C4, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_TryToSpeakVoice_bWillBeSpoken2) == 0x0003C5, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_TryToSpeakVoice_bWillBeSpoken2' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_MakeLiteralByte_ReturnValue2) == 0x0003C6, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_MakeLiteralByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_Select_Default) == 0x0003C8, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_MakeLiteralByte_ReturnValue3) == 0x0003CC, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_MakeLiteralByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_BooleanAND_ReturnValue3) == 0x0003CD, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, K2Node_Select1_Default) == 0x0003D0, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill, CallFunc_TryToSpeakVoice_bWillBeSpoken3) == 0x0003D8, "Member 'BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill::CallFunc_TryToSpeakVoice_bWillBeSpoken3' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnGiveDamage
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBSnipeSkill_C_OnGiveDamage final
{
public:
	int32                                         Damage_0;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DamageType;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageReceiver;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRemainHP;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDamageIsCut;                                      // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SerialNumber_0;                                    // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DamageReceiverIsPlayer;                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWithSeparatedStandAttack;                         // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bEnemysSeparateStand;                              // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBSnipeSkill_C_OnGiveDamage) == 0x000008, "Wrong alignment on BP_AJBSnipeSkill_C_OnGiveDamage");
static_assert(sizeof(BP_AJBSnipeSkill_C_OnGiveDamage) == 0x000028, "Wrong size on BP_AJBSnipeSkill_C_OnGiveDamage");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnGiveDamage, Damage_0) == 0x000000, "Member 'BP_AJBSnipeSkill_C_OnGiveDamage::Damage_0' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnGiveDamage, DamageType) == 0x000008, "Member 'BP_AJBSnipeSkill_C_OnGiveDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnGiveDamage, DamageReceiver) == 0x000010, "Member 'BP_AJBSnipeSkill_C_OnGiveDamage::DamageReceiver' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnGiveDamage, bRemainHP) == 0x000018, "Member 'BP_AJBSnipeSkill_C_OnGiveDamage::bRemainHP' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnGiveDamage, bDamageIsCut) == 0x000019, "Member 'BP_AJBSnipeSkill_C_OnGiveDamage::bDamageIsCut' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnGiveDamage, SerialNumber_0) == 0x00001C, "Member 'BP_AJBSnipeSkill_C_OnGiveDamage::SerialNumber_0' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnGiveDamage, DamageReceiverIsPlayer) == 0x000020, "Member 'BP_AJBSnipeSkill_C_OnGiveDamage::DamageReceiverIsPlayer' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnGiveDamage, bWithSeparatedStandAttack) == 0x000021, "Member 'BP_AJBSnipeSkill_C_OnGiveDamage::bWithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnGiveDamage, bEnemysSeparateStand) == 0x000022, "Member 'BP_AJBSnipeSkill_C_OnGiveDamage::bEnemysSeparateStand' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnBlocked
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBSnipeSkill_C_OnBlocked final
{
public:
	struct FGameplayTag                           SkillTag_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bAvoidSkill;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBSnipeSkill_C_OnBlocked) == 0x000008, "Wrong alignment on BP_AJBSnipeSkill_C_OnBlocked");
static_assert(sizeof(BP_AJBSnipeSkill_C_OnBlocked) == 0x000010, "Wrong size on BP_AJBSnipeSkill_C_OnBlocked");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnBlocked, SkillTag_0) == 0x000000, "Member 'BP_AJBSnipeSkill_C_OnBlocked::SkillTag_0' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnBlocked, bAvoidSkill) == 0x000008, "Member 'BP_AJBSnipeSkill_C_OnBlocked::bAvoidSkill' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.BindCharacterDispatcher
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBSnipeSkill_C_BindCharacterDispatcher final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSnipeSkill_C_BindCharacterDispatcher) == 0x000008, "Wrong alignment on BP_AJBSnipeSkill_C_BindCharacterDispatcher");
static_assert(sizeof(BP_AJBSnipeSkill_C_BindCharacterDispatcher) == 0x000008, "Wrong size on BP_AJBSnipeSkill_C_BindCharacterDispatcher");
static_assert(offsetof(BP_AJBSnipeSkill_C_BindCharacterDispatcher, CharacterBP) == 0x000000, "Member 'BP_AJBSnipeSkill_C_BindCharacterDispatcher::CharacterBP' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnHeadShot
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBSnipeSkill_C_OnHeadShot final
{
public:
	struct FGameplayTag                           SkillTag_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSnipeSkill_C_OnHeadShot) == 0x000008, "Wrong alignment on BP_AJBSnipeSkill_C_OnHeadShot");
static_assert(sizeof(BP_AJBSnipeSkill_C_OnHeadShot) == 0x000008, "Wrong size on BP_AJBSnipeSkill_C_OnHeadShot");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnHeadShot, SkillTag_0) == 0x000000, "Member 'BP_AJBSnipeSkill_C_OnHeadShot::SkillTag_0' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.ConfigureBullet
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBSnipeSkill_C_ConfigureBullet final
{
public:
	class ABP_AJBInGameProjectile_C*              Bullet;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSnipeSkill_C_ConfigureBullet) == 0x000008, "Wrong alignment on BP_AJBSnipeSkill_C_ConfigureBullet");
static_assert(sizeof(BP_AJBSnipeSkill_C_ConfigureBullet) == 0x000008, "Wrong size on BP_AJBSnipeSkill_C_ConfigureBullet");
static_assert(offsetof(BP_AJBSnipeSkill_C_ConfigureBullet, Bullet) == 0x000000, "Member 'BP_AJBSnipeSkill_C_ConfigureBullet::Bullet' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnShot
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBSnipeSkill_C_OnShot final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBSnipeSkill_C_OnShot) == 0x000004, "Wrong alignment on BP_AJBSnipeSkill_C_OnShot");
static_assert(sizeof(BP_AJBSnipeSkill_C_OnShot) == 0x000018, "Wrong size on BP_AJBSnipeSkill_C_OnShot");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnShot, Location) == 0x000000, "Member 'BP_AJBSnipeSkill_C_OnShot::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnShot, Rotation) == 0x00000C, "Member 'BP_AJBSnipeSkill_C_OnShot::Rotation' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnMCShot
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBSnipeSkill_C_OnMCShot final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBSnipeSkill_C_OnMCShot) == 0x000004, "Wrong alignment on BP_AJBSnipeSkill_C_OnMCShot");
static_assert(sizeof(BP_AJBSnipeSkill_C_OnMCShot) == 0x000018, "Wrong size on BP_AJBSnipeSkill_C_OnMCShot");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnMCShot, Location) == 0x000000, "Member 'BP_AJBSnipeSkill_C_OnMCShot::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnMCShot, Rotation) == 0x00000C, "Member 'BP_AJBSnipeSkill_C_OnMCShot::Rotation' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnROSShot
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBSnipeSkill_C_OnROSShot final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBSnipeSkill_C_OnROSShot) == 0x000004, "Wrong alignment on BP_AJBSnipeSkill_C_OnROSShot");
static_assert(sizeof(BP_AJBSnipeSkill_C_OnROSShot) == 0x000018, "Wrong size on BP_AJBSnipeSkill_C_OnROSShot");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnROSShot, Location) == 0x000000, "Member 'BP_AJBSnipeSkill_C_OnROSShot::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnROSShot, Rotation) == 0x00000C, "Member 'BP_AJBSnipeSkill_C_OnROSShot::Rotation' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.MC_Shot
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBSnipeSkill_C_MC_Shot final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBSnipeSkill_C_MC_Shot) == 0x000004, "Wrong alignment on BP_AJBSnipeSkill_C_MC_Shot");
static_assert(sizeof(BP_AJBSnipeSkill_C_MC_Shot) == 0x000018, "Wrong size on BP_AJBSnipeSkill_C_MC_Shot");
static_assert(offsetof(BP_AJBSnipeSkill_C_MC_Shot, Location) == 0x000000, "Member 'BP_AJBSnipeSkill_C_MC_Shot::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_MC_Shot, Rotation) == 0x00000C, "Member 'BP_AJBSnipeSkill_C_MC_Shot::Rotation' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.AppearEffect
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBSnipeSkill_C_AppearEffect final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBSnipeSkill_C_AppearEffect) == 0x000004, "Wrong alignment on BP_AJBSnipeSkill_C_AppearEffect");
static_assert(sizeof(BP_AJBSnipeSkill_C_AppearEffect) == 0x000018, "Wrong size on BP_AJBSnipeSkill_C_AppearEffect");
static_assert(offsetof(BP_AJBSnipeSkill_C_AppearEffect, Location) == 0x000000, "Member 'BP_AJBSnipeSkill_C_AppearEffect::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_AppearEffect, Rotation) == 0x00000C, "Member 'BP_AJBSnipeSkill_C_AppearEffect::Rotation' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.SpawnBullet
// 0x001C (0x001C - 0x0000)
struct BP_AJBSnipeSkill_C_SpawnBullet final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          WithAddSerialNumber;                               // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBSnipeSkill_C_SpawnBullet) == 0x000004, "Wrong alignment on BP_AJBSnipeSkill_C_SpawnBullet");
static_assert(sizeof(BP_AJBSnipeSkill_C_SpawnBullet) == 0x00001C, "Wrong size on BP_AJBSnipeSkill_C_SpawnBullet");
static_assert(offsetof(BP_AJBSnipeSkill_C_SpawnBullet, Location) == 0x000000, "Member 'BP_AJBSnipeSkill_C_SpawnBullet::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_SpawnBullet, Rotation) == 0x00000C, "Member 'BP_AJBSnipeSkill_C_SpawnBullet::Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_SpawnBullet, WithAddSerialNumber) == 0x000018, "Member 'BP_AJBSnipeSkill_C_SpawnBullet::WithAddSerialNumber' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.ROS_Shot
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBSnipeSkill_C_ROS_Shot final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBSnipeSkill_C_ROS_Shot) == 0x000004, "Wrong alignment on BP_AJBSnipeSkill_C_ROS_Shot");
static_assert(sizeof(BP_AJBSnipeSkill_C_ROS_Shot) == 0x000018, "Wrong size on BP_AJBSnipeSkill_C_ROS_Shot");
static_assert(offsetof(BP_AJBSnipeSkill_C_ROS_Shot, Location) == 0x000000, "Member 'BP_AJBSnipeSkill_C_ROS_Shot::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ROS_Shot, Rotation) == 0x00000C, "Member 'BP_AJBSnipeSkill_C_ROS_Shot::Rotation' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.ChangeProjectileSpeedScale
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBSnipeSkill_C_ChangeProjectileSpeedScale final
{
public:
	float                                         SpeedScale;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSnipeSkill_C_ChangeProjectileSpeedScale) == 0x000004, "Wrong alignment on BP_AJBSnipeSkill_C_ChangeProjectileSpeedScale");
static_assert(sizeof(BP_AJBSnipeSkill_C_ChangeProjectileSpeedScale) == 0x000004, "Wrong size on BP_AJBSnipeSkill_C_ChangeProjectileSpeedScale");
static_assert(offsetof(BP_AJBSnipeSkill_C_ChangeProjectileSpeedScale, SpeedScale) == 0x000000, "Member 'BP_AJBSnipeSkill_C_ChangeProjectileSpeedScale::SpeedScale' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.ChangeAdditionalProjectileGravityPower
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBSnipeSkill_C_ChangeAdditionalProjectileGravityPower final
{
public:
	float                                         Power;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSnipeSkill_C_ChangeAdditionalProjectileGravityPower) == 0x000004, "Wrong alignment on BP_AJBSnipeSkill_C_ChangeAdditionalProjectileGravityPower");
static_assert(sizeof(BP_AJBSnipeSkill_C_ChangeAdditionalProjectileGravityPower) == 0x000004, "Wrong size on BP_AJBSnipeSkill_C_ChangeAdditionalProjectileGravityPower");
static_assert(offsetof(BP_AJBSnipeSkill_C_ChangeAdditionalProjectileGravityPower, Power) == 0x000000, "Member 'BP_AJBSnipeSkill_C_ChangeAdditionalProjectileGravityPower::Power' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnCompleted_7DDD297442D7CC4375E0C99B834BFDEC
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBSnipeSkill_C_OnCompleted_7DDD297442D7CC4375E0C99B834BFDEC final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSnipeSkill_C_OnCompleted_7DDD297442D7CC4375E0C99B834BFDEC) == 0x000008, "Wrong alignment on BP_AJBSnipeSkill_C_OnCompleted_7DDD297442D7CC4375E0C99B834BFDEC");
static_assert(sizeof(BP_AJBSnipeSkill_C_OnCompleted_7DDD297442D7CC4375E0C99B834BFDEC) == 0x000008, "Wrong size on BP_AJBSnipeSkill_C_OnCompleted_7DDD297442D7CC4375E0C99B834BFDEC");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnCompleted_7DDD297442D7CC4375E0C99B834BFDEC, NotifyName) == 0x000000, "Member 'BP_AJBSnipeSkill_C_OnCompleted_7DDD297442D7CC4375E0C99B834BFDEC::NotifyName' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnBlendOut_7DDD297442D7CC4375E0C99B834BFDEC
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBSnipeSkill_C_OnBlendOut_7DDD297442D7CC4375E0C99B834BFDEC final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSnipeSkill_C_OnBlendOut_7DDD297442D7CC4375E0C99B834BFDEC) == 0x000008, "Wrong alignment on BP_AJBSnipeSkill_C_OnBlendOut_7DDD297442D7CC4375E0C99B834BFDEC");
static_assert(sizeof(BP_AJBSnipeSkill_C_OnBlendOut_7DDD297442D7CC4375E0C99B834BFDEC) == 0x000008, "Wrong size on BP_AJBSnipeSkill_C_OnBlendOut_7DDD297442D7CC4375E0C99B834BFDEC");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnBlendOut_7DDD297442D7CC4375E0C99B834BFDEC, NotifyName) == 0x000000, "Member 'BP_AJBSnipeSkill_C_OnBlendOut_7DDD297442D7CC4375E0C99B834BFDEC::NotifyName' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnInterrupted_7DDD297442D7CC4375E0C99B834BFDEC
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBSnipeSkill_C_OnInterrupted_7DDD297442D7CC4375E0C99B834BFDEC final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSnipeSkill_C_OnInterrupted_7DDD297442D7CC4375E0C99B834BFDEC) == 0x000008, "Wrong alignment on BP_AJBSnipeSkill_C_OnInterrupted_7DDD297442D7CC4375E0C99B834BFDEC");
static_assert(sizeof(BP_AJBSnipeSkill_C_OnInterrupted_7DDD297442D7CC4375E0C99B834BFDEC) == 0x000008, "Wrong size on BP_AJBSnipeSkill_C_OnInterrupted_7DDD297442D7CC4375E0C99B834BFDEC");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnInterrupted_7DDD297442D7CC4375E0C99B834BFDEC, NotifyName) == 0x000000, "Member 'BP_AJBSnipeSkill_C_OnInterrupted_7DDD297442D7CC4375E0C99B834BFDEC::NotifyName' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnNotifyBegin_7DDD297442D7CC4375E0C99B834BFDEC
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBSnipeSkill_C_OnNotifyBegin_7DDD297442D7CC4375E0C99B834BFDEC final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSnipeSkill_C_OnNotifyBegin_7DDD297442D7CC4375E0C99B834BFDEC) == 0x000008, "Wrong alignment on BP_AJBSnipeSkill_C_OnNotifyBegin_7DDD297442D7CC4375E0C99B834BFDEC");
static_assert(sizeof(BP_AJBSnipeSkill_C_OnNotifyBegin_7DDD297442D7CC4375E0C99B834BFDEC) == 0x000008, "Wrong size on BP_AJBSnipeSkill_C_OnNotifyBegin_7DDD297442D7CC4375E0C99B834BFDEC");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnNotifyBegin_7DDD297442D7CC4375E0C99B834BFDEC, NotifyName) == 0x000000, "Member 'BP_AJBSnipeSkill_C_OnNotifyBegin_7DDD297442D7CC4375E0C99B834BFDEC::NotifyName' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnNotifyEnd_7DDD297442D7CC4375E0C99B834BFDEC
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBSnipeSkill_C_OnNotifyEnd_7DDD297442D7CC4375E0C99B834BFDEC final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSnipeSkill_C_OnNotifyEnd_7DDD297442D7CC4375E0C99B834BFDEC) == 0x000008, "Wrong alignment on BP_AJBSnipeSkill_C_OnNotifyEnd_7DDD297442D7CC4375E0C99B834BFDEC");
static_assert(sizeof(BP_AJBSnipeSkill_C_OnNotifyEnd_7DDD297442D7CC4375E0C99B834BFDEC) == 0x000008, "Wrong size on BP_AJBSnipeSkill_C_OnNotifyEnd_7DDD297442D7CC4375E0C99B834BFDEC");
static_assert(offsetof(BP_AJBSnipeSkill_C_OnNotifyEnd_7DDD297442D7CC4375E0C99B834BFDEC, NotifyName) == 0x000000, "Member 'BP_AJBSnipeSkill_C_OnNotifyEnd_7DDD297442D7CC4375E0C99B834BFDEC::NotifyName' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.GetPoliticSpreadParam
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBSnipeSkill_C_GetPoliticSpreadParam final
{
public:
	float                                         LowerSpread_0;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpreadHealStopTime_0;                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAim_bAim;                               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSnipeSkill_C_GetPoliticSpreadParam) == 0x000008, "Wrong alignment on BP_AJBSnipeSkill_C_GetPoliticSpreadParam");
static_assert(sizeof(BP_AJBSnipeSkill_C_GetPoliticSpreadParam) == 0x000030, "Wrong size on BP_AJBSnipeSkill_C_GetPoliticSpreadParam");
static_assert(offsetof(BP_AJBSnipeSkill_C_GetPoliticSpreadParam, LowerSpread_0) == 0x000000, "Member 'BP_AJBSnipeSkill_C_GetPoliticSpreadParam::LowerSpread_0' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_GetPoliticSpreadParam, SpreadHealStopTime_0) == 0x000004, "Member 'BP_AJBSnipeSkill_C_GetPoliticSpreadParam::SpreadHealStopTime_0' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_GetPoliticSpreadParam, Temp_bool_Variable) == 0x000008, "Member 'BP_AJBSnipeSkill_C_GetPoliticSpreadParam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_GetPoliticSpreadParam, Temp_bool_Variable1) == 0x000009, "Member 'BP_AJBSnipeSkill_C_GetPoliticSpreadParam::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_GetPoliticSpreadParam, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000010, "Member 'BP_AJBSnipeSkill_C_GetPoliticSpreadParam::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_GetPoliticSpreadParam, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBSnipeSkill_C_GetPoliticSpreadParam::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_GetPoliticSpreadParam, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBSnipeSkill_C_GetPoliticSpreadParam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_GetPoliticSpreadParam, CallFunc_IsAim_bAim) == 0x000021, "Member 'BP_AJBSnipeSkill_C_GetPoliticSpreadParam::CallFunc_IsAim_bAim' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_GetPoliticSpreadParam, K2Node_Select_Default) == 0x000024, "Member 'BP_AJBSnipeSkill_C_GetPoliticSpreadParam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_GetPoliticSpreadParam, K2Node_Select1_Default) == 0x000028, "Member 'BP_AJBSnipeSkill_C_GetPoliticSpreadParam::K2Node_Select1_Default' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.ProcessingShotTransform
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBSnipeSkill_C_ProcessingShotTransform final
{
public:
	struct FVector                                InLocation;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutLocation;                                       // 0x000C(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSnipeSkill_C_ProcessingShotTransform) == 0x000004, "Wrong alignment on BP_AJBSnipeSkill_C_ProcessingShotTransform");
static_assert(sizeof(BP_AJBSnipeSkill_C_ProcessingShotTransform) == 0x000018, "Wrong size on BP_AJBSnipeSkill_C_ProcessingShotTransform");
static_assert(offsetof(BP_AJBSnipeSkill_C_ProcessingShotTransform, InLocation) == 0x000000, "Member 'BP_AJBSnipeSkill_C_ProcessingShotTransform::InLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_ProcessingShotTransform, OutLocation) == 0x00000C, "Member 'BP_AJBSnipeSkill_C_ProcessingShotTransform::OutLocation' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.GetShotParticleTag
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBSnipeSkill_C_GetShotParticleTag final
{
public:
	struct FGameplayTag                           ShotParticleTag;                                   // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStageDark_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSnipeSkill_C_GetShotParticleTag) == 0x000008, "Wrong alignment on BP_AJBSnipeSkill_C_GetShotParticleTag");
static_assert(sizeof(BP_AJBSnipeSkill_C_GetShotParticleTag) == 0x000018, "Wrong size on BP_AJBSnipeSkill_C_GetShotParticleTag");
static_assert(offsetof(BP_AJBSnipeSkill_C_GetShotParticleTag, ShotParticleTag) == 0x000000, "Member 'BP_AJBSnipeSkill_C_GetShotParticleTag::ShotParticleTag' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_GetShotParticleTag, CallFunc_IsStageDark_ReturnValue) == 0x000008, "Member 'BP_AJBSnipeSkill_C_GetShotParticleTag::CallFunc_IsStageDark_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_GetShotParticleTag, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000009, "Member 'BP_AJBSnipeSkill_C_GetShotParticleTag::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_GetShotParticleTag, Temp_bool_Variable) == 0x00000A, "Member 'BP_AJBSnipeSkill_C_GetShotParticleTag::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_GetShotParticleTag, K2Node_Select_Default) == 0x000010, "Member 'BP_AJBSnipeSkill_C_GetShotParticleTag::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.GetSkillAttackRange
// 0x0014 (0x0014 - 0x0000)
struct BP_AJBSnipeSkill_C_GetSkillAttackRange final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSnipeSkill_C_GetSkillAttackRange) == 0x000004, "Wrong alignment on BP_AJBSnipeSkill_C_GetSkillAttackRange");
static_assert(sizeof(BP_AJBSnipeSkill_C_GetSkillAttackRange) == 0x000014, "Wrong size on BP_AJBSnipeSkill_C_GetSkillAttackRange");
static_assert(offsetof(BP_AJBSnipeSkill_C_GetSkillAttackRange, ReturnValue) == 0x000000, "Member 'BP_AJBSnipeSkill_C_GetSkillAttackRange::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_GetSkillAttackRange, Temp_bool_Variable) == 0x000004, "Member 'BP_AJBSnipeSkill_C_GetSkillAttackRange::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_GetSkillAttackRange, Temp_float_Variable) == 0x000008, "Member 'BP_AJBSnipeSkill_C_GetSkillAttackRange::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_GetSkillAttackRange, CallFunc_IsValidClass_ReturnValue) == 0x00000C, "Member 'BP_AJBSnipeSkill_C_GetSkillAttackRange::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSnipeSkill_C_GetSkillAttackRange, K2Node_Select_Default) == 0x000010, "Member 'BP_AJBSnipeSkill_C_GetSkillAttackRange::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBSnipeSkill_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSnipeSkill_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBSnipeSkill_C_ReceiveTick");
static_assert(sizeof(BP_AJBSnipeSkill_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBSnipeSkill_C_ReceiveTick");
static_assert(offsetof(BP_AJBSnipeSkill_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBSnipeSkill_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.ChangeState
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBSnipeSkill_C_ChangeState final
{
public:
	uint8                                         NextState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSnipeSkill_C_ChangeState) == 0x000001, "Wrong alignment on BP_AJBSnipeSkill_C_ChangeState");
static_assert(sizeof(BP_AJBSnipeSkill_C_ChangeState) == 0x000001, "Wrong size on BP_AJBSnipeSkill_C_ChangeState");
static_assert(offsetof(BP_AJBSnipeSkill_C_ChangeState, NextState) == 0x000000, "Member 'BP_AJBSnipeSkill_C_ChangeState::NextState' has a wrong offset!");

}


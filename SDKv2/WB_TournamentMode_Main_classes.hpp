#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TournamentMode_Main

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_TournamentMode_Main.WB_TournamentMode_Main_C
// 0x0088 (0x0348 - 0x02C0)
class UWB_TournamentMode_Main_C final : public UAJBWindowWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_AppearWatcherTitle;                           // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_AppearPlayerList;                             // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_1;                                        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_2;                                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          PairInfo_CameraOnly;                               // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          PlayerName;                                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           WatcherTitle;                                      // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_TournamentMode_ButtonGuide_C*       WB_TournamentMode_ButtonGuide;                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_TournamentMode_PlayerList_C*        WB_TournamentMode_PlayerList;                      // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_TournamentMode_UltimateLogWindow_C* WB_TournamentMode_UltimateLogWindow;               // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnChangedWatcherPlayerDispatcher;                  // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bShowPlayerList;                                   // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x3];                                      // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WatcherPlayerID;                                   // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisplayWatcherMode;                               // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bOpendFullMap;                                     // 0x0331(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_332[0x6];                                      // 0x0332(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnReleasedTouchOnPlayer;                           // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnChangedWatcherPlayerDispatcher__DelegateSignature(int32 PlayerID);
	void OnReleasedTouchOnPlayer__DelegateSignature(class AActor* TouchedPlayerActor);
	void ExecuteUbergraph_WB_TournamentMode_Main(int32 EntryPoint);
	void OnGotoWatcherPlayerByUltimateWindowButton(int32 PlayerID);
	void RequestShopCompetition_UltimateLog(int32 PlayerID, const struct FGameplayTag& SkillTag);
	void UpdateWatcherNameAndTeamName();
	void SetupValidMatchingPlayerIndexList(const TArray<struct FST_ShopCompetitionTeamInfo>& TeamInfoList);
	void TogglePlayerList();
	void ChangedWatcherPlayerID(int32 SelectedWatcherPlayerID);
	void OnOpeningFullMap(class UAJBWindowWidget* TargetWidget);
	void OnClosedFullMap(class UAJBWindowWidget* TargetWidget);
	void OnHidePlayerList();
	void OnGotoWatcherPlayerByPlayerDetailButton(int32 PlayerID);
	void Construct();
	void ChangeMode_FreeCamera();
	void ChangeMode_Watcher();
	void HidePlayerList();
	void ShowPlayerList();
	void OnClosingWindow();
	void OnOpeningWindow();
	void BindFullMapWindowEvents();
	void IsDisplayWatcherMode(bool* bDisplayWatcherMode_0);
	bool OnInputTurnRate(float Value);
	bool OnInputReleasedUp();
	bool OnInputReleasedTouch();
	bool OnInputReleasedRight();
	bool OnInputReleasedR2();
	bool OnInputReleasedR1();
	bool OnInputReleasedLeft();
	bool OnInputReleasedL3();
	bool OnInputReleasedL2();
	bool OnInputReleasedL1();
	bool OnInputReleasedDown();
	bool OnInputReleasedDecide();
	bool OnInputReleasedCancel();
	bool OnInputPressedUp();
	bool OnInputPressedTouch(const float LocationX, const float LocationY);
	bool OnInputPressedRight();
	bool OnInputPressedR2();
	bool OnInputPressedR1();
	bool OnInputPressedLeft();
	bool OnInputPressedL3();
	bool OnInputPressedL2();
	bool OnInputPressedL1();
	bool OnInputPressedDown();
	bool OnInputPressedDecide();
	bool OnInputPressedCancel();
	bool OnInputMoveRight(float Value);
	bool OnInputMoveForward(float Value);
	bool OnInputLookupRate(float Value);
	bool IsModeless();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_TournamentMode_Main_C">();
	}
	static class UWB_TournamentMode_Main_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_TournamentMode_Main_C>();
	}
};
static_assert(alignof(UWB_TournamentMode_Main_C) == 0x000008, "Wrong alignment on UWB_TournamentMode_Main_C");
static_assert(sizeof(UWB_TournamentMode_Main_C) == 0x000348, "Wrong size on UWB_TournamentMode_Main_C");
static_assert(offsetof(UWB_TournamentMode_Main_C, UberGraphFrame) == 0x0002C0, "Member 'UWB_TournamentMode_Main_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_Main_C, Anim_AppearWatcherTitle) == 0x0002C8, "Member 'UWB_TournamentMode_Main_C::Anim_AppearWatcherTitle' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_Main_C, Anim_AppearPlayerList) == 0x0002D0, "Member 'UWB_TournamentMode_Main_C::Anim_AppearPlayerList' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_Main_C, AJBImage_1) == 0x0002D8, "Member 'UWB_TournamentMode_Main_C::AJBImage_1' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_Main_C, AJBImage_2) == 0x0002E0, "Member 'UWB_TournamentMode_Main_C::AJBImage_2' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_Main_C, PairInfo_CameraOnly) == 0x0002E8, "Member 'UWB_TournamentMode_Main_C::PairInfo_CameraOnly' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_Main_C, PlayerName) == 0x0002F0, "Member 'UWB_TournamentMode_Main_C::PlayerName' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_Main_C, WatcherTitle) == 0x0002F8, "Member 'UWB_TournamentMode_Main_C::WatcherTitle' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_Main_C, WB_TournamentMode_ButtonGuide) == 0x000300, "Member 'UWB_TournamentMode_Main_C::WB_TournamentMode_ButtonGuide' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_Main_C, WB_TournamentMode_PlayerList) == 0x000308, "Member 'UWB_TournamentMode_Main_C::WB_TournamentMode_PlayerList' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_Main_C, WB_TournamentMode_UltimateLogWindow) == 0x000310, "Member 'UWB_TournamentMode_Main_C::WB_TournamentMode_UltimateLogWindow' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_Main_C, OnChangedWatcherPlayerDispatcher) == 0x000318, "Member 'UWB_TournamentMode_Main_C::OnChangedWatcherPlayerDispatcher' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_Main_C, bShowPlayerList) == 0x000328, "Member 'UWB_TournamentMode_Main_C::bShowPlayerList' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_Main_C, WatcherPlayerID) == 0x00032C, "Member 'UWB_TournamentMode_Main_C::WatcherPlayerID' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_Main_C, bDisplayWatcherMode) == 0x000330, "Member 'UWB_TournamentMode_Main_C::bDisplayWatcherMode' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_Main_C, bOpendFullMap) == 0x000331, "Member 'UWB_TournamentMode_Main_C::bOpendFullMap' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_Main_C, OnReleasedTouchOnPlayer) == 0x000338, "Member 'UWB_TournamentMode_Main_C::OnReleasedTouchOnPlayer' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBDamageArea

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBDamageArea.BP_AJBDamageArea_C
// 0x0070 (0x0398 - 0x0328)
class ABP_AJBDamageArea_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(Transient, DuplicateTransient)
	class USceneComponent*                        OuterRangeLocator;                                 // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cylinder;                                          // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Dissolve_NewTrack_1_6431E9E84FAABBC919FA9EB6865C42EC; // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Dissolve_NewTrack_0_6431E9E84FAABBC919FA9EB6865C42EC; // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Dissolve__Direction_6431E9E84FAABBC919FA9EB6865C42EC; // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Dissolve;                                          // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InitialSafeAreaScale;                              // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseTestData;                                       // 0x0364(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             IntervalTestData;                                  // 0x0368(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InitialDamageAreaRadius;                           // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InitialLocation;                                   // 0x0374(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           VanishSE;                                          // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusToCylinderScaleCoeff;                        // 0x0388(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     VanishMaterial;                                    // 0x0390(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBDamageArea(int32 EntryPoint);
	void ProceedReduction(float Radius, const struct FVector& Location, float RemainingTime);
	void OpenGateCopyTransform();
	void OnCompletedSetup(float Radius, const struct FVector& Location);
	void UpdateTransform(float Radius, const struct FVector& Location);
	void OnVanish();
	void Vanish();
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void CompletedReduction();
	void StartReduction();
	void PreAnnounceReduction(int32 Timespan_Until_Start_Reduction);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void Dissolve__UpdateFunc();
	void Dissolve__FinishedFunc();
	void UserConstructionScript();
	void ApplyScaleToTransform(float Scale);
	float GetCylinderRadius();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBDamageArea_C">();
	}
	static class ABP_AJBDamageArea_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBDamageArea_C>();
	}
};
static_assert(alignof(ABP_AJBDamageArea_C) == 0x000008, "Wrong alignment on ABP_AJBDamageArea_C");
static_assert(sizeof(ABP_AJBDamageArea_C) == 0x000398, "Wrong size on ABP_AJBDamageArea_C");
static_assert(offsetof(ABP_AJBDamageArea_C, UberGraphFrame) == 0x000328, "Member 'ABP_AJBDamageArea_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AJBDamageArea_C, OuterRangeLocator) == 0x000330, "Member 'ABP_AJBDamageArea_C::OuterRangeLocator' has a wrong offset!");
static_assert(offsetof(ABP_AJBDamageArea_C, Cylinder) == 0x000338, "Member 'ABP_AJBDamageArea_C::Cylinder' has a wrong offset!");
static_assert(offsetof(ABP_AJBDamageArea_C, DefaultSceneRoot) == 0x000340, "Member 'ABP_AJBDamageArea_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_AJBDamageArea_C, Dissolve_NewTrack_1_6431E9E84FAABBC919FA9EB6865C42EC) == 0x000348, "Member 'ABP_AJBDamageArea_C::Dissolve_NewTrack_1_6431E9E84FAABBC919FA9EB6865C42EC' has a wrong offset!");
static_assert(offsetof(ABP_AJBDamageArea_C, Dissolve_NewTrack_0_6431E9E84FAABBC919FA9EB6865C42EC) == 0x00034C, "Member 'ABP_AJBDamageArea_C::Dissolve_NewTrack_0_6431E9E84FAABBC919FA9EB6865C42EC' has a wrong offset!");
static_assert(offsetof(ABP_AJBDamageArea_C, Dissolve__Direction_6431E9E84FAABBC919FA9EB6865C42EC) == 0x000350, "Member 'ABP_AJBDamageArea_C::Dissolve__Direction_6431E9E84FAABBC919FA9EB6865C42EC' has a wrong offset!");
static_assert(offsetof(ABP_AJBDamageArea_C, Dissolve) == 0x000358, "Member 'ABP_AJBDamageArea_C::Dissolve' has a wrong offset!");
static_assert(offsetof(ABP_AJBDamageArea_C, InitialSafeAreaScale) == 0x000360, "Member 'ABP_AJBDamageArea_C::InitialSafeAreaScale' has a wrong offset!");
static_assert(offsetof(ABP_AJBDamageArea_C, UseTestData) == 0x000364, "Member 'ABP_AJBDamageArea_C::UseTestData' has a wrong offset!");
static_assert(offsetof(ABP_AJBDamageArea_C, IntervalTestData) == 0x000368, "Member 'ABP_AJBDamageArea_C::IntervalTestData' has a wrong offset!");
static_assert(offsetof(ABP_AJBDamageArea_C, InitialDamageAreaRadius) == 0x000370, "Member 'ABP_AJBDamageArea_C::InitialDamageAreaRadius' has a wrong offset!");
static_assert(offsetof(ABP_AJBDamageArea_C, InitialLocation) == 0x000374, "Member 'ABP_AJBDamageArea_C::InitialLocation' has a wrong offset!");
static_assert(offsetof(ABP_AJBDamageArea_C, VanishSE) == 0x000380, "Member 'ABP_AJBDamageArea_C::VanishSE' has a wrong offset!");
static_assert(offsetof(ABP_AJBDamageArea_C, RadiusToCylinderScaleCoeff) == 0x000388, "Member 'ABP_AJBDamageArea_C::RadiusToCylinderScaleCoeff' has a wrong offset!");
static_assert(offsetof(ABP_AJBDamageArea_C, VanishMaterial) == 0x000390, "Member 'ABP_AJBDamageArea_C::VanishMaterial' has a wrong offset!");

}


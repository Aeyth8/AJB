#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameAIController

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_structs.hpp"
#include "AJB_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBInGameAIController.BP_AJBInGameAIController_C
// 0x0048 (0x0480 - 0x0438)
class ABP_AJBInGameAIController_C final : public AAJBInGameAIController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0438(0x0008)(Transient, DuplicateTransient)
	class UBP_AJBAIDebugComponent_C*              BP_AJBAIDebugComponent;                            // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBAIBTExtension_C*                 BP_AJBAIBTExtension;                               // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIRecognition_C*           BP_AJBInGameAIRecognition;                         // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAIPerceptionComponent*                 AIPerception;                                      // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIInputProxy_C*            BP_AJBInGameAIInputProxy;                          // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   MyBlackboard;                                      // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRunning;                                          // 0x0470(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471[0x3];                                      // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AI_Level;                                          // 0x0474(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AActor*                                 ContextActor;                                      // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBInGameAIController(int32 EntryPoint);
	void StartSpecialBehavior(class UBehaviorTree* BehaviorTree, float Delay);
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void SetSubTreeDynamic(class UBehaviorTree* SubTreeAsset);
	void StopBehavior();
	void DebugStartTestBehavior(class UBehaviorTree* BehaviorTreeAsset, class UBehaviorTree* BehaviorSubTreeAsset);
	void StartMoveInSafeAreaAndAttackBehavior();
	void StartMoveInSafeAreaOnlyBehavior();
	void OnDead(class AAIController* AIController, const struct FGameplayTag& DamageType);
	void StartIdle();
	void BndEvt__AIPerception_K2Node_ComponentBoundEvent_0_PerceptionUpdatedDelegate__DelegateSignature(const TArray<class AActor*>& UpdatedActors);
	void StartNormalBattleBehavior(float Delay);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void IsRunning(bool* bRunning_0);
	bool IsStoppingOrNotMoving();
	void Private_StartBehavior();
	int32 GetAILevel();
	void SetContextActor(class AActor* ContextActor_0);
	class AActor* GetContextActor();
	struct FVector GetCameraForwardVector();
	struct FVector GetCameraLocation();
	void GetCameraInfo(struct FVector* Location, struct FRotator* Rotation, float* FOV);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBInGameAIController_C">();
	}
	static class ABP_AJBInGameAIController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBInGameAIController_C>();
	}
};
static_assert(alignof(ABP_AJBInGameAIController_C) == 0x000008, "Wrong alignment on ABP_AJBInGameAIController_C");
static_assert(sizeof(ABP_AJBInGameAIController_C) == 0x000480, "Wrong size on ABP_AJBInGameAIController_C");
static_assert(offsetof(ABP_AJBInGameAIController_C, UberGraphFrame) == 0x000438, "Member 'ABP_AJBInGameAIController_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameAIController_C, BP_AJBAIDebugComponent) == 0x000440, "Member 'ABP_AJBInGameAIController_C::BP_AJBAIDebugComponent' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameAIController_C, BP_AJBAIBTExtension) == 0x000448, "Member 'ABP_AJBInGameAIController_C::BP_AJBAIBTExtension' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameAIController_C, BP_AJBInGameAIRecognition) == 0x000450, "Member 'ABP_AJBInGameAIController_C::BP_AJBInGameAIRecognition' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameAIController_C, AIPerception) == 0x000458, "Member 'ABP_AJBInGameAIController_C::AIPerception' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameAIController_C, BP_AJBInGameAIInputProxy) == 0x000460, "Member 'ABP_AJBInGameAIController_C::BP_AJBInGameAIInputProxy' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameAIController_C, MyBlackboard) == 0x000468, "Member 'ABP_AJBInGameAIController_C::MyBlackboard' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameAIController_C, bRunning) == 0x000470, "Member 'ABP_AJBInGameAIController_C::bRunning' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameAIController_C, AI_Level) == 0x000474, "Member 'ABP_AJBInGameAIController_C::AI_Level' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameAIController_C, ContextActor) == 0x000478, "Member 'ABP_AJBInGameAIController_C::ContextActor' has a wrong offset!");

}


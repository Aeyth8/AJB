#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPF_UIStringUtil

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AJB_structs.hpp"


namespace SDK::Params
{

// Function BPF_UIStringUtil.BPF_UIStringUtil_C.GetAJBBattleTypeString
// 0x00A8 (0x00A8 - 0x0000)
struct BPF_UIStringUtil_C_GetAJBBattleTypeString final
{
public:
	ECharacterBattleType                          Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Out;                                               // 0x0010(0x0018)(Parm, OutParm)
	ECharacterBattleType                          Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0030(0x0018)()
	class FText                                   Temp_text_Variable1;                               // 0x0048(0x0018)()
	class FText                                   Temp_text_Variable2;                               // 0x0060(0x0018)()
	class FText                                   Temp_text_Variable3;                               // 0x0078(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0090(0x0018)()
};
static_assert(alignof(BPF_UIStringUtil_C_GetAJBBattleTypeString) == 0x000008, "Wrong alignment on BPF_UIStringUtil_C_GetAJBBattleTypeString");
static_assert(sizeof(BPF_UIStringUtil_C_GetAJBBattleTypeString) == 0x0000A8, "Wrong size on BPF_UIStringUtil_C_GetAJBBattleTypeString");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBBattleTypeString, Type) == 0x000000, "Member 'BPF_UIStringUtil_C_GetAJBBattleTypeString::Type' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBBattleTypeString, __WorldContext) == 0x000008, "Member 'BPF_UIStringUtil_C_GetAJBBattleTypeString::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBBattleTypeString, Out) == 0x000010, "Member 'BPF_UIStringUtil_C_GetAJBBattleTypeString::Out' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBBattleTypeString, Temp_byte_Variable) == 0x000028, "Member 'BPF_UIStringUtil_C_GetAJBBattleTypeString::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBBattleTypeString, Temp_text_Variable) == 0x000030, "Member 'BPF_UIStringUtil_C_GetAJBBattleTypeString::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBBattleTypeString, Temp_text_Variable1) == 0x000048, "Member 'BPF_UIStringUtil_C_GetAJBBattleTypeString::Temp_text_Variable1' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBBattleTypeString, Temp_text_Variable2) == 0x000060, "Member 'BPF_UIStringUtil_C_GetAJBBattleTypeString::Temp_text_Variable2' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBBattleTypeString, Temp_text_Variable3) == 0x000078, "Member 'BPF_UIStringUtil_C_GetAJBBattleTypeString::Temp_text_Variable3' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBBattleTypeString, K2Node_Select_Default) == 0x000090, "Member 'BPF_UIStringUtil_C_GetAJBBattleTypeString::K2Node_Select_Default' has a wrong offset!");

// Function BPF_UIStringUtil.BPF_UIStringUtil_C.GetAJBRewardItemTypeString
// 0x0120 (0x0120 - 0x0000)
struct BPF_UIStringUtil_C_GetAJBRewardItemTypeString final
{
public:
	ERewardItemType                               Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Out;                                               // 0x0010(0x0018)(Parm, OutParm)
	ERewardItemType                               Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0030(0x0018)()
	class FText                                   Temp_text_Variable1;                               // 0x0048(0x0018)()
	class FText                                   Temp_text_Variable2;                               // 0x0060(0x0018)()
	class FText                                   Temp_text_Variable3;                               // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable4;                               // 0x0090(0x0018)()
	class FText                                   Temp_text_Variable5;                               // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable6;                               // 0x00C0(0x0018)()
	class FText                                   Temp_text_Variable7;                               // 0x00D8(0x0018)()
	class FText                                   Temp_text_Variable8;                               // 0x00F0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0108(0x0018)()
};
static_assert(alignof(BPF_UIStringUtil_C_GetAJBRewardItemTypeString) == 0x000008, "Wrong alignment on BPF_UIStringUtil_C_GetAJBRewardItemTypeString");
static_assert(sizeof(BPF_UIStringUtil_C_GetAJBRewardItemTypeString) == 0x000120, "Wrong size on BPF_UIStringUtil_C_GetAJBRewardItemTypeString");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardItemTypeString, Type) == 0x000000, "Member 'BPF_UIStringUtil_C_GetAJBRewardItemTypeString::Type' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardItemTypeString, __WorldContext) == 0x000008, "Member 'BPF_UIStringUtil_C_GetAJBRewardItemTypeString::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardItemTypeString, Out) == 0x000010, "Member 'BPF_UIStringUtil_C_GetAJBRewardItemTypeString::Out' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardItemTypeString, Temp_byte_Variable) == 0x000028, "Member 'BPF_UIStringUtil_C_GetAJBRewardItemTypeString::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardItemTypeString, Temp_text_Variable) == 0x000030, "Member 'BPF_UIStringUtil_C_GetAJBRewardItemTypeString::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardItemTypeString, Temp_text_Variable1) == 0x000048, "Member 'BPF_UIStringUtil_C_GetAJBRewardItemTypeString::Temp_text_Variable1' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardItemTypeString, Temp_text_Variable2) == 0x000060, "Member 'BPF_UIStringUtil_C_GetAJBRewardItemTypeString::Temp_text_Variable2' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardItemTypeString, Temp_text_Variable3) == 0x000078, "Member 'BPF_UIStringUtil_C_GetAJBRewardItemTypeString::Temp_text_Variable3' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardItemTypeString, Temp_text_Variable4) == 0x000090, "Member 'BPF_UIStringUtil_C_GetAJBRewardItemTypeString::Temp_text_Variable4' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardItemTypeString, Temp_text_Variable5) == 0x0000A8, "Member 'BPF_UIStringUtil_C_GetAJBRewardItemTypeString::Temp_text_Variable5' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardItemTypeString, Temp_text_Variable6) == 0x0000C0, "Member 'BPF_UIStringUtil_C_GetAJBRewardItemTypeString::Temp_text_Variable6' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardItemTypeString, Temp_text_Variable7) == 0x0000D8, "Member 'BPF_UIStringUtil_C_GetAJBRewardItemTypeString::Temp_text_Variable7' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardItemTypeString, Temp_text_Variable8) == 0x0000F0, "Member 'BPF_UIStringUtil_C_GetAJBRewardItemTypeString::Temp_text_Variable8' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardItemTypeString, K2Node_Select_Default) == 0x000108, "Member 'BPF_UIStringUtil_C_GetAJBRewardItemTypeString::K2Node_Select_Default' has a wrong offset!");

// Function BPF_UIStringUtil.BPF_UIStringUtil_C.GetAJBAreaTitle
// 0x00D0 (0x00D0 - 0x0000)
struct BPF_UIStringUtil_C_GetAJBAreaTitle final
{
public:
	int32                                         StageId;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Title;                                             // 0x0010(0x0018)(Parm, OutParm)
	class FText                                   Sub_Title;                                         // 0x0028(0x0018)(Parm, OutParm)
	int32                                         LAreaID;                                           // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LStageId;                                          // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0058(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBStageAreaTitleInfo                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x0080(0x0048)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_UIStringUtil_C_GetAJBAreaTitle) == 0x000008, "Wrong alignment on BPF_UIStringUtil_C_GetAJBAreaTitle");
static_assert(sizeof(BPF_UIStringUtil_C_GetAJBAreaTitle) == 0x0000D0, "Wrong size on BPF_UIStringUtil_C_GetAJBAreaTitle");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitle, StageId) == 0x000000, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitle::StageId' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitle, AreaId) == 0x000004, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitle::AreaId' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitle, __WorldContext) == 0x000008, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitle::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitle, Title) == 0x000010, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitle::Title' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitle, Sub_Title) == 0x000028, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitle::Sub_Title' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitle, LAreaID) == 0x000040, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitle::LAreaID' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitle, LStageId) == 0x000044, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitle::LStageId' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitle, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitle, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitle, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitle, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000058, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitle::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitle, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitle, CallFunc_Array_Get_Item) == 0x000070, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitle, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitle, CallFunc_GetDataTableRowFromName_OutRow) == 0x000080, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitle::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitle, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000C8, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitle::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitle, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C9, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitle::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitle, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x0000CA, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitle::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitle, CallFunc_BooleanAND_ReturnValue) == 0x0000CB, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BPF_UIStringUtil.BPF_UIStringUtil_C.GetAJBCurrentAreaTitle
// 0x0088 (0x0088 - 0x0000)
struct BPF_UIStringUtil_C_GetAJBCurrentAreaTitle final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Title;                                             // 0x0008(0x0018)(Parm, OutParm)
	class FText                                   Sub_Title;                                         // 0x0020(0x0018)(Parm, OutParm)
	int32                                         LAreaID;                                           // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LStageId;                                          // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAreaTypeID_ReturnValue;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStageID_StageTypeID;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetAJBAreaTitle_Title;                    // 0x0058(0x0018)()
	class FText                                   CallFunc_GetAJBAreaTitle_Sub_Title;                // 0x0070(0x0018)()
};
static_assert(alignof(BPF_UIStringUtil_C_GetAJBCurrentAreaTitle) == 0x000008, "Wrong alignment on BPF_UIStringUtil_C_GetAJBCurrentAreaTitle");
static_assert(sizeof(BPF_UIStringUtil_C_GetAJBCurrentAreaTitle) == 0x000088, "Wrong size on BPF_UIStringUtil_C_GetAJBCurrentAreaTitle");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBCurrentAreaTitle, __WorldContext) == 0x000000, "Member 'BPF_UIStringUtil_C_GetAJBCurrentAreaTitle::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBCurrentAreaTitle, Title) == 0x000008, "Member 'BPF_UIStringUtil_C_GetAJBCurrentAreaTitle::Title' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBCurrentAreaTitle, Sub_Title) == 0x000020, "Member 'BPF_UIStringUtil_C_GetAJBCurrentAreaTitle::Sub_Title' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBCurrentAreaTitle, LAreaID) == 0x000038, "Member 'BPF_UIStringUtil_C_GetAJBCurrentAreaTitle::LAreaID' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBCurrentAreaTitle, LStageId) == 0x00003C, "Member 'BPF_UIStringUtil_C_GetAJBCurrentAreaTitle::LStageId' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBCurrentAreaTitle, CallFunc_GetAJBGameInstance_bSuccess) == 0x000040, "Member 'BPF_UIStringUtil_C_GetAJBCurrentAreaTitle::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBCurrentAreaTitle, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000048, "Member 'BPF_UIStringUtil_C_GetAJBCurrentAreaTitle::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBCurrentAreaTitle, CallFunc_GetAreaTypeID_ReturnValue) == 0x000050, "Member 'BPF_UIStringUtil_C_GetAJBCurrentAreaTitle::CallFunc_GetAreaTypeID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBCurrentAreaTitle, CallFunc_GetStageID_StageTypeID) == 0x000054, "Member 'BPF_UIStringUtil_C_GetAJBCurrentAreaTitle::CallFunc_GetStageID_StageTypeID' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBCurrentAreaTitle, CallFunc_GetAJBAreaTitle_Title) == 0x000058, "Member 'BPF_UIStringUtil_C_GetAJBCurrentAreaTitle::CallFunc_GetAJBAreaTitle_Title' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBCurrentAreaTitle, CallFunc_GetAJBAreaTitle_Sub_Title) == 0x000070, "Member 'BPF_UIStringUtil_C_GetAJBCurrentAreaTitle::CallFunc_GetAJBAreaTitle_Sub_Title' has a wrong offset!");

// Function BPF_UIStringUtil.BPF_UIStringUtil_C.GetAJBAreaTitleMap
// 0x0140 (0x0140 - 0x0000)
struct BPF_UIStringUtil_C_GetAJBAreaTitleMap final
{
public:
	int32                                         StageId;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, struct FAJBStageAreaTitleInfo>    AreaTitleMap;                                      // 0x0010(0x0050)(Parm, OutParm, ZeroConstructor)
	TMap<int32, struct FAJBStageAreaTitleInfo>    LAreaTitleMap;                                     // 0x0060(0x0050)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         LStageId;                                          // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAvailableAllStages_ReturnValue;        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x00C8(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBStageAreaTitleInfo                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x00F0(0x0048)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_UIStringUtil_C_GetAJBAreaTitleMap) == 0x000008, "Wrong alignment on BPF_UIStringUtil_C_GetAJBAreaTitleMap");
static_assert(sizeof(BPF_UIStringUtil_C_GetAJBAreaTitleMap) == 0x000140, "Wrong size on BPF_UIStringUtil_C_GetAJBAreaTitleMap");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitleMap, StageId) == 0x000000, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitleMap::StageId' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitleMap, __WorldContext) == 0x000008, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitleMap::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitleMap, AreaTitleMap) == 0x000010, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitleMap::AreaTitleMap' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitleMap, LAreaTitleMap) == 0x000060, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitleMap::LAreaTitleMap' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitleMap, LStageId) == 0x0000B0, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitleMap::LStageId' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitleMap, Temp_int_Array_Index_Variable) == 0x0000B4, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitleMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitleMap, Temp_int_Loop_Counter_Variable) == 0x0000B8, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitleMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitleMap, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitleMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitleMap, CallFunc_GetAvailableAllStages_ReturnValue) == 0x0000C0, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitleMap::CallFunc_GetAvailableAllStages_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitleMap, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0000C8, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitleMap::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitleMap, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitleMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitleMap, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitleMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitleMap, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitleMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitleMap, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000F0, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitleMap::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitleMap, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000138, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitleMap::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBAreaTitleMap, CallFunc_BooleanOR_ReturnValue) == 0x000139, "Member 'BPF_UIStringUtil_C_GetAJBAreaTitleMap::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BPF_UIStringUtil.BPF_UIStringUtil_C.GetAJBEmoteVoiceLimitStringLen
// 0x0068 (0x0068 - 0x0000)
struct BPF_UIStringUtil_C_GetAJBEmoteVoiceLimitStringLen final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Len;                                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class FText>                      LAreaMap;                                          // 0x0010(0x0050)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         LStageId;                                          // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_UIStringUtil_C_GetAJBEmoteVoiceLimitStringLen) == 0x000008, "Wrong alignment on BPF_UIStringUtil_C_GetAJBEmoteVoiceLimitStringLen");
static_assert(sizeof(BPF_UIStringUtil_C_GetAJBEmoteVoiceLimitStringLen) == 0x000068, "Wrong size on BPF_UIStringUtil_C_GetAJBEmoteVoiceLimitStringLen");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBEmoteVoiceLimitStringLen, __WorldContext) == 0x000000, "Member 'BPF_UIStringUtil_C_GetAJBEmoteVoiceLimitStringLen::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBEmoteVoiceLimitStringLen, Len) == 0x000008, "Member 'BPF_UIStringUtil_C_GetAJBEmoteVoiceLimitStringLen::Len' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBEmoteVoiceLimitStringLen, LAreaMap) == 0x000010, "Member 'BPF_UIStringUtil_C_GetAJBEmoteVoiceLimitStringLen::LAreaMap' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBEmoteVoiceLimitStringLen, LStageId) == 0x000060, "Member 'BPF_UIStringUtil_C_GetAJBEmoteVoiceLimitStringLen::LStageId' has a wrong offset!");

// Function BPF_UIStringUtil.BPF_UIStringUtil_C.GetAJBRewardLimitStringLen
// 0x0068 (0x0068 - 0x0000)
struct BPF_UIStringUtil_C_GetAJBRewardLimitStringLen final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Len;                                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class FText>                      LAreaMap;                                          // 0x0010(0x0050)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         LStageId;                                          // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_UIStringUtil_C_GetAJBRewardLimitStringLen) == 0x000008, "Wrong alignment on BPF_UIStringUtil_C_GetAJBRewardLimitStringLen");
static_assert(sizeof(BPF_UIStringUtil_C_GetAJBRewardLimitStringLen) == 0x000068, "Wrong size on BPF_UIStringUtil_C_GetAJBRewardLimitStringLen");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardLimitStringLen, __WorldContext) == 0x000000, "Member 'BPF_UIStringUtil_C_GetAJBRewardLimitStringLen::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardLimitStringLen, Len) == 0x000008, "Member 'BPF_UIStringUtil_C_GetAJBRewardLimitStringLen::Len' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardLimitStringLen, LAreaMap) == 0x000010, "Member 'BPF_UIStringUtil_C_GetAJBRewardLimitStringLen::LAreaMap' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardLimitStringLen, LStageId) == 0x000060, "Member 'BPF_UIStringUtil_C_GetAJBRewardLimitStringLen::LStageId' has a wrong offset!");

// Function BPF_UIStringUtil.BPF_UIStringUtil_C.GetAJBEmoteChangeLimitStringLen
// 0x0068 (0x0068 - 0x0000)
struct BPF_UIStringUtil_C_GetAJBEmoteChangeLimitStringLen final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Len;                                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class FText>                      LAreaMap;                                          // 0x0010(0x0050)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         LStageId;                                          // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_UIStringUtil_C_GetAJBEmoteChangeLimitStringLen) == 0x000008, "Wrong alignment on BPF_UIStringUtil_C_GetAJBEmoteChangeLimitStringLen");
static_assert(sizeof(BPF_UIStringUtil_C_GetAJBEmoteChangeLimitStringLen) == 0x000068, "Wrong size on BPF_UIStringUtil_C_GetAJBEmoteChangeLimitStringLen");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBEmoteChangeLimitStringLen, __WorldContext) == 0x000000, "Member 'BPF_UIStringUtil_C_GetAJBEmoteChangeLimitStringLen::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBEmoteChangeLimitStringLen, Len) == 0x000008, "Member 'BPF_UIStringUtil_C_GetAJBEmoteChangeLimitStringLen::Len' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBEmoteChangeLimitStringLen, LAreaMap) == 0x000010, "Member 'BPF_UIStringUtil_C_GetAJBEmoteChangeLimitStringLen::LAreaMap' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBEmoteChangeLimitStringLen, LStageId) == 0x000060, "Member 'BPF_UIStringUtil_C_GetAJBEmoteChangeLimitStringLen::LStageId' has a wrong offset!");

// Function BPF_UIStringUtil.BPF_UIStringUtil_C.GetAJBRewardCharaProfileCardString
// 0x0020 (0x0020 - 0x0000)
struct BPF_UIStringUtil_C_GetAJBRewardCharaProfileCardString final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Out;                                               // 0x0008(0x0018)(Parm, OutParm)
};
static_assert(alignof(BPF_UIStringUtil_C_GetAJBRewardCharaProfileCardString) == 0x000008, "Wrong alignment on BPF_UIStringUtil_C_GetAJBRewardCharaProfileCardString");
static_assert(sizeof(BPF_UIStringUtil_C_GetAJBRewardCharaProfileCardString) == 0x000020, "Wrong size on BPF_UIStringUtil_C_GetAJBRewardCharaProfileCardString");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardCharaProfileCardString, __WorldContext) == 0x000000, "Member 'BPF_UIStringUtil_C_GetAJBRewardCharaProfileCardString::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardCharaProfileCardString, Out) == 0x000008, "Member 'BPF_UIStringUtil_C_GetAJBRewardCharaProfileCardString::Out' has a wrong offset!");

// Function BPF_UIStringUtil.BPF_UIStringUtil_C.GetAJBPadIconString
// 0x0030 (0x0030 - 0x0000)
struct BPF_UIStringUtil_C_GetAJBPadIconString final
{
public:
	EAJBPadIconType                               PadType;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Out;                                               // 0x0010(0x0018)(Parm, OutParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_UIStringUtil_C_GetAJBPadIconString) == 0x000008, "Wrong alignment on BPF_UIStringUtil_C_GetAJBPadIconString");
static_assert(sizeof(BPF_UIStringUtil_C_GetAJBPadIconString) == 0x000030, "Wrong size on BPF_UIStringUtil_C_GetAJBPadIconString");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBPadIconString, PadType) == 0x000000, "Member 'BPF_UIStringUtil_C_GetAJBPadIconString::PadType' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBPadIconString, __WorldContext) == 0x000008, "Member 'BPF_UIStringUtil_C_GetAJBPadIconString::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBPadIconString, Out) == 0x000010, "Member 'BPF_UIStringUtil_C_GetAJBPadIconString::Out' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBPadIconString, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'BPF_UIStringUtil_C_GetAJBPadIconString::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BPF_UIStringUtil.BPF_UIStringUtil_C.GetAJBRewardNameShortenedString
// 0x0068 (0x0068 - 0x0000)
struct BPF_UIStringUtil_C_GetAJBRewardNameShortenedString final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ERewardItemType                               ItemType;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LimitLength;                                       // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_UIStringUtil_C_GetAJBRewardNameShortenedString) == 0x000008, "Wrong alignment on BPF_UIStringUtil_C_GetAJBRewardNameShortenedString");
static_assert(sizeof(BPF_UIStringUtil_C_GetAJBRewardNameShortenedString) == 0x000068, "Wrong size on BPF_UIStringUtil_C_GetAJBRewardNameShortenedString");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardNameShortenedString, Name_0) == 0x000000, "Member 'BPF_UIStringUtil_C_GetAJBRewardNameShortenedString::Name_0' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardNameShortenedString, ItemType) == 0x000010, "Member 'BPF_UIStringUtil_C_GetAJBRewardNameShortenedString::ItemType' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardNameShortenedString, LimitLength) == 0x000014, "Member 'BPF_UIStringUtil_C_GetAJBRewardNameShortenedString::LimitLength' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardNameShortenedString, __WorldContext) == 0x000018, "Member 'BPF_UIStringUtil_C_GetAJBRewardNameShortenedString::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardNameShortenedString, ReturnValue) == 0x000020, "Member 'BPF_UIStringUtil_C_GetAJBRewardNameShortenedString::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardNameShortenedString, CallFunc_Len_ReturnValue) == 0x000030, "Member 'BPF_UIStringUtil_C_GetAJBRewardNameShortenedString::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardNameShortenedString, CallFunc_Left_ReturnValue) == 0x000038, "Member 'BPF_UIStringUtil_C_GetAJBRewardNameShortenedString::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardNameShortenedString, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'BPF_UIStringUtil_C_GetAJBRewardNameShortenedString::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardNameShortenedString, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BPF_UIStringUtil_C_GetAJBRewardNameShortenedString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardNameShortenedString, K2Node_SwitchEnum_CmpSuccess) == 0x000060, "Member 'BPF_UIStringUtil_C_GetAJBRewardNameShortenedString::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BPF_UIStringUtil.BPF_UIStringUtil_C.GetAJBRewardNameForChallengeEventClassItem
// 0x00A0 (0x00A0 - 0x0000)
struct BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem final
{
public:
	struct FChallengeEventClassContext            ClassContext;                                      // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0038(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetAJBRewardNameShortenedString_ReturnValue; // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetAJBRewardNameShortenedString_ReturnValue1; // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem) == 0x000008, "Wrong alignment on BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem");
static_assert(sizeof(BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem) == 0x0000A0, "Wrong size on BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem, ClassContext) == 0x000000, "Member 'BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem::ClassContext' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem, __WorldContext) == 0x000030, "Member 'BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem, ReturnValue) == 0x000038, "Member 'BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem, CallFunc_MakeLiteralInt_ReturnValue) == 0x000048, "Member 'BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem, K2Node_SwitchEnum_CmpSuccess) == 0x00004C, "Member 'BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem, CallFunc_Conv_IntToString_ReturnValue) == 0x000050, "Member 'BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem, CallFunc_GetAJBRewardNameShortenedString_ReturnValue) == 0x000070, "Member 'BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem::CallFunc_GetAJBRewardNameShortenedString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem, CallFunc_Concat_StrStr_ReturnValue1) == 0x000080, "Member 'BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem, CallFunc_GetAJBRewardNameShortenedString_ReturnValue1) == 0x000090, "Member 'BPF_UIStringUtil_C_GetAJBRewardNameForChallengeEventClassItem::CallFunc_GetAJBRewardNameShortenedString_ReturnValue1' has a wrong offset!");

// Function BPF_UIStringUtil.BPF_UIStringUtil_C.GetAJBConvertedServerDateTimeStringToText
// 0x0408 (0x0408 - 0x0000)
struct BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText final
{
public:
	class FString                                 DateTimeWithYear;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bBy27Hours;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Result;                                            // 0x0020(0x0018)(Parm, OutParm)
	TArray<class FString>                         LTimeString;                                       // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FString>                         LDateString;                                       // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FString>                         LDateAndTime;                                      // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0068(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue2;           // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0098(0x0018)()
	class FString                                 CallFunc_GetAJBConvertedDateTimeBy27Hours_YearOut; // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetAJBConvertedDateTimeBy27Hours_MonthOut; // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetAJBConvertedDateTimeBy27Hours_DayOut;  // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetAJBConvertedDateTimeBy27Hours_HourOut; // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00F0(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue1;           // 0x0130(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue2;           // 0x0148(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x0160(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x01A0(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue3;           // 0x01E0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData3;             // 0x01F8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0238(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0248(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue4;           // 0x0260(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue5;           // 0x0278(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData4;             // 0x0290(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData5;             // 0x02D0(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue6;           // 0x0310(0x0018)()
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue1;              // 0x0328(0x0010)(ZeroConstructor, ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData6;             // 0x0338(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue7;           // 0x0378(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData7;             // 0x0390(0x0040)(HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue2;              // 0x03D0(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array1;                           // 0x03E0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue1;                      // 0x03F0(0x0018)()
};
static_assert(alignof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText) == 0x000008, "Wrong alignment on BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText");
static_assert(sizeof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText) == 0x000408, "Wrong size on BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, DateTimeWithYear) == 0x000000, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::DateTimeWithYear' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, bBy27Hours) == 0x000010, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::bBy27Hours' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, __WorldContext) == 0x000018, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, Result) == 0x000020, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::Result' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, LTimeString) == 0x000038, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::LTimeString' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, LDateString) == 0x000048, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::LDateString' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, LDateAndTime) == 0x000058, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::LDateAndTime' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_ParseIntoArray_ReturnValue) == 0x000068, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00007C, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_Len_ReturnValue) == 0x000080, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_Greater_IntInt_ReturnValue) == 0x000084, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_Array_Length_ReturnValue1) == 0x000088, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x00008C, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_Array_Length_ReturnValue2) == 0x000090, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_EqualEqual_IntInt_ReturnValue2) == 0x000094, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_EqualEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_Conv_StringToText_ReturnValue) == 0x000098, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_GetAJBConvertedDateTimeBy27Hours_YearOut) == 0x0000B0, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_GetAJBConvertedDateTimeBy27Hours_YearOut' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_GetAJBConvertedDateTimeBy27Hours_MonthOut) == 0x0000C0, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_GetAJBConvertedDateTimeBy27Hours_MonthOut' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_GetAJBConvertedDateTimeBy27Hours_DayOut) == 0x0000D0, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_GetAJBConvertedDateTimeBy27Hours_DayOut' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_GetAJBConvertedDateTimeBy27Hours_HourOut) == 0x0000E0, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_GetAJBConvertedDateTimeBy27Hours_HourOut' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, K2Node_MakeStruct_FormatArgumentData) == 0x0000F0, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_Conv_StringToText_ReturnValue1) == 0x000130, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_Conv_StringToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_Conv_StringToText_ReturnValue2) == 0x000148, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_Conv_StringToText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, K2Node_MakeStruct_FormatArgumentData1) == 0x000160, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, K2Node_MakeStruct_FormatArgumentData2) == 0x0001A0, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_Conv_StringToText_ReturnValue3) == 0x0001E0, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_Conv_StringToText_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, K2Node_MakeStruct_FormatArgumentData3) == 0x0001F8, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::K2Node_MakeStruct_FormatArgumentData3' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, K2Node_MakeArray_Array) == 0x000238, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_Format_ReturnValue) == 0x000248, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_Conv_StringToText_ReturnValue4) == 0x000260, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_Conv_StringToText_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_Conv_StringToText_ReturnValue5) == 0x000278, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_Conv_StringToText_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, K2Node_MakeStruct_FormatArgumentData4) == 0x000290, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::K2Node_MakeStruct_FormatArgumentData4' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, K2Node_MakeStruct_FormatArgumentData5) == 0x0002D0, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::K2Node_MakeStruct_FormatArgumentData5' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_Conv_StringToText_ReturnValue6) == 0x000310, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_Conv_StringToText_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_ParseIntoArray_ReturnValue1) == 0x000328, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_ParseIntoArray_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, K2Node_MakeStruct_FormatArgumentData6) == 0x000338, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::K2Node_MakeStruct_FormatArgumentData6' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_Conv_StringToText_ReturnValue7) == 0x000378, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_Conv_StringToText_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, K2Node_MakeStruct_FormatArgumentData7) == 0x000390, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::K2Node_MakeStruct_FormatArgumentData7' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_ParseIntoArray_ReturnValue2) == 0x0003D0, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_ParseIntoArray_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, K2Node_MakeArray_Array1) == 0x0003E0, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText, CallFunc_Format_ReturnValue1) == 0x0003F0, "Member 'BPF_UIStringUtil_C_GetAJBConvertedServerDateTimeStringToText::CallFunc_Format_ReturnValue1' has a wrong offset!");

// Function BPF_UIStringUtil.BPF_UIStringUtil_C.GetAJBConvertedDateTimeBy27Hours
// 0x0198 (0x0198 - 0x0000)
struct BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours final
{
public:
	class FString                                 YearIn;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 MonthIn;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 DayIn;                                             // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 HourIn;                                            // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 YearOut;                                           // 0x0048(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 MonthOut;                                          // 0x0058(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 DayOut;                                            // 0x0068(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 HourOut;                                           // 0x0078(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	struct FDateTime                              ByDateTime;                                        // 0x0088(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue1;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue2;            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue3;            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x00C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Subtract_DateTimeTimespan_ReturnValue;    // 0x00D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year1;                      // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month1;                     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day1;                       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour1;                      // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute1;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second1;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond1;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00F8(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue1;              // 0x0110(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue1;           // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue2;              // 0x0148(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue3;              // 0x0160(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue2;           // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue3;           // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours) == 0x000008, "Wrong alignment on BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours");
static_assert(sizeof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours) == 0x000198, "Wrong size on BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, YearIn) == 0x000000, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::YearIn' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, MonthIn) == 0x000010, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::MonthIn' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, DayIn) == 0x000020, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::DayIn' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, HourIn) == 0x000030, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::HourIn' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, __WorldContext) == 0x000040, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, YearOut) == 0x000048, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::YearOut' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, MonthOut) == 0x000058, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::MonthOut' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, DayOut) == 0x000068, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::DayOut' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, HourOut) == 0x000078, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::HourOut' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, ByDateTime) == 0x000088, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::ByDateTime' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_Conv_StringToInt_ReturnValue) == 0x000090, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_BreakDateTime_Year) == 0x000094, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_BreakDateTime_Month) == 0x000098, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_BreakDateTime_Day) == 0x00009C, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_BreakDateTime_Hour) == 0x0000A0, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_BreakDateTime_Minute) == 0x0000A4, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_BreakDateTime_Second) == 0x0000A8, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_BreakDateTime_Millisecond) == 0x0000AC, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_Conv_StringToInt_ReturnValue1) == 0x0000B0, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_Conv_StringToInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_Conv_StringToInt_ReturnValue2) == 0x0000B8, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_Conv_StringToInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_Conv_StringToInt_ReturnValue3) == 0x0000BC, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_Conv_StringToInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_MakeTimespan_ReturnValue) == 0x0000C0, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_MakeDateTime_ReturnValue) == 0x0000C8, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_Subtract_DateTimeTimespan_ReturnValue) == 0x0000D0, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_Subtract_DateTimeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_BreakDateTime_Year1) == 0x0000D8, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_BreakDateTime_Year1' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_BreakDateTime_Month1) == 0x0000DC, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_BreakDateTime_Month1' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_BreakDateTime_Day1) == 0x0000E0, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_BreakDateTime_Day1' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_BreakDateTime_Hour1) == 0x0000E4, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_BreakDateTime_Hour1' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_BreakDateTime_Minute1) == 0x0000E8, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_BreakDateTime_Minute1' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_BreakDateTime_Second1) == 0x0000EC, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_BreakDateTime_Second1' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_BreakDateTime_Millisecond1) == 0x0000F0, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_BreakDateTime_Millisecond1' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_Add_IntInt_ReturnValue) == 0x0000F4, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_Conv_IntToText_ReturnValue) == 0x0000F8, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_Conv_IntToText_ReturnValue1) == 0x000110, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_Conv_IntToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_Conv_TextToString_ReturnValue) == 0x000128, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_Conv_TextToString_ReturnValue1) == 0x000138, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_Conv_TextToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_Conv_IntToText_ReturnValue2) == 0x000148, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_Conv_IntToText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_Conv_IntToText_ReturnValue3) == 0x000160, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_Conv_IntToText_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_Conv_TextToString_ReturnValue2) == 0x000178, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_Conv_TextToString_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours, CallFunc_Conv_TextToString_ReturnValue3) == 0x000188, "Member 'BPF_UIStringUtil_C_GetAJBConvertedDateTimeBy27Hours::CallFunc_Conv_TextToString_ReturnValue3' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBinGameDeathCamera

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBinGameDeathCamera.BP_AJBinGameDeathCamera_C
// 0x0070 (0x03F8 - 0x0388)
class ABP_AJBinGameDeathCamera_C final : public APawn
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(Transient, DuplicateTransient)
	class USpringArmComponent*                    SpringArm;                                         // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Camera;                                            // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CameraTargetRef;                                   // 0x03A8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               DeadCharacterBPRef;                                // 0x03B0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CurrentSpringArmWorldRotation;                     // 0x03B8(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               CurrentCameraWorldRotation;                        // 0x03C4(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AAJBInGameCharacterBase*                OwningCharacter;                                   // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InterpSpeed_WatchingDeadBody;                      // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWatchingTargetCameraIsActive;                     // 0x03DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DD[0x3];                                      // 0x03DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ElapsedTimeSec;                                    // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SwitchingDeathCameraTimeSec;                       // 0x03E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSkipWatchingDeadBody;                             // 0x03E8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBCharacterInfoUIFollowerComponent_C* CharacterInfoUIFollower;                           // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBinGameDeathCamera(int32 EntryPoint);
	void ROC_StickedMarker_PairWatcher(const struct FVector2D& NormalizedPosition, const struct FGameplayTag& SignalTypeTag);
	void ROC_StickedMarker_Watcher(const struct FVector2D& NormalizedPosition, const struct FGameplayTag& SignalTypeTag);
	void ROC_SpawnSignalPin_PairWatcher(const struct FVector& Location, const struct FGameplayTag& PinTypeTag, bool bIsRemove, bool bWithSound);
	void ROC_SpawnSignalPin_Watcher(const struct FVector& Location, const struct FGameplayTag& PinTypeTag, bool bIsRemove, bool bWithSound);
	void ROC_StopDeathCamera();
	void StopDeathCamera();
	void Init_Internal(class AActor* CameraTargetRef_0, class ABP_AJBInGameCharacter_C* DeadCharacterBPRef_0);
	void Init_Server_(class AActor* CameraTargetRef_0, class ABP_AJBInGameCharacter_C* DeadCharacterBPRef_0);
	void ROC_Init();
	void ROC_PreparePossessed(class AAJBInGameCharacterBase* LastOwningCharacter);
	void OnPawnClientRestarted_();
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();
	void OnTick_WatchTarget();
	void OnTick_WatchDeadBody();
	void OnRep_CameraTargetRef();
	void ChangeTargetCustomDepthStencil();
	void OnRep_DeadCharacterBPRef();
	void ShowDeathCameraHUD();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBinGameDeathCamera_C">();
	}
	static class ABP_AJBinGameDeathCamera_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBinGameDeathCamera_C>();
	}
};
static_assert(alignof(ABP_AJBinGameDeathCamera_C) == 0x000008, "Wrong alignment on ABP_AJBinGameDeathCamera_C");
static_assert(sizeof(ABP_AJBinGameDeathCamera_C) == 0x0003F8, "Wrong size on ABP_AJBinGameDeathCamera_C");
static_assert(offsetof(ABP_AJBinGameDeathCamera_C, UberGraphFrame) == 0x000388, "Member 'ABP_AJBinGameDeathCamera_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AJBinGameDeathCamera_C, SpringArm) == 0x000390, "Member 'ABP_AJBinGameDeathCamera_C::SpringArm' has a wrong offset!");
static_assert(offsetof(ABP_AJBinGameDeathCamera_C, Scene) == 0x000398, "Member 'ABP_AJBinGameDeathCamera_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_AJBinGameDeathCamera_C, Camera) == 0x0003A0, "Member 'ABP_AJBinGameDeathCamera_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_AJBinGameDeathCamera_C, CameraTargetRef) == 0x0003A8, "Member 'ABP_AJBinGameDeathCamera_C::CameraTargetRef' has a wrong offset!");
static_assert(offsetof(ABP_AJBinGameDeathCamera_C, DeadCharacterBPRef) == 0x0003B0, "Member 'ABP_AJBinGameDeathCamera_C::DeadCharacterBPRef' has a wrong offset!");
static_assert(offsetof(ABP_AJBinGameDeathCamera_C, CurrentSpringArmWorldRotation) == 0x0003B8, "Member 'ABP_AJBinGameDeathCamera_C::CurrentSpringArmWorldRotation' has a wrong offset!");
static_assert(offsetof(ABP_AJBinGameDeathCamera_C, CurrentCameraWorldRotation) == 0x0003C4, "Member 'ABP_AJBinGameDeathCamera_C::CurrentCameraWorldRotation' has a wrong offset!");
static_assert(offsetof(ABP_AJBinGameDeathCamera_C, OwningCharacter) == 0x0003D0, "Member 'ABP_AJBinGameDeathCamera_C::OwningCharacter' has a wrong offset!");
static_assert(offsetof(ABP_AJBinGameDeathCamera_C, InterpSpeed_WatchingDeadBody) == 0x0003D8, "Member 'ABP_AJBinGameDeathCamera_C::InterpSpeed_WatchingDeadBody' has a wrong offset!");
static_assert(offsetof(ABP_AJBinGameDeathCamera_C, bWatchingTargetCameraIsActive) == 0x0003DC, "Member 'ABP_AJBinGameDeathCamera_C::bWatchingTargetCameraIsActive' has a wrong offset!");
static_assert(offsetof(ABP_AJBinGameDeathCamera_C, ElapsedTimeSec) == 0x0003E0, "Member 'ABP_AJBinGameDeathCamera_C::ElapsedTimeSec' has a wrong offset!");
static_assert(offsetof(ABP_AJBinGameDeathCamera_C, SwitchingDeathCameraTimeSec) == 0x0003E4, "Member 'ABP_AJBinGameDeathCamera_C::SwitchingDeathCameraTimeSec' has a wrong offset!");
static_assert(offsetof(ABP_AJBinGameDeathCamera_C, bSkipWatchingDeadBody) == 0x0003E8, "Member 'ABP_AJBinGameDeathCamera_C::bSkipWatchingDeadBody' has a wrong offset!");
static_assert(offsetof(ABP_AJBinGameDeathCamera_C, CharacterInfoUIFollower) == 0x0003F0, "Member 'ABP_AJBinGameDeathCamera_C::CharacterInfoUIFollower' has a wrong offset!");

}


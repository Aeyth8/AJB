#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBHealingBase

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBHealingBase.BP_AJBHealingBase_C.ExecuteUbergraph_BP_AJBHealingBase
// 0x0188 (0x0188 - 0x0000)
struct BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bSuccess;                             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bForceCancel;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractActor1;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Heal_bSuccess;                            // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Heal_HealValue;                           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character3;     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue2;           // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_CustomEvent_InteractCharacterBP;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetGenerateParticleRelativeLocationFromCapsuleCenter_RelativeLocation; // 0x009C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractActor;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character4;     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue1;         // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue4;                    // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character5;     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character6;     // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue2;    // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable1;                              // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_HealValue;                      // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue5;                    // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character7;     // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue3;    // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToSpeakVoice_bWillBeSpoken;            // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue6;                    // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character8;     // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeakVoice_bWillBeSpoken1;           // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16B[0x5];                                      // 0x016B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1;         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect1; // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase) == 0x000008, "Wrong alignment on BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase");
static_assert(sizeof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase) == 0x000188, "Wrong size on BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, EntryPoint) == 0x000000, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_Event_Operator) == 0x000008, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_Event_Time) == 0x000010, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_Event_Timing) == 0x000014, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_Event_bEnable) == 0x000015, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_Event_bOperatorIsEmpty) == 0x000016, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_Event_bSuccess) == 0x000017, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_Event_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_Event_bForceCancel) == 0x000018, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_Event_bForceCancel' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_Event_InteractActor1) == 0x000020, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_Event_InteractActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000030, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_GetOwner_ReturnValue) == 0x000040, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_GetOwner_ReturnValue1) == 0x000048, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000050, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_DynamicCast_bSuccess1) == 0x000058, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x000060, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_DynamicCast_bSuccess2) == 0x000068, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_IsDedicatedServer_ReturnValue1) == 0x000069, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_Heal_bSuccess) == 0x00006A, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_Heal_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_Heal_HealValue) == 0x00006C, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_Heal_HealValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_GetOwner_ReturnValue2) == 0x000070, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character3) == 0x000078, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character3' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_DynamicCast_bSuccess3) == 0x000080, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_IsValid_ReturnValue1) == 0x000081, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_IsDedicatedServer_ReturnValue2) == 0x000082, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_IsDedicatedServer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_CustomEvent_InteractCharacterBP) == 0x000088, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_CustomEvent_InteractCharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000090, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_HasLocalSharedController_ReturnValue) == 0x000098, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_GetGenerateParticleRelativeLocationFromCapsuleCenter_RelativeLocation) == 0x00009C, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_GetGenerateParticleRelativeLocationFromCapsuleCenter_RelativeLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect) == 0x0000A8, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_GetOwner_ReturnValue3) == 0x0000B0, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_Event_InteractActor) == 0x0000B8, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_Event_InteractActor' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character4) == 0x0000C0, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character4' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_DynamicCast_bSuccess4) == 0x0000C8, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_K2_GetRootComponent_ReturnValue1) == 0x0000D0, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_K2_GetRootComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_HasLocalSharedController_ReturnValue1) == 0x0000D8, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000DC, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_BooleanOR_ReturnValue) == 0x0000E8, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_IsServer_ReturnValue) == 0x0000E9, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, Temp_float_Variable) == 0x0000EC, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_GetOwner_ReturnValue4) == 0x0000F0, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_GetOwner_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character5) == 0x0000F8, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character5' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_DynamicCast_bSuccess5) == 0x000100, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character6) == 0x000108, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character6' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_DynamicCast_bSuccess6) == 0x000110, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_HasLocalSharedController_ReturnValue2) == 0x000111, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_HasLocalSharedController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000118, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_DynamicCast_bSuccess7) == 0x000120, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, Temp_float_Variable1) == 0x000124, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_CustomEvent_HealValue) == 0x000128, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_CustomEvent_HealValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_GetOwner_ReturnValue5) == 0x000130, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_GetOwner_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character7) == 0x000138, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character7' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_DynamicCast_bSuccess8) == 0x000140, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_HasLocalSharedController_ReturnValue3) == 0x000141, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_HasLocalSharedController_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_IsValid_ReturnValue2) == 0x000142, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_BooleanOR_ReturnValue1) == 0x000143, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000148, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_TryToSpeakVoice_bWillBeSpoken) == 0x000150, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_TryToSpeakVoice_bWillBeSpoken' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_GetOwner_ReturnValue6) == 0x000158, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_GetOwner_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character8) == 0x000160, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character8' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_DynamicCast_bSuccess9) == 0x000168, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_TryToSpeakVoice_bWillBeSpoken1) == 0x000169, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_TryToSpeakVoice_bWillBeSpoken1' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, Temp_bool_Variable) == 0x00016A, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1) == 0x000170, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_DynamicCast_bSuccess10) == 0x000178, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, K2Node_Select_Default) == 0x00017C, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase, CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect1) == 0x000180, "Member 'BP_AJBHealingBase_C_ExecuteUbergraph_BP_AJBHealingBase::CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect1' has a wrong offset!");

// Function BP_AJBHealingBase.BP_AJBHealingBase_C.ROC_NotifyHealValue
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBHealingBase_C_ROC_NotifyHealValue final
{
public:
	int32                                         HealValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBHealingBase_C_ROC_NotifyHealValue) == 0x000004, "Wrong alignment on BP_AJBHealingBase_C_ROC_NotifyHealValue");
static_assert(sizeof(BP_AJBHealingBase_C_ROC_NotifyHealValue) == 0x000004, "Wrong size on BP_AJBHealingBase_C_ROC_NotifyHealValue");
static_assert(offsetof(BP_AJBHealingBase_C_ROC_NotifyHealValue, HealValue) == 0x000000, "Member 'BP_AJBHealingBase_C_ROC_NotifyHealValue::HealValue' has a wrong offset!");

// Function BP_AJBHealingBase.BP_AJBHealingBase_C.OnLongPressInteractBegan
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBHealingBase_C_OnLongPressInteractBegan final
{
public:
	class AActor*                                 InteractActor_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBHealingBase_C_OnLongPressInteractBegan) == 0x000008, "Wrong alignment on BP_AJBHealingBase_C_OnLongPressInteractBegan");
static_assert(sizeof(BP_AJBHealingBase_C_OnLongPressInteractBegan) == 0x000008, "Wrong size on BP_AJBHealingBase_C_OnLongPressInteractBegan");
static_assert(offsetof(BP_AJBHealingBase_C_OnLongPressInteractBegan, InteractActor_0) == 0x000000, "Member 'BP_AJBHealingBase_C_OnLongPressInteractBegan::InteractActor_0' has a wrong offset!");

// Function BP_AJBHealingBase.BP_AJBHealingBase_C.MC_OnLongPressInteractEnded
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBHealingBase_C_MC_OnLongPressInteractEnded final
{
public:
	class ABP_AJBInGameCharacter_C*               InteractCharacterBP;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBHealingBase_C_MC_OnLongPressInteractEnded) == 0x000008, "Wrong alignment on BP_AJBHealingBase_C_MC_OnLongPressInteractEnded");
static_assert(sizeof(BP_AJBHealingBase_C_MC_OnLongPressInteractEnded) == 0x000008, "Wrong size on BP_AJBHealingBase_C_MC_OnLongPressInteractEnded");
static_assert(offsetof(BP_AJBHealingBase_C_MC_OnLongPressInteractEnded, InteractCharacterBP) == 0x000000, "Member 'BP_AJBHealingBase_C_MC_OnLongPressInteractEnded::InteractCharacterBP' has a wrong offset!");

// Function BP_AJBHealingBase.BP_AJBHealingBase_C.OnLongPressInteractEnded
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBHealingBase_C_OnLongPressInteractEnded final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bForceCancel;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 InteractActor_0;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBHealingBase_C_OnLongPressInteractEnded) == 0x000008, "Wrong alignment on BP_AJBHealingBase_C_OnLongPressInteractEnded");
static_assert(sizeof(BP_AJBHealingBase_C_OnLongPressInteractEnded) == 0x000010, "Wrong size on BP_AJBHealingBase_C_OnLongPressInteractEnded");
static_assert(offsetof(BP_AJBHealingBase_C_OnLongPressInteractEnded, bSuccess) == 0x000000, "Member 'BP_AJBHealingBase_C_OnLongPressInteractEnded::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_OnLongPressInteractEnded, bForceCancel) == 0x000001, "Member 'BP_AJBHealingBase_C_OnLongPressInteractEnded::bForceCancel' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_OnLongPressInteractEnded, InteractActor_0) == 0x000008, "Member 'BP_AJBHealingBase_C_OnLongPressInteractEnded::InteractActor_0' has a wrong offset!");

// Function BP_AJBHealingBase.BP_AJBHealingBase_C.CheckInteractableTarget
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBHealingBase_C_CheckInteractableTarget final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPossibleInteract;                                 // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue;     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFullHP_bFullHP;                         // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBHealingBase_C_CheckInteractableTarget) == 0x000008, "Wrong alignment on BP_AJBHealingBase_C_CheckInteractableTarget");
static_assert(sizeof(BP_AJBHealingBase_C_CheckInteractableTarget) == 0x000020, "Wrong size on BP_AJBHealingBase_C_CheckInteractableTarget");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractableTarget, TargetActor) == 0x000000, "Member 'BP_AJBHealingBase_C_CheckInteractableTarget::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractableTarget, bPossibleInteract) == 0x000008, "Member 'BP_AJBHealingBase_C_CheckInteractableTarget::bPossibleInteract' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractableTarget, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBHealingBase_C_CheckInteractableTarget::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractableTarget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBHealingBase_C_CheckInteractableTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractableTarget, CallFunc_CharacterBehaviorMatches_ReturnValue) == 0x000019, "Member 'BP_AJBHealingBase_C_CheckInteractableTarget::CallFunc_CharacterBehaviorMatches_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractableTarget, CallFunc_IsFullHP_bFullHP) == 0x00001A, "Member 'BP_AJBHealingBase_C_CheckInteractableTarget::CallFunc_IsFullHP_bFullHP' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractableTarget, CallFunc_Not_PreBool_ReturnValue) == 0x00001B, "Member 'BP_AJBHealingBase_C_CheckInteractableTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractableTarget, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'BP_AJBHealingBase_C_CheckInteractableTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBHealingBase.BP_AJBHealingBase_C.GetPriority
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBHealingBase_C_GetPriority final
{
public:
	int32                                         Priority;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBHealingBase_C_GetPriority) == 0x000004, "Wrong alignment on BP_AJBHealingBase_C_GetPriority");
static_assert(sizeof(BP_AJBHealingBase_C_GetPriority) == 0x000004, "Wrong size on BP_AJBHealingBase_C_GetPriority");
static_assert(offsetof(BP_AJBHealingBase_C_GetPriority, Priority) == 0x000000, "Member 'BP_AJBHealingBase_C_GetPriority::Priority' has a wrong offset!");

// Function BP_AJBHealingBase.BP_AJBHealingBase_C.GetText
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBHealingBase_C_GetText final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0008(0x0018)(Parm, OutParm)
};
static_assert(alignof(BP_AJBHealingBase_C_GetText) == 0x000008, "Wrong alignment on BP_AJBHealingBase_C_GetText");
static_assert(sizeof(BP_AJBHealingBase_C_GetText) == 0x000020, "Wrong size on BP_AJBHealingBase_C_GetText");
static_assert(offsetof(BP_AJBHealingBase_C_GetText, bSuccess) == 0x000000, "Member 'BP_AJBHealingBase_C_GetText::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_GetText, Text) == 0x000008, "Member 'BP_AJBHealingBase_C_GetText::Text' has a wrong offset!");

// Function BP_AJBHealingBase.BP_AJBHealingBase_C.CheckInteractable
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBHealingBase_C_CheckInteractable final
{
public:
	class ABP_AJBInGameCharacter_C*               OperatorCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseTraceLength;                                   // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInteractable;                                     // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTempInteractableParent;                           // 0x0015(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTempInteractableBoth;                             // 0x0016(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTempInteractableTarget;                           // 0x0017(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTempInteractableOperator;                         // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckInteractable_bInteractable;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPair_bPairCharacter;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckInteractableTarget_bPossibleInteract; // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPossibleInteract_bPossibleInteract;  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSeal_bSeal;                          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBHealingBase_C_CheckInteractable) == 0x000008, "Wrong alignment on BP_AJBHealingBase_C_CheckInteractable");
static_assert(sizeof(BP_AJBHealingBase_C_CheckInteractable) == 0x000038, "Wrong size on BP_AJBHealingBase_C_CheckInteractable");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, OperatorCharacter) == 0x000000, "Member 'BP_AJBHealingBase_C_CheckInteractable::OperatorCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, TargetActor) == 0x000008, "Member 'BP_AJBHealingBase_C_CheckInteractable::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, BaseTraceLength) == 0x000010, "Member 'BP_AJBHealingBase_C_CheckInteractable::BaseTraceLength' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, bInteractable) == 0x000014, "Member 'BP_AJBHealingBase_C_CheckInteractable::bInteractable' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, bTempInteractableParent) == 0x000015, "Member 'BP_AJBHealingBase_C_CheckInteractable::bTempInteractableParent' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, bTempInteractableBoth) == 0x000016, "Member 'BP_AJBHealingBase_C_CheckInteractable::bTempInteractableBoth' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, bTempInteractableTarget) == 0x000017, "Member 'BP_AJBHealingBase_C_CheckInteractable::bTempInteractableTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, bTempInteractableOperator) == 0x000018, "Member 'BP_AJBHealingBase_C_CheckInteractable::bTempInteractableOperator' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, CallFunc_CheckInteractable_bInteractable) == 0x000019, "Member 'BP_AJBHealingBase_C_CheckInteractable::CallFunc_CheckInteractable_bInteractable' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, CallFunc_IsPair_bPairCharacter) == 0x00001A, "Member 'BP_AJBHealingBase_C_CheckInteractable::CallFunc_IsPair_bPairCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, CallFunc_CheckInteractableTarget_bPossibleInteract) == 0x00001B, "Member 'BP_AJBHealingBase_C_CheckInteractable::CallFunc_CheckInteractableTarget_bPossibleInteract' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, CallFunc_CheckPossibleInteract_bPossibleInteract) == 0x00001C, "Member 'BP_AJBHealingBase_C_CheckInteractable::CallFunc_CheckPossibleInteract_bPossibleInteract' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'BP_AJBHealingBase_C_CheckInteractable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, CallFunc_BooleanAND_ReturnValue1) == 0x00001E, "Member 'BP_AJBHealingBase_C_CheckInteractable::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, CallFunc_BooleanOR_ReturnValue) == 0x00001F, "Member 'BP_AJBHealingBase_C_CheckInteractable::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, CallFunc_BooleanAND_ReturnValue2) == 0x000020, "Member 'BP_AJBHealingBase_C_CheckInteractable::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, CallFunc_CheckSeal_bSeal) == 0x000021, "Member 'BP_AJBHealingBase_C_CheckInteractable::CallFunc_CheckSeal_bSeal' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'BP_AJBHealingBase_C_CheckInteractable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_AJBHealingBase_C_CheckInteractable::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_AJBHealingBase_C_CheckInteractable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000031, "Member 'BP_AJBHealingBase_C_CheckInteractable::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, CallFunc_BooleanAND_ReturnValue3) == 0x000032, "Member 'BP_AJBHealingBase_C_CheckInteractable::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_CheckInteractable, CallFunc_BooleanAND_ReturnValue4) == 0x000033, "Member 'BP_AJBHealingBase_C_CheckInteractable::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");

// Function BP_AJBHealingBase.BP_AJBHealingBase_C.BeginInteract
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBHealingBase_C_BeginInteract final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBHealingBase_C_BeginInteract) == 0x000008, "Wrong alignment on BP_AJBHealingBase_C_BeginInteract");
static_assert(sizeof(BP_AJBHealingBase_C_BeginInteract) == 0x000020, "Wrong size on BP_AJBHealingBase_C_BeginInteract");
static_assert(offsetof(BP_AJBHealingBase_C_BeginInteract, bSuccess) == 0x000000, "Member 'BP_AJBHealingBase_C_BeginInteract::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_BeginInteract, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBHealingBase_C_BeginInteract::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_BeginInteract, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBHealingBase_C_BeginInteract::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_BeginInteract, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBHealingBase_C_BeginInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AJBHealingBase.BP_AJBHealingBase_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBHealingBase_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBHealingBase_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBHealingBase_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBHealingBase_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBHealingBase_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBHealingBase_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBHealingBase_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBHealingBase_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBHealingBase_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBHealingBase_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBHealingBase_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBHealingBase_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameCharacter_DDW

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ExecuteUbergraph_BP_AJBInGameCharacter_DDW
// 0x03D0 (0x03D0 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bEnable;                        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0030(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB[0x1];                                       // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x00BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation;                       // 0x00C8(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_D4[0xC];                                       // 0x00D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0110(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess;              // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19A[0x6];                                      // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD;           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable1;                             // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty1;                    // 0x01BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BF[0x1];                                      // 0x01BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_SerialNumber;                         // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPossiblePlacement;                   // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x01C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x01C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue;            // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInputCameraOnly_bReturnValue;  // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x01CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCurrentMeshOffset_Offset;              // 0x01D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCurrentRotate_Rotation;                // 0x01DC(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCurrentMeshOffset_Offset1;             // 0x01EC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCurrentRotate_Rotation1;               // 0x01F8(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue1;           // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_206[0x2];                                      // 0x0206(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue1;               // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue1;             // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue;     // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckState_bMatch;                        // 0x0213(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bEnable;                              // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_NewVisibility;                        // 0x0216(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInput_InputEnable;             // 0x0217(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCurrentRotate_Rotation2;               // 0x0220(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCurrentMeshOffset_Offset2;             // 0x022C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_238[0x8];                                      // 0x0238(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue1;               // 0x0240(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_ANS_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ANS;  // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_ANS_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ANS1; // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSkillState_bMatch;                   // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillActive_ReturnValue;                // 0x02A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default;                             // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPossibleAction_bPossibleAction;      // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue; // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x02AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue1; // 0x02AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue; // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bRestore2;                            // 0x02AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue6;                 // 0x02AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bCollision1;                          // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bGravity1;                            // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bSpringArm1;                          // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bMovement1;                           // 0x02B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bRestore1;                            // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x02B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue7;                 // 0x02B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B7[0x1];                                      // 0x02B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue1;           // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bCollision;                           // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bGravity;                             // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bSpringArm;                           // 0x02EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bMovement;                            // 0x02EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bRestore;                             // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue8;                 // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue2;           // 0x0318(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue3;           // 0x0328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0338(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x0348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0358(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue5;               // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect; // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x037A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37B[0x5];                                      // 0x037B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue1;         // 0x0380(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect1; // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue8;                     // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x03A0(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x03B0(0x0008)(NoDestructor)
	class FName                                   Temp_name_Variable1;                               // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select1_Default;                            // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW) == 0x000010, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW) == 0x0003D0, "Wrong size on BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, EntryPoint) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, Temp_bool_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_CustomEvent_bEnable) == 0x000005, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_CustomEvent_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000030, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000B8, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_IsValid_ReturnValue1) == 0x0000B9, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_BooleanAND_ReturnValue) == 0x0000BA, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_CustomEvent_Location) == 0x0000BC, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_CustomEvent_Rotation) == 0x0000C8, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000110, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000198, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_GetAJBInGameHUD_BP_bSuccess) == 0x000199, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_GetAJBInGameHUD_BP_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD) == 0x0001A0, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Event_DeltaSeconds) == 0x0001A8, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Event_Operator) == 0x0001B0, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Event_Time) == 0x0001B8, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Event_Timing) == 0x0001BC, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Event_bEnable1) == 0x0001BD, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Event_bEnable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Event_bOperatorIsEmpty1) == 0x0001BE, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Event_bOperatorIsEmpty1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Event_SerialNumber) == 0x0001C0, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Event_SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Event_bPossiblePlacement) == 0x0001C4, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Event_bPossiblePlacement' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_MakeLiteralByte_ReturnValue) == 0x0001C5, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_IsDedicatedServer_ReturnValue) == 0x0001C6, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_IsDedicatedServer_ReturnValue1) == 0x0001C7, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_CheckActiveBehavior_bRetValue) == 0x0001C8, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_CheckActiveBehavior_bRetValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_Not_PreBool_ReturnValue1) == 0x0001C9, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_CheckEnableInputCameraOnly_bReturnValue) == 0x0001CA, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_CheckEnableInputCameraOnly_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_Not_PreBool_ReturnValue2) == 0x0001CB, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_IsValid_ReturnValue2) == 0x0001CC, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_GetCurrentMeshOffset_Offset) == 0x0001D0, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_GetCurrentMeshOffset_Offset' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_GetCurrentRotate_Rotation) == 0x0001DC, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_GetCurrentRotate_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_IsValid_ReturnValue3) == 0x0001E8, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_GetCurrentMeshOffset_Offset1) == 0x0001EC, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_GetCurrentMeshOffset_Offset1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_GetCurrentRotate_Rotation1) == 0x0001F8, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_GetCurrentRotate_Rotation1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_CheckActiveBehavior_bRetValue1) == 0x000204, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_CheckActiveBehavior_bRetValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_Not_PreBool_ReturnValue3) == 0x000205, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_GetController_ReturnValue1) == 0x000208, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_GetController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_MakeLiteralByte_ReturnValue1) == 0x000210, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_MakeLiteralByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_CheckActiveBehaviorIsEmote_bRetValue) == 0x000211, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_CheckActiveBehaviorIsEmote_bRetValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_Not_PreBool_ReturnValue4) == 0x000212, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_CheckState_bMatch) == 0x000213, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_CheckState_bMatch' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Event_bEnable) == 0x000214, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Event_bOperatorIsEmpty) == 0x000215, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Event_NewVisibility) == 0x000216, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Event_NewVisibility' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_CheckEnableInput_InputEnable) == 0x000217, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_CheckEnableInput_InputEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_IsServer_ReturnValue) == 0x000218, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, Temp_float_Variable) == 0x00021C, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_GetCurrentRotate_Rotation2) == 0x000220, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_GetCurrentRotate_Rotation2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_GetCurrentMeshOffset_Offset2) == 0x00022C, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_GetCurrentMeshOffset_Offset2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_MakeTransform_ReturnValue1) == 0x000240, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_MakeTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_GetOwner_ReturnValue1) == 0x000270, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, Temp_float_Variable1) == 0x000278, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ANS) == 0x000280, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ANS' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_DynamicCast_bSuccess) == 0x000288, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_GetOwner_ReturnValue2) == 0x000290, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ANS1) == 0x000298, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ANS1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_DynamicCast_bSuccess1) == 0x0002A0, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_CheckSkillState_bMatch) == 0x0002A1, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_CheckSkillState_bMatch' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, Temp_bool_Variable1) == 0x0002A2, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_IsSkillActive_ReturnValue) == 0x0002A3, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_IsSkillActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Select_Default) == 0x0002A4, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_CheckPossibleAction_bPossibleAction) == 0x0002A8, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_CheckPossibleAction_bPossibleAction' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_CheckCharacterBehavior_Critical_bReturnValue) == 0x0002A9, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_CheckCharacterBehavior_Critical_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_Not_PreBool_ReturnValue5) == 0x0002AA, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_CheckCharacterBehavior_Critical_bReturnValue1) == 0x0002AB, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_CheckCharacterBehavior_Critical_bReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_CheckCharacterBehavior_Active_bReturnValue) == 0x0002AC, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_CheckCharacterBehavior_Active_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Event_bRestore2) == 0x0002AD, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Event_bRestore2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_BooleanOR_ReturnValue) == 0x0002AE, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_Not_PreBool_ReturnValue6) == 0x0002AF, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_Not_PreBool_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Event_bCollision1) == 0x0002B0, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Event_bCollision1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Event_bGravity1) == 0x0002B1, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Event_bGravity1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Event_bSpringArm1) == 0x0002B2, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Event_bSpringArm1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Event_bMovement1) == 0x0002B3, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Event_bMovement1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Event_bRestore1) == 0x0002B4, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Event_bRestore1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_IsValid_ReturnValue4) == 0x0002B5, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_Not_PreBool_ReturnValue7) == 0x0002B6, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_Not_PreBool_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_Conv_BoolToString_ReturnValue) == 0x0002B8, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_Conv_BoolToString_ReturnValue1) == 0x0002C8, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_Conv_BoolToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_Concat_StrStr_ReturnValue) == 0x0002D8, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Event_bCollision) == 0x0002E8, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Event_bCollision' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Event_bGravity) == 0x0002E9, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Event_bGravity' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Event_bSpringArm) == 0x0002EA, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Event_bSpringArm' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Event_bMovement) == 0x0002EB, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Event_bMovement' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Event_bRestore) == 0x0002EC, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Event_bRestore' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_Concat_StrStr_ReturnValue1) == 0x0002F0, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_Concat_StrStr_ReturnValue2) == 0x000300, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_Not_PreBool_ReturnValue8) == 0x000310, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_Not_PreBool_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_Conv_BoolToString_ReturnValue2) == 0x000318, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_Conv_BoolToString_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_Conv_BoolToString_ReturnValue3) == 0x000328, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_Conv_BoolToString_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_Concat_StrStr_ReturnValue3) == 0x000338, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_Concat_StrStr_ReturnValue4) == 0x000348, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000358, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_Concat_StrStr_ReturnValue5) == 0x000360, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_Concat_StrStr_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect) == 0x000370, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_IsValid_ReturnValue5) == 0x000378, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_IsValid_ReturnValue6) == 0x000379, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_IsValid_ReturnValue7) == 0x00037A, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_K2_GetRootComponent_ReturnValue1) == 0x000380, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_K2_GetRootComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect1) == 0x000388, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_IsValid_ReturnValue8) == 0x000390, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_IsValid_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, Temp_name_Variable) == 0x000398, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_CreateDelegate_OutputDelegate) == 0x0003A0, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0003B0, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, Temp_name_Variable1) == 0x0003B8, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW, K2Node_Select1_Default) == 0x0003C0, "Member 'BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW::K2Node_Select1_Default' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ChangeVisual
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_ChangeVisual final
{
public:
	bool                                          bPossiblePlacement;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_ChangeVisual) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_ChangeVisual");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_ChangeVisual) == 0x000001, "Wrong size on BP_AJBInGameCharacter_DDW_C_ChangeVisual");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ChangeVisual, bPossiblePlacement) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_ChangeVisual::bPossiblePlacement' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.SetSerialNumber
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_SetSerialNumber final
{
public:
	int32                                         SerialNumber;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_SetSerialNumber) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_SetSerialNumber");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_SetSerialNumber) == 0x000004, "Wrong size on BP_AJBInGameCharacter_DDW_C_SetSerialNumber");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_SetSerialNumber, SerialNumber) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_SetSerialNumber::SerialNumber' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ROS_AdjustmentLocation
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_ROS_AdjustmentLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_ROS_AdjustmentLocation) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_ROS_AdjustmentLocation");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_ROS_AdjustmentLocation) == 0x000018, "Wrong size on BP_AJBInGameCharacter_DDW_C_ROS_AdjustmentLocation");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ROS_AdjustmentLocation, Location) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_ROS_AdjustmentLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ROS_AdjustmentLocation, Rotation) == 0x00000C, "Member 'BP_AJBInGameCharacter_DDW_C_ROS_AdjustmentLocation::Rotation' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ChangeEnable
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_ChangeEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_ChangeEnable) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_ChangeEnable");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_ChangeEnable) == 0x000001, "Wrong size on BP_AJBInGameCharacter_DDW_C_ChangeEnable");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ChangeEnable, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_ChangeEnable::bEnable' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.SetVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_SetVisibility final
{
public:
	bool                                          NewVisibility;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_SetVisibility) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_SetVisibility");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_SetVisibility) == 0x000001, "Wrong size on BP_AJBInGameCharacter_DDW_C_SetVisibility");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_SetVisibility, NewVisibility) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_SetVisibility::NewVisibility' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.GetCurrentNormal
// 0x002C (0x002C - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_GetCurrentNormal final
{
public:
	struct FVector                                Normal;                                            // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckWallClimbStateAction_bStateAction;   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_GetCurrentNormal) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_GetCurrentNormal");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_GetCurrentNormal) == 0x00002C, "Wrong size on BP_AJBInGameCharacter_DDW_C_GetCurrentNormal");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentNormal, Normal) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentNormal::Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentNormal, Temp_bool_Variable) == 0x00000C, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentNormal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentNormal, Temp_struct_Variable) == 0x000010, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentNormal::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentNormal, CallFunc_CheckWallClimbStateAction_bStateAction) == 0x00001C, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentNormal::CallFunc_CheckWallClimbStateAction_bStateAction' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentNormal, K2Node_Select_Default) == 0x000020, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentNormal::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.GetCurrentRotate
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_GetCurrentRotate final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable;                              // 0x0010(0x000C)(IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable1;                             // 0x001C(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckWallClimbStateAction_bStateAction;   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Select_Default;                             // 0x002C(0x000C)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_GetCurrentRotate) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_GetCurrentRotate");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_GetCurrentRotate) == 0x000038, "Wrong size on BP_AJBInGameCharacter_DDW_C_GetCurrentRotate");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentRotate, Rotation) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentRotate::Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentRotate, Temp_bool_Variable) == 0x00000C, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentRotate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentRotate, Temp_struct_Variable) == 0x000010, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentRotate::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentRotate, Temp_struct_Variable1) == 0x00001C, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentRotate::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentRotate, CallFunc_CheckWallClimbStateAction_bStateAction) == 0x000028, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentRotate::CallFunc_CheckWallClimbStateAction_bStateAction' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentRotate, K2Node_Select_Default) == 0x00002C, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentRotate::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.GetCurrentMeshOffset
// 0x005C (0x005C - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset final
{
public:
	struct FVector                                Offset;                                            // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckWallClimbStateAction_bStateAction;   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCapsuleRadius_CapsuleRadius;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight;   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0044(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0050(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset) == 0x00005C, "Wrong size on BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset, Offset) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset::Offset' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset, Temp_bool_Variable) == 0x00000C, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset, CallFunc_CheckWallClimbStateAction_bStateAction) == 0x00000D, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset::CallFunc_CheckWallClimbStateAction_bStateAction' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset, CallFunc_GetCapsuleRadius_CapsuleRadius) == 0x000010, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset::CallFunc_GetCapsuleRadius_CapsuleRadius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset, CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight) == 0x000014, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset::CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x00001C, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset, CallFunc_MakeVector_ReturnValue1) == 0x00002C, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000038, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000044, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset, K2Node_Select_Default) == 0x000050, "Member 'BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ShouldSpawnPreviewParticle
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle final
{
public:
	bool                                          bShouldSpawn;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               TempCharacterBP;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTargetActor_ViewTargetActor;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTargetActor_ViewTargetActor1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue1;     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue2;     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle) == 0x000030, "Wrong size on BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle, bShouldSpawn) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle::bShouldSpawn' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle, TempCharacterBP) == 0x000008, "Member 'BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle::TempCharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle, CallFunc_GetViewTargetActor_ViewTargetActor) == 0x000010, "Member 'BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle::CallFunc_GetViewTargetActor_ViewTargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle, CallFunc_GetViewTargetActor_ViewTargetActor1) == 0x000020, "Member 'BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle::CallFunc_GetViewTargetActor_ViewTargetActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle, CallFunc_EqualEqual_ObjectObject_ReturnValue1) == 0x000028, "Member 'BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle::CallFunc_EqualEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle, CallFunc_EqualEqual_ObjectObject_ReturnValue2) == 0x000029, "Member 'BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle::CallFunc_EqualEqual_ObjectObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle, CallFunc_BooleanOR_ReturnValue) == 0x00002A, "Member 'BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.UpdateParameters
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_UpdateParameters final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetWalkableFloorAngle_ReturnValue;     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select1_Default;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue1;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_UpdateParameters) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_UpdateParameters");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_UpdateParameters) == 0x000018, "Wrong size on BP_AJBInGameCharacter_DDW_C_UpdateParameters");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_UpdateParameters, Temp_bool_Variable) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_UpdateParameters::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_UpdateParameters, Temp_bool_Variable1) == 0x000001, "Member 'BP_AJBInGameCharacter_DDW_C_UpdateParameters::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_UpdateParameters, CallFunc_K2_GetWalkableFloorAngle_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_DDW_C_UpdateParameters::CallFunc_K2_GetWalkableFloorAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_UpdateParameters, K2Node_Select_Default) == 0x000008, "Member 'BP_AJBInGameCharacter_DDW_C_UpdateParameters::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_UpdateParameters, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_DDW_C_UpdateParameters::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_UpdateParameters, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'BP_AJBInGameCharacter_DDW_C_UpdateParameters::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_UpdateParameters, K2Node_Select1_Default) == 0x000010, "Member 'BP_AJBInGameCharacter_DDW_C_UpdateParameters::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_UpdateParameters, CallFunc_NearlyEqual_FloatFloat_ReturnValue1) == 0x000014, "Member 'BP_AJBInGameCharacter_DDW_C_UpdateParameters::CallFunc_NearlyEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_UpdateParameters, CallFunc_Not_PreBool_ReturnValue1) == 0x000015, "Member 'BP_AJBInGameCharacter_DDW_C_UpdateParameters::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.CheckWallClimbStateAction
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_CheckWallClimbStateAction final
{
public:
	bool                                          bStateAction;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_CheckWallClimbStateAction) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_CheckWallClimbStateAction");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_CheckWallClimbStateAction) == 0x000003, "Wrong size on BP_AJBInGameCharacter_DDW_C_CheckWallClimbStateAction");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CheckWallClimbStateAction, bStateAction) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_CheckWallClimbStateAction::bStateAction' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CheckWallClimbStateAction, CallFunc_MakeLiteralByte_ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_DDW_C_CheckWallClimbStateAction::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CheckWallClimbStateAction, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_AJBInGameCharacter_DDW_C_CheckWallClimbStateAction::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.CreateDMIFlow
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_CreateDMIFlow final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_CreateDMIFlow) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_CreateDMIFlow");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_CreateDMIFlow) == 0x000028, "Wrong size on BP_AJBInGameCharacter_DDW_C_CreateDMIFlow");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CreateDMIFlow, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_CreateDMIFlow::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CreateDMIFlow, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_DDW_C_CreateDMIFlow::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CreateDMIFlow, CallFunc_GetNumMaterials_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_DDW_C_CreateDMIFlow::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CreateDMIFlow, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_DDW_C_CreateDMIFlow::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CreateDMIFlow, Temp_int_Variable) == 0x000010, "Member 'BP_AJBInGameCharacter_DDW_C_CreateDMIFlow::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CreateDMIFlow, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_AJBInGameCharacter_DDW_C_CreateDMIFlow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CreateDMIFlow, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_DDW_C_CreateDMIFlow::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CreateDMIFlow, CallFunc_Array_Add_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_DDW_C_CreateDMIFlow::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CreateDMIFlow, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_AJBInGameCharacter_DDW_C_CreateDMIFlow::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ChangeParticlesTransform
// 0x0150 (0x0150 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_ChangeParticlesTransform final
{
public:
	struct FTransform                             NewTransform;                                      // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorRelativeTransform_SweepHitResult; // 0x0038(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorRelativeTransform_SweepHitResult1; // 0x00C8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_ChangeParticlesTransform) == 0x000010, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_ChangeParticlesTransform");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_ChangeParticlesTransform) == 0x000150, "Wrong size on BP_AJBInGameCharacter_DDW_C_ChangeParticlesTransform");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ChangeParticlesTransform, NewTransform) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_ChangeParticlesTransform::NewTransform' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ChangeParticlesTransform, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_DDW_C_ChangeParticlesTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ChangeParticlesTransform, CallFunc_K2_SetActorRelativeTransform_SweepHitResult) == 0x000038, "Member 'BP_AJBInGameCharacter_DDW_C_ChangeParticlesTransform::CallFunc_K2_SetActorRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ChangeParticlesTransform, CallFunc_IsValid_ReturnValue1) == 0x0000C0, "Member 'BP_AJBInGameCharacter_DDW_C_ChangeParticlesTransform::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ChangeParticlesTransform, CallFunc_K2_SetActorRelativeTransform_SweepHitResult1) == 0x0000C8, "Member 'BP_AJBInGameCharacter_DDW_C_ChangeParticlesTransform::CallFunc_K2_SetActorRelativeTransform_SweepHitResult1' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.UpdateParticlesVisibility
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_UpdateParticlesVisibility final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_ANS_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ANS;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_UpdateParticlesVisibility) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_UpdateParticlesVisibility");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_UpdateParticlesVisibility) == 0x000018, "Wrong size on BP_AJBInGameCharacter_DDW_C_UpdateParticlesVisibility");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_UpdateParticlesVisibility, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_UpdateParticlesVisibility::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_UpdateParticlesVisibility, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ANS) == 0x000008, "Member 'BP_AJBInGameCharacter_DDW_C_UpdateParticlesVisibility::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ANS' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_UpdateParticlesVisibility, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_AJBInGameCharacter_DDW_C_UpdateParticlesVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_UpdateParticlesVisibility, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_AJBInGameCharacter_DDW_C_UpdateParticlesVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_UpdateParticlesVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'BP_AJBInGameCharacter_DDW_C_UpdateParticlesVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_UpdateParticlesVisibility, CallFunc_IsValid_ReturnValue1) == 0x000013, "Member 'BP_AJBInGameCharacter_DDW_C_UpdateParticlesVisibility::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.UpdateParticlesSpawn
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_UpdateParticlesSpawn final
{
public:
	bool                                          CallFunc_ShouldSpawnPreviewParticle_bShouldSpawn;  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_UpdateParticlesSpawn) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_UpdateParticlesSpawn");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_UpdateParticlesSpawn) == 0x000001, "Wrong size on BP_AJBInGameCharacter_DDW_C_UpdateParticlesSpawn");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_UpdateParticlesSpawn, CallFunc_ShouldSpawnPreviewParticle_bShouldSpawn) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_UpdateParticlesSpawn::CallFunc_ShouldSpawnPreviewParticle_bShouldSpawn' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.OnRep_bMeshVisible
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_OnRep_bMeshVisible final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_OnRep_bMeshVisible) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_OnRep_bMeshVisible");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_OnRep_bMeshVisible) == 0x000001, "Wrong size on BP_AJBInGameCharacter_DDW_C_OnRep_bMeshVisible");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_OnRep_bMeshVisible, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_OnRep_bMeshVisible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.GetPropertyOwnerCharacterBP
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_GetPropertyOwnerCharacterBP final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_ANS_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ANS;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_GetPropertyOwnerCharacterBP) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_GetPropertyOwnerCharacterBP");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_GetPropertyOwnerCharacterBP) == 0x000020, "Wrong size on BP_AJBInGameCharacter_DDW_C_GetPropertyOwnerCharacterBP");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetPropertyOwnerCharacterBP, CharacterBP) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_GetPropertyOwnerCharacterBP::CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetPropertyOwnerCharacterBP, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_DDW_C_GetPropertyOwnerCharacterBP::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetPropertyOwnerCharacterBP, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ANS) == 0x000010, "Member 'BP_AJBInGameCharacter_DDW_C_GetPropertyOwnerCharacterBP::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ANS' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetPropertyOwnerCharacterBP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameCharacter_DDW_C_GetPropertyOwnerCharacterBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.GetPropertyType
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_GetPropertyType final
{
public:
	EAJBCharacterPropertyType                     PropertyType;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_GetPropertyType) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_GetPropertyType");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_GetPropertyType) == 0x000001, "Wrong size on BP_AJBInGameCharacter_DDW_C_GetPropertyType");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_GetPropertyType, PropertyType) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_GetPropertyType::PropertyType' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_ReceiveTick");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBInGameCharacter_DDW_C_ReceiveTick");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ChangeMovementModeOnTimeStop
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_ChangeMovementModeOnTimeStop final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_ChangeMovementModeOnTimeStop) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_ChangeMovementModeOnTimeStop");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_ChangeMovementModeOnTimeStop) == 0x000002, "Wrong size on BP_AJBInGameCharacter_DDW_C_ChangeMovementModeOnTimeStop");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ChangeMovementModeOnTimeStop, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_ChangeMovementModeOnTimeStop::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ChangeMovementModeOnTimeStop, bOperatorIsEmpty) == 0x000001, "Member 'BP_AJBInGameCharacter_DDW_C_ChangeMovementModeOnTimeStop::bOperatorIsEmpty' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBInGameCharacter_DDW_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBInGameCharacter_DDW_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBInGameCharacter_DDW_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBInGameCharacter_DDW_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBInGameCharacter_DDW_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ChangeSystemDisable
// 0x0005 (0x0005 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_ChangeSystemDisable final
{
public:
	bool                                          bCollision;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bGravity;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSpringArm;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bMovement;                                         // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRestore;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_ChangeSystemDisable) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_ChangeSystemDisable");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_ChangeSystemDisable) == 0x000005, "Wrong size on BP_AJBInGameCharacter_DDW_C_ChangeSystemDisable");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ChangeSystemDisable, bCollision) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_ChangeSystemDisable::bCollision' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ChangeSystemDisable, bGravity) == 0x000001, "Member 'BP_AJBInGameCharacter_DDW_C_ChangeSystemDisable::bGravity' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ChangeSystemDisable, bSpringArm) == 0x000002, "Member 'BP_AJBInGameCharacter_DDW_C_ChangeSystemDisable::bSpringArm' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ChangeSystemDisable, bMovement) == 0x000003, "Member 'BP_AJBInGameCharacter_DDW_C_ChangeSystemDisable::bMovement' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ChangeSystemDisable, bRestore) == 0x000004, "Member 'BP_AJBInGameCharacter_DDW_C_ChangeSystemDisable::bRestore' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ChangeSystemEnable
// 0x0005 (0x0005 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_ChangeSystemEnable final
{
public:
	bool                                          bCollision;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bGravity;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSpringArm;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bMovement;                                         // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRestore;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_ChangeSystemEnable) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_ChangeSystemEnable");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_ChangeSystemEnable) == 0x000005, "Wrong size on BP_AJBInGameCharacter_DDW_C_ChangeSystemEnable");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ChangeSystemEnable, bCollision) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_ChangeSystemEnable::bCollision' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ChangeSystemEnable, bGravity) == 0x000001, "Member 'BP_AJBInGameCharacter_DDW_C_ChangeSystemEnable::bGravity' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ChangeSystemEnable, bSpringArm) == 0x000002, "Member 'BP_AJBInGameCharacter_DDW_C_ChangeSystemEnable::bSpringArm' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ChangeSystemEnable, bMovement) == 0x000003, "Member 'BP_AJBInGameCharacter_DDW_C_ChangeSystemEnable::bMovement' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ChangeSystemEnable, bRestore) == 0x000004, "Member 'BP_AJBInGameCharacter_DDW_C_ChangeSystemEnable::bRestore' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ResetSystemEnable
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_ResetSystemEnable final
{
public:
	bool                                          bRestore;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_ResetSystemEnable) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_ResetSystemEnable");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_ResetSystemEnable) == 0x000001, "Wrong size on BP_AJBInGameCharacter_DDW_C_ResetSystemEnable");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_ResetSystemEnable, bRestore) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_ResetSystemEnable::bRestore' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.CheckAnyCharacterMovementSkillActive
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_CheckAnyCharacterMovementSkillActive final
{
public:
	bool                                          bWithCharacterMovement;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_CheckAnyCharacterMovementSkillActive) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_CheckAnyCharacterMovementSkillActive");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_CheckAnyCharacterMovementSkillActive) == 0x000001, "Wrong size on BP_AJBInGameCharacter_DDW_C_CheckAnyCharacterMovementSkillActive");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CheckAnyCharacterMovementSkillActive, bWithCharacterMovement) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_CheckAnyCharacterMovementSkillActive::bWithCharacterMovement' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.CheckPossibleDash
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_CheckPossibleDash final
{
public:
	bool                                          bPossible;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_CheckPossibleDash) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_CheckPossibleDash");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_CheckPossibleDash) == 0x000001, "Wrong size on BP_AJBInGameCharacter_DDW_C_CheckPossibleDash");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CheckPossibleDash, bPossible) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_CheckPossibleDash::bPossible' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.CheckDisableDamage
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_CheckDisableDamage final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableDamage_0;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDisableDamage_bDisableDamage;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPair_bPairCharacter;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_CheckDisableDamage) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_CheckDisableDamage");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_CheckDisableDamage) == 0x000030, "Wrong size on BP_AJBInGameCharacter_DDW_C_CheckDisableDamage");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CheckDisableDamage, DamageCauser) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_CheckDisableDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CheckDisableDamage, bDisableDamage_0) == 0x000008, "Member 'BP_AJBInGameCharacter_DDW_C_CheckDisableDamage::bDisableDamage_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CheckDisableDamage, CallFunc_CheckDisableDamage_bDisableDamage) == 0x000009, "Member 'BP_AJBInGameCharacter_DDW_C_CheckDisableDamage::CallFunc_CheckDisableDamage_bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CheckDisableDamage, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_DDW_C_CheckDisableDamage::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CheckDisableDamage, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_DDW_C_CheckDisableDamage::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CheckDisableDamage, CallFunc_GetOwner_ReturnValue1) == 0x000020, "Member 'BP_AJBInGameCharacter_DDW_C_CheckDisableDamage::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CheckDisableDamage, CallFunc_BooleanOR_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_DDW_C_CheckDisableDamage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CheckDisableDamage, CallFunc_IsPair_bPairCharacter) == 0x000029, "Member 'BP_AJBInGameCharacter_DDW_C_CheckDisableDamage::CallFunc_IsPair_bPairCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CheckDisableDamage, CallFunc_BooleanOR_ReturnValue1) == 0x00002A, "Member 'BP_AJBInGameCharacter_DDW_C_CheckDisableDamage::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.CheckTargetSelf
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_CheckTargetSelf final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bForDamageOverlap;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIgnoreMovableStand;                               // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTarget;                                           // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_CheckTargetSelf) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_CheckTargetSelf");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_CheckTargetSelf) == 0x000010, "Wrong size on BP_AJBInGameCharacter_DDW_C_CheckTargetSelf");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CheckTargetSelf, DamageCauser) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_CheckTargetSelf::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CheckTargetSelf, bForDamageOverlap) == 0x000008, "Member 'BP_AJBInGameCharacter_DDW_C_CheckTargetSelf::bForDamageOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CheckTargetSelf, bIgnoreMovableStand) == 0x000009, "Member 'BP_AJBInGameCharacter_DDW_C_CheckTargetSelf::bIgnoreMovableStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CheckTargetSelf, bTarget) == 0x00000A, "Member 'BP_AJBInGameCharacter_DDW_C_CheckTargetSelf::bTarget' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.CheckDisablePassive
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_CheckDisablePassive final
{
public:
	class AActor*                                 PassiveCauser;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PassiveTag;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisablePassive_0;                                 // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_CheckDisablePassive) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_CheckDisablePassive");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_CheckDisablePassive) == 0x000018, "Wrong size on BP_AJBInGameCharacter_DDW_C_CheckDisablePassive");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CheckDisablePassive, PassiveCauser) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_CheckDisablePassive::PassiveCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CheckDisablePassive, PassiveTag) == 0x000008, "Member 'BP_AJBInGameCharacter_DDW_C_CheckDisablePassive::PassiveTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CheckDisablePassive, bDisablePassive_0) == 0x000010, "Member 'BP_AJBInGameCharacter_DDW_C_CheckDisablePassive::bDisablePassive_0' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.CheckDisableAreaDamage
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_CheckDisableAreaDamage final
{
public:
	bool                                          bDisableAreadamage_0;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_CheckDisableAreaDamage) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_CheckDisableAreaDamage");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_CheckDisableAreaDamage) == 0x000001, "Wrong size on BP_AJBInGameCharacter_DDW_C_CheckDisableAreaDamage");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_CheckDisableAreaDamage, bDisableAreadamage_0) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_CheckDisableAreaDamage::bDisableAreadamage_0' has a wrong offset!");

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.InteractableOperator
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_DDW_C_InteractableOperator final
{
public:
	class AActor*                                 InteractActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReturnValue;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_DDW_C_InteractableOperator) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_DDW_C_InteractableOperator");
static_assert(sizeof(BP_AJBInGameCharacter_DDW_C_InteractableOperator) == 0x000020, "Wrong size on BP_AJBInGameCharacter_DDW_C_InteractableOperator");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_InteractableOperator, InteractActor) == 0x000000, "Member 'BP_AJBInGameCharacter_DDW_C_InteractableOperator::InteractActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_InteractableOperator, bReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_DDW_C_InteractableOperator::bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_InteractableOperator, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_DDW_C_InteractableOperator::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_DDW_C_InteractableOperator, CallFunc_ClassIsChildOf_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_DDW_C_InteractableOperator::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");

}


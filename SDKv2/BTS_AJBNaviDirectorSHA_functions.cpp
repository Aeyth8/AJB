#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_AJBNaviDirectorSHA

#include "Basic.hpp"

#include "BTS_AJBNaviDirectorSHA_classes.hpp"
#include "BTS_AJBNaviDirectorSHA_parameters.hpp"


namespace SDK
{

// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.ExecuteUbergraph_BTS_AJBNaviDirectorSHA
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBNaviDirectorSHA_C::ExecuteUbergraph_BTS_AJBNaviDirectorSHA(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "ExecuteUbergraph_BTS_AJBNaviDirectorSHA");

	Params::BTS_AJBNaviDirectorSHA_C_ExecuteUbergraph_BTS_AJBNaviDirectorSHA Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.TryGoToDoorNotInHouse
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBNaviDirectorSHA_C::TryGoToDoorNotInHouse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "TryGoToDoorNotInHouse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.FindDoorsNotInHouseAround
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBNaviDirectorSHA_C::FindDoorsNotInHouseAround()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "FindDoorsNotInHouseAround");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.InitializeFindingDoorNotInHouseAround
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBNaviDirectorSHA_C::InitializeFindingDoorNotInHouseAround()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "InitializeFindingDoorNotInHouseAround");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.ApproachFromIndoorOnPathExists
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBNaviDirectorSHA_C::ApproachFromIndoorOnPathExists()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "ApproachFromIndoorOnPathExists");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.ApproachFromOutdoorOnPathExists
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBNaviDirectorSHA_C::ApproachFromOutdoorOnPathExists()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "ApproachFromOutdoorOnPathExists");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.ApproachToRoofTop
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBAIHouseInfo_C*             HouseInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBNaviDirectorSHA_C::ApproachToRoofTop(class ABP_AJBAIHouseInfo_C* HouseInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "ApproachToRoofTop");

	Params::BTS_AJBNaviDirectorSHA_C_ApproachToRoofTop Parms{};

	Parms.HouseInfo = HouseInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.ApproachToEnemy
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBNaviDirectorSHA_C::ApproachToEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "ApproachToEnemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.GoToGate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           GateActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNavigationPath*                  NavigationPath_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBNaviDirectorSHA_C::GoToGate(class AActor* GateActor, class UNavigationPath* NavigationPath_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "GoToGate");

	Params::BTS_AJBNaviDirectorSHA_C_GoToGate Parms{};

	Parms.GateActor = GateActor;
	Parms.NavigationPath_0 = NavigationPath_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.OnEnemyInteracted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractTargetActor                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBNaviDirectorSHA_C::OnEnemyInteracted(class AActor* InteractTargetActor, class AActor* InteractingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "OnEnemyInteracted");

	Params::BTS_AJBNaviDirectorSHA_C_OnEnemyInteracted Parms{};

	Parms.InteractTargetActor = InteractTargetActor;
	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.InitializeStoppingErrorDetection
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBNaviDirectorSHA_C::InitializeStoppingErrorDetection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "InitializeStoppingErrorDetection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.TickStoppingErrorDetection
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBNaviDirectorSHA_C::TickStoppingErrorDetection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "TickStoppingErrorDetection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.ApproachWithPathToEnemy
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBNaviDirectorSHA_C::ApproachWithPathToEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "ApproachWithPathToEnemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.GoStraightToEnemy
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SequenceFrom                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBTS_AJBNaviDirectorSHA_C::GoStraightToEnemy(const class FString& SequenceFrom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "GoStraightToEnemy");

	Params::BTS_AJBNaviDirectorSHA_C_GoStraightToEnemy Parms{};

	Parms.SequenceFrom = std::move(SequenceFrom);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.GoToClosedDoorInTheHouse
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBAIHouseInfo_C*             HouseInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBNaviDirectorSHA_C::GoToClosedDoorInTheHouse(class ABP_AJBAIHouseInfo_C* HouseInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "GoToClosedDoorInTheHouse");

	Params::BTS_AJBNaviDirectorSHA_C_GoToClosedDoorInTheHouse Parms{};

	Parms.HouseInfo = HouseInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.GoOutside
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBNaviDirectorSHA_C::GoOutside()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "GoOutside");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.GoToTheGateEnemyInFromOutside
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBNaviDirectorSHA_C::GoToTheGateEnemyInFromOutside()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "GoToTheGateEnemyInFromOutside");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.ReceiveActivationAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBNaviDirectorSHA_C::ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "ReceiveActivationAI");

	Params::BTS_AJBNaviDirectorSHA_C_ReceiveActivationAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.ApproachWithPathIndirectly
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBNaviDirectorSHA_C::ApproachWithPathIndirectly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "ApproachWithPathIndirectly");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.UpdateEnemyAndPath
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBNaviDirectorSHA_C::UpdateEnemyAndPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "UpdateEnemyAndPath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.DebugDrawGate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           GateActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBNaviDirectorSHA_C::DebugDrawGate(class AActor* GateActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "DebugDrawGate");

	Params::BTS_AJBNaviDirectorSHA_C_DebugDrawGate Parms{};

	Parms.GateActor = GateActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.DebugDrawHouse
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBAIHouseInfo_C*             HouseInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBNaviDirectorSHA_C::DebugDrawHouse(class ABP_AJBAIHouseInfo_C* HouseInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "DebugDrawHouse");

	Params::BTS_AJBNaviDirectorSHA_C_DebugDrawHouse Parms{};

	Parms.HouseInfo = HouseInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.StartDebugDraw
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBNaviDirectorSHA_C::StartDebugDraw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "StartDebugDraw");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.DebugDraw
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBNaviDirectorSHA_C::DebugDraw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "DebugDraw");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.OnEventTagUnlocked
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBNaviDirectorSHA_C::OnEventTagUnlocked(const struct FGameplayTag& EventTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "OnEventTagUnlocked");

	Params::BTS_AJBNaviDirectorSHA_C_OnEventTagUnlocked Parms{};

	Parms.EventTag = std::move(EventTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.OnEventTagLocked
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBNaviDirectorSHA_C::OnEventTagLocked(const struct FGameplayTag& EventTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "OnEventTagLocked");

	Params::BTS_AJBNaviDirectorSHA_C_OnEventTagLocked Parms{};

	Parms.EventTag = std::move(EventTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.OnBurningActorRemoved
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           BurningActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBNaviDirectorSHA_C::OnBurningActorRemoved(class AActor* BurningActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "OnBurningActorRemoved");

	Params::BTS_AJBNaviDirectorSHA_C_OnBurningActorRemoved Parms{};

	Parms.BurningActor = BurningActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.OnBurningActorAdded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           BurningActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBNaviDirectorSHA_C::OnBurningActorAdded(class AActor* BurningActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "OnBurningActorAdded");

	Params::BTS_AJBNaviDirectorSHA_C_OnBurningActorAdded Parms{};

	Parms.BurningActor = BurningActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.FindMostApproachableEnemy
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameAIImaginaryCharacter_C*Character                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNavigationPath*                  NavigationPath_0                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBNaviDirectorSHA_C::FindMostApproachableEnemy(class ABP_AJBInGameAIImaginaryCharacter_C** Character, class UNavigationPath** NavigationPath_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "FindMostApproachableEnemy");

	Params::BTS_AJBNaviDirectorSHA_C_FindMostApproachableEnemy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Character != nullptr)
		*Character = Parms.Character;

	if (NavigationPath_0 != nullptr)
		*NavigationPath_0 = Parms.NavigationPath_0;
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.FindNearestClosedDoorInHouse
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBAIHouseInfo_C*             HouseInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PathDistanceThresh                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIncludeDoors1FFacingOut                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AAJBInGameGate*                   Door                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNavigationPath*                  PathToDoor                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBNaviDirectorSHA_C::FindNearestClosedDoorInHouse(class ABP_AJBAIHouseInfo_C* HouseInfo, float PathDistanceThresh, bool bIncludeDoors1FFacingOut, class AAJBInGameGate** Door, class UNavigationPath** PathToDoor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "FindNearestClosedDoorInHouse");

	Params::BTS_AJBNaviDirectorSHA_C_FindNearestClosedDoorInHouse Parms{};

	Parms.HouseInfo = HouseInfo;
	Parms.PathDistanceThresh = PathDistanceThresh;
	Parms.bIncludeDoors1FFacingOut = bIncludeDoors1FFacingOut;

	UObject::ProcessEvent(Func, &Parms);

	if (Door != nullptr)
		*Door = Parms.Door;

	if (PathToDoor != nullptr)
		*PathToDoor = Parms.PathToDoor;
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.FindHouseInfoEnemyOn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameAIImaginaryCharacter_C*Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_AJBAIInGameCharacterHandle_C* CharacterHandle                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_AJBAIHouseInfo_C*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class ABP_AJBAIHouseInfo_C* UBTS_AJBNaviDirectorSHA_C::FindHouseInfoEnemyOn(class ABP_AJBInGameAIImaginaryCharacter_C* Enemy, class UBP_AJBAIInGameCharacterHandle_C* CharacterHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "FindHouseInfoEnemyOn");

	Params::BTS_AJBNaviDirectorSHA_C_FindHouseInfoEnemyOn Parms{};

	Parms.Enemy = Enemy;
	Parms.CharacterHandle = CharacterHandle;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.SwitchJumpZVelocity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     NaviActionTag                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBNaviDirectorSHA_C::SwitchJumpZVelocity(const struct FGameplayTag& NaviActionTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "SwitchJumpZVelocity");

	Params::BTS_AJBNaviDirectorSHA_C_SwitchJumpZVelocity Parms{};

	Parms.NaviActionTag = std::move(NaviActionTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.FindNearestGateReachable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameAIImaginaryCharacter_C*ImaginaryCharacter                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   GateArray                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class AActor*                           GateActor                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNavigationPath*                  PathToGate                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PathDistance                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBNaviDirectorSHA_C::FindNearestGateReachable(class ABP_AJBInGameAIImaginaryCharacter_C* ImaginaryCharacter, TArray<class AActor*>& GateArray, class AActor** GateActor, class UNavigationPath** PathToGate, float* PathDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "FindNearestGateReachable");

	Params::BTS_AJBNaviDirectorSHA_C_FindNearestGateReachable Parms{};

	Parms.ImaginaryCharacter = ImaginaryCharacter;
	Parms.GateArray = std::move(GateArray);

	UObject::ProcessEvent(Func, &Parms);

	GateArray = std::move(Parms.GateArray);

	if (GateActor != nullptr)
		*GateActor = Parms.GateActor;

	if (PathToGate != nullptr)
		*PathToGate = Parms.PathToGate;

	if (PathDistance != nullptr)
		*PathDistance = Parms.PathDistance;
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.FindMostApproachableBurningActor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNavigationPath*                  NavigationPath_0                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBNaviDirectorSHA_C::FindMostApproachableBurningActor(class AActor** Actor, class UNavigationPath** NavigationPath_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "FindMostApproachableBurningActor");

	Params::BTS_AJBNaviDirectorSHA_C_FindMostApproachableBurningActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;

	if (NavigationPath_0 != nullptr)
		*NavigationPath_0 = Parms.NavigationPath_0;
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.FindNearestGateReachableByLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   GateArray                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class AActor*                           GateActor                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNavigationPath*                  PathToGate                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PathDistance                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBNaviDirectorSHA_C::FindNearestGateReachableByLocation(const struct FVector& Location, TArray<class AActor*>& GateArray, class AActor** GateActor, class UNavigationPath** PathToGate, float* PathDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "FindNearestGateReachableByLocation");

	Params::BTS_AJBNaviDirectorSHA_C_FindNearestGateReachableByLocation Parms{};

	Parms.Location = std::move(Location);
	Parms.GateArray = std::move(GateArray);

	UObject::ProcessEvent(Func, &Parms);

	GateArray = std::move(Parms.GateArray);

	if (GateActor != nullptr)
		*GateActor = Parms.GateActor;

	if (PathToGate != nullptr)
		*PathToGate = Parms.PathToGate;

	if (PathDistance != nullptr)
		*PathDistance = Parms.PathDistance;
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.FindNearestDoorNotInHouse
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class AActor* UBTS_AJBNaviDirectorSHA_C::FindNearestDoorNotInHouse(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "FindNearestDoorNotInHouse");

	Params::BTS_AJBNaviDirectorSHA_C_FindNearestDoorNotInHouse Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BTS_AJBNaviDirectorSHA.BTS_AJBNaviDirectorSHA_C.FindExpectedDoorInHouse
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBAIHouseInfo_C*             HouseInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PathDistanceThresh                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAJBInGameGate*                   Door                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNavigationPath*                  PathToDoor                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBNaviDirectorSHA_C::FindExpectedDoorInHouse(class ABP_AJBAIHouseInfo_C* HouseInfo, float PathDistanceThresh, const struct FVector& TargetLocation, class AAJBInGameGate** Door, class UNavigationPath** PathToDoor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBNaviDirectorSHA_C", "FindExpectedDoorInHouse");

	Params::BTS_AJBNaviDirectorSHA_C_FindExpectedDoorInHouse Parms{};

	Parms.HouseInfo = HouseInfo;
	Parms.PathDistanceThresh = PathDistanceThresh;
	Parms.TargetLocation = std::move(TargetLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (Door != nullptr)
		*Door = Parms.Door;

	if (PathToDoor != nullptr)
		*PathToDoor = Parms.PathToDoor;
}

}


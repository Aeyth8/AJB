#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBSnipeSkill

#include "Basic.hpp"

#include "BP_AJBSnipeSkill_classes.hpp"
#include "BP_AJBSnipeSkill_parameters.hpp"


namespace SDK
{

// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.ExecuteUbergraph_BP_AJBSnipeSkill
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSnipeSkill_C::ExecuteUbergraph_BP_AJBSnipeSkill(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "ExecuteUbergraph_BP_AJBSnipeSkill");

	Params::BP_AJBSnipeSkill_C_ExecuteUbergraph_BP_AJBSnipeSkill Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnGiveDamage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageReceiver                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRemainHP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDamageIsCut                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   SerialNumber_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DamageReceiverIsPlayer                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bWithSeparatedStandAttack                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bEnemysSeparateStand                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBSnipeSkill_C::OnGiveDamage(int32 Damage_0, const struct FGameplayTag& DamageType, class AActor* DamageReceiver, bool bRemainHP, bool bDamageIsCut, int32 SerialNumber_0, bool DamageReceiverIsPlayer, bool bWithSeparatedStandAttack, bool bEnemysSeparateStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "OnGiveDamage");

	Params::BP_AJBSnipeSkill_C_OnGiveDamage Parms{};

	Parms.Damage_0 = Damage_0;
	Parms.DamageType = std::move(DamageType);
	Parms.DamageReceiver = DamageReceiver;
	Parms.bRemainHP = bRemainHP;
	Parms.bDamageIsCut = bDamageIsCut;
	Parms.SerialNumber_0 = SerialNumber_0;
	Parms.DamageReceiverIsPlayer = DamageReceiverIsPlayer;
	Parms.bWithSeparatedStandAttack = bWithSeparatedStandAttack;
	Parms.bEnemysSeparateStand = bEnemysSeparateStand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.EndState
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBSnipeSkill_C::EndState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "EndState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnBlocked
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SkillTag_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bAvoidSkill                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBSnipeSkill_C::OnBlocked(const struct FGameplayTag& SkillTag_0, bool bAvoidSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "OnBlocked");

	Params::BP_AJBSnipeSkill_C_OnBlocked Parms{};

	Parms.SkillTag_0 = std::move(SkillTag_0);
	Parms.bAvoidSkill = bAvoidSkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.BindCharacterDispatcher
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         CharacterBP                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSnipeSkill_C::BindCharacterDispatcher(class ABP_AJBInGameCharacter_C* CharacterBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "BindCharacterDispatcher");

	Params::BP_AJBSnipeSkill_C_BindCharacterDispatcher Parms{};

	Parms.CharacterBP = CharacterBP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnHeadShot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SkillTag_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSnipeSkill_C::OnHeadShot(const struct FGameplayTag& SkillTag_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "OnHeadShot");

	Params::BP_AJBSnipeSkill_C_OnHeadShot Parms{};

	Parms.SkillTag_0 = std::move(SkillTag_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnOutOfAmmo
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBSnipeSkill_C::OnOutOfAmmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "OnOutOfAmmo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBSnipeSkill_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnStateChargeUp
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBSnipeSkill_C::OnStateChargeUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "OnStateChargeUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnStateReady
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBSnipeSkill_C::OnStateReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "OnStateReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnStateAction
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBSnipeSkill_C::OnStateAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "OnStateAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.ConfigureBullet
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameProjectile_C*        Bullet                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSnipeSkill_C::ConfigureBullet(class ABP_AJBInGameProjectile_C* Bullet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "ConfigureBullet");

	Params::BP_AJBSnipeSkill_C_ConfigureBullet Parms{};

	Parms.Bullet = Bullet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnShot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void UBP_AJBSnipeSkill_C::OnShot(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "OnShot");

	Params::BP_AJBSnipeSkill_C_OnShot Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnMCShot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void UBP_AJBSnipeSkill_C::OnMCShot(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "OnMCShot");

	Params::BP_AJBSnipeSkill_C_OnMCShot Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnROSShot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void UBP_AJBSnipeSkill_C::OnROSShot(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "OnROSShot");

	Params::BP_AJBSnipeSkill_C_OnROSShot Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.ChangeSpread
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBSnipeSkill_C::ChangeSpread()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "ChangeSpread");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.MC_Shot
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void UBP_AJBSnipeSkill_C::MC_Shot(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "MC_Shot");

	Params::BP_AJBSnipeSkill_C_MC_Shot Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.AppearEffect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void UBP_AJBSnipeSkill_C::AppearEffect(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "AppearEffect");

	Params::BP_AJBSnipeSkill_C_AppearEffect Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.SpawnBullet
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// bool                                    WithAddSerialNumber                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBSnipeSkill_C::SpawnBullet(const struct FVector& Location, const struct FRotator& Rotation, bool WithAddSerialNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "SpawnBullet");

	Params::BP_AJBSnipeSkill_C_SpawnBullet Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.WithAddSerialNumber = WithAddSerialNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.ROS_Shot
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void UBP_AJBSnipeSkill_C::ROS_Shot(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "ROS_Shot");

	Params::BP_AJBSnipeSkill_C_ROS_Shot Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.Shot
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBSnipeSkill_C::Shot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "Shot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.TickStateAction
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBSnipeSkill_C::TickStateAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "TickStateAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.TickStateChargeUp
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBSnipeSkill_C::TickStateChargeUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "TickStateChargeUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.ChangeProjectileSpeedScale
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   SpeedScale                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSnipeSkill_C::ChangeProjectileSpeedScale(float SpeedScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "ChangeProjectileSpeedScale");

	Params::BP_AJBSnipeSkill_C_ChangeProjectileSpeedScale Parms{};

	Parms.SpeedScale = SpeedScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.ChangeAdditionalProjectileGravityPower
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Power                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSnipeSkill_C::ChangeAdditionalProjectileGravityPower(float Power)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "ChangeAdditionalProjectileGravityPower");

	Params::BP_AJBSnipeSkill_C_ChangeAdditionalProjectileGravityPower Parms{};

	Parms.Power = Power;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnCompleted_7DDD297442D7CC4375E0C99B834BFDEC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSnipeSkill_C::OnCompleted_7DDD297442D7CC4375E0C99B834BFDEC(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "OnCompleted_7DDD297442D7CC4375E0C99B834BFDEC");

	Params::BP_AJBSnipeSkill_C_OnCompleted_7DDD297442D7CC4375E0C99B834BFDEC Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnBlendOut_7DDD297442D7CC4375E0C99B834BFDEC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSnipeSkill_C::OnBlendOut_7DDD297442D7CC4375E0C99B834BFDEC(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "OnBlendOut_7DDD297442D7CC4375E0C99B834BFDEC");

	Params::BP_AJBSnipeSkill_C_OnBlendOut_7DDD297442D7CC4375E0C99B834BFDEC Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnInterrupted_7DDD297442D7CC4375E0C99B834BFDEC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSnipeSkill_C::OnInterrupted_7DDD297442D7CC4375E0C99B834BFDEC(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "OnInterrupted_7DDD297442D7CC4375E0C99B834BFDEC");

	Params::BP_AJBSnipeSkill_C_OnInterrupted_7DDD297442D7CC4375E0C99B834BFDEC Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnNotifyBegin_7DDD297442D7CC4375E0C99B834BFDEC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSnipeSkill_C::OnNotifyBegin_7DDD297442D7CC4375E0C99B834BFDEC(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "OnNotifyBegin_7DDD297442D7CC4375E0C99B834BFDEC");

	Params::BP_AJBSnipeSkill_C_OnNotifyBegin_7DDD297442D7CC4375E0C99B834BFDEC Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnNotifyEnd_7DDD297442D7CC4375E0C99B834BFDEC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSnipeSkill_C::OnNotifyEnd_7DDD297442D7CC4375E0C99B834BFDEC(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "OnNotifyEnd_7DDD297442D7CC4375E0C99B834BFDEC");

	Params::BP_AJBSnipeSkill_C_OnNotifyEnd_7DDD297442D7CC4375E0C99B834BFDEC Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.GetPoliticSpreadParam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   LowerSpread_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SpreadHealStopTime_0                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSnipeSkill_C::GetPoliticSpreadParam(float* LowerSpread_0, float* SpreadHealStopTime_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "GetPoliticSpreadParam");

	Params::BP_AJBSnipeSkill_C_GetPoliticSpreadParam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LowerSpread_0 != nullptr)
		*LowerSpread_0 = Parms.LowerSpread_0;

	if (SpreadHealStopTime_0 != nullptr)
		*SpreadHealStopTime_0 = Parms.SpreadHealStopTime_0;
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.ProcessingShotTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OutLocation                                            (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSnipeSkill_C::ProcessingShotTransform(const struct FVector& InLocation, struct FVector* OutLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "ProcessingShotTransform");

	Params::BP_AJBSnipeSkill_C_ProcessingShotTransform Parms{};

	Parms.InLocation = std::move(InLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.GetShotParticleTag
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     ShotParticleTag                                        (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSnipeSkill_C::GetShotParticleTag(struct FGameplayTag* ShotParticleTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "GetShotParticleTag");

	Params::BP_AJBSnipeSkill_C_GetShotParticleTag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShotParticleTag != nullptr)
		*ShotParticleTag = std::move(Parms.ShotParticleTag);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.GetSkillAttackRange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBP_AJBSnipeSkill_C::GetSkillAttackRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "GetSkillAttackRange");

	Params::BP_AJBSnipeSkill_C_GetSkillAttackRange Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.OnActive
// (Event, Public, BlueprintEvent)

void UBP_AJBSnipeSkill_C::OnActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "OnActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSnipeSkill_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "ReceiveTick");

	Params::BP_AJBSnipeSkill_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSnipeSkill.BP_AJBSnipeSkill_C.ChangeState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   NextState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSnipeSkill_C::ChangeState(uint8 NextState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSnipeSkill_C", "ChangeState");

	Params::BP_AJBSnipeSkill_C_ChangeState Parms{};

	Parms.NextState = NextState;

	UObject::ProcessEvent(Func, &Parms);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameProjectileSHA

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AJB_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameProjectileSHA.BP_AJBInGameProjectileSHA_C.ExecuteUbergraph_BP_AJBInGameProjectileSHA
// 0x01E0 (0x01E0 - 0x0000)
struct BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_DamageType;                     // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DeadActor;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& DamageType, class AActor* DeadActor, class AActor* DamageCauser)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_OverlappedComponent;                  // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_OtherBodyIndex;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_FromSweep;                            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_SweepResult;                          // 0x0068(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_Event_bHeadShot;                            // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bPenetrate;                           // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bFirstHit;                            // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F3[0x5];                                       // 0x00F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0100(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectOnLocal_ParticleEffect; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_HitActor;                             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0128(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0134(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHeadShot1;                           // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bPenetrate1;                          // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bFirstHit1;                           // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_143[0x1];                                      // 0x0143(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_CuttingRate;                          // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDisableDamage;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bReflect;                             // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A[0x2];                                      // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Event_ReflectRotation;                      // 0x014C(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bBlocking;                            // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_ReflectSkillTag;                      // 0x0160(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& AddCondition, class UObject* Causer)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0180(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_AJBInGameCharacter_KIR_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_KIR;  // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_AddCondition;                   // 0x01A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Causer;                         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x01B8(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA) == 0x000008, "Wrong alignment on BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA");
static_assert(sizeof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA) == 0x0001E0, "Wrong size on BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, EntryPoint) == 0x000000, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_CustomEvent_DamageType) == 0x000018, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_CustomEvent_DeadActor) == 0x000020, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_CustomEvent_DeadActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_CustomEvent_DamageCauser) == 0x000028, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_CreateDelegate_OutputDelegate1) == 0x000030, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, CallFunc_IsServer_ReturnValue) == 0x000040, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_Event_OverlappedComponent) == 0x000048, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_Event_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_Event_OtherActor) == 0x000050, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_Event_OtherComp) == 0x000058, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_Event_OtherBodyIndex) == 0x000060, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_Event_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_Event_FromSweep) == 0x000064, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_Event_FromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_Event_SweepResult) == 0x000068, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_Event_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_Event_bHeadShot) == 0x0000F0, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_Event_bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_Event_bPenetrate) == 0x0000F1, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_Event_bPenetrate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_Event_bFirstHit) == 0x0000F2, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_Event_bFirstHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, CallFunc_GetObjectClass_ReturnValue) == 0x0000F8, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000100, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, CallFunc_ClassIsChildOf_ReturnValue) == 0x00010C, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, CallFunc_RequestParticleEffectOnLocal_ParticleEffect) == 0x000110, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::CallFunc_RequestParticleEffectOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, CallFunc_Not_PreBool_ReturnValue) == 0x000118, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, CallFunc_Not_PreBool_ReturnValue1) == 0x000119, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_Event_HitActor) == 0x000120, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_Event_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_Event_HitLocation) == 0x000128, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_Event_HitNormal) == 0x000134, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_Event_bHeadShot1) == 0x000140, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_Event_bHeadShot1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_Event_bPenetrate1) == 0x000141, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_Event_bPenetrate1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_Event_bFirstHit1) == 0x000142, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_Event_bFirstHit1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_Event_CuttingRate) == 0x000144, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_Event_CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_Event_bDisableDamage) == 0x000148, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_Event_bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_Event_bReflect) == 0x000149, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_Event_bReflect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_Event_ReflectRotation) == 0x00014C, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_Event_ReflectRotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_Event_bBlocking) == 0x000158, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_Event_bBlocking' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_Event_ReflectSkillTag) == 0x000160, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_Event_ReflectSkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, CallFunc_GetOwner_ReturnValue) == 0x000168, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000170, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_DynamicCast_bSuccess) == 0x000178, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_CreateDelegate_OutputDelegate2) == 0x000180, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_KIR) == 0x000190, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_KIR' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_DynamicCast_bSuccess1) == 0x000198, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_CustomEvent_AddCondition) == 0x0001A0, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_CustomEvent_AddCondition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_CustomEvent_Causer) == 0x0001A8, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_CustomEvent_Causer' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, CallFunc_MatchesTag_ReturnValue) == 0x0001B0, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_CreateDelegate_OutputDelegate3) == 0x0001B8, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, CallFunc_GetOwner_ReturnValue1) == 0x0001C8, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x0001D0, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA, K2Node_DynamicCast_bSuccess2) == 0x0001D8, "Member 'BP_AJBInGameProjectileSHA_C_ExecuteUbergraph_BP_AJBInGameProjectileSHA::K2Node_DynamicCast_bSuccess2' has a wrong offset!");

// Function BP_AJBInGameProjectileSHA.BP_AJBInGameProjectileSHA_C.OnPassiveAddedAfterSetCauser
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameProjectileSHA_C_OnPassiveAddedAfterSetCauser final
{
public:
	struct FGameplayTag                           AddCondition;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectileSHA_C_OnPassiveAddedAfterSetCauser) == 0x000008, "Wrong alignment on BP_AJBInGameProjectileSHA_C_OnPassiveAddedAfterSetCauser");
static_assert(sizeof(BP_AJBInGameProjectileSHA_C_OnPassiveAddedAfterSetCauser) == 0x000010, "Wrong size on BP_AJBInGameProjectileSHA_C_OnPassiveAddedAfterSetCauser");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnPassiveAddedAfterSetCauser, AddCondition) == 0x000000, "Member 'BP_AJBInGameProjectileSHA_C_OnPassiveAddedAfterSetCauser::AddCondition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnPassiveAddedAfterSetCauser, Causer) == 0x000008, "Member 'BP_AJBInGameProjectileSHA_C_OnPassiveAddedAfterSetCauser::Causer' has a wrong offset!");

// Function BP_AJBInGameProjectileSHA.BP_AJBInGameProjectileSHA_C.OnCharacterDead
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameProjectileSHA_C_OnCharacterDead final
{
public:
	struct FGameplayTag                           DamageType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DeadActor;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectileSHA_C_OnCharacterDead) == 0x000008, "Wrong alignment on BP_AJBInGameProjectileSHA_C_OnCharacterDead");
static_assert(sizeof(BP_AJBInGameProjectileSHA_C_OnCharacterDead) == 0x000018, "Wrong size on BP_AJBInGameProjectileSHA_C_OnCharacterDead");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnCharacterDead, DamageType) == 0x000000, "Member 'BP_AJBInGameProjectileSHA_C_OnCharacterDead::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnCharacterDead, DeadActor) == 0x000008, "Member 'BP_AJBInGameProjectileSHA_C_OnCharacterDead::DeadActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnCharacterDead, DamageCauser) == 0x000010, "Member 'BP_AJBInGameProjectileSHA_C_OnCharacterDead::DamageCauser' has a wrong offset!");

// Function BP_AJBInGameProjectileSHA.BP_AJBInGameProjectileSHA_C.ShowTrySpawnSHAInfo
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBInGameProjectileSHA_C_ShowTrySpawnSHAInfo final
{
public:
	struct FVector                                HitLocation_0;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal_0;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AdjustLocation;                                    // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleHeight;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleRadius;                                     // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x002C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0044(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectileSHA_C_ShowTrySpawnSHAInfo) == 0x000004, "Wrong alignment on BP_AJBInGameProjectileSHA_C_ShowTrySpawnSHAInfo");
static_assert(sizeof(BP_AJBInGameProjectileSHA_C_ShowTrySpawnSHAInfo) == 0x000050, "Wrong size on BP_AJBInGameProjectileSHA_C_ShowTrySpawnSHAInfo");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ShowTrySpawnSHAInfo, HitLocation_0) == 0x000000, "Member 'BP_AJBInGameProjectileSHA_C_ShowTrySpawnSHAInfo::HitLocation_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ShowTrySpawnSHAInfo, HitNormal_0) == 0x00000C, "Member 'BP_AJBInGameProjectileSHA_C_ShowTrySpawnSHAInfo::HitNormal_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ShowTrySpawnSHAInfo, AdjustLocation) == 0x000018, "Member 'BP_AJBInGameProjectileSHA_C_ShowTrySpawnSHAInfo::AdjustLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ShowTrySpawnSHAInfo, CapsuleHeight) == 0x000024, "Member 'BP_AJBInGameProjectileSHA_C_ShowTrySpawnSHAInfo::CapsuleHeight' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ShowTrySpawnSHAInfo, CapsuleRadius) == 0x000028, "Member 'BP_AJBInGameProjectileSHA_C_ShowTrySpawnSHAInfo::CapsuleRadius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ShowTrySpawnSHAInfo, Rotation) == 0x00002C, "Member 'BP_AJBInGameProjectileSHA_C_ShowTrySpawnSHAInfo::Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ShowTrySpawnSHAInfo, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000038, "Member 'BP_AJBInGameProjectileSHA_C_ShowTrySpawnSHAInfo::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ShowTrySpawnSHAInfo, CallFunc_Add_VectorVector_ReturnValue) == 0x000044, "Member 'BP_AJBInGameProjectileSHA_C_ShowTrySpawnSHAInfo::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectileSHA.BP_AJBInGameProjectileSHA_C.ShowSHAPositioningInfo
// 0x0068 (0x0068 - 0x0000)
struct BP_AJBInGameProjectileSHA_C_ShowSHAPositioningInfo final
{
public:
	EPositioningSafeLocationResult                Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectileSHA_C_ShowSHAPositioningInfo) == 0x000008, "Wrong alignment on BP_AJBInGameProjectileSHA_C_ShowSHAPositioningInfo");
static_assert(sizeof(BP_AJBInGameProjectileSHA_C_ShowSHAPositioningInfo) == 0x000068, "Wrong size on BP_AJBInGameProjectileSHA_C_ShowSHAPositioningInfo");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ShowSHAPositioningInfo, Result) == 0x000000, "Member 'BP_AJBInGameProjectileSHA_C_ShowSHAPositioningInfo::Result' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ShowSHAPositioningInfo, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_AJBInGameProjectileSHA_C_ShowSHAPositioningInfo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ShowSHAPositioningInfo, CallFunc_GetDisplayName_ReturnValue) == 0x000008, "Member 'BP_AJBInGameProjectileSHA_C_ShowSHAPositioningInfo::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ShowSHAPositioningInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BP_AJBInGameProjectileSHA_C_ShowSHAPositioningInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ShowSHAPositioningInfo, CallFunc_Concat_StrStr_ReturnValue1) == 0x000028, "Member 'BP_AJBInGameProjectileSHA_C_ShowSHAPositioningInfo::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ShowSHAPositioningInfo, CallFunc_Concat_StrStr_ReturnValue2) == 0x000038, "Member 'BP_AJBInGameProjectileSHA_C_ShowSHAPositioningInfo::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ShowSHAPositioningInfo, CallFunc_Concat_StrStr_ReturnValue3) == 0x000048, "Member 'BP_AJBInGameProjectileSHA_C_ShowSHAPositioningInfo::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_ShowSHAPositioningInfo, CallFunc_Concat_StrStr_ReturnValue4) == 0x000058, "Member 'BP_AJBInGameProjectileSHA_C_ShowSHAPositioningInfo::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");

// Function BP_AJBInGameProjectileSHA.BP_AJBInGameProjectileSHA_C.TrySpawnSHA
// 0x0100 (0x0100 - 0x0000)
struct BP_AJBInGameProjectileSHA_C_TrySpawnSHA final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0044(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0068(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBBattleGameMode_C*                K2Node_DynamicCast_AsBP_AJBBattle_Game_Mode;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBParamContent*                       CallFunc_GetParamDefaultContent_ReturnValue;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue1;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPositioningSafeLocationResult                CallFunc_PositioningSafeLocation_Result;           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_PositioningSafeLocation_SafeLocation;     // 0x00BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_PositioningSafeLocation_FirstHitActor;    // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA) == 0x000010, "Wrong alignment on BP_AJBInGameProjectileSHA_C_TrySpawnSHA");
static_assert(sizeof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA) == 0x000100, "Wrong size on BP_AJBInGameProjectileSHA_C_TrySpawnSHA");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, Location) == 0x000000, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, Normal) == 0x00000C, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000038, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000044, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, CallFunc_BreakRotator_Roll) == 0x000050, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, CallFunc_BreakRotator_Pitch) == 0x000054, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, CallFunc_BreakRotator_Yaw) == 0x000058, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, CallFunc_GetGameMode_ReturnValue) == 0x000060, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, CallFunc_MakeRotator_ReturnValue) == 0x000068, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, K2Node_DynamicCast_AsBP_AJBBattle_Game_Mode) == 0x000078, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::K2Node_DynamicCast_AsBP_AJBBattle_Game_Mode' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, K2Node_DynamicCast_bSuccess1) == 0x000080, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, CallFunc_GetParamDefaultContent_ReturnValue) == 0x000088, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::CallFunc_GetParamDefaultContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, CallFunc_GetFloatValue_ReturnValue) == 0x000090, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, CallFunc_GetFloatValue_ReturnValue1) == 0x000094, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::CallFunc_GetFloatValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, CallFunc_FMax_ReturnValue) == 0x000098, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, CallFunc_Add_FloatFloat_ReturnValue) == 0x00009C, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A0, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, CallFunc_Add_VectorVector_ReturnValue) == 0x0000AC, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, CallFunc_PositioningSafeLocation_Result) == 0x0000B8, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::CallFunc_PositioningSafeLocation_Result' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, CallFunc_PositioningSafeLocation_SafeLocation) == 0x0000BC, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::CallFunc_PositioningSafeLocation_SafeLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, CallFunc_PositioningSafeLocation_FirstHitActor) == 0x0000C8, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::CallFunc_PositioningSafeLocation_FirstHitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_TrySpawnSHA, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'BP_AJBInGameProjectileSHA_C_TrySpawnSHA::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectileSHA.BP_AJBInGameProjectileSHA_C.OnProjectileHit
// 0x00B0 (0x00B0 - 0x0000)
struct BP_AJBInGameProjectileSHA_C_OnProjectileHit final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FromSweep;                                         // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bHeadShot;                                         // 0x00A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPenetrate_0;                                      // 0x00A9(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFirstHit;                                         // 0x00AA(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectileSHA_C_OnProjectileHit) == 0x000008, "Wrong alignment on BP_AJBInGameProjectileSHA_C_OnProjectileHit");
static_assert(sizeof(BP_AJBInGameProjectileSHA_C_OnProjectileHit) == 0x0000B0, "Wrong size on BP_AJBInGameProjectileSHA_C_OnProjectileHit");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnProjectileHit, OverlappedComponent) == 0x000000, "Member 'BP_AJBInGameProjectileSHA_C_OnProjectileHit::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnProjectileHit, OtherActor) == 0x000008, "Member 'BP_AJBInGameProjectileSHA_C_OnProjectileHit::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnProjectileHit, OtherComp) == 0x000010, "Member 'BP_AJBInGameProjectileSHA_C_OnProjectileHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnProjectileHit, OtherBodyIndex) == 0x000018, "Member 'BP_AJBInGameProjectileSHA_C_OnProjectileHit::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnProjectileHit, FromSweep) == 0x00001C, "Member 'BP_AJBInGameProjectileSHA_C_OnProjectileHit::FromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnProjectileHit, SweepResult) == 0x000020, "Member 'BP_AJBInGameProjectileSHA_C_OnProjectileHit::SweepResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnProjectileHit, bHeadShot) == 0x0000A8, "Member 'BP_AJBInGameProjectileSHA_C_OnProjectileHit::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnProjectileHit, bPenetrate_0) == 0x0000A9, "Member 'BP_AJBInGameProjectileSHA_C_OnProjectileHit::bPenetrate_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnProjectileHit, bFirstHit) == 0x0000AA, "Member 'BP_AJBInGameProjectileSHA_C_OnProjectileHit::bFirstHit' has a wrong offset!");

// Function BP_AJBInGameProjectileSHA.BP_AJBInGameProjectileSHA_C.OnROS_ProjectileHit
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation_0;                                     // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal_0;                                       // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHeadShot;                                         // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPenetrate_0;                                      // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFirstHit;                                         // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CuttingRate;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableDamage;                                    // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bReflect;                                          // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               ReflectRotation;                                   // 0x002C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          bBlocking;                                         // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ReflectSkillTag_0;                                 // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit) == 0x000008, "Wrong alignment on BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit");
static_assert(sizeof(BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit) == 0x000048, "Wrong size on BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit, HitActor) == 0x000000, "Member 'BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit, HitLocation_0) == 0x000008, "Member 'BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit::HitLocation_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit, HitNormal_0) == 0x000014, "Member 'BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit::HitNormal_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit, bHeadShot) == 0x000020, "Member 'BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit, bPenetrate_0) == 0x000021, "Member 'BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit::bPenetrate_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit, bFirstHit) == 0x000022, "Member 'BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit::bFirstHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit, CuttingRate) == 0x000024, "Member 'BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit::CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit, bDisableDamage) == 0x000028, "Member 'BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit::bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit, bReflect) == 0x000029, "Member 'BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit::bReflect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit, ReflectRotation) == 0x00002C, "Member 'BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit::ReflectRotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit, bBlocking) == 0x000038, "Member 'BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit::bBlocking' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit, ReflectSkillTag_0) == 0x000040, "Member 'BP_AJBInGameProjectileSHA_C_OnROS_ProjectileHit::ReflectSkillTag_0' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInvincibleGEXRequiem

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AJB_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInvincibleGEXRequiem.BP_AJBInvincibleGEXRequiem_C.ExecuteUbergraph_BP_AJBInvincibleGEXRequiem
// 0x05C8 (0x05C8 - 0x0000)
struct BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UShapeComponent*>                CallFunc_GetComponentsByTag_ReturnValue;           // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	class UShapeComponent*                        CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bTriggeredByStand1;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bTriggeredByStand;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base;    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0068(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0080(0x0040)(HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent1;           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor1;                    // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp1;                     // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex1;                // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FromSweep;                      // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult1;                   // 0x00E0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_CalcHitLocation_HitImpactPoint;           // 0x0168(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcHitLocation_HitImpactNormal;          // 0x0174(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcHitLocation_HitLocation;              // 0x0180(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_BlockingRushInterface_C> K2Node_DynamicCast_AsBI_Blocking_Rush_Interface;   // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base1;   // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue4;                    // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21D[0x3];                                      // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0220(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HItLocation;                    // 0x02AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bImpulseDamage;                 // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue1;              // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectOnLocal_ParticleEffect; // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue5;                    // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base2;   // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue6;                    // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue2;    // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue1;         // 0x0310(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue7;                    // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character3;     // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0330(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_GEX_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_GEX;      // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bEnable;                        // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A[0x6];                                      // 0x035A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue8;                    // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character4;     // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue2;         // 0x0380(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToSpeakVoice_bWillBeSpoken;            // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue9;                    // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent; // 0x0398(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character5;     // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess11;                     // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA[0x6];                                      // 0x03AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1;         // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess12;                     // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_GEX_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_GEX1;     // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess13;                     // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent1; // 0x03D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue10;                   // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character6;     // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess14;                     // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_BlockingRushOperatorInterface_C> K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface; // 0x03F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess15;                     // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPair_bPairCharacter;                    // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x040A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x040B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x040C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40D[0x3];                                      // 0x040D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect; // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue11;                   // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character7;     // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess16;                     // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x3];                                      // 0x0431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_BlockingRushOperatorInterface_C> K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface1; // 0x0438(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess17;                     // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBlockingValid_bBlockingValid;        // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44A[0x6];                                      // 0x044A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue12;                   // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue13;                   // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character8;     // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess18;                     // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character9;     // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess19;                     // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_GRN_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_GRN;  // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess20;                     // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand2;         // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess21;                     // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A1[0x3];                                      // 0x04A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x04A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect1; // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue14;                   // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character10;    // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess22;                     // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable1;                               // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_GRN_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_GRN1; // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess23;                     // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select1_Default;                            // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue15;                   // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character11;    // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess24;                     // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue16;                   // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character12;    // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess25;                     // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCharacterName_CharacterName;           // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue1;             // 0x0530(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x0548(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0588(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0598(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x05B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem) == 0x000008, "Wrong alignment on BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem");
static_assert(sizeof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem) == 0x0005C8, "Wrong size on BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, EntryPoint) == 0x000000, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, Temp_bool_Variable) == 0x000004, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_Event_Operator) == 0x000008, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_Event_Time) == 0x000010, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_Event_Timing) == 0x000014, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_Event_bEnable) == 0x000015, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_Event_bOperatorIsEmpty) == 0x000016, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000020, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_GetComponentsByTag_ReturnValue) == 0x000030, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000048, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_Event_bTriggeredByStand1) == 0x000049, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_Event_bTriggeredByStand1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_Event_bTriggeredByStand) == 0x00004A, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_Event_bTriggeredByStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_GetOwner_ReturnValue1) == 0x000050, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsAJBIn_Game_Character_Base) == 0x000058, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsAJBIn_Game_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess1) == 0x000060, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_HasLocalSharedController_ReturnValue) == 0x000061, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000062, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_IsValid_ReturnValue) == 0x000063, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_IsServer_ReturnValue) == 0x000064, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_Conv_NameToText_ReturnValue) == 0x000068, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_MakeStruct_FormatArgumentData) == 0x000080, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_CustomEvent_OverlappedComponent1) == 0x0000C0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_CustomEvent_OverlappedComponent1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_CustomEvent_OtherActor1) == 0x0000C8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_CustomEvent_OtherActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_CustomEvent_OtherComp1) == 0x0000D0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_CustomEvent_OtherComp1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_CustomEvent_OtherBodyIndex1) == 0x0000D8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_CustomEvent_OtherBodyIndex1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_CustomEvent_FromSweep) == 0x0000DC, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_CustomEvent_FromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_CustomEvent_SweepResult1) == 0x0000E0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_CustomEvent_SweepResult1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_CalcHitLocation_HitImpactPoint) == 0x000168, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_CalcHitLocation_HitImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_CalcHitLocation_HitImpactNormal) == 0x000174, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_CalcHitLocation_HitImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_CalcHitLocation_HitLocation) == 0x000180, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_CalcHitLocation_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBI_Blocking_Rush_Interface) == 0x000190, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBI_Blocking_Rush_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess2) == 0x0001A0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_GetObjectClass_ReturnValue) == 0x0001A8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_GetOwner_ReturnValue2) == 0x0001B0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_ClassIsChildOf_ReturnValue) == 0x0001B8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_GetOwner_ReturnValue3) == 0x0001C0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsAJBIn_Game_Character_Base1) == 0x0001C8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsAJBIn_Game_Character_Base1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess3) == 0x0001D0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_GetOwner_ReturnValue4) == 0x0001D8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_GetOwner_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_HasLocalSharedController_ReturnValue1) == 0x0001E0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x0001E8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess4) == 0x0001F0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0001F8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_CustomEvent_OverlappedComponent) == 0x000200, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_CustomEvent_OtherActor) == 0x000208, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_CustomEvent_OtherComp) == 0x000210, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_CustomEvent_OtherBodyIndex) == 0x000218, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_CustomEvent_bFromSweep) == 0x00021C, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_CustomEvent_SweepResult) == 0x000220, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_MakeLiteralInt_ReturnValue) == 0x0002A8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_CustomEvent_HItLocation) == 0x0002AC, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_CustomEvent_HItLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_CustomEvent_bImpulseDamage) == 0x0002B8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_CustomEvent_bImpulseDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_GetObjectClass_ReturnValue1) == 0x0002C0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_GetObjectClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_IsValid_ReturnValue1) == 0x0002C8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_RequestParticleEffectOnLocal_ParticleEffect) == 0x0002D0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_RequestParticleEffectOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_GetOwner_ReturnValue5) == 0x0002D8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_GetOwner_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsAJBIn_Game_Character_Base2) == 0x0002E0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsAJBIn_Game_Character_Base2' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess5) == 0x0002E8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_GetOwner_ReturnValue6) == 0x0002F0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_GetOwner_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_HasLocalSharedController_ReturnValue2) == 0x0002F8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_HasLocalSharedController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x000300, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess6) == 0x000308, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_K2_GetRootComponent_ReturnValue1) == 0x000310, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_K2_GetRootComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_GetOwner_ReturnValue7) == 0x000318, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_GetOwner_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBP_AJBIn_Game_Character3) == 0x000320, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBP_AJBIn_Game_Character3' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess7) == 0x000328, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_CreateDelegate_OutputDelegate) == 0x000330, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000340, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess8) == 0x000348, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_GEX) == 0x000350, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_GEX' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess9) == 0x000358, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_CustomEvent_bEnable) == 0x000359, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_CustomEvent_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_GetOwner_ReturnValue8) == 0x000360, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_GetOwner_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_IsValid_ReturnValue2) == 0x000368, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBP_AJBIn_Game_Character4) == 0x000370, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBP_AJBIn_Game_Character4' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess10) == 0x000378, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_K2_GetRootComponent_ReturnValue2) == 0x000380, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_K2_GetRootComponent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_TryToSpeakVoice_bWillBeSpoken) == 0x000388, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_TryToSpeakVoice_bWillBeSpoken' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_GetOwner_ReturnValue9) == 0x000390, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_GetOwner_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent) == 0x000398, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBP_AJBIn_Game_Character5) == 0x0003A0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBP_AJBIn_Game_Character5' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess11) == 0x0003A8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess11' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_IsDedicatedServer_ReturnValue) == 0x0003A9, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1) == 0x0003B0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess12) == 0x0003B8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess12' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_GEX1) == 0x0003C0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_GEX1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess13) == 0x0003C8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess13' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent1) == 0x0003D0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_GetOwner_ReturnValue10) == 0x0003D8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_GetOwner_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, Temp_float_Variable) == 0x0003E0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBP_AJBIn_Game_Character6) == 0x0003E8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBP_AJBIn_Game_Character6' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess14) == 0x0003F0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess14' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface) == 0x0003F8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess15) == 0x000408, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess15' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_IsPair_bPairCharacter) == 0x000409, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_IsPair_bPairCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_IsDedicatedServer_ReturnValue1) == 0x00040A, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_Event_EndPlayReason) == 0x00040B, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, Temp_bool_Variable1) == 0x00040C, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect) == 0x000410, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, Temp_float_Variable1) == 0x000418, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_GetOwner_ReturnValue11) == 0x000420, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_GetOwner_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBP_AJBIn_Game_Character7) == 0x000428, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBP_AJBIn_Game_Character7' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess16) == 0x000430, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess16' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_Select_Default) == 0x000434, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface1) == 0x000438, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess17) == 0x000448, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess17' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_CheckBlockingValid_bBlockingValid) == 0x000449, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_CheckBlockingValid_bBlockingValid' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, Temp_name_Variable) == 0x000450, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_GetOwner_ReturnValue12) == 0x000458, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_GetOwner_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_GetOwner_ReturnValue13) == 0x000460, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_GetOwner_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBP_AJBIn_Game_Character8) == 0x000468, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBP_AJBIn_Game_Character8' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess18) == 0x000470, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess18' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBP_AJBIn_Game_Character9) == 0x000478, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBP_AJBIn_Game_Character9' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess19) == 0x000480, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess19' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_GRN) == 0x000488, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_GRN' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess20) == 0x000490, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess20' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand2) == 0x000498, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand2' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess21) == 0x0004A0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess21' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_NegateVector_ReturnValue) == 0x0004A4, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect1) == 0x0004B0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_GetOwner_ReturnValue14) == 0x0004B8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_GetOwner_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBP_AJBIn_Game_Character10) == 0x0004C0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBP_AJBIn_Game_Character10' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess22) == 0x0004C8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess22' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, Temp_name_Variable1) == 0x0004D0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_GRN1) == 0x0004D8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_GRN1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess23) == 0x0004E0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess23' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_Select1_Default) == 0x0004E8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_GetOwner_ReturnValue15) == 0x0004F0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_GetOwner_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBP_AJBIn_Game_Character11) == 0x0004F8, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBP_AJBIn_Game_Character11' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess24) == 0x000500, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess24' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_GetOwner_ReturnValue16) == 0x000508, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_GetOwner_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_IsValid_ReturnValue3) == 0x000510, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_AsBP_AJBIn_Game_Character12) == 0x000518, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_AsBP_AJBIn_Game_Character12' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_DynamicCast_bSuccess25) == 0x000520, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_DynamicCast_bSuccess25' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_GetCharacterName_CharacterName) == 0x000528, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_GetCharacterName_CharacterName' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_Conv_NameToText_ReturnValue1) == 0x000530, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_Conv_NameToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_MakeStruct_FormatArgumentData1) == 0x000548, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, K2Node_MakeArray_Array) == 0x000588, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_Format_ReturnValue) == 0x000598, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_Conv_TextToString_ReturnValue) == 0x0005B0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem, CallFunc_Conv_StringToName_ReturnValue) == 0x0005C0, "Member 'BP_AJBInvincibleGEXRequiem_C_ExecuteUbergraph_BP_AJBInvincibleGEXRequiem::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_AJBInvincibleGEXRequiem.BP_AJBInvincibleGEXRequiem_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInvincibleGEXRequiem_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInvincibleGEXRequiem_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_AJBInvincibleGEXRequiem_C_ReceiveEndPlay");
static_assert(sizeof(BP_AJBInvincibleGEXRequiem_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_AJBInvincibleGEXRequiem_C_ReceiveEndPlay");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_AJBInvincibleGEXRequiem_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_AJBInvincibleGEXRequiem.BP_AJBInvincibleGEXRequiem_C.SetCollisionEnabled
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInvincibleGEXRequiem_C_SetCollisionEnabled final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInvincibleGEXRequiem_C_SetCollisionEnabled) == 0x000001, "Wrong alignment on BP_AJBInvincibleGEXRequiem_C_SetCollisionEnabled");
static_assert(sizeof(BP_AJBInvincibleGEXRequiem_C_SetCollisionEnabled) == 0x000001, "Wrong size on BP_AJBInvincibleGEXRequiem_C_SetCollisionEnabled");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_SetCollisionEnabled, bEnable) == 0x000000, "Member 'BP_AJBInvincibleGEXRequiem_C_SetCollisionEnabled::bEnable' has a wrong offset!");

// Function BP_AJBInvincibleGEXRequiem.BP_AJBInvincibleGEXRequiem_C.OnBlocking
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInvincibleGEXRequiem_C_OnBlocking final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bImpulseDamage;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInvincibleGEXRequiem_C_OnBlocking) == 0x000004, "Wrong alignment on BP_AJBInvincibleGEXRequiem_C_OnBlocking");
static_assert(sizeof(BP_AJBInvincibleGEXRequiem_C_OnBlocking) == 0x000010, "Wrong size on BP_AJBInvincibleGEXRequiem_C_OnBlocking");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_OnBlocking, HitLocation) == 0x000000, "Member 'BP_AJBInvincibleGEXRequiem_C_OnBlocking::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_OnBlocking, bImpulseDamage) == 0x00000C, "Member 'BP_AJBInvincibleGEXRequiem_C_OnBlocking::bImpulseDamage' has a wrong offset!");

// Function BP_AJBInvincibleGEXRequiem.BP_AJBInvincibleGEXRequiem_C.BeginOverlap_BlockCollision
// 0x00A8 (0x00A8 - 0x0000)
struct BP_AJBInvincibleGEXRequiem_C_BeginOverlap_BlockCollision final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBInvincibleGEXRequiem_C_BeginOverlap_BlockCollision) == 0x000008, "Wrong alignment on BP_AJBInvincibleGEXRequiem_C_BeginOverlap_BlockCollision");
static_assert(sizeof(BP_AJBInvincibleGEXRequiem_C_BeginOverlap_BlockCollision) == 0x0000A8, "Wrong size on BP_AJBInvincibleGEXRequiem_C_BeginOverlap_BlockCollision");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_BeginOverlap_BlockCollision, OverlappedComponent) == 0x000000, "Member 'BP_AJBInvincibleGEXRequiem_C_BeginOverlap_BlockCollision::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_BeginOverlap_BlockCollision, OtherActor) == 0x000008, "Member 'BP_AJBInvincibleGEXRequiem_C_BeginOverlap_BlockCollision::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_BeginOverlap_BlockCollision, OtherComp) == 0x000010, "Member 'BP_AJBInvincibleGEXRequiem_C_BeginOverlap_BlockCollision::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_BeginOverlap_BlockCollision, OtherBodyIndex) == 0x000018, "Member 'BP_AJBInvincibleGEXRequiem_C_BeginOverlap_BlockCollision::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_BeginOverlap_BlockCollision, bFromSweep) == 0x00001C, "Member 'BP_AJBInvincibleGEXRequiem_C_BeginOverlap_BlockCollision::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_BeginOverlap_BlockCollision, SweepResult) == 0x000020, "Member 'BP_AJBInvincibleGEXRequiem_C_BeginOverlap_BlockCollision::SweepResult' has a wrong offset!");

// Function BP_AJBInvincibleGEXRequiem.BP_AJBInvincibleGEXRequiem_C.OnBeginOverlap_BlockCollision
// 0x00A8 (0x00A8 - 0x0000)
struct BP_AJBInvincibleGEXRequiem_C_OnBeginOverlap_BlockCollision final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FromSweep;                                         // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBInvincibleGEXRequiem_C_OnBeginOverlap_BlockCollision) == 0x000008, "Wrong alignment on BP_AJBInvincibleGEXRequiem_C_OnBeginOverlap_BlockCollision");
static_assert(sizeof(BP_AJBInvincibleGEXRequiem_C_OnBeginOverlap_BlockCollision) == 0x0000A8, "Wrong size on BP_AJBInvincibleGEXRequiem_C_OnBeginOverlap_BlockCollision");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_OnBeginOverlap_BlockCollision, OverlappedComponent) == 0x000000, "Member 'BP_AJBInvincibleGEXRequiem_C_OnBeginOverlap_BlockCollision::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_OnBeginOverlap_BlockCollision, OtherActor) == 0x000008, "Member 'BP_AJBInvincibleGEXRequiem_C_OnBeginOverlap_BlockCollision::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_OnBeginOverlap_BlockCollision, OtherComp) == 0x000010, "Member 'BP_AJBInvincibleGEXRequiem_C_OnBeginOverlap_BlockCollision::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_OnBeginOverlap_BlockCollision, OtherBodyIndex) == 0x000018, "Member 'BP_AJBInvincibleGEXRequiem_C_OnBeginOverlap_BlockCollision::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_OnBeginOverlap_BlockCollision, FromSweep) == 0x00001C, "Member 'BP_AJBInvincibleGEXRequiem_C_OnBeginOverlap_BlockCollision::FromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_OnBeginOverlap_BlockCollision, SweepResult) == 0x000020, "Member 'BP_AJBInvincibleGEXRequiem_C_OnBeginOverlap_BlockCollision::SweepResult' has a wrong offset!");

// Function BP_AJBInvincibleGEXRequiem.BP_AJBInvincibleGEXRequiem_C.ChangeInvincibleStatus
// 0x00F8 (0x00F8 - 0x0000)
struct BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface2; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface3; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface4; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface5; // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface6; // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface7; // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_UnderwaterAffecter_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UnderwaterAffecter_C*               CallFunc_GetComponentByClass_ReturnValue1;         // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus) == 0x000008, "Wrong alignment on BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus");
static_assert(sizeof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus) == 0x0000F8, "Wrong size on BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, bEnable) == 0x000000, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface) == 0x000020, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1) == 0x000038, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface2) == 0x000050, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface2' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, K2Node_DynamicCast_bSuccess3) == 0x000060, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface3) == 0x000068, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface3' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, K2Node_DynamicCast_bSuccess4) == 0x000078, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface4) == 0x000080, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface4' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, K2Node_DynamicCast_bSuccess5) == 0x000090, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface5) == 0x000098, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface5' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, K2Node_DynamicCast_bSuccess6) == 0x0000A8, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface6) == 0x0000B0, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface6' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, K2Node_DynamicCast_bSuccess7) == 0x0000C0, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface7) == 0x0000C8, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface7' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, K2Node_DynamicCast_bSuccess8) == 0x0000D8, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, CallFunc_GetComponentByClass_ReturnValue) == 0x0000E0, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, CallFunc_GetComponentByClass_ReturnValue1) == 0x0000E8, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, CallFunc_IsValid_ReturnValue) == 0x0000F0, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus, CallFunc_IsValid_ReturnValue1) == 0x0000F1, "Member 'BP_AJBInvincibleGEXRequiem_C_ChangeInvincibleStatus::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function BP_AJBInvincibleGEXRequiem.BP_AJBInvincibleGEXRequiem_C.SpawnEndParticle
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInvincibleGEXRequiem_C_SpawnEndParticle final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInvincibleGEXRequiem_C_SpawnEndParticle) == 0x000008, "Wrong alignment on BP_AJBInvincibleGEXRequiem_C_SpawnEndParticle");
static_assert(sizeof(BP_AJBInvincibleGEXRequiem_C_SpawnEndParticle) == 0x000038, "Wrong size on BP_AJBInvincibleGEXRequiem_C_SpawnEndParticle");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_SpawnEndParticle, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_AJBInvincibleGEXRequiem_C_SpawnEndParticle::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_SpawnEndParticle, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000008, "Member 'BP_AJBInvincibleGEXRequiem_C_SpawnEndParticle::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_SpawnEndParticle, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_AJBInvincibleGEXRequiem_C_SpawnEndParticle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_SpawnEndParticle, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000011, "Member 'BP_AJBInvincibleGEXRequiem_C_SpawnEndParticle::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_SpawnEndParticle, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000018, "Member 'BP_AJBInvincibleGEXRequiem_C_SpawnEndParticle::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_SpawnEndParticle, K2Node_DynamicCast_bSuccess1) == 0x000020, "Member 'BP_AJBInvincibleGEXRequiem_C_SpawnEndParticle::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_SpawnEndParticle, CallFunc_NegateVector_ReturnValue) == 0x000024, "Member 'BP_AJBInvincibleGEXRequiem_C_SpawnEndParticle::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_SpawnEndParticle, CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect) == 0x000030, "Member 'BP_AJBInvincibleGEXRequiem_C_SpawnEndParticle::CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect' has a wrong offset!");

// Function BP_AJBInvincibleGEXRequiem.BP_AJBInvincibleGEXRequiem_C.TryDestroyParticleOnGEX
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInvincibleGEXRequiem_C_TryDestroyParticleOnGEX final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInvincibleGEXRequiem_C_TryDestroyParticleOnGEX) == 0x000001, "Wrong alignment on BP_AJBInvincibleGEXRequiem_C_TryDestroyParticleOnGEX");
static_assert(sizeof(BP_AJBInvincibleGEXRequiem_C_TryDestroyParticleOnGEX) == 0x000001, "Wrong size on BP_AJBInvincibleGEXRequiem_C_TryDestroyParticleOnGEX");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_TryDestroyParticleOnGEX, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_AJBInvincibleGEXRequiem_C_TryDestroyParticleOnGEX::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInvincibleGEXRequiem.BP_AJBInvincibleGEXRequiem_C.GetCauserOwnerCharacterBP
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInvincibleGEXRequiem_C_GetCauserOwnerCharacterBP final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInvincibleGEXRequiem_C_GetCauserOwnerCharacterBP) == 0x000008, "Wrong alignment on BP_AJBInvincibleGEXRequiem_C_GetCauserOwnerCharacterBP");
static_assert(sizeof(BP_AJBInvincibleGEXRequiem_C_GetCauserOwnerCharacterBP) == 0x000008, "Wrong size on BP_AJBInvincibleGEXRequiem_C_GetCauserOwnerCharacterBP");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_GetCauserOwnerCharacterBP, CharacterBP) == 0x000000, "Member 'BP_AJBInvincibleGEXRequiem_C_GetCauserOwnerCharacterBP::CharacterBP' has a wrong offset!");

// Function BP_AJBInvincibleGEXRequiem.BP_AJBInvincibleGEXRequiem_C.GetPassiveSkillTag
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInvincibleGEXRequiem_C_GetPassiveSkillTag final
{
public:
	struct FGameplayTag                           PassiveSkillTag;                                   // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInvincibleGEXRequiem_C_GetPassiveSkillTag) == 0x000008, "Wrong alignment on BP_AJBInvincibleGEXRequiem_C_GetPassiveSkillTag");
static_assert(sizeof(BP_AJBInvincibleGEXRequiem_C_GetPassiveSkillTag) == 0x000008, "Wrong size on BP_AJBInvincibleGEXRequiem_C_GetPassiveSkillTag");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_GetPassiveSkillTag, PassiveSkillTag) == 0x000000, "Member 'BP_AJBInvincibleGEXRequiem_C_GetPassiveSkillTag::PassiveSkillTag' has a wrong offset!");

// Function BP_AJBInvincibleGEXRequiem.BP_AJBInvincibleGEXRequiem_C.GetDuration
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInvincibleGEXRequiem_C_GetDuration final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInvincibleGEXRequiem_C_GetDuration) == 0x000004, "Wrong alignment on BP_AJBInvincibleGEXRequiem_C_GetDuration");
static_assert(sizeof(BP_AJBInvincibleGEXRequiem_C_GetDuration) == 0x000004, "Wrong size on BP_AJBInvincibleGEXRequiem_C_GetDuration");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_GetDuration, Duration) == 0x000000, "Member 'BP_AJBInvincibleGEXRequiem_C_GetDuration::Duration' has a wrong offset!");

// Function BP_AJBInvincibleGEXRequiem.BP_AJBInvincibleGEXRequiem_C.OnActionInactivate
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInvincibleGEXRequiem_C_OnActionInactivate final
{
public:
	bool                                          bTriggeredByStand;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInvincibleGEXRequiem_C_OnActionInactivate) == 0x000001, "Wrong alignment on BP_AJBInvincibleGEXRequiem_C_OnActionInactivate");
static_assert(sizeof(BP_AJBInvincibleGEXRequiem_C_OnActionInactivate) == 0x000001, "Wrong size on BP_AJBInvincibleGEXRequiem_C_OnActionInactivate");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_OnActionInactivate, bTriggeredByStand) == 0x000000, "Member 'BP_AJBInvincibleGEXRequiem_C_OnActionInactivate::bTriggeredByStand' has a wrong offset!");

// Function BP_AJBInvincibleGEXRequiem.BP_AJBInvincibleGEXRequiem_C.OnActionActivate
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInvincibleGEXRequiem_C_OnActionActivate final
{
public:
	bool                                          bTriggeredByStand;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInvincibleGEXRequiem_C_OnActionActivate) == 0x000001, "Wrong alignment on BP_AJBInvincibleGEXRequiem_C_OnActionActivate");
static_assert(sizeof(BP_AJBInvincibleGEXRequiem_C_OnActionActivate) == 0x000001, "Wrong size on BP_AJBInvincibleGEXRequiem_C_OnActionActivate");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_OnActionActivate, bTriggeredByStand) == 0x000000, "Member 'BP_AJBInvincibleGEXRequiem_C_OnActionActivate::bTriggeredByStand' has a wrong offset!");

// Function BP_AJBInvincibleGEXRequiem.BP_AJBInvincibleGEXRequiem_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInvincibleGEXRequiem_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInvincibleGEXRequiem_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBInvincibleGEXRequiem_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBInvincibleGEXRequiem_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBInvincibleGEXRequiem_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBInvincibleGEXRequiem_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBInvincibleGEXRequiem_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBInvincibleGEXRequiem_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBInvincibleGEXRequiem_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInvincibleGEXRequiem_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBInvincibleGEXRequiem_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPF_UIConstantNumberUtil

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPF_UIConstantNumberUtil.BPF_UIConstantNumberUtil_C.IsAJBBattleResultGood_Rank
// 0x0018 (0x0018 - 0x0000)
struct BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Rank final
{
public:
	int32                                         Rank;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReturnValue;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Rank) == 0x000008, "Wrong alignment on BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Rank");
static_assert(sizeof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Rank) == 0x000018, "Wrong size on BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Rank");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Rank, Rank) == 0x000000, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Rank::Rank' has a wrong offset!");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Rank, __WorldContext) == 0x000008, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Rank::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Rank, bReturnValue) == 0x000010, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Rank::bReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Rank, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000011, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Rank::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Rank, CallFunc_Greater_IntInt_ReturnValue) == 0x000012, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Rank::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Rank, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Rank::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BPF_UIConstantNumberUtil.BPF_UIConstantNumberUtil_C.IsAJBBattleResultVeryGood_Rank
// 0x0018 (0x0018 - 0x0000)
struct BPF_UIConstantNumberUtil_C_IsAJBBattleResultVeryGood_Rank final
{
public:
	int32                                         Rank;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReturnValue;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultVeryGood_Rank) == 0x000008, "Wrong alignment on BPF_UIConstantNumberUtil_C_IsAJBBattleResultVeryGood_Rank");
static_assert(sizeof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultVeryGood_Rank) == 0x000018, "Wrong size on BPF_UIConstantNumberUtil_C_IsAJBBattleResultVeryGood_Rank");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultVeryGood_Rank, Rank) == 0x000000, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultVeryGood_Rank::Rank' has a wrong offset!");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultVeryGood_Rank, __WorldContext) == 0x000008, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultVeryGood_Rank::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultVeryGood_Rank, bReturnValue) == 0x000010, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultVeryGood_Rank::bReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultVeryGood_Rank, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000011, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultVeryGood_Rank::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultVeryGood_Rank, CallFunc_Greater_IntInt_ReturnValue) == 0x000012, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultVeryGood_Rank::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultVeryGood_Rank, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultVeryGood_Rank::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BPF_UIConstantNumberUtil.BPF_UIConstantNumberUtil_C.IsAJBBattleResultGood_LivingTime
// 0x0018 (0x0018 - 0x0000)
struct BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_LivingTime final
{
public:
	int32                                         Second;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReturnValue;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_LivingTime) == 0x000008, "Wrong alignment on BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_LivingTime");
static_assert(sizeof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_LivingTime) == 0x000018, "Wrong size on BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_LivingTime");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_LivingTime, Second) == 0x000000, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_LivingTime::Second' has a wrong offset!");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_LivingTime, __WorldContext) == 0x000008, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_LivingTime::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_LivingTime, bReturnValue) == 0x000010, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_LivingTime::bReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_LivingTime, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000011, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_LivingTime::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BPF_UIConstantNumberUtil.BPF_UIConstantNumberUtil_C.IsAJBBattleResultGood_Skill
// 0x0018 (0x0018 - 0x0000)
struct BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Skill final
{
public:
	int32                                         SkillCount;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReturnValue;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Skill) == 0x000008, "Wrong alignment on BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Skill");
static_assert(sizeof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Skill) == 0x000018, "Wrong size on BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Skill");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Skill, SkillCount) == 0x000000, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Skill::SkillCount' has a wrong offset!");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Skill, __WorldContext) == 0x000008, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Skill::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Skill, bReturnValue) == 0x000010, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Skill::bReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Skill, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000011, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Skill::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BPF_UIConstantNumberUtil.BPF_UIConstantNumberUtil_C.IsAJBBattleResultGood_Kill
// 0x0018 (0x0018 - 0x0000)
struct BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Kill final
{
public:
	int32                                         KillCount;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReturnValue;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Kill) == 0x000008, "Wrong alignment on BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Kill");
static_assert(sizeof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Kill) == 0x000018, "Wrong size on BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Kill");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Kill, KillCount) == 0x000000, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Kill::KillCount' has a wrong offset!");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Kill, __WorldContext) == 0x000008, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Kill::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Kill, bReturnValue) == 0x000010, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Kill::bReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Kill, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000011, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_Kill::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BPF_UIConstantNumberUtil.BPF_UIConstantNumberUtil_C.IsAJBBattleResultGood_GivedDamage
// 0x0018 (0x0018 - 0x0000)
struct BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_GivedDamage final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReturnValue;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_GivedDamage) == 0x000008, "Wrong alignment on BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_GivedDamage");
static_assert(sizeof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_GivedDamage) == 0x000018, "Wrong size on BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_GivedDamage");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_GivedDamage, Damage) == 0x000000, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_GivedDamage::Damage' has a wrong offset!");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_GivedDamage, __WorldContext) == 0x000008, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_GivedDamage::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_GivedDamage, bReturnValue) == 0x000010, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_GivedDamage::bReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_GivedDamage, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000011, "Member 'BPF_UIConstantNumberUtil_C_IsAJBBattleResultGood_GivedDamage::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBCrimsonDimensionAffecter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AJBSkillAffecterBase_classes.hpp"
#include "AJB_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C
// 0x00D8 (0x0460 - 0x0388)
class ABP_AJBCrimsonDimensionAffecter_C final : public ABP_AJBSkillAffecterBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBCrimsonDimensionAffecter_C;   // 0x0388(0x0008)(Transient, DuplicateTransient)
	float                                         Timeline_1_Transition_Line_PanTime_A6851F2D4FC4B90BC2F62BBBBA0F5B94; // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_Flash_Opacity_A6851F2D4FC4B90BC2F62BBBBA0F5B94; // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_NewTrack_1_A6851F2D4FC4B90BC2F62BBBBA0F5B94; // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_PostProcess_Opacity_A6851F2D4FC4B90BC2F62BBBBA0F5B94; // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_A6851F2D4FC4B90BC2F62BBBBA0F5B94; // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Transition_Line_PanTime_BDF3497A43F47F925F6159A1BA651202; // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Flash_Opacity_BDF3497A43F47F925F6159A1BA651202; // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_1_BDF3497A43F47F925F6159A1BA651202; // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_PostProcess_Opacity_BDF3497A43F47F925F6159A1BA651202; // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_BDF3497A43F47F925F6159A1BA651202; // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMIDimension;                                      // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PPIndexDimension;                                  // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     MT_Dimension;                                      // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DimensionDistance;                                 // 0x03E8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         SpeedDownScaleNotOwnerEnv;                         // 0x03EC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class ABP_AJBInGameParticleEffect_C*>  AttachedAffecterList;                              // 0x03F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	class UAkComponent*                           ActivatedSound;                                    // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBDamageDetectionCD_C*             DamageDetectionCD;                                 // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         LockSkillClassListOwner;                           // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UClass*>                         LockSkillClassListNotOwner;                        // 0x0420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class FName                                   ProfileNameDamageThrough;                          // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDamageEnableByTimeStop;                           // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AAJBInGameCharacter*>            DisableParticleListByTimeStop;                     // 0x0440(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         CharacterMoveSpeedScaleByStandNotOwnerEnv;         // 0x0450(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     MT_Dimension_UnderWater;                           // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBCrimsonDimensionAffecter(int32 EntryPoint);
	void ReceiveBeginPlay();
	void BindOnPassiveRemoved();
	void UnbindOnPassiveAdded();
	void OnPassiveRemoved(const struct FGameplayTag& RemoveCondition, class ABP_AJBInGameCharacter_C* CharacterBP);
	void OnPassiveAdded(const struct FGameplayTag& AddCondition);
	void UnbindOnPassiveRemoved();
	void BindOnPassiveAdded();
	void OnChangeSpactatorTarget();
	void UnbindOnChangeSpactatorTarget();
	void BindOnChangeSpactatorTarget();
	void MC_Active(const TArray<class ABP_AJBInGameCharacter_C*>& NotOwnerCharacters);
	void MC_Clearing(const TArray<class ABP_AJBInGameCharacter_C*>& NotOwnerCharacters);
	void OnBeginStateActive();
	void OnStateEnd();
	void TickStateActive();
	void TickStateClearing();
	void TickStateReady();
	void OnBeginStateClearing();
	void OnBeginStateReady();
	void StopEndDimensionTimeline();
	void StopBeginDimensionTimeline();
	void EndDimensionTimeline();
	void BeginDimensionTimeline();
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void Timeline_1__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void UserConstructionScript();
	void TryCreateDMIDimension();
	void UpdateDimensionOpacity();
	void SetPostProcessMaterial();
	void ChangeDimensionModeOwnerCharacter(bool bEnable);
	void ChangeDimensionModeNotOwnerCharacter(bool bEnable, TArray<class ABP_AJBInGameCharacter_C*>& NotOwnerCharacters);
	void ChangeEnableShouldUpdateBombing(class ABP_AJBInGameCharacter_C* IngameCharacterBP, bool Enable, bool IgnoreActiveCheck);
	void UpdateParticleVisibility();
	void TryDestroyDamageDetectionDCServer();
	void ChangeOwnerVisibilities(bool bNewVisibility);
	void RequestDimensionParticleNotOwnerEnv(const struct FGameplayTag& ParticleTag);
	void ResetDimensionOpacity();
	void ChangeOwnerEffects(bool NewVisibility);
	void ChangeOwnerVisuals(bool bNewVisibility);
	void CheckActiveRequiem(class AActor* Actor, bool* bActiveRequiem);
	void CheckViewTargetOwnerVisual(bool* bShouldVisualize);
	void ChangePoliticOwnerVisualOnEnabled();
	void BindsViewTargetPassive();
	void UnbindsViewTargetPassive();
	void ChangePoliticOwnerVisualOnDisabled();
	void ChangePoliticCDVisualOnEnabled();
	void CheckViewTargetCDVisual(bool* bShouldVisualize);
	void ChangeCDVisuals(bool bNewVisibility);
	void ChangePoliticCDVisualOnDisabled();
	void ChangeEnableDamageThrough(bool bEnable);
	void CheckEnableDamage(bool* bEnabled);
	void ChangeEnableDamage(bool bEnable);
	void CheckIncludeDisableParticleListByTimeStop(class AAJBInGameCharacter* Character, bool* bInclude);
	void RequestAttachedParticles(TArray<class ABP_AJBInGameCharacter_C*>& CharacterBPList);
	void TryDestroyAttachedParticles();
	void GetNotOwnerCharacters(TArray<class ABP_AJBInGameCharacter_C*>* NowOwnerCharacters);
	void ChangeDimensionModeNotOwnerCharacterCore(class ABP_AJBInGameCharacter_C* CharacterBP, bool bEnable);
	void RequestAttachedParticle(class ABP_AJBInGameCharacter_C* CharacterBP);
	void AddNewlyNotOwnerCharacter(class ABP_AJBInGameCharacter_C* CharacterBP);
	void EnableDamageOnTimeStop();
	void SetMeshesVisible(bool bNewVisibility);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBCrimsonDimensionAffecter_C">();
	}
	static class ABP_AJBCrimsonDimensionAffecter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBCrimsonDimensionAffecter_C>();
	}
};
static_assert(alignof(ABP_AJBCrimsonDimensionAffecter_C) == 0x000008, "Wrong alignment on ABP_AJBCrimsonDimensionAffecter_C");
static_assert(sizeof(ABP_AJBCrimsonDimensionAffecter_C) == 0x000460, "Wrong size on ABP_AJBCrimsonDimensionAffecter_C");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, UberGraphFrame_BP_AJBCrimsonDimensionAffecter_C) == 0x000388, "Member 'ABP_AJBCrimsonDimensionAffecter_C::UberGraphFrame_BP_AJBCrimsonDimensionAffecter_C' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, Timeline_1_Transition_Line_PanTime_A6851F2D4FC4B90BC2F62BBBBA0F5B94) == 0x000390, "Member 'ABP_AJBCrimsonDimensionAffecter_C::Timeline_1_Transition_Line_PanTime_A6851F2D4FC4B90BC2F62BBBBA0F5B94' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, Timeline_1_Flash_Opacity_A6851F2D4FC4B90BC2F62BBBBA0F5B94) == 0x000394, "Member 'ABP_AJBCrimsonDimensionAffecter_C::Timeline_1_Flash_Opacity_A6851F2D4FC4B90BC2F62BBBBA0F5B94' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, Timeline_1_NewTrack_1_A6851F2D4FC4B90BC2F62BBBBA0F5B94) == 0x000398, "Member 'ABP_AJBCrimsonDimensionAffecter_C::Timeline_1_NewTrack_1_A6851F2D4FC4B90BC2F62BBBBA0F5B94' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, Timeline_1_PostProcess_Opacity_A6851F2D4FC4B90BC2F62BBBBA0F5B94) == 0x00039C, "Member 'ABP_AJBCrimsonDimensionAffecter_C::Timeline_1_PostProcess_Opacity_A6851F2D4FC4B90BC2F62BBBBA0F5B94' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, Timeline_1__Direction_A6851F2D4FC4B90BC2F62BBBBA0F5B94) == 0x0003A0, "Member 'ABP_AJBCrimsonDimensionAffecter_C::Timeline_1__Direction_A6851F2D4FC4B90BC2F62BBBBA0F5B94' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, Timeline_1) == 0x0003A8, "Member 'ABP_AJBCrimsonDimensionAffecter_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, Timeline_0_Transition_Line_PanTime_BDF3497A43F47F925F6159A1BA651202) == 0x0003B0, "Member 'ABP_AJBCrimsonDimensionAffecter_C::Timeline_0_Transition_Line_PanTime_BDF3497A43F47F925F6159A1BA651202' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, Timeline_0_Flash_Opacity_BDF3497A43F47F925F6159A1BA651202) == 0x0003B4, "Member 'ABP_AJBCrimsonDimensionAffecter_C::Timeline_0_Flash_Opacity_BDF3497A43F47F925F6159A1BA651202' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, Timeline_0_NewTrack_1_BDF3497A43F47F925F6159A1BA651202) == 0x0003B8, "Member 'ABP_AJBCrimsonDimensionAffecter_C::Timeline_0_NewTrack_1_BDF3497A43F47F925F6159A1BA651202' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, Timeline_0_PostProcess_Opacity_BDF3497A43F47F925F6159A1BA651202) == 0x0003BC, "Member 'ABP_AJBCrimsonDimensionAffecter_C::Timeline_0_PostProcess_Opacity_BDF3497A43F47F925F6159A1BA651202' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, Timeline_0__Direction_BDF3497A43F47F925F6159A1BA651202) == 0x0003C0, "Member 'ABP_AJBCrimsonDimensionAffecter_C::Timeline_0__Direction_BDF3497A43F47F925F6159A1BA651202' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, Timeline_0) == 0x0003C8, "Member 'ABP_AJBCrimsonDimensionAffecter_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, DMIDimension) == 0x0003D0, "Member 'ABP_AJBCrimsonDimensionAffecter_C::DMIDimension' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, PPIndexDimension) == 0x0003D8, "Member 'ABP_AJBCrimsonDimensionAffecter_C::PPIndexDimension' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, MT_Dimension) == 0x0003E0, "Member 'ABP_AJBCrimsonDimensionAffecter_C::MT_Dimension' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, DimensionDistance) == 0x0003E8, "Member 'ABP_AJBCrimsonDimensionAffecter_C::DimensionDistance' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, SpeedDownScaleNotOwnerEnv) == 0x0003EC, "Member 'ABP_AJBCrimsonDimensionAffecter_C::SpeedDownScaleNotOwnerEnv' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, AttachedAffecterList) == 0x0003F0, "Member 'ABP_AJBCrimsonDimensionAffecter_C::AttachedAffecterList' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, ActivatedSound) == 0x000400, "Member 'ABP_AJBCrimsonDimensionAffecter_C::ActivatedSound' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, DamageDetectionCD) == 0x000408, "Member 'ABP_AJBCrimsonDimensionAffecter_C::DamageDetectionCD' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, LockSkillClassListOwner) == 0x000410, "Member 'ABP_AJBCrimsonDimensionAffecter_C::LockSkillClassListOwner' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, LockSkillClassListNotOwner) == 0x000420, "Member 'ABP_AJBCrimsonDimensionAffecter_C::LockSkillClassListNotOwner' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, ProfileNameDamageThrough) == 0x000430, "Member 'ABP_AJBCrimsonDimensionAffecter_C::ProfileNameDamageThrough' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, bDamageEnableByTimeStop) == 0x000438, "Member 'ABP_AJBCrimsonDimensionAffecter_C::bDamageEnableByTimeStop' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, DisableParticleListByTimeStop) == 0x000440, "Member 'ABP_AJBCrimsonDimensionAffecter_C::DisableParticleListByTimeStop' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, CharacterMoveSpeedScaleByStandNotOwnerEnv) == 0x000450, "Member 'ABP_AJBCrimsonDimensionAffecter_C::CharacterMoveSpeedScaleByStandNotOwnerEnv' has a wrong offset!");
static_assert(offsetof(ABP_AJBCrimsonDimensionAffecter_C, MT_Dimension_UnderWater) == 0x000458, "Member 'ABP_AJBCrimsonDimensionAffecter_C::MT_Dimension_UnderWater' has a wrong offset!");

}


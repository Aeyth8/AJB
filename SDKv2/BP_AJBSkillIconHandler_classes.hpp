#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBSkillIconHandler

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AJB_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBSkillIconHandler.BP_AJBSkillIconHandler_C
// 0x0088 (0x0178 - 0x00F0)
class UBP_AJBSkillIconHandler_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F0(0x0008)(Transient, DuplicateTransient)
	class UBP_AJBSkillBase_C*                     TargetSkillComponent;                              // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_SkillIcon_C*                        TargetWidget;                                      // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAJBSkillIconInfo                      SkillIconInfo;                                     // 0x0108(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bUpdateSkillCount;                                 // 0x0140(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           MyUnlockSkillTag;                                  // 0x0148(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CachedSkillTagContainer;                           // 0x0150(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         TickInterval;                                      // 0x0170(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBSkillIconHandler(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void Initialize();
	void SetupSkillComponent(class UBP_AJBSkillBase_C* Component);
	void SetupWidget(class UWB_SkillIcon_C* Widget);
	void OnSkillGrownup(struct FGameplayTag& GameplayTag, float Value, bool* bGrownup);
	void OnSkillNumUpdated(struct FGameplayTag& SkillTag, int32 LeftNum);
	bool TryGetSkillUnlockTag(struct FGameplayTag* OutTag);
	void IsNoUpdateRequiredCounter(bool* bResult);
	void UpdateSkillIcon();
	void GetSkillIcon(class UWB_SkillIcon_C** TargetWidget_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBSkillIconHandler_C">();
	}
	static class UBP_AJBSkillIconHandler_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBSkillIconHandler_C>();
	}
};
static_assert(alignof(UBP_AJBSkillIconHandler_C) == 0x000008, "Wrong alignment on UBP_AJBSkillIconHandler_C");
static_assert(sizeof(UBP_AJBSkillIconHandler_C) == 0x000178, "Wrong size on UBP_AJBSkillIconHandler_C");
static_assert(offsetof(UBP_AJBSkillIconHandler_C, UberGraphFrame) == 0x0000F0, "Member 'UBP_AJBSkillIconHandler_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AJBSkillIconHandler_C, TargetSkillComponent) == 0x0000F8, "Member 'UBP_AJBSkillIconHandler_C::TargetSkillComponent' has a wrong offset!");
static_assert(offsetof(UBP_AJBSkillIconHandler_C, TargetWidget) == 0x000100, "Member 'UBP_AJBSkillIconHandler_C::TargetWidget' has a wrong offset!");
static_assert(offsetof(UBP_AJBSkillIconHandler_C, SkillIconInfo) == 0x000108, "Member 'UBP_AJBSkillIconHandler_C::SkillIconInfo' has a wrong offset!");
static_assert(offsetof(UBP_AJBSkillIconHandler_C, bUpdateSkillCount) == 0x000140, "Member 'UBP_AJBSkillIconHandler_C::bUpdateSkillCount' has a wrong offset!");
static_assert(offsetof(UBP_AJBSkillIconHandler_C, MyUnlockSkillTag) == 0x000148, "Member 'UBP_AJBSkillIconHandler_C::MyUnlockSkillTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBSkillIconHandler_C, CachedSkillTagContainer) == 0x000150, "Member 'UBP_AJBSkillIconHandler_C::CachedSkillTagContainer' has a wrong offset!");
static_assert(offsetof(UBP_AJBSkillIconHandler_C, TickInterval) == 0x000170, "Member 'UBP_AJBSkillIconHandler_C::TickInterval' has a wrong offset!");

}


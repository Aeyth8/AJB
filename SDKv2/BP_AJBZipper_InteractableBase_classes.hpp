#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBZipper_InteractableBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_AJBZipper_Base_classes.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C
// 0x0040 (0x03C8 - 0x0388)
class ABP_AJBZipper_InteractableBase_C : public ABP_AJBZipper_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBZipper_InteractableBase_C;    // 0x0388(0x0008)(Transient, DuplicateTransient)
	class UBP_AJBInGameLifeTime_C*                BP_AJBInGameLifeTime;                              // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          InteractTriggerOrigin;                             // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnOpenCloseAnimationFinished_0;                    // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         InteractionBuffer;                                 // 0x03B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocationOfInjectionOrigin;                         // 0x03B4(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLocal_Interactable;                               // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1[0x3];                                      // 0x03C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LifeTime;                                          // 0x03C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void OnOpenCloseAnimationFinished_0__DelegateSignature();
	void ExecuteUbergraph_BP_AJBZipper_InteractableBase(int32 EntryPoint);
	void MC_DisableInteract();
	void OnLifeTimeElapsed(class AActor* DestroyingActor);
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void OnInteractionBlocked(class AActor* InteractingActor);
	void OnSucceededLongPress_Local();
	void OnROSInteract(class AActor* InteractingActor, bool ServerIsInteractingPlayer);
	void OnInteract(class AActor* InteractActor);
	struct FVector GetLocationOfInjection(class UStaticMeshComponent* Mesh);
	void DisableInteractLocally();
	bool Interactable(class ABP_AJBInGameCharacter_C* Character, float TraceLength);
	bool InteractInstantly(class ABP_AJBInGameCharacter_C* Character);
	void TryGetInteractableText(class ABP_AJBInGameCharacter_C* OperatorCharacter, bool* bSuccess, class FText* InteractMessage);
	void CheckErrorCondition(bool* bErrorCondition, uint8* ErrorType);
	void OnLocalInteract(class AActor* InteractingActor, bool* bSuccess);
	void GetInteractState(uint8* InteractState);
	void GetInteractPriority(int32* Priority);
	void GetInteractBoundForCulling(class AActor* InteractingActor, struct FVector* Center, float* Radius);
	bool IfNeedsExclusiveInteractStrictly();
	bool IfBlockInteract(class AActor* InteractingActor);
	void ReceiveBeginPlay();
	void ShouldPrioritizedThanPrepaidSkillCancel(bool* bShouldPriorirized);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBZipper_InteractableBase_C">();
	}
	static class ABP_AJBZipper_InteractableBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBZipper_InteractableBase_C>();
	}
};
static_assert(alignof(ABP_AJBZipper_InteractableBase_C) == 0x000008, "Wrong alignment on ABP_AJBZipper_InteractableBase_C");
static_assert(sizeof(ABP_AJBZipper_InteractableBase_C) == 0x0003C8, "Wrong size on ABP_AJBZipper_InteractableBase_C");
static_assert(offsetof(ABP_AJBZipper_InteractableBase_C, UberGraphFrame_BP_AJBZipper_InteractableBase_C) == 0x000388, "Member 'ABP_AJBZipper_InteractableBase_C::UberGraphFrame_BP_AJBZipper_InteractableBase_C' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_InteractableBase_C, BP_AJBInGameLifeTime) == 0x000390, "Member 'ABP_AJBZipper_InteractableBase_C::BP_AJBInGameLifeTime' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_InteractableBase_C, InteractTriggerOrigin) == 0x000398, "Member 'ABP_AJBZipper_InteractableBase_C::InteractTriggerOrigin' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_InteractableBase_C, OnOpenCloseAnimationFinished_0) == 0x0003A0, "Member 'ABP_AJBZipper_InteractableBase_C::OnOpenCloseAnimationFinished_0' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_InteractableBase_C, InteractionBuffer) == 0x0003B0, "Member 'ABP_AJBZipper_InteractableBase_C::InteractionBuffer' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_InteractableBase_C, LocationOfInjectionOrigin) == 0x0003B4, "Member 'ABP_AJBZipper_InteractableBase_C::LocationOfInjectionOrigin' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_InteractableBase_C, bLocal_Interactable) == 0x0003C0, "Member 'ABP_AJBZipper_InteractableBase_C::bLocal_Interactable' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_InteractableBase_C, LifeTime) == 0x0003C4, "Member 'ABP_AJBZipper_InteractableBase_C::LifeTime' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_SkillPartsTimer

#include "Basic.hpp"


namespace SDK::Params
{

// Function WB_SkillPartsTimer.WB_SkillPartsTimer_C.ExecuteUbergraph_WB_SkillPartsTimer
// 0x0028 (0x0028 - 0x0000)
struct WB_SkillPartsTimer_C_ExecuteUbergraph_WB_SkillPartsTimer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Value;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bColorTypeRed;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0010(0x0018)()
};
static_assert(alignof(WB_SkillPartsTimer_C_ExecuteUbergraph_WB_SkillPartsTimer) == 0x000008, "Wrong alignment on WB_SkillPartsTimer_C_ExecuteUbergraph_WB_SkillPartsTimer");
static_assert(sizeof(WB_SkillPartsTimer_C_ExecuteUbergraph_WB_SkillPartsTimer) == 0x000028, "Wrong size on WB_SkillPartsTimer_C_ExecuteUbergraph_WB_SkillPartsTimer");
static_assert(offsetof(WB_SkillPartsTimer_C_ExecuteUbergraph_WB_SkillPartsTimer, EntryPoint) == 0x000000, "Member 'WB_SkillPartsTimer_C_ExecuteUbergraph_WB_SkillPartsTimer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_SkillPartsTimer_C_ExecuteUbergraph_WB_SkillPartsTimer, K2Node_CustomEvent_Value) == 0x000004, "Member 'WB_SkillPartsTimer_C_ExecuteUbergraph_WB_SkillPartsTimer::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(WB_SkillPartsTimer_C_ExecuteUbergraph_WB_SkillPartsTimer, CallFunc_FMax_ReturnValue) == 0x000008, "Member 'WB_SkillPartsTimer_C_ExecuteUbergraph_WB_SkillPartsTimer::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillPartsTimer_C_ExecuteUbergraph_WB_SkillPartsTimer, K2Node_CustomEvent_bColorTypeRed) == 0x00000C, "Member 'WB_SkillPartsTimer_C_ExecuteUbergraph_WB_SkillPartsTimer::K2Node_CustomEvent_bColorTypeRed' has a wrong offset!");
static_assert(offsetof(WB_SkillPartsTimer_C_ExecuteUbergraph_WB_SkillPartsTimer, CallFunc_Conv_FloatToText_ReturnValue) == 0x000010, "Member 'WB_SkillPartsTimer_C_ExecuteUbergraph_WB_SkillPartsTimer::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function WB_SkillPartsTimer.WB_SkillPartsTimer_C.ChangeColorType
// 0x0001 (0x0001 - 0x0000)
struct WB_SkillPartsTimer_C_ChangeColorType final
{
public:
	bool                                          bColorTypeRed;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_SkillPartsTimer_C_ChangeColorType) == 0x000001, "Wrong alignment on WB_SkillPartsTimer_C_ChangeColorType");
static_assert(sizeof(WB_SkillPartsTimer_C_ChangeColorType) == 0x000001, "Wrong size on WB_SkillPartsTimer_C_ChangeColorType");
static_assert(offsetof(WB_SkillPartsTimer_C_ChangeColorType, bColorTypeRed) == 0x000000, "Member 'WB_SkillPartsTimer_C_ChangeColorType::bColorTypeRed' has a wrong offset!");

// Function WB_SkillPartsTimer.WB_SkillPartsTimer_C.UpdateTimer
// 0x0004 (0x0004 - 0x0000)
struct WB_SkillPartsTimer_C_UpdateTimer final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SkillPartsTimer_C_UpdateTimer) == 0x000004, "Wrong alignment on WB_SkillPartsTimer_C_UpdateTimer");
static_assert(sizeof(WB_SkillPartsTimer_C_UpdateTimer) == 0x000004, "Wrong size on WB_SkillPartsTimer_C_UpdateTimer");
static_assert(offsetof(WB_SkillPartsTimer_C_UpdateTimer, Value) == 0x000000, "Member 'WB_SkillPartsTimer_C_UpdateTimer::Value' has a wrong offset!");

}


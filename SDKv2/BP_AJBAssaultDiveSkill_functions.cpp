#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBAssaultDiveSkill

#include "Basic.hpp"

#include "BP_AJBAssaultDiveSkill_classes.hpp"
#include "BP_AJBAssaultDiveSkill_parameters.hpp"


namespace SDK
{

// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.ExecuteUbergraph_BP_AJBAssaultDiveSkill
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAssaultDiveSkill_C::ExecuteUbergraph_BP_AJBAssaultDiveSkill(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "ExecuteUbergraph_BP_AJBAssaultDiveSkill");

	Params::BP_AJBAssaultDiveSkill_C_ExecuteUbergraph_BP_AJBAssaultDiveSkill Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnGiveDamage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageReceiver                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRemainHP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDamageIsCut                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   SerialNumber_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DamageReceiverIsPlayer                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bWithSeparatedStandAttack                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bEnemysSeparateStand                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBAssaultDiveSkill_C::OnGiveDamage(int32 Damage_0, const struct FGameplayTag& DamageType, class AActor* DamageReceiver, bool bRemainHP, bool bDamageIsCut, int32 SerialNumber_0, bool DamageReceiverIsPlayer, bool bWithSeparatedStandAttack, bool bEnemysSeparateStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnGiveDamage");

	Params::BP_AJBAssaultDiveSkill_C_OnGiveDamage Parms{};

	Parms.Damage_0 = Damage_0;
	Parms.DamageType = std::move(DamageType);
	Parms.DamageReceiver = DamageReceiver;
	Parms.bRemainHP = bRemainHP;
	Parms.bDamageIsCut = bDamageIsCut;
	Parms.SerialNumber_0 = SerialNumber_0;
	Parms.DamageReceiverIsPlayer = DamageReceiverIsPlayer;
	Parms.bWithSeparatedStandAttack = bWithSeparatedStandAttack;
	Parms.bEnemysSeparateStand = bEnemysSeparateStand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnClientMovableStandRestarted
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::OnClientMovableStandRestarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnClientMovableStandRestarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnCharacterClientRestarted
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::OnCharacterClientRestarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnCharacterClientRestarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnDisconnected
// (Event, Public, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::OnDisconnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnDisconnected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.FinishMeasuringMoveDistance
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::FinishMeasuringMoveDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "FinishMeasuringMoveDistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.StartMeasuringMoveDistance
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::StartMeasuringMoveDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "StartMeasuringMoveDistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnTick_MeasureMoveDistance
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::OnTick_MeasureMoveDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnTick_MeasureMoveDistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.StopMovingSE
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::StopMovingSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "StopMovingSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnBeginState_Ready_OneShot
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::OnBeginState_Ready_OneShot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnBeginState_Ready_OneShot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.TickState_Action
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAssaultDiveSkill_C::TickState_Action(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "TickState_Action");

	Params::BP_AJBAssaultDiveSkill_C_TickState_Action Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnBeginState_Action
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::OnBeginState_Action()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnBeginState_Action");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnBeginState_Action_OneShot
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::OnBeginState_Action_OneShot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnBeginState_Action_OneShot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.MC_BeginState_Action
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::MC_BeginState_Action()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "MC_BeginState_Action");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.ROS_BeginState_Action
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::ROS_BeginState_Action()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "ROS_BeginState_Action");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.BeginState_Action
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::BeginState_Action()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "BeginState_Action");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.StateRenaturation_ActionWaiting
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::StateRenaturation_ActionWaiting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "StateRenaturation_ActionWaiting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.TickState_ActionWaiting
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAssaultDiveSkill_C::TickState_ActionWaiting(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "TickState_ActionWaiting");

	Params::BP_AJBAssaultDiveSkill_C_TickState_ActionWaiting Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.MC_BeginState_ActionWaiting
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::MC_BeginState_ActionWaiting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "MC_BeginState_ActionWaiting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.ROS_BeginState_ActionWaiting
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::ROS_BeginState_ActionWaiting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "ROS_BeginState_ActionWaiting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.CustomEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMovementMode                           PrevMovementMode                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   PreviousCustomMode                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAssaultDiveSkill_C::CustomEvent(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "CustomEvent");

	Params::BP_AJBAssaultDiveSkill_C_CustomEvent Parms{};

	Parms.Character = Character;
	Parms.PrevMovementMode = PrevMovementMode;
	Parms.PreviousCustomMode = PreviousCustomMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnBeginState_ActionWaiting
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::OnBeginState_ActionWaiting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnBeginState_ActionWaiting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnBeginState_ActionWaiting_OneShot
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::OnBeginState_ActionWaiting_OneShot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnBeginState_ActionWaiting_OneShot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.BeginState_ActionWaiting
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::BeginState_ActionWaiting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "BeginState_ActionWaiting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.ROC_Possess
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::ROC_Possess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "ROC_Possess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.StateBeginPlay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldRestore                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBAssaultDiveSkill_C::StateBeginPlay(bool bShouldRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "StateBeginPlay");

	Params::BP_AJBAssaultDiveSkill_C_StateBeginPlay Parms{};

	Parms.bShouldRestore = bShouldRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.StateRenaturation_Ready
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::StateRenaturation_Ready()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "StateRenaturation_Ready");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnBeginState_Clearing_OneShot
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::OnBeginState_Clearing_OneShot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnBeginState_Clearing_OneShot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnBeginState_Diving_OneShot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void UBP_AJBAssaultDiveSkill_C::OnBeginState_Diving_OneShot(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnBeginState_Diving_OneShot");

	Params::BP_AJBAssaultDiveSkill_C_OnBeginState_Diving_OneShot Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.MC_StateEnd
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCancel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBAssaultDiveSkill_C::MC_StateEnd(bool bCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "MC_StateEnd");

	Params::BP_AJBAssaultDiveSkill_C_MC_StateEnd Parms{};

	Parms.bCancel = bCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.ROS_StateEnd
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCancel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBAssaultDiveSkill_C::ROS_StateEnd(bool bCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "ROS_StateEnd");

	Params::BP_AJBAssaultDiveSkill_C_ROS_StateEnd Parms{};

	Parms.bCancel = bCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.StateEnd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCancel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBAssaultDiveSkill_C::StateEnd(bool bCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "StateEnd");

	Params::BP_AJBAssaultDiveSkill_C_StateEnd Parms{};

	Parms.bCancel = bCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.MC_BeginState_Clearing
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::MC_BeginState_Clearing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "MC_BeginState_Clearing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.ROS_BeginState_Clearing
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::ROS_BeginState_Clearing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "ROS_BeginState_Clearing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.BeginState_Clearing
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::BeginState_Clearing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "BeginState_Clearing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.MC_BeginState_Diving
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void UBP_AJBAssaultDiveSkill_C::MC_BeginState_Diving(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "MC_BeginState_Diving");

	Params::BP_AJBAssaultDiveSkill_C_MC_BeginState_Diving Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.ROS_BeginState_Diving
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void UBP_AJBAssaultDiveSkill_C::ROS_BeginState_Diving(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "ROS_BeginState_Diving");

	Params::BP_AJBAssaultDiveSkill_C_ROS_BeginState_Diving Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.BeginState_Diving
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::BeginState_Diving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "BeginState_Diving");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.MC_BeginState_Ready
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::MC_BeginState_Ready()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "MC_BeginState_Ready");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.ROS_BeginState_Ready
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::ROS_BeginState_Ready()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "ROS_BeginState_Ready");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.BeginState_Ready
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::BeginState_Ready()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "BeginState_Ready");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.MC_BeginState_Waiting
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::MC_BeginState_Waiting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "MC_BeginState_Waiting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.ROS_BeginState_Waiting
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::ROS_BeginState_Waiting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "ROS_BeginState_Waiting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.BeginState_Waiting
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::BeginState_Waiting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "BeginState_Waiting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnMovementModeChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMovementMode                           PrevMovementMode                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   PreviousCustomMode                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAssaultDiveSkill_C::OnMovementModeChanged(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnMovementModeChanged");

	Params::BP_AJBAssaultDiveSkill_C_OnMovementModeChanged Parms{};

	Parms.Character = Character;
	Parms.PrevMovementMode = PrevMovementMode;
	Parms.PreviousCustomMode = PreviousCustomMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.TickState_Waiting
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAssaultDiveSkill_C::TickState_Waiting(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "TickState_Waiting");

	Params::BP_AJBAssaultDiveSkill_C_TickState_Waiting Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnBeginState_Waiting
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::OnBeginState_Waiting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnBeginState_Waiting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.StateTick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAssaultDiveSkill_C::StateTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "StateTick");

	Params::BP_AJBAssaultDiveSkill_C_StateTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.TickState_Clearing
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAssaultDiveSkill_C::TickState_Clearing(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "TickState_Clearing");

	Params::BP_AJBAssaultDiveSkill_C_TickState_Clearing Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.TickState_Diving
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAssaultDiveSkill_C::TickState_Diving(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "TickState_Diving");

	Params::BP_AJBAssaultDiveSkill_C_TickState_Diving Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.TickState_Ready
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAssaultDiveSkill_C::TickState_Ready(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "TickState_Ready");

	Params::BP_AJBAssaultDiveSkill_C_TickState_Ready Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnStateEnd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCancel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBAssaultDiveSkill_C::OnStateEnd(bool bCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnStateEnd");

	Params::BP_AJBAssaultDiveSkill_C_OnStateEnd Parms{};

	Parms.bCancel = bCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnBeginState_Clearing
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::OnBeginState_Clearing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnBeginState_Clearing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnBeginState_Diving
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRenaturation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBAssaultDiveSkill_C::OnBeginState_Diving(bool bRenaturation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnBeginState_Diving");

	Params::BP_AJBAssaultDiveSkill_C_OnBeginState_Diving Parms{};

	Parms.bRenaturation = bRenaturation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnBeginState_Ready
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::OnBeginState_Ready()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnBeginState_Ready");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnCompleted_7B45FB9D406D5826C78546BC6050DE5C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAssaultDiveSkill_C::OnCompleted_7B45FB9D406D5826C78546BC6050DE5C(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnCompleted_7B45FB9D406D5826C78546BC6050DE5C");

	Params::BP_AJBAssaultDiveSkill_C_OnCompleted_7B45FB9D406D5826C78546BC6050DE5C Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnBlendOut_7B45FB9D406D5826C78546BC6050DE5C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAssaultDiveSkill_C::OnBlendOut_7B45FB9D406D5826C78546BC6050DE5C(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnBlendOut_7B45FB9D406D5826C78546BC6050DE5C");

	Params::BP_AJBAssaultDiveSkill_C_OnBlendOut_7B45FB9D406D5826C78546BC6050DE5C Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnInterrupted_7B45FB9D406D5826C78546BC6050DE5C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAssaultDiveSkill_C::OnInterrupted_7B45FB9D406D5826C78546BC6050DE5C(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnInterrupted_7B45FB9D406D5826C78546BC6050DE5C");

	Params::BP_AJBAssaultDiveSkill_C_OnInterrupted_7B45FB9D406D5826C78546BC6050DE5C Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnNotifyBegin_7B45FB9D406D5826C78546BC6050DE5C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAssaultDiveSkill_C::OnNotifyBegin_7B45FB9D406D5826C78546BC6050DE5C(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnNotifyBegin_7B45FB9D406D5826C78546BC6050DE5C");

	Params::BP_AJBAssaultDiveSkill_C_OnNotifyBegin_7B45FB9D406D5826C78546BC6050DE5C Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnNotifyEnd_7B45FB9D406D5826C78546BC6050DE5C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAssaultDiveSkill_C::OnNotifyEnd_7B45FB9D406D5826C78546BC6050DE5C(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnNotifyEnd_7B45FB9D406D5826C78546BC6050DE5C");

	Params::BP_AJBAssaultDiveSkill_C_OnNotifyEnd_7B45FB9D406D5826C78546BC6050DE5C Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.AdjustTransform
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void UBP_AJBAssaultDiveSkill_C::AdjustTransform(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "AdjustTransform");

	Params::BP_AJBAssaultDiveSkill_C_AdjustTransform Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.UpdatePossibleAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPossibleAction_0                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBAssaultDiveSkill_C::UpdatePossibleAction(bool* bPossibleAction_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "UpdatePossibleAction");

	Params::BP_AJBAssaultDiveSkill_C_UpdatePossibleAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPossibleAction_0 != nullptr)
		*bPossibleAction_0 = Parms.bPossibleAction_0;
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.CheckPossibleAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bPossibleAction_0                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBAssaultDiveSkill_C::CheckPossibleAction(bool* bPossibleAction_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "CheckPossibleAction");

	Params::BP_AJBAssaultDiveSkill_C_CheckPossibleAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPossibleAction_0 != nullptr)
		*bPossibleAction_0 = Parms.bPossibleAction_0;
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.TryChangeShowGuide
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBAssaultDiveSkill_C::TryChangeShowGuide(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "TryChangeShowGuide");

	Params::BP_AJBAssaultDiveSkill_C_TryChangeShowGuide Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.UpdatePossibleActionFlow
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::UpdatePossibleActionFlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "UpdatePossibleActionFlow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.TryCancelWallClimb
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::TryCancelWallClimb()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "TryCancelWallClimb");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.CheckImpossibleMovementMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bImpossibleMovementMode                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBAssaultDiveSkill_C::CheckImpossibleMovementMode(bool* bImpossibleMovementMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "CheckImpossibleMovementMode");

	Params::BP_AJBAssaultDiveSkill_C_CheckImpossibleMovementMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bImpossibleMovementMode != nullptr)
		*bImpossibleMovementMode = Parms.bImpossibleMovementMode;
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.DestroyGroundParticle
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::DestroyGroundParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "DestroyGroundParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.CalcTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBP_AJBAssaultDiveSkill_C::CalcTransform(struct FVector* Location, struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "CalcTransform");

	Params::BP_AJBAssaultDiveSkill_C_CalcTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.ChangeEnableAdditionalShowGuide
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FAJBSkillGuideInfo               GuideInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_AJBAssaultDiveSkill_C::ChangeEnableAdditionalShowGuide(bool bShow, const struct FAJBSkillGuideInfo& GuideInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "ChangeEnableAdditionalShowGuide");

	Params::BP_AJBAssaultDiveSkill_C_ChangeEnableAdditionalShowGuide Parms{};

	Parms.bShow = bShow;
	Parms.GuideInfo = std::move(GuideInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnCancel
// (Event, Public, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::OnCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAssaultDiveSkill_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "ReceiveTick");

	Params::BP_AJBAssaultDiveSkill_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnActive
// (Event, Public, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::OnActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.OnRelatedCharacterBecomeLastSurvivor
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::OnRelatedCharacterBecomeLastSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "OnRelatedCharacterBecomeLastSurvivor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBAssaultDiveSkill_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "NotifyTheWorld");

	Params::BP_AJBAssaultDiveSkill_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveSkill.BP_AJBAssaultDiveSkill_C.InitializeVariables
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBAssaultDiveSkill_C::InitializeVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveSkill_C", "InitializeVariables");

	UObject::ProcessEvent(Func, nullptr);
}

}


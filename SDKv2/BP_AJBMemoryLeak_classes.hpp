#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBMemoryLeak

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AJB_structs.hpp"
#include "BP_AJBLongPressInteract_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBMemoryLeak.BP_AJBMemoryLeak_C
// 0x0030 (0x0230 - 0x0200)
class UBP_AJBMemoryLeak_C final : public UBP_AJBLongPressInteract_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBMemoryLeak_C;                 // 0x0200(0x0008)(Transient, DuplicateTransient)
	TArray<class AActor*>                         InteractedActor;                                   // 0x0208(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	struct FGameplayTag                           DeadBodyEmphasisParticleTag;                       // 0x0218(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UActorComponent*>                EmphasizerComponents;                              // 0x0220(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_AJBMemoryLeak(int32 EntryPoint);
	void PlayLongInteractSE();
	void UpdateErrorTypeUI(uint8 ErrorType);
	void OnLongPressInteractEnded(bool bSuccess, bool bForceCancel, class AActor* InteractActor_0);
	void ActorIsAlreadyInteracted(const class AActor*& Actor, bool* Interacted);
	void BeginInteract(bool* bSuccess);
	void GetPriority(int32* Priority);
	void GetText(bool* bSuccess, class FText* Text);
	void CheckInteractable(class ABP_AJBInGameCharacter_C* OperatorCharacter, class AActor* TargetActor, float BaseTraceLength, bool* bInteractable);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBMemoryLeak_C">();
	}
	static class UBP_AJBMemoryLeak_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBMemoryLeak_C>();
	}
};
static_assert(alignof(UBP_AJBMemoryLeak_C) == 0x000008, "Wrong alignment on UBP_AJBMemoryLeak_C");
static_assert(sizeof(UBP_AJBMemoryLeak_C) == 0x000230, "Wrong size on UBP_AJBMemoryLeak_C");
static_assert(offsetof(UBP_AJBMemoryLeak_C, UberGraphFrame_BP_AJBMemoryLeak_C) == 0x000200, "Member 'UBP_AJBMemoryLeak_C::UberGraphFrame_BP_AJBMemoryLeak_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBMemoryLeak_C, InteractedActor) == 0x000208, "Member 'UBP_AJBMemoryLeak_C::InteractedActor' has a wrong offset!");
static_assert(offsetof(UBP_AJBMemoryLeak_C, DeadBodyEmphasisParticleTag) == 0x000218, "Member 'UBP_AJBMemoryLeak_C::DeadBodyEmphasisParticleTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBMemoryLeak_C, EmphasizerComponents) == 0x000220, "Member 'UBP_AJBMemoryLeak_C::EmphasizerComponents' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SimpleStateMachine

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SimpleStateMachine.SimpleStateMachine_C
// 0x0040 (0x0130 - 0x00F0)
class USimpleStateMachine_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F0(0x0008)(Transient, DuplicateTransient)
	class FName                                   CurrentState;                                      // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PreviousState;                                     // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NextState;                                         // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DefaultStateIndex;                                 // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           StateCollection;                                   // 0x0118(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	bool                                          DebugLogEnabled;                                   // 0x0128(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ElapsedTime;                                       // 0x012C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_SimpleStateMachine(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void ChangeState(class FName State);
	void Tick();
	void IsInState(class FName State, bool* Result);
	void ResetElapsedTime();
	void GetElapsedTime(float* Elapsed_Time);
	void ChangeStateViaIndex(int32 Idx);
	void GetCurrentState(class FName* CurrentState_0);
	void GetNextState(class FName* NextState_0);
	void GetPreviousState(class FName* Previous_State);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SimpleStateMachine_C">();
	}
	static class USimpleStateMachine_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USimpleStateMachine_C>();
	}
};
static_assert(alignof(USimpleStateMachine_C) == 0x000008, "Wrong alignment on USimpleStateMachine_C");
static_assert(sizeof(USimpleStateMachine_C) == 0x000130, "Wrong size on USimpleStateMachine_C");
static_assert(offsetof(USimpleStateMachine_C, UberGraphFrame) == 0x0000F0, "Member 'USimpleStateMachine_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USimpleStateMachine_C, CurrentState) == 0x0000F8, "Member 'USimpleStateMachine_C::CurrentState' has a wrong offset!");
static_assert(offsetof(USimpleStateMachine_C, PreviousState) == 0x000100, "Member 'USimpleStateMachine_C::PreviousState' has a wrong offset!");
static_assert(offsetof(USimpleStateMachine_C, NextState) == 0x000108, "Member 'USimpleStateMachine_C::NextState' has a wrong offset!");
static_assert(offsetof(USimpleStateMachine_C, DefaultStateIndex) == 0x000110, "Member 'USimpleStateMachine_C::DefaultStateIndex' has a wrong offset!");
static_assert(offsetof(USimpleStateMachine_C, StateCollection) == 0x000118, "Member 'USimpleStateMachine_C::StateCollection' has a wrong offset!");
static_assert(offsetof(USimpleStateMachine_C, DebugLogEnabled) == 0x000128, "Member 'USimpleStateMachine_C::DebugLogEnabled' has a wrong offset!");
static_assert(offsetof(USimpleStateMachine_C, ElapsedTime) == 0x00012C, "Member 'USimpleStateMachine_C::ElapsedTime' has a wrong offset!");

}


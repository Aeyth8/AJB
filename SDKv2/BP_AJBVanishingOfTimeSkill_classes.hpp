#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBVanishingOfTimeSkill

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_AJBBlockingRushSkill_classes.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBVanishingOfTimeSkill.BP_AJBVanishingOfTimeSkill_C
// 0x0148 (0x03F0 - 0x02A8)
class UBP_AJBVanishingOfTimeSkill_C final : public UBP_AJBBlockingRushSkill_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBVanishingOfTimeSkill_C;       // 0x02A8(0x0008)(Transient, DuplicateTransient)
	float                                         PreActionTime;                                     // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           AM_CharacterPreAction;                             // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ClearingTime;                                      // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementDistance;                                  // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraTurnSpeed;                                   // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraLookupSpeed;                                 // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TempSidingRemovedFactorTag;                        // 0x02D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TempSidingRemovedFactorValue;                      // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           AM_StandPreAction;                                 // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BeforeLocationCache;                               // 0x02E8(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBVanishingOfTimeArrowPreview_C*   ArrowPreview;                                      // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBVanishingOfTimeAfterMovementPreview_C* AfterMovementPreview;                              // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_308[0x8];                                      // 0x0308(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             DecidedArrowTransform;                             // 0x0310(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             DecidedAfterMovementTransform;                     // 0x0340(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AActor*                                 DamageOwner;                                       // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ObjectTypesPlayer;                                 // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         CalcNumArroundLocation;                            // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CalcArroundIncScale;                               // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdmitHeightAsSmallObstacle;                        // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CalcNumSkyLocation;                                // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugDrawCalcLocation;                            // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399[0x3];                                      // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DebugPrintDuration;                                // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CalcNumFarDistance;                                // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementDistanceFar;                               // 0x03A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CalcNumNearDistance;                               // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVOTTest;                                          // 0x03AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AD[0x3];                                      // 0x03AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      ObjectTypesObstacle;                               // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<EObjectTypeQuery>                      ObjectTypesObstacleIncludesPlayer;                 // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         CalcPositionsInterval;                             // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CheckObstacleRadius;                               // 0x03D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementDistanceScale;                             // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ClearingStateCollisionChangedTime;                 // 0x03DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAlreadyPassedChangedCollisionTiming;              // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CalcCountMax;                                      // 0x03E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ToleranceValueAsSameLocation;                      // 0x03E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSeparateStandAttack;                              // 0x03EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_AJBVanishingOfTimeSkill(int32 EntryPoint);
	void ChangeMovementDistanceScale(float Value);
	void OnBlocking(bool bReflect, bool bIsPairAttack, class AActor* DamageOwner_0, bool bSeparateStandAttack_0);
	void TickStateClearing();
	void TickStatePreAction();
	void MC_BeginStateAction(const struct FVector& BeforeLocation, const struct FVector& AfterLocation);
	void ROS_BeginStateAction(const struct FVector& BeforeLocation, const struct FVector& AfterLocation);
	void OnBeginStateClearing();
	void OnBeginStateAction();
	void OnBeginStateActionOneShot(const struct FVector& BeforeLocation, const struct FVector& AfterLocation);
	void BeginStateAction();
	void MC_BeginStatePreAction();
	void ROS_BeginStatePreAction();
	void OnBeginStatePreActionOneShot();
	void OnBeginStatePreAction();
	void BeginStatePreAction();
	void ChangeCharacterMoveSpeedByStand(float Value);
	void ChangeStandLaunchVelocityScale(float Value);
	void ChangeStandMovementDistanceScale(float Value);
	void OnCompleted_7DDD297442D7CC4375E0C99B59D797A8(class FName NotifyName);
	void OnBlendOut_7DDD297442D7CC4375E0C99B59D797A8(class FName NotifyName);
	void OnInterrupted_7DDD297442D7CC4375E0C99B59D797A8(class FName NotifyName);
	void OnNotifyBegin_7DDD297442D7CC4375E0C99B59D797A8(class FName NotifyName);
	void OnNotifyEnd_7DDD297442D7CC4375E0C99B59D797A8(class FName NotifyName);
	void OnCompleted_7B45FB9D406D5826C78546BC49811188(class FName NotifyName);
	void OnBlendOut_7B45FB9D406D5826C78546BC49811188(class FName NotifyName);
	void OnInterrupted_7B45FB9D406D5826C78546BC49811188(class FName NotifyName);
	void OnNotifyBegin_7B45FB9D406D5826C78546BC49811188(class FName NotifyName);
	void OnNotifyEnd_7B45FB9D406D5826C78546BC49811188(class FName NotifyName);
	void CheckBlockingPhase(bool* bBlockingPhase);
	void CalcAfterMovementTransform(struct FTransform* PreviewTransform);
	void TrySpawnPreviewObjects();
	void TryDestroyPreviewObject();
	void CalcArrowTransform(struct FTransform* PreviewTransform);
	void UpdateArrowTransform();
	void UpdateAfterMovementPreview();
	void UpdatePreviewObjects();
	void UpdateStandMeshTransform();
	void CalcLocationServer(const struct FVector& AfterLocation, struct FVector* NewLocation, bool* bPossible);
	void CalcCameraRotationAfterMovement(const struct FVector& AfterLocation, struct FRotator* Rotation);
	void ChangeEnableCameraLag(bool bEnable, float LagSpeed);
	void CheckLocation(const struct FVector& CurrentLocation, float DistanceFromOwner, bool* bSuccess, struct FVector* Location);
	void CheckArroundLocation(const struct FVector& Location, TArray<EObjectTypeQuery>& ObjectTypes, bool* bSuccess, struct FVector* SafeLocation, class AActor** HitActor);
	void CheckDetectedCharacter(class ABP_AJBInGameCharacter_C* CharacterBP, bool* bDetectedCharacter);
	void CheckObstacle(const struct FVector& CurrentLocation, float DistanceFromOwner, TArray<EObjectTypeQuery>& ObjectTypes, bool bConsiderObstacleRadius, bool* bHitCharacter, bool* bHitObstacle, float* HitDistance);
	void UpdateArrowPreview();
	void GetPoliticMovementDistance(float* Distance);
	void ChangeEnableDamage(bool bEnable);
	void CalcAfterMovementTransformCore(const struct FVector& CurrentLocation, float MovementDistanceValue, bool* bSuccess, struct FVector* DecidedLocation);
	void CheckSlope(bool* bSlope);
	void PossibleVanishing(class AActor* DamageOwner_0, bool* bPossible);
	void StateEnd(bool bCancel);
	void StateTick(float DeltaSeconds);
	void OnStateEnd(bool bCancel);
	void InitializeVariables();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBVanishingOfTimeSkill_C">();
	}
	static class UBP_AJBVanishingOfTimeSkill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBVanishingOfTimeSkill_C>();
	}
};
static_assert(alignof(UBP_AJBVanishingOfTimeSkill_C) == 0x000010, "Wrong alignment on UBP_AJBVanishingOfTimeSkill_C");
static_assert(sizeof(UBP_AJBVanishingOfTimeSkill_C) == 0x0003F0, "Wrong size on UBP_AJBVanishingOfTimeSkill_C");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, UberGraphFrame_BP_AJBVanishingOfTimeSkill_C) == 0x0002A8, "Member 'UBP_AJBVanishingOfTimeSkill_C::UberGraphFrame_BP_AJBVanishingOfTimeSkill_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, PreActionTime) == 0x0002B0, "Member 'UBP_AJBVanishingOfTimeSkill_C::PreActionTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, AM_CharacterPreAction) == 0x0002B8, "Member 'UBP_AJBVanishingOfTimeSkill_C::AM_CharacterPreAction' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, ClearingTime) == 0x0002C0, "Member 'UBP_AJBVanishingOfTimeSkill_C::ClearingTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, MovementDistance) == 0x0002C4, "Member 'UBP_AJBVanishingOfTimeSkill_C::MovementDistance' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, CameraTurnSpeed) == 0x0002C8, "Member 'UBP_AJBVanishingOfTimeSkill_C::CameraTurnSpeed' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, CameraLookupSpeed) == 0x0002CC, "Member 'UBP_AJBVanishingOfTimeSkill_C::CameraLookupSpeed' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, TempSidingRemovedFactorTag) == 0x0002D0, "Member 'UBP_AJBVanishingOfTimeSkill_C::TempSidingRemovedFactorTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, TempSidingRemovedFactorValue) == 0x0002D8, "Member 'UBP_AJBVanishingOfTimeSkill_C::TempSidingRemovedFactorValue' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, AM_StandPreAction) == 0x0002E0, "Member 'UBP_AJBVanishingOfTimeSkill_C::AM_StandPreAction' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, BeforeLocationCache) == 0x0002E8, "Member 'UBP_AJBVanishingOfTimeSkill_C::BeforeLocationCache' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, ArrowPreview) == 0x0002F8, "Member 'UBP_AJBVanishingOfTimeSkill_C::ArrowPreview' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, AfterMovementPreview) == 0x000300, "Member 'UBP_AJBVanishingOfTimeSkill_C::AfterMovementPreview' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, DecidedArrowTransform) == 0x000310, "Member 'UBP_AJBVanishingOfTimeSkill_C::DecidedArrowTransform' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, DecidedAfterMovementTransform) == 0x000340, "Member 'UBP_AJBVanishingOfTimeSkill_C::DecidedAfterMovementTransform' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, DamageOwner) == 0x000370, "Member 'UBP_AJBVanishingOfTimeSkill_C::DamageOwner' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, ObjectTypesPlayer) == 0x000378, "Member 'UBP_AJBVanishingOfTimeSkill_C::ObjectTypesPlayer' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, CalcNumArroundLocation) == 0x000388, "Member 'UBP_AJBVanishingOfTimeSkill_C::CalcNumArroundLocation' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, CalcArroundIncScale) == 0x00038C, "Member 'UBP_AJBVanishingOfTimeSkill_C::CalcArroundIncScale' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, AdmitHeightAsSmallObstacle) == 0x000390, "Member 'UBP_AJBVanishingOfTimeSkill_C::AdmitHeightAsSmallObstacle' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, CalcNumSkyLocation) == 0x000394, "Member 'UBP_AJBVanishingOfTimeSkill_C::CalcNumSkyLocation' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, bDebugDrawCalcLocation) == 0x000398, "Member 'UBP_AJBVanishingOfTimeSkill_C::bDebugDrawCalcLocation' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, DebugPrintDuration) == 0x00039C, "Member 'UBP_AJBVanishingOfTimeSkill_C::DebugPrintDuration' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, CalcNumFarDistance) == 0x0003A0, "Member 'UBP_AJBVanishingOfTimeSkill_C::CalcNumFarDistance' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, MovementDistanceFar) == 0x0003A4, "Member 'UBP_AJBVanishingOfTimeSkill_C::MovementDistanceFar' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, CalcNumNearDistance) == 0x0003A8, "Member 'UBP_AJBVanishingOfTimeSkill_C::CalcNumNearDistance' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, bVOTTest) == 0x0003AC, "Member 'UBP_AJBVanishingOfTimeSkill_C::bVOTTest' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, ObjectTypesObstacle) == 0x0003B0, "Member 'UBP_AJBVanishingOfTimeSkill_C::ObjectTypesObstacle' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, ObjectTypesObstacleIncludesPlayer) == 0x0003C0, "Member 'UBP_AJBVanishingOfTimeSkill_C::ObjectTypesObstacleIncludesPlayer' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, CalcPositionsInterval) == 0x0003D0, "Member 'UBP_AJBVanishingOfTimeSkill_C::CalcPositionsInterval' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, CheckObstacleRadius) == 0x0003D4, "Member 'UBP_AJBVanishingOfTimeSkill_C::CheckObstacleRadius' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, MovementDistanceScale) == 0x0003D8, "Member 'UBP_AJBVanishingOfTimeSkill_C::MovementDistanceScale' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, ClearingStateCollisionChangedTime) == 0x0003DC, "Member 'UBP_AJBVanishingOfTimeSkill_C::ClearingStateCollisionChangedTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, bAlreadyPassedChangedCollisionTiming) == 0x0003E0, "Member 'UBP_AJBVanishingOfTimeSkill_C::bAlreadyPassedChangedCollisionTiming' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, CalcCountMax) == 0x0003E4, "Member 'UBP_AJBVanishingOfTimeSkill_C::CalcCountMax' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, ToleranceValueAsSameLocation) == 0x0003E8, "Member 'UBP_AJBVanishingOfTimeSkill_C::ToleranceValueAsSameLocation' has a wrong offset!");
static_assert(offsetof(UBP_AJBVanishingOfTimeSkill_C, bSeparateStandAttack) == 0x0003EC, "Member 'UBP_AJBVanishingOfTimeSkill_C::bSeparateStandAttack' has a wrong offset!");

}


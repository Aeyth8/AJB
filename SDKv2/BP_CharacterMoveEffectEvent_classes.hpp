#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterMoveEffectEvent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CharacterMoveEffectEvent.BP_CharacterMoveEffectEvent_C
// 0x0060 (0x0150 - 0x00F0)
class UBP_CharacterMoveEffectEvent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F0(0x0008)(Transient, DuplicateTransient)
	UMulticastDelegateProperty_                   OnRunEffect;                                       // 0x00F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnJumpEffect;                                      // 0x0108(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsJumpEffect;                                      // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnLandingEffect;                                   // 0x0120(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FGameplayTag                           JumpGionType;                                      // 0x0130(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           RunGionType;                                       // 0x0138(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastCheckLocation;                                 // 0x0140(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceThreshold;                                 // 0x014C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnRunEffect__DelegateSignature();
	void OnJumpEffect__DelegateSignature();
	void OnLandingEffect__DelegateSignature();
	void ExecuteUbergraph_BP_CharacterMoveEffectEvent(int32 EntryPoint);
	void JumpEffect();
	void RunEffect();
	void ReceiveTick(float DeltaSeconds);
	void RequestGionOwnerLocation(const struct FGameplayTag& EffectType, bool IsLocalOnly);
	void UpdateMoveEffect(class ABP_AJBInGameCharacter_C* OwnerCharacter);
	void RequestAIGionOwnerLocation(const struct FGameplayTag& EffectType);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CharacterMoveEffectEvent_C">();
	}
	static class UBP_CharacterMoveEffectEvent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CharacterMoveEffectEvent_C>();
	}
};
static_assert(alignof(UBP_CharacterMoveEffectEvent_C) == 0x000008, "Wrong alignment on UBP_CharacterMoveEffectEvent_C");
static_assert(sizeof(UBP_CharacterMoveEffectEvent_C) == 0x000150, "Wrong size on UBP_CharacterMoveEffectEvent_C");
static_assert(offsetof(UBP_CharacterMoveEffectEvent_C, UberGraphFrame) == 0x0000F0, "Member 'UBP_CharacterMoveEffectEvent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_CharacterMoveEffectEvent_C, OnRunEffect) == 0x0000F8, "Member 'UBP_CharacterMoveEffectEvent_C::OnRunEffect' has a wrong offset!");
static_assert(offsetof(UBP_CharacterMoveEffectEvent_C, OnJumpEffect) == 0x000108, "Member 'UBP_CharacterMoveEffectEvent_C::OnJumpEffect' has a wrong offset!");
static_assert(offsetof(UBP_CharacterMoveEffectEvent_C, IsJumpEffect) == 0x000118, "Member 'UBP_CharacterMoveEffectEvent_C::IsJumpEffect' has a wrong offset!");
static_assert(offsetof(UBP_CharacterMoveEffectEvent_C, OnLandingEffect) == 0x000120, "Member 'UBP_CharacterMoveEffectEvent_C::OnLandingEffect' has a wrong offset!");
static_assert(offsetof(UBP_CharacterMoveEffectEvent_C, JumpGionType) == 0x000130, "Member 'UBP_CharacterMoveEffectEvent_C::JumpGionType' has a wrong offset!");
static_assert(offsetof(UBP_CharacterMoveEffectEvent_C, RunGionType) == 0x000138, "Member 'UBP_CharacterMoveEffectEvent_C::RunGionType' has a wrong offset!");
static_assert(offsetof(UBP_CharacterMoveEffectEvent_C, LastCheckLocation) == 0x000140, "Member 'UBP_CharacterMoveEffectEvent_C::LastCheckLocation' has a wrong offset!");
static_assert(offsetof(UBP_CharacterMoveEffectEvent_C, DistanceThreshold) == 0x00014C, "Member 'UBP_CharacterMoveEffectEvent_C::DistanceThreshold' has a wrong offset!");

}


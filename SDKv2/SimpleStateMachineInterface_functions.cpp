#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SimpleStateMachineInterface

#include "Basic.hpp"

#include "SimpleStateMachineInterface_classes.hpp"
#include "SimpleStateMachineInterface_parameters.hpp"


namespace SDK
{

// Function SimpleStateMachineInterface.SimpleStateMachineInterface_C.State Begin
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             State_Machine                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISimpleStateMachineInterface_C::State_Begin(class FName State, class FName State_Machine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleStateMachineInterface_C", "State Begin");

	Params::SimpleStateMachineInterface_C_State_Begin Parms{};

	Parms.State = State;
	Parms.State_Machine = State_Machine;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SimpleStateMachineInterface.SimpleStateMachineInterface_C.State Update
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             State_Machine                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISimpleStateMachineInterface_C::State_Update(class FName State, class FName State_Machine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleStateMachineInterface_C", "State Update");

	Params::SimpleStateMachineInterface_C_State_Update Parms{};

	Parms.State = State;
	Parms.State_Machine = State_Machine;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SimpleStateMachineInterface.SimpleStateMachineInterface_C.State End
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             State_Machine                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISimpleStateMachineInterface_C::State_End(class FName State, class FName State_Machine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleStateMachineInterface_C", "State End");

	Params::SimpleStateMachineInterface_C_State_End Parms{};

	Parms.State = State;
	Parms.State_Machine = State_Machine;

	UObject::ProcessEvent(Func, &Parms);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBFirstBombImpulsePlayer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AJBFirstBombImpulse_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBFirstBombImpulsePlayer.BP_AJBFirstBombImpulsePlayer_C
// 0x0010 (0x0470 - 0x0460)
class ABP_AJBFirstBombImpulsePlayer_C final : public ABP_AJBFirstBombImpulse_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBFirstBombImpulsePlayer_C;     // 0x0460(0x0008)(Transient, DuplicateTransient)
	class AActor*                                 TargetActor;                                       // 0x0468(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBFirstBombImpulsePlayer(int32 EntryPoint);
	void CheckDamagedActorOnly(class AActor* DamagedActor, bool* bDamagedActorOnly);
	void UserConstructionScript();
	void ShouldAddDamage(class AActor* DamagedActor, class AActor* DamageCauser, bool* bShouldAddDamage);
	void ShouldAddPassive(class AActor* DamagedActor, class AActor* DamageCauser, bool* bShouldAddPassive);
	void RequestImpulseGion();
	void CheckDamage(class AActor* DamagedActor, class AActor* DamageCauser, bool* bNoDamage);
	void RequestActiveParticle();
	void GetPoliticPassiveTagOnDamage(class AActor* DamagedActor, struct FGameplayTag* PassiveTagOnDamage_0);
	void ShouldDamageOverlap(class AActor* DamagedActor, class AActor* DamageCauser, bool* bShouldOverlap);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBFirstBombImpulsePlayer_C">();
	}
	static class ABP_AJBFirstBombImpulsePlayer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBFirstBombImpulsePlayer_C>();
	}
};
static_assert(alignof(ABP_AJBFirstBombImpulsePlayer_C) == 0x000008, "Wrong alignment on ABP_AJBFirstBombImpulsePlayer_C");
static_assert(sizeof(ABP_AJBFirstBombImpulsePlayer_C) == 0x000470, "Wrong size on ABP_AJBFirstBombImpulsePlayer_C");
static_assert(offsetof(ABP_AJBFirstBombImpulsePlayer_C, UberGraphFrame_BP_AJBFirstBombImpulsePlayer_C) == 0x000460, "Member 'ABP_AJBFirstBombImpulsePlayer_C::UberGraphFrame_BP_AJBFirstBombImpulsePlayer_C' has a wrong offset!");
static_assert(offsetof(ABP_AJBFirstBombImpulsePlayer_C, TargetActor) == 0x000468, "Member 'ABP_AJBFirstBombImpulsePlayer_C::TargetActor' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBStringJailSkill

#include "Basic.hpp"

#include "BP_AJBStringJailSkill_classes.hpp"
#include "BP_AJBStringJailSkill_parameters.hpp"


namespace SDK
{

// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.OnPlaySkillBeginAnimation__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_AJBStringJailSkill_C::OnPlaySkillBeginAnimation__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailSkill_C", "OnPlaySkillBeginAnimation__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.ExecuteUbergraph_BP_AJBStringJailSkill
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBStringJailSkill_C::ExecuteUbergraph_BP_AJBStringJailSkill(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailSkill_C", "ExecuteUbergraph_BP_AJBStringJailSkill");

	Params::BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.OnMultipleHit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EAJBSkillType                           SkillType_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   HittedCharacterCount                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   BlockedCharacterCount                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InvalidatedCharacterCount                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBStringJailSkill_C::OnMultipleHit(EAJBSkillType SkillType_0, int32 HittedCharacterCount, int32 BlockedCharacterCount, int32 InvalidatedCharacterCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailSkill_C", "OnMultipleHit");

	Params::BP_AJBStringJailSkill_C_OnMultipleHit Parms{};

	Parms.SkillType_0 = SkillType_0;
	Parms.HittedCharacterCount = HittedCharacterCount;
	Parms.BlockedCharacterCount = BlockedCharacterCount;
	Parms.InvalidatedCharacterCount = InvalidatedCharacterCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.PlayNetScaleAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBStringJailSkill_C::PlayNetScaleAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailSkill_C", "PlayNetScaleAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.SetNetVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBStringJailSkill_C::SetNetVisibility(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailSkill_C", "SetNetVisibility");

	Params::BP_AJBStringJailSkill_C_SetNetVisibility Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.IsInDashPossiblePlace
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBStringJailSkill_C::IsInDashPossiblePlace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailSkill_C", "IsInDashPossiblePlace");

	Params::BP_AJBStringJailSkill_C_IsInDashPossiblePlace Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.GetDuration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Duration                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBStringJailSkill_C::GetDuration(float* Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailSkill_C", "GetDuration");

	Params::BP_AJBStringJailSkill_C_GetDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Duration != nullptr)
		*Duration = Parms.Duration;
}


// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.OnEndState
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCancel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bRestore                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBStringJailSkill_C::OnEndState(bool bCancel, bool bRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailSkill_C", "OnEndState");

	Params::BP_AJBStringJailSkill_C_OnEndState Parms{};

	Parms.bCancel = bCancel;
	Parms.bRestore = bRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.PlaySkillBeginAnimation
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBStringJailSkill_C::PlaySkillBeginAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailSkill_C", "PlaySkillBeginAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBStringJailSkill_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailSkill_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.HitWait
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CuttingRate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        SurfaceType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDisableDamage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bInvincible                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsPenetration                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bBlockedByAAP                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bHeadShot                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBStringJailSkill_C::HitWait(class AActor* HitActor, const struct FVector& HitLocation, const struct FVector& HitNormal, float CuttingRate, EPhysicalSurface SurfaceType, bool bDisableDamage, bool bInvincible, bool bIsPenetration, bool bBlockedByAAP, bool bHeadShot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailSkill_C", "HitWait");

	Params::BP_AJBStringJailSkill_C_HitWait Parms{};

	Parms.HitActor = HitActor;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.CuttingRate = CuttingRate;
	Parms.SurfaceType = SurfaceType;
	Parms.bDisableDamage = bDisableDamage;
	Parms.bInvincible = bInvincible;
	Parms.bIsPenetration = bIsPenetration;
	Parms.bBlockedByAAP = bBlockedByAAP;
	Parms.bHeadShot = bHeadShot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.OnActive
// (Event, Public, BlueprintEvent)

void UBP_AJBStringJailSkill_C::OnActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailSkill_C", "OnActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.OnInactive
// (Event, Public, BlueprintEvent)

void UBP_AJBStringJailSkill_C::OnInactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailSkill_C", "OnInactive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBStringJailSkill_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailSkill_C", "NotifyTheWorld");

	Params::BP_AJBStringJailSkill_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.SpeakRushVoice
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBStringJailSkill_C::SpeakRushVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailSkill_C", "SpeakRushVoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.TryRedash
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBStringJailSkill_C::TryRedash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailSkill_C", "TryRedash");

	UObject::ProcessEvent(Func, nullptr);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_SnapTouchScrollBox

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_SnapTouchScrollBox.WB_SnapTouchScrollBox_C
// 0x07E0 (0x09E8 - 0x0208)
class UWB_SnapTouchScrollBox_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0208(0x0008)(Transient, DuplicateTransient)
	class UBorder*                                Border_TouchScroller;                              // 0x0210(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             NamedSlot_OneContent;                              // 0x0218(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_InputableArea;                             // 0x0220(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_Main;                                    // 0x0228(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CharacterSelect_NextArrow_C*        WB_CharacterSelect_NextArrowLeft;                  // 0x0230(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CharacterSelect_NextArrow_C*        WB_CharacterSelect_NextArrowRight;                 // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         TotalMoveValue;                                    // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScrollBoxStyle                        Style;                                             // 0x0248(0x0228)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FScrollBarStyle                        BarStyle;                                          // 0x0470(0x04D0)(Edit, BlueprintVisible, BlueprintReadOnly)
	EOrientation                                  Orientation;                                       // 0x0940(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              ScrollBarVisibility;                               // 0x0941(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_942[0x2];                                      // 0x0942(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ScrollbarThickness;                                // 0x0944(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AlwaysShowScrollbar;                               // 0x094C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AllowOverscroll;                                   // 0x094D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94E[0x2];                                      // 0x094E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnScrollMoved;                                     // 0x0950(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	EWidgetClipping                               ScrollBoxClipping;                                 // 0x0960(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_961[0x3];                                      // 0x0961(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                NamedSlotPadding;                                  // 0x0964(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor)
	struct FMargin                                InputableMargin;                                   // 0x0974(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor)
	float                                         InnerScrollOffset;                                 // 0x0984(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SnapLength;                                        // 0x0988(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentSnapIndex;                                  // 0x098C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviousSnapIndex;                                 // 0x0990(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_994[0x4];                                      // 0x0994(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnSnapLeftScrolled;                                // 0x0998(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnSnapRightScrolled;                               // 0x09A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         TargetScrollOffset;                                // 0x09B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScrollSpeed;                                       // 0x09BC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                ArrowPaddingRight;                                 // 0x09C0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor)
	struct FMargin                                ArrowPaddingLeft;                                  // 0x09D0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor)
	bool                                          bIsSnapScroll;                                     // 0x09E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OnScrollMoved__DelegateSignature();
	void OnSnapLeftScrolled__DelegateSignature();
	void OnSnapRightScrolled__DelegateSignature();
	void ExecuteUbergraph_WB_SnapTouchScrollBox(int32 EntryPoint);
	void ScrollSnapNextLeft();
	void ScrollSnap(int32 Index_0);
	void ResetSnapScroll();
	void ScrollSnapNextRight();
	void SetScrollOffsetAndResetSnap(float NewScrollOffset);
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void ClearChildren();
	struct FEventReply OnMouseButtonDown_TouchScroll(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseMove_TouchScroll(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	class UPanelSlot* AddChild(class UWidget* Content);
	bool RemoveChild(class UWidget* Content);
	bool RemoveChildAt(int32 Index_0);
	void SetIsSnapScroll(bool bIsSnapScroll_0);
	bool GetIsSnapScroll();

	float GetScrollMax() const;
	int32 GetChildrenCount() const;
	class UWidget* GetChildAt(int32 Index_0) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_SnapTouchScrollBox_C">();
	}
	static class UWB_SnapTouchScrollBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_SnapTouchScrollBox_C>();
	}
};
static_assert(alignof(UWB_SnapTouchScrollBox_C) == 0x000008, "Wrong alignment on UWB_SnapTouchScrollBox_C");
static_assert(sizeof(UWB_SnapTouchScrollBox_C) == 0x0009E8, "Wrong size on UWB_SnapTouchScrollBox_C");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, UberGraphFrame) == 0x000208, "Member 'UWB_SnapTouchScrollBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, Border_TouchScroller) == 0x000210, "Member 'UWB_SnapTouchScrollBox_C::Border_TouchScroller' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, NamedSlot_OneContent) == 0x000218, "Member 'UWB_SnapTouchScrollBox_C::NamedSlot_OneContent' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, Overlay_InputableArea) == 0x000220, "Member 'UWB_SnapTouchScrollBox_C::Overlay_InputableArea' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, ScrollBox_Main) == 0x000228, "Member 'UWB_SnapTouchScrollBox_C::ScrollBox_Main' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, WB_CharacterSelect_NextArrowLeft) == 0x000230, "Member 'UWB_SnapTouchScrollBox_C::WB_CharacterSelect_NextArrowLeft' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, WB_CharacterSelect_NextArrowRight) == 0x000238, "Member 'UWB_SnapTouchScrollBox_C::WB_CharacterSelect_NextArrowRight' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, TotalMoveValue) == 0x000240, "Member 'UWB_SnapTouchScrollBox_C::TotalMoveValue' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, Style) == 0x000248, "Member 'UWB_SnapTouchScrollBox_C::Style' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, BarStyle) == 0x000470, "Member 'UWB_SnapTouchScrollBox_C::BarStyle' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, Orientation) == 0x000940, "Member 'UWB_SnapTouchScrollBox_C::Orientation' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, ScrollBarVisibility) == 0x000941, "Member 'UWB_SnapTouchScrollBox_C::ScrollBarVisibility' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, ScrollbarThickness) == 0x000944, "Member 'UWB_SnapTouchScrollBox_C::ScrollbarThickness' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, AlwaysShowScrollbar) == 0x00094C, "Member 'UWB_SnapTouchScrollBox_C::AlwaysShowScrollbar' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, AllowOverscroll) == 0x00094D, "Member 'UWB_SnapTouchScrollBox_C::AllowOverscroll' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, OnScrollMoved) == 0x000950, "Member 'UWB_SnapTouchScrollBox_C::OnScrollMoved' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, ScrollBoxClipping) == 0x000960, "Member 'UWB_SnapTouchScrollBox_C::ScrollBoxClipping' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, NamedSlotPadding) == 0x000964, "Member 'UWB_SnapTouchScrollBox_C::NamedSlotPadding' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, InputableMargin) == 0x000974, "Member 'UWB_SnapTouchScrollBox_C::InputableMargin' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, InnerScrollOffset) == 0x000984, "Member 'UWB_SnapTouchScrollBox_C::InnerScrollOffset' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, SnapLength) == 0x000988, "Member 'UWB_SnapTouchScrollBox_C::SnapLength' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, CurrentSnapIndex) == 0x00098C, "Member 'UWB_SnapTouchScrollBox_C::CurrentSnapIndex' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, PreviousSnapIndex) == 0x000990, "Member 'UWB_SnapTouchScrollBox_C::PreviousSnapIndex' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, OnSnapLeftScrolled) == 0x000998, "Member 'UWB_SnapTouchScrollBox_C::OnSnapLeftScrolled' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, OnSnapRightScrolled) == 0x0009A8, "Member 'UWB_SnapTouchScrollBox_C::OnSnapRightScrolled' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, TargetScrollOffset) == 0x0009B8, "Member 'UWB_SnapTouchScrollBox_C::TargetScrollOffset' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, ScrollSpeed) == 0x0009BC, "Member 'UWB_SnapTouchScrollBox_C::ScrollSpeed' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, ArrowPaddingRight) == 0x0009C0, "Member 'UWB_SnapTouchScrollBox_C::ArrowPaddingRight' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, ArrowPaddingLeft) == 0x0009D0, "Member 'UWB_SnapTouchScrollBox_C::ArrowPaddingLeft' has a wrong offset!");
static_assert(offsetof(UWB_SnapTouchScrollBox_C, bIsSnapScroll) == 0x0009E0, "Member 'UWB_SnapTouchScrollBox_C::bIsSnapScroll' has a wrong offset!");

}


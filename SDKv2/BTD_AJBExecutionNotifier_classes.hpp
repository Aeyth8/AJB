#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_AJBExecutionNotifier

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTD_AJBExecutionNotifier.BTD_AJBExecutionNotifier_C
// 0x0030 (0x00D0 - 0x00A0)
class UBTD_AJBExecutionNotifier_C final : public UBTDecorator_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(Transient, DuplicateTransient)
	UMulticastDelegateProperty_                   OnExecutionStartAI;                                // 0x00A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnExecutionFinishAI;                               // 0x00B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bRegistered;                                       // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OnExecutionStartAI__DelegateSignature(class AAIController* OwnerController, class APawn* ControlledPawn);
	void OnExecutionFinishAI__DelegateSignature(class AAIController* OwnerController, class APawn* ControlledPawn, EBTNodeResult NodeResult);
	void ExecuteUbergraph_BTD_AJBExecutionNotifier(int32 EntryPoint);
	void ReceiveExecutionFinishAI(class AAIController* OwnerController, class APawn* ControlledPawn, EBTNodeResult NodeResult);
	void ReceiveExecutionStartAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	bool PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTD_AJBExecutionNotifier_C">();
	}
	static class UBTD_AJBExecutionNotifier_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTD_AJBExecutionNotifier_C>();
	}
};
static_assert(alignof(UBTD_AJBExecutionNotifier_C) == 0x000008, "Wrong alignment on UBTD_AJBExecutionNotifier_C");
static_assert(sizeof(UBTD_AJBExecutionNotifier_C) == 0x0000D0, "Wrong size on UBTD_AJBExecutionNotifier_C");
static_assert(offsetof(UBTD_AJBExecutionNotifier_C, UberGraphFrame) == 0x0000A0, "Member 'UBTD_AJBExecutionNotifier_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTD_AJBExecutionNotifier_C, OnExecutionStartAI) == 0x0000A8, "Member 'UBTD_AJBExecutionNotifier_C::OnExecutionStartAI' has a wrong offset!");
static_assert(offsetof(UBTD_AJBExecutionNotifier_C, OnExecutionFinishAI) == 0x0000B8, "Member 'UBTD_AJBExecutionNotifier_C::OnExecutionFinishAI' has a wrong offset!");
static_assert(offsetof(UBTD_AJBExecutionNotifier_C, bRegistered) == 0x0000C8, "Member 'UBTD_AJBExecutionNotifier_C::bRegistered' has a wrong offset!");

}


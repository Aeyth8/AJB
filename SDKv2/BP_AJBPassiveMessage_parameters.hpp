#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBPassiveMessage

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBPassiveMessage.BP_AJBPassiveMessage_C.ExecuteUbergraph_BP_AJBPassiveMessage
// 0x0088 (0x0088 - 0x0000)
struct BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AJBPassiveSkillBase_C*>      CallFunc_GetComponentsByClass_ReturnValue;         // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	class UBP_AJBPassiveSkillBase_C*              CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentPhase_Phase;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActive_bActive;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AJBPassiveSkillBase_C*>      CallFunc_GetComponentsByClass_ReturnValue1;        // 0x0058(0x0010)(ZeroConstructor, ReferenceParm)
	class UBP_AJBPassiveSkillBase_C*              CallFunc_Array_Get_Item1;                          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActive_bActive1;                     // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage) == 0x000008, "Wrong alignment on BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage");
static_assert(sizeof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage) == 0x000088, "Wrong size on BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, EntryPoint) == 0x000000, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, Temp_int_Array_Index_Variable1) == 0x00001C, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, CallFunc_IsValid_ReturnValue1) == 0x000021, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, CallFunc_GetComponentsByClass_ReturnValue) == 0x000028, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, CallFunc_GetCurrentPhase_Phase) == 0x000044, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::CallFunc_GetCurrentPhase_Phase' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, CallFunc_CheckActive_bActive) == 0x000049, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::CallFunc_CheckActive_bActive' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, Temp_int_Loop_Counter_Variable1) == 0x00004C, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, CallFunc_IsValid_ReturnValue2) == 0x000050, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, CallFunc_GetComponentsByClass_ReturnValue1) == 0x000058, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::CallFunc_GetComponentsByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, CallFunc_Array_Get_Item1) == 0x000068, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, CallFunc_Array_Length_ReturnValue1) == 0x000070, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, CallFunc_Less_IntInt_ReturnValue1) == 0x000074, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, CallFunc_CheckActive_bActive1) == 0x000075, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::CallFunc_CheckActive_bActive1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, CallFunc_Add_IntInt_ReturnValue1) == 0x000078, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, CallFunc_BooleanAND_ReturnValue1) == 0x00007C, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage, CallFunc_MapRangeClamped_ReturnValue) == 0x000080, "Member 'BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function BP_AJBPassiveMessage.BP_AJBPassiveMessage_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBPassiveMessage_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPassiveMessage_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBPassiveMessage_C_ReceiveTick");
static_assert(sizeof(BP_AJBPassiveMessage_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBPassiveMessage_C_ReceiveTick");
static_assert(offsetof(BP_AJBPassiveMessage_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBPassiveMessage_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBPassiveMessage.BP_AJBPassiveMessage_C.RequestAddMessageByGameplayTag
// 0x0078 (0x0078 - 0x0000)
struct BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetStringFromTable_bResult;               // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetStringFromTable_String;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
	class FName                                   CallFunc_GetStringTablePath_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Name_ReturnValue;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag) == 0x000008, "Wrong alignment on BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag");
static_assert(sizeof(BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag) == 0x000078, "Wrong size on BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag");
static_assert(offsetof(BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag, Tag) == 0x000000, "Member 'BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag::Tag' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag, bSuccess) == 0x000008, "Member 'BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag, CallFunc_MatchesTag_ReturnValue) == 0x000009, "Member 'BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag, CallFunc_GetStringFromTable_bResult) == 0x00000B, "Member 'BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag::CallFunc_GetStringFromTable_bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag, CallFunc_GetStringFromTable_String) == 0x000010, "Member 'BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag::CallFunc_GetStringFromTable_String' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag, CallFunc_GetTagName_ReturnValue) == 0x000020, "Member 'BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag, CallFunc_GetStringTablePath_ReturnValue) == 0x000040, "Member 'BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag::CallFunc_GetStringTablePath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag, CallFunc_Conv_NameToString_ReturnValue) == 0x000048, "Member 'BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag, CallFunc_BuildString_Name_ReturnValue) == 0x000068, "Member 'BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag::CallFunc_BuildString_Name_ReturnValue' has a wrong offset!");

// Function BP_AJBPassiveMessage.BP_AJBPassiveMessage_C.SetupMessageWidget
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBPassiveMessage_C_SetupMessageWidget final
{
public:
	class UWB_PassiveMessage_C*                   MessageWidget_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_AbilityActivateMessage_C*           AbilityActiveMessageWidget;                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_AJBPassiveMessage_C_SetupMessageWidget) == 0x000008, "Wrong alignment on BP_AJBPassiveMessage_C_SetupMessageWidget");
static_assert(sizeof(BP_AJBPassiveMessage_C_SetupMessageWidget) == 0x000030, "Wrong size on BP_AJBPassiveMessage_C_SetupMessageWidget");
static_assert(offsetof(BP_AJBPassiveMessage_C_SetupMessageWidget, MessageWidget_0) == 0x000000, "Member 'BP_AJBPassiveMessage_C_SetupMessageWidget::MessageWidget_0' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_SetupMessageWidget, AbilityActiveMessageWidget) == 0x000008, "Member 'BP_AJBPassiveMessage_C_SetupMessageWidget::AbilityActiveMessageWidget' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_SetupMessageWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_AJBPassiveMessage_C_SetupMessageWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_SetupMessageWidget, K2Node_CreateDelegate_OutputDelegate1) == 0x000020, "Member 'BP_AJBPassiveMessage_C_SetupMessageWidget::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");

// Function BP_AJBPassiveMessage.BP_AJBPassiveMessage_C.RequestRemoveMessageByGameplayTag
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBPassiveMessage_C_RequestRemoveMessageByGameplayTag final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPassiveMessage_C_RequestRemoveMessageByGameplayTag) == 0x000008, "Wrong alignment on BP_AJBPassiveMessage_C_RequestRemoveMessageByGameplayTag");
static_assert(sizeof(BP_AJBPassiveMessage_C_RequestRemoveMessageByGameplayTag) == 0x000010, "Wrong size on BP_AJBPassiveMessage_C_RequestRemoveMessageByGameplayTag");
static_assert(offsetof(BP_AJBPassiveMessage_C_RequestRemoveMessageByGameplayTag, Tag) == 0x000000, "Member 'BP_AJBPassiveMessage_C_RequestRemoveMessageByGameplayTag::Tag' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_RequestRemoveMessageByGameplayTag, bSuccess) == 0x000008, "Member 'BP_AJBPassiveMessage_C_RequestRemoveMessageByGameplayTag::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_RequestRemoveMessageByGameplayTag, CallFunc_MatchesTag_ReturnValue) == 0x000009, "Member 'BP_AJBPassiveMessage_C_RequestRemoveMessageByGameplayTag::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_RequestRemoveMessageByGameplayTag, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'BP_AJBPassiveMessage_C_RequestRemoveMessageByGameplayTag::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBPassiveMessage.BP_AJBPassiveMessage_C.Initialize
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBPassiveMessage_C_Initialize final
{
public:
	class AAJBInGameCharacter*                    TargetCharacter_0;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_AJBPassiveSkillBase_C*>      LSkills;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBPassiveSkillBase_C*              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActive_bActive;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RequestAddMessageByGameplayTag_bSuccess;  // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UBP_AJBPassiveSkillBase_C*>      CallFunc_GetComponentsByClass_ReturnValue;         // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPassiveMessage_C_Initialize) == 0x000008, "Wrong alignment on BP_AJBPassiveMessage_C_Initialize");
static_assert(sizeof(BP_AJBPassiveMessage_C_Initialize) == 0x000050, "Wrong size on BP_AJBPassiveMessage_C_Initialize");
static_assert(offsetof(BP_AJBPassiveMessage_C_Initialize, TargetCharacter_0) == 0x000000, "Member 'BP_AJBPassiveMessage_C_Initialize::TargetCharacter_0' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_Initialize, LSkills) == 0x000008, "Member 'BP_AJBPassiveMessage_C_Initialize::LSkills' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_Initialize, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_AJBPassiveMessage_C_Initialize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_Initialize, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_AJBPassiveMessage_C_Initialize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_Initialize, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_AJBPassiveMessage_C_Initialize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_Initialize, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AJBPassiveMessage_C_Initialize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_Initialize, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_AJBPassiveMessage_C_Initialize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_Initialize, CallFunc_CheckActive_bActive) == 0x000034, "Member 'BP_AJBPassiveMessage_C_Initialize::CallFunc_CheckActive_bActive' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_Initialize, CallFunc_Less_IntInt_ReturnValue) == 0x000035, "Member 'BP_AJBPassiveMessage_C_Initialize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_Initialize, CallFunc_RequestAddMessageByGameplayTag_bSuccess) == 0x000036, "Member 'BP_AJBPassiveMessage_C_Initialize::CallFunc_RequestAddMessageByGameplayTag_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_Initialize, CallFunc_IsValid_ReturnValue) == 0x000037, "Member 'BP_AJBPassiveMessage_C_Initialize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_Initialize, CallFunc_GetComponentsByClass_ReturnValue) == 0x000038, "Member 'BP_AJBPassiveMessage_C_Initialize::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_Initialize, CallFunc_IsValid_ReturnValue1) == 0x000048, "Member 'BP_AJBPassiveMessage_C_Initialize::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function BP_AJBPassiveMessage.BP_AJBPassiveMessage_C.CheckTickEnabled
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBPassiveMessage_C_CheckTickEnabled final
{
public:
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPassiveMessage_C_CheckTickEnabled) == 0x000001, "Wrong alignment on BP_AJBPassiveMessage_C_CheckTickEnabled");
static_assert(sizeof(BP_AJBPassiveMessage_C_CheckTickEnabled) == 0x000002, "Wrong size on BP_AJBPassiveMessage_C_CheckTickEnabled");
static_assert(offsetof(BP_AJBPassiveMessage_C_CheckTickEnabled, CallFunc_BooleanOR_ReturnValue) == 0x000000, "Member 'BP_AJBPassiveMessage_C_CheckTickEnabled::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_CheckTickEnabled, CallFunc_BooleanOR_ReturnValue1) == 0x000001, "Member 'BP_AJBPassiveMessage_C_CheckTickEnabled::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");

// Function BP_AJBPassiveMessage.BP_AJBPassiveMessage_C.ChangeTickEnable
// 0x0078 (0x0078 - 0x0000)
struct BP_AJBPassiveMessage_C_ChangeTickEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bByUltAnimation;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bByOtherUpdate;                                    // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable1;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AJBPassiveSkillBase_C*>      CallFunc_GetComponentsByClass_ReturnValue;         // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBPassiveSkillBase_C*              CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActive_bActive;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AJBPassiveSkillBase_C*>      CallFunc_GetComponentsByClass_ReturnValue1;        // 0x0058(0x0010)(ZeroConstructor, ReferenceParm)
	class UBP_AJBPassiveSkillBase_C*              CallFunc_Array_Get_Item1;                          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActive_bActive1;                     // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPassiveMessage_C_ChangeTickEnable) == 0x000008, "Wrong alignment on BP_AJBPassiveMessage_C_ChangeTickEnable");
static_assert(sizeof(BP_AJBPassiveMessage_C_ChangeTickEnable) == 0x000078, "Wrong size on BP_AJBPassiveMessage_C_ChangeTickEnable");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, bEnable) == 0x000000, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, bByUltAnimation) == 0x000001, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::bByUltAnimation' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, bByOtherUpdate) == 0x000002, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::bByOtherUpdate' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, Temp_bool_True_if_break_was_hit_Variable) == 0x000003, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, Temp_bool_True_if_break_was_hit_Variable1) == 0x000014, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::Temp_bool_True_if_break_was_hit_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, CallFunc_GetComponentsByClass_ReturnValue) == 0x000018, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, CallFunc_Not_PreBool_ReturnValue1) == 0x000028, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, Temp_int_Loop_Counter_Variable1) == 0x000030, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, CallFunc_Add_IntInt_ReturnValue1) == 0x000038, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, CallFunc_BooleanAND_ReturnValue) == 0x00003C, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, Temp_int_Array_Index_Variable1) == 0x000040, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, CallFunc_CheckActive_bActive) == 0x000050, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::CallFunc_CheckActive_bActive' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, CallFunc_BooleanAND_ReturnValue1) == 0x000051, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, CallFunc_GetComponentsByClass_ReturnValue1) == 0x000058, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::CallFunc_GetComponentsByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, CallFunc_Array_Get_Item1) == 0x000068, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, CallFunc_Array_Length_ReturnValue1) == 0x000070, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, CallFunc_CheckActive_bActive1) == 0x000074, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::CallFunc_CheckActive_bActive1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, CallFunc_Less_IntInt_ReturnValue1) == 0x000075, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, CallFunc_BooleanAND_ReturnValue2) == 0x000076, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPassiveMessage_C_ChangeTickEnable, CallFunc_BooleanAND_ReturnValue3) == 0x000077, "Member 'BP_AJBPassiveMessage_C_ChangeTickEnable::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_AJBPostProcessHuman

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ELipType_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ImmediatePhysics_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_AJBPostProcessHuman.ABP_AJBPostProcessHuman_C
// 0x1D08 (0x2060 - 0x0358)
class UABP_AJBPostProcessHuman_C final : public UAnimInstance
{
public:
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_1A68C39342B9ABB44FA67CBE3E8B919B; // 0x0368(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5AF9D79B4AC6EEC5096B95957B1F3151; // 0x03B0(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5A50335F49A99B9974F7888C4D74F704; // 0x0460(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_50FA97A34F55CB9E93511A9BA293C6A9; // 0x0510(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8CEAA32648919EF26A9CA19122D04F82; // 0x05C0(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_CD7A607B47548BE25AEE11B0D5595189; // 0x0670(0x00B0)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_E5DA1EC9489FDD8E5CA7B0B6B63D33E8; // 0x0720(0x00E0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3793BDD7471A484E27B0809D41EAB27A; // 0x0800(0x00B0)()
	struct FAnimNode_SubInput                     AnimGraphNode_SubInput_F0166A2E4B706786AF71EB9DC912F5A4; // 0x08B0(0x0068)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_32CB04BD4124A4D5AF14E1A28955851D; // 0x0918(0x00B0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_A317E93F4E69FDDA17CF4E87D699222E; // 0x09C8(0x0120)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_BE35DA3A4DDB473C01596F8B73DDB7CB; // 0x0AE8(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_260B891549ED460AFA9B138E3554B387; // 0x0B98(0x00B0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_DCEB22424B2791C704FD26A2C70D6F1C; // 0x0C48(0x0120)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_FD3352334006B6D0A9B7B78EE3537861; // 0x0D68(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_F9D8530946AB4033485F1494F3EFBC06; // 0x0E18(0x00B0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_D881DEF54015760ABF49EBB5D549BCAF; // 0x0EC8(0x0120)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_09C0DC414CCE88AF5DDAD9A23BEC46E4; // 0x0FE8(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_98497C8E46F8F60FDE3DAFBBBD7D0ACF; // 0x1098(0x00B0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_F7063B884C67C85C76FDB094B3E12F76; // 0x1148(0x0120)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8F01B5454027590A8666DCAE8693A098; // 0x1268(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9754AF2F417BA8039C531E9E7DD0302E; // 0x1318(0x00B0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_BAB8EFB746EFE3EC164C98829EFBE0E9; // 0x13C8(0x0120)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_A086C7944E9D17BCB7D226B27E747D97; // 0x14E8(0x00B0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_96ADABC24765F86E260ECE92AF02DCEE; // 0x1598(0x0118)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_EBBD49CB4408449ED99FEE992EC77E0C; // 0x16B0(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_BEA8E57A43566565226D128954E3C58E; // 0x1760(0x00B0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_AFF7311143D23ADF6154EBABBE9B0422; // 0x1810(0x0120)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_0303903441DFEC10FCF10A9252C54E71; // 0x1930(0x00B0)()
	struct FAnimNode_RigidBody                    AnimGraphNode_RigidBody_377736444F6CAB17B30D3C9198C55464; // 0x19E0(0x05A0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_D975450445BDB2CF87685B9268D1A796; // 0x1F80(0x0048)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_F185947B44CE5CA9405C08AEE1E82B37; // 0x1FC8(0x0048)()
	bool                                          bEnabledLip;                                       // 0x2010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ELipType                                      LipType;                                           // 0x2011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2012[0x2];                                     // 0x2012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LipInterpAdditiveAlphaSpeed;                       // 0x2014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LipBlendAlphaInterpSpeed;                          // 0x2018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LipTypeBlendTime;                                  // 0x201C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LipApplyAdditiveAlpha;                             // 0x2020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LipBlendAlpha;                                     // 0x2024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      LipAnimation_Base;                                 // 0x2028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      LipAnimation_A;                                    // 0x2030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      LipAnimation_I;                                    // 0x2038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      LipAnimation_U;                                    // 0x2040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      LipAnimation_E;                                    // 0x2048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      LipAnimation_O;                                    // 0x2050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      LipAnimation_N;                                    // 0x2058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_AJBPostProcessHuman(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void UpdateLipBlendTime(float NewBlendTime);
	void SetEnableLip(bool NewFlag);
	void SetLipAnimSequence(class UAnimSequenceBase* Lip_A, class UAnimSequenceBase* Lip_I, class UAnimSequenceBase* Lip_U, class UAnimSequenceBase* Lip_E, class UAnimSequenceBase* Lip_O);
	void UpdateLipType(ELipType NewType);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_ApplyAdditive_96ADABC24765F86E260ECE92AF02DCEE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_BlendListByEnum_E5DA1EC9489FDD8E5CA7B0B6B63D33E8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_SequencePlayer_0303903441DFEC10FCF10A9252C54E71();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_SequencePlayer_09C0DC414CCE88AF5DDAD9A23BEC46E4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_SequencePlayer_260B891549ED460AFA9B138E3554B387();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_SequencePlayer_32CB04BD4124A4D5AF14E1A28955851D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_SequencePlayer_3793BDD7471A484E27B0809D41EAB27A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_SequencePlayer_50FA97A34F55CB9E93511A9BA293C6A9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_SequencePlayer_5A50335F49A99B9974F7888C4D74F704();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_SequencePlayer_5AF9D79B4AC6EEC5096B95957B1F3151();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_SequencePlayer_8CEAA32648919EF26A9CA19122D04F82();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_SequencePlayer_8F01B5454027590A8666DCAE8693A098();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_SequencePlayer_9754AF2F417BA8039C531E9E7DD0302E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_SequencePlayer_98497C8E46F8F60FDE3DAFBBBD7D0ACF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_SequencePlayer_A086C7944E9D17BCB7D226B27E747D97();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_SequencePlayer_BE35DA3A4DDB473C01596F8B73DDB7CB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_SequencePlayer_BEA8E57A43566565226D128954E3C58E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_SequencePlayer_CD7A607B47548BE25AEE11B0D5595189();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_SequencePlayer_EBBD49CB4408449ED99FEE992EC77E0C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_SequencePlayer_F9D8530946AB4033485F1494F3EFBC06();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_SequencePlayer_FD3352334006B6D0A9B7B78EE3537861();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_TwoWayBlend_A317E93F4E69FDDA17CF4E87D699222E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_TwoWayBlend_AFF7311143D23ADF6154EBABBE9B0422();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_TwoWayBlend_BAB8EFB746EFE3EC164C98829EFBE0E9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_TwoWayBlend_D881DEF54015760ABF49EBB5D549BCAF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_TwoWayBlend_DCEB22424B2791C704FD26A2C70D6F1C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBPostProcessHuman_AnimGraphNode_TwoWayBlend_F7063B884C67C85C76FDB094B3E12F76();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_AJBPostProcessHuman_C">();
	}
	static class UABP_AJBPostProcessHuman_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_AJBPostProcessHuman_C>();
	}
};
static_assert(alignof(UABP_AJBPostProcessHuman_C) == 0x000010, "Wrong alignment on UABP_AJBPostProcessHuman_C");
static_assert(sizeof(UABP_AJBPostProcessHuman_C) == 0x002060, "Wrong size on UABP_AJBPostProcessHuman_C");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, UberGraphFrame) == 0x000360, "Member 'UABP_AJBPostProcessHuman_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_Root_1A68C39342B9ABB44FA67CBE3E8B919B) == 0x000368, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_Root_1A68C39342B9ABB44FA67CBE3E8B919B' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_SequencePlayer_5AF9D79B4AC6EEC5096B95957B1F3151) == 0x0003B0, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_SequencePlayer_5AF9D79B4AC6EEC5096B95957B1F3151' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_SequencePlayer_5A50335F49A99B9974F7888C4D74F704) == 0x000460, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_SequencePlayer_5A50335F49A99B9974F7888C4D74F704' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_SequencePlayer_50FA97A34F55CB9E93511A9BA293C6A9) == 0x000510, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_SequencePlayer_50FA97A34F55CB9E93511A9BA293C6A9' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_SequencePlayer_8CEAA32648919EF26A9CA19122D04F82) == 0x0005C0, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_SequencePlayer_8CEAA32648919EF26A9CA19122D04F82' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_SequencePlayer_CD7A607B47548BE25AEE11B0D5595189) == 0x000670, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_SequencePlayer_CD7A607B47548BE25AEE11B0D5595189' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_BlendListByEnum_E5DA1EC9489FDD8E5CA7B0B6B63D33E8) == 0x000720, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_BlendListByEnum_E5DA1EC9489FDD8E5CA7B0B6B63D33E8' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_SequencePlayer_3793BDD7471A484E27B0809D41EAB27A) == 0x000800, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_SequencePlayer_3793BDD7471A484E27B0809D41EAB27A' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_SubInput_F0166A2E4B706786AF71EB9DC912F5A4) == 0x0008B0, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_SubInput_F0166A2E4B706786AF71EB9DC912F5A4' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_SequencePlayer_32CB04BD4124A4D5AF14E1A28955851D) == 0x000918, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_SequencePlayer_32CB04BD4124A4D5AF14E1A28955851D' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_TwoWayBlend_A317E93F4E69FDDA17CF4E87D699222E) == 0x0009C8, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_TwoWayBlend_A317E93F4E69FDDA17CF4E87D699222E' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_SequencePlayer_BE35DA3A4DDB473C01596F8B73DDB7CB) == 0x000AE8, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_SequencePlayer_BE35DA3A4DDB473C01596F8B73DDB7CB' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_SequencePlayer_260B891549ED460AFA9B138E3554B387) == 0x000B98, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_SequencePlayer_260B891549ED460AFA9B138E3554B387' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_TwoWayBlend_DCEB22424B2791C704FD26A2C70D6F1C) == 0x000C48, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_TwoWayBlend_DCEB22424B2791C704FD26A2C70D6F1C' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_SequencePlayer_FD3352334006B6D0A9B7B78EE3537861) == 0x000D68, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_SequencePlayer_FD3352334006B6D0A9B7B78EE3537861' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_SequencePlayer_F9D8530946AB4033485F1494F3EFBC06) == 0x000E18, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_SequencePlayer_F9D8530946AB4033485F1494F3EFBC06' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_TwoWayBlend_D881DEF54015760ABF49EBB5D549BCAF) == 0x000EC8, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_TwoWayBlend_D881DEF54015760ABF49EBB5D549BCAF' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_SequencePlayer_09C0DC414CCE88AF5DDAD9A23BEC46E4) == 0x000FE8, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_SequencePlayer_09C0DC414CCE88AF5DDAD9A23BEC46E4' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_SequencePlayer_98497C8E46F8F60FDE3DAFBBBD7D0ACF) == 0x001098, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_SequencePlayer_98497C8E46F8F60FDE3DAFBBBD7D0ACF' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_TwoWayBlend_F7063B884C67C85C76FDB094B3E12F76) == 0x001148, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_TwoWayBlend_F7063B884C67C85C76FDB094B3E12F76' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_SequencePlayer_8F01B5454027590A8666DCAE8693A098) == 0x001268, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_SequencePlayer_8F01B5454027590A8666DCAE8693A098' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_SequencePlayer_9754AF2F417BA8039C531E9E7DD0302E) == 0x001318, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_SequencePlayer_9754AF2F417BA8039C531E9E7DD0302E' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_TwoWayBlend_BAB8EFB746EFE3EC164C98829EFBE0E9) == 0x0013C8, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_TwoWayBlend_BAB8EFB746EFE3EC164C98829EFBE0E9' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_SequencePlayer_A086C7944E9D17BCB7D226B27E747D97) == 0x0014E8, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_SequencePlayer_A086C7944E9D17BCB7D226B27E747D97' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_ApplyAdditive_96ADABC24765F86E260ECE92AF02DCEE) == 0x001598, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_ApplyAdditive_96ADABC24765F86E260ECE92AF02DCEE' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_SequencePlayer_EBBD49CB4408449ED99FEE992EC77E0C) == 0x0016B0, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_SequencePlayer_EBBD49CB4408449ED99FEE992EC77E0C' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_SequencePlayer_BEA8E57A43566565226D128954E3C58E) == 0x001760, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_SequencePlayer_BEA8E57A43566565226D128954E3C58E' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_TwoWayBlend_AFF7311143D23ADF6154EBABBE9B0422) == 0x001810, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_TwoWayBlend_AFF7311143D23ADF6154EBABBE9B0422' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_SequencePlayer_0303903441DFEC10FCF10A9252C54E71) == 0x001930, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_SequencePlayer_0303903441DFEC10FCF10A9252C54E71' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_RigidBody_377736444F6CAB17B30D3C9198C55464) == 0x0019E0, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_RigidBody_377736444F6CAB17B30D3C9198C55464' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_LocalToComponentSpace_D975450445BDB2CF87685B9268D1A796) == 0x001F80, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_LocalToComponentSpace_D975450445BDB2CF87685B9268D1A796' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, AnimGraphNode_ComponentToLocalSpace_F185947B44CE5CA9405C08AEE1E82B37) == 0x001FC8, "Member 'UABP_AJBPostProcessHuman_C::AnimGraphNode_ComponentToLocalSpace_F185947B44CE5CA9405C08AEE1E82B37' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, bEnabledLip) == 0x002010, "Member 'UABP_AJBPostProcessHuman_C::bEnabledLip' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, LipType) == 0x002011, "Member 'UABP_AJBPostProcessHuman_C::LipType' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, LipInterpAdditiveAlphaSpeed) == 0x002014, "Member 'UABP_AJBPostProcessHuman_C::LipInterpAdditiveAlphaSpeed' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, LipBlendAlphaInterpSpeed) == 0x002018, "Member 'UABP_AJBPostProcessHuman_C::LipBlendAlphaInterpSpeed' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, LipTypeBlendTime) == 0x00201C, "Member 'UABP_AJBPostProcessHuman_C::LipTypeBlendTime' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, LipApplyAdditiveAlpha) == 0x002020, "Member 'UABP_AJBPostProcessHuman_C::LipApplyAdditiveAlpha' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, LipBlendAlpha) == 0x002024, "Member 'UABP_AJBPostProcessHuman_C::LipBlendAlpha' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, LipAnimation_Base) == 0x002028, "Member 'UABP_AJBPostProcessHuman_C::LipAnimation_Base' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, LipAnimation_A) == 0x002030, "Member 'UABP_AJBPostProcessHuman_C::LipAnimation_A' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, LipAnimation_I) == 0x002038, "Member 'UABP_AJBPostProcessHuman_C::LipAnimation_I' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, LipAnimation_U) == 0x002040, "Member 'UABP_AJBPostProcessHuman_C::LipAnimation_U' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, LipAnimation_E) == 0x002048, "Member 'UABP_AJBPostProcessHuman_C::LipAnimation_E' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, LipAnimation_O) == 0x002050, "Member 'UABP_AJBPostProcessHuman_C::LipAnimation_O' has a wrong offset!");
static_assert(offsetof(UABP_AJBPostProcessHuman_C, LipAnimation_N) == 0x002058, "Member 'UABP_AJBPostProcessHuman_C::LipAnimation_N' has a wrong offset!");

}


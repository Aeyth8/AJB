#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TimeLimit_TextSet

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_TimeLimit_TextSet.WB_TimeLimit_TextSet_C
// 0x0040 (0x0288 - 0x0248)
class UWB_TimeLimit_TextSet_C final : public UAJBUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0248(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Loop;                                              // 0x0250(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_Effect0;                                       // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_Effect1;                                       // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_Effect2;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_Effect3;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_TimeLimitCountDown_C*               WB_TimeLimitCountDown;                             // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         CachedNumber;                                      // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_TimeLimit_TextSet(int32 EntryPoint);
	void Construct();
	void UpdateNumber(float Value, float MaxValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_TimeLimit_TextSet_C">();
	}
	static class UWB_TimeLimit_TextSet_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_TimeLimit_TextSet_C>();
	}
};
static_assert(alignof(UWB_TimeLimit_TextSet_C) == 0x000008, "Wrong alignment on UWB_TimeLimit_TextSet_C");
static_assert(sizeof(UWB_TimeLimit_TextSet_C) == 0x000288, "Wrong size on UWB_TimeLimit_TextSet_C");
static_assert(offsetof(UWB_TimeLimit_TextSet_C, UberGraphFrame) == 0x000248, "Member 'UWB_TimeLimit_TextSet_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_TimeLimit_TextSet_C, Loop) == 0x000250, "Member 'UWB_TimeLimit_TextSet_C::Loop' has a wrong offset!");
static_assert(offsetof(UWB_TimeLimit_TextSet_C, Img_Effect0) == 0x000258, "Member 'UWB_TimeLimit_TextSet_C::Img_Effect0' has a wrong offset!");
static_assert(offsetof(UWB_TimeLimit_TextSet_C, Img_Effect1) == 0x000260, "Member 'UWB_TimeLimit_TextSet_C::Img_Effect1' has a wrong offset!");
static_assert(offsetof(UWB_TimeLimit_TextSet_C, Img_Effect2) == 0x000268, "Member 'UWB_TimeLimit_TextSet_C::Img_Effect2' has a wrong offset!");
static_assert(offsetof(UWB_TimeLimit_TextSet_C, Img_Effect3) == 0x000270, "Member 'UWB_TimeLimit_TextSet_C::Img_Effect3' has a wrong offset!");
static_assert(offsetof(UWB_TimeLimit_TextSet_C, WB_TimeLimitCountDown) == 0x000278, "Member 'UWB_TimeLimit_TextSet_C::WB_TimeLimitCountDown' has a wrong offset!");
static_assert(offsetof(UWB_TimeLimit_TextSet_C, CachedNumber) == 0x000280, "Member 'UWB_TimeLimit_TextSet_C::CachedNumber' has a wrong offset!");

}


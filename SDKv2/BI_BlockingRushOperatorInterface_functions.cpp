#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_BlockingRushOperatorInterface

#include "Basic.hpp"

#include "BI_BlockingRushOperatorInterface_classes.hpp"
#include "BI_BlockingRushOperatorInterface_parameters.hpp"


namespace SDK
{

// Function BI_BlockingRushOperatorInterface.BI_BlockingRushOperatorInterface_C.CheckBlockingValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bBlockingValid                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_BlockingRushOperatorInterface_C::CheckBlockingValid(class AActor* DamageActor, bool* bBlockingValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BI_BlockingRushOperatorInterface_C", "CheckBlockingValid");

	Params::BI_BlockingRushOperatorInterface_C_CheckBlockingValid Parms{};

	Parms.DamageActor = DamageActor;

	UObject::ProcessEvent(Func, &Parms);

	if (bBlockingValid != nullptr)
		*bBlockingValid = Parms.bBlockingValid;
}


// Function BI_BlockingRushOperatorInterface.BI_BlockingRushOperatorInterface_C.OnBlocking
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          BlockingLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Reflect                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsPairAttack                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bImpulseDamage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           DamageOwner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSeparateStandAttack                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_BlockingRushOperatorInterface_C::OnBlocking(const struct FVector& BlockingLocation, bool Reflect, bool bIsPairAttack, bool bImpulseDamage, class AActor* DamageOwner, bool bSeparateStandAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BI_BlockingRushOperatorInterface_C", "OnBlocking");

	Params::BI_BlockingRushOperatorInterface_C_OnBlocking Parms{};

	Parms.BlockingLocation = std::move(BlockingLocation);
	Parms.Reflect = Reflect;
	Parms.bIsPairAttack = bIsPairAttack;
	Parms.bImpulseDamage = bImpulseDamage;
	Parms.DamageOwner = DamageOwner;
	Parms.bSeparateStandAttack = bSeparateStandAttack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BI_BlockingRushOperatorInterface.BI_BlockingRushOperatorInterface_C.CheckBlockingComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bBlockingComponent                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_BlockingRushOperatorInterface_C::CheckBlockingComponent(class UPrimitiveComponent* Component, bool* bBlockingComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BI_BlockingRushOperatorInterface_C", "CheckBlockingComponent");

	Params::BI_BlockingRushOperatorInterface_C_CheckBlockingComponent Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);

	if (bBlockingComponent != nullptr)
		*bBlockingComponent = Parms.bBlockingComponent;
}


// Function BI_BlockingRushOperatorInterface.BI_BlockingRushOperatorInterface_C.IgnoreGivePassive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIgnore                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_BlockingRushOperatorInterface_C::IgnoreGivePassive(class UPrimitiveComponent* Component, bool* bIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BI_BlockingRushOperatorInterface_C", "IgnoreGivePassive");

	Params::BI_BlockingRushOperatorInterface_C_IgnoreGivePassive Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);

	if (bIgnore != nullptr)
		*bIgnore = Parms.bIgnore;
}


// Function BI_BlockingRushOperatorInterface.BI_BlockingRushOperatorInterface_C.BlockPenetrate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           CauserActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bBlock                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_BlockingRushOperatorInterface_C::BlockPenetrate(class AActor* CauserActor, bool* bBlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BI_BlockingRushOperatorInterface_C", "BlockPenetrate");

	Params::BI_BlockingRushOperatorInterface_C_BlockPenetrate Parms{};

	Parms.CauserActor = CauserActor;

	UObject::ProcessEvent(Func, &Parms);

	if (bBlock != nullptr)
		*bBlock = Parms.bBlock;
}

}


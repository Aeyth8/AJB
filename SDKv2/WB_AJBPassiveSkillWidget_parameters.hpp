#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_AJBPassiveSkillWidget

#include "Basic.hpp"


namespace SDK::Params
{

// Function WB_AJBPassiveSkillWidget.WB_AJBPassiveSkillWidget_C.ExecuteUbergraph_WB_AJBPassiveSkillWidget
// 0x0008 (0x0008 - 0x0000)
struct WB_AJBPassiveSkillWidget_C_ExecuteUbergraph_WB_AJBPassiveSkillWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AJBPassiveSkillWidget_C_ExecuteUbergraph_WB_AJBPassiveSkillWidget) == 0x000004, "Wrong alignment on WB_AJBPassiveSkillWidget_C_ExecuteUbergraph_WB_AJBPassiveSkillWidget");
static_assert(sizeof(WB_AJBPassiveSkillWidget_C_ExecuteUbergraph_WB_AJBPassiveSkillWidget) == 0x000008, "Wrong size on WB_AJBPassiveSkillWidget_C_ExecuteUbergraph_WB_AJBPassiveSkillWidget");
static_assert(offsetof(WB_AJBPassiveSkillWidget_C_ExecuteUbergraph_WB_AJBPassiveSkillWidget, EntryPoint) == 0x000000, "Member 'WB_AJBPassiveSkillWidget_C_ExecuteUbergraph_WB_AJBPassiveSkillWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_AJBPassiveSkillWidget_C_ExecuteUbergraph_WB_AJBPassiveSkillWidget, K2Node_Event_InDeltaTime) == 0x000004, "Member 'WB_AJBPassiveSkillWidget_C_ExecuteUbergraph_WB_AJBPassiveSkillWidget::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function WB_AJBPassiveSkillWidget.WB_AJBPassiveSkillWidget_C.OnOutsideComponentUpdate
// 0x0004 (0x0004 - 0x0000)
struct WB_AJBPassiveSkillWidget_C_OnOutsideComponentUpdate final
{
public:
	float                                         InDeltaTime;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AJBPassiveSkillWidget_C_OnOutsideComponentUpdate) == 0x000004, "Wrong alignment on WB_AJBPassiveSkillWidget_C_OnOutsideComponentUpdate");
static_assert(sizeof(WB_AJBPassiveSkillWidget_C_OnOutsideComponentUpdate) == 0x000004, "Wrong size on WB_AJBPassiveSkillWidget_C_OnOutsideComponentUpdate");
static_assert(offsetof(WB_AJBPassiveSkillWidget_C_OnOutsideComponentUpdate, InDeltaTime) == 0x000000, "Member 'WB_AJBPassiveSkillWidget_C_OnOutsideComponentUpdate::InDeltaTime' has a wrong offset!");

// Function WB_AJBPassiveSkillWidget.WB_AJBPassiveSkillWidget_C.GetPassiveSkill
// 0x0008 (0x0008 - 0x0000)
struct WB_AJBPassiveSkillWidget_C_GetPassiveSkill final
{
public:
	class UBP_AJBPassiveSkillBase_C*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AJBPassiveSkillWidget_C_GetPassiveSkill) == 0x000008, "Wrong alignment on WB_AJBPassiveSkillWidget_C_GetPassiveSkill");
static_assert(sizeof(WB_AJBPassiveSkillWidget_C_GetPassiveSkill) == 0x000008, "Wrong size on WB_AJBPassiveSkillWidget_C_GetPassiveSkill");
static_assert(offsetof(WB_AJBPassiveSkillWidget_C_GetPassiveSkill, ReturnValue) == 0x000000, "Member 'WB_AJBPassiveSkillWidget_C_GetPassiveSkill::ReturnValue' has a wrong offset!");

// Function WB_AJBPassiveSkillWidget.WB_AJBPassiveSkillWidget_C.SetOwnerPassiveSkill
// 0x0008 (0x0008 - 0x0000)
struct WB_AJBPassiveSkillWidget_C_SetOwnerPassiveSkill final
{
public:
	class UBP_AJBPassiveSkillBase_C*              PassiveSkill;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AJBPassiveSkillWidget_C_SetOwnerPassiveSkill) == 0x000008, "Wrong alignment on WB_AJBPassiveSkillWidget_C_SetOwnerPassiveSkill");
static_assert(sizeof(WB_AJBPassiveSkillWidget_C_SetOwnerPassiveSkill) == 0x000008, "Wrong size on WB_AJBPassiveSkillWidget_C_SetOwnerPassiveSkill");
static_assert(offsetof(WB_AJBPassiveSkillWidget_C_SetOwnerPassiveSkill, PassiveSkill) == 0x000000, "Member 'WB_AJBPassiveSkillWidget_C_SetOwnerPassiveSkill::PassiveSkill' has a wrong offset!");

}


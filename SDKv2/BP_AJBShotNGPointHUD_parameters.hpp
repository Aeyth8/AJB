#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBShotNGPointHUD

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBShotNGPointHUD.BP_AJBShotNGPointHUD_C.ExecuteUbergraph_BP_AJBShotNGPointHUD
// 0x00B8 (0x00B8 - 0x0000)
struct BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0008(0x0020)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GetAJBInGamePlayerControllerBP_bSuccess;  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        CallFunc_GetAJBInGamePlayerControllerBP_In_Game_Player_Controller_BP; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetCurrentFlowState_FlowState;            // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess;              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBInGameGameState_bIsValid;           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameGameState*                    CallFunc_GetAJBInGameGameState_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_ShotNGPoint_C>     K2Node_DynamicCast_AsBI_Shot_NGPoint;              // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBInGameLastSurvivorSceneDirector_C* CallFunc_GetComponentByClass_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowNGPoint_bResult;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93[0x5];                                       // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD) == 0x000008, "Wrong alignment on BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD");
static_assert(sizeof(BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD) == 0x0000B8, "Wrong size on BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD, EntryPoint) == 0x000000, "Member 'BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000008, "Member 'BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD, CallFunc_GetAJBInGamePlayerControllerBP_bSuccess) == 0x000038, "Member 'BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD::CallFunc_GetAJBInGamePlayerControllerBP_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD, CallFunc_GetAJBInGamePlayerControllerBP_In_Game_Player_Controller_BP) == 0x000040, "Member 'BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD::CallFunc_GetAJBInGamePlayerControllerBP_In_Game_Player_Controller_BP' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD, CallFunc_GetCurrentFlowState_FlowState) == 0x000048, "Member 'BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD::CallFunc_GetCurrentFlowState_FlowState' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD, CallFunc_HasTag_ReturnValue) == 0x000050, "Member 'BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD, CallFunc_GetAJBInGameHUD_BP_bSuccess) == 0x000051, "Member 'BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD::CallFunc_GetAJBInGameHUD_BP_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD) == 0x000058, "Member 'BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD, K2Node_Event_DeltaSeconds) == 0x000060, "Member 'BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD, CallFunc_GetAJBInGameGameState_bIsValid) == 0x000064, "Member 'BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD::CallFunc_GetAJBInGameGameState_bIsValid' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD, CallFunc_GetAJBInGameGameState_ReturnValue) == 0x000068, "Member 'BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD::CallFunc_GetAJBInGameGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD, K2Node_DynamicCast_AsBI_Shot_NGPoint) == 0x000070, "Member 'BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD::K2Node_DynamicCast_AsBI_Shot_NGPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD, CallFunc_GetComponentByClass_ReturnValue) == 0x000088, "Member 'BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD, CallFunc_ShouldShowNGPoint_bResult) == 0x000090, "Member 'BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD::CallFunc_ShouldShowNGPoint_bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD, CallFunc_IsValid_ReturnValue) == 0x000091, "Member 'BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD, CallFunc_IsValid_ReturnValue1) == 0x000092, "Member 'BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD, K2Node_CreateDelegate_OutputDelegate1) == 0x000098, "Member 'BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD, K2Node_CreateDelegate_OutputDelegate2) == 0x0000A8, "Member 'BP_AJBShotNGPointHUD_C_ExecuteUbergraph_BP_AJBShotNGPointHUD::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");

// Function BP_AJBShotNGPointHUD.BP_AJBShotNGPointHUD_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBShotNGPointHUD_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBShotNGPointHUD_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBShotNGPointHUD_C_ReceiveTick");
static_assert(sizeof(BP_AJBShotNGPointHUD_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBShotNGPointHUD_C_ReceiveTick");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBShotNGPointHUD_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBShotNGPointHUD.BP_AJBShotNGPointHUD_C.ShouldTickEnable
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBShotNGPointHUD_C_ShouldTickEnable final
{
public:
	bool                                          bShouldTickEnable;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetShotPointComponent_ShotPointComp;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_ShotNGPoint_C>     K2Node_DynamicCast_AsBI_Shot_NGPoint;              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckLocallyControlled_bLocallyControlled; // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBShotNGPointHUD_C_ShouldTickEnable) == 0x000008, "Wrong alignment on BP_AJBShotNGPointHUD_C_ShouldTickEnable");
static_assert(sizeof(BP_AJBShotNGPointHUD_C_ShouldTickEnable) == 0x000040, "Wrong size on BP_AJBShotNGPointHUD_C_ShouldTickEnable");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ShouldTickEnable, bShouldTickEnable) == 0x000000, "Member 'BP_AJBShotNGPointHUD_C_ShouldTickEnable::bShouldTickEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ShouldTickEnable, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBShotNGPointHUD_C_ShouldTickEnable::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ShouldTickEnable, CallFunc_GetShotPointComponent_ShotPointComp) == 0x000010, "Member 'BP_AJBShotNGPointHUD_C_ShouldTickEnable::CallFunc_GetShotPointComponent_ShotPointComp' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ShouldTickEnable, K2Node_DynamicCast_AsBI_Shot_NGPoint) == 0x000018, "Member 'BP_AJBShotNGPointHUD_C_ShouldTickEnable::K2Node_DynamicCast_AsBI_Shot_NGPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ShouldTickEnable, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBShotNGPointHUD_C_ShouldTickEnable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ShouldTickEnable, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000029, "Member 'BP_AJBShotNGPointHUD_C_ShouldTickEnable::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ShouldTickEnable, CallFunc_CheckLocallyControlled_bLocallyControlled) == 0x00002A, "Member 'BP_AJBShotNGPointHUD_C_ShouldTickEnable::CallFunc_CheckLocallyControlled_bLocallyControlled' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ShouldTickEnable, CallFunc_BooleanAND_ReturnValue) == 0x00002B, "Member 'BP_AJBShotNGPointHUD_C_ShouldTickEnable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ShouldTickEnable, CallFunc_Conv_BoolToString_ReturnValue) == 0x000030, "Member 'BP_AJBShotNGPointHUD_C_ShouldTickEnable::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");

// Function BP_AJBShotNGPointHUD.BP_AJBShotNGPointHUD_C.GetShotPointComponent
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBShotNGPointHUD_C_GetShotPointComponent final
{
public:
	class USceneComponent*                        ShotPointComp;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetComponentsByTag_ReturnValue;           // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBShotNGPointHUD_C_GetShotPointComponent) == 0x000008, "Wrong alignment on BP_AJBShotNGPointHUD_C_GetShotPointComponent");
static_assert(sizeof(BP_AJBShotNGPointHUD_C_GetShotPointComponent) == 0x000038, "Wrong size on BP_AJBShotNGPointHUD_C_GetShotPointComponent");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_GetShotPointComponent, ShotPointComp) == 0x000000, "Member 'BP_AJBShotNGPointHUD_C_GetShotPointComponent::ShotPointComp' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_GetShotPointComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBShotNGPointHUD_C_GetShotPointComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_GetShotPointComponent, CallFunc_GetComponentsByTag_ReturnValue) == 0x000010, "Member 'BP_AJBShotNGPointHUD_C_GetShotPointComponent::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_GetShotPointComponent, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_AJBShotNGPointHUD_C_GetShotPointComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_GetShotPointComponent, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AJBShotNGPointHUD_C_GetShotPointComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_GetShotPointComponent, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000030, "Member 'BP_AJBShotNGPointHUD_C_GetShotPointComponent::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_GetShotPointComponent, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'BP_AJBShotNGPointHUD_C_GetShotPointComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_GetShotPointComponent, CallFunc_IsValid_ReturnValue1) == 0x000032, "Member 'BP_AJBShotNGPointHUD_C_GetShotPointComponent::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_GetShotPointComponent, CallFunc_BooleanAND_ReturnValue1) == 0x000033, "Member 'BP_AJBShotNGPointHUD_C_GetShotPointComponent::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function BP_AJBShotNGPointHUD.BP_AJBShotNGPointHUD_C.GetShutTracedObjectTypes
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBShotNGPointHUD_C_GetShutTracedObjectTypes final
{
public:
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AJBShotNGPointHUD_C_GetShutTracedObjectTypes) == 0x000008, "Wrong alignment on BP_AJBShotNGPointHUD_C_GetShutTracedObjectTypes");
static_assert(sizeof(BP_AJBShotNGPointHUD_C_GetShutTracedObjectTypes) == 0x000020, "Wrong size on BP_AJBShotNGPointHUD_C_GetShutTracedObjectTypes");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_GetShutTracedObjectTypes, ObjectTypes) == 0x000000, "Member 'BP_AJBShotNGPointHUD_C_GetShutTracedObjectTypes::ObjectTypes' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_GetShutTracedObjectTypes, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_AJBShotNGPointHUD_C_GetShutTracedObjectTypes::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_AJBShotNGPointHUD.BP_AJBShotNGPointHUD_C.UpdateUI
// 0x05E0 (0x05E0 - 0x0000)
struct BP_AJBShotNGPointHUD_C_UpdateUI final
{
public:
	class AAJBInGameCharacter*                    TargetCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<bool>                                  bShouldEnableUI;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	struct FVector                                TempDecidedLocation;                               // 0x0018(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempShotLocationNum;                               // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTempMultipleShotLocation;                         // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        TempShotLocations;                                 // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<float>                                 TempDistance;                                      // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FVector>                        TempShutLocation;                                  // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<bool>                                  bTempShutProjectile;                               // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	struct FVector                                TempTargetLocation;                                // 0x0070(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempTargetDirection;                               // 0x007C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0098(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item1;                          // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item2;                          // 0x00AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue2;           // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB[0x1];                                       // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item3;                          // 0x00BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_ShotNGPoint_C>     K2Node_DynamicCast_AsBI_Shot_NGPoint;              // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDummyShotLocation_Location;            // 0x00E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_ShotNGPoint_C>     K2Node_DynamicCast_AsBI_Shot_NGPoint1;             // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetShutTraceRadius_Radius;                // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_GetShutTracedObjectTypes_ObjectTypes;     // 0x0128(0x0010)(ZeroConstructor, ReferenceParm)
	struct FHitResult                             CallFunc_AJBSphereTraceForObjects_OutHit;          // 0x0138(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_AJBSphereTraceForObjects_ReturnValue;     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array1;                           // 0x01C8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DA[0x2];                                      // 0x01DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0208(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0240(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x024C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_ShotNGPoint_C>     K2Node_DynamicCast_AsBI_Shot_NGPoint2;             // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetShutTraceRadius_Radius1;               // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_GetShutTracedObjectTypes_ObjectTypes1;    // 0x0270(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item4;                          // 0x0284(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_AJBSphereTraceForObjects_OutHit1;         // 0x0290(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_AJBSphereTraceForObjects_ReturnValue1;    // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit1;             // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap1;          // 0x0325(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_326[0x2];                                      // 0x0326(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time1;                     // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance1;                 // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location1;                 // 0x0330(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint1;              // 0x033C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal1;                   // 0x0348(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal1;             // 0x0354(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat1;                  // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor1;                 // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent1;             // 0x0370(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName1;              // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem1;                  // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex1;                // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart1;               // 0x0388(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd1;                 // 0x0394(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue3;                   // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AD[0x3];                                      // 0x03AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_ShotNGPoint_C>     K2Node_DynamicCast_AsBI_Shot_NGPoint3;             // 0x03B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_GetShotLocation_Locations;                // 0x03C8(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x03E8(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x03F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0400(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScreenCenterPosition_PosX;             // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScreenCenterPosition_PosY;             // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array2;                           // 0x0410(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue1;         // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToScreen_ScreenLocation; // 0x0428(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToScreen_ReturnValue; // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x3];                                      // 0x0431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ProjectWorldLocationToScreen_ScreenLocation1; // 0x0434(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToScreen_ReturnValue1; // 0x043C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43D[0x3];                                      // 0x043D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0440(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue4;                // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x3];                                      // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0454(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item5;                          // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue1;     // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46A[0x2];                                      // 0x046A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue2;         // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenPositionToWorld_WorldLocation; // 0x0478(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenPositionToWorld_WorldDirection; // 0x0484(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeprojectScreenPositionToWorld_ReturnValue; // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_492[0x2];                                      // 0x0492(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_GetShutTracedObjectTypes_ObjectTypes2;    // 0x0498(0x0010)(ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x04A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable;                              // 0x04B4(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x04C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue4;                   // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_AJBLineTraceForObjects_OutHit;            // 0x04D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_AJBLineTraceForObjects_ReturnValue;       // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_559[0x3];                                      // 0x0559(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x055C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue5;                   // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit2;             // 0x0564(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap2;          // 0x0565(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_566[0x2];                                      // 0x0566(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time2;                     // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance2;                 // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location2;                 // 0x0570(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint2;              // 0x057C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal2;                   // 0x0588(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal2;             // 0x0594(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat2;                  // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor2;                 // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent2;             // 0x05B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName2;              // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem2;                  // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex2;                // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart2;               // 0x05C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd2;                 // 0x05D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBShotNGPointHUD_C_UpdateUI) == 0x000008, "Wrong alignment on BP_AJBShotNGPointHUD_C_UpdateUI");
static_assert(sizeof(BP_AJBShotNGPointHUD_C_UpdateUI) == 0x0005E0, "Wrong size on BP_AJBShotNGPointHUD_C_UpdateUI");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, TargetCharacter) == 0x000000, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, bShouldEnableUI) == 0x000008, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::bShouldEnableUI' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, TempDecidedLocation) == 0x000018, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::TempDecidedLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, TempShotLocationNum) == 0x000024, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::TempShotLocationNum' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, bTempMultipleShotLocation) == 0x000028, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::bTempMultipleShotLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, TempShotLocations) == 0x000030, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::TempShotLocations' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, TempDistance) == 0x000040, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::TempDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, TempShutLocation) == 0x000050, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::TempShutLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, bTempShutProjectile) == 0x000060, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::bTempShutProjectile' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, TempTargetLocation) == 0x000070, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::TempTargetLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, TempTargetDirection) == 0x00007C, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::TempTargetDirection' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00008C, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Array_Length_ReturnValue1) == 0x000090, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, Temp_int_Array_Index_Variable) == 0x000094, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Array_Get_Item1) == 0x0000A4, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Array_Length_ReturnValue2) == 0x0000A8, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Array_Get_Item2) == 0x0000AC, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x0000B8, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000B9, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_EqualEqual_IntInt_ReturnValue2) == 0x0000BA, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_EqualEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Array_Get_Item3) == 0x0000BC, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, Temp_bool_Variable) == 0x0000C8, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, K2Node_DynamicCast_AsBI_Shot_NGPoint) == 0x0000D0, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::K2Node_DynamicCast_AsBI_Shot_NGPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Array_Add_ReturnValue) == 0x0000E4, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_GetDummyShotLocation_Location) == 0x0000E8, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_GetDummyShotLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, K2Node_MakeArray_Array) == 0x0000F8, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, Temp_int_Array_Index_Variable1) == 0x000108, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, K2Node_DynamicCast_AsBI_Shot_NGPoint1) == 0x000110, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::K2Node_DynamicCast_AsBI_Shot_NGPoint1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, K2Node_DynamicCast_bSuccess1) == 0x000120, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_GetShutTraceRadius_Radius) == 0x000124, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_GetShutTraceRadius_Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_GetShutTracedObjectTypes_ObjectTypes) == 0x000128, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_GetShutTracedObjectTypes_ObjectTypes' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_AJBSphereTraceForObjects_OutHit) == 0x000138, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_AJBSphereTraceForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_AJBSphereTraceForObjects_ReturnValue) == 0x0001C0, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_AJBSphereTraceForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, K2Node_MakeArray_Array1) == 0x0001C8, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_bBlockingHit) == 0x0001D8, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001D9, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_Time) == 0x0001DC, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_Distance) == 0x0001E0, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_Location) == 0x0001E4, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_ImpactPoint) == 0x0001F0, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_Normal) == 0x0001FC, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_ImpactNormal) == 0x000208, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_PhysMat) == 0x000218, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_HitActor) == 0x000220, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_HitComponent) == 0x000228, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_HitBoneName) == 0x000230, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_HitItem) == 0x000238, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_FaceIndex) == 0x00023C, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_TraceStart) == 0x000240, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_TraceEnd) == 0x00024C, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, K2Node_DynamicCast_AsBI_Shot_NGPoint2) == 0x000258, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::K2Node_DynamicCast_AsBI_Shot_NGPoint2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, K2Node_DynamicCast_bSuccess2) == 0x000268, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_GetShutTraceRadius_Radius1) == 0x00026C, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_GetShutTraceRadius_Radius1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_GetShutTracedObjectTypes_ObjectTypes1) == 0x000270, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_GetShutTracedObjectTypes_ObjectTypes1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, Temp_int_Loop_Counter_Variable) == 0x000280, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Array_Get_Item4) == 0x000284, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_AJBSphereTraceForObjects_OutHit1) == 0x000290, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_AJBSphereTraceForObjects_OutHit1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_AJBSphereTraceForObjects_ReturnValue1) == 0x000318, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_AJBSphereTraceForObjects_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Add_IntInt_ReturnValue) == 0x00031C, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Array_Add_ReturnValue1) == 0x000320, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_bBlockingHit1) == 0x000324, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_bBlockingHit1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_bInitialOverlap1) == 0x000325, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_bInitialOverlap1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_Time1) == 0x000328, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_Time1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_Distance1) == 0x00032C, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_Distance1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_Location1) == 0x000330, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_ImpactPoint1) == 0x00033C, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_ImpactPoint1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_Normal1) == 0x000348, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_Normal1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_ImpactNormal1) == 0x000354, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_ImpactNormal1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_PhysMat1) == 0x000360, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_PhysMat1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_HitActor1) == 0x000368, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_HitActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_HitComponent1) == 0x000370, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_HitComponent1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_HitBoneName1) == 0x000378, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_HitBoneName1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_HitItem1) == 0x000380, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_HitItem1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_FaceIndex1) == 0x000384, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_FaceIndex1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_TraceStart1) == 0x000388, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_TraceStart1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_TraceEnd1) == 0x000394, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_TraceEnd1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Array_Add_ReturnValue2) == 0x0003A0, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Array_Add_ReturnValue3) == 0x0003A4, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Array_Add_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Array_Length_ReturnValue3) == 0x0003A8, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Less_IntInt_ReturnValue) == 0x0003AC, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, K2Node_DynamicCast_AsBI_Shot_NGPoint3) == 0x0003B0, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::K2Node_DynamicCast_AsBI_Shot_NGPoint3' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, K2Node_DynamicCast_bSuccess3) == 0x0003C0, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_GetShotLocation_Locations) == 0x0003C8, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_GetShotLocation_Locations' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_GetViewportScale_ReturnValue) == 0x0003D8, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_GetPlayerController_ReturnValue) == 0x0003E0, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x0003E8, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x0003F0, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0003F8, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000400, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_GetScreenCenterPosition_PosX) == 0x000408, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_GetScreenCenterPosition_PosX' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_GetScreenCenterPosition_PosY) == 0x00040C, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_GetScreenCenterPosition_PosY' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, K2Node_MakeArray_Array2) == 0x000410, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_GetPlayerController_ReturnValue1) == 0x000420, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_GetPlayerController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_ProjectWorldLocationToScreen_ScreenLocation) == 0x000428, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_ProjectWorldLocationToScreen_ScreenLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_ProjectWorldLocationToScreen_ReturnValue) == 0x000430, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_ProjectWorldLocationToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_ProjectWorldLocationToScreen_ScreenLocation1) == 0x000434, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_ProjectWorldLocationToScreen_ScreenLocation1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_ProjectWorldLocationToScreen_ReturnValue1) == 0x00043C, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_ProjectWorldLocationToScreen_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000440, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Array_Length_ReturnValue4) == 0x000448, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Array_Length_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_VSize2D_ReturnValue) == 0x00044C, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000450, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000454, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Array_Get_Item5) == 0x000460, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Array_Get_Item5' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_VSize_ReturnValue) == 0x000464, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_GreaterEqual_FloatFloat_ReturnValue1) == 0x000468, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_GreaterEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000469, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, Temp_int_Loop_Counter_Variable1) == 0x00046C, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_GetPlayerController_ReturnValue2) == 0x000470, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_GetPlayerController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_DeprojectScreenPositionToWorld_WorldLocation) == 0x000478, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_DeprojectScreenPositionToWorld_WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_DeprojectScreenPositionToWorld_WorldDirection) == 0x000484, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_DeprojectScreenPositionToWorld_WorldDirection' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_DeprojectScreenPositionToWorld_ReturnValue) == 0x000490, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_DeprojectScreenPositionToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Less_IntInt_ReturnValue1) == 0x000491, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Add_IntInt_ReturnValue1) == 0x000494, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_GetShutTracedObjectTypes_ObjectTypes2) == 0x000498, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_GetShutTracedObjectTypes_ObjectTypes2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0004A8, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, Temp_struct_Variable) == 0x0004B4, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Add_VectorVector_ReturnValue) == 0x0004C0, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Array_Add_ReturnValue4) == 0x0004CC, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Array_Add_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_AJBLineTraceForObjects_OutHit) == 0x0004D0, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_AJBLineTraceForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_AJBLineTraceForObjects_ReturnValue) == 0x000558, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_AJBLineTraceForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, Temp_float_Variable) == 0x00055C, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_Array_Add_ReturnValue5) == 0x000560, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_Array_Add_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_bBlockingHit2) == 0x000564, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_bBlockingHit2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_bInitialOverlap2) == 0x000565, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_bInitialOverlap2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_Time2) == 0x000568, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_Time2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_Distance2) == 0x00056C, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_Distance2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_Location2) == 0x000570, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_Location2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_ImpactPoint2) == 0x00057C, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_ImpactPoint2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_Normal2) == 0x000588, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_Normal2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_ImpactNormal2) == 0x000594, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_ImpactNormal2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_PhysMat2) == 0x0005A0, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_PhysMat2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_HitActor2) == 0x0005A8, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_HitActor2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_HitComponent2) == 0x0005B0, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_HitComponent2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_HitBoneName2) == 0x0005B8, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_HitBoneName2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_HitItem2) == 0x0005C0, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_HitItem2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_FaceIndex2) == 0x0005C4, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_FaceIndex2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_TraceStart2) == 0x0005C8, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_TraceStart2' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_UpdateUI, CallFunc_BreakHitResult_TraceEnd2) == 0x0005D4, "Member 'BP_AJBShotNGPointHUD_C_UpdateUI::CallFunc_BreakHitResult_TraceEnd2' has a wrong offset!");

// Function BP_AJBShotNGPointHUD.BP_AJBShotNGPointHUD_C.ChangeActivate
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBShotNGPointHUD_C_ChangeActivate final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBShotNGPointHUD_C_ChangeActivate) == 0x000001, "Wrong alignment on BP_AJBShotNGPointHUD_C_ChangeActivate");
static_assert(sizeof(BP_AJBShotNGPointHUD_C_ChangeActivate) == 0x000002, "Wrong size on BP_AJBShotNGPointHUD_C_ChangeActivate");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ChangeActivate, bEnable) == 0x000000, "Member 'BP_AJBShotNGPointHUD_C_ChangeActivate::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_ChangeActivate, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_AJBShotNGPointHUD_C_ChangeActivate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AJBShotNGPointHUD.BP_AJBShotNGPointHUD_C.SetNGPointVisibility
// 0x0006 (0x0006 - 0x0000)
struct BP_AJBShotNGPointHUD_C_SetNGPointVisibility final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBShotNGPointHUD_C_SetNGPointVisibility) == 0x000001, "Wrong alignment on BP_AJBShotNGPointHUD_C_SetNGPointVisibility");
static_assert(sizeof(BP_AJBShotNGPointHUD_C_SetNGPointVisibility) == 0x000006, "Wrong size on BP_AJBShotNGPointHUD_C_SetNGPointVisibility");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_SetNGPointVisibility, bNewVisibility) == 0x000000, "Member 'BP_AJBShotNGPointHUD_C_SetNGPointVisibility::bNewVisibility' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_SetNGPointVisibility, Temp_bool_Variable) == 0x000001, "Member 'BP_AJBShotNGPointHUD_C_SetNGPointVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_SetNGPointVisibility, Temp_byte_Variable) == 0x000002, "Member 'BP_AJBShotNGPointHUD_C_SetNGPointVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_SetNGPointVisibility, Temp_byte_Variable1) == 0x000003, "Member 'BP_AJBShotNGPointHUD_C_SetNGPointVisibility::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_SetNGPointVisibility, K2Node_Select_Default) == 0x000004, "Member 'BP_AJBShotNGPointHUD_C_SetNGPointVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_SetNGPointVisibility, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_AJBShotNGPointHUD_C_SetNGPointVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBShotNGPointHUD.BP_AJBShotNGPointHUD_C.SetupInGameCharacter
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBShotNGPointHUD_C_SetupInGameCharacter final
{
public:
	class AAJBInGameCharacter*                    TargetCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBShotNGPointHUD_C_SetupInGameCharacter) == 0x000008, "Wrong alignment on BP_AJBShotNGPointHUD_C_SetupInGameCharacter");
static_assert(sizeof(BP_AJBShotNGPointHUD_C_SetupInGameCharacter) == 0x000008, "Wrong size on BP_AJBShotNGPointHUD_C_SetupInGameCharacter");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_SetupInGameCharacter, TargetCharacter) == 0x000000, "Member 'BP_AJBShotNGPointHUD_C_SetupInGameCharacter::TargetCharacter' has a wrong offset!");

// Function BP_AJBShotNGPointHUD.BP_AJBShotNGPointHUD_C.SetupTargetWidget
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBShotNGPointHUD_C_SetupTargetWidget final
{
public:
	class UWB_ShotNG_C*                           TargetWidget_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBShotNGPointHUD_C_SetupTargetWidget) == 0x000008, "Wrong alignment on BP_AJBShotNGPointHUD_C_SetupTargetWidget");
static_assert(sizeof(BP_AJBShotNGPointHUD_C_SetupTargetWidget) == 0x000008, "Wrong size on BP_AJBShotNGPointHUD_C_SetupTargetWidget");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_SetupTargetWidget, TargetWidget_0) == 0x000000, "Member 'BP_AJBShotNGPointHUD_C_SetupTargetWidget::TargetWidget_0' has a wrong offset!");

// Function BP_AJBShotNGPointHUD.BP_AJBShotNGPointHUD_C.CheckEnableElement
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBShotNGPointHUD_C_CheckEnableElement final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBShotNGPointHUD_C_CheckEnableElement) == 0x000004, "Wrong alignment on BP_AJBShotNGPointHUD_C_CheckEnableElement");
static_assert(sizeof(BP_AJBShotNGPointHUD_C_CheckEnableElement) == 0x000008, "Wrong size on BP_AJBShotNGPointHUD_C_CheckEnableElement");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_CheckEnableElement, Index_0) == 0x000000, "Member 'BP_AJBShotNGPointHUD_C_CheckEnableElement::Index_0' has a wrong offset!");
static_assert(offsetof(BP_AJBShotNGPointHUD_C_CheckEnableElement, bEnable) == 0x000004, "Member 'BP_AJBShotNGPointHUD_C_CheckEnableElement::bEnable' has a wrong offset!");

}


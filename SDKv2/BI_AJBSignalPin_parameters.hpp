#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_AJBSignalPin

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BI_AJBSignalPin.BI_AJBSignalPin_C.UpdateSize
// 0x0008 (0x0008 - 0x0000)
struct BI_AJBSignalPin_C_UpdateSize final
{
public:
	struct FVector2D                              Size;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_AJBSignalPin_C_UpdateSize) == 0x000004, "Wrong alignment on BI_AJBSignalPin_C_UpdateSize");
static_assert(sizeof(BI_AJBSignalPin_C_UpdateSize) == 0x000008, "Wrong size on BI_AJBSignalPin_C_UpdateSize");
static_assert(offsetof(BI_AJBSignalPin_C_UpdateSize, Size) == 0x000000, "Member 'BI_AJBSignalPin_C_UpdateSize::Size' has a wrong offset!");

// Function BI_AJBSignalPin.BI_AJBSignalPin_C.SetIsPair
// 0x0001 (0x0001 - 0x0000)
struct BI_AJBSignalPin_C_SetIsPair final
{
public:
	bool                                          bIsPair;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BI_AJBSignalPin_C_SetIsPair) == 0x000001, "Wrong alignment on BI_AJBSignalPin_C_SetIsPair");
static_assert(sizeof(BI_AJBSignalPin_C_SetIsPair) == 0x000001, "Wrong size on BI_AJBSignalPin_C_SetIsPair");
static_assert(offsetof(BI_AJBSignalPin_C_SetIsPair, bIsPair) == 0x000000, "Member 'BI_AJBSignalPin_C_SetIsPair::bIsPair' has a wrong offset!");

// Function BI_AJBSignalPin.BI_AJBSignalPin_C.PlayVanishAnimation
// 0x0008 (0x0008 - 0x0000)
struct BI_AJBSignalPin_C_PlayVanishAnimation final
{
public:
	bool                                          bIsTimeUp;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AnimationLength;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_AJBSignalPin_C_PlayVanishAnimation) == 0x000004, "Wrong alignment on BI_AJBSignalPin_C_PlayVanishAnimation");
static_assert(sizeof(BI_AJBSignalPin_C_PlayVanishAnimation) == 0x000008, "Wrong size on BI_AJBSignalPin_C_PlayVanishAnimation");
static_assert(offsetof(BI_AJBSignalPin_C_PlayVanishAnimation, bIsTimeUp) == 0x000000, "Member 'BI_AJBSignalPin_C_PlayVanishAnimation::bIsTimeUp' has a wrong offset!");
static_assert(offsetof(BI_AJBSignalPin_C_PlayVanishAnimation, AnimationLength) == 0x000004, "Member 'BI_AJBSignalPin_C_PlayVanishAnimation::AnimationLength' has a wrong offset!");

// Function BI_AJBSignalPin.BI_AJBSignalPin_C.SetSignalType
// 0x0008 (0x0008 - 0x0000)
struct BI_AJBSignalPin_C_SetSignalType final
{
public:
	struct FGameplayTag                           SignalTypeTag;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_AJBSignalPin_C_SetSignalType) == 0x000008, "Wrong alignment on BI_AJBSignalPin_C_SetSignalType");
static_assert(sizeof(BI_AJBSignalPin_C_SetSignalType) == 0x000008, "Wrong size on BI_AJBSignalPin_C_SetSignalType");
static_assert(offsetof(BI_AJBSignalPin_C_SetSignalType, SignalTypeTag) == 0x000000, "Member 'BI_AJBSignalPin_C_SetSignalType::SignalTypeTag' has a wrong offset!");

// Function BI_AJBSignalPin.BI_AJBSignalPin_C.UpdateBlurOffset
// 0x0004 (0x0004 - 0x0000)
struct BI_AJBSignalPin_C_UpdateBlurOffset final
{
public:
	float                                         BlurOffset;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_AJBSignalPin_C_UpdateBlurOffset) == 0x000004, "Wrong alignment on BI_AJBSignalPin_C_UpdateBlurOffset");
static_assert(sizeof(BI_AJBSignalPin_C_UpdateBlurOffset) == 0x000004, "Wrong size on BI_AJBSignalPin_C_UpdateBlurOffset");
static_assert(offsetof(BI_AJBSignalPin_C_UpdateBlurOffset, BlurOffset) == 0x000000, "Member 'BI_AJBSignalPin_C_UpdateBlurOffset::BlurOffset' has a wrong offset!");

}


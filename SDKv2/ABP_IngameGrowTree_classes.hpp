#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_IngameGrowTree

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_IngameGrowTree.ABP_IngameGrowTree_C
// 0x00E0 (0x0438 - 0x0358)
class UABP_IngameGrowTree_C final : public UAnimInstance
{
public:
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_A4586B55413BFCF5C7F4D18C1273B306; // 0x0368(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_DF3877DA479762DEA4BF64AA348C890B; // 0x03B0(0x0070)()
	float                                         PlayTime;                                          // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      AnimSequence;                                      // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Curve;                                             // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_IngameGrowTree(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_IngameGrowTree_AnimGraphNode_SequenceEvaluator_DF3877DA479762DEA4BF64AA348C890B();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_IngameGrowTree_C">();
	}
	static class UABP_IngameGrowTree_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_IngameGrowTree_C>();
	}
};
static_assert(alignof(UABP_IngameGrowTree_C) == 0x000008, "Wrong alignment on UABP_IngameGrowTree_C");
static_assert(sizeof(UABP_IngameGrowTree_C) == 0x000438, "Wrong size on UABP_IngameGrowTree_C");
static_assert(offsetof(UABP_IngameGrowTree_C, UberGraphFrame) == 0x000360, "Member 'UABP_IngameGrowTree_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_IngameGrowTree_C, AnimGraphNode_Root_A4586B55413BFCF5C7F4D18C1273B306) == 0x000368, "Member 'UABP_IngameGrowTree_C::AnimGraphNode_Root_A4586B55413BFCF5C7F4D18C1273B306' has a wrong offset!");
static_assert(offsetof(UABP_IngameGrowTree_C, AnimGraphNode_SequenceEvaluator_DF3877DA479762DEA4BF64AA348C890B) == 0x0003B0, "Member 'UABP_IngameGrowTree_C::AnimGraphNode_SequenceEvaluator_DF3877DA479762DEA4BF64AA348C890B' has a wrong offset!");
static_assert(offsetof(UABP_IngameGrowTree_C, PlayTime) == 0x000420, "Member 'UABP_IngameGrowTree_C::PlayTime' has a wrong offset!");
static_assert(offsetof(UABP_IngameGrowTree_C, AnimSequence) == 0x000428, "Member 'UABP_IngameGrowTree_C::AnimSequence' has a wrong offset!");
static_assert(offsetof(UABP_IngameGrowTree_C, Curve) == 0x000430, "Member 'UABP_IngameGrowTree_C::Curve' has a wrong offset!");

}


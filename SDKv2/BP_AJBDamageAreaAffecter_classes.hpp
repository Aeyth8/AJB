#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBDamageAreaAffecter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBDamageAreaAffecter.BP_AJBDamageAreaAffecter_C
// 0x0070 (0x0160 - 0x00F0)
class UBP_AJBDamageAreaAffecter_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F0(0x0008)(Transient, DuplicateTransient)
	UMulticastDelegateProperty_                   OnAreaDamage;                                      // 0x00F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnDamageAreaIn;                                    // 0x0108(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnDamageAreaOut;                                   // 0x0118(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          InDamageAreaAtPrevTick;                            // 0x0128(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              DamageIntervalFinishTime;                          // 0x0130(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ActorLocationOffset;                               // 0x0138(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           InDamageAreaTag;                                   // 0x0140(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBDamageAreaLocal_C*               DamageAreaLocal;                                   // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnDamageAreaVanish;                                // 0x0150(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnAreaDamage__DelegateSignature(int32 Damage);
	void OnDamageAreaIn__DelegateSignature();
	void OnDamageAreaOut__DelegateSignature();
	void OnDamageAreaVanish__DelegateSignature();
	void ExecuteUbergraph_BP_AJBDamageAreaAffecter(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBDamageAreaAffecter_C">();
	}
	static class UBP_AJBDamageAreaAffecter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBDamageAreaAffecter_C>();
	}
};
static_assert(alignof(UBP_AJBDamageAreaAffecter_C) == 0x000008, "Wrong alignment on UBP_AJBDamageAreaAffecter_C");
static_assert(sizeof(UBP_AJBDamageAreaAffecter_C) == 0x000160, "Wrong size on UBP_AJBDamageAreaAffecter_C");
static_assert(offsetof(UBP_AJBDamageAreaAffecter_C, UberGraphFrame) == 0x0000F0, "Member 'UBP_AJBDamageAreaAffecter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaAffecter_C, OnAreaDamage) == 0x0000F8, "Member 'UBP_AJBDamageAreaAffecter_C::OnAreaDamage' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaAffecter_C, OnDamageAreaIn) == 0x000108, "Member 'UBP_AJBDamageAreaAffecter_C::OnDamageAreaIn' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaAffecter_C, OnDamageAreaOut) == 0x000118, "Member 'UBP_AJBDamageAreaAffecter_C::OnDamageAreaOut' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaAffecter_C, InDamageAreaAtPrevTick) == 0x000128, "Member 'UBP_AJBDamageAreaAffecter_C::InDamageAreaAtPrevTick' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaAffecter_C, DamageIntervalFinishTime) == 0x000130, "Member 'UBP_AJBDamageAreaAffecter_C::DamageIntervalFinishTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaAffecter_C, ActorLocationOffset) == 0x000138, "Member 'UBP_AJBDamageAreaAffecter_C::ActorLocationOffset' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaAffecter_C, InDamageAreaTag) == 0x000140, "Member 'UBP_AJBDamageAreaAffecter_C::InDamageAreaTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaAffecter_C, DamageAreaLocal) == 0x000148, "Member 'UBP_AJBDamageAreaAffecter_C::DamageAreaLocal' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaAffecter_C, OnDamageAreaVanish) == 0x000150, "Member 'UBP_AJBDamageAreaAffecter_C::OnDamageAreaVanish' has a wrong offset!");

}


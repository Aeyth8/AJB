#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameIndoorVolumeComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameIndoorVolumeComponent.BP_AJBInGameIndoorVolumeComponent_C.ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent
// 0x0118 (0x0118 - 0x0000)
struct BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBInGameIndoorManageComponent_C*   CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent1;           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor1;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp1;                     // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex1;                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0078(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBInGameIndoorManageComponent_C*   CallFunc_GetComponentByClass_ReturnValue1;         // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent) == 0x000008, "Wrong alignment on BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent");
static_assert(sizeof(BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent) == 0x000118, "Wrong size on BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent, EntryPoint) == 0x000000, "Member 'BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent, K2Node_CustomEvent_OverlappedComponent) == 0x000008, "Member 'BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent, K2Node_CustomEvent_OtherActor) == 0x000010, "Member 'BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent, K2Node_CustomEvent_OtherComp) == 0x000018, "Member 'BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent, K2Node_CustomEvent_OtherBodyIndex) == 0x000020, "Member 'BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent, CallFunc_IsValid_ReturnValue1) == 0x000030, "Member 'BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent, K2Node_CreateDelegate_OutputDelegate1) == 0x000048, "Member 'BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent, K2Node_CustomEvent_OverlappedComponent1) == 0x000058, "Member 'BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent::K2Node_CustomEvent_OverlappedComponent1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent, K2Node_CustomEvent_OtherActor1) == 0x000060, "Member 'BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent::K2Node_CustomEvent_OtherActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent, K2Node_CustomEvent_OtherComp1) == 0x000068, "Member 'BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent::K2Node_CustomEvent_OtherComp1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent, K2Node_CustomEvent_OtherBodyIndex1) == 0x000070, "Member 'BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent::K2Node_CustomEvent_OtherBodyIndex1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent, K2Node_CustomEvent_bFromSweep) == 0x000074, "Member 'BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent, K2Node_CustomEvent_SweepResult) == 0x000078, "Member 'BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent, CallFunc_IsValid_ReturnValue2) == 0x000100, "Member 'BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent, CallFunc_GetComponentByClass_ReturnValue1) == 0x000108, "Member 'BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent, CallFunc_IsValid_ReturnValue3) == 0x000110, "Member 'BP_AJBInGameIndoorVolumeComponent_C_ExecuteUbergraph_BP_AJBInGameIndoorVolumeComponent::CallFunc_IsValid_ReturnValue3' has a wrong offset!");

// Function BP_AJBInGameIndoorVolumeComponent.BP_AJBInGameIndoorVolumeComponent_C.OnComponentEndOverlap_Event
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameIndoorVolumeComponent_C_OnComponentEndOverlap_Event final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameIndoorVolumeComponent_C_OnComponentEndOverlap_Event) == 0x000008, "Wrong alignment on BP_AJBInGameIndoorVolumeComponent_C_OnComponentEndOverlap_Event");
static_assert(sizeof(BP_AJBInGameIndoorVolumeComponent_C_OnComponentEndOverlap_Event) == 0x000020, "Wrong size on BP_AJBInGameIndoorVolumeComponent_C_OnComponentEndOverlap_Event");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_OnComponentEndOverlap_Event, OverlappedComponent) == 0x000000, "Member 'BP_AJBInGameIndoorVolumeComponent_C_OnComponentEndOverlap_Event::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_OnComponentEndOverlap_Event, OtherActor) == 0x000008, "Member 'BP_AJBInGameIndoorVolumeComponent_C_OnComponentEndOverlap_Event::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_OnComponentEndOverlap_Event, OtherComp) == 0x000010, "Member 'BP_AJBInGameIndoorVolumeComponent_C_OnComponentEndOverlap_Event::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_OnComponentEndOverlap_Event, OtherBodyIndex) == 0x000018, "Member 'BP_AJBInGameIndoorVolumeComponent_C_OnComponentEndOverlap_Event::OtherBodyIndex' has a wrong offset!");

// Function BP_AJBInGameIndoorVolumeComponent.BP_AJBInGameIndoorVolumeComponent_C.OnComponentBeginOverlap_Event
// 0x00A8 (0x00A8 - 0x0000)
struct BP_AJBInGameIndoorVolumeComponent_C_OnComponentBeginOverlap_Event final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBInGameIndoorVolumeComponent_C_OnComponentBeginOverlap_Event) == 0x000008, "Wrong alignment on BP_AJBInGameIndoorVolumeComponent_C_OnComponentBeginOverlap_Event");
static_assert(sizeof(BP_AJBInGameIndoorVolumeComponent_C_OnComponentBeginOverlap_Event) == 0x0000A8, "Wrong size on BP_AJBInGameIndoorVolumeComponent_C_OnComponentBeginOverlap_Event");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_OnComponentBeginOverlap_Event, OverlappedComponent) == 0x000000, "Member 'BP_AJBInGameIndoorVolumeComponent_C_OnComponentBeginOverlap_Event::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_OnComponentBeginOverlap_Event, OtherActor) == 0x000008, "Member 'BP_AJBInGameIndoorVolumeComponent_C_OnComponentBeginOverlap_Event::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_OnComponentBeginOverlap_Event, OtherComp) == 0x000010, "Member 'BP_AJBInGameIndoorVolumeComponent_C_OnComponentBeginOverlap_Event::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_OnComponentBeginOverlap_Event, OtherBodyIndex) == 0x000018, "Member 'BP_AJBInGameIndoorVolumeComponent_C_OnComponentBeginOverlap_Event::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_OnComponentBeginOverlap_Event, bFromSweep) == 0x00001C, "Member 'BP_AJBInGameIndoorVolumeComponent_C_OnComponentBeginOverlap_Event::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_OnComponentBeginOverlap_Event, SweepResult) == 0x000020, "Member 'BP_AJBInGameIndoorVolumeComponent_C_OnComponentBeginOverlap_Event::SweepResult' has a wrong offset!");

// Function BP_AJBInGameIndoorVolumeComponent.BP_AJBInGameIndoorVolumeComponent_C.CopyIndoorVolumeProperty
// 0x00D0 (0x00D0 - 0x0000)
struct BP_AJBInGameIndoorVolumeComponent_C_CopyIndoorVolumeProperty final
{
public:
	class UBP_AJBInGameIndoorVolumeComponent_C*   Src;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0040(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBInGameIndoorVolumeComponent_C_CopyIndoorVolumeProperty) == 0x000010, "Wrong alignment on BP_AJBInGameIndoorVolumeComponent_C_CopyIndoorVolumeProperty");
static_assert(sizeof(BP_AJBInGameIndoorVolumeComponent_C_CopyIndoorVolumeProperty) == 0x0000D0, "Wrong size on BP_AJBInGameIndoorVolumeComponent_C_CopyIndoorVolumeProperty");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_CopyIndoorVolumeProperty, Src) == 0x000000, "Member 'BP_AJBInGameIndoorVolumeComponent_C_CopyIndoorVolumeProperty::Src' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_CopyIndoorVolumeProperty, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'BP_AJBInGameIndoorVolumeComponent_C_CopyIndoorVolumeProperty::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameIndoorVolumeComponent_C_CopyIndoorVolumeProperty, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000040, "Member 'BP_AJBInGameIndoorVolumeComponent_C_CopyIndoorVolumeProperty::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");

}


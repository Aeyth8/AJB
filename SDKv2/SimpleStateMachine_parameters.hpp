#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SimpleStateMachine

#include "Basic.hpp"


namespace SDK::Params
{

// Function SimpleStateMachine.SimpleStateMachine_C.ExecuteUbergraph_SimpleStateMachine
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) SimpleStateMachine_C_ExecuteUbergraph_SimpleStateMachine final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleStateMachine_C_ExecuteUbergraph_SimpleStateMachine) == 0x000008, "Wrong alignment on SimpleStateMachine_C_ExecuteUbergraph_SimpleStateMachine");
static_assert(sizeof(SimpleStateMachine_C_ExecuteUbergraph_SimpleStateMachine) == 0x000018, "Wrong size on SimpleStateMachine_C_ExecuteUbergraph_SimpleStateMachine");
static_assert(offsetof(SimpleStateMachine_C_ExecuteUbergraph_SimpleStateMachine, EntryPoint) == 0x000000, "Member 'SimpleStateMachine_C_ExecuteUbergraph_SimpleStateMachine::EntryPoint' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_ExecuteUbergraph_SimpleStateMachine, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'SimpleStateMachine_C_ExecuteUbergraph_SimpleStateMachine::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_ExecuteUbergraph_SimpleStateMachine, CallFunc_Array_Get_Item) == 0x000008, "Member 'SimpleStateMachine_C_ExecuteUbergraph_SimpleStateMachine::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_ExecuteUbergraph_SimpleStateMachine, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'SimpleStateMachine_C_ExecuteUbergraph_SimpleStateMachine::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function SimpleStateMachine.SimpleStateMachine_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct SimpleStateMachine_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleStateMachine_C_ReceiveTick) == 0x000004, "Wrong alignment on SimpleStateMachine_C_ReceiveTick");
static_assert(sizeof(SimpleStateMachine_C_ReceiveTick) == 0x000004, "Wrong size on SimpleStateMachine_C_ReceiveTick");
static_assert(offsetof(SimpleStateMachine_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'SimpleStateMachine_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function SimpleStateMachine.SimpleStateMachine_C.ChangeState
// 0x0078 (0x0078 - 0x0000)
struct SimpleStateMachine_C_ChangeState final
{
public:
	class FName                                   State;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Name_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BuildString_Name_ReturnValue1;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue1;           // 0x0060(0x0018)()
};
static_assert(alignof(SimpleStateMachine_C_ChangeState) == 0x000008, "Wrong alignment on SimpleStateMachine_C_ChangeState");
static_assert(sizeof(SimpleStateMachine_C_ChangeState) == 0x000078, "Wrong size on SimpleStateMachine_C_ChangeState");
static_assert(offsetof(SimpleStateMachine_C_ChangeState, State) == 0x000000, "Member 'SimpleStateMachine_C_ChangeState::State' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_ChangeState, CallFunc_BuildString_Name_ReturnValue) == 0x000008, "Member 'SimpleStateMachine_C_ChangeState::CallFunc_BuildString_Name_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_ChangeState, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'SimpleStateMachine_C_ChangeState::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_ChangeState, CallFunc_GetObjectName_ReturnValue) == 0x000030, "Member 'SimpleStateMachine_C_ChangeState::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_ChangeState, CallFunc_Array_Find_ReturnValue) == 0x000040, "Member 'SimpleStateMachine_C_ChangeState::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_ChangeState, CallFunc_BuildString_Name_ReturnValue1) == 0x000048, "Member 'SimpleStateMachine_C_ChangeState::CallFunc_BuildString_Name_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_ChangeState, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000058, "Member 'SimpleStateMachine_C_ChangeState::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_ChangeState, CallFunc_Conv_StringToText_ReturnValue1) == 0x000060, "Member 'SimpleStateMachine_C_ChangeState::CallFunc_Conv_StringToText_ReturnValue1' has a wrong offset!");

// Function SimpleStateMachine.SimpleStateMachine_C.Tick
// 0x0070 (0x0070 - 0x0000)
struct SimpleStateMachine_C_Tick final
{
public:
	class UObject*                                L_Caller;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISimpleStateMachineInterface_C> K2Node_DynamicCast_AsSimple_State_Machine_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISimpleStateMachineInterface_C> K2Node_DynamicCast_AsSimple_State_Machine_Interface1; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISimpleStateMachineInterface_C> K2Node_DynamicCast_AsSimple_State_Machine_Interface2; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SimpleStateMachine_C_Tick) == 0x000008, "Wrong alignment on SimpleStateMachine_C_Tick");
static_assert(sizeof(SimpleStateMachine_C_Tick) == 0x000070, "Wrong size on SimpleStateMachine_C_Tick");
static_assert(offsetof(SimpleStateMachine_C_Tick, L_Caller) == 0x000000, "Member 'SimpleStateMachine_C_Tick::L_Caller' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_Tick, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'SimpleStateMachine_C_Tick::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_Tick, CallFunc_GetObjectName_ReturnValue) == 0x000010, "Member 'SimpleStateMachine_C_Tick::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_Tick, CallFunc_Conv_StringToName_ReturnValue) == 0x000020, "Member 'SimpleStateMachine_C_Tick::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_Tick, K2Node_DynamicCast_AsSimple_State_Machine_Interface) == 0x000028, "Member 'SimpleStateMachine_C_Tick::K2Node_DynamicCast_AsSimple_State_Machine_Interface' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_Tick, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'SimpleStateMachine_C_Tick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_Tick, K2Node_DynamicCast_AsSimple_State_Machine_Interface1) == 0x000040, "Member 'SimpleStateMachine_C_Tick::K2Node_DynamicCast_AsSimple_State_Machine_Interface1' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_Tick, K2Node_DynamicCast_bSuccess1) == 0x000050, "Member 'SimpleStateMachine_C_Tick::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_Tick, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'SimpleStateMachine_C_Tick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_Tick, CallFunc_IsValid_ReturnValue1) == 0x000052, "Member 'SimpleStateMachine_C_Tick::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_Tick, K2Node_DynamicCast_AsSimple_State_Machine_Interface2) == 0x000058, "Member 'SimpleStateMachine_C_Tick::K2Node_DynamicCast_AsSimple_State_Machine_Interface2' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_Tick, K2Node_DynamicCast_bSuccess2) == 0x000068, "Member 'SimpleStateMachine_C_Tick::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_Tick, CallFunc_DoesImplementInterface_ReturnValue) == 0x000069, "Member 'SimpleStateMachine_C_Tick::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_Tick, CallFunc_IsValid_ReturnValue2) == 0x00006A, "Member 'SimpleStateMachine_C_Tick::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_Tick, CallFunc_NotEqual_NameName_ReturnValue) == 0x00006B, "Member 'SimpleStateMachine_C_Tick::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function SimpleStateMachine.SimpleStateMachine_C.IsInState
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) SimpleStateMachine_C_IsInState final
{
public:
	class FName                                   State;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SimpleStateMachine_C_IsInState) == 0x000008, "Wrong alignment on SimpleStateMachine_C_IsInState");
static_assert(sizeof(SimpleStateMachine_C_IsInState) == 0x000010, "Wrong size on SimpleStateMachine_C_IsInState");
static_assert(offsetof(SimpleStateMachine_C_IsInState, State) == 0x000000, "Member 'SimpleStateMachine_C_IsInState::State' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_IsInState, Result) == 0x000008, "Member 'SimpleStateMachine_C_IsInState::Result' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_IsInState, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000009, "Member 'SimpleStateMachine_C_IsInState::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function SimpleStateMachine.SimpleStateMachine_C.GetElapsedTime
// 0x0004 (0x0004 - 0x0000)
struct SimpleStateMachine_C_GetElapsedTime final
{
public:
	float                                         Elapsed_Time;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleStateMachine_C_GetElapsedTime) == 0x000004, "Wrong alignment on SimpleStateMachine_C_GetElapsedTime");
static_assert(sizeof(SimpleStateMachine_C_GetElapsedTime) == 0x000004, "Wrong size on SimpleStateMachine_C_GetElapsedTime");
static_assert(offsetof(SimpleStateMachine_C_GetElapsedTime, Elapsed_Time) == 0x000000, "Member 'SimpleStateMachine_C_GetElapsedTime::Elapsed_Time' has a wrong offset!");

// Function SimpleStateMachine.SimpleStateMachine_C.ChangeStateViaIndex
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) SimpleStateMachine_C_ChangeStateViaIndex final
{
public:
	int32                                         Idx;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleStateMachine_C_ChangeStateViaIndex) == 0x000008, "Wrong alignment on SimpleStateMachine_C_ChangeStateViaIndex");
static_assert(sizeof(SimpleStateMachine_C_ChangeStateViaIndex) == 0x000010, "Wrong size on SimpleStateMachine_C_ChangeStateViaIndex");
static_assert(offsetof(SimpleStateMachine_C_ChangeStateViaIndex, Idx) == 0x000000, "Member 'SimpleStateMachine_C_ChangeStateViaIndex::Idx' has a wrong offset!");
static_assert(offsetof(SimpleStateMachine_C_ChangeStateViaIndex, CallFunc_Array_Get_Item) == 0x000008, "Member 'SimpleStateMachine_C_ChangeStateViaIndex::CallFunc_Array_Get_Item' has a wrong offset!");

// Function SimpleStateMachine.SimpleStateMachine_C.GetCurrentState
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) SimpleStateMachine_C_GetCurrentState final
{
public:
	class FName                                   CurrentState_0;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleStateMachine_C_GetCurrentState) == 0x000008, "Wrong alignment on SimpleStateMachine_C_GetCurrentState");
static_assert(sizeof(SimpleStateMachine_C_GetCurrentState) == 0x000008, "Wrong size on SimpleStateMachine_C_GetCurrentState");
static_assert(offsetof(SimpleStateMachine_C_GetCurrentState, CurrentState_0) == 0x000000, "Member 'SimpleStateMachine_C_GetCurrentState::CurrentState_0' has a wrong offset!");

// Function SimpleStateMachine.SimpleStateMachine_C.GetNextState
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) SimpleStateMachine_C_GetNextState final
{
public:
	class FName                                   NextState_0;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleStateMachine_C_GetNextState) == 0x000008, "Wrong alignment on SimpleStateMachine_C_GetNextState");
static_assert(sizeof(SimpleStateMachine_C_GetNextState) == 0x000008, "Wrong size on SimpleStateMachine_C_GetNextState");
static_assert(offsetof(SimpleStateMachine_C_GetNextState, NextState_0) == 0x000000, "Member 'SimpleStateMachine_C_GetNextState::NextState_0' has a wrong offset!");

// Function SimpleStateMachine.SimpleStateMachine_C.GetPreviousState
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) SimpleStateMachine_C_GetPreviousState final
{
public:
	class FName                                   Previous_State;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleStateMachine_C_GetPreviousState) == 0x000008, "Wrong alignment on SimpleStateMachine_C_GetPreviousState");
static_assert(sizeof(SimpleStateMachine_C_GetPreviousState) == 0x000008, "Wrong size on SimpleStateMachine_C_GetPreviousState");
static_assert(offsetof(SimpleStateMachine_C_GetPreviousState, Previous_State) == 0x000000, "Member 'SimpleStateMachine_C_GetPreviousState::Previous_State' has a wrong offset!");

}


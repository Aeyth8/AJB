#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameAIImaginaryCharacter

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ST_AJBAICharacterSkillInfo_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter
// 0x0128 (0x0128 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBAIInGameCharacterHandle_C*       CallFunc_SpawnObject_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_AJBAICharacterSkillInfo            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0050(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> CallFunc_GetGameplayTags_self_CastInput;           // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy;         // 0x0098(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue;                         // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBHealingBase_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item1;                          // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_SkillRangeInterface_C> K2Node_DynamicCast_AsBI_Skill_Range_Interface;     // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSkillAttackRange_ReturnValue;          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue1;                        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_DynamicCast_AsAIController;                 // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_SHA_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_SHA;  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter) == 0x000008, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter) == 0x000128, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, EntryPoint) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_SpawnObject_ReturnValue) == 0x000008, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000028, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, Temp_int_Loop_Counter_Variable1) == 0x000038, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_GetDataTableRowFromName_OutRow) == 0x000050, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000070, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_Add_IntInt_ReturnValue1) == 0x000074, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000078, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_Array_Length_ReturnValue1) == 0x00007C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_Less_IntInt_ReturnValue1) == 0x000080, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_GetGameplayTags_self_CastInput) == 0x000088, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_GetGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_GetGameplayTags_TagContainerCopy) == 0x000098, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_GetGameplayTags_TagContainerCopy' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_HasTag_ReturnValue) == 0x0000B8, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_FMin_ReturnValue) == 0x0000BC, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, Temp_int_Array_Index_Variable1) == 0x0000C0, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_GetComponentByClass_ReturnValue) == 0x0000C8, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_Array_Get_Item1) == 0x0000D0, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, K2Node_DynamicCast_AsBI_Skill_Range_Interface) == 0x0000E0, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::K2Node_DynamicCast_AsBI_Skill_Range_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_GetSkillAttackRange_ReturnValue) == 0x0000F4, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_GetSkillAttackRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_DoesImplementInterface_ReturnValue) == 0x0000F8, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x0000F9, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_FMin_ReturnValue1) == 0x0000FC, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_FMin_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_IsValid_ReturnValue1) == 0x000100, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, K2Node_DynamicCast_AsAIController) == 0x000108, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::K2Node_DynamicCast_AsAIController' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, K2Node_DynamicCast_bSuccess1) == 0x000110, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_SHA) == 0x000118, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_SHA' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, K2Node_DynamicCast_bSuccess2) == 0x000120, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter, CallFunc_IsValid_ReturnValue2) == 0x000121, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ExecuteUbergraph_BP_AJBInGameAIImaginaryCharacter::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.IsAlive
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_IsAlive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_IsAlive) == 0x000001, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_IsAlive");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_IsAlive) == 0x000003, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_IsAlive");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsAlive, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsAlive::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsAlive, CallFunc_CharacterBehaviorMatches_ReturnValue) == 0x000001, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsAlive::CallFunc_CharacterBehaviorMatches_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsAlive, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsAlive::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.EqualCharacter
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_EqualCharacter final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_EqualCharacter) == 0x000008, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_EqualCharacter");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_EqualCharacter) == 0x000010, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_EqualCharacter");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_EqualCharacter, Actor) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_EqualCharacter::Actor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_EqualCharacter, ReturnValue) == 0x000008, "Member 'BP_AJBInGameAIImaginaryCharacter_C_EqualCharacter::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_EqualCharacter, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000009, "Member 'BP_AJBInGameAIImaginaryCharacter_C_EqualCharacter::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetNormalAttackSkillInfo
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetNormalAttackSkillInfo final
{
public:
	struct FST_AJBAICharacterSkillInfo            ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetNormalAttackSkillInfo) == 0x000008, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetNormalAttackSkillInfo");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetNormalAttackSkillInfo) == 0x000020, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetNormalAttackSkillInfo");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetNormalAttackSkillInfo, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetNormalAttackSkillInfo::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetSkillInfo
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetSkillInfo final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FST_AJBAICharacterSkillInfo            ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	struct FST_AJBAICharacterSkillInfo            CallFunc_Map_Find_Value;                           // 0x0028(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetSkillInfo) == 0x000008, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetSkillInfo");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetSkillInfo) == 0x000050, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetSkillInfo");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetSkillInfo, SkillTag) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetSkillInfo::SkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetSkillInfo, ReturnValue) == 0x000008, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetSkillInfo::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetSkillInfo, CallFunc_Map_Find_Value) == 0x000028, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetSkillInfo::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetSkillInfo, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetSkillInfo::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetNormalAttackSkill
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetNormalAttackSkill final
{
public:
	struct FGameplayTag                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetNormalAttackSkill) == 0x000008, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetNormalAttackSkill");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetNormalAttackSkill) == 0x000008, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetNormalAttackSkill");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetNormalAttackSkill, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetNormalAttackSkill::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetLocation
// 0x0024 (0x0024 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMovableStandLocation_ReturnValue;      // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetLocation) == 0x000004, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetLocation");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetLocation) == 0x000024, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetLocation");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetLocation, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetLocation, CallFunc_GetMovableStandLocation_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetLocation::CallFunc_GetMovableStandLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetVelocityVector
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetVelocityVector final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetVelocityVector) == 0x000004, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetVelocityVector");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetVelocityVector) == 0x000018, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetVelocityVector");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetVelocityVector, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetVelocityVector::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetVelocityVector, CallFunc_GetVelocity_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetVelocityVector::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetNormalizedVelocity
// 0x0024 (0x0024 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetNormalizedVelocity final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetNormalizedVelocity) == 0x000004, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetNormalizedVelocity");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetNormalizedVelocity) == 0x000024, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetNormalizedVelocity");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetNormalizedVelocity, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetNormalizedVelocity::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetNormalizedVelocity, CallFunc_GetVelocity_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetNormalizedVelocity::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetNormalizedVelocity, CallFunc_Normal_ReturnValue) == 0x000018, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetNormalizedVelocity::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetRawBodyActor
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetRawBodyActor final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetRawBodyActor) == 0x000008, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetRawBodyActor");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetRawBodyActor) == 0x000008, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetRawBodyActor");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetRawBodyActor, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetRawBodyActor::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetBodyRadius
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetBodyRadius final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMovableStandBodyRadius_ReturnValue;    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCapsuleRadius_CapsuleRadius;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetBodyRadius) == 0x000004, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetBodyRadius");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetBodyRadius) == 0x000010, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetBodyRadius");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetBodyRadius, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetBodyRadius::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetBodyRadius, CallFunc_GetMovableStandBodyRadius_ReturnValue) == 0x000004, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetBodyRadius::CallFunc_GetMovableStandBodyRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetBodyRadius, CallFunc_GetCapsuleRadius_CapsuleRadius) == 0x000008, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetBodyRadius::CallFunc_GetCapsuleRadius_CapsuleRadius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetBodyRadius, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetBodyRadius::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.IfCrouching
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_IfCrouching final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCrouching_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_IfCrouching) == 0x000001, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_IfCrouching");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_IfCrouching) == 0x000002, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_IfCrouching");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IfCrouching, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IfCrouching::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IfCrouching, CallFunc_IsCrouching_ReturnValue) == 0x000001, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IfCrouching::CallFunc_IsCrouching_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetForwardVector
// 0x0024 (0x0024 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetForwardVector final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMovableStandForwardVector_ReturnValue; // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetForwardVector) == 0x000004, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetForwardVector");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetForwardVector) == 0x000024, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetForwardVector");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetForwardVector, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetForwardVector::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetForwardVector, CallFunc_GetMovableStandForwardVector_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetForwardVector::CallFunc_GetMovableStandForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetForwardVector, CallFunc_GetActorForwardVector_ReturnValue) == 0x000018, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetForwardVector::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.IsJumping
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_IsJumping final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_IsJumping) == 0x000001, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_IsJumping");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_IsJumping) == 0x000002, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_IsJumping");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsJumping, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsJumping::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsJumping, CallFunc_IsFalling_ReturnValue) == 0x000001, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsJumping::CallFunc_IsFalling_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetBodyHalfHeight
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetBodyHalfHeight final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMovableStandBodyHalfHeight_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight;   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetBodyHalfHeight) == 0x000004, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetBodyHalfHeight");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetBodyHalfHeight) == 0x00000C, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetBodyHalfHeight");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetBodyHalfHeight, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetBodyHalfHeight::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetBodyHalfHeight, CallFunc_GetMovableStandBodyHalfHeight_ReturnValue) == 0x000004, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetBodyHalfHeight::CallFunc_GetMovableStandBodyHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetBodyHalfHeight, CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight) == 0x000008, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetBodyHalfHeight::CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.HasSpeed
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_HasSpeed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0004(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_HasSpeed) == 0x000004, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_HasSpeed");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_HasSpeed) == 0x000018, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_HasSpeed");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_HasSpeed, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_HasSpeed::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_HasSpeed, CallFunc_GetVelocity_ReturnValue) == 0x000004, "Member 'BP_AJBInGameAIImaginaryCharacter_C_HasSpeed::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_HasSpeed, CallFunc_VSizeSquared_ReturnValue) == 0x000010, "Member 'BP_AJBInGameAIImaginaryCharacter_C_HasSpeed::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_HasSpeed, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_AJBInGameAIImaginaryCharacter_C_HasSpeed::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_HasSpeed, CallFunc_Not_PreBool_ReturnValue) == 0x000015, "Member 'BP_AJBInGameAIImaginaryCharacter_C_HasSpeed::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.IsInDoor
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_IsInDoor final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_IsInDoor) == 0x000001, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_IsInDoor");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_IsInDoor) == 0x000001, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_IsInDoor");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsInDoor, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsInDoor::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetBodyJumpHeight
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetBodyJumpHeight final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetBodyJumpHeight) == 0x000004, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetBodyJumpHeight");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetBodyJumpHeight) == 0x000004, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetBodyJumpHeight");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetBodyJumpHeight, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetBodyJumpHeight::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.IsFalling
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_IsFalling final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_IsFalling) == 0x000001, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_IsFalling");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_IsFalling) == 0x000002, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_IsFalling");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsFalling, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsFalling::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsFalling, CallFunc_IsFalling_ReturnValue) == 0x000001, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsFalling::CallFunc_IsFalling_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.IsMovingOnGround
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_IsMovingOnGround final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_IsMovingOnGround) == 0x000001, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_IsMovingOnGround");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_IsMovingOnGround) == 0x000002, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_IsMovingOnGround");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsMovingOnGround, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsMovingOnGround::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsMovingOnGround, CallFunc_IsMovingOnGround_ReturnValue) == 0x000001, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsMovingOnGround::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.IsNPC
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_IsNPC final
{
public:
	bool                                          bIsNPC_0;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_IsNPC) == 0x000001, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_IsNPC");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_IsNPC) == 0x000001, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_IsNPC");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsNPC, bIsNPC_0) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsNPC::bIsNPC_0' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetKneeHeight
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetKneeHeight final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBodyHalfHeight_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetKneeHeight) == 0x000004, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetKneeHeight");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetKneeHeight) == 0x00000C, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetKneeHeight");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetKneeHeight, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetKneeHeight::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetKneeHeight, CallFunc_GetBodyHalfHeight_ReturnValue) == 0x000004, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetKneeHeight::CallFunc_GetBodyHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetKneeHeight, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetKneeHeight::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetRotation
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetRotation final
{
public:
	struct FRotator                               ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetMovableStandRotation_ReturnValue;      // 0x000C(0x000C)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0018(0x000C)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0024(0x000C)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetRotation) == 0x000004, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetRotation");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetRotation) == 0x000030, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetRotation");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetRotation, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetRotation, CallFunc_GetMovableStandRotation_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetRotation::CallFunc_GetMovableStandRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetRotation, CallFunc_GetControlRotation_ReturnValue) == 0x000018, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetRotation::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000024, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.HasMovableStand
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_HasMovableStand final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_HasMovableStand) == 0x000001, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_HasMovableStand");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_HasMovableStand) == 0x000001, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_HasMovableStand");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_HasMovableStand, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_HasMovableStand::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.IsStandSeparating
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_IsStandSeparating final
{
public:
	bool                                          bSeparation;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAppearance_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_IsStandSeparating) == 0x000001, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_IsStandSeparating");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_IsStandSeparating) == 0x000003, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_IsStandSeparating");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsStandSeparating, bSeparation) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsStandSeparating::bSeparation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsStandSeparating, CallFunc_IsAppearance_ReturnValue) == 0x000001, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsStandSeparating::CallFunc_IsAppearance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsStandSeparating, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsStandSeparating::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetMovableStandLocation
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandLocation) == 0x000004, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandLocation");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandLocation) == 0x000018, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandLocation");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandLocation, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetMovableStandRotation
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandRotation final
{
public:
	struct FRotator                               ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x000C(0x000C)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandRotation) == 0x000004, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandRotation");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandRotation) == 0x000018, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandRotation");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandRotation, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetMovableStandForwardVector
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandForwardVector final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandForwardVector) == 0x000004, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandForwardVector");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandForwardVector) == 0x000018, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandForwardVector");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandForwardVector, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandForwardVector::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandForwardVector, CallFunc_GetActorForwardVector_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandForwardVector::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetRawPawn
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetRawPawn final
{
public:
	class APawn*                                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetRawPawn) == 0x000008, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetRawPawn");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetRawPawn) == 0x000008, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetRawPawn");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetRawPawn, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetRawPawn::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.IsMovableStand
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_IsMovableStand final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_IsMovableStand) == 0x000001, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_IsMovableStand");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_IsMovableStand) == 0x000001, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_IsMovableStand");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsMovableStand, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsMovableStand::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetMovableStandBodyHalfHeight
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandBodyHalfHeight final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandBodyHalfHeight) == 0x000004, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandBodyHalfHeight");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandBodyHalfHeight) == 0x000008, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandBodyHalfHeight");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandBodyHalfHeight, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandBodyHalfHeight::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandBodyHalfHeight, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000004, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandBodyHalfHeight::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetMovableStandBodyRadius
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandBodyRadius final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandBodyRadius) == 0x000004, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandBodyRadius");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandBodyRadius) == 0x000008, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandBodyRadius");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandBodyRadius, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandBodyRadius::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandBodyRadius, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000004, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandBodyRadius::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetMovableStandUpVector
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandUpVector final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandUpVector) == 0x000004, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandUpVector");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandUpVector) == 0x000018, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandUpVector");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandUpVector, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandUpVector::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandUpVector, CallFunc_GetActorUpVector_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetMovableStandUpVector::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetUpVector
// 0x0024 (0x0024 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetUpVector final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMovableStandUpVector_ReturnValue;      // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetUpVector) == 0x000004, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetUpVector");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetUpVector) == 0x000024, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetUpVector");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetUpVector, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetUpVector::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetUpVector, CallFunc_GetMovableStandUpVector_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetUpVector::CallFunc_GetMovableStandUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetUpVector, CallFunc_GetActorUpVector_ReturnValue) == 0x000018, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetUpVector::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetHeadTopLocation
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetHeadTopLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBodyHalfHeight_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_ReturnValue;                  // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetHeadTopLocation) == 0x000004, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetHeadTopLocation");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetHeadTopLocation) == 0x000040, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetHeadTopLocation");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetHeadTopLocation, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetHeadTopLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetHeadTopLocation, CallFunc_GetUpVector_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetHeadTopLocation::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetHeadTopLocation, CallFunc_GetBodyHalfHeight_ReturnValue) == 0x000018, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetHeadTopLocation::CallFunc_GetBodyHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetHeadTopLocation, CallFunc_GetLocation_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetHeadTopLocation::CallFunc_GetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetHeadTopLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000028, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetHeadTopLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetHeadTopLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000034, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetHeadTopLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetRawMovableStandActor
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetRawMovableStandActor final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetRawMovableStandActor) == 0x000008, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetRawMovableStandActor");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetRawMovableStandActor) == 0x000008, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetRawMovableStandActor");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetRawMovableStandActor, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetRawMovableStandActor::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.IsInteracting
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_IsInteracting final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInteractState_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_IsInteracting) == 0x000001, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_IsInteracting");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_IsInteracting) == 0x000002, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_IsInteracting");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsInteracting, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsInteracting::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsInteracting, CallFunc_IsInteractState_ReturnValue) == 0x000001, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsInteracting::CallFunc_IsInteractState_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.HasAccompanySkill
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_HasAccompanySkill final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBAccompanySkill_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_HasAccompanySkill) == 0x000008, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_HasAccompanySkill");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_HasAccompanySkill) == 0x000018, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_HasAccompanySkill");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_HasAccompanySkill, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_HasAccompanySkill::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_HasAccompanySkill, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BP_AJBInGameAIImaginaryCharacter_C_HasAccompanySkill::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_HasAccompanySkill, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_AJBInGameAIImaginaryCharacter_C_HasAccompanySkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetSkillComponentByTag
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBSkillBase_C*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag) == 0x000008, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag) == 0x000030, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag, SkillTag) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag::SkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag, ReturnValue) == 0x000008, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000029, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetSkillComponentByTag::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetUltimateSkillInfo
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetUltimateSkillInfo final
{
public:
	struct FST_AJBAICharacterSkillInfo            ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetUltimateSkillInfo) == 0x000008, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetUltimateSkillInfo");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetUltimateSkillInfo) == 0x000020, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetUltimateSkillInfo");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetUltimateSkillInfo, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetUltimateSkillInfo::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetUltimateSkill
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetUltimateSkill final
{
public:
	struct FGameplayTag                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FST_AJBAICharacterSkillInfo            CallFunc_GetUltimateSkillInfo_ReturnValue;         // 0x0008(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetUltimateSkill) == 0x000008, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetUltimateSkill");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetUltimateSkill) == 0x000028, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetUltimateSkill");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetUltimateSkill, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetUltimateSkill::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetUltimateSkill, CallFunc_GetUltimateSkillInfo_ReturnValue) == 0x000008, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetUltimateSkill::CallFunc_GetUltimateSkillInfo_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.HasSeparateSkill
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_HasSeparateSkill final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSeparateSkill_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_HasSeparateSkill) == 0x000008, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_HasSeparateSkill");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_HasSeparateSkill) == 0x000018, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_HasSeparateSkill");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_HasSeparateSkill, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_HasSeparateSkill::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_HasSeparateSkill, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BP_AJBInGameAIImaginaryCharacter_C_HasSeparateSkill::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_HasSeparateSkill, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_AJBInGameAIImaginaryCharacter_C_HasSeparateSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.IsPair
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_IsPair final
{
public:
	class ABP_AJBInGameAIImaginaryCharacter_C*    Other;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetRawPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPair_bPairCharacter;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_IsPair) == 0x000008, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_IsPair");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_IsPair) == 0x000020, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_IsPair");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsPair, Other) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsPair::Other' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsPair, ReturnValue) == 0x000008, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsPair::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsPair, CallFunc_GetRawPawn_ReturnValue) == 0x000010, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsPair::CallFunc_GetRawPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsPair, CallFunc_IsPair_bPairCharacter) == 0x000018, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsPair::CallFunc_IsPair_bPairCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsPair, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000019, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsPair::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsPair, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsPair::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetAIControllerForNPC
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetAIControllerForNPC final
{
public:
	class AAIController*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetAIControllerForNPC) == 0x000008, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetAIControllerForNPC");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetAIControllerForNPC) == 0x000008, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetAIControllerForNPC");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetAIControllerForNPC, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetAIControllerForNPC::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.IsCritical
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_IsCritical final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_IsCritical) == 0x000001, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_IsCritical");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_IsCritical) == 0x000003, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_IsCritical");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsCritical, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsCritical::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsCritical, CallFunc_CharacterBehaviorMatches_ReturnValue) == 0x000001, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsCritical::CallFunc_CharacterBehaviorMatches_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsCritical, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsCritical::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.IsStealth
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_IsStealth final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> CallFunc_GetGameplayTags_self_CastInput;           // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy;         // 0x0018(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_IsStealth) == 0x000008, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_IsStealth");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_IsStealth) == 0x000040, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_IsStealth");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsStealth, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsStealth::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsStealth, CallFunc_GetGameplayTags_self_CastInput) == 0x000008, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsStealth::CallFunc_GetGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsStealth, CallFunc_GetGameplayTags_TagContainerCopy) == 0x000018, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsStealth::CallFunc_GetGameplayTags_TagContainerCopy' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsStealth, CallFunc_HasTag_ReturnValue) == 0x000038, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsStealth::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetFootLocation
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetFootLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBodyHalfHeight_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_ReturnValue;                  // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetFootLocation) == 0x000004, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetFootLocation");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetFootLocation) == 0x000040, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetFootLocation");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetFootLocation, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetFootLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetFootLocation, CallFunc_GetUpVector_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetFootLocation::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetFootLocation, CallFunc_GetBodyHalfHeight_ReturnValue) == 0x000018, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetFootLocation::CallFunc_GetBodyHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetFootLocation, CallFunc_GetLocation_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetFootLocation::CallFunc_GetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetFootLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000028, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetFootLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetFootLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000034, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetFootLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetAttackRangeOfSkill
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetAttackRangeOfSkill final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetAttackRangeOfSkill) == 0x000008, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetAttackRangeOfSkill");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetAttackRangeOfSkill) == 0x000018, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetAttackRangeOfSkill");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetAttackRangeOfSkill, SkillTag) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetAttackRangeOfSkill::SkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetAttackRangeOfSkill, ReturnValue) == 0x000008, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetAttackRangeOfSkill::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetAttackRangeOfSkill, Found) == 0x00000C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetAttackRangeOfSkill::Found' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetAttackRangeOfSkill, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetAttackRangeOfSkill::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetAttackRangeOfSkill, CallFunc_Map_Find_ReturnValue) == 0x000014, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetAttackRangeOfSkill::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.ResetAttackRangeOfSkills
// 0x0088 (0x0088 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills final
{
public:
	float                                         AttackRangeMax;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_SkillRangeInterface_C> K2Node_DynamicCast_AsBI_Skill_Range_Interface;     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSkillAttackRange_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue1;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_Map_Keys_Keys;                            // 0x0060(0x0010)(ZeroConstructor, ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item1;                          // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills) == 0x000008, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills) == 0x000088, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, AttackRangeMax) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::AttackRangeMax' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, CallFunc_FMin_ReturnValue) == 0x000004, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, Temp_int_Array_Index_Variable1) == 0x000020, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, K2Node_DynamicCast_AsBI_Skill_Range_Interface) == 0x000030, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::K2Node_DynamicCast_AsBI_Skill_Range_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, CallFunc_DoesImplementInterface_ReturnValue) == 0x000041, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, CallFunc_GetSkillAttackRange_ReturnValue) == 0x000044, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::CallFunc_GetSkillAttackRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, CallFunc_FMin_ReturnValue1) == 0x000048, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::CallFunc_FMin_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, Temp_int_Loop_Counter_Variable1) == 0x00004C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, CallFunc_Add_IntInt_ReturnValue1) == 0x000054, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, CallFunc_BooleanAND_ReturnValue) == 0x000058, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, CallFunc_Map_Keys_Keys) == 0x000060, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, CallFunc_Array_Get_Item1) == 0x000070, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000078, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, CallFunc_Array_Length_ReturnValue1) == 0x00007C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills, CallFunc_Less_IntInt_ReturnValue1) == 0x000080, "Member 'BP_AJBInGameAIImaginaryCharacter_C_ResetAttackRangeOfSkills::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetBreastLocation
// 0x0044 (0x0044 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetBreastLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBodyHalfHeight_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_ReturnValue;                  // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetBreastLocation) == 0x000004, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetBreastLocation");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetBreastLocation) == 0x000044, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetBreastLocation");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetBreastLocation, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetBreastLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetBreastLocation, CallFunc_GetUpVector_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetBreastLocation::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetBreastLocation, CallFunc_GetBodyHalfHeight_ReturnValue) == 0x000018, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetBreastLocation::CallFunc_GetBodyHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetBreastLocation, CallFunc_GetLocation_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetBreastLocation::CallFunc_GetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetBreastLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetBreastLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetBreastLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00002C, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetBreastLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetBreastLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetBreastLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.IsInitialized
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_IsInitialized final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_IsInitialized) == 0x000001, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_IsInitialized");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_IsInitialized) == 0x000001, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_IsInitialized");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsInitialized, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsInitialized::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.HasHealingBase
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_HasHealingBase final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_HasHealingBase) == 0x000001, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_HasHealingBase");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_HasHealingBase) == 0x000001, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_HasHealingBase");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_HasHealingBase, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_HasHealingBase::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetHPForPair
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetHPForPair final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetHPForPair) == 0x000004, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetHPForPair");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetHPForPair) == 0x000004, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetHPForPair");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetHPForPair, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetHPForPair::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.GetCharacterHandle
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_GetCharacterHandle final
{
public:
	struct FGameplayTag                           RequestTag;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBAIInGameCharacterHandle_C*       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0010(0x0020)()
	bool                                          CallFunc_MatchesAnyTags_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_GetCharacterHandle) == 0x000008, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_GetCharacterHandle");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_GetCharacterHandle) == 0x000038, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_GetCharacterHandle");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetCharacterHandle, RequestTag) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetCharacterHandle::RequestTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetCharacterHandle, ReturnValue) == 0x000008, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetCharacterHandle::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetCharacterHandle, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000010, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetCharacterHandle::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_GetCharacterHandle, CallFunc_MatchesAnyTags_ReturnValue) == 0x000030, "Member 'BP_AJBInGameAIImaginaryCharacter_C_GetCharacterHandle::CallFunc_MatchesAnyTags_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.IsEmpty
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_IsEmpty final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_IsEmpty) == 0x000001, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_IsEmpty");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_IsEmpty) == 0x000002, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_IsEmpty");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsEmpty, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsEmpty::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_IsEmpty, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_AJBInGameAIImaginaryCharacter_C_IsEmpty::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIImaginaryCharacter.BP_AJBInGameAIImaginaryCharacter_C.HasSpecialTag
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameAIImaginaryCharacter_C_HasSpecialTag final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bExactMatch;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIImaginaryCharacter_C_HasSpecialTag) == 0x000008, "Wrong alignment on BP_AJBInGameAIImaginaryCharacter_C_HasSpecialTag");
static_assert(sizeof(BP_AJBInGameAIImaginaryCharacter_C_HasSpecialTag) == 0x000010, "Wrong size on BP_AJBInGameAIImaginaryCharacter_C_HasSpecialTag");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_HasSpecialTag, Tag) == 0x000000, "Member 'BP_AJBInGameAIImaginaryCharacter_C_HasSpecialTag::Tag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_HasSpecialTag, bExactMatch) == 0x000008, "Member 'BP_AJBInGameAIImaginaryCharacter_C_HasSpecialTag::bExactMatch' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_HasSpecialTag, ReturnValue) == 0x000009, "Member 'BP_AJBInGameAIImaginaryCharacter_C_HasSpecialTag::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIImaginaryCharacter_C_HasSpecialTag, CallFunc_HasTag_ReturnValue) == 0x00000A, "Member 'BP_AJBInGameAIImaginaryCharacter_C_HasSpecialTag::CallFunc_HasTag_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBActionBase

#include "Basic.hpp"

#include "BP_AJBActionBase_classes.hpp"
#include "BP_AJBActionBase_parameters.hpp"


namespace SDK
{

// Function BP_AJBActionBase.BP_AJBActionBase_C.ExecuteUbergraph_BP_AJBActionBase
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBActionBase_C::ExecuteUbergraph_BP_AJBActionBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "ExecuteUbergraph_BP_AJBActionBase");

	Params::BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.OnSetViewTargetToNewSpectator
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBActionBase_C::OnSetViewTargetToNewSpectator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "OnSetViewTargetToNewSpectator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.StateBeginPlay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldRestore                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bUseNextState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// uint8                                   NextState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBActionBase_C::StateBeginPlay(bool bShouldRestore, bool bUseNextState, uint8 NextState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "StateBeginPlay");

	Params::BP_AJBActionBase_C_StateBeginPlay Parms{};

	Parms.bShouldRestore = bShouldRestore;
	Parms.bUseNextState = bUseNextState;
	Parms.NextState = NextState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.MC_CancelActionServer
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_AJBActionBase_C::MC_CancelActionServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "MC_CancelActionServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.CancelActionServer
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBActionBase_C::CancelActionServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "CancelActionServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.OnDisconnected
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBActionBase_C::OnDisconnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "OnDisconnected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBActionBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.ActionCancel_All
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBActionBase_C::ActionCancel_All()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "ActionCancel_All");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.MC_ActionCancel
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_AJBActionBase_C::MC_ActionCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "MC_ActionCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.ROS_ActionCancel
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_AJBActionBase_C::ROS_ActionCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "ROS_ActionCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.ActionCancel_Local
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBActionBase_C::ActionCancel_Local()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "ActionCancel_Local");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.OnCancel
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBActionBase_C::OnCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "OnCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.OnInactiveAction_OnLocal
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBActionBase_C::OnInactiveAction_OnLocal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "OnInactiveAction_OnLocal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.OnActiveAction_OnLocal
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBActionBase_C::OnActiveAction_OnLocal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "OnActiveAction_OnLocal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.ChangeActionActivity
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsActive_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bTriggeredByStand                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBActionBase_C::ChangeActionActivity(bool bIsActive_0, bool bTriggeredByStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "ChangeActionActivity");

	Params::BP_AJBActionBase_C_ChangeActionActivity Parms{};

	Parms.bIsActive_0 = bIsActive_0;
	Parms.bTriggeredByStand = bTriggeredByStand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.MC_ChangeActionActivity
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsActive_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bTriggeredByStand                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBActionBase_C::MC_ChangeActionActivity(bool bIsActive_0, bool bTriggeredByStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "MC_ChangeActionActivity");

	Params::BP_AJBActionBase_C_MC_ChangeActionActivity Parms{};

	Parms.bIsActive_0 = bIsActive_0;
	Parms.bTriggeredByStand = bTriggeredByStand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.Blanked_ChangeActionActivity
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsActive_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bTriggeredByStand                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBActionBase_C::Blanked_ChangeActionActivity(bool bIsActive_0, bool bTriggeredByStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "Blanked_ChangeActionActivity");

	Params::BP_AJBActionBase_C_Blanked_ChangeActionActivity Parms{};

	Parms.bIsActive_0 = bIsActive_0;
	Parms.bTriggeredByStand = bTriggeredByStand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBActionBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "ReceiveTick");

	Params::BP_AJBActionBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.InactiveAction
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBActionBase_C::InactiveAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "InactiveAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.ActiveAction
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bTriggeredByStand                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBActionBase_C::ActiveAction(bool bTriggeredByStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "ActiveAction");

	Params::BP_AJBActionBase_C_ActiveAction Parms{};

	Parms.bTriggeredByStand = bTriggeredByStand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.OnActionInactivate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bTriggeredByStand                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBActionBase_C::OnActionInactivate(bool bTriggeredByStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "OnActionInactivate");

	Params::BP_AJBActionBase_C_OnActionInactivate Parms{};

	Parms.bTriggeredByStand = bTriggeredByStand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.OnActionActivate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bTriggeredByStand                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBActionBase_C::OnActionActivate(bool bTriggeredByStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "OnActionActivate");

	Params::BP_AJBActionBase_C_OnActionActivate Parms{};

	Parms.bTriggeredByStand = bTriggeredByStand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBActionBase_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "NotifyTheWorld");

	Params::BP_AJBActionBase_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.OnRelatedCharacterBecomeLastSurvivor
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBActionBase_C::OnRelatedCharacterBecomeLastSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "OnRelatedCharacterBecomeLastSurvivor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.ChangeState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   NextState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bResetStateTime                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBActionBase_C::ChangeState(uint8 NextState, bool bResetStateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "ChangeState");

	Params::BP_AJBActionBase_C_ChangeState Parms{};

	Parms.NextState = NextState;
	Parms.bResetStateTime = bResetStateTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.CheckState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// uint8                                   State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bMatch                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBActionBase_C::CheckState(uint8 State, bool* bMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "CheckState");

	Params::BP_AJBActionBase_C_CheckState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

	if (bMatch != nullptr)
		*bMatch = Parms.bMatch;
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.CheckActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bActive                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBActionBase_C::CheckActive(bool* bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "CheckActive");

	Params::BP_AJBActionBase_C_CheckActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bActive != nullptr)
		*bActive = Parms.bActive;
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.OnRep_Rep_CurrentState
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBActionBase_C::OnRep_Rep_CurrentState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "OnRep_Rep_CurrentState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBActionBase.BP_AJBActionBase_C.OnRep_ActionInfo
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBActionBase_C::OnRep_ActionInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionBase_C", "OnRep_ActionInfo");

	UObject::ProcessEvent(Func, nullptr);
}

}


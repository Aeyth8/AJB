#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameCharacter

#include "Basic.hpp"

#include "BP_AJBInGameCharacter_classes.hpp"
#include "BP_AJBInGameCharacter_parameters.hpp"


namespace SDK
{

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillGrownup__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     GameplayTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnSkillGrownup__DelegateSignature(const struct FGameplayTag& GameplayTag, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnSkillGrownup__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnSkillGrownup__DelegateSignature Parms{};

	Parms.GameplayTag = std::move(GameplayTag);
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnCharacterDead_Server__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DeadActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnCharacterDead_Server__DelegateSignature(const struct FGameplayTag& DamageType, class AActor* DeadActor, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnCharacterDead_Server__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnCharacterDead_Server__DelegateSignature Parms{};

	Parms.DamageType = std::move(DamageType);
	Parms.DeadActor = DeadActor;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillConsumed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnSkillConsumed__DelegateSignature(const struct FGameplayTag& SkillTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnSkillConsumed__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnSkillConsumed__DelegateSignature Parms{};

	Parms.SkillTag = std::move(SkillTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPassiveAdded__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     AddCondition                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnPassiveAdded__DelegateSignature(const struct FGameplayTag& AddCondition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnPassiveAdded__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnPassiveAdded__DelegateSignature Parms{};

	Parms.AddCondition = std::move(AddCondition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPassiveRemoved__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     RemoveCondition                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class ABP_AJBInGameCharacter_C*         CharacterBP                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnPassiveRemoved__DelegateSignature(const struct FGameplayTag& RemoveCondition, class ABP_AJBInGameCharacter_C* CharacterBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnPassiveRemoved__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnPassiveRemoved__DelegateSignature Parms{};

	Parms.RemoveCondition = std::move(RemoveCondition);
	Parms.CharacterBP = CharacterBP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnCameraChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnCameraChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnCameraChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillActivated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBSkillBase_C*               ActivatedSkill                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnSkillActivated__DelegateSignature(class UBP_AJBSkillBase_C* ActivatedSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnSkillActivated__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnSkillActivated__DelegateSignature Parms{};

	Parms.ActivatedSkill = ActivatedSkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillInactivated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBSkillBase_C*               InactivatedSkill                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnSkillInactivated__DelegateSignature(class UBP_AJBSkillBase_C* InactivatedSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnSkillInactivated__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnSkillInactivated__DelegateSignature Parms{};

	Parms.InactivatedSkill = InactivatedSkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnCharacterActiveBehaviorChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              TargetCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECharacterActiveBehavior                OldBehavior                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECharacterActiveBehavior                NextBehavior                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSpecialBreakDown                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::OnCharacterActiveBehaviorChanged__DelegateSignature(class AAJBInGameCharacter* TargetCharacter, ECharacterActiveBehavior OldBehavior, ECharacterActiveBehavior NextBehavior, bool bSpecialBreakDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnCharacterActiveBehaviorChanged__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnCharacterActiveBehaviorChanged__DelegateSignature Parms{};

	Parms.TargetCharacter = TargetCharacter;
	Parms.OldBehavior = OldBehavior;
	Parms.NextBehavior = NextBehavior;
	Parms.bSpecialBreakDown = bSpecialBreakDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnAttackHit__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHeadShot                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bFInishBlow                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::OnAttackHit__DelegateSignature(bool bHeadShot, bool bFInishBlow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnAttackHit__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnAttackHit__DelegateSignature Parms{};

	Parms.bHeadShot = bHeadShot;
	Parms.bFInishBlow = bFInishBlow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnReceiveDamage_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRemainHP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDamageIsCutByStatus                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDamageIsCutByAAP                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::OnReceiveDamage_Local__DelegateSignature(int32 Damage, const struct FGameplayTag& DamageType, class AActor* DamageCauser, bool bRemainHP, bool bDamageIsCutByStatus, bool bDamageIsCutByAAP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnReceiveDamage_Local__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnReceiveDamage_Local__DelegateSignature Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = std::move(DamageType);
	Parms.DamageCauser = DamageCauser;
	Parms.bRemainHP = bRemainHP;
	Parms.bDamageIsCutByStatus = bDamageIsCutByStatus;
	Parms.bDamageIsCutByAAP = bDamageIsCutByAAP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnGiveDamage_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageReceiver                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRemainHP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDamageIsCut                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DamageReceiverIsPlayer                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bWithSeparatedStandAttack                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bEnemysSeparateStand                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::OnGiveDamage_Local__DelegateSignature(int32 Damage, const struct FGameplayTag& DamageType, class AActor* DamageReceiver, bool bRemainHP, bool bDamageIsCut, int32 SerialNumber, bool DamageReceiverIsPlayer, bool bWithSeparatedStandAttack, bool bEnemysSeparateStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnGiveDamage_Local__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = std::move(DamageType);
	Parms.DamageReceiver = DamageReceiver;
	Parms.bRemainHP = bRemainHP;
	Parms.bDamageIsCut = bDamageIsCut;
	Parms.SerialNumber = SerialNumber;
	Parms.DamageReceiverIsPlayer = DamageReceiverIsPlayer;
	Parms.bWithSeparatedStandAttack = bWithSeparatedStandAttack;
	Parms.bEnemysSeparateStand = bEnemysSeparateStand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnCrouch__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnCrouch__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnCrouch__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnJump__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnJump__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnJump__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnMoveInput__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnMoveInput__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnMoveInput__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnControlCamera__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnControlCamera__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnControlCamera__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnGetItem__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     ItemTag                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnGetItem__DelegateSignature(const struct FGameplayTag& ItemTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnGetItem__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnGetItem__DelegateSignature Parms{};

	Parms.ItemTag = std::move(ItemTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPossessTargetChenged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacterBase*          SeparateFrom                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAJBInGameCharacterBase*          SeparateTo                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnPossessTargetChenged__DelegateSignature(class AAJBInGameCharacterBase* SeparateFrom, class AAJBInGameCharacterBase* SeparateTo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnPossessTargetChenged__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnPossessTargetChenged__DelegateSignature Parms{};

	Parms.SeparateFrom = SeparateFrom;
	Parms.SeparateTo = SeparateTo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillUnlocked__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAJBSkillType                           SkillType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnSkillUnlocked__DelegateSignature(EAJBSkillType SkillType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnSkillUnlocked__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnSkillUnlocked__DelegateSignature Parms{};

	Parms.SkillType = SkillType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnHPChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   HP                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnHPChanged__DelegateSignature(int32 HP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnHPChanged__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnHPChanged__DelegateSignature Parms{};

	Parms.HP = HP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillMissed_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bHitObject                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::OnSkillMissed_Local__DelegateSignature(const struct FGameplayTag& SkillTag, bool bHitObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnSkillMissed_Local__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnSkillMissed_Local__DelegateSignature Parms{};

	Parms.SkillTag = std::move(SkillTag);
	Parms.bHitObject = bHitObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnShotPossibilityChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::OnShotPossibilityChanged__DelegateSignature(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnShotPossibilityChanged__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnShotPossibilityChanged__DelegateSignature Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRessurect__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnRessurect__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnRessurect__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnEmote__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   VoiceIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnEmote__DelegateSignature(int32 VoiceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnEmote__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnEmote__DelegateSignature Parms{};

	Parms.VoiceIndex = VoiceIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnKill_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AttackDistance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   KilledCharacterId                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWithSeparatedStandAttack                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bHitEnemysSeparatedStand                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bFirstBlood                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   UltimateSkillSerialNumberIfInEffect                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DeadPlayerID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsLastDefeated                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bPlayerKill                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSpecialKill                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::OnKill_Local__DelegateSignature(const struct FGameplayTag& SkillTag, int32 SerialNumber, float AttackDistance, uint8 KilledCharacterId, bool bWithSeparatedStandAttack, bool bHitEnemysSeparatedStand, bool bFirstBlood, int32 UltimateSkillSerialNumberIfInEffect, float ElapsedTime, int32 DeadPlayerID, bool bIsLastDefeated, bool bPlayerKill, bool bSpecialKill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnKill_Local__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature Parms{};

	Parms.SkillTag = std::move(SkillTag);
	Parms.SerialNumber = SerialNumber;
	Parms.AttackDistance = AttackDistance;
	Parms.KilledCharacterId = KilledCharacterId;
	Parms.bWithSeparatedStandAttack = bWithSeparatedStandAttack;
	Parms.bHitEnemysSeparatedStand = bHitEnemysSeparatedStand;
	Parms.bFirstBlood = bFirstBlood;
	Parms.UltimateSkillSerialNumberIfInEffect = UltimateSkillSerialNumberIfInEffect;
	Parms.ElapsedTime = ElapsedTime;
	Parms.DeadPlayerID = DeadPlayerID;
	Parms.bIsLastDefeated = bIsLastDefeated;
	Parms.bPlayerKill = bPlayerKill;
	Parms.bSpecialKill = bSpecialKill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnDie_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWillRessurect                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsLastDefeated                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDiedOfKillZ                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::OnDie_Local__DelegateSignature(bool bWillRessurect, bool bIsLastDefeated, bool bDiedOfKillZ)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnDie_Local__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnDie_Local__DelegateSignature Parms{};

	Parms.bWillRessurect = bWillRessurect;
	Parms.bIsLastDefeated = bIsLastDefeated;
	Parms.bDiedOfKillZ = bDiedOfKillZ;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillGiveHeadShot_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnSkillGiveHeadShot_Local__DelegateSignature(const struct FGameplayTag& SkillTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnSkillGiveHeadShot_Local__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnSkillGiveHeadShot_Local__DelegateSignature Parms{};

	Parms.SkillTag = std::move(SkillTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillBlocked_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bAvoidSkill                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::OnSkillBlocked_Local__DelegateSignature(const struct FGameplayTag& SkillTag, bool bAvoidSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnSkillBlocked_Local__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnSkillBlocked_Local__DelegateSignature Parms{};

	Parms.SkillTag = std::move(SkillTag);
	Parms.bAvoidSkill = bAvoidSkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnReceiveDamage_Server__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRemainHP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDamageIsCut                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bNotUseCollision                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::OnReceiveDamage_Server__DelegateSignature(int32 Damage, const struct FGameplayTag& DamageType, class AActor* DamageCauser, bool bRemainHP, bool bDamageIsCut, bool bNotUseCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnReceiveDamage_Server__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnReceiveDamage_Server__DelegateSignature Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = std::move(DamageType);
	Parms.DamageCauser = DamageCauser;
	Parms.bRemainHP = bRemainHP;
	Parms.bDamageIsCut = bDamageIsCut;
	Parms.bNotUseCollision = bNotUseCollision;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnOtherGrowup__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     GameplayTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// float                                   Value01                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value02                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value03                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnOtherGrowup__DelegateSignature(const struct FGameplayTag& GameplayTag, float Value01, float Value02, float Value03)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnOtherGrowup__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnOtherGrowup__DelegateSignature Parms{};

	Parms.GameplayTag = std::move(GameplayTag);
	Parms.Value01 = Value01;
	Parms.Value02 = Value02;
	Parms.Value03 = Value03;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnCritical_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnCritical_Local__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnCritical_Local__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnDown_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DownedMachingPlayerIndex                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnDown_Local__DelegateSignature(int32 DownedMachingPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnDown_Local__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnDown_Local__DelegateSignature Parms{};

	Parms.DownedMachingPlayerIndex = DownedMachingPlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRevive_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Rescuer                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnRevive_Local__DelegateSignature(class AActor* Rescuer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnRevive_Local__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnRevive_Local__DelegateSignature Parms{};

	Parms.Rescuer = Rescuer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRescueSuccess_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnRescueSuccess_Local__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnRescueSuccess_Local__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPairDie_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnPairDie_Local__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnPairDie_Local__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPairKill_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnPairKill_Local__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnPairKill_Local__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnWindowBroken_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bBrokenByAttack                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::OnWindowBroken_Local__DelegateSignature(bool bBrokenByAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnWindowBroken_Local__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnWindowBroken_Local__DelegateSignature Parms{};

	Parms.bBrokenByAttack = bBrokenByAttack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillNumUpdated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   LeftNum                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnSkillNumUpdated__DelegateSignature(const struct FGameplayTag& SkillTag, int32 LeftNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnSkillNumUpdated__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnSkillNumUpdated__DelegateSignature Parms{};

	Parms.SkillTag = std::move(SkillTag);
	Parms.LeftNum = LeftNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillSucceeded_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnSkillSucceeded_Local__DelegateSignature(const struct FGameplayTag& SkillTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnSkillSucceeded_Local__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnSkillSucceeded_Local__DelegateSignature Parms{};

	Parms.SkillTag = std::move(SkillTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillEffectiveTimeDetermined_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// float                                   EffectiveTimeSec                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bUpdateEvenIfNotInGameplay                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::OnSkillEffectiveTimeDetermined_Local__DelegateSignature(const struct FGameplayTag& SkillTag, float EffectiveTimeSec, bool bUpdateEvenIfNotInGameplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnSkillEffectiveTimeDetermined_Local__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnSkillEffectiveTimeDetermined_Local__DelegateSignature Parms{};

	Parms.SkillTag = std::move(SkillTag);
	Parms.EffectiveTimeSec = EffectiveTimeSec;
	Parms.bUpdateEvenIfNotInGameplay = bUpdateEvenIfNotInGameplay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillReady_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBSkillBase_C*               ReadySkill                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnSkillReady_Local__DelegateSignature(class UBP_AJBSkillBase_C* ReadySkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnSkillReady_Local__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnSkillReady_Local__DelegateSignature Parms{};

	Parms.ReadySkill = ReadySkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillEffectiveValueDetermined_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   EffectiveValue                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bUpdateEvenIfNotInGameplay                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::OnSkillEffectiveValueDetermined_Local__DelegateSignature(const struct FGameplayTag& SkillTag, int32 EffectiveValue, bool bUpdateEvenIfNotInGameplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnSkillEffectiveValueDetermined_Local__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnSkillEffectiveValueDetermined_Local__DelegateSignature Parms{};

	Parms.SkillTag = std::move(SkillTag);
	Parms.EffectiveValue = EffectiveValue;
	Parms.bUpdateEvenIfNotInGameplay = bUpdateEvenIfNotInGameplay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnCutDamage_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CutDamage                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnCutDamage_Local__DelegateSignature(int32 CutDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnCutDamage_Local__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnCutDamage_Local__DelegateSignature Parms{};

	Parms.CutDamage = CutDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillFailedToUse_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            FactorTags                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_AJBInGameCharacter_C::OnSkillFailedToUse_Local__DelegateSignature(const struct FGameplayTagContainer& FactorTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnSkillFailedToUse_Local__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnSkillFailedToUse_Local__DelegateSignature Parms{};

	Parms.FactorTags = std::move(FactorTags);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnDash_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnDash_Local__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnDash_Local__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnUltimateSkillEffectStarted_Server__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnUltimateSkillEffectStarted_Server__DelegateSignature(int32 SerialNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnUltimateSkillEffectStarted_Server__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnUltimateSkillEffectStarted_Server__DelegateSignature Parms{};

	Parms.SerialNumber = SerialNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnUltimateSkillEffectFinished_Server__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnUltimateSkillEffectFinished_Server__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnUltimateSkillEffectFinished_Server__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnLastKill_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnLastKill_Local__DelegateSignature(const struct FGameplayTag& SkillTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnLastKill_Local__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnLastKill_Local__DelegateSignature Parms{};

	Parms.SkillTag = std::move(SkillTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnKill_All__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   KillCount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DeadPlayerID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsLastDefeated                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::OnKill_All__DelegateSignature(uint8 KillCount, int32 DeadPlayerID, bool bIsLastDefeated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnKill_All__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnKill_All__DelegateSignature Parms{};

	Parms.KillCount = KillCount;
	Parms.DeadPlayerID = DeadPlayerID;
	Parms.bIsLastDefeated = bIsLastDefeated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnReceiveDamage_All__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnReceiveDamage_All__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnReceiveDamage_All__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnAddAP_Server__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnAddAP_Server__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnAddAP_Server__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnAddHP_Server__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnAddHP_Server__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnAddHP_Server__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnAddSP_Server__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnAddSP_Server__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnAddSP_Server__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnBecomeLastSurvivor_All__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnBecomeLastSurvivor_All__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnBecomeLastSurvivor_All__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnDown_All__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DownedMachingPlayerIndex                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnDown_All__DelegateSignature(int32 DownedMachingPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnDown_All__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnDown_All__DelegateSignature Parms{};

	Parms.DownedMachingPlayerIndex = DownedMachingPlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillReady_All__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBSkillBase_C*               ReadySkill                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnSkillReady_All__DelegateSignature(class UBP_AJBSkillBase_C* ReadySkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnSkillReady_All__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnSkillReady_All__DelegateSignature Parms{};

	Parms.ReadySkill = ReadySkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SkillAnimationTiming_Ready__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBSkillBase_C*               ReadySkill                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRenaturation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::SkillAnimationTiming_Ready__DelegateSignature(class UBP_AJBSkillBase_C* ReadySkill, bool bRenaturation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SkillAnimationTiming_Ready__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_SkillAnimationTiming_Ready__DelegateSignature Parms{};

	Parms.ReadySkill = ReadySkill;
	Parms.bRenaturation = bRenaturation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SkillAnimationTiming_Active__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBSkillBase_C*               ActiveSkill                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRenaturation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::SkillAnimationTiming_Active__DelegateSignature(class UBP_AJBSkillBase_C* ActiveSkill, bool bRenaturation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SkillAnimationTiming_Active__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_SkillAnimationTiming_Active__DelegateSignature Parms{};

	Parms.ActiveSkill = ActiveSkill;
	Parms.bRenaturation = bRenaturation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SkillAnimationTiming_Inactive__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBSkillBase_C*               InactiveSkill                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRenaturation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::SkillAnimationTiming_Inactive__DelegateSignature(class UBP_AJBSkillBase_C* InactiveSkill, bool bRenaturation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SkillAnimationTiming_Inactive__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_SkillAnimationTiming_Inactive__DelegateSignature Parms{};

	Parms.InactiveSkill = InactiveSkill;
	Parms.bRenaturation = bRenaturation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnLongPressSkillActivated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBLongPressInteract_C*       LongPressInteract                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnLongPressSkillActivated__DelegateSignature(class UBP_AJBLongPressInteract_C* LongPressInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnLongPressSkillActivated__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnLongPressSkillActivated__DelegateSignature Parms{};

	Parms.LongPressInteract = LongPressInteract;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnLongPressSkillInactivated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBLongPressInteract_C*       LongPressInteract                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnLongPressSkillInactivated__DelegateSignature(class UBP_AJBLongPressInteract_C* LongPressInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnLongPressSkillInactivated__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnLongPressSkillInactivated__DelegateSignature Parms{};

	Parms.LongPressInteract = LongPressInteract;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnChangeCharacterBehavior_Server__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharacterBehavior                      New                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECharacterBehavior                      Old                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnChangeCharacterBehavior_Server__DelegateSignature(ECharacterBehavior New, ECharacterBehavior Old)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnChangeCharacterBehavior_Server__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnChangeCharacterBehavior_Server__DelegateSignature Parms{};

	Parms.New = New;
	Parms.Old = Old;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPlayRadioChat_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ActionLogIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     VoiceTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnPlayRadioChat_Local__DelegateSignature(int32 ActionLogIndex, const struct FGameplayTag& VoiceTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnPlayRadioChat_Local__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnPlayRadioChat_Local__DelegateSignature Parms{};

	Parms.ActionLogIndex = ActionLogIndex;
	Parms.VoiceTag = std::move(VoiceTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPlayDamageVoice_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCausedByDamageArea                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::OnPlayDamageVoice_Local__DelegateSignature(bool bCausedByDamageArea)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnPlayDamageVoice_Local__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnPlayDamageVoice_Local__DelegateSignature Parms{};

	Parms.bCausedByDamageArea = bCausedByDamageArea;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnCritical_Server__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnCritical_Server__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnCritical_Server__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPassiveAddedAfterSetCauser__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     AddCondition                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Causer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnPassiveAddedAfterSetCauser__DelegateSignature(const struct FGameplayTag& AddCondition, class UObject* Causer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnPassiveAddedAfterSetCauser__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnPassiveAddedAfterSetCauser__DelegateSignature Parms{};

	Parms.AddCondition = std::move(AddCondition);
	Parms.Causer = Causer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnHitMultipleCloseRange__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAJBSkillType                           SkillType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   HittedCharacterCount                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   BlockedCharacterCount                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InvalidatedCharacterCount                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnHitMultipleCloseRange__DelegateSignature(EAJBSkillType SkillType, int32 HittedCharacterCount, int32 BlockedCharacterCount, int32 InvalidatedCharacterCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnHitMultipleCloseRange__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnHitMultipleCloseRange__DelegateSignature Parms{};

	Parms.SkillType = SkillType;
	Parms.HittedCharacterCount = HittedCharacterCount;
	Parms.BlockedCharacterCount = BlockedCharacterCount;
	Parms.InvalidatedCharacterCount = InvalidatedCharacterCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSpawnSignalPin_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SignalPinType                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnSpawnSignalPin_Local__DelegateSignature(const struct FGameplayTag& SignalPinType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnSpawnSignalPin_Local__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnSpawnSignalPin_Local__DelegateSignature Parms{};

	Parms.SignalPinType = std::move(SignalPinType);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnAddAAP_Server__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnAddAAP_Server__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnAddAAP_Server__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPassiveGainedForAchievement__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     CauserType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnPassiveGainedForAchievement__DelegateSignature(const struct FGameplayTag& CauserType, int32 SerialNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnPassiveGainedForAchievement__DelegateSignature");

	Params::BP_AJBInGameCharacter_C_OnPassiveGainedForAchievement__DelegateSignature Parms{};

	Parms.CauserType = std::move(CauserType);
	Parms.SerialNumber = SerialNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ExecuteUbergraph_BP_AJBInGameCharacter
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ExecuteUbergraph_BP_AJBInGameCharacter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ExecuteUbergraph_BP_AJBInGameCharacter");

	Params::BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnTimer_SyncAnimationParams
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnTimer_SyncAnimationParams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnTimer_SyncAnimationParams");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_SyncAnimationParams
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsSidling_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Z__Yaw_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsDidlingForGunnerAnimation                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ROS_SyncAnimationParams(bool bIsSidling_0, float Z__Yaw_, bool bIsDidlingForGunnerAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_SyncAnimationParams");

	Params::BP_AJBInGameCharacter_C_ROS_SyncAnimationParams Parms{};

	Parms.bIsSidling_0 = bIsSidling_0;
	Parms.Z__Yaw_ = Z__Yaw_;
	Parms.bIsDidlingForGunnerAnimation = bIsDidlingForGunnerAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_SyncAnimationParams
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsSidling_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Z__Yaw_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsDidlingForGunnerAnimation                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::MC_SyncAnimationParams(bool bIsSidling_0, float Z__Yaw_, bool bIsDidlingForGunnerAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MC_SyncAnimationParams");

	Params::BP_AJBInGameCharacter_C_MC_SyncAnimationParams Parms{};

	Parms.bIsSidling_0 = bIsSidling_0;
	Parms.Z__Yaw_ = Z__Yaw_;
	Parms.bIsDidlingForGunnerAnimation = bIsDidlingForGunnerAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnBegin_Gameplay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnBegin_Gameplay(const struct FGameplayTag& PrevState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnBegin_Gameplay");

	Params::BP_AJBInGameCharacter_C_OnBegin_Gameplay Parms{};

	Parms.PrevState = std::move(PrevState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_OnBeginGameplay
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ROS_OnBeginGameplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_OnBeginGameplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_OnBegin_Gameplay
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::MC_OnBegin_Gameplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MC_OnBegin_Gameplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SpawnGamePlayParticle
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::SpawnGamePlayParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SpawnGamePlayParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ReplicateMP
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ReplicateMP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ReplicateMP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_ReplicateMP
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   MP_0                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROS_ReplicateMP(float MP_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_ReplicateMP");

	Params::BP_AJBInGameCharacter_C_ROS_ReplicateMP Parms{};

	Parms.MP_0 = MP_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnStandbyEnded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     NextState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnStandbyEnded(const struct FGameplayTag& NextState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnStandbyEnded");

	Params::BP_AJBInGameCharacter_C_OnStandbyEnded Parms{};

	Parms.NextState = std::move(NextState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnBeginResult
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnBeginResult(const struct FGameplayTag& PrevState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnBeginResult");

	Params::BP_AJBInGameCharacter_C_OnBeginResult Parms{};

	Parms.PrevState = std::move(PrevState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SkillActivatedCalled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBSkillBase_C*               ActivatedSkill                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::SkillActivatedCalled(class UBP_AJBSkillBase_C* ActivatedSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SkillActivatedCalled");

	Params::BP_AJBInGameCharacter_C_SkillActivatedCalled Parms{};

	Parms.ActivatedSkill = ActivatedSkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SkillInactivatedCalled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBSkillBase_C*               InactivatedSkill                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::SkillInactivatedCalled(class UBP_AJBSkillBase_C* InactivatedSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SkillInactivatedCalled");

	Params::BP_AJBInGameCharacter_C_SkillInactivatedCalled Parms{};

	Parms.InactivatedSkill = InactivatedSkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SkillReadyCalled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBSkillBase_C*               ReadySkill                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::SkillReadyCalled(class UBP_AJBSkillBase_C* ReadySkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SkillReadyCalled");

	Params::BP_AJBInGameCharacter_C_SkillReadyCalled Parms{};

	Parms.ReadySkill = ReadySkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.LongPressSkillActivatedCalled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBLongPressInteract_C*       LongPressInteract                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::LongPressSkillActivatedCalled(class UBP_AJBLongPressInteract_C* LongPressInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "LongPressSkillActivatedCalled");

	Params::BP_AJBInGameCharacter_C_LongPressSkillActivatedCalled Parms{};

	Parms.LongPressInteract = LongPressInteract;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.LongPressSkillInactivatedCalled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBLongPressInteract_C*       LongPressInteract                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::LongPressSkillInactivatedCalled(class UBP_AJBLongPressInteract_C* LongPressInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "LongPressSkillInactivatedCalled");

	Params::BP_AJBInGameCharacter_C_LongPressSkillInactivatedCalled Parms{};

	Parms.LongPressInteract = LongPressInteract;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnAreaDamageCalled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnAreaDamageCalled(int32 Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnAreaDamageCalled");

	Params::BP_AJBInGameCharacter_C_OnAreaDamageCalled Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnDamageAreaInCalled
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnDamageAreaInCalled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnDamageAreaInCalled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnDamageAreaOutCalled
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnDamageAreaOutCalled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnDamageAreaOutCalled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnDamageAreaVanishCalled
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnDamageAreaVanishCalled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnDamageAreaVanishCalled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_SpawnSignalPin
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     PinTypeTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsRemove                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bWithSound                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ROC_SpawnSignalPin(const struct FVector& Location, const struct FGameplayTag& PinTypeTag, bool bIsRemove, bool bWithSound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROC_SpawnSignalPin");

	Params::BP_AJBInGameCharacter_C_ROC_SpawnSignalPin Parms{};

	Parms.Location = std::move(Location);
	Parms.PinTypeTag = std::move(PinTypeTag);
	Parms.bIsRemove = bIsRemove;
	Parms.bWithSound = bWithSound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_SpawnSignalPin
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     PinTypeTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsRemove                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bWithSound                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ROS_SpawnSignalPin(const struct FVector& Location, const struct FGameplayTag& PinTypeTag, bool bIsRemove, bool bWithSound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_SpawnSignalPin");

	Params::BP_AJBInGameCharacter_C_ROS_SpawnSignalPin Parms{};

	Parms.Location = std::move(Location);
	Parms.PinTypeTag = std::move(PinTypeTag);
	Parms.bIsRemove = bIsRemove;
	Parms.bWithSound = bWithSound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.Request_SpawnSignalPin
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     PinTypeTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsRemove                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bWithSound                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::Request_SpawnSignalPin(const struct FVector& Location, const struct FGameplayTag& PinTypeTag, bool bIsRemove, bool bWithSound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "Request_SpawnSignalPin");

	Params::BP_AJBInGameCharacter_C_Request_SpawnSignalPin Parms{};

	Parms.Location = std::move(Location);
	Parms.PinTypeTag = std::move(PinTypeTag);
	Parms.bIsRemove = bIsRemove;
	Parms.bWithSound = bWithSound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateFXVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FST_FXVisibilityInfo             PrevFXVisibility_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::UpdateFXVisibility(const struct FST_FXVisibilityInfo& PrevFXVisibility_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UpdateFXVisibility");

	Params::BP_AJBInGameCharacter_C_UpdateFXVisibility Parms{};

	Parms.PrevFXVisibility_0 = std::move(PrevFXVisibility_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.EndSpecialBreakDown
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::EndSpecialBreakDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "EndSpecialBreakDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.StartSpecialBreakDown
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::StartSpecialBreakDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "StartSpecialBreakDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_AddGravityStatusImmediate
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     GravityScaleTag                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// float                                   GravityScale                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::MC_AddGravityStatusImmediate(const struct FGameplayTag& GravityScaleTag, float GravityScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MC_AddGravityStatusImmediate");

	Params::BP_AJBInGameCharacter_C_MC_AddGravityStatusImmediate Parms{};

	Parms.GravityScaleTag = std::move(GravityScaleTag);
	Parms.GravityScale = GravityScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_AddGravityStatusImmediate
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     GravityScaleTag                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// float                                   GravityScale                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROS_AddGravityStatusImmediate(const struct FGameplayTag& GravityScaleTag, float GravityScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_AddGravityStatusImmediate");

	Params::BP_AJBInGameCharacter_C_ROS_AddGravityStatusImmediate Parms{};

	Parms.GravityScaleTag = std::move(GravityScaleTag);
	Parms.GravityScale = GravityScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.AddGravityStatusImmediate_Local
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     GravityScaleTag                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// float                                   GravityScale                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::AddGravityStatusImmediate_Local(const struct FGameplayTag& GravityScaleTag, float GravityScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "AddGravityStatusImmediate_Local");

	Params::BP_AJBInGameCharacter_C_AddGravityStatusImmediate_Local Parms{};

	Parms.GravityScaleTag = std::move(GravityScaleTag);
	Parms.GravityScale = GravityScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RemoveGravityStatusOnLanding_Server
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::RemoveGravityStatusOnLanding_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "RemoveGravityStatusOnLanding_Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RemoveGravityStatusImmediateCore
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::RemoveGravityStatusImmediateCore(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "RemoveGravityStatusImmediateCore");

	Params::BP_AJBInGameCharacter_C_RemoveGravityStatusImmediateCore Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RemoveGravityStatusImmediateReadyCore
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::RemoveGravityStatusImmediateReadyCore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "RemoveGravityStatusImmediateReadyCore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RemoveGravityStatusOnLandingCore
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::RemoveGravityStatusOnLandingCore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "RemoveGravityStatusOnLandingCore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ReserveRemoveGravityStatusOnLandingCore
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ReserveRemoveGravityStatusOnLandingCore(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ReserveRemoveGravityStatusOnLandingCore");

	Params::BP_AJBInGameCharacter_C_ReserveRemoveGravityStatusOnLandingCore Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_RemoveGravityStatusImmediateReady
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ROS_RemoveGravityStatusImmediateReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_RemoveGravityStatusImmediateReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RemoveGravityStatusImmediateReady_Local
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::RemoveGravityStatusImmediateReady_Local()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "RemoveGravityStatusImmediateReady_Local");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_RemoveGravityStatusImmediate
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROS_RemoveGravityStatusImmediate(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_RemoveGravityStatusImmediate");

	Params::BP_AJBInGameCharacter_C_ROS_RemoveGravityStatusImmediate Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RemoveGravityStatusImmediate_Local
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::RemoveGravityStatusImmediate_Local(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "RemoveGravityStatusImmediate_Local");

	Params::BP_AJBInGameCharacter_C_RemoveGravityStatusImmediate_Local Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_RemoveGravityStatusOnLanding
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ROS_RemoveGravityStatusOnLanding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_RemoveGravityStatusOnLanding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_ReserveRemoveGravityStatusOnLanding
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROS_ReserveRemoveGravityStatusOnLanding(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_ReserveRemoveGravityStatusOnLanding");

	Params::BP_AJBInGameCharacter_C_ROS_ReserveRemoveGravityStatusOnLanding Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ReserveRemoveGravityStatusOnLanding_Local
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ReserveRemoveGravityStatusOnLanding_Local(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ReserveRemoveGravityStatusOnLanding_Local");

	Params::BP_AJBInGameCharacter_C_ReserveRemoveGravityStatusOnLanding_Local Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RemoveGravityStatusOnLanding_Local
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::RemoveGravityStatusOnLanding_Local()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "RemoveGravityStatusOnLanding_Local");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRep_PairCharacter
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnRep_PairCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnRep_PairCharacter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryToShareMatchingPlayerIndexWithStand
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MatchingPlayerIndex_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::TryToShareMatchingPlayerIndexWithStand(int32 MatchingPlayerIndex_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "TryToShareMatchingPlayerIndexWithStand");

	Params::BP_AJBInGameCharacter_C_TryToShareMatchingPlayerIndexWithStand Parms{};

	Parms.MatchingPlayerIndex_0 = MatchingPlayerIndex_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_DebugChangeSuperJump
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ROC_DebugChangeSuperJump(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROC_DebugChangeSuperJump");

	Params::BP_AJBInGameCharacter_C_ROC_DebugChangeSuperJump Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_DebugChangeSuperJump
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ROS_DebugChangeSuperJump(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_DebugChangeSuperJump");

	Params::BP_AJBInGameCharacter_C_ROS_DebugChangeSuperJump Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_DebugChangeCollisionEnable
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ROS_DebugChangeCollisionEnable(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_DebugChangeCollisionEnable");

	Params::BP_AJBInGameCharacter_C_ROS_DebugChangeCollisionEnable Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeRelatedMeshStencilValueByDigit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_StencilDigit                          DigitToChange                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFlag                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bAlsoChangeRelatedActors                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ChangeRelatedMeshStencilValueByDigit(E_StencilDigit DigitToChange, bool bFlag, bool bAlsoChangeRelatedActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeRelatedMeshStencilValueByDigit");

	Params::BP_AJBInGameCharacter_C_ChangeRelatedMeshStencilValueByDigit Parms{};

	Parms.DigitToChange = DigitToChange;
	Parms.bFlag = bFlag;
	Parms.bAlsoChangeRelatedActors = bAlsoChangeRelatedActors;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeSkin
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ChangeSkin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeSkin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CleanUp
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldDestroy                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CleanUp(bool bShouldDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CleanUp");

	Params::BP_AJBInGameCharacter_C_CleanUp Parms{};

	Parms.bShouldDestroy = bShouldDestroy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPlayerControllerDestroyed
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnPlayerControllerDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnPlayerControllerDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnDamageAreaVanish
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnDamageAreaVanish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnDamageAreaVanish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_DebugChangeSkillAnimation
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDebugSkillAnimation_0                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::MC_DebugChangeSkillAnimation(bool bDebugSkillAnimation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MC_DebugChangeSkillAnimation");

	Params::BP_AJBInGameCharacter_C_MC_DebugChangeSkillAnimation Parms{};

	Parms.bDebugSkillAnimation_0 = bDebugSkillAnimation_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_DebugChangeSkillAnimation
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDebugSkillAnimation_0                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ROS_DebugChangeSkillAnimation(bool bDebugSkillAnimation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_DebugChangeSkillAnimation");

	Params::BP_AJBInGameCharacter_C_ROS_DebugChangeSkillAnimation Parms{};

	Parms.bDebugSkillAnimation_0 = bDebugSkillAnimation_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DebugChangeSkillAnimation_Local
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSkillAnimation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::DebugChangeSkillAnimation_Local(bool bSkillAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "DebugChangeSkillAnimation_Local");

	Params::BP_AJBInGameCharacter_C_DebugChangeSkillAnimation_Local Parms{};

	Parms.bSkillAnimation = bSkillAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_EmoteWithoutPose
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PositionNo                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::MC_EmoteWithoutPose(const int32 PositionNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MC_EmoteWithoutPose");

	Params::BP_AJBInGameCharacter_C_MC_EmoteWithoutPose Parms{};

	Parms.PositionNo = PositionNo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_EmoteWithoutPose
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PositionNo                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROS_EmoteWithoutPose(const int32 PositionNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_EmoteWithoutPose");

	Params::BP_AJBInGameCharacter_C_ROS_EmoteWithoutPose Parms{};

	Parms.PositionNo = PositionNo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryToPerformEmotePose
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PositionNo                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::TryToPerformEmotePose(const int32 PositionNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "TryToPerformEmotePose");

	Params::BP_AJBInGameCharacter_C_TryToPerformEmotePose Parms{};

	Parms.PositionNo = PositionNo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ResetCameraPitch
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ResetCameraPitch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ResetCameraPitch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryToSpeakEmoteVoice
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PositionNo                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::TryToSpeakEmoteVoice(const int32 PositionNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "TryToSpeakEmoteVoice");

	Params::BP_AJBInGameCharacter_C_TryToSpeakEmoteVoice Parms{};

	Parms.PositionNo = PositionNo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RequestLandingEffect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bLandingStop                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          WorldLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::RequestLandingEffect(bool bLandingStop, const struct FVector& WorldLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "RequestLandingEffect");

	Params::BP_AJBInGameCharacter_C_RequestLandingEffect Parms{};

	Parms.bLandingStop = bLandingStop;
	Parms.WorldLocation = std::move(WorldLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetLandingStopEnabled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bResetRecording                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::SetLandingStopEnabled(bool bEnable, bool bResetRecording)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SetLandingStopEnabled");

	Params::BP_AJBInGameCharacter_C_SetLandingStopEnabled Parms{};

	Parms.bEnable = bEnable;
	Parms.bResetRecording = bResetRecording;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CancelLandingStop
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::CancelLandingStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CancelLandingStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnStartTrainingEndGameConfirm
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnStartTrainingEndGameConfirm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnStartTrainingEndGameConfirm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.PreInitializeComponentsBP
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::PreInitializeComponentsBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "PreInitializeComponentsBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.StartCheckLandingForStoppingThruSidling
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::StartCheckLandingForStoppingThruSidling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "StartCheckLandingForStoppingThruSidling");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckLandingForStoppingThruSidling
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::CheckLandingForStoppingThruSidling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckLandingForStoppingThruSidling");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ResetRecordForLanding
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ResetRecordForLanding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ResetRecordForLanding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_RequestLandingEffect
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     EffectType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bLandingStop                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          WorldLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::MC_RequestLandingEffect(const struct FGameplayTag& EffectType, bool bLandingStop, const struct FVector& WorldLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MC_RequestLandingEffect");

	Params::BP_AJBInGameCharacter_C_MC_RequestLandingEffect Parms{};

	Parms.EffectType = std::move(EffectType);
	Parms.bLandingStop = bLandingStop;
	Parms.WorldLocation = std::move(WorldLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_RequestLandingEffect
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     EffectType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bLandingStop                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          WorldLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROS_RequestLandingEffect(const struct FGameplayTag& EffectType, bool bLandingStop, const struct FVector& WorldLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_RequestLandingEffect");

	Params::BP_AJBInGameCharacter_C_ROS_RequestLandingEffect Parms{};

	Parms.EffectType = std::move(EffectType);
	Parms.bLandingStop = bLandingStop;
	Parms.WorldLocation = std::move(WorldLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_OnSkillEffectiveTimeDetermined
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// float                                   EffectiveTimeSec                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROC_OnSkillEffectiveTimeDetermined(const struct FGameplayTag& SkillTag, float EffectiveTimeSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROC_OnSkillEffectiveTimeDetermined");

	Params::BP_AJBInGameCharacter_C_ROC_OnSkillEffectiveTimeDetermined Parms{};

	Parms.SkillTag = std::move(SkillTag);
	Parms.EffectiveTimeSec = EffectiveTimeSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_OnSkillSucceeded
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROC_OnSkillSucceeded(const struct FGameplayTag& SkillTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROC_OnSkillSucceeded");

	Params::BP_AJBInGameCharacter_C_ROC_OnSkillSucceeded Parms{};

	Parms.SkillTag = std::move(SkillTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ReserveChangingNormalWalkingMode
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     FactorTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// float                                   RemainingDurationSec                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ReserveChangingNormalWalkingMode(const struct FGameplayTag& FactorTag, float RemainingDurationSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ReserveChangingNormalWalkingMode");

	Params::BP_AJBInGameCharacter_C_ReserveChangingNormalWalkingMode Parms{};

	Parms.FactorTag = std::move(FactorTag);
	Parms.RemainingDurationSec = RemainingDurationSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeNormalWalkingMode
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     FactorTag                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ChangeNormalWalkingMode(const struct FGameplayTag& FactorTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeNormalWalkingMode");

	Params::BP_AJBInGameCharacter_C_ChangeNormalWalkingMode Parms{};

	Parms.FactorTag = std::move(FactorTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeSidlingMode
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     FactorTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// float                                   DurationSec                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ChangeSidlingMode(const struct FGameplayTag& FactorTag, float DurationSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeSidlingMode");

	Params::BP_AJBInGameCharacter_C_ChangeSidlingMode Parms{};

	Parms.FactorTag = std::move(FactorTag);
	Parms.DurationSec = DurationSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillEffectFinished
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnSkillEffectFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnSkillEffectFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillEffectStarted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnSkillEffectStarted(int32 SerialNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnSkillEffectStarted");

	Params::BP_AJBInGameCharacter_C_OnSkillEffectStarted Parms{};

	Parms.SerialNumber = SerialNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRep_MatchingPlayerIndex
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnRep_MatchingPlayerIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnRep_MatchingPlayerIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_OnSpectated
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ROC_OnSpectated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROC_OnSpectated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.Request_StickedMarker
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        NormalizedPosition                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     PinTypeTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::Request_StickedMarker(const struct FVector2D& NormalizedPosition, const struct FGameplayTag& PinTypeTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "Request_StickedMarker");

	Params::BP_AJBInGameCharacter_C_Request_StickedMarker Parms{};

	Parms.NormalizedPosition = std::move(NormalizedPosition);
	Parms.PinTypeTag = std::move(PinTypeTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_StickedPairMarker
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        NormalizedPosition                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     PinTypeTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROC_StickedPairMarker(const struct FVector2D& NormalizedPosition, const struct FGameplayTag& PinTypeTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROC_StickedPairMarker");

	Params::BP_AJBInGameCharacter_C_ROC_StickedPairMarker Parms{};

	Parms.NormalizedPosition = std::move(NormalizedPosition);
	Parms.PinTypeTag = std::move(PinTypeTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_StickedMarker
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        NormalizedPosition                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     PinTypeTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROS_StickedMarker(const struct FVector2D& NormalizedPosition, const struct FGameplayTag& PinTypeTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_StickedMarker");

	Params::BP_AJBInGameCharacter_C_ROS_StickedMarker Parms{};

	Parms.NormalizedPosition = std::move(NormalizedPosition);
	Parms.PinTypeTag = std::move(PinTypeTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetMPMax_Local
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::SetMPMax_Local(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SetMPMax_Local");

	Params::BP_AJBInGameCharacter_C_SetMPMax_Local Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.AddPairFollowerUI
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWB_UI_FollowPairInfo_C*          PairInfoWidget                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             PairName                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_AJBInGameCharacter_C::AddPairFollowerUI(class UWB_UI_FollowPairInfo_C* PairInfoWidget, const class FText& PairName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "AddPairFollowerUI");

	Params::BP_AJBInGameCharacter_C_AddPairFollowerUI Parms{};

	Parms.PairInfoWidget = PairInfoWidget;
	Parms.PairName = std::move(PairName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IncreaseMPMax_Local
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   IncreaseValue                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::IncreaseMPMax_Local(float IncreaseValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IncreaseMPMax_Local");

	Params::BP_AJBInGameCharacter_C_IncreaseMPMax_Local Parms{};

	Parms.IncreaseValue = IncreaseValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_UpdateMPMax
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewMPMax                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROS_UpdateMPMax(float NewMPMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_UpdateMPMax");

	Params::BP_AJBInGameCharacter_C_ROS_UpdateMPMax Parms{};

	Parms.NewMPMax = NewMPMax;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RequestGionOnFalldown
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::RequestGionOnFalldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "RequestGionOnFalldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_BreakWindowOnAttack
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameWindow_C*            Window                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::MC_BreakWindowOnAttack(class ABP_AJBInGameWindow_C* Window)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MC_BreakWindowOnAttack");

	Params::BP_AJBInGameCharacter_C_MC_BreakWindowOnAttack Parms{};

	Parms.Window = Window;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_OnDamageActorBlocked_OnServer
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           BlockedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsPairAttack                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           DamageOwner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSeparateStandAttack                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::MC_OnDamageActorBlocked_OnServer(class AActor* BlockedActor, const struct FVector& HitLocation, bool bIsPairAttack, class AActor* DamageOwner, bool bSeparateStandAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MC_OnDamageActorBlocked_OnServer");

	Params::BP_AJBInGameCharacter_C_MC_OnDamageActorBlocked_OnServer Parms{};

	Parms.BlockedActor = BlockedActor;
	Parms.HitLocation = std::move(HitLocation);
	Parms.bIsPairAttack = bIsPairAttack;
	Parms.DamageOwner = DamageOwner;
	Parms.bSeparateStandAttack = bSeparateStandAttack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_OnDamageActorBlocked_OnServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           BlockedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSeparateStandAttack                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ROS_OnDamageActorBlocked_OnServer(class AActor* BlockedActor, const struct FVector& HitLocation, bool bSeparateStandAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_OnDamageActorBlocked_OnServer");

	Params::BP_AJBInGameCharacter_C_ROS_OnDamageActorBlocked_OnServer Parms{};

	Parms.BlockedActor = BlockedActor;
	Parms.HitLocation = std::move(HitLocation);
	Parms.bSeparateStandAttack = bSeparateStandAttack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_OnGetItem
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     ItemTag                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     SETag                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROC_OnGetItem(const struct FGameplayTag& ItemTag, const struct FGameplayTag& SETag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROC_OnGetItem");

	Params::BP_AJBInGameCharacter_C_ROC_OnGetItem Parms{};

	Parms.ItemTag = std::move(ItemTag);
	Parms.SETag = std::move(SETag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RestoreCameraRotation
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         NewRotation                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::RestoreCameraRotation(const struct FRotator& NewRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "RestoreCameraRotation");

	Params::BP_AJBInGameCharacter_C_RestoreCameraRotation Parms{};

	Parms.NewRotation = std::move(NewRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_SetCameraRotation
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         NewRotation                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ROS_SetCameraRotation(const struct FRotator& NewRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_SetCameraRotation");

	Params::BP_AJBInGameCharacter_C_ROS_SetCameraRotation Parms{};

	Parms.NewRotation = std::move(NewRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SaveCameraRotation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIgnorePitch                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::SaveCameraRotation(bool bIgnorePitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SaveCameraRotation");

	Params::BP_AJBInGameCharacter_C_SaveCameraRotation Parms{};

	Parms.bIgnorePitch = bIgnorePitch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_BreakWindowOnAttack
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameWindow_C*            Window                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROS_BreakWindowOnAttack(class ABP_AJBInGameWindow_C* Window)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_BreakWindowOnAttack");

	Params::BP_AJBInGameCharacter_C_ROS_BreakWindowOnAttack Parms{};

	Parms.Window = Window;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.PlayLandingStopMontage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   LandingStopTime_Sec_                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::PlayLandingStopMontage(float LandingStopTime_Sec_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "PlayLandingStopMontage");

	Params::BP_AJBInGameCharacter_C_PlayLandingStopMontage Parms{};

	Parms.LandingStopTime_Sec_ = LandingStopTime_Sec_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_PlayLandingStopMontage
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   LandingStopTime_Sec_                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::MC_PlayLandingStopMontage(float LandingStopTime_Sec_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MC_PlayLandingStopMontage");

	Params::BP_AJBInGameCharacter_C_MC_PlayLandingStopMontage Parms{};

	Parms.LandingStopTime_Sec_ = LandingStopTime_Sec_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_PlayLandingStopMontage
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   LandingStopTime_Sec_                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROS_PlayLandingStopMontage(float LandingStopTime_Sec_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_PlayLandingStopMontage");

	Params::BP_AJBInGameCharacter_C_ROS_PlayLandingStopMontage Parms{};

	Parms.LandingStopTime_Sec_ = LandingStopTime_Sec_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckFallDistance
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::CheckFallDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckFallDistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_ActiveBehaviorChangedCalled
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAJBCharacterActiveBehaviorInfo  BehaviorInfo                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_AJBInGameCharacter_C::ROS_ActiveBehaviorChangedCalled(const struct FAJBCharacterActiveBehaviorInfo& BehaviorInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_ActiveBehaviorChangedCalled");

	Params::BP_AJBInGameCharacter_C_ROS_ActiveBehaviorChangedCalled Parms{};

	Parms.BehaviorInfo = std::move(BehaviorInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ActiveBehaviorChangedCalled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAJBCharacterActiveBehaviorInfo  BehaviorInfo                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_AJBInGameCharacter_C::ActiveBehaviorChangedCalled(const struct FAJBCharacterActiveBehaviorInfo& BehaviorInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ActiveBehaviorChangedCalled");

	Params::BP_AJBInGameCharacter_C_ActiveBehaviorChangedCalled Parms{};

	Parms.BehaviorInfo = std::move(BehaviorInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_GivePassiveSkill
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          HitTarget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Causer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     CauserType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROS_GivePassiveSkill(class UObject* HitTarget, const struct FGameplayTag& Tag, class UObject* Causer, const struct FGameplayTag& CauserType, int32 SerialNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_GivePassiveSkill");

	Params::BP_AJBInGameCharacter_C_ROS_GivePassiveSkill Parms{};

	Parms.HitTarget = HitTarget;
	Parms.Tag = std::move(Tag);
	Parms.Causer = Causer;
	Parms.CauserType = std::move(CauserType);
	Parms.SerialNumber = SerialNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GivePassiveSkill
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          HitTarget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAJBInGameSkillComponent*         Causer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     CauserType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GivePassiveSkill(class UObject* HitTarget, class UAJBInGameSkillComponent* Causer, const struct FGameplayTag& CauserType, int32 SerialNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GivePassiveSkill");

	Params::BP_AJBInGameCharacter_C_GivePassiveSkill Parms{};

	Parms.HitTarget = HitTarget;
	Parms.Causer = Causer;
	Parms.CauserType = std::move(CauserType);
	Parms.SerialNumber = SerialNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterSetup
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::CharacterSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CharacterSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnJumped
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnJumped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnJumped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryCrouch
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::TryCrouch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "TryCrouch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryUncrouch
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::TryUncrouch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "TryUncrouch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.Emote
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SetPositionNo                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::Emote(int32 SetPositionNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "Emote");

	Params::BP_AJBInGameCharacter_C_Emote Parms{};

	Parms.SetPositionNo = SetPositionNo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.K2_OnEndViewTarget
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                PC                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::K2_OnEndViewTarget(class APlayerController* PC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "K2_OnEndViewTarget");

	Params::BP_AJBInGameCharacter_C_K2_OnEndViewTarget Parms{};

	Parms.PC = PC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.K2_OnBecomeViewTarget
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                PC                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::K2_OnBecomeViewTarget(class APlayerController* PC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "K2_OnBecomeViewTarget");

	Params::BP_AJBInGameCharacter_C_K2_OnBecomeViewTarget Parms{};

	Parms.PC = PC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ServerOnly_AddSpectatorController
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_AJBInGamePlayerController_C*>SpectatorControllers_0                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ABP_AJBInGameCharacter_C::ServerOnly_AddSpectatorController(const TArray<class ABP_AJBInGamePlayerController_C*>& SpectatorControllers_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ServerOnly_AddSpectatorController");

	Params::BP_AJBInGameCharacter_C_ServerOnly_AddSpectatorController Parms{};

	Parms.SpectatorControllers_0 = std::move(SpectatorControllers_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnChangeWalkingState
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EWalkingState                           NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnChangeWalkingState(EWalkingState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnChangeWalkingState");

	Params::BP_AJBInGameCharacter_C_OnChangeWalkingState Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_ChangeWalkingState
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// EWalkingState                           NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROS_ChangeWalkingState(EWalkingState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_ChangeWalkingState");

	Params::BP_AJBInGameCharacter_C_ROS_ChangeWalkingState Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeWalkingState
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EWalkingState                           NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ChangeWalkingState(EWalkingState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeWalkingState");

	Params::BP_AJBInGameCharacter_C_ChangeWalkingState Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SprinkleSP
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::SprinkleSP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SprinkleSP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_CheckGrowup
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PrevSP                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentSP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROC_CheckGrowup(int32 PrevSP, int32 CurrentSP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROC_CheckGrowup");

	Params::BP_AJBInGameCharacter_C_ROC_CheckGrowup Parms{};

	Parms.PrevSP = PrevSP;
	Parms.CurrentSP = CurrentSP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnDamageAreaOut
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnDamageAreaOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnDamageAreaOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnDamageAreaIn
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnDamageAreaIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnDamageAreaIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnAreaDamage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnAreaDamage(int32 Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnAreaDamage");

	Params::BP_AJBInGameCharacter_C_OnAreaDamage Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ReceiveTick");

	Params::BP_AJBInGameCharacter_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.K2_OnEndCrouch
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   HalfHeightAdjust                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ScaledHalfHeightAdjust                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::K2_OnEndCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "K2_OnEndCrouch");

	Params::BP_AJBInGameCharacter_C_K2_OnEndCrouch Parms{};

	Parms.HalfHeightAdjust = HalfHeightAdjust;
	Parms.ScaledHalfHeightAdjust = ScaledHalfHeightAdjust;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.K2_OnStartCrouch
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   HalfHeightAdjust                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ScaledHalfHeightAdjust                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::K2_OnStartCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "K2_OnStartCrouch");

	Params::BP_AJBInGameCharacter_C_K2_OnStartCrouch Parms{};

	Parms.HalfHeightAdjust = HalfHeightAdjust;
	Parms.ScaledHalfHeightAdjust = ScaledHalfHeightAdjust;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.PressedButtonCrouch
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::PressedButtonCrouch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "PressedButtonCrouch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPressedShoot
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnPressedShoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnPressedShoot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateMovementInput
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::UpdateMovementInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UpdateMovementInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnReleasedL3
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnReleasedL3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnReleasedL3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPressedL3
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnPressedL3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnPressedL3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnReleasedEmote
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnReleasedEmote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnReleasedEmote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnShowEmoteSelectUI
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnShowEmoteSelectUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnShowEmoteSelectUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ReleasedButtonInteract
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ReleasedButtonInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ReleasedButtonInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.PressedButtonInteract
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::PressedButtonInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "PressedButtonInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.NotifyTheWorldToInputEventGraph
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::NotifyTheWorldToInputEventGraph(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "NotifyTheWorldToInputEventGraph");

	Params::BP_AJBInGameCharacter_C_NotifyTheWorldToInputEventGraph Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.StopCallOnControlCameraDispatcher
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::StopCallOnControlCameraDispatcher()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "StopCallOnControlCameraDispatcher");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateCameraInput
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::UpdateCameraInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UpdateCameraInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.StopCallOnMoveDispatcher
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::StopCallOnMoveDispatcher()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "StopCallOnMoveDispatcher");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ReleasedButton_ActiveBase
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ReleasedButton_ActiveBase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ReleasedButton_ActiveBase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.PressedButton_ActiveBase
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::PressedButton_ActiveBase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "PressedButton_ActiveBase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ReleasedButton_ActiveSpecial
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ReleasedButton_ActiveSpecial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ReleasedButton_ActiveSpecial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.PressedButton_ActiveSpecial
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::PressedButton_ActiveSpecial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "PressedButton_ActiveSpecial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ReleasedButton_Basic
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ReleasedButton_Basic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ReleasedButton_Basic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.PressedButton_Basic
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::PressedButton_Basic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "PressedButton_Basic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ReleasedButton_Ultimate
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ReleasedButton_Ultimate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ReleasedButton_Ultimate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.PressedButton_Ultimate
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::PressedButton_Ultimate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "PressedButton_Ultimate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnReleasedR1
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnReleasedR1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnReleasedR1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnReleasedR2
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnReleasedR2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnReleasedR2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnReleasedL2
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnReleasedL2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnReleasedL2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnReleasedL1
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnReleasedL1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnReleasedL1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPressedR2
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnPressedR2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnPressedR2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPressedR1
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnPressedR1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnPressedR1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPressedL2
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnPressedL2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnPressedL2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPressedL1
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnPressedL1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnPressedL1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPressedEmote
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnPressedEmote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnPressedEmote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnReleasedInteract
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnReleasedInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnReleasedInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPressedInteract
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnPressedInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnPressedInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnReleasedCrouch
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnReleasedCrouch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnReleasedCrouch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPressedCrouch
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnPressedCrouch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnPressedCrouch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnReleasedJump
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnReleasedJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnReleasedJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPressedJump
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnPressedJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnPressedJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.LookupRate
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::LookupRate(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "LookupRate");

	Params::BP_AJBInGameCharacter_C_LookupRate Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TurnRate
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::TurnRate(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "TurnRate");

	Params::BP_AJBInGameCharacter_C_TurnRate Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MoveRight
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::MoveRight(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MoveRight");

	Params::BP_AJBInGameCharacter_C_MoveRight Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MoveForward
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::MoveForward(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MoveForward");

	Params::BP_AJBInGameCharacter_C_MoveForward Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnDebugMakePair
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         OtherCharacterBP                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnDebugMakePair(class ABP_AJBInGameCharacter_C* OtherCharacterBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnDebugMakePair");

	Params::BP_AJBInGameCharacter_C_OnDebugMakePair Parms{};

	Parms.OtherCharacterBP = OtherCharacterBP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_APHeal
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROS_APHeal(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_APHeal");

	Params::BP_AJBInGameCharacter_C_ROS_APHeal Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_DebugCPMax
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ROS_DebugCPMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_DebugCPMax");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DebugCPMax
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::DebugCPMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "DebugCPMax");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_PrintString
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InString                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    bPrintToScreen                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bPrintToLog                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FLinearColor                     TextColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROC_PrintString(const class FString& InString, bool bPrintToScreen, bool bPrintToLog, const struct FLinearColor& TextColor, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROC_PrintString");

	Params::BP_AJBInGameCharacter_C_ROC_PrintString Parms{};

	Parms.InString = std::move(InString);
	Parms.bPrintToScreen = bPrintToScreen;
	Parms.bPrintToLog = bPrintToLog;
	Parms.TextColor = std::move(TextColor);
	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DebugChangeInfinityRevive
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInfinityRevive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::DebugChangeInfinityRevive(bool bInfinityRevive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "DebugChangeInfinityRevive");

	Params::BP_AJBInGameCharacter_C_DebugChangeInfinityRevive Parms{};

	Parms.bInfinityRevive = bInfinityRevive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_DebugChangeInfinityRevive
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInfinityRevive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ROS_DebugChangeInfinityRevive(bool bInfinityRevive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_DebugChangeInfinityRevive");

	Params::BP_AJBInGameCharacter_C_ROS_DebugChangeInfinityRevive Parms{};

	Parms.bInfinityRevive = bInfinityRevive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DebugKillPair
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::DebugKillPair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "DebugKillPair");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_DebugMakePair
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         OtherCharacterBP                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROS_DebugMakePair(class ABP_AJBInGameCharacter_C* OtherCharacterBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_DebugMakePair");

	Params::BP_AJBInGameCharacter_C_ROS_DebugMakePair Parms{};

	Parms.OtherCharacterBP = OtherCharacterBP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DebugMakePair
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::DebugMakePair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "DebugMakePair");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.Resurrection_Impl
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InvincibleTimeSec                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAPMax                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::Resurrection_Impl(float InvincibleTimeSec, bool bAPMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "Resurrection_Impl");

	Params::BP_AJBInGameCharacter_C_Resurrection_Impl Parms{};

	Parms.InvincibleTimeSec = InvincibleTimeSec;
	Parms.bAPMax = bAPMax;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_DebugAPMax
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ROS_DebugAPMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_DebugAPMax");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DebugAPMax
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::DebugAPMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "DebugAPMax");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ResurrectionFromServer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InvincibleTimeSec                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ResurrectionFromServer(float InvincibleTimeSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ResurrectionFromServer");

	Params::BP_AJBInGameCharacter_C_ResurrectionFromServer Parms{};

	Parms.InvincibleTimeSec = InvincibleTimeSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_DebugSPMax
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ROS_DebugSPMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_DebugSPMax");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DebugSPMax
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::DebugSPMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "DebugSPMax");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_Heal
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROS_Heal(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_Heal");

	Params::BP_AJBInGameCharacter_C_ROS_Heal Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_CharacterRessurection
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InvincibleTimeSec                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROS_CharacterRessurection(float InvincibleTimeSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_CharacterRessurection");

	Params::BP_AJBInGameCharacter_C_ROS_CharacterRessurection Parms{};

	Parms.InvincibleTimeSec = InvincibleTimeSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.Resurrection
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InvincibleTimeSec                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::Resurrection(float InvincibleTimeSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "Resurrection");

	Params::BP_AJBInGameCharacter_C_Resurrection Parms{};

	Parms.InvincibleTimeSec = InvincibleTimeSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeMovementModeOnTimeStop
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ChangeMovementModeOnTimeStop(bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeMovementModeOnTimeStop");

	Params::BP_AJBInGameCharacter_C_ChangeMovementModeOnTimeStop Parms{};

	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnNotSpectated_Local
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnNotSpectated_Local()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnNotSpectated_Local");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSpectated_Local
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnSpectated_Local()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnSpectated_Local");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_OnReceiveDamage_All
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::MC_OnReceiveDamage_All()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MC_OnReceiveDamage_All");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnNoDamageChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         OperaatorCharacter                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bNewFlag                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGameplayTag                     EffectTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     SETag                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnNoDamageChanged(class ABP_AJBInGameCharacter_C* OperaatorCharacter, bool bNewFlag, const struct FGameplayTag& EffectTag, const struct FGameplayTag& SETag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnNoDamageChanged");

	Params::BP_AJBInGameCharacter_C_OnNoDamageChanged Parms{};

	Parms.OperaatorCharacter = OperaatorCharacter;
	Parms.bNewFlag = bNewFlag;
	Parms.EffectTag = std::move(EffectTag);
	Parms.SETag = std::move(SETag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_CutDamage
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CutDamage                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROC_CutDamage(int32 CutDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROC_CutDamage");

	Params::BP_AJBInGameCharacter_C_ROC_CutDamage Parms{};

	Parms.CutDamage = CutDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_GiveDamage
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageReceiver                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RemainHP                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    DamageIsCut                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DamageReceiverIsPlayer                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bWithSeparatedStandAttack                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bHitEnemysSeparateStand                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ROC_GiveDamage(int32 Damage, const struct FGameplayTag& DamageType, class AActor* DamageReceiver, bool RemainHP, bool DamageIsCut, int32 SerialNumber, bool DamageReceiverIsPlayer, bool bWithSeparatedStandAttack, bool bHitEnemysSeparateStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROC_GiveDamage");

	Params::BP_AJBInGameCharacter_C_ROC_GiveDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = std::move(DamageType);
	Parms.DamageReceiver = DamageReceiver;
	Parms.RemainHP = RemainHP;
	Parms.DamageIsCut = DamageIsCut;
	Parms.SerialNumber = SerialNumber;
	Parms.DamageReceiverIsPlayer = DamageReceiverIsPlayer;
	Parms.bWithSeparatedStandAttack = bWithSeparatedStandAttack;
	Parms.bHitEnemysSeparateStand = bHitEnemysSeparateStand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_ReceiveDamage
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RemainHP                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDamageIsCutByStatus                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDamageIsCutByAAP                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ROC_ReceiveDamage(int32 Damage, const struct FGameplayTag& DamageType, class AActor* DamageCauser, bool RemainHP, bool bDamageIsCutByStatus, bool bDamageIsCutByAAP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROC_ReceiveDamage");

	Params::BP_AJBInGameCharacter_C_ROC_ReceiveDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = std::move(DamageType);
	Parms.DamageCauser = DamageCauser;
	Parms.RemainHP = RemainHP;
	Parms.bDamageIsCutByStatus = bDamageIsCutByStatus;
	Parms.bDamageIsCutByAAP = bDamageIsCutByAAP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.AddGameplayTagWithFloat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// float                                   FloatValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::AddGameplayTagWithFloat(const struct FGameplayTag& Tag, float FloatValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "AddGameplayTagWithFloat");

	Params::BP_AJBInGameCharacter_C_AddGameplayTagWithFloat Parms{};

	Parms.Tag = std::move(Tag);
	Parms.FloatValue = FloatValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_AJBDamage
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// EDamagePriority                         DamagePriority                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRemainHP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDamageIsCut                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   BeforeAAP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AfterAAP                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::MC_AJBDamage(const struct FGameplayTag& DamageType, EDamagePriority DamagePriority, class AActor* DamageCauser, bool bRemainHP, bool bDamageIsCut, int32 BeforeAAP, int32 AfterAAP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MC_AJBDamage");

	Params::BP_AJBInGameCharacter_C_MC_AJBDamage Parms{};

	Parms.DamageType = std::move(DamageType);
	Parms.DamagePriority = DamagePriority;
	Parms.DamageCauser = DamageCauser;
	Parms.bRemainHP = bRemainHP;
	Parms.bDamageIsCut = bDamageIsCut;
	Parms.BeforeAAP = BeforeAAP;
	Parms.AfterAAP = AfterAAP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.AJBDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DamageForHPAP                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DamageForAAP                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CutDamage                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDamagePriority                         DamagePriority                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AttackDistance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WithSeparatedStandAttack                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    HitEnemysSeparatedStand                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bPenetrateAP                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bNotUseCollision                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::AJBDamage(class AActor* DamagedActor, int32 DamageForHPAP, int32 DamageForAAP, int32 CutDamage, const struct FGameplayTag& DamageType, int32 SerialNumber, EDamagePriority DamagePriority, float AttackDistance, class AActor* DamageCauser, bool WithSeparatedStandAttack, bool HitEnemysSeparatedStand, bool bPenetrateAP, bool bNotUseCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "AJBDamage");

	Params::BP_AJBInGameCharacter_C_AJBDamage Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.DamageForHPAP = DamageForHPAP;
	Parms.DamageForAAP = DamageForAAP;
	Parms.CutDamage = CutDamage;
	Parms.DamageType = std::move(DamageType);
	Parms.SerialNumber = SerialNumber;
	Parms.DamagePriority = DamagePriority;
	Parms.AttackDistance = AttackDistance;
	Parms.DamageCauser = DamageCauser;
	Parms.WithSeparatedStandAttack = WithSeparatedStandAttack;
	Parms.HitEnemysSeparatedStand = HitEnemysSeparatedStand;
	Parms.bPenetrateAP = bPenetrateAP;
	Parms.bNotUseCollision = bNotUseCollision;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnAreaOut
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         OperatorCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     EffectTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     SETag                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnAreaOut(class ABP_AJBInGameCharacter_C* OperatorCharacter, const struct FGameplayTag& EffectTag, const struct FGameplayTag& SETag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnAreaOut");

	Params::BP_AJBInGameCharacter_C_OnAreaOut Parms{};

	Parms.OperatorCharacter = OperatorCharacter;
	Parms.EffectTag = std::move(EffectTag);
	Parms.SETag = std::move(SETag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnAreaIn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         OperatorCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     EffectTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     SETag                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bNoDamage                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::OnAreaIn(class ABP_AJBInGameCharacter_C* OperatorCharacter, const struct FGameplayTag& EffectTag, const struct FGameplayTag& SETag, bool bNoDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnAreaIn");

	Params::BP_AJBInGameCharacter_C_OnAreaIn Parms{};

	Parms.OperatorCharacter = OperatorCharacter;
	Parms.EffectTag = std::move(EffectTag);
	Parms.SETag = std::move(SETag);
	Parms.bNoDamage = bNoDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "NotifyTheWorld");

	Params::BP_AJBInGameCharacter_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RemoveGameplayTag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::RemoveGameplayTag(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "RemoveGameplayTag");

	Params::BP_AJBInGameCharacter_C_RemoveGameplayTag Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.AddGameplayTag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     CauserType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::AddGameplayTag(const struct FGameplayTag& Tag, class UObject* Operator, class UObject* Target, const struct FGameplayTag& CauserType, int32 SerialNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "AddGameplayTag");

	Params::BP_AJBInGameCharacter_C_AddGameplayTag Parms{};

	Parms.Tag = std::move(Tag);
	Parms.Operator = Operator;
	Parms.Target = Target;
	Parms.CauserType = std::move(CauserType);
	Parms.SerialNumber = SerialNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.EmoteTick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::EmoteTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "EmoteTick");

	Params::BP_AJBInGameCharacter_C_EmoteTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DefaultTick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::DefaultTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "DefaultTick");

	Params::BP_AJBInGameCharacter_C_DefaultTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.StateTick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::StateTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "StateTick");

	Params::BP_AJBInGameCharacter_C_StateTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_RequestDeathEffect
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::MC_RequestDeathEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MC_RequestDeathEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterCriticalness_TheMoment
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::CharacterCriticalness_TheMoment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CharacterCriticalness_TheMoment");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterCriticalness_OnState
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::CharacterCriticalness_OnState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CharacterCriticalness_OnState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_CharacterActive
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ROC_CharacterActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROC_CharacterActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryToVanishDueToBeInDamageArea
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::TryToVanishDueToBeInDamageArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "TryToVanishDueToBeInDamageArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_OnRescueSuccess
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ROC_OnRescueSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROC_OnRescueSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_OnRevive
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Rescuer                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROC_OnRevive(class AActor* Rescuer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROC_OnRevive");

	Params::BP_AJBInGameCharacter_C_ROC_OnRevive Parms{};

	Parms.Rescuer = Rescuer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_CharacterActive
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::MC_CharacterActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MC_CharacterActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterActive
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::CharacterActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CharacterActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_CharacterCriticalness
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::MC_CharacterCriticalness()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MC_CharacterCriticalness");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_CharacterCriticalnessToActive
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::MC_CharacterCriticalnessToActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MC_CharacterCriticalnessToActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterCriticalnessToActive
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Rescuer                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::CharacterCriticalnessToActive(class AActor* Rescuer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CharacterCriticalnessToActive");

	Params::BP_AJBInGameCharacter_C_CharacterCriticalnessToActive Parms{};

	Parms.Rescuer = Rescuer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterCriticalness
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::CharacterCriticalness()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CharacterCriticalness");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterActiveToCriticalness_TheMoment
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::CharacterActiveToCriticalness_TheMoment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CharacterActiveToCriticalness_TheMoment");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterActiveToCriticalness_OnState
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::CharacterActiveToCriticalness_OnState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CharacterActiveToCriticalness_OnState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_OnDown
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DownedMachingPlayerIndex                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::MC_OnDown(int32 DownedMachingPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MC_OnDown");

	Params::BP_AJBInGameCharacter_C_MC_OnDown Parms{};

	Parms.DownedMachingPlayerIndex = DownedMachingPlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_Critical
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ROC_Critical()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROC_Critical");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterActiveToCriticalness
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ReservedDamageCauser                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     ReservedDamageType                                     (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   Reserved_SerialNumber                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Reserved_AttackDistance                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Reserved_WithSeparatedStandAttack                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Reserved_HitEnemyesSeparatedStand                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Reserved_UltimateSkillSerialNumberIfInEffect           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::CharacterActiveToCriticalness(class AActor* ReservedDamageCauser, const struct FGameplayTag& ReservedDamageType, int32 Reserved_SerialNumber, float Reserved_AttackDistance, bool Reserved_WithSeparatedStandAttack, bool Reserved_HitEnemyesSeparatedStand, int32 Reserved_UltimateSkillSerialNumberIfInEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CharacterActiveToCriticalness");

	Params::BP_AJBInGameCharacter_C_CharacterActiveToCriticalness Parms{};

	Parms.ReservedDamageCauser = ReservedDamageCauser;
	Parms.ReservedDamageType = std::move(ReservedDamageType);
	Parms.Reserved_SerialNumber = Reserved_SerialNumber;
	Parms.Reserved_AttackDistance = Reserved_AttackDistance;
	Parms.Reserved_WithSeparatedStandAttack = Reserved_WithSeparatedStandAttack;
	Parms.Reserved_HitEnemyesSeparatedStand = Reserved_HitEnemyesSeparatedStand;
	Parms.Reserved_UltimateSkillSerialNumberIfInEffect = Reserved_UltimateSkillSerialNumberIfInEffect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_CharacterActiveToCriticalness
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::MC_CharacterActiveToCriticalness()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MC_CharacterActiveToCriticalness");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_CharacterRessurection
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::MC_CharacterRessurection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MC_CharacterRessurection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterRessurection_OnServer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InvincibleTimeSec                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::CharacterRessurection_OnServer(float InvincibleTimeSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CharacterRessurection_OnServer");

	Params::BP_AJBInGameCharacter_C_CharacterRessurection_OnServer Parms{};

	Parms.InvincibleTimeSec = InvincibleTimeSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_OnKill_All
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   KillCount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DeadPlayerID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsLastDefeated                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::MC_OnKill_All(uint8 KillCount, int32 DeadPlayerID, bool bIsLastDefeated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MC_OnKill_All");

	Params::BP_AJBInGameCharacter_C_MC_OnKill_All Parms{};

	Parms.KillCount = KillCount;
	Parms.DeadPlayerID = DeadPlayerID;
	Parms.bIsLastDefeated = bIsLastDefeated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterDead_OnState
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::CharacterDead_OnState(const struct FGameplayTag& DamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CharacterDead_OnState");

	Params::BP_AJBInGameCharacter_C_CharacterDead_OnState Parms{};

	Parms.DamageType = std::move(DamageType);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterDead_TheMoment
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasCriticalState                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CharacterDead_TheMoment(bool bWasCriticalState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CharacterDead_TheMoment");

	Params::BP_AJBInGameCharacter_C_CharacterDead_TheMoment Parms{};

	Parms.bWasCriticalState = bWasCriticalState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_LastKill
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ROS_LastKill(const struct FGameplayTag& SkillTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_LastKill");

	Params::BP_AJBInGameCharacter_C_ROS_LastKill Parms{};

	Parms.SkillTag = std::move(SkillTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetBattleGameRankByPair(Server)
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Rank                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RankWithoutCPU                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::SetBattleGameRankByPair_Server_(int32 Rank, int32 RankWithoutCPU)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SetBattleGameRankByPair(Server)");

	Params::BP_AJBInGameCharacter_C_SetBattleGameRankByPair_Server_ Parms{};

	Parms.Rank = Rank;
	Parms.RankWithoutCPU = RankWithoutCPU;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_PairKill
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ROC_PairKill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROC_PairKill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_PairDie
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ROC_PairDie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROC_PairDie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_Die
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsLastDefeated                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDiedOfKillZ                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ROC_Die(bool bIsLastDefeated, bool bDiedOfKillZ)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROC_Die");

	Params::BP_AJBInGameCharacter_C_ROC_Die Parms{};

	Parms.bIsLastDefeated = bIsLastDefeated;
	Parms.bDiedOfKillZ = bDiedOfKillZ;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_Kill
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AttackDistance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   KilledCharacterId                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWithSeparatedStandAttack                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bHitEnemysSeparatedStand                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bFirstBlood                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   UltimateSkillSerialNumberIfInEffect                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DeadPlayerID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsLastDefeated                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bPlayerKill                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSpecialKill                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ROC_Kill(const struct FGameplayTag& SkillTag, int32 SerialNumber, float AttackDistance, uint8 KilledCharacterId, bool bWithSeparatedStandAttack, bool bHitEnemysSeparatedStand, bool bFirstBlood, int32 UltimateSkillSerialNumberIfInEffect, float ElapsedTime, int32 DeadPlayerID, bool bIsLastDefeated, bool bPlayerKill, bool bSpecialKill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROC_Kill");

	Params::BP_AJBInGameCharacter_C_ROC_Kill Parms{};

	Parms.SkillTag = std::move(SkillTag);
	Parms.SerialNumber = SerialNumber;
	Parms.AttackDistance = AttackDistance;
	Parms.KilledCharacterId = KilledCharacterId;
	Parms.bWithSeparatedStandAttack = bWithSeparatedStandAttack;
	Parms.bHitEnemysSeparatedStand = bHitEnemysSeparatedStand;
	Parms.bFirstBlood = bFirstBlood;
	Parms.UltimateSkillSerialNumberIfInEffect = UltimateSkillSerialNumberIfInEffect;
	Parms.ElapsedTime = ElapsedTime;
	Parms.DeadPlayerID = DeadPlayerID;
	Parms.bIsLastDefeated = bIsLastDefeated;
	Parms.bPlayerKill = bPlayerKill;
	Parms.bSpecialKill = bSpecialKill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterDeadByPair(Server)
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::CharacterDeadByPair_Server_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CharacterDeadByPair(Server)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_CharacterDead_Start
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasCriticalState                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGameplayTag                     DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::MC_CharacterDead_Start(bool bWasCriticalState, const struct FGameplayTag& DamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MC_CharacterDead_Start");

	Params::BP_AJBInGameCharacter_C_MC_CharacterDead_Start Parms{};

	Parms.bWasCriticalState = bWasCriticalState;
	Parms.DamageType = std::move(DamageType);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterDead(Server)
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AttackDistance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   KilledCharacterId                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WithSeparatedStandAttack                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    HitEnemysSeparatedStand                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   UltimateSkillSerialNumberIfInEffect                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WasCriticalState                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   DeadPlayerID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::CharacterDead_Server_(class AActor* DamageCauser, const struct FGameplayTag& DamageType, int32 SerialNumber, float AttackDistance, uint8 KilledCharacterId, bool WithSeparatedStandAttack, bool HitEnemysSeparatedStand, int32 UltimateSkillSerialNumberIfInEffect, bool WasCriticalState, int32 DeadPlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CharacterDead(Server)");

	Params::BP_AJBInGameCharacter_C_CharacterDead_Server_ Parms{};

	Parms.DamageCauser = DamageCauser;
	Parms.DamageType = std::move(DamageType);
	Parms.SerialNumber = SerialNumber;
	Parms.AttackDistance = AttackDistance;
	Parms.KilledCharacterId = KilledCharacterId;
	Parms.WithSeparatedStandAttack = WithSeparatedStandAttack;
	Parms.HitEnemysSeparatedStand = HitEnemysSeparatedStand;
	Parms.UltimateSkillSerialNumberIfInEffect = UltimateSkillSerialNumberIfInEffect;
	Parms.WasCriticalState = WasCriticalState;
	Parms.DeadPlayerID = DeadPlayerID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_CancelAllSkill
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ROC_CancelAllSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROC_CancelAllSkill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_OnBecomeLastSurvivor
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::MC_OnBecomeLastSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MC_OnBecomeLastSurvivor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_NotifyBecomingLastSurvivor
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ROS_NotifyBecomingLastSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_NotifyBecomingLastSurvivor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.NotifyBecomingLastSurvivor_Local
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::NotifyBecomingLastSurvivor_Local()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "NotifyBecomingLastSurvivor_Local");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnGainSupportSkillServer
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnGainSupportSkillServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnGainSupportSkillServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_GainSupportSkill
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ROS_GainSupportSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ROS_GainSupportSkill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnAreaDamageDisabled
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnAreaDamageDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnAreaDamageDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPassiveDisabled
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnPassiveDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnPassiveDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnDamageDisabled
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnDamageDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnDamageDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DamageOverlapped
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPenetrating                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGameplayTag                     FactorTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::DamageOverlapped(class AActor* DamageCauser, const struct FVector& HitLocation, bool bPenetrating, const struct FGameplayTag& FactorTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "DamageOverlapped");

	Params::BP_AJBInGameCharacter_C_DamageOverlapped Parms{};

	Parms.DamageCauser = DamageCauser;
	Parms.HitLocation = std::move(HitLocation);
	Parms.bPenetrating = bPenetrating;
	Parms.FactorTag = std::move(FactorTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnInteractionBlocked
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnInteractionBlocked(class AActor* InteractingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnInteractionBlocked");

	Params::BP_AJBInGameCharacter_C_OnInteractionBlocked Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSucceededLongPress_Local
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnSucceededLongPress_Local()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnSucceededLongPress_Local");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnROSInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ServerIsInteractingPlayer                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::OnROSInteract(class AActor* InteractingActor, bool ServerIsInteractingPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnROSInteract");

	Params::BP_AJBInGameCharacter_C_OnROSInteract Parms{};

	Parms.InteractingActor = InteractingActor;
	Parms.ServerIsInteractingPlayer = ServerIsInteractingPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnInteract(class AActor* InteractActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnInteract");

	Params::BP_AJBInGameCharacter_C_OnInteract Parms{};

	Parms.InteractActor = InteractActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnCompleted_1D2006934D73B15E9387FCA5BFB6EE14
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnCompleted_1D2006934D73B15E9387FCA5BFB6EE14(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnCompleted_1D2006934D73B15E9387FCA5BFB6EE14");

	Params::BP_AJBInGameCharacter_C_OnCompleted_1D2006934D73B15E9387FCA5BFB6EE14 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnBlendOut_1D2006934D73B15E9387FCA5BFB6EE14
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnBlendOut_1D2006934D73B15E9387FCA5BFB6EE14(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnBlendOut_1D2006934D73B15E9387FCA5BFB6EE14");

	Params::BP_AJBInGameCharacter_C_OnBlendOut_1D2006934D73B15E9387FCA5BFB6EE14 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnInterrupted_1D2006934D73B15E9387FCA5BFB6EE14
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnInterrupted_1D2006934D73B15E9387FCA5BFB6EE14(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnInterrupted_1D2006934D73B15E9387FCA5BFB6EE14");

	Params::BP_AJBInGameCharacter_C_OnInterrupted_1D2006934D73B15E9387FCA5BFB6EE14 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnNotifyBegin_1D2006934D73B15E9387FCA5BFB6EE14
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnNotifyBegin_1D2006934D73B15E9387FCA5BFB6EE14(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnNotifyBegin_1D2006934D73B15E9387FCA5BFB6EE14");

	Params::BP_AJBInGameCharacter_C_OnNotifyBegin_1D2006934D73B15E9387FCA5BFB6EE14 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnNotifyEnd_1D2006934D73B15E9387FCA5BFB6EE14
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnNotifyEnd_1D2006934D73B15E9387FCA5BFB6EE14(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnNotifyEnd_1D2006934D73B15E9387FCA5BFB6EE14");

	Params::BP_AJBInGameCharacter_C_OnNotifyEnd_1D2006934D73B15E9387FCA5BFB6EE14 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnCompleted_7329B9C84390F493C487659A2D910B3A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnCompleted_7329B9C84390F493C487659A2D910B3A(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnCompleted_7329B9C84390F493C487659A2D910B3A");

	Params::BP_AJBInGameCharacter_C_OnCompleted_7329B9C84390F493C487659A2D910B3A Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnBlendOut_7329B9C84390F493C487659A2D910B3A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnBlendOut_7329B9C84390F493C487659A2D910B3A(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnBlendOut_7329B9C84390F493C487659A2D910B3A");

	Params::BP_AJBInGameCharacter_C_OnBlendOut_7329B9C84390F493C487659A2D910B3A Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnInterrupted_7329B9C84390F493C487659A2D910B3A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnInterrupted_7329B9C84390F493C487659A2D910B3A(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnInterrupted_7329B9C84390F493C487659A2D910B3A");

	Params::BP_AJBInGameCharacter_C_OnInterrupted_7329B9C84390F493C487659A2D910B3A Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnNotifyBegin_7329B9C84390F493C487659A2D910B3A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnNotifyBegin_7329B9C84390F493C487659A2D910B3A(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnNotifyBegin_7329B9C84390F493C487659A2D910B3A");

	Params::BP_AJBInGameCharacter_C_OnNotifyBegin_7329B9C84390F493C487659A2D910B3A Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnNotifyEnd_7329B9C84390F493C487659A2D910B3A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnNotifyEnd_7329B9C84390F493C487659A2D910B3A(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnNotifyEnd_7329B9C84390F493C487659A2D910B3A");

	Params::BP_AJBInGameCharacter_C_OnNotifyEnd_7329B9C84390F493C487659A2D910B3A Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnCompleted_2A9A5691450DFC31DE5258B519FF6217
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnCompleted_2A9A5691450DFC31DE5258B519FF6217(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnCompleted_2A9A5691450DFC31DE5258B519FF6217");

	Params::BP_AJBInGameCharacter_C_OnCompleted_2A9A5691450DFC31DE5258B519FF6217 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnBlendOut_2A9A5691450DFC31DE5258B519FF6217
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnBlendOut_2A9A5691450DFC31DE5258B519FF6217(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnBlendOut_2A9A5691450DFC31DE5258B519FF6217");

	Params::BP_AJBInGameCharacter_C_OnBlendOut_2A9A5691450DFC31DE5258B519FF6217 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnInterrupted_2A9A5691450DFC31DE5258B519FF6217
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnInterrupted_2A9A5691450DFC31DE5258B519FF6217(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnInterrupted_2A9A5691450DFC31DE5258B519FF6217");

	Params::BP_AJBInGameCharacter_C_OnInterrupted_2A9A5691450DFC31DE5258B519FF6217 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnNotifyBegin_2A9A5691450DFC31DE5258B519FF6217
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnNotifyBegin_2A9A5691450DFC31DE5258B519FF6217(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnNotifyBegin_2A9A5691450DFC31DE5258B519FF6217");

	Params::BP_AJBInGameCharacter_C_OnNotifyBegin_2A9A5691450DFC31DE5258B519FF6217 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnNotifyEnd_2A9A5691450DFC31DE5258B519FF6217
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnNotifyEnd_2A9A5691450DFC31DE5258B519FF6217(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnNotifyEnd_2A9A5691450DFC31DE5258B519FF6217");

	Params::BP_AJBInGameCharacter_C_OnNotifyEnd_2A9A5691450DFC31DE5258B519FF6217 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnLoaded_F42AA0D940D51C3CD3F14D913272DE1D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnLoaded_F42AA0D940D51C3CD3F14D913272DE1D(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnLoaded_F42AA0D940D51C3CD3F14D913272DE1D");

	Params::BP_AJBInGameCharacter_C_OnLoaded_F42AA0D940D51C3CD3F14D913272DE1D Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnLoaded_9A53E0754B58E302E51B8792625D1F8A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnLoaded_9A53E0754B58E302E51B8792625D1F8A(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnLoaded_9A53E0754B58E302E51B8792625D1F8A");

	Params::BP_AJBInGameCharacter_C_OnLoaded_9A53E0754B58E302E51B8792625D1F8A Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnCompleted_0180EE26470F48C6FDC74BAC6CC6BFDB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnCompleted_0180EE26470F48C6FDC74BAC6CC6BFDB(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnCompleted_0180EE26470F48C6FDC74BAC6CC6BFDB");

	Params::BP_AJBInGameCharacter_C_OnCompleted_0180EE26470F48C6FDC74BAC6CC6BFDB Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnBlendOut_0180EE26470F48C6FDC74BAC6CC6BFDB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnBlendOut_0180EE26470F48C6FDC74BAC6CC6BFDB(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnBlendOut_0180EE26470F48C6FDC74BAC6CC6BFDB");

	Params::BP_AJBInGameCharacter_C_OnBlendOut_0180EE26470F48C6FDC74BAC6CC6BFDB Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnInterrupted_0180EE26470F48C6FDC74BAC6CC6BFDB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnInterrupted_0180EE26470F48C6FDC74BAC6CC6BFDB(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnInterrupted_0180EE26470F48C6FDC74BAC6CC6BFDB");

	Params::BP_AJBInGameCharacter_C_OnInterrupted_0180EE26470F48C6FDC74BAC6CC6BFDB Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnNotifyBegin_0180EE26470F48C6FDC74BAC6CC6BFDB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnNotifyBegin_0180EE26470F48C6FDC74BAC6CC6BFDB(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnNotifyBegin_0180EE26470F48C6FDC74BAC6CC6BFDB");

	Params::BP_AJBInGameCharacter_C_OnNotifyBegin_0180EE26470F48C6FDC74BAC6CC6BFDB Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnNotifyEnd_0180EE26470F48C6FDC74BAC6CC6BFDB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnNotifyEnd_0180EE26470F48C6FDC74BAC6CC6BFDB(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnNotifyEnd_0180EE26470F48C6FDC74BAC6CC6BFDB");

	Params::BP_AJBInGameCharacter_C_OnNotifyEnd_0180EE26470F48C6FDC74BAC6CC6BFDB Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnLoaded_9A53E0754B58E302E51B8792F24504BA
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnLoaded_9A53E0754B58E302E51B8792F24504BA(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnLoaded_9A53E0754B58E302E51B8792F24504BA");

	Params::BP_AJBInGameCharacter_C_OnLoaded_9A53E0754B58E302E51B8792F24504BA Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnLoaded_F42AA0D940D51C3CD3F14D91042170F3
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnLoaded_F42AA0D940D51C3CD3F14D91042170F3(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnLoaded_F42AA0D940D51C3CD3F14D91042170F3");

	Params::BP_AJBInGameCharacter_C_OnLoaded_F42AA0D940D51C3CD3F14D91042170F3 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.InitializeStatus
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::InitializeStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "InitializeStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeCameraType
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ChangeCameraType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeCameraType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateCameraParam
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::UpdateCameraParam(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UpdateCameraParam");

	Params::BP_AJBInGameCharacter_C_UpdateCameraParam Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.Heal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   HealLimit                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   HealValue                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::Heal(int32 Value, int32 HealLimit, bool* bSuccess, int32* HealValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "Heal");

	Params::BP_AJBInGameCharacter_C_Heal Parms{};

	Parms.Value = Value;
	Parms.HealLimit = HealLimit;

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (HealValue != nullptr)
		*HealValue = Parms.HealValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.AddSP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::AddSP(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "AddSP");

	Params::BP_AJBInGameCharacter_C_AddSP Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UseSP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::UseSP(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UseSP");

	Params::BP_AJBInGameCharacter_C_UseSP Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateMP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::UpdateMP(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UpdateMP");

	Params::BP_AJBInGameCharacter_C_UpdateMP Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsSatisfiedMP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ConsumptionMP                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSatisfied                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::IsSatisfiedMP(float ConsumptionMP, bool* IsSatisfied)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IsSatisfiedMP");

	Params::BP_AJBInGameCharacter_C_IsSatisfiedMP Parms{};

	Parms.ConsumptionMP = ConsumptionMP;

	UObject::ProcessEvent(Func, &Parms);

	if (IsSatisfied != nullptr)
		*IsSatisfied = Parms.IsSatisfied;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UseMP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ConsumptionMP                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::UseMP(float ConsumptionMP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UseMP");

	Params::BP_AJBInGameCharacter_C_UseMP Parms{};

	Parms.ConsumptionMP = ConsumptionMP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsRemainMP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsRemain                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::IsRemainMP(bool* IsRemain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IsRemainMP");

	Params::BP_AJBInGameCharacter_C_IsRemainMP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsRemain != nullptr)
		*IsRemain = Parms.IsRemain;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DebugAutoFullMP_On
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::DebugAutoFullMP_On()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "DebugAutoFullMP_On");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DebugAutoFullMP_Off
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::DebugAutoFullMP_Off()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "DebugAutoFullMP_Off");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetCapsuleHalfHeight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   CapsuleHalfHeight                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetCapsuleHalfHeight(float* CapsuleHalfHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetCapsuleHalfHeight");

	Params::BP_AJBInGameCharacter_C_GetCapsuleHalfHeight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CapsuleHalfHeight != nullptr)
		*CapsuleHalfHeight = Parms.CapsuleHalfHeight;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetCapsuleRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   CapsuleRadius                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetCapsuleRadius(float* CapsuleRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetCapsuleRadius");

	Params::BP_AJBInGameCharacter_C_GetCapsuleRadius Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CapsuleRadius != nullptr)
		*CapsuleRadius = Parms.CapsuleRadius;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.FindTraceLocationsFromCamera
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TraceDistance                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TraceStartLocation                                     (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TraceEndLocation                                       (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::FindTraceLocationsFromCamera(float TraceDistance, struct FVector* TraceStartLocation, struct FVector* TraceEndLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "FindTraceLocationsFromCamera");

	Params::BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera Parms{};

	Parms.TraceDistance = TraceDistance;

	UObject::ProcessEvent(Func, &Parms);

	if (TraceStartLocation != nullptr)
		*TraceStartLocation = std::move(Parms.TraceStartLocation);

	if (TraceEndLocation != nullptr)
		*TraceEndLocation = std::move(Parms.TraceEndLocation);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeInputEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ChangeInputEnable(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeInputEnable");

	Params::BP_AJBInGameCharacter_C_ChangeInputEnable Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsAlive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bIncludeGoingToRessurect                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIncludeCriticalness                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsAlive_0                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::IsAlive(bool bIncludeGoingToRessurect, bool bIncludeCriticalness, bool* IsAlive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IsAlive");

	Params::BP_AJBInGameCharacter_C_IsAlive Parms{};

	Parms.bIncludeGoingToRessurect = bIncludeGoingToRessurect;
	Parms.bIncludeCriticalness = bIncludeCriticalness;

	UObject::ProcessEvent(Func, &Parms);

	if (IsAlive_0 != nullptr)
		*IsAlive_0 = Parms.IsAlive_0;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckEnableInput
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    InputEnable                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckEnableInput(bool* InputEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckEnableInput");

	Params::BP_AJBInGameCharacter_C_CheckEnableInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InputEnable != nullptr)
		*InputEnable = Parms.InputEnable;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetCharacterCollisionEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECollisionEnabled                       CollisionEnabled                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::SetCharacterCollisionEnabled(ECollisionEnabled CollisionEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SetCharacterCollisionEnabled");

	Params::BP_AJBInGameCharacter_C_SetCharacterCollisionEnabled Parms{};

	Parms.CollisionEnabled = CollisionEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckAnySkillActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           IgnoreSkillClass                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIncludeReady                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIncludePreview                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsActive                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckAnySkillActive(class UClass* IgnoreSkillClass, bool bIncludeReady, bool bIncludePreview, bool* IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckAnySkillActive");

	Params::BP_AJBInGameCharacter_C_CheckAnySkillActive Parms{};

	Parms.IgnoreSkillClass = IgnoreSkillClass;
	Parms.bIncludeReady = bIncludeReady;
	Parms.bIncludePreview = bIncludePreview;

	UObject::ProcessEvent(Func, &Parms);

	if (IsActive != nullptr)
		*IsActive = Parms.IsActive;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcMaxSP
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   MaxSP                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::CalcMaxSP(int32* MaxSP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CalcMaxSP");

	Params::BP_AJBInGameCharacter_C_CalcMaxSP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaxSP != nullptr)
		*MaxSP = Parms.MaxSP;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetGrowupParam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FST_GrowupInfo_Processed         GrowupParam_0                                          (Parm, OutParm, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetGrowupParam(struct FST_GrowupInfo_Processed* GrowupParam_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetGrowupParam");

	Params::BP_AJBInGameCharacter_C_GetGrowupParam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GrowupParam_0 != nullptr)
		*GrowupParam_0 = std::move(Parms.GrowupParam_0);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetAchievedGrowup
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   CurrentSP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     Growup                                                 (Parm, OutParm, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetAchievedGrowup(int32 CurrentSP, struct FGameplayTag* Growup, float* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetAchievedGrowup");

	Params::BP_AJBInGameCharacter_C_GetAchievedGrowup Parms{};

	Parms.CurrentSP = CurrentSP;

	UObject::ProcessEvent(Func, &Parms);

	if (Growup != nullptr)
		*Growup = std::move(Parms.Growup);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ConsumeGrowup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Growup                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ConsumeGrowup(const struct FGameplayTag& Growup, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ConsumeGrowup");

	Params::BP_AJBInGameCharacter_C_ConsumeGrowup Parms{};

	Parms.Growup = std::move(Growup);
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetDefaultMaxSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_AJBInGameCharacter_C::GetDefaultMaxSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetDefaultMaxSpeed");

	Params::BP_AJBInGameCharacter_C_GetDefaultMaxSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterDamage(Server)
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DamageForHPAP                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DamageForAAP                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AttackDistance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WithSeparatedStandAttack                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    HitEnemysSeparatedStand                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bPenetrateAP                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   EffectiveDamage                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECharacterBehavior                      CharacterBehavior                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDamageIsCutByAAP                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   BeforeAAP                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AfterAAP                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::CharacterDamage_Server_(int32 DamageForHPAP, int32 DamageForAAP, class AActor* DamageCauser, const struct FGameplayTag& DamageType, int32 SerialNumber, float AttackDistance, bool WithSeparatedStandAttack, bool HitEnemysSeparatedStand, bool bPenetrateAP, int32* EffectiveDamage, ECharacterBehavior* CharacterBehavior, bool* bDamageIsCutByAAP, int32* BeforeAAP, int32* AfterAAP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CharacterDamage(Server)");

	Params::BP_AJBInGameCharacter_C_CharacterDamage_Server_ Parms{};

	Parms.DamageForHPAP = DamageForHPAP;
	Parms.DamageForAAP = DamageForAAP;
	Parms.DamageCauser = DamageCauser;
	Parms.DamageType = std::move(DamageType);
	Parms.SerialNumber = SerialNumber;
	Parms.AttackDistance = AttackDistance;
	Parms.WithSeparatedStandAttack = WithSeparatedStandAttack;
	Parms.HitEnemysSeparatedStand = HitEnemysSeparatedStand;
	Parms.bPenetrateAP = bPenetrateAP;

	UObject::ProcessEvent(Func, &Parms);

	if (EffectiveDamage != nullptr)
		*EffectiveDamage = Parms.EffectiveDamage;

	if (CharacterBehavior != nullptr)
		*CharacterBehavior = Parms.CharacterBehavior;

	if (bDamageIsCutByAAP != nullptr)
		*bDamageIsCutByAAP = Parms.bDamageIsCutByAAP;

	if (BeforeAAP != nullptr)
		*BeforeAAP = Parms.BeforeAAP;

	if (AfterAAP != nullptr)
		*AfterAAP = Parms.AfterAAP;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ForceCancelSkills
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRequireStandSkillOnly                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class UClass*>                   IgnoreSkillClass                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ABP_AJBInGameCharacter_C::ForceCancelSkills(bool bRequireStandSkillOnly, TArray<class UClass*>& IgnoreSkillClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ForceCancelSkills");

	Params::BP_AJBInGameCharacter_C_ForceCancelSkills Parms{};

	Parms.bRequireStandSkillOnly = bRequireStandSkillOnly;
	Parms.IgnoreSkillClass = std::move(IgnoreSkillClass);

	UObject::ProcessEvent(Func, &Parms);

	IgnoreSkillClass = std::move(Parms.IgnoreSkillClass);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsRemainHP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PenetrateAP                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsRemain                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::IsRemainHP(int32 Damage, bool PenetrateAP, bool* IsRemain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IsRemainHP");

	Params::BP_AJBInGameCharacter_C_IsRemainHP Parms{};

	Parms.Damage = Damage;
	Parms.PenetrateAP = PenetrateAP;

	UObject::ProcessEvent(Func, &Parms);

	if (IsRemain != nullptr)
		*IsRemain = Parms.IsRemain;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckSkillActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           SkillClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIncludeReady                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIncludePreview                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsActive                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckSkillActive(class UClass* SkillClass, bool bIncludeReady, bool bIncludePreview, bool* IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckSkillActive");

	Params::BP_AJBInGameCharacter_C_CheckSkillActive Parms{};

	Parms.SkillClass = SkillClass;
	Parms.bIncludeReady = bIncludeReady;
	Parms.bIncludePreview = bIncludePreview;

	UObject::ProcessEvent(Func, &Parms);

	if (IsActive != nullptr)
		*IsActive = Parms.IsActive;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SystemEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::SystemEnable(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SystemEnable");

	Params::BP_AJBInGameCharacter_C_SystemEnable Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeEnableSpringArm
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ChangeEnableSpringArm(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeEnableSpringArm");

	Params::BP_AJBInGameCharacter_C_ChangeEnableSpringArm Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.BeginCondition
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Causer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bTriggeredByStand                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGameplayTag                     CauserType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::BeginCondition(const struct FGameplayTag& Condition, class UObject* Causer, bool bTriggeredByStand, const struct FGameplayTag& CauserType, int32 SerialNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "BeginCondition");

	Params::BP_AJBInGameCharacter_C_BeginCondition Parms{};

	Parms.Condition = std::move(Condition);
	Parms.Causer = Causer;
	Parms.bTriggeredByStand = bTriggeredByStand;
	Parms.CauserType = std::move(CauserType);
	Parms.SerialNumber = SerialNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.EndCondition
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::EndCondition(const struct FGameplayTag& Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "EndCondition");

	Params::BP_AJBInGameCharacter_C_EndCondition Parms{};

	Parms.Condition = std::move(Condition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateMovement
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::UpdateMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UpdateMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetMaxMoveSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   MaxSpeed                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetMaxMoveSpeed(float* MaxSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetMaxMoveSpeed");

	Params::BP_AJBInGameCharacter_C_GetMaxMoveSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaxSpeed != nullptr)
		*MaxSpeed = Parms.MaxSpeed;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckRunInput
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bRunInput                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckRunInput(bool* bRunInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckRunInput");

	Params::BP_AJBInGameCharacter_C_CheckRunInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bRunInput != nullptr)
		*bRunInput = Parms.bRunInput;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CanWalk
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bIsWalk                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CanWalk(bool* bIsWalk)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CanWalk");

	Params::BP_AJBInGameCharacter_C_CanWalk Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsWalk != nullptr)
		*bIsWalk = Parms.bIsWalk;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateMaxSpeed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::UpdateMaxSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UpdateMaxSpeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ResetCameraType
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ResetCameraType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ResetCameraType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcCameraParam
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FST_CameraParam>          InParams                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FST_CameraParam                  ResultParam                                            (Parm, OutParm, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::CalcCameraParam(TArray<struct FST_CameraParam>& InParams, struct FST_CameraParam* ResultParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CalcCameraParam");

	Params::BP_AJBInGameCharacter_C_CalcCameraParam Parms{};

	Parms.InParams = std::move(InParams);

	UObject::ProcessEvent(Func, &Parms);

	InParams = std::move(Parms.InParams);

	if (ResultParam != nullptr)
		*ResultParam = std::move(Parms.ResultParam);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcCameraOffset
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FST_CameraParam>          InParams                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FVector                          CameraOffset                                           (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::CalcCameraOffset(TArray<struct FST_CameraParam>& InParams, struct FVector* CameraOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CalcCameraOffset");

	Params::BP_AJBInGameCharacter_C_CalcCameraOffset Parms{};

	Parms.InParams = std::move(InParams);

	UObject::ProcessEvent(Func, &Parms);

	InParams = std::move(Parms.InParams);

	if (CameraOffset != nullptr)
		*CameraOffset = std::move(Parms.CameraOffset);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcCameraTargetLength
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FST_CameraParam>          InParams                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float                                   CameraLength                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::CalcCameraTargetLength(TArray<struct FST_CameraParam>& InParams, float* CameraLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CalcCameraTargetLength");

	Params::BP_AJBInGameCharacter_C_CalcCameraTargetLength Parms{};

	Parms.InParams = std::move(InParams);

	UObject::ProcessEvent(Func, &Parms);

	InParams = std::move(Parms.InParams);

	if (CameraLength != nullptr)
		*CameraLength = Parms.CameraLength;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcCameraInterpSpeed
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FST_CameraParam>          InParams                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float                                   CameraInterpSpeed                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::CalcCameraInterpSpeed(TArray<struct FST_CameraParam>& InParams, float* CameraInterpSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CalcCameraInterpSpeed");

	Params::BP_AJBInGameCharacter_C_CalcCameraInterpSpeed Parms{};

	Parms.InParams = std::move(InParams);

	UObject::ProcessEvent(Func, &Parms);

	InParams = std::move(Parms.InParams);

	if (CameraInterpSpeed != nullptr)
		*CameraInterpSpeed = Parms.CameraInterpSpeed;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DebugPrintCameraParam
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::DebugPrintCameraParam(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "DebugPrintCameraParam");

	Params::BP_AJBInGameCharacter_C_DebugPrintCameraParam Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SkillActivated
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBSkillBase_C*               ActivatedSkill                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::SkillActivated(class UBP_AJBSkillBase_C* ActivatedSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SkillActivated");

	Params::BP_AJBInGameCharacter_C_SkillActivated Parms{};

	Parms.ActivatedSkill = ActivatedSkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SkillInactivated
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBSkillBase_C*               InactivatedSkill                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::SkillInactivated(class UBP_AJBSkillBase_C* InactivatedSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SkillInactivated");

	Params::BP_AJBInGameCharacter_C_SkillInactivated Parms{};

	Parms.InactivatedSkill = InactivatedSkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetBasicSkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBP_AJBSkillBase_C*               BasicSkill                                             (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetBasicSkill(class UBP_AJBSkillBase_C** BasicSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetBasicSkill");

	Params::BP_AJBInGameCharacter_C_GetBasicSkill Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BasicSkill != nullptr)
		*BasicSkill = Parms.BasicSkill;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeViewMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bResetInputValue                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGameplayTag                     FactorTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ChangeViewMode(bool bEnable, bool bResetInputValue, const struct FGameplayTag& FactorTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeViewMode");

	Params::BP_AJBInGameCharacter_C_ChangeViewMode Parms{};

	Parms.bEnable = bEnable;
	Parms.bResetInputValue = bResetInputValue;
	Parms.FactorTag = std::move(FactorTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckEnableInputCameraOnly
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bReturnValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckEnableInputCameraOnly(bool* bReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckEnableInputCameraOnly");

	Params::BP_AJBInGameCharacter_C_CheckEnableInputCameraOnly Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bReturnValue != nullptr)
		*bReturnValue = Parms.bReturnValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeActiveBehavior
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharacterActiveBehavior                NextBehavior                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     FactorTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bMainCharacter                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ChangeActiveBehavior(ECharacterActiveBehavior NextBehavior, const struct FGameplayTag& FactorTag, bool bMainCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeActiveBehavior");

	Params::BP_AJBInGameCharacter_C_ChangeActiveBehavior Parms{};

	Parms.NextBehavior = NextBehavior;
	Parms.FactorTag = std::move(FactorTag);
	Parms.bMainCharacter = bMainCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ActiveBehaviorChanged
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAJBCharacterActiveBehaviorInfo  BehaviorInfo                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_AJBInGameCharacter_C::ActiveBehaviorChanged(const struct FAJBCharacterActiveBehaviorInfo& BehaviorInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ActiveBehaviorChanged");

	Params::BP_AJBInGameCharacter_C_ActiveBehaviorChanged Parms{};

	Parms.BehaviorInfo = std::move(BehaviorInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.StopMontage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InBlendOutTime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     Montage                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::StopMontage(float InBlendOutTime, const class UAnimMontage* Montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "StopMontage");

	Params::BP_AJBInGameCharacter_C_StopMontage Parms{};

	Parms.InBlendOutTime = InBlendOutTime;
	Parms.Montage = Montage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetCameraLookupSpeedScale
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   LookUpScale                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::SetCameraLookupSpeedScale(float LookUpScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SetCameraLookupSpeedScale");

	Params::BP_AJBInGameCharacter_C_SetCameraLookupSpeedScale Parms{};

	Parms.LookUpScale = LookUpScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckAnyActiveSkillActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           IgnoreSkillClass                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIncludeReady                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bActive                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckAnyActiveSkillActive(class UClass* IgnoreSkillClass, bool bIncludeReady, bool* bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckAnyActiveSkillActive");

	Params::BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive Parms{};

	Parms.IgnoreSkillClass = IgnoreSkillClass;
	Parms.bIncludeReady = bIncludeReady;

	UObject::ProcessEvent(Func, &Parms);

	if (bActive != nullptr)
		*bActive = Parms.bActive;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckActiveBehavior
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ECharacterActiveBehavior                Behavior                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRetValue                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckActiveBehavior(ECharacterActiveBehavior Behavior, bool* bRetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckActiveBehavior");

	Params::BP_AJBInGameCharacter_C_CheckActiveBehavior Parms{};

	Parms.Behavior = Behavior;

	UObject::ProcessEvent(Func, &Parms);

	if (bRetValue != nullptr)
		*bRetValue = Parms.bRetValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryCancelEmote
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bForce                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::TryCancelEmote(bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "TryCancelEmote");

	Params::BP_AJBInGameCharacter_C_TryCancelEmote Parms{};

	Parms.bForce = bForce;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ForceInactiveBasicSkill
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ForceInactiveBasicSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ForceInactiveBasicSkill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetSystemEnable
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bCollision                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bGravity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSpringArm                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bMovement                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::SetSystemEnable(bool bEnable, bool bCollision, bool bGravity, bool bSpringArm, bool bMovement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SetSystemEnable");

	Params::BP_AJBInGameCharacter_C_SetSystemEnable Parms{};

	Parms.bEnable = bEnable;
	Parms.bCollision = bCollision;
	Parms.bGravity = bGravity;
	Parms.bSpringArm = bSpringArm;
	Parms.bMovement = bMovement;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ResetSystemEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRestore                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ResetSystemEnable(bool bRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ResetSystemEnable");

	Params::BP_AJBInGameCharacter_C_ResetSystemEnable Parms{};

	Parms.bRestore = bRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeSystemEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCollision                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bGravity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSpringArm                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bMovement                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bRestore                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ChangeSystemEnable(bool bCollision, bool bGravity, bool bSpringArm, bool bMovement, bool bRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeSystemEnable");

	Params::BP_AJBInGameCharacter_C_ChangeSystemEnable Parms{};

	Parms.bCollision = bCollision;
	Parms.bGravity = bGravity;
	Parms.bSpringArm = bSpringArm;
	Parms.bMovement = bMovement;
	Parms.bRestore = bRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeSystemDisable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCollision                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bGravity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSpringArm                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bMovement                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bRestore                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ChangeSystemDisable(bool bCollision, bool bGravity, bool bSpringArm, bool bMovement, bool bRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeSystemDisable");

	Params::BP_AJBInGameCharacter_C_ChangeSystemDisable Parms{};

	Parms.bCollision = bCollision;
	Parms.bGravity = bGravity;
	Parms.bSpringArm = bSpringArm;
	Parms.bMovement = bMovement;
	Parms.bRestore = bRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CancelPosture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldInactiveBasicSkill                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CancelPosture(bool bShouldInactiveBasicSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CancelPosture");

	Params::BP_AJBInGameCharacter_C_CancelPosture Parms{};

	Parms.bShouldInactiveBasicSkill = bShouldInactiveBasicSkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.LowerSpread
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Spread                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   HealStopTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::LowerSpread(float Spread, float HealStopTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "LowerSpread");

	Params::BP_AJBInGameCharacter_C_LowerSpread Parms{};

	Parms.Spread = Spread;
	Parms.HealStopTime = HealStopTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RaiseSpread
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::RaiseSpread(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "RaiseSpread");

	Params::BP_AJBInGameCharacter_C_RaiseSpread Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateSpread
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::UpdateSpread(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UpdateSpread");

	Params::BP_AJBInGameCharacter_C_UpdateSpread Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeSpreadParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   SpreadMin_1080p_                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SpreadMax_1080p_                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   S__0                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ChangeSpreadParam(float SpreadMin_1080p_, float SpreadMax_1080p_, float S__0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeSpreadParam");

	Params::BP_AJBInGameCharacter_C_ChangeSpreadParam Parms{};

	Parms.SpreadMin_1080p_ = SpreadMin_1080p_;
	Parms.SpreadMax_1080p_ = SpreadMax_1080p_;
	Parms.S__0 = S__0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ResetSpreadParam
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ResetSpreadParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ResetSpreadParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsAim
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bAim                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::IsAim(bool* bAim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IsAim");

	Params::BP_AJBInGameCharacter_C_IsAim Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAim != nullptr)
		*bAim = Parms.bAim;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeJumpEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ChangeJumpEnable(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeJumpEnable");

	Params::BP_AJBInGameCharacter_C_ChangeJumpEnable Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeSprintEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ChangeSprintEnable(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeSprintEnable");

	Params::BP_AJBInGameCharacter_C_ChangeSprintEnable Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetMaxCrouchedSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   MaxCrouchedSpeed                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetMaxCrouchedSpeed(float* MaxCrouchedSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetMaxCrouchedSpeed");

	Params::BP_AJBInGameCharacter_C_GetMaxCrouchedSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaxCrouchedSpeed != nullptr)
		*MaxCrouchedSpeed = Parms.MaxCrouchedSpeed;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.PredictionAttackHit
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bHit                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::PredictionAttackHit(bool* bHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "PredictionAttackHit");

	Params::BP_AJBInGameCharacter_C_PredictionAttackHit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bHit != nullptr)
		*bHit = Parms.bHit;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ConsumeDamage
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DamageForHPAP                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DamageForAAP                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHitEnemysSeparatedStand                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bPenetrateAP                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   EffectiveDamage                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDamageIsCutByAAP                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   BeforeAAP                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AfterAAP                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ConsumeDamage(int32 DamageForHPAP, int32 DamageForAAP, bool bHitEnemysSeparatedStand, bool bPenetrateAP, int32* EffectiveDamage, bool* bDamageIsCutByAAP, int32* BeforeAAP, int32* AfterAAP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ConsumeDamage");

	Params::BP_AJBInGameCharacter_C_ConsumeDamage Parms{};

	Parms.DamageForHPAP = DamageForHPAP;
	Parms.DamageForAAP = DamageForAAP;
	Parms.bHitEnemysSeparatedStand = bHitEnemysSeparatedStand;
	Parms.bPenetrateAP = bPenetrateAP;

	UObject::ProcessEvent(Func, &Parms);

	if (EffectiveDamage != nullptr)
		*EffectiveDamage = Parms.EffectiveDamage;

	if (bDamageIsCutByAAP != nullptr)
		*bDamageIsCutByAAP = Parms.bDamageIsCutByAAP;

	if (BeforeAAP != nullptr)
		*BeforeAAP = Parms.BeforeAAP;

	if (AfterAAP != nullptr)
		*AfterAAP = Parms.AfterAAP;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.AddAP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::AddAP(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "AddAP");

	Params::BP_AJBInGameCharacter_C_AddAP Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckLeftAP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bLeftAP                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckLeftAP(bool* bLeftAP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckLeftAP");

	Params::BP_AJBInGameCharacter_C_CheckLeftAP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bLeftAP != nullptr)
		*bLeftAP = Parms.bLeftAP;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetupActionSkillInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::SetupActionSkillInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SetupActionSkillInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPassiveSkillDeactivated
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  PassiveSkill                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnPassiveSkillDeactivated(class UActorComponent* PassiveSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnPassiveSkillDeactivated");

	Params::BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated Parms{};

	Parms.PassiveSkill = PassiveSkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryGenerateActionSkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           ActionSkillClass                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_AJBActionBase_C*              ActionSkill                                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::TryGenerateActionSkill(class UClass* ActionSkillClass, class UBP_AJBActionBase_C** ActionSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "TryGenerateActionSkill");

	Params::BP_AJBInGameCharacter_C_TryGenerateActionSkill Parms{};

	Parms.ActionSkillClass = ActionSkillClass;

	UObject::ProcessEvent(Func, &Parms);

	if (ActionSkill != nullptr)
		*ActionSkill = Parms.ActionSkill;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DebugPrintPassiveSkillNum
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::DebugPrintPassiveSkillNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "DebugPrintPassiveSkillNum");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeMovementMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ChangeMovementMode(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeMovementMode");

	Params::BP_AJBInGameCharacter_C_ChangeMovementMode Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DebugForceFireSkill_On
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::DebugForceFireSkill_On()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "DebugForceFireSkill_On");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DebugForceFireSkill_Off
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::DebugForceFireSkill_Off()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "DebugForceFireSkill_Off");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckForceFireSkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bForceFireSkill_0                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckForceFireSkill(bool* bForceFireSkill_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckForceFireSkill");

	Params::BP_AJBInGameCharacter_C_CheckForceFireSkill Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bForceFireSkill_0 != nullptr)
		*bForceFireSkill_0 = Parms.bForceFireSkill_0;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckSmallSized
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSmallSized                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckSmallSized(bool* bSmallSized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckSmallSized");

	Params::BP_AJBInGameCharacter_C_CheckSmallSized Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bSmallSized != nullptr)
		*bSmallSized = Parms.bSmallSized;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetupSharedController
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::SetupSharedController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SetupSharedController");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetPoliticStandAsActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetPoliticStandAsActor(class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetPoliticStandAsActor");

	Params::BP_AJBInGameCharacter_C_GetPoliticStandAsActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckStandSeparation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bIncludeTransition                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSeparation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckStandSeparation(bool bIncludeTransition, bool* bSeparation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckStandSeparation");

	Params::BP_AJBInGameCharacter_C_CheckStandSeparation Parms{};

	Parms.bIncludeTransition = bIncludeTransition;

	UObject::ProcessEvent(Func, &Parms);

	if (bSeparation != nullptr)
		*bSeparation = Parms.bSeparation;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RemoveConditions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            Exceptions                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_AJBInGameCharacter_C::RemoveConditions(const struct FGameplayTagContainer& Exceptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "RemoveConditions");

	Params::BP_AJBInGameCharacter_C_RemoveConditions Parms{};

	Parms.Exceptions = std::move(Exceptions);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeCameraBehavior
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnableOnlyCameraInput                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bUseControllerRotationYaw_0                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGameplayTag                     FactorTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ChangeCameraBehavior(bool bEnableOnlyCameraInput, bool bUseControllerRotationYaw_0, const struct FGameplayTag& FactorTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeCameraBehavior");

	Params::BP_AJBInGameCharacter_C_ChangeCameraBehavior Parms{};

	Parms.bEnableOnlyCameraInput = bEnableOnlyCameraInput;
	Parms.bUseControllerRotationYaw_0 = bUseControllerRotationYaw_0;
	Parms.FactorTag = std::move(FactorTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TrySetNextLandingStopTime(Sec)
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time_Sec_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_AJBInGameCharacter_C::TrySetNextLandingStopTime_Sec_(float Time_Sec_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "TrySetNextLandingStopTime(Sec)");

	Params::BP_AJBInGameCharacter_C_TrySetNextLandingStopTime_Sec_ Parms{};

	Parms.Time_Sec_ = Time_Sec_;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckAnyCharacterMovementSkillActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bWithCharacterMovement                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckAnyCharacterMovementSkillActive(bool* bWithCharacterMovement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckAnyCharacterMovementSkillActive");

	Params::BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bWithCharacterMovement != nullptr)
		*bWithCharacterMovement = Parms.bWithCharacterMovement;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ResetMeshRelativeTransform
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ResetMeshRelativeTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ResetMeshRelativeTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeStatus
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldAddNewTag                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGameplayTag                     NewTag                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// float                                   NewFloatValue                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ChangeStatus(bool bShouldAddNewTag, const struct FGameplayTag& NewTag, float NewFloatValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeStatus");

	Params::BP_AJBInGameCharacter_C_ChangeStatus Parms{};

	Parms.bShouldAddNewTag = bShouldAddNewTag;
	Parms.NewTag = std::move(NewTag);
	Parms.NewFloatValue = NewFloatValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeJumpZVelocityWithRate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ChangeJumpZVelocityWithRate(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeJumpZVelocityWithRate");

	Params::BP_AJBInGameCharacter_C_ChangeJumpZVelocityWithRate Parms{};

	Parms.Rate = Rate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckAnyActiveSkillAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bFind                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckAnyActiveSkillAction(bool* bFind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckAnyActiveSkillAction");

	Params::BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bFind != nullptr)
		*bFind = Parms.bFind;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.JudgeIndoor
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::JudgeIndoor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "JudgeIndoor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DamageAffecterAreaIn
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         OperatorCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     EffectTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     SETag                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::DamageAffecterAreaIn(class ABP_AJBInGameCharacter_C* OperatorCharacter, const struct FGameplayTag& EffectTag, const struct FGameplayTag& SETag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "DamageAffecterAreaIn");

	Params::BP_AJBInGameCharacter_C_DamageAffecterAreaIn Parms{};

	Parms.OperatorCharacter = OperatorCharacter;
	Parms.EffectTag = std::move(EffectTag);
	Parms.SETag = std::move(SETag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DamageAffecterAreaOut
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         OperatorCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     EffectTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     SETag                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::DamageAffecterAreaOut(class ABP_AJBInGameCharacter_C* OperatorCharacter, const struct FGameplayTag& EffectTag, const struct FGameplayTag& SETag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "DamageAffecterAreaOut");

	Params::BP_AJBInGameCharacter_C_DamageAffecterAreaOut Parms{};

	Parms.OperatorCharacter = OperatorCharacter;
	Parms.EffectTag = std::move(EffectTag);
	Parms.SETag = std::move(SETag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckPossibleInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bPossibleInteract                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckPossibleInteract(bool* bPossibleInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckPossibleInteract");

	Params::BP_AJBInGameCharacter_C_CheckPossibleInteract Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPossibleInteract != nullptr)
		*bPossibleInteract = Parms.bPossibleInteract;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRep_Rep_HP
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnRep_Rep_HP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnRep_Rep_HP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckAnySkillInPreview
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           IgnoreSkillClass                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsActive                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckAnySkillInPreview(class UClass* IgnoreSkillClass, bool* IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckAnySkillInPreview");

	Params::BP_AJBInGameCharacter_C_CheckAnySkillInPreview Parms{};

	Parms.IgnoreSkillClass = IgnoreSkillClass;

	UObject::ProcessEvent(Func, &Parms);

	if (IsActive != nullptr)
		*IsActive = Parms.IsActive;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryGetSkillComponentByType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAJBSkillType                           SkillType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UBP_AJBSkillBase_C*               SkillComponet                                          (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::TryGetSkillComponentByType(EAJBSkillType SkillType, bool* bSuccess, class UBP_AJBSkillBase_C** SkillComponet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "TryGetSkillComponentByType");

	Params::BP_AJBInGameCharacter_C_TryGetSkillComponentByType Parms{};

	Parms.SkillType = SkillType;

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (SkillComponet != nullptr)
		*SkillComponet = Parms.SkillComponet;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsWatched
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bExcludesWatcherCameras                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_AJBInGameCharacter_C::IsWatched(bool bExcludesWatcherCameras)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IsWatched");

	Params::BP_AJBInGameCharacter_C_IsWatched Parms{};

	Parms.bExcludesWatcherCameras = bExcludesWatcherCameras;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryGetGrowupSkillSPByGrowupTag
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     GrowupSkillTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   SP                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::TryGetGrowupSkillSPByGrowupTag(struct FGameplayTag& GrowupSkillTag, bool* bSuccess, int32* SP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "TryGetGrowupSkillSPByGrowupTag");

	Params::BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag Parms{};

	Parms.GrowupSkillTag = std::move(GrowupSkillTag);

	UObject::ProcessEvent(Func, &Parms);

	GrowupSkillTag = std::move(Parms.GrowupSkillTag);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (SP != nullptr)
		*SP = Parms.SP;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.InitializeDamageAreaSound
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::InitializeDamageAreaSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "InitializeDamageAreaSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateDamageAreaSound
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::UpdateDamageAreaSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UpdateDamageAreaSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckPossibleShot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bPossibleShot_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckPossibleShot(bool* bPossibleShot_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckPossibleShot");

	Params::BP_AJBInGameCharacter_C_CheckPossibleShot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPossibleShot_0 != nullptr)
		*bPossibleShot_0 = Parms.bPossibleShot_0;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateShotPossibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::UpdateShotPossibility(float Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UpdateShotPossibility");

	Params::BP_AJBInGameCharacter_C_UpdateShotPossibility Parms{};

	Parms.Delta = Delta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsInvincibleDueForSystemReason
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bIsInvincible                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::IsInvincibleDueForSystemReason(bool* bIsInvincible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IsInvincibleDueForSystemReason");

	Params::BP_AJBInGameCharacter_C_IsInvincibleDueForSystemReason Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsInvincible != nullptr)
		*bIsInvincible = Parms.bIsInvincible;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateVisibilityByCameraDistance
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::UpdateVisibilityByCameraDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UpdateVisibilityByCameraDistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeEnableSimpleDeathCamera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ChangeEnableSimpleDeathCamera(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeEnableSimpleDeathCamera");

	Params::BP_AJBInGameCharacter_C_ChangeEnableSimpleDeathCamera Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRep_Rep_MP_ForSpectator
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnRep_Rep_MP_ForSpectator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnRep_Rep_MP_ForSpectator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsResurrectable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::IsResurrectable(bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IsResurrectable");

	Params::BP_AJBInGameCharacter_C_IsResurrectable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRep_(ForSkipOwner)WalkingState
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnRep__ForSkipOwner_WalkingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnRep_(ForSkipOwner)WalkingState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetWalkingStateOnServer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EWalkingState                           WalkingState_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::SetWalkingStateOnServer(EWalkingState WalkingState_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SetWalkingStateOnServer");

	Params::BP_AJBInGameCharacter_C_SetWalkingStateOnServer Parms{};

	Parms.WalkingState_0 = WalkingState_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryToSpeakVoice
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     VoiceTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// E_VoiceProcessType                      VoiceProcessType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSpeakEvenIfNotAlive                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSpeakEvenIfDuringTheWorld                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSpeakEvenIfNotLocalEnv                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bAlsoSpeakOnPairEnv                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIgnoreIfDuringTheWorld                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSpeakIfTheSameEventIsNotQueued                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bWillBeSpoken                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::TryToSpeakVoice(const struct FGameplayTag& VoiceTag, E_VoiceProcessType VoiceProcessType, bool bSpeakEvenIfNotAlive, bool bSpeakEvenIfDuringTheWorld, bool bSpeakEvenIfNotLocalEnv, bool bAlsoSpeakOnPairEnv, bool bIgnoreIfDuringTheWorld, bool bSpeakIfTheSameEventIsNotQueued, bool* bWillBeSpoken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "TryToSpeakVoice");

	Params::BP_AJBInGameCharacter_C_TryToSpeakVoice Parms{};

	Parms.VoiceTag = std::move(VoiceTag);
	Parms.VoiceProcessType = VoiceProcessType;
	Parms.bSpeakEvenIfNotAlive = bSpeakEvenIfNotAlive;
	Parms.bSpeakEvenIfDuringTheWorld = bSpeakEvenIfDuringTheWorld;
	Parms.bSpeakEvenIfNotLocalEnv = bSpeakEvenIfNotLocalEnv;
	Parms.bAlsoSpeakOnPairEnv = bAlsoSpeakOnPairEnv;
	Parms.bIgnoreIfDuringTheWorld = bIgnoreIfDuringTheWorld;
	Parms.bSpeakIfTheSameEventIsNotQueued = bSpeakIfTheSameEventIsNotQueued;

	UObject::ProcessEvent(Func, &Parms);

	if (bWillBeSpoken != nullptr)
		*bWillBeSpoken = Parms.bWillBeSpoken;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangePostProcessBlueprintEnable
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ChangePostProcessBlueprintEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangePostProcessBlueprintEnable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.InitializeCameraManager
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::InitializeCameraManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "InitializeCameraManager");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ReserveBreakVoice
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     VoiceEventTagToStop                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ReserveBreakVoice(const struct FGameplayTag& VoiceEventTagToStop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ReserveBreakVoice");

	Params::BP_AJBInGameCharacter_C_ReserveBreakVoice Parms{};

	Parms.VoiceEventTagToStop = std::move(VoiceEventTagToStop);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRep_(ForSkipOwner)MPMax
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnRep__ForSkipOwner_MPMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnRep_(ForSkipOwner)MPMax");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ForceInactivePassiveSkills_Server
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNegativeOnly                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ForceInactivePassiveSkills_Server(bool bNegativeOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ForceInactivePassiveSkills_Server");

	Params::BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server Parms{};

	Parms.bNegativeOnly = bNegativeOnly;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetFootLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetFootLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetFootLocation");

	Params::BP_AJBInGameCharacter_C_GetFootLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.AddMP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   RecoveryMP                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::AddMP(float RecoveryMP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "AddMP");

	Params::BP_AJBInGameCharacter_C_AddMP Parms{};

	Parms.RecoveryMP = RecoveryMP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcCuttingRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   CuttingsRate                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::CalcCuttingRate(float* CuttingsRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CalcCuttingRate");

	Params::BP_AJBInGameCharacter_C_CalcCuttingRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CuttingsRate != nullptr)
		*CuttingsRate = Parms.CuttingsRate;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GiveDamageFunction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// EDamagePriority                         DamagePriority                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CuttingRate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GiveDamageFunction(class AActor* DamagedActor, int32 Damage, const struct FGameplayTag& DamageType, EDamagePriority DamagePriority, float CuttingRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GiveDamageFunction");

	Params::BP_AJBInGameCharacter_C_GiveDamageFunction Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.DamageType = std::move(DamageType);
	Parms.DamagePriority = DamagePriority;
	Parms.CuttingRate = CuttingRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetCapsuleDiameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   CapsuleDiameter                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetCapsuleDiameter(float* CapsuleDiameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetCapsuleDiameter");

	Params::BP_AJBInGameCharacter_C_GetCapsuleDiameter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CapsuleDiameter != nullptr)
		*CapsuleDiameter = Parms.CapsuleDiameter;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeSealSkills
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ChangeSealSkills(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeSealSkills");

	Params::BP_AJBInGameCharacter_C_ChangeSealSkills Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckActiveBehaviorIsEmote
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bRetValue                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckActiveBehaviorIsEmote(bool* bRetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckActiveBehaviorIsEmote");

	Params::BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bRetValue != nullptr)
		*bRetValue = Parms.bRetValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcDamageRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   DamageRate                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::CalcDamageRate(float* DamageRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CalcDamageRate");

	Params::BP_AJBInGameCharacter_C_CalcDamageRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DamageRate != nullptr)
		*DamageRate = Parms.DamageRate;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsFullHP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   SpecifiedHPMax                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFullHP                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::IsFullHP(int32 SpecifiedHPMax, bool* bFullHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IsFullHP");

	Params::BP_AJBInGameCharacter_C_IsFullHP Parms{};

	Parms.SpecifiedHPMax = SpecifiedHPMax;

	UObject::ProcessEvent(Func, &Parms);

	if (bFullHP != nullptr)
		*bFullHP = Parms.bFullHP;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckActiveInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bActiveLongPressInteract                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckActiveInteract(bool* bActiveLongPressInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckActiveInteract");

	Params::BP_AJBInGameCharacter_C_CheckActiveInteract Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bActiveLongPressInteract != nullptr)
		*bActiveLongPressInteract = Parms.bActiveLongPressInteract;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ResetActionAndCondition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ResetActionAndCondition(const struct FGameplayTag& DamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ResetActionAndCondition");

	Params::BP_AJBInGameCharacter_C_ResetActionAndCondition Parms{};

	Parms.DamageType = std::move(DamageType);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsCritical
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsCritical_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::IsCritical(bool* IsCritical_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IsCritical");

	Params::BP_AJBInGameCharacter_C_IsCritical Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsCritical_0 != nullptr)
		*IsCritical_0 = Parms.IsCritical_0;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.Revive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewHP                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Rescuer                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::Revive(int32 NewHP, class AActor* Rescuer, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "Revive");

	Params::BP_AJBInGameCharacter_C_Revive Parms{};

	Parms.NewHP = NewHP;
	Parms.Rescuer = Rescuer;

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterBehaviorMatches
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ActiveToCritical                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Critical                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CriticalToActive                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    DeathAndEnd                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    DeathButRessurect                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_AJBInGameCharacter_C::CharacterBehaviorMatches(bool Active, bool ActiveToCritical, bool Critical, bool CriticalToActive, bool DeathAndEnd, bool DeathButRessurect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CharacterBehaviorMatches");

	Params::BP_AJBInGameCharacter_C_CharacterBehaviorMatches Parms{};

	Parms.Active = Active;
	Parms.ActiveToCritical = ActiveToCritical;
	Parms.Critical = Critical;
	Parms.CriticalToActive = CriticalToActive;
	Parms.DeathAndEnd = DeathAndEnd;
	Parms.DeathButRessurect = DeathButRessurect;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetCameraTurnSpeedScale
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TurnScale                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::SetCameraTurnSpeedScale(float TurnScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SetCameraTurnSpeedScale");

	Params::BP_AJBInGameCharacter_C_SetCameraTurnSpeedScale Parms{};

	Parms.TurnScale = TurnScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetPoliticInteractAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         OperatorCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TraceLength                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          Object                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetPoliticInteractAction(class ABP_AJBInGameCharacter_C* OperatorCharacter, class AActor* TargetActor, float TraceLength, bool* bSuccess, class UObject** Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetPoliticInteractAction");

	Params::BP_AJBInGameCharacter_C_GetPoliticInteractAction Parms{};

	Parms.OperatorCharacter = OperatorCharacter;
	Parms.TargetActor = TargetActor;
	Parms.TraceLength = TraceLength;

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (Object != nullptr)
		*Object = Parms.Object;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateBehavior(Server)
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::UpdateBehavior_Server_(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UpdateBehavior(Server)");

	Params::BP_AJBInGameCharacter_C_UpdateBehavior_Server_ Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeCharacterBehavior(Server)
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharacterBehavior                      NewBehavior                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ChangeCharacterBehavior_Server_(ECharacterBehavior NewBehavior)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeCharacterBehavior(Server)");

	Params::BP_AJBInGameCharacter_C_ChangeCharacterBehavior_Server_ Parms{};

	Parms.NewBehavior = NewBehavior;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeSpectatorOnDead(Server)
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ChangeSpectatorOnDead_Server_(class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeSpectatorOnDead(Server)");

	Params::BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_ Parms{};

	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetGenerateParticleLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetGenerateParticleLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetGenerateParticleLocation");

	Params::BP_AJBInGameCharacter_C_GetGenerateParticleLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetGenerateParticleRelativeLocationFromCapsuleCenter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          RelativeLocation                                       (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetGenerateParticleRelativeLocationFromCapsuleCenter(struct FVector* RelativeLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetGenerateParticleRelativeLocationFromCapsuleCenter");

	Params::BP_AJBInGameCharacter_C_GetGenerateParticleRelativeLocationFromCapsuleCenter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RelativeLocation != nullptr)
		*RelativeLocation = std::move(Parms.RelativeLocation);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcBattleRank_OnServer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDetermined                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Rank                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RankWithoutCPU                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::CalcBattleRank_OnServer(bool* IsDetermined, int32* Rank, int32* RankWithoutCPU)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CalcBattleRank_OnServer");

	Params::BP_AJBInGameCharacter_C_CalcBattleRank_OnServer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDetermined != nullptr)
		*IsDetermined = Parms.IsDetermined;

	if (Rank != nullptr)
		*Rank = Parms.Rank;

	if (RankWithoutCPU != nullptr)
		*RankWithoutCPU = Parms.RankWithoutCPU;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CanEmote
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            FailureFactor                                          (Parm, OutParm)
// struct FGameplayTagContainer            FailureSkills                                          (Parm, OutParm)
// bool                                    bCanEmote                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CanEmote(struct FGameplayTagContainer* FailureFactor, struct FGameplayTagContainer* FailureSkills, bool* bCanEmote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CanEmote");

	Params::BP_AJBInGameCharacter_C_CanEmote Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FailureFactor != nullptr)
		*FailureFactor = std::move(Parms.FailureFactor);

	if (FailureSkills != nullptr)
		*FailureSkills = std::move(Parms.FailureSkills);

	if (bCanEmote != nullptr)
		*bCanEmote = Parms.bCanEmote;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsOperatingSeparatedStand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bIncludeTransition                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_AJBInGameCharacter_C::IsOperatingSeparatedStand(bool bIncludeTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IsOperatingSeparatedStand");

	Params::BP_AJBInGameCharacter_C_IsOperatingSeparatedStand Parms{};

	Parms.bIncludeTransition = bIncludeTransition;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CanDash
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bIsDash                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CanDash(bool* bIsDash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CanDash");

	Params::BP_AJBInGameCharacter_C_CanDash Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsDash != nullptr)
		*bIsDash = Parms.bIsDash;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateDashTimeCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::UpdateDashTimeCount(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UpdateDashTimeCount");

	Params::BP_AJBInGameCharacter_C_UpdateDashTimeCount Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetMaxAcceleration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   MaxAcceleration                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetMaxAcceleration(float* MaxAcceleration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetMaxAcceleration");

	Params::BP_AJBInGameCharacter_C_GetMaxAcceleration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaxAcceleration != nullptr)
		*MaxAcceleration = Parms.MaxAcceleration;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateMaxAcceleration
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::UpdateMaxAcceleration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UpdateMaxAcceleration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckMovementChange
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::CheckMovementChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckMovementChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnWalkingStateChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EWalkingState                           PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EWalkingState                           NextState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OnWalkingStateChanged(EWalkingState PrevState, EWalkingState NextState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnWalkingStateChanged");

	Params::BP_AJBInGameCharacter_C_OnWalkingStateChanged Parms{};

	Parms.PrevState = PrevState;
	Parms.NextState = NextState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryDash
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EWalkingState                           PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EWalkingState                           NextState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::TryDash(EWalkingState PrevState, EWalkingState NextState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "TryDash");

	Params::BP_AJBInGameCharacter_C_TryDash Parms{};

	Parms.PrevState = PrevState;
	Parms.NextState = NextState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckDashInput
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bDashInput                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckDashInput(bool* bDashInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckDashInput");

	Params::BP_AJBInGameCharacter_C_CheckDashInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDashInput != nullptr)
		*bDashInput = Parms.bDashInput;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SkillReady(Local)
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBSkillBase_C*               ReadySkill                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::SkillReady_Local_(class UBP_AJBSkillBase_C* ReadySkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SkillReady(Local)");

	Params::BP_AJBInGameCharacter_C_SkillReady_Local_ Parms{};

	Parms.ReadySkill = ReadySkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryCancelDash
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::TryCancelDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "TryCancelDash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.InitializeDashVariables
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::InitializeDashVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "InitializeDashVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ReserveDash
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ReserveDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ReserveDash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcCameraConfigScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   UpDownScale                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RightLeftScale                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::CalcCameraConfigScale(float* UpDownScale, float* RightLeftScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CalcCameraConfigScale");

	Params::BP_AJBInGameCharacter_C_CalcCameraConfigScale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UpDownScale != nullptr)
		*UpDownScale = Parms.UpDownScale;

	if (RightLeftScale != nullptr)
		*RightLeftScale = Parms.RightLeftScale;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ForceCancelSkillsNoIgnore
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRequireStandSkillOnly                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ForceCancelSkillsNoIgnore(bool bRequireStandSkillOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ForceCancelSkillsNoIgnore");

	Params::BP_AJBInGameCharacter_C_ForceCancelSkillsNoIgnore Parms{};

	Parms.bRequireStandSkillOnly = bRequireStandSkillOnly;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CallOnSkillFailedToUse_Local
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            FactorTags                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_AJBInGameCharacter_C::CallOnSkillFailedToUse_Local(const struct FGameplayTagContainer& FactorTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CallOnSkillFailedToUse_Local");

	Params::BP_AJBInGameCharacter_C_CallOnSkillFailedToUse_Local Parms{};

	Parms.FactorTags = std::move(FactorTags);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetPoliticAreaInNoDamageSETag
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     AffecterSideSETag                                      (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     SETag                                                  (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetPoliticAreaInNoDamageSETag(const struct FGameplayTag& AffecterSideSETag, struct FGameplayTag* SETag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetPoliticAreaInNoDamageSETag");

	Params::BP_AJBInGameCharacter_C_GetPoliticAreaInNoDamageSETag Parms{};

	Parms.AffecterSideSETag = std::move(AffecterSideSETag);

	UObject::ProcessEvent(Func, &Parms);

	if (SETag != nullptr)
		*SETag = std::move(Parms.SETag);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RevivePair
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Rescuer                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::RevivePair(class AActor* Rescuer, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "RevivePair");

	Params::BP_AJBInGameCharacter_C_RevivePair Parms{};

	Parms.Rescuer = Rescuer;

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetForceCameraSencitivityFirst
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewFlag                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::SetForceCameraSencitivityFirst(bool bNewFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SetForceCameraSencitivityFirst");

	Params::BP_AJBInGameCharacter_C_SetForceCameraSencitivityFirst Parms{};

	Parms.bNewFlag = bNewFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ApplyCharacterParameter
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ApplyCharacterParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ApplyCharacterParameter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ApplyCharacterParameterCore
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ContentName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ApplyCharacterParameterCore(class FName ContentName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ApplyCharacterParameterCore");

	Params::BP_AJBInGameCharacter_C_ApplyCharacterParameterCore Parms{};

	Parms.ContentName = ContentName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetPoliticCameraParam
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     CameraTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FST_CameraParam                  CameraParam                                            (Parm, OutParm, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::GetPoliticCameraParam(const struct FGameplayTag& CameraTag, struct FST_CameraParam* CameraParam, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetPoliticCameraParam");

	Params::BP_AJBInGameCharacter_C_GetPoliticCameraParam Parms{};

	Parms.CameraTag = std::move(CameraTag);

	UObject::ProcessEvent(Func, &Parms);

	if (CameraParam != nullptr)
		*CameraParam = std::move(Parms.CameraParam);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetCharacterName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             CharacterName                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetCharacterName(class FName* CharacterName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetCharacterName");

	Params::BP_AJBInGameCharacter_C_GetCharacterName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CharacterName != nullptr)
		*CharacterName = Parms.CharacterName;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetCameraParameter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             TempFileName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FST_CameraParam                  CameraParam                                            (Parm, OutParm, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetCameraParameter(class FName TempFileName, struct FST_CameraParam* CameraParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetCameraParameter");

	Params::BP_AJBInGameCharacter_C_GetCameraParameter Parms{};

	Parms.TempFileName = TempFileName;

	UObject::ProcessEvent(Func, &Parms);

	if (CameraParam != nullptr)
		*CameraParam = std::move(Parms.CameraParam);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetDefaultCameraParameter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FST_CameraParam                  CameraParam                                            (Parm, OutParm, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetDefaultCameraParameter(struct FST_CameraParam* CameraParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetDefaultCameraParameter");

	Params::BP_AJBInGameCharacter_C_GetDefaultCameraParameter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CameraParam != nullptr)
		*CameraParam = std::move(Parms.CameraParam);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetUltimateMaxAvailableNum
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetUltimateMaxAvailableNum(int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetUltimateMaxAvailableNum");

	Params::BP_AJBInGameCharacter_C_GetUltimateMaxAvailableNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CountUpUltimateAvailable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     GroupTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::CountUpUltimateAvailable(int32& Count, struct FGameplayTag& GroupTag, float& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CountUpUltimateAvailable");

	Params::BP_AJBInGameCharacter_C_CountUpUltimateAvailable Parms{};

	Parms.Count = Count;
	Parms.GroupTag = std::move(GroupTag);
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	Count = Parms.Count;
	GroupTag = std::move(Parms.GroupTag);
	Value = Parms.Value;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GrowupCommon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Growup                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GrowupCommon(const struct FGameplayTag& Growup, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GrowupCommon");

	Params::BP_AJBInGameCharacter_C_GrowupCommon Parms{};

	Parms.Growup = std::move(Growup);
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryGetSupportSkillComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UBP_AJBSupportSkillBase_C*        SupportSkillComponent                                  (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::TryGetSupportSkillComponent(bool* bSuccess, class UBP_AJBSupportSkillBase_C** SupportSkillComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "TryGetSupportSkillComponent");

	Params::BP_AJBInGameCharacter_C_TryGetSupportSkillComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (SupportSkillComponent != nullptr)
		*SupportSkillComponent = Parms.SupportSkillComponent;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.InitializeGrowupParam
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::InitializeGrowupParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "InitializeGrowupParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.AssignGrowupInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAJBParamContent*                 ParamContent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PhaseIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::AssignGrowupInfo(class UAJBParamContent* ParamContent, int32 PhaseIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "AssignGrowupInfo");

	Params::BP_AJBInGameCharacter_C_AssignGrowupInfo Parms{};

	Parms.ParamContent = ParamContent;
	Parms.PhaseIndex = PhaseIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeCollision
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDowned                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDied                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ChangeCollision(bool bDowned, bool bDied)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeCollision");

	Params::BP_AJBInGameCharacter_C_ChangeCollision Parms{};

	Parms.bDowned = bDowned;
	Parms.bDied = bDied;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateMeshRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::UpdateMeshRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UpdateMeshRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateWalkingMode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::UpdateWalkingMode(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UpdateWalkingMode");

	Params::BP_AJBInGameCharacter_C_UpdateWalkingMode Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetMaxStepHeight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   MaxStepHeight                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::SetMaxStepHeight(float MaxStepHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SetMaxStepHeight");

	Params::BP_AJBInGameCharacter_C_SetMaxStepHeight Parms{};

	Parms.MaxStepHeight = MaxStepHeight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ResetMaxStepHeight
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ResetMaxStepHeight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ResetMaxStepHeight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ResetInputValue
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ResetInputValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ResetInputValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckValidSidlingModeFactor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     FactorTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bValid                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::CheckValidSidlingModeFactor(const struct FGameplayTag& FactorTag, bool* bValid, float* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckValidSidlingModeFactor");

	Params::BP_AJBInGameCharacter_C_CheckValidSidlingModeFactor Parms{};

	Parms.FactorTag = std::move(FactorTag);

	UObject::ProcessEvent(Func, &Parms);

	if (bValid != nullptr)
		*bValid = Parms.bValid;

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CanRun
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bIsRun                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CanRun(bool* bIsRun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CanRun");

	Params::BP_AJBInGameCharacter_C_CanRun Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsRun != nullptr)
		*bIsRun = Parms.bIsRun;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnBeforeInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldInteract                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::OnBeforeInteract(bool* bShouldInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnBeforeInteract");

	Params::BP_AJBInGameCharacter_C_OnBeforeInteract Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldInteract != nullptr)
		*bShouldInteract = Parms.bShouldInteract;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckPossibleDash
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bPossible                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckPossibleDash(bool* bPossible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckPossibleDash");

	Params::BP_AJBInGameCharacter_C_CheckPossibleDash Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPossible != nullptr)
		*bPossible = Parms.bPossible;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRep_Rep_CharacterBehavior
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnRep_Rep_CharacterBehavior()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnRep_Rep_CharacterBehavior");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetDownedParticleLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetDownedParticleLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetDownedParticleLocation");

	Params::BP_AJBInGameCharacter_C_GetDownedParticleLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetRelativeDownedParticleLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          RelativeLocation                                       (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetRelativeDownedParticleLocation(struct FVector* RelativeLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetRelativeDownedParticleLocation");

	Params::BP_AJBInGameCharacter_C_GetRelativeDownedParticleLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RelativeLocation != nullptr)
		*RelativeLocation = std::move(Parms.RelativeLocation);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcCameraFOV
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FST_CameraParam>          InParams                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float                                   FOV                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::CalcCameraFOV(TArray<struct FST_CameraParam>& InParams, float* FOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CalcCameraFOV");

	Params::BP_AJBInGameCharacter_C_CalcCameraFOV Parms{};

	Parms.InParams = std::move(InParams);

	UObject::ProcessEvent(Func, &Parms);

	InParams = std::move(Parms.InParams);

	if (FOV != nullptr)
		*FOV = Parms.FOV;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckFalling
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bFalling                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckFalling(bool* bFalling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckFalling");

	Params::BP_AJBInGameCharacter_C_CheckFalling Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bFalling != nullptr)
		*bFalling = Parms.bFalling;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetProperVisibilityForDarbysAssassinEffect
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::SetProperVisibilityForDarbysAssassinEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SetProperVisibilityForDarbysAssassinEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsDarbysAssassin
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::IsDarbysAssassin(bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IsDarbysAssassin");

	Params::BP_AJBInGameCharacter_C_IsDarbysAssassin Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRep_bIsNPC
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnRep_bIsNPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnRep_bIsNPC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetCharaParam
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     CharaParam                                             (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetCharaParam(struct FGameplayTag* CharaParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetCharaParam");

	Params::BP_AJBInGameCharacter_C_GetCharaParam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CharaParam != nullptr)
		*CharaParam = std::move(Parms.CharaParam);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetGrowupTagTotalValue
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     GrowupTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// float                                   TotalValue                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetGrowupTagTotalValue(const struct FGameplayTag& GrowupTag, float* TotalValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetGrowupTagTotalValue");

	Params::BP_AJBInGameCharacter_C_GetGrowupTagTotalValue Parms{};

	Parms.GrowupTag = std::move(GrowupTag);

	UObject::ProcessEvent(Func, &Parms);

	if (TotalValue != nullptr)
		*TotalValue = Parms.TotalValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ForceCancelInteract
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ForceCancelInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ForceCancelInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IncrementKillCount(Server)
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::IncrementKillCount_Server_(int32* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IncrementKillCount(Server)");

	Params::BP_AJBInGameCharacter_C_IncrementKillCount_Server_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckPossibleLandingStop
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bPossible                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckPossibleLandingStop(bool* bPossible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckPossibleLandingStop");

	Params::BP_AJBInGameCharacter_C_CheckPossibleLandingStop Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPossible != nullptr)
		*bPossible = Parms.bPossible;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRep_bIsVanished
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnRep_bIsVanished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnRep_bIsVanished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckDeadBody
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::CheckDeadBody(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckDeadBody");

	Params::BP_AJBInGameCharacter_C_CheckDeadBody Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsDeathAndEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_AJBInGameCharacter_C::IsDeathAndEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IsDeathAndEnd");

	Params::BP_AJBInGameCharacter_C_IsDeathAndEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckCharacterBehavior_Active
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bReturnValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckCharacterBehavior_Active(bool* bReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckCharacterBehavior_Active");

	Params::BP_AJBInGameCharacter_C_CheckCharacterBehavior_Active Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bReturnValue != nullptr)
		*bReturnValue = Parms.bReturnValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckCharacterBehavior_Critical
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bReturnValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckCharacterBehavior_Critical(bool* bReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckCharacterBehavior_Critical");

	Params::BP_AJBInGameCharacter_C_CheckCharacterBehavior_Critical Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bReturnValue != nullptr)
		*bReturnValue = Parms.bReturnValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.AddControllerInputs
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::AddControllerInputs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "AddControllerInputs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRep_Rep_SP
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnRep_Rep_SP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnRep_Rep_SP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetResumeTimeToRecoverMP
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::SetResumeTimeToRecoverMP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SetResumeTimeToRecoverMP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UltimateSkillNumWillBeIncreased
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::UltimateSkillNumWillBeIncreased(bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UltimateSkillNumWillBeIncreased");

	Params::BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.EmotePoseExists
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PositionNo                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::EmotePoseExists(const int32 PositionNo, bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "EmotePoseExists");

	Params::BP_AJBInGameCharacter_C_EmotePoseExists Parms{};

	Parms.PositionNo = PositionNo;

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.EmoteVoiceExists
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PositionNo                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::EmoteVoiceExists(int32 PositionNo, bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "EmoteVoiceExists");

	Params::BP_AJBInGameCharacter_C_EmoteVoiceExists Parms{};

	Parms.PositionNo = PositionNo;

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.StopCameraResetProcess(Local)
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::StopCameraResetProcess_Local_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "StopCameraResetProcess(Local)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetControlRotationWithStopReset(Local)
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         NewRotation                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// bool                                    bStopCameraResetProcess                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::SetControlRotationWithStopReset_Local_(class AController* Controller_0, const struct FRotator& NewRotation, bool bStopCameraResetProcess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SetControlRotationWithStopReset(Local)");

	Params::BP_AJBInGameCharacter_C_SetControlRotationWithStopReset_Local_ Parms{};

	Parms.Controller_0 = Controller_0;
	Parms.NewRotation = std::move(NewRotation);
	Parms.bStopCameraResetProcess = bStopCameraResetProcess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsNPC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_AJBInGameCharacter_C::IsNPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IsNPC");

	Params::BP_AJBInGameCharacter_C_IsNPC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MakeAlwaysRelevant
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::MakeAlwaysRelevant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "MakeAlwaysRelevant");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ReleaseSkillButtonIfPressed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ReleaseSkillButtonIfPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ReleaseSkillButtonIfPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsBeingRescued
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_AJBInGameCharacter_C::IsBeingRescued()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IsBeingRescued");

	Params::BP_AJBInGameCharacter_C_IsBeingRescued Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.NotifyBecomingLastSurvivor_Core
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::NotifyBecomingLastSurvivor_Core()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "NotifyBecomingLastSurvivor_Core");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetMeshRelatedThingsVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::SetMeshRelatedThingsVisibility(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SetMeshRelatedThingsVisibility");

	Params::BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetPairCharacterBP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_AJBInGameCharacter_C*         PairCharacterBP                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetPairCharacterBP(class ABP_AJBInGameCharacter_C** PairCharacterBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetPairCharacterBP");

	Params::BP_AJBInGameCharacter_C_GetPairCharacterBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PairCharacterBP != nullptr)
		*PairCharacterBP = Parms.PairCharacterBP;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsActiveToCritical
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bIsActiveToCritical                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::IsActiveToCritical(bool* bIsActiveToCritical)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IsActiveToCritical");

	Params::BP_AJBInGameCharacter_C_IsActiveToCritical Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsActiveToCritical != nullptr)
		*bIsActiveToCritical = Parms.bIsActiveToCritical;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.InitProperCriticalTime(Server)
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           PairIDString                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::InitProperCriticalTime_Server_(const class FString& PairIDString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "InitProperCriticalTime(Server)");

	Params::BP_AJBInGameCharacter_C_InitProperCriticalTime_Server_ Parms{};

	Parms.PairIDString = std::move(PairIDString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangePassiveParticleVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ChangePassiveParticleVisibility(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangePassiveParticleVisibility");

	Params::BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetAttachmentEffect
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::SetAttachmentEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SetAttachmentEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.PlayKnockdownSoundOnViewerEnv(Server)
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::PlayKnockdownSoundOnViewerEnv_Server_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "PlayKnockdownSoundOnViewerEnv(Server)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckSidlingForGunnerAnimation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bSidlingForGunnerAnimation                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckSidlingForGunnerAnimation(bool* bSidlingForGunnerAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckSidlingForGunnerAnimation");

	Params::BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bSidlingForGunnerAnimation != nullptr)
		*bSidlingForGunnerAnimation = Parms.bSidlingForGunnerAnimation;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RequestLandingEffect_Core
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     EffectType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bLandingStop                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          WorldLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::RequestLandingEffect_Core(const struct FGameplayTag& EffectType, bool bLandingStop, const struct FVector& WorldLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "RequestLandingEffect_Core");

	Params::BP_AJBInGameCharacter_C_RequestLandingEffect_Core Parms{};

	Parms.EffectType = std::move(EffectType);
	Parms.bLandingStop = bLandingStop;
	Parms.WorldLocation = std::move(WorldLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.HasStand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_AJBInGameCharacter_C::HasStand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "HasStand");

	Params::BP_AJBInGameCharacter_C_HasStand Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.HasMovableStand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_AJBInGameCharacter_C::HasMovableStand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "HasMovableStand");

	Params::BP_AJBInGameCharacter_C_HasMovableStand Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.LongPressSkillActivated
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBLongPressInteract_C*       LongPressInteract                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::LongPressSkillActivated(class UBP_AJBLongPressInteract_C* LongPressInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "LongPressSkillActivated");

	Params::BP_AJBInGameCharacter_C_LongPressSkillActivated Parms{};

	Parms.LongPressInteract = LongPressInteract;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.LongPressSkillInactivated
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBLongPressInteract_C*       LongPressInteract                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::LongPressSkillInactivated(class UBP_AJBLongPressInteract_C* LongPressInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "LongPressSkillInactivated");

	Params::BP_AJBInGameCharacter_C_LongPressSkillInactivated Parms{};

	Parms.LongPressInteract = LongPressInteract;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckAnySkillCanAccompany
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           IgnoreSkillClass                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCanAccompany                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckAnySkillCanAccompany(class UClass* IgnoreSkillClass, bool* bCanAccompany)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckAnySkillCanAccompany");

	Params::BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany Parms{};

	Parms.IgnoreSkillClass = IgnoreSkillClass;

	UObject::ProcessEvent(Func, &Parms);

	if (bCanAccompany != nullptr)
		*bCanAccompany = Parms.bCanAccompany;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryGetSkillComponentByTag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UBP_AJBSkillBase_C*               SkillComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::TryGetSkillComponentByTag(const struct FGameplayTag& SkillTag, bool* bSuccess, class UBP_AJBSkillBase_C** SkillComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "TryGetSkillComponentByTag");

	Params::BP_AJBInGameCharacter_C_TryGetSkillComponentByTag Parms{};

	Parms.SkillTag = std::move(SkillTag);

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (SkillComponent != nullptr)
		*SkillComponent = Parms.SkillComponent;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckConstantVelocity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bConstantVelocity                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckConstantVelocity(bool* bConstantVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckConstantVelocity");

	Params::BP_AJBInGameCharacter_C_CheckConstantVelocity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bConstantVelocity != nullptr)
		*bConstantVelocity = Parms.bConstantVelocity;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeAttachedPaticleVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ChangeAttachedPaticleVisibility(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeAttachedPaticleVisibility");

	Params::BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SortHitResultsMostNearTraceStartLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FHitResult>               InHits                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FHitResult>               OutHits                                                (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)

void ABP_AJBInGameCharacter_C::SortHitResultsMostNearTraceStartLocation(TArray<struct FHitResult>& InHits, float Radius, TArray<struct FHitResult>* OutHits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SortHitResultsMostNearTraceStartLocation");

	Params::BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation Parms{};

	Parms.InHits = std::move(InHits);
	Parms.Radius = Radius;

	UObject::ProcessEvent(Func, &Parms);

	InHits = std::move(Parms.InHits);

	if (OutHits != nullptr)
		*OutHits = std::move(Parms.OutHits);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckPredictionAttackHitBlocked
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bBlocked                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckPredictionAttackHitBlocked(class AActor* TargetActor, bool* bBlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckPredictionAttackHitBlocked");

	Params::BP_AJBInGameCharacter_C_CheckPredictionAttackHitBlocked Parms{};

	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);

	if (bBlocked != nullptr)
		*bBlocked = Parms.bBlocked;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckAnySkillActiveOnTiltOneDash
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bAnySkillActive                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckAnySkillActiveOnTiltOneDash(bool* bAnySkillActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckAnySkillActiveOnTiltOneDash");

	Params::BP_AJBInGameCharacter_C_CheckAnySkillActiveOnTiltOneDash Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAnySkillActive != nullptr)
		*bAnySkillActive = Parms.bAnySkillActive;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckSidlingOnTiltOnce
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bSidling                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckSidlingOnTiltOnce(bool* bSidling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckSidlingOnTiltOnce");

	Params::BP_AJBInGameCharacter_C_CheckSidlingOnTiltOnce Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bSidling != nullptr)
		*bSidling = Parms.bSidling;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateSidlingInfo
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::UpdateSidlingInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UpdateSidlingInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsPlayerCharacterAsGame
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bPlayerCharacterAsGame                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::IsPlayerCharacterAsGame(bool* bPlayerCharacterAsGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IsPlayerCharacterAsGame");

	Params::BP_AJBInGameCharacter_C_IsPlayerCharacterAsGame Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPlayerCharacterAsGame != nullptr)
		*bPlayerCharacterAsGame = Parms.bPlayerCharacterAsGame;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRep_Rep_bShouldRemoveGravityStatusOnLanding
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnRep_Rep_bShouldRemoveGravityStatusOnLanding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnRep_Rep_bShouldRemoveGravityStatusOnLanding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRep_Rep_RemoveGravityStatusImmediateTag
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnRep_Rep_RemoveGravityStatusImmediateTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnRep_Rep_RemoveGravityStatusImmediateTag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeEnableSpecifiedRelativeMeshRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         SpecifiedRelativeRotation                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ChangeEnableSpecifiedRelativeMeshRotation(bool bEnable, const struct FRotator& SpecifiedRelativeRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeEnableSpecifiedRelativeMeshRotation");

	Params::BP_AJBInGameCharacter_C_ChangeEnableSpecifiedRelativeMeshRotation Parms{};

	Parms.bEnable = bEnable;
	Parms.SpecifiedRelativeRotation = std::move(SpecifiedRelativeRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeEnableSocketBasedLocationOnUpdateVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             SocketName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ChangeEnableSocketBasedLocationOnUpdateVisibility(bool bEnable, class FName SocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeEnableSocketBasedLocationOnUpdateVisibility");

	Params::BP_AJBInGameCharacter_C_ChangeEnableSocketBasedLocationOnUpdateVisibility Parms{};

	Parms.bEnable = bEnable;
	Parms.SocketName = SocketName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetLocationOnUpdateVisibility
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetLocationOnUpdateVisibility(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetLocationOnUpdateVisibility");

	Params::BP_AJBInGameCharacter_C_GetLocationOnUpdateVisibility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.PlayDownSoundOnViewerEnv(Server)
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::PlayDownSoundOnViewerEnv_Server_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "PlayDownSoundOnViewerEnv(Server)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRep_Rep_CharacterActiveBehaviorInfo
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::OnRep_Rep_CharacterActiveBehaviorInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnRep_Rep_CharacterActiveBehaviorInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetBreakDownInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharacterActiveBehavior                OldBehavior                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECharacterActiveBehavior                NewBehavior                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     FactorTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bOldMainCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bMainCharacter                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ECharacterActiveBehavior                OutNewBehavilr                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSpecialBreakDown                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIgnoreCheckChanging                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGameplayTagContainer            FactorTags                                             (Parm, OutParm)
// bool                                    bBreakDownBoth                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::GetBreakDownInfo(ECharacterActiveBehavior OldBehavior, ECharacterActiveBehavior NewBehavior, const struct FGameplayTag& FactorTag, bool bOldMainCharacter, bool bMainCharacter, ECharacterActiveBehavior* OutNewBehavilr, bool* bSpecialBreakDown, bool* bIgnoreCheckChanging, struct FGameplayTagContainer* FactorTags, bool* bBreakDownBoth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetBreakDownInfo");

	Params::BP_AJBInGameCharacter_C_GetBreakDownInfo Parms{};

	Parms.OldBehavior = OldBehavior;
	Parms.NewBehavior = NewBehavior;
	Parms.FactorTag = std::move(FactorTag);
	Parms.bOldMainCharacter = bOldMainCharacter;
	Parms.bMainCharacter = bMainCharacter;

	UObject::ProcessEvent(Func, &Parms);

	if (OutNewBehavilr != nullptr)
		*OutNewBehavilr = Parms.OutNewBehavilr;

	if (bSpecialBreakDown != nullptr)
		*bSpecialBreakDown = Parms.bSpecialBreakDown;

	if (bIgnoreCheckChanging != nullptr)
		*bIgnoreCheckChanging = Parms.bIgnoreCheckChanging;

	if (FactorTags != nullptr)
		*FactorTags = std::move(Parms.FactorTags);

	if (bBreakDownBoth != nullptr)
		*bBreakDownBoth = Parms.bBreakDownBoth;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckActiveBehaviorBreakDown
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bBreakDown                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSpecialBreakDown                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bBreakDownBoth                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGameplayTagContainer            Factor_Tags                                            (Parm, OutParm)

void ABP_AJBInGameCharacter_C::CheckActiveBehaviorBreakDown(bool* bBreakDown, bool* bSpecialBreakDown, bool* bBreakDownBoth, struct FGameplayTagContainer* Factor_Tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckActiveBehaviorBreakDown");

	Params::BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bBreakDown != nullptr)
		*bBreakDown = Parms.bBreakDown;

	if (bSpecialBreakDown != nullptr)
		*bSpecialBreakDown = Parms.bSpecialBreakDown;

	if (bBreakDownBoth != nullptr)
		*bBreakDownBoth = Parms.bBreakDownBoth;

	if (Factor_Tags != nullptr)
		*Factor_Tags = std::move(Parms.Factor_Tags);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsOperatingMainCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bReturnValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::IsOperatingMainCharacter(bool* bReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IsOperatingMainCharacter");

	Params::BP_AJBInGameCharacter_C_IsOperatingMainCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bReturnValue != nullptr)
		*bReturnValue = Parms.bReturnValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateDownedCapsuleLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DownedCapsuleHalfHeight                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::UpdateDownedCapsuleLocation(float DownedCapsuleHalfHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UpdateDownedCapsuleLocation");

	Params::BP_AJBInGameCharacter_C_UpdateDownedCapsuleLocation Parms{};

	Parms.DownedCapsuleHalfHeight = DownedCapsuleHalfHeight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateDownedCapsuleHalfHeight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DownedCapsuleHalfHeight                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::UpdateDownedCapsuleHalfHeight(float DownedCapsuleHalfHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UpdateDownedCapsuleHalfHeight");

	Params::BP_AJBInGameCharacter_C_UpdateDownedCapsuleHalfHeight Parms{};

	Parms.DownedCapsuleHalfHeight = DownedCapsuleHalfHeight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateDownedCapsuleSettings
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DownedCapsuleHalfHeight                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::UpdateDownedCapsuleSettings(float DownedCapsuleHalfHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UpdateDownedCapsuleSettings");

	Params::BP_AJBInGameCharacter_C_UpdateDownedCapsuleSettings Parms{};

	Parms.DownedCapsuleHalfHeight = DownedCapsuleHalfHeight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckPossibleDetection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bPossibleDetection                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckPossibleDetection(bool* bPossibleDetection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckPossibleDetection");

	Params::BP_AJBInGameCharacter_C_CheckPossibleDetection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPossibleDetection != nullptr)
		*bPossibleDetection = Parms.bPossibleDetection;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CacheCustomSkinData
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::CacheCustomSkinData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CacheCustomSkinData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeSkinMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInterface*               NewMaterial                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::ChangeSkinMaterial(class UMaterialInterface* NewMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeSkinMaterial");

	Params::BP_AJBInGameCharacter_C_ChangeSkinMaterial Parms{};

	Parms.NewMaterial = NewMaterial;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RestoreSkinMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::RestoreSkinMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "RestoreSkinMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckSpecifiedPassiveActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UClass*>                   PassiveClassList                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                                    bValid                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckSpecifiedPassiveActive(TArray<class UClass*>& PassiveClassList, bool* bValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckSpecifiedPassiveActive");

	Params::BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive Parms{};

	Parms.PassiveClassList = std::move(PassiveClassList);

	UObject::ProcessEvent(Func, &Parms);

	PassiveClassList = std::move(Parms.PassiveClassList);

	if (bValid != nullptr)
		*bValid = Parms.bValid;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeEnableControlAnimationOnPreReplay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ChangeEnableControlAnimationOnPreReplay(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeEnableControlAnimationOnPreReplay");

	Params::BP_AJBInGameCharacter_C_ChangeEnableControlAnimationOnPreReplay Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckSpecialKill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_AJBInGameCharacter_C*         DeadCharacterBP                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSpecialKill                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckSpecialKill(class ABP_AJBInGameCharacter_C* DeadCharacterBP, bool* bSpecialKill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckSpecialKill");

	Params::BP_AJBInGameCharacter_C_CheckSpecialKill Parms{};

	Parms.DeadCharacterBP = DeadCharacterBP;

	UObject::ProcessEvent(Func, &Parms);

	if (bSpecialKill != nullptr)
		*bSpecialKill = Parms.bSpecialKill;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckOnGround
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_AJBInGameCharacter_C::CheckOnGround()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckOnGround");

	Params::BP_AJBInGameCharacter_C_CheckOnGround Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcAAPInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDamageCutByAAP                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDamageBlockByAAP                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CalcAAPInfo(int32 Damage, bool* bDamageCutByAAP, bool* bDamageBlockByAAP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CalcAAPInfo");

	Params::BP_AJBInGameCharacter_C_CalcAAPInfo Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);

	if (bDamageCutByAAP != nullptr)
		*bDamageCutByAAP = Parms.bDamageCutByAAP;

	if (bDamageBlockByAAP != nullptr)
		*bDamageBlockByAAP = Parms.bDamageBlockByAAP;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeAAPParticleVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ChangeAAPParticleVisibility(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeAAPParticleVisibility");

	Params::BP_AJBInGameCharacter_C_ChangeAAPParticleVisibility Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetCamraInterpSpeedXY
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   SetCameraInterpSpeedXY                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::SetCamraInterpSpeedXY(float SetCameraInterpSpeedXY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SetCamraInterpSpeedXY");

	Params::BP_AJBInGameCharacter_C_SetCamraInterpSpeedXY Parms{};

	Parms.SetCameraInterpSpeedXY = SetCameraInterpSpeedXY;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateMeshLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::UpdateMeshLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "UpdateMeshLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckMeshVisibility
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bIncludeSystemReason                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bVisible                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckMeshVisibility(bool bIncludeSystemReason, bool* bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckMeshVisibility");

	Params::BP_AJBInGameCharacter_C_CheckMeshVisibility Parms{};

	Parms.bIncludeSystemReason = bIncludeSystemReason;

	UObject::ProcessEvent(Func, &Parms);

	if (bVisible != nullptr)
		*bVisible = Parms.bVisible;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeEnableInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ChangeEnableInteract(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ChangeEnableInteract");

	Params::BP_AJBInGameCharacter_C_ChangeEnableInteract Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetWalkableFloorAngle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InWalkableFloorAngle                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::SetWalkableFloorAngle(float InWalkableFloorAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "SetWalkableFloorAngle");

	Params::BP_AJBInGameCharacter_C_SetWalkableFloorAngle Parms{};

	Parms.InWalkableFloorAngle = InWalkableFloorAngle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ResetWalkableFloorAngle
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_C::ResetWalkableFloorAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ResetWalkableFloorAngle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetGameplayTags
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            TagContainerCopy                                       (Parm, OutParm)

void ABP_AJBInGameCharacter_C::GetGameplayTags(struct FGameplayTagContainer* TagContainerCopy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetGameplayTags");

	Params::BP_AJBInGameCharacter_C_GetGameplayTags Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TagContainerCopy != nullptr)
		*TagContainerCopy = std::move(Parms.TagContainerCopy);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckAreaIn
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Length                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PartitionNum                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCheckUnder                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   ValidGroundOffsetZ                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bTarget                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckAreaIn(const struct FVector& Location, const struct FRotator& Rotation, float Radius, float Length, int32 PartitionNum, bool bCheckUnder, float ValidGroundOffsetZ, bool* bTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckAreaIn");

	Params::BP_AJBInGameCharacter_C_CheckAreaIn Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.Radius = Radius;
	Parms.Length = Length;
	Parms.PartitionNum = PartitionNum;
	Parms.bCheckUnder = bCheckUnder;
	Parms.ValidGroundOffsetZ = ValidGroundOffsetZ;

	UObject::ProcessEvent(Func, &Parms);

	if (bTarget != nullptr)
		*bTarget = Parms.bTarget;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckTargetSelf
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bForDamageOverlap                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIgnoreMovableStand                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bTarget                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckTargetSelf(class AActor* DamageCauser, bool bForDamageOverlap, bool bIgnoreMovableStand, bool* bTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckTargetSelf");

	Params::BP_AJBInGameCharacter_C_CheckTargetSelf Parms{};

	Parms.DamageCauser = DamageCauser;
	Parms.bForDamageOverlap = bForDamageOverlap;
	Parms.bIgnoreMovableStand = bIgnoreMovableStand;

	UObject::ProcessEvent(Func, &Parms);

	if (bTarget != nullptr)
		*bTarget = Parms.bTarget;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OwnHitParam
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCharacter                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bLeftAP                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGameplayTag                     ParticleTagBlockedByAAP                                (Parm, OutParm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     SETagBlockedByAAP                                      (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::OwnHitParam(bool* bCharacter, bool* bLeftAP, struct FGameplayTag* ParticleTagBlockedByAAP, struct FGameplayTag* SETagBlockedByAAP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OwnHitParam");

	Params::BP_AJBInGameCharacter_C_OwnHitParam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bCharacter != nullptr)
		*bCharacter = Parms.bCharacter;

	if (bLeftAP != nullptr)
		*bLeftAP = Parms.bLeftAP;

	if (ParticleTagBlockedByAAP != nullptr)
		*ParticleTagBlockedByAAP = std::move(Parms.ParticleTagBlockedByAAP);

	if (SETagBlockedByAAP != nullptr)
		*SETagBlockedByAAP = std::move(Parms.SETagBlockedByAAP);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IfCheckDamageOverlap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_AJBInGameCharacter_C::IfCheckDamageOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IfCheckDamageOverlap");

	Params::BP_AJBInGameCharacter_C_IfCheckDamageOverlap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckDisableDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDisableDamage_0                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckDisableDamage(class AActor* DamageCauser, bool* bDisableDamage_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckDisableDamage");

	Params::BP_AJBInGameCharacter_C_CheckDisableDamage Parms{};

	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	if (bDisableDamage_0 != nullptr)
		*bDisableDamage_0 = Parms.bDisableDamage_0;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckDisablePassive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PassiveCauser                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     PassiveTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bDisablePassive_0                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckDisablePassive(class AActor* PassiveCauser, const struct FGameplayTag& PassiveTag, bool* bDisablePassive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckDisablePassive");

	Params::BP_AJBInGameCharacter_C_CheckDisablePassive Parms{};

	Parms.PassiveCauser = PassiveCauser;
	Parms.PassiveTag = std::move(PassiveTag);

	UObject::ProcessEvent(Func, &Parms);

	if (bDisablePassive_0 != nullptr)
		*bDisablePassive_0 = Parms.bDisablePassive_0;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckDisableAreaDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDisableAreadamage_0                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckDisableAreaDamage(bool* bDisableAreadamage_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckDisableAreaDamage");

	Params::BP_AJBInGameCharacter_C_CheckDisableAreaDamage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDisableAreadamage_0 != nullptr)
		*bDisableAreadamage_0 = Parms.bDisableAreadamage_0;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckNoDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bNoDamage                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckNoDamage(class AActor* DamageCauser, bool* bNoDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckNoDamage");

	Params::BP_AJBInGameCharacter_C_CheckNoDamage Parms{};

	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	if (bNoDamage != nullptr)
		*bNoDamage = Parms.bNoDamage;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsReactedByReticule
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::IsReactedByReticule(bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IsReactedByReticule");

	Params::BP_AJBInGameCharacter_C_IsReactedByReticule Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IgnoreTrace
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIgnore                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::IgnoreTrace(bool* bIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IgnoreTrace");

	Params::BP_AJBInGameCharacter_C_IgnoreTrace Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIgnore != nullptr)
		*bIgnore = Parms.bIgnore;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckDisableDirectDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDisableDirectDamage_0                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::CheckDisableDirectDamage(class AActor* DamageCauser, bool* bDisableDirectDamage_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckDisableDirectDamage");

	Params::BP_AJBInGameCharacter_C_CheckDisableDirectDamage Parms{};

	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	if (bDisableDirectDamage_0 != nullptr)
		*bDisableDirectDamage_0 = Parms.bDisableDirectDamage_0;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckErrorConditionOperator
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bErrorCondition                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// uint8                                   ErrorType                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::CheckErrorConditionOperator(class AActor* InteractActor, bool* bErrorCondition, uint8* ErrorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckErrorConditionOperator");

	Params::BP_AJBInGameCharacter_C_CheckErrorConditionOperator Parms{};

	Parms.InteractActor = InteractActor;

	UObject::ProcessEvent(Func, &Parms);

	if (bErrorCondition != nullptr)
		*bErrorCondition = Parms.bErrorCondition;

	if (ErrorType != nullptr)
		*ErrorType = Parms.ErrorType;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.InteractableOperator
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bReturnValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::InteractableOperator(class AActor* InteractActor, bool* bReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "InteractableOperator");

	Params::BP_AJBInGameCharacter_C_InteractableOperator Parms{};

	Parms.InteractActor = InteractActor;

	UObject::ProcessEvent(Func, &Parms);

	if (bReturnValue != nullptr)
		*bReturnValue = Parms.bReturnValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckErrorCondition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bErrorCondition                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// uint8                                   ErrorType                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::CheckErrorCondition(bool* bErrorCondition, uint8* ErrorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CheckErrorCondition");

	Params::BP_AJBInGameCharacter_C_CheckErrorCondition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bErrorCondition != nullptr)
		*bErrorCondition = Parms.bErrorCondition;

	if (ErrorType != nullptr)
		*ErrorType = Parms.ErrorType;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryGetInteractableText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         OperatorCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             InteractMessage                                        (Parm, OutParm)

void ABP_AJBInGameCharacter_C::TryGetInteractableText(class ABP_AJBInGameCharacter_C* OperatorCharacter, bool* bSuccess, class FText* InteractMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "TryGetInteractableText");

	Params::BP_AJBInGameCharacter_C_TryGetInteractableText Parms{};

	Parms.OperatorCharacter = OperatorCharacter;

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (InteractMessage != nullptr)
		*InteractMessage = std::move(Parms.InteractMessage);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.InteractInstantly
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_AJBInGameCharacter_C::InteractInstantly(class ABP_AJBInGameCharacter_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "InteractInstantly");

	Params::BP_AJBInGameCharacter_C_InteractInstantly Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.Interactable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TraceLength                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_AJBInGameCharacter_C::Interactable(class ABP_AJBInGameCharacter_C* Character, float TraceLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "Interactable");

	Params::BP_AJBInGameCharacter_C_Interactable Parms{};

	Parms.Character = Character;
	Parms.TraceLength = TraceLength;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnLocalInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::OnLocalInteract(class AActor* InteractingActor, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "OnLocalInteract");

	Params::BP_AJBInGameCharacter_C_OnLocalInteract Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetInteractState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   InteractState                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetInteractState(uint8* InteractState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetInteractState");

	Params::BP_AJBInGameCharacter_C_GetInteractState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InteractState != nullptr)
		*InteractState = Parms.InteractState;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetInteractPriority
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetInteractPriority(int32* Priority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetInteractPriority");

	Params::BP_AJBInGameCharacter_C_GetInteractPriority Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Priority != nullptr)
		*Priority = Parms.Priority;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetInteractBoundForCulling
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Center                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetInteractBoundForCulling(class AActor* InteractingActor, struct FVector* Center, float* Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetInteractBoundForCulling");

	Params::BP_AJBInGameCharacter_C_GetInteractBoundForCulling Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Center != nullptr)
		*Center = std::move(Parms.Center);

	if (Radius != nullptr)
		*Radius = Parms.Radius;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IfNeedsExclusiveInteractStrictly
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_AJBInGameCharacter_C::IfNeedsExclusiveInteractStrictly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IfNeedsExclusiveInteractStrictly");

	Params::BP_AJBInGameCharacter_C_IfNeedsExclusiveInteractStrictly Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IfBlockInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_AJBInGameCharacter_C::IfBlockInteract(class AActor* InteractingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "IfBlockInteract");

	Params::BP_AJBInGameCharacter_C_IfBlockInteract Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ShouldPrioritizedThanPrepaidSkillCancel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldPriorirized                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_C::ShouldPrioritizedThanPrepaidSkillCancel(bool* bShouldPriorirized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "ShouldPrioritizedThanPrepaidSkillCancel");

	Params::BP_AJBInGameCharacter_C_ShouldPrioritizedThanPrepaidSkillCancel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldPriorirized != nullptr)
		*bShouldPriorirized = Parms.bShouldPriorirized;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetOpeningCharacterCameraOffsetZ
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   OffsetZ                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetOpeningCharacterCameraOffsetZ(float* OffsetZ)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetOpeningCharacterCameraOffsetZ");

	Params::BP_AJBInGameCharacter_C_GetOpeningCharacterCameraOffsetZ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OffsetZ != nullptr)
		*OffsetZ = Parms.OffsetZ;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetPrimitivesToChangeStencil
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_StencilDigit                          StencilDigit                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UPrimitiveComponent*>      PrimitiveComponents                                    (Parm, OutParm, ZeroConstructor)

void ABP_AJBInGameCharacter_C::GetPrimitivesToChangeStencil(E_StencilDigit StencilDigit, TArray<class UPrimitiveComponent*>* PrimitiveComponents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetPrimitivesToChangeStencil");

	Params::BP_AJBInGameCharacter_C_GetPrimitivesToChangeStencil Parms{};

	Parms.StencilDigit = StencilDigit;

	UObject::ProcessEvent(Func, &Parms);

	if (PrimitiveComponents != nullptr)
		*PrimitiveComponents = std::move(Parms.PrimitiveComponents);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetGionOwner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           GionOwner                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetGionOwner(class AActor** GionOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetGionOwner");

	Params::BP_AJBInGameCharacter_C_GetGionOwner Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GionOwner != nullptr)
		*GionOwner = Parms.GionOwner;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetSpawnedSpaceInOwnersEnv
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_GionSpawnedSpace                      SpawnedSpaceInOwnersEnv                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetSpawnedSpaceInOwnersEnv(E_GionSpawnedSpace* SpawnedSpaceInOwnersEnv)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetSpawnedSpaceInOwnersEnv");

	Params::BP_AJBInGameCharacter_C_GetSpawnedSpaceInOwnersEnv Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SpawnedSpaceInOwnersEnv != nullptr)
		*SpawnedSpaceInOwnersEnv = Parms.SpawnedSpaceInOwnersEnv;
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetTargetLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::GetTargetLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "GetTargetLocation");

	Params::BP_AJBInGameCharacter_C_GetTargetLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcCurrentRotationValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   TurnedRotation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LookupRotation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_C::CalcCurrentRotationValue(float* TurnedRotation, float* LookupRotation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_C", "CalcCurrentRotationValue");

	Params::BP_AJBInGameCharacter_C_CalcCurrentRotationValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TurnedRotation != nullptr)
		*TurnedRotation = Parms.TurnedRotation;

	if (LookupRotation != nullptr)
		*LookupRotation = Parms.LookupRotation;
}

}


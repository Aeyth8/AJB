#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Test1_BTD_TimeLimit

#include "Basic.hpp"

#include "Test1_BTD_TimeLimit_classes.hpp"
#include "Test1_BTD_TimeLimit_parameters.hpp"


namespace SDK
{

// Function test1_BTD_TimeLimit.test1_BTD_TimeLimit_C.ExecuteUbergraph_test1_BTD_TimeLimit
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTest1_BTD_TimeLimit_C::ExecuteUbergraph_test1_BTD_TimeLimit(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("test1_BTD_TimeLimit_C", "ExecuteUbergraph_test1_BTD_TimeLimit");

	Params::Test1_BTD_TimeLimit_C_ExecuteUbergraph_test1_BTD_TimeLimit Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function test1_BTD_TimeLimit.test1_BTD_TimeLimit_C.ReceiveObserverActivatedAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTest1_BTD_TimeLimit_C::ReceiveObserverActivatedAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("test1_BTD_TimeLimit_C", "ReceiveObserverActivatedAI");

	Params::Test1_BTD_TimeLimit_C_ReceiveObserverActivatedAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function test1_BTD_TimeLimit.test1_BTD_TimeLimit_C.ReceiveTickAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTest1_BTD_TimeLimit_C::ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("test1_BTD_TimeLimit_C", "ReceiveTickAI");

	Params::Test1_BTD_TimeLimit_C_ReceiveTickAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function test1_BTD_TimeLimit.test1_BTD_TimeLimit_C.PerformConditionCheckAI
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UTest1_BTD_TimeLimit_C::PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("test1_BTD_TimeLimit_C", "PerformConditionCheckAI");

	Params::Test1_BTD_TimeLimit_C_PerformConditionCheckAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function test1_BTD_TimeLimit.test1_BTD_TimeLimit_C.ResetRemainingTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   RemainingTime_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTest1_BTD_TimeLimit_C::ResetRemainingTime(float* RemainingTime_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("test1_BTD_TimeLimit_C", "ResetRemainingTime");

	Params::Test1_BTD_TimeLimit_C_ResetRemainingTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RemainingTime_0 != nullptr)
		*RemainingTime_0 = Parms.RemainingTime_0;
}

}


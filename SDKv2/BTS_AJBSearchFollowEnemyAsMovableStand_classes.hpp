#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_AJBSearchFollowEnemyAsMovableStand

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTS_AJBSearchFollowEnemyAsMovableStand.BTS_AJBSearchFollowEnemyAsMovableStand_C
// 0x00B0 (0x0148 - 0x0098)
class UBTS_AJBSearchFollowEnemyAsMovableStand_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 DestinationKey;                                    // 0x00A0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FBlackboardKeySelector                 RO_EnemyKey;                                       // 0x00C8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FBlackboardKeySelector                 MovingGionKey;                                     // 0x00F0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FBlackboardKeySelector                 AttackingGionKey;                                  // 0x0118(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	float                                         DistanceToReachedLocation;                         // 0x0140(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceSqToReachedLocation;                       // 0x0144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTS_AJBSearchFollowEnemyAsMovableStand(int32 EntryPoint);
	void DebugDrawDestination(class AAIController* AI_Controller);
	void OpenGateFindSpotAround();
	void ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTS_AJBSearchFollowEnemyAsMovableStand_C">();
	}
	static class UBTS_AJBSearchFollowEnemyAsMovableStand_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTS_AJBSearchFollowEnemyAsMovableStand_C>();
	}
};
static_assert(alignof(UBTS_AJBSearchFollowEnemyAsMovableStand_C) == 0x000008, "Wrong alignment on UBTS_AJBSearchFollowEnemyAsMovableStand_C");
static_assert(sizeof(UBTS_AJBSearchFollowEnemyAsMovableStand_C) == 0x000148, "Wrong size on UBTS_AJBSearchFollowEnemyAsMovableStand_C");
static_assert(offsetof(UBTS_AJBSearchFollowEnemyAsMovableStand_C, UberGraphFrame) == 0x000098, "Member 'UBTS_AJBSearchFollowEnemyAsMovableStand_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTS_AJBSearchFollowEnemyAsMovableStand_C, DestinationKey) == 0x0000A0, "Member 'UBTS_AJBSearchFollowEnemyAsMovableStand_C::DestinationKey' has a wrong offset!");
static_assert(offsetof(UBTS_AJBSearchFollowEnemyAsMovableStand_C, RO_EnemyKey) == 0x0000C8, "Member 'UBTS_AJBSearchFollowEnemyAsMovableStand_C::RO_EnemyKey' has a wrong offset!");
static_assert(offsetof(UBTS_AJBSearchFollowEnemyAsMovableStand_C, MovingGionKey) == 0x0000F0, "Member 'UBTS_AJBSearchFollowEnemyAsMovableStand_C::MovingGionKey' has a wrong offset!");
static_assert(offsetof(UBTS_AJBSearchFollowEnemyAsMovableStand_C, AttackingGionKey) == 0x000118, "Member 'UBTS_AJBSearchFollowEnemyAsMovableStand_C::AttackingGionKey' has a wrong offset!");
static_assert(offsetof(UBTS_AJBSearchFollowEnemyAsMovableStand_C, DistanceToReachedLocation) == 0x000140, "Member 'UBTS_AJBSearchFollowEnemyAsMovableStand_C::DistanceToReachedLocation' has a wrong offset!");
static_assert(offsetof(UBTS_AJBSearchFollowEnemyAsMovableStand_C, DistanceSqToReachedLocation) == 0x000144, "Member 'UBTS_AJBSearchFollowEnemyAsMovableStand_C::DistanceSqToReachedLocation' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterMoveEffectEvent

#include "Basic.hpp"

#include "BP_CharacterMoveEffectEvent_classes.hpp"
#include "BP_CharacterMoveEffectEvent_parameters.hpp"


namespace SDK
{

// Function BP_CharacterMoveEffectEvent.BP_CharacterMoveEffectEvent_C.OnRunEffect__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_CharacterMoveEffectEvent_C::OnRunEffect__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterMoveEffectEvent_C", "OnRunEffect__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterMoveEffectEvent.BP_CharacterMoveEffectEvent_C.OnJumpEffect__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_CharacterMoveEffectEvent_C::OnJumpEffect__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterMoveEffectEvent_C", "OnJumpEffect__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterMoveEffectEvent.BP_CharacterMoveEffectEvent_C.OnLandingEffect__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_CharacterMoveEffectEvent_C::OnLandingEffect__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterMoveEffectEvent_C", "OnLandingEffect__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterMoveEffectEvent.BP_CharacterMoveEffectEvent_C.ExecuteUbergraph_BP_CharacterMoveEffectEvent
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterMoveEffectEvent_C::ExecuteUbergraph_BP_CharacterMoveEffectEvent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterMoveEffectEvent_C", "ExecuteUbergraph_BP_CharacterMoveEffectEvent");

	Params::BP_CharacterMoveEffectEvent_C_ExecuteUbergraph_BP_CharacterMoveEffectEvent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterMoveEffectEvent.BP_CharacterMoveEffectEvent_C.JumpEffect
// (BlueprintCallable, BlueprintEvent)

void UBP_CharacterMoveEffectEvent_C::JumpEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterMoveEffectEvent_C", "JumpEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterMoveEffectEvent.BP_CharacterMoveEffectEvent_C.RunEffect
// (BlueprintCallable, BlueprintEvent)

void UBP_CharacterMoveEffectEvent_C::RunEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterMoveEffectEvent_C", "RunEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterMoveEffectEvent.BP_CharacterMoveEffectEvent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterMoveEffectEvent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterMoveEffectEvent_C", "ReceiveTick");

	Params::BP_CharacterMoveEffectEvent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterMoveEffectEvent.BP_CharacterMoveEffectEvent_C.RequestGionOwnerLocation
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     EffectType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLocalOnly                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterMoveEffectEvent_C::RequestGionOwnerLocation(const struct FGameplayTag& EffectType, bool IsLocalOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterMoveEffectEvent_C", "RequestGionOwnerLocation");

	Params::BP_CharacterMoveEffectEvent_C_RequestGionOwnerLocation Parms{};

	Parms.EffectType = std::move(EffectType);
	Parms.IsLocalOnly = IsLocalOnly;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterMoveEffectEvent.BP_CharacterMoveEffectEvent_C.UpdateMoveEffect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         OwnerCharacter                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterMoveEffectEvent_C::UpdateMoveEffect(class ABP_AJBInGameCharacter_C* OwnerCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterMoveEffectEvent_C", "UpdateMoveEffect");

	Params::BP_CharacterMoveEffectEvent_C_UpdateMoveEffect Parms{};

	Parms.OwnerCharacter = OwnerCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterMoveEffectEvent.BP_CharacterMoveEffectEvent_C.RequestAIGionOwnerLocation
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     EffectType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterMoveEffectEvent_C::RequestAIGionOwnerLocation(const struct FGameplayTag& EffectType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterMoveEffectEvent_C", "RequestAIGionOwnerLocation");

	Params::BP_CharacterMoveEffectEvent_C_RequestAIGionOwnerLocation Parms{};

	Parms.EffectType = std::move(EffectType);

	UObject::ProcessEvent(Func, &Parms);
}

}


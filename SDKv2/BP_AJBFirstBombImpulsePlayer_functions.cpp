#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBFirstBombImpulsePlayer

#include "Basic.hpp"

#include "BP_AJBFirstBombImpulsePlayer_classes.hpp"
#include "BP_AJBFirstBombImpulsePlayer_parameters.hpp"


namespace SDK
{

// Function BP_AJBFirstBombImpulsePlayer.BP_AJBFirstBombImpulsePlayer_C.ExecuteUbergraph_BP_AJBFirstBombImpulsePlayer
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBFirstBombImpulsePlayer_C::ExecuteUbergraph_BP_AJBFirstBombImpulsePlayer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFirstBombImpulsePlayer_C", "ExecuteUbergraph_BP_AJBFirstBombImpulsePlayer");

	Params::BP_AJBFirstBombImpulsePlayer_C_ExecuteUbergraph_BP_AJBFirstBombImpulsePlayer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBFirstBombImpulsePlayer.BP_AJBFirstBombImpulsePlayer_C.CheckDamagedActorOnly
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDamagedActorOnly                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBFirstBombImpulsePlayer_C::CheckDamagedActorOnly(class AActor* DamagedActor, bool* bDamagedActorOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFirstBombImpulsePlayer_C", "CheckDamagedActorOnly");

	Params::BP_AJBFirstBombImpulsePlayer_C_CheckDamagedActorOnly Parms{};

	Parms.DamagedActor = DamagedActor;

	UObject::ProcessEvent(Func, &Parms);

	if (bDamagedActorOnly != nullptr)
		*bDamagedActorOnly = Parms.bDamagedActorOnly;
}


// Function BP_AJBFirstBombImpulsePlayer.BP_AJBFirstBombImpulsePlayer_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBFirstBombImpulsePlayer_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFirstBombImpulsePlayer_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBFirstBombImpulsePlayer.BP_AJBFirstBombImpulsePlayer_C.ShouldAddDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bShouldAddDamage                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBFirstBombImpulsePlayer_C::ShouldAddDamage(class AActor* DamagedActor, class AActor* DamageCauser, bool* bShouldAddDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFirstBombImpulsePlayer_C", "ShouldAddDamage");

	Params::BP_AJBFirstBombImpulsePlayer_C_ShouldAddDamage Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldAddDamage != nullptr)
		*bShouldAddDamage = Parms.bShouldAddDamage;
}


// Function BP_AJBFirstBombImpulsePlayer.BP_AJBFirstBombImpulsePlayer_C.ShouldAddPassive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bShouldAddPassive                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBFirstBombImpulsePlayer_C::ShouldAddPassive(class AActor* DamagedActor, class AActor* DamageCauser, bool* bShouldAddPassive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFirstBombImpulsePlayer_C", "ShouldAddPassive");

	Params::BP_AJBFirstBombImpulsePlayer_C_ShouldAddPassive Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldAddPassive != nullptr)
		*bShouldAddPassive = Parms.bShouldAddPassive;
}


// Function BP_AJBFirstBombImpulsePlayer.BP_AJBFirstBombImpulsePlayer_C.RequestImpulseGion
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBFirstBombImpulsePlayer_C::RequestImpulseGion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFirstBombImpulsePlayer_C", "RequestImpulseGion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBFirstBombImpulsePlayer.BP_AJBFirstBombImpulsePlayer_C.CheckDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bNoDamage                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBFirstBombImpulsePlayer_C::CheckDamage(class AActor* DamagedActor, class AActor* DamageCauser, bool* bNoDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFirstBombImpulsePlayer_C", "CheckDamage");

	Params::BP_AJBFirstBombImpulsePlayer_C_CheckDamage Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	if (bNoDamage != nullptr)
		*bNoDamage = Parms.bNoDamage;
}


// Function BP_AJBFirstBombImpulsePlayer.BP_AJBFirstBombImpulsePlayer_C.RequestActiveParticle
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBFirstBombImpulsePlayer_C::RequestActiveParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFirstBombImpulsePlayer_C", "RequestActiveParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBFirstBombImpulsePlayer.BP_AJBFirstBombImpulsePlayer_C.GetPoliticPassiveTagOnDamage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     PassiveTagOnDamage_0                                   (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBFirstBombImpulsePlayer_C::GetPoliticPassiveTagOnDamage(class AActor* DamagedActor, struct FGameplayTag* PassiveTagOnDamage_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFirstBombImpulsePlayer_C", "GetPoliticPassiveTagOnDamage");

	Params::BP_AJBFirstBombImpulsePlayer_C_GetPoliticPassiveTagOnDamage Parms{};

	Parms.DamagedActor = DamagedActor;

	UObject::ProcessEvent(Func, &Parms);

	if (PassiveTagOnDamage_0 != nullptr)
		*PassiveTagOnDamage_0 = std::move(Parms.PassiveTagOnDamage_0);
}


// Function BP_AJBFirstBombImpulsePlayer.BP_AJBFirstBombImpulsePlayer_C.ShouldDamageOverlap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bShouldOverlap                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBFirstBombImpulsePlayer_C::ShouldDamageOverlap(class AActor* DamagedActor, class AActor* DamageCauser, bool* bShouldOverlap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFirstBombImpulsePlayer_C", "ShouldDamageOverlap");

	Params::BP_AJBFirstBombImpulsePlayer_C_ShouldDamageOverlap Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldOverlap != nullptr)
		*bShouldOverlap = Parms.bShouldOverlap;
}

}


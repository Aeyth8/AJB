#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBVampireHealingSkill

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "AJB_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBVampireHealingSkill.BP_AJBVampireHealingSkill_C.ExecuteUbergraph_BP_AJBVampireHealingSkill
// 0x01B0 (0x01B0 - 0x0000)
struct BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Num;                                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue2;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue3;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectOnLocal_ParticleEffect; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue4;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character3;     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue1;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRemainMP_IsRemain;                      // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckNecessaryHealing_bNecessary;         // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B7[0x1];                                       // 0x00B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue5;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character4;     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue6;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character5;     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface; // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue7;           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue8;           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character6;     // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue1;      // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_133[0x5];                                      // 0x0133(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue9;           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character7;     // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1; // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_EffectiveValue;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Heal_bSuccess;                            // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Heal_HealValue;                           // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue10;          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character8;     // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue;           // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Num1;                                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill) == 0x000008, "Wrong alignment on BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill");
static_assert(sizeof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill) == 0x0001B0, "Wrong size on BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, EntryPoint) == 0x000000, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_Event_Num) == 0x000004, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_Event_Num' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, Temp_float_Variable) == 0x000008, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_Event_Operator) == 0x000010, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_Event_Time) == 0x000018, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_Event_Timing) == 0x00001C, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_Event_bEnable) == 0x00001D, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_Event_bOperatorIsEmpty) == 0x00001E, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000020, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_HasLocalSharedController_ReturnValue) == 0x000028, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_IsServer_ReturnValue) == 0x00002B, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_GetOwnerCharacter_ReturnValue1) == 0x000030, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_GetOwnerCharacter_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000038, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_GetOwnerCharacter_ReturnValue2) == 0x000048, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_GetOwnerCharacter_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000050, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_DynamicCast_bSuccess1) == 0x000058, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_IsValid_ReturnValue1) == 0x000059, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_Event_DeltaSeconds) == 0x00005C, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_GetOwnerCharacter_ReturnValue3) == 0x000068, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_GetOwnerCharacter_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000070, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x000078, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_DynamicCast_bSuccess2) == 0x000080, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_IsValid_ReturnValue2) == 0x000081, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_RequestParticleEffectOnLocal_ParticleEffect) == 0x000088, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_RequestParticleEffectOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, Temp_float_Variable1) == 0x000090, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_IsValid_ReturnValue3) == 0x000094, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_IsValid_ReturnValue4) == 0x000095, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000098, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_GetOwnerCharacter_ReturnValue4) == 0x0000A0, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_GetOwnerCharacter_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character3) == 0x0000A8, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character3' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_DynamicCast_bSuccess3) == 0x0000B0, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_IsServer_ReturnValue1) == 0x0000B1, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_IsServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_IsRemainMP_IsRemain) == 0x0000B2, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_IsRemainMP_IsRemain' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_CheckNecessaryHealing_bNecessary) == 0x0000B3, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_CheckNecessaryHealing_bNecessary' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, Temp_bool_Variable) == 0x0000B4, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_BooleanAND_ReturnValue1) == 0x0000B5, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_Not_PreBool_ReturnValue) == 0x0000B6, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_Select_Default) == 0x0000B8, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_GetOwnerCharacter_ReturnValue5) == 0x0000C0, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_GetOwnerCharacter_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character4) == 0x0000C8, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character4' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_DynamicCast_bSuccess4) == 0x0000D0, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_GetOwnerCharacter_ReturnValue6) == 0x0000D8, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_GetOwnerCharacter_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character5) == 0x0000E0, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character5' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_DynamicCast_bSuccess5) == 0x0000E8, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000E9, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface) == 0x0000F0, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_DynamicCast_bSuccess6) == 0x000100, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000101, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_GetOwnerCharacter_ReturnValue7) == 0x000108, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_GetOwnerCharacter_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_HasLocalSharedController_ReturnValue1) == 0x000110, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_IsValid_ReturnValue5) == 0x000111, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_GetOwnerCharacter_ReturnValue8) == 0x000118, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_GetOwnerCharacter_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_BooleanAND_ReturnValue2) == 0x000120, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character6) == 0x000128, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character6' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_DynamicCast_bSuccess7) == 0x000130, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000131, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_NearlyEqual_FloatFloat_ReturnValue1) == 0x000132, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_NearlyEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_GetOwnerCharacter_ReturnValue9) == 0x000138, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_GetOwnerCharacter_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character7) == 0x000140, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character7' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_DynamicCast_bSuccess8) == 0x000148, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1) == 0x000150, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_DynamicCast_bSuccess9) == 0x000160, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000164, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_CustomEvent_EffectiveValue) == 0x000168, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_CustomEvent_EffectiveValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_Round_ReturnValue) == 0x00016C, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_Heal_bSuccess) == 0x000170, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_Heal_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_Heal_HealValue) == 0x000174, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_Heal_HealValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_GetOwnerCharacter_ReturnValue10) == 0x000178, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_GetOwnerCharacter_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_Add_IntInt_ReturnValue) == 0x000180, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character8) == 0x000188, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character8' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_DynamicCast_bSuccess10) == 0x000190, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_Greater_IntInt_ReturnValue) == 0x000191, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_IsPlayerController_ReturnValue) == 0x000192, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_IsPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_BooleanAND_ReturnValue3) == 0x000193, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000198, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_IsDedicatedServer_ReturnValue1) == 0x0001A0, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, K2Node_Event_Num1) == 0x0001A4, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::K2Node_Event_Num1' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0001A8, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001AC, "Member 'BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBVampireHealingSkill.BP_AJBVampireHealingSkill_C.ROC_NotifyHealValue
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBVampireHealingSkill_C_ROC_NotifyHealValue final
{
public:
	int32                                         EffectiveValue;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBVampireHealingSkill_C_ROC_NotifyHealValue) == 0x000004, "Wrong alignment on BP_AJBVampireHealingSkill_C_ROC_NotifyHealValue");
static_assert(sizeof(BP_AJBVampireHealingSkill_C_ROC_NotifyHealValue) == 0x000004, "Wrong size on BP_AJBVampireHealingSkill_C_ROC_NotifyHealValue");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ROC_NotifyHealValue, EffectiveValue) == 0x000000, "Member 'BP_AJBVampireHealingSkill_C_ROC_NotifyHealValue::EffectiveValue' has a wrong offset!");

// Function BP_AJBVampireHealingSkill.BP_AJBVampireHealingSkill_C.CheckNecessaryHealing
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBVampireHealingSkill_C_CheckNecessaryHealing final
{
public:
	bool                                          bNecessary;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBVampireHealingSkill_C_CheckNecessaryHealing) == 0x000008, "Wrong alignment on BP_AJBVampireHealingSkill_C_CheckNecessaryHealing");
static_assert(sizeof(BP_AJBVampireHealingSkill_C_CheckNecessaryHealing) == 0x000020, "Wrong size on BP_AJBVampireHealingSkill_C_CheckNecessaryHealing");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_CheckNecessaryHealing, bNecessary) == 0x000000, "Member 'BP_AJBVampireHealingSkill_C_CheckNecessaryHealing::bNecessary' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_CheckNecessaryHealing, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000008, "Member 'BP_AJBVampireHealingSkill_C_CheckNecessaryHealing::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_CheckNecessaryHealing, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBVampireHealingSkill_C_CheckNecessaryHealing::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_CheckNecessaryHealing, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBVampireHealingSkill_C_CheckNecessaryHealing::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_CheckNecessaryHealing, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000019, "Member 'BP_AJBVampireHealingSkill_C_CheckNecessaryHealing::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBVampireHealingSkill.BP_AJBVampireHealingSkill_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBVampireHealingSkill_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBVampireHealingSkill_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBVampireHealingSkill_C_ReceiveTick");
static_assert(sizeof(BP_AJBVampireHealingSkill_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBVampireHealingSkill_C_ReceiveTick");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBVampireHealingSkill_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBVampireHealingSkill.BP_AJBVampireHealingSkill_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBVampireHealingSkill_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBVampireHealingSkill_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBVampireHealingSkill_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBVampireHealingSkill_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBVampireHealingSkill_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBVampireHealingSkill_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBVampireHealingSkill_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBVampireHealingSkill_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBVampireHealingSkill_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBVampireHealingSkill_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

// Function BP_AJBVampireHealingSkill.BP_AJBVampireHealingSkill_C.CanUseSkill
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBVampireHealingSkill_C_CanUseSkill final
{
public:
	struct FGameplayTagContainer                  TagContainer;                                      // 0x0000(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckNecessaryHealing_bNecessary;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_CanUseSkill_TagContainer;                 // 0x0028(0x0020)()
	bool                                          CallFunc_CanUseSkill_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBVampireHealingSkill_C_CanUseSkill) == 0x000008, "Wrong alignment on BP_AJBVampireHealingSkill_C_CanUseSkill");
static_assert(sizeof(BP_AJBVampireHealingSkill_C_CanUseSkill) == 0x000050, "Wrong size on BP_AJBVampireHealingSkill_C_CanUseSkill");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_CanUseSkill, TagContainer) == 0x000000, "Member 'BP_AJBVampireHealingSkill_C_CanUseSkill::TagContainer' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_CanUseSkill, ReturnValue) == 0x000020, "Member 'BP_AJBVampireHealingSkill_C_CanUseSkill::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_CanUseSkill, CallFunc_CheckNecessaryHealing_bNecessary) == 0x000021, "Member 'BP_AJBVampireHealingSkill_C_CanUseSkill::CallFunc_CheckNecessaryHealing_bNecessary' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_CanUseSkill, CallFunc_CanUseSkill_TagContainer) == 0x000028, "Member 'BP_AJBVampireHealingSkill_C_CanUseSkill::CallFunc_CanUseSkill_TagContainer' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_CanUseSkill, CallFunc_CanUseSkill_ReturnValue) == 0x000048, "Member 'BP_AJBVampireHealingSkill_C_CanUseSkill::CallFunc_CanUseSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_CanUseSkill, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'BP_AJBVampireHealingSkill_C_CanUseSkill::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBVampireHealingSkill.BP_AJBVampireHealingSkill_C.Increase_Local
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBVampireHealingSkill_C_Increase_Local final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBVampireHealingSkill_C_Increase_Local) == 0x000004, "Wrong alignment on BP_AJBVampireHealingSkill_C_Increase_Local");
static_assert(sizeof(BP_AJBVampireHealingSkill_C_Increase_Local) == 0x000004, "Wrong size on BP_AJBVampireHealingSkill_C_Increase_Local");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_Increase_Local, Num) == 0x000000, "Member 'BP_AJBVampireHealingSkill_C_Increase_Local::Num' has a wrong offset!");

// Function BP_AJBVampireHealingSkill.BP_AJBVampireHealingSkill_C.Increase_Server
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBVampireHealingSkill_C_Increase_Server final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBVampireHealingSkill_C_Increase_Server) == 0x000004, "Wrong alignment on BP_AJBVampireHealingSkill_C_Increase_Server");
static_assert(sizeof(BP_AJBVampireHealingSkill_C_Increase_Server) == 0x000004, "Wrong size on BP_AJBVampireHealingSkill_C_Increase_Server");
static_assert(offsetof(BP_AJBVampireHealingSkill_C_Increase_Server, Num) == 0x000000, "Member 'BP_AJBVampireHealingSkill_C_Increase_Server::Num' has a wrong offset!");

}


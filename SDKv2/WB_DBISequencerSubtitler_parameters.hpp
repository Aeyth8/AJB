#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_DBISequencerSubtitler

#include "Basic.hpp"


namespace SDK::Params
{

// Function WB_DBISequencerSubtitler.WB_DBISequencerSubtitler_C.ExecuteUbergraph_WB_DBISequencerSubtitler
// 0x0028 (0x0028 - 0x0000)
struct WB_DBISequencerSubtitler_C_ExecuteUbergraph_WB_DBISequencerSubtitler final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_InText;                         // 0x0008(0x0018)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_DBISequencerSubtitler_C_ExecuteUbergraph_WB_DBISequencerSubtitler) == 0x000008, "Wrong alignment on WB_DBISequencerSubtitler_C_ExecuteUbergraph_WB_DBISequencerSubtitler");
static_assert(sizeof(WB_DBISequencerSubtitler_C_ExecuteUbergraph_WB_DBISequencerSubtitler) == 0x000028, "Wrong size on WB_DBISequencerSubtitler_C_ExecuteUbergraph_WB_DBISequencerSubtitler");
static_assert(offsetof(WB_DBISequencerSubtitler_C_ExecuteUbergraph_WB_DBISequencerSubtitler, EntryPoint) == 0x000000, "Member 'WB_DBISequencerSubtitler_C_ExecuteUbergraph_WB_DBISequencerSubtitler::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_DBISequencerSubtitler_C_ExecuteUbergraph_WB_DBISequencerSubtitler, K2Node_CustomEvent_InText) == 0x000008, "Member 'WB_DBISequencerSubtitler_C_ExecuteUbergraph_WB_DBISequencerSubtitler::K2Node_CustomEvent_InText' has a wrong offset!");
static_assert(offsetof(WB_DBISequencerSubtitler_C_ExecuteUbergraph_WB_DBISequencerSubtitler, K2Node_Event_IsDesignTime) == 0x000020, "Member 'WB_DBISequencerSubtitler_C_ExecuteUbergraph_WB_DBISequencerSubtitler::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WB_DBISequencerSubtitler.WB_DBISequencerSubtitler_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_DBISequencerSubtitler_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_DBISequencerSubtitler_C_PreConstruct) == 0x000001, "Wrong alignment on WB_DBISequencerSubtitler_C_PreConstruct");
static_assert(sizeof(WB_DBISequencerSubtitler_C_PreConstruct) == 0x000001, "Wrong size on WB_DBISequencerSubtitler_C_PreConstruct");
static_assert(offsetof(WB_DBISequencerSubtitler_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_DBISequencerSubtitler_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_DBISequencerSubtitler.WB_DBISequencerSubtitler_C.SetSubtitle
// 0x0018 (0x0018 - 0x0000)
struct WB_DBISequencerSubtitler_C_SetSubtitle final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_DBISequencerSubtitler_C_SetSubtitle) == 0x000008, "Wrong alignment on WB_DBISequencerSubtitler_C_SetSubtitle");
static_assert(sizeof(WB_DBISequencerSubtitler_C_SetSubtitle) == 0x000018, "Wrong size on WB_DBISequencerSubtitler_C_SetSubtitle");
static_assert(offsetof(WB_DBISequencerSubtitler_C_SetSubtitle, InText) == 0x000000, "Member 'WB_DBISequencerSubtitler_C_SetSubtitle::InText' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBZipRushSkill

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_AJBZipRushSkill.BP_AJBZipRushSkill_C.ExecuteUbergraph_BP_AJBZipRushSkill
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bCancel;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bRestore;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_SFG_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_SFG;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill) == 0x000008, "Wrong alignment on BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill");
static_assert(sizeof(BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill) == 0x000038, "Wrong size on BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill");
static_assert(offsetof(BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill, EntryPoint) == 0x000000, "Member 'BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill, K2Node_Event_bCancel) == 0x000004, "Member 'BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill::K2Node_Event_bCancel' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill, K2Node_Event_bRestore) == 0x000005, "Member 'BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill::K2Node_Event_bRestore' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill, CallFunc_GetOwnerStand_ReturnValue) == 0x000008, "Member 'BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill::CallFunc_GetOwnerStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000010, "Member 'BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_SFG) == 0x000020, "Member 'BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_SFG' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill, K2Node_DynamicCast_bSuccess1) == 0x000028, "Member 'BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill, CallFunc_IsValid_ReturnValue1) == 0x00002A, "Member 'BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill, CallFunc_Not_PreBool_ReturnValue) == 0x00002B, "Member 'BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill, CallFunc_Percent_IntInt_ReturnValue) == 0x00002C, "Member 'BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_AJBZipRushSkill_C_ExecuteUbergraph_BP_AJBZipRushSkill::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBZipRushSkill.BP_AJBZipRushSkill_C.NextAttackArmIsR
// 0x000C (0x000C - 0x0000)
struct BP_AJBZipRushSkill_C_NextAttackArmIsR final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipRushSkill_C_NextAttackArmIsR) == 0x000004, "Wrong alignment on BP_AJBZipRushSkill_C_NextAttackArmIsR");
static_assert(sizeof(BP_AJBZipRushSkill_C_NextAttackArmIsR) == 0x00000C, "Wrong size on BP_AJBZipRushSkill_C_NextAttackArmIsR");
static_assert(offsetof(BP_AJBZipRushSkill_C_NextAttackArmIsR, Result) == 0x000000, "Member 'BP_AJBZipRushSkill_C_NextAttackArmIsR::Result' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_NextAttackArmIsR, CallFunc_Percent_IntInt_ReturnValue) == 0x000004, "Member 'BP_AJBZipRushSkill_C_NextAttackArmIsR::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_NextAttackArmIsR, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBZipRushSkill_C_NextAttackArmIsR::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBZipRushSkill.BP_AJBZipRushSkill_C.ChangeArmVisibility
// 0x0070 (0x0070 - 0x0000)
struct BP_AJBZipRushSkill_C_ChangeArmVisibility final
{
public:
	bool                                          bIsR;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsLaunching;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable1;                               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select1_Default;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBZipRushSkill_C_ChangeArmVisibility) == 0x000008, "Wrong alignment on BP_AJBZipRushSkill_C_ChangeArmVisibility");
static_assert(sizeof(BP_AJBZipRushSkill_C_ChangeArmVisibility) == 0x000070, "Wrong size on BP_AJBZipRushSkill_C_ChangeArmVisibility");
static_assert(offsetof(BP_AJBZipRushSkill_C_ChangeArmVisibility, bIsR) == 0x000000, "Member 'BP_AJBZipRushSkill_C_ChangeArmVisibility::bIsR' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ChangeArmVisibility, bIsLaunching) == 0x000001, "Member 'BP_AJBZipRushSkill_C_ChangeArmVisibility::bIsLaunching' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ChangeArmVisibility, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000004, "Member 'BP_AJBZipRushSkill_C_ChangeArmVisibility::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ChangeArmVisibility, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_AJBZipRushSkill_C_ChangeArmVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ChangeArmVisibility, CallFunc_GetOwnerStand_ReturnValue) == 0x000010, "Member 'BP_AJBZipRushSkill_C_ChangeArmVisibility::CallFunc_GetOwnerStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ChangeArmVisibility, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000018, "Member 'BP_AJBZipRushSkill_C_ChangeArmVisibility::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ChangeArmVisibility, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBZipRushSkill_C_ChangeArmVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ChangeArmVisibility, Temp_bool_Variable) == 0x000021, "Member 'BP_AJBZipRushSkill_C_ChangeArmVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ChangeArmVisibility, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AJBZipRushSkill_C_ChangeArmVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ChangeArmVisibility, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_AJBZipRushSkill_C_ChangeArmVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ChangeArmVisibility, Temp_name_Variable) == 0x000038, "Member 'BP_AJBZipRushSkill_C_ChangeArmVisibility::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ChangeArmVisibility, Temp_name_Variable1) == 0x000040, "Member 'BP_AJBZipRushSkill_C_ChangeArmVisibility::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ChangeArmVisibility, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_AJBZipRushSkill_C_ChangeArmVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ChangeArmVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_AJBZipRushSkill_C_ChangeArmVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ChangeArmVisibility, K2Node_Select_Default) == 0x000050, "Member 'BP_AJBZipRushSkill_C_ChangeArmVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ChangeArmVisibility, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000058, "Member 'BP_AJBZipRushSkill_C_ChangeArmVisibility::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ChangeArmVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_AJBZipRushSkill_C_ChangeArmVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ChangeArmVisibility, Temp_bool_Variable1) == 0x000064, "Member 'BP_AJBZipRushSkill_C_ChangeArmVisibility::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ChangeArmVisibility, K2Node_Select1_Default) == 0x000068, "Member 'BP_AJBZipRushSkill_C_ChangeArmVisibility::K2Node_Select1_Default' has a wrong offset!");

// Function BP_AJBZipRushSkill.BP_AJBZipRushSkill_C.ChangeArmsVisibility
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBZipRushSkill_C_ChangeArmsVisibility final
{
public:
	bool                                          bLeftArmIsLaunching;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRightArmIsLaunching;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipRushSkill_C_ChangeArmsVisibility) == 0x000001, "Wrong alignment on BP_AJBZipRushSkill_C_ChangeArmsVisibility");
static_assert(sizeof(BP_AJBZipRushSkill_C_ChangeArmsVisibility) == 0x000002, "Wrong size on BP_AJBZipRushSkill_C_ChangeArmsVisibility");
static_assert(offsetof(BP_AJBZipRushSkill_C_ChangeArmsVisibility, bLeftArmIsLaunching) == 0x000000, "Member 'BP_AJBZipRushSkill_C_ChangeArmsVisibility::bLeftArmIsLaunching' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_ChangeArmsVisibility, bRightArmIsLaunching) == 0x000001, "Member 'BP_AJBZipRushSkill_C_ChangeArmsVisibility::bRightArmIsLaunching' has a wrong offset!");

// Function BP_AJBZipRushSkill.BP_AJBZipRushSkill_C.OnEndState
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBZipRushSkill_C_OnEndState final
{
public:
	bool                                          bCancel;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRestore;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipRushSkill_C_OnEndState) == 0x000001, "Wrong alignment on BP_AJBZipRushSkill_C_OnEndState");
static_assert(sizeof(BP_AJBZipRushSkill_C_OnEndState) == 0x000002, "Wrong size on BP_AJBZipRushSkill_C_OnEndState");
static_assert(offsetof(BP_AJBZipRushSkill_C_OnEndState, bCancel) == 0x000000, "Member 'BP_AJBZipRushSkill_C_OnEndState::bCancel' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_OnEndState, bRestore) == 0x000001, "Member 'BP_AJBZipRushSkill_C_OnEndState::bRestore' has a wrong offset!");

// Function BP_AJBZipRushSkill.BP_AJBZipRushSkill_C.TryGetDamageActor
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBZipRushSkill_C_TryGetDamageActor final
{
public:
	class ABP_AJBDamageActor_C*                   DamageActor_0;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBDamageActor_C*                   CallFunc_TryGetDamageActor_DamageActor;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCloseRangeLaunchedActor_LaunchedActor; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBZipRushSkill_C_TryGetDamageActor) == 0x000008, "Wrong alignment on BP_AJBZipRushSkill_C_TryGetDamageActor");
static_assert(sizeof(BP_AJBZipRushSkill_C_TryGetDamageActor) == 0x000048, "Wrong size on BP_AJBZipRushSkill_C_TryGetDamageActor");
static_assert(offsetof(BP_AJBZipRushSkill_C_TryGetDamageActor, DamageActor_0) == 0x000000, "Member 'BP_AJBZipRushSkill_C_TryGetDamageActor::DamageActor_0' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_TryGetDamageActor, CallFunc_GetOwnerStand_ReturnValue) == 0x000008, "Member 'BP_AJBZipRushSkill_C_TryGetDamageActor::CallFunc_GetOwnerStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_TryGetDamageActor, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000010, "Member 'BP_AJBZipRushSkill_C_TryGetDamageActor::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_TryGetDamageActor, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBZipRushSkill_C_TryGetDamageActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_TryGetDamageActor, CallFunc_TryGetDamageActor_DamageActor) == 0x000020, "Member 'BP_AJBZipRushSkill_C_TryGetDamageActor::CallFunc_TryGetDamageActor_DamageActor' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_TryGetDamageActor, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface) == 0x000028, "Member 'BP_AJBZipRushSkill_C_TryGetDamageActor::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_TryGetDamageActor, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'BP_AJBZipRushSkill_C_TryGetDamageActor::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipRushSkill_C_TryGetDamageActor, CallFunc_GetCloseRangeLaunchedActor_LaunchedActor) == 0x000040, "Member 'BP_AJBZipRushSkill_C_TryGetDamageActor::CallFunc_GetCloseRangeLaunchedActor_LaunchedActor' has a wrong offset!");

}


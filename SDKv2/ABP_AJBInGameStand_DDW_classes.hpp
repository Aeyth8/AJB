#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_AJBInGameStand_DDW

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_AJBInGameStand_DDW.ABP_AJBInGameStand_DDW_C
// 0x0438 (0x0790 - 0x0358)
class UABP_AJBInGameStand_DDW_C final : public UAnimInstance
{
public:
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_B67411F3412DEA9E78A53282C3D6CCA8; // 0x0368(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2925122047B47CF9D9D5A6BE5BD56555; // 0x03B0(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6C24AD694AD35B6E36D616A34FC242E3; // 0x03F8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_FCCCA3EC415FC74E4B0846802C7A21B0; // 0x0440(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_StateResult_1FDC82034B37FF27627AA8946F619609; // 0x04F0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_B9E6F8C540477E13EB203DA5602B97AD; // 0x0538(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_StateResult_D2492F8143F8CD151F2FF88D317A6CB6; // 0x05E8(0x0048)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_368758094A98DE256712909B4840157F; // 0x0630(0x00E0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_25F478DF4C01D75E1F2F20BA79B0943F; // 0x0710(0x0070)()
	bool                                          bIsOwnerMove;                                      // 0x0780(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_781[0x3];                                      // 0x0781(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OwnerMovementRate;                                 // 0x0784(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveRate;                                          // 0x0788(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_AJBInGameStand_DDW(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBInGameStand_DDW_AnimGraphNode_TransitionResult_6C24AD694AD35B6E36D616A34FC242E3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBInGameStand_DDW_AnimGraphNode_TransitionResult_2925122047B47CF9D9D5A6BE5BD56555();
	void CanOwnerMove(bool* bCanMove);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_AJBInGameStand_DDW_C">();
	}
	static class UABP_AJBInGameStand_DDW_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_AJBInGameStand_DDW_C>();
	}
};
static_assert(alignof(UABP_AJBInGameStand_DDW_C) == 0x000008, "Wrong alignment on UABP_AJBInGameStand_DDW_C");
static_assert(sizeof(UABP_AJBInGameStand_DDW_C) == 0x000790, "Wrong size on UABP_AJBInGameStand_DDW_C");
static_assert(offsetof(UABP_AJBInGameStand_DDW_C, UberGraphFrame) == 0x000360, "Member 'UABP_AJBInGameStand_DDW_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_DDW_C, AnimGraphNode_Root_B67411F3412DEA9E78A53282C3D6CCA8) == 0x000368, "Member 'UABP_AJBInGameStand_DDW_C::AnimGraphNode_Root_B67411F3412DEA9E78A53282C3D6CCA8' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_DDW_C, AnimGraphNode_TransitionResult_2925122047B47CF9D9D5A6BE5BD56555) == 0x0003B0, "Member 'UABP_AJBInGameStand_DDW_C::AnimGraphNode_TransitionResult_2925122047B47CF9D9D5A6BE5BD56555' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_DDW_C, AnimGraphNode_TransitionResult_6C24AD694AD35B6E36D616A34FC242E3) == 0x0003F8, "Member 'UABP_AJBInGameStand_DDW_C::AnimGraphNode_TransitionResult_6C24AD694AD35B6E36D616A34FC242E3' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_DDW_C, AnimGraphNode_SequencePlayer_FCCCA3EC415FC74E4B0846802C7A21B0) == 0x000440, "Member 'UABP_AJBInGameStand_DDW_C::AnimGraphNode_SequencePlayer_FCCCA3EC415FC74E4B0846802C7A21B0' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_DDW_C, AnimGraphNode_StateResult_1FDC82034B37FF27627AA8946F619609) == 0x0004F0, "Member 'UABP_AJBInGameStand_DDW_C::AnimGraphNode_StateResult_1FDC82034B37FF27627AA8946F619609' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_DDW_C, AnimGraphNode_SequencePlayer_B9E6F8C540477E13EB203DA5602B97AD) == 0x000538, "Member 'UABP_AJBInGameStand_DDW_C::AnimGraphNode_SequencePlayer_B9E6F8C540477E13EB203DA5602B97AD' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_DDW_C, AnimGraphNode_StateResult_D2492F8143F8CD151F2FF88D317A6CB6) == 0x0005E8, "Member 'UABP_AJBInGameStand_DDW_C::AnimGraphNode_StateResult_D2492F8143F8CD151F2FF88D317A6CB6' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_DDW_C, AnimGraphNode_StateMachine_368758094A98DE256712909B4840157F) == 0x000630, "Member 'UABP_AJBInGameStand_DDW_C::AnimGraphNode_StateMachine_368758094A98DE256712909B4840157F' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_DDW_C, AnimGraphNode_Slot_25F478DF4C01D75E1F2F20BA79B0943F) == 0x000710, "Member 'UABP_AJBInGameStand_DDW_C::AnimGraphNode_Slot_25F478DF4C01D75E1F2F20BA79B0943F' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_DDW_C, bIsOwnerMove) == 0x000780, "Member 'UABP_AJBInGameStand_DDW_C::bIsOwnerMove' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_DDW_C, OwnerMovementRate) == 0x000784, "Member 'UABP_AJBInGameStand_DDW_C::OwnerMovementRate' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_DDW_C, MoveRate) == 0x000788, "Member 'UABP_AJBInGameStand_DDW_C::MoveRate' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_RoomSelect_PairDecisionWindow

#include "Basic.hpp"


namespace SDK::Params
{

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.ExecuteUbergraph_WB_RoomSelect_PairDecisionWindow
// 0x0060 (0x0060 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_ExecuteUbergraph_WB_RoomSelect_PairDecisionWindow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_IconID;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PlayerLevel;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_PlayerName;                     // 0x0020(0x0018)()
	class FText                                   K2Node_CustomEvent_PlayerTitle;                    // 0x0038(0x0018)()
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent1;    // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_ExecuteUbergraph_WB_RoomSelect_PairDecisionWindow) == 0x000008, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_ExecuteUbergraph_WB_RoomSelect_PairDecisionWindow");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_ExecuteUbergraph_WB_RoomSelect_PairDecisionWindow) == 0x000060, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_ExecuteUbergraph_WB_RoomSelect_PairDecisionWindow");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_ExecuteUbergraph_WB_RoomSelect_PairDecisionWindow, EntryPoint) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_ExecuteUbergraph_WB_RoomSelect_PairDecisionWindow::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_ExecuteUbergraph_WB_RoomSelect_PairDecisionWindow, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WB_RoomSelect_PairDecisionWindow_C_ExecuteUbergraph_WB_RoomSelect_PairDecisionWindow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_ExecuteUbergraph_WB_RoomSelect_PairDecisionWindow, K2Node_CustomEvent_IconID) == 0x000018, "Member 'WB_RoomSelect_PairDecisionWindow_C_ExecuteUbergraph_WB_RoomSelect_PairDecisionWindow::K2Node_CustomEvent_IconID' has a wrong offset!");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_ExecuteUbergraph_WB_RoomSelect_PairDecisionWindow, K2Node_CustomEvent_PlayerLevel) == 0x00001C, "Member 'WB_RoomSelect_PairDecisionWindow_C_ExecuteUbergraph_WB_RoomSelect_PairDecisionWindow::K2Node_CustomEvent_PlayerLevel' has a wrong offset!");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_ExecuteUbergraph_WB_RoomSelect_PairDecisionWindow, K2Node_CustomEvent_PlayerName) == 0x000020, "Member 'WB_RoomSelect_PairDecisionWindow_C_ExecuteUbergraph_WB_RoomSelect_PairDecisionWindow::K2Node_CustomEvent_PlayerName' has a wrong offset!");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_ExecuteUbergraph_WB_RoomSelect_PairDecisionWindow, K2Node_CustomEvent_PlayerTitle) == 0x000038, "Member 'WB_RoomSelect_PairDecisionWindow_C_ExecuteUbergraph_WB_RoomSelect_PairDecisionWindow::K2Node_CustomEvent_PlayerTitle' has a wrong offset!");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_ExecuteUbergraph_WB_RoomSelect_PairDecisionWindow, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000050, "Member 'WB_RoomSelect_PairDecisionWindow_C_ExecuteUbergraph_WB_RoomSelect_PairDecisionWindow::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_ExecuteUbergraph_WB_RoomSelect_PairDecisionWindow, CallFunc_RequestWwiseEventOnLocal_AkComponent1) == 0x000058, "Member 'WB_RoomSelect_PairDecisionWindow_C_ExecuteUbergraph_WB_RoomSelect_PairDecisionWindow::CallFunc_RequestWwiseEventOnLocal_AkComponent1' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.Setup
// 0x0038 (0x0038 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_Setup final
{
public:
	int32                                         IconID;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerLevel;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   PlayerName;                                        // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   PlayerTitle;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_Setup) == 0x000008, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_Setup");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_Setup) == 0x000038, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_Setup");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_Setup, IconID) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_Setup::IconID' has a wrong offset!");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_Setup, PlayerLevel) == 0x000004, "Member 'WB_RoomSelect_PairDecisionWindow_C_Setup::PlayerLevel' has a wrong offset!");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_Setup, PlayerName) == 0x000008, "Member 'WB_RoomSelect_PairDecisionWindow_C_Setup::PlayerName' has a wrong offset!");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_Setup, PlayerTitle) == 0x000020, "Member 'WB_RoomSelect_PairDecisionWindow_C_Setup::PlayerTitle' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputTurnRate
// 0x0008 (0x0008 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputTurnRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputTurnRate) == 0x000004, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputTurnRate");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputTurnRate) == 0x000008, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputTurnRate");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputTurnRate, Value) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputTurnRate::Value' has a wrong offset!");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputTurnRate, ReturnValue) == 0x000004, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputTurnRate::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputReleasedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedUp) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedUp");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedUp) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedUp");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedUp, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedUp::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputReleasedTouch
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedTouch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedTouch) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedTouch");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedTouch) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedTouch");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedTouch, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedTouch::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputReleasedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedRight) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedRight");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedRight) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedRight");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedRight, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedRight::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputReleasedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedLeft) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedLeft");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedLeft) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedLeft");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedLeft, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedLeft::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputReleasedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedDown) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedDown");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedDown) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedDown");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedDown, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedDown::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputReleasedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedDecide) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedDecide");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedDecide) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedDecide");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedDecide, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedDecide::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputReleasedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedCancel) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedCancel");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedCancel) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedCancel");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedCancel, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedCancel::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputPressedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputPressedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedUp) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedUp");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedUp) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedUp");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedUp, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputPressedUp::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputPressedTouch
// 0x000C (0x000C - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputPressedTouch final
{
public:
	float                                         LocationX;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocationY;                                         // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedTouch) == 0x000004, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedTouch");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedTouch) == 0x00000C, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedTouch");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedTouch, LocationX) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputPressedTouch::LocationX' has a wrong offset!");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedTouch, LocationY) == 0x000004, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputPressedTouch::LocationY' has a wrong offset!");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedTouch, ReturnValue) == 0x000008, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputPressedTouch::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputPressedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputPressedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedRight) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedRight");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedRight) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedRight");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedRight, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputPressedRight::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputPressedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputPressedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedLeft) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedLeft");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedLeft) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedLeft");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedLeft, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputPressedLeft::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputPressedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputPressedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedDown) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedDown");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedDown) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedDown");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedDown, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputPressedDown::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputPressedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputPressedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedDecide) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedDecide");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedDecide) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedDecide");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedDecide, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputPressedDecide::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputPressedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputPressedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedCancel) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedCancel");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedCancel) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedCancel");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedCancel, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputPressedCancel::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputMoveRight
// 0x0008 (0x0008 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputMoveRight final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputMoveRight) == 0x000004, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputMoveRight");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputMoveRight) == 0x000008, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputMoveRight");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputMoveRight, Value) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputMoveRight::Value' has a wrong offset!");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputMoveRight, ReturnValue) == 0x000004, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputMoveRight::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputMoveForward
// 0x0008 (0x0008 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputMoveForward final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputMoveForward) == 0x000004, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputMoveForward");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputMoveForward) == 0x000008, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputMoveForward");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputMoveForward, Value) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputMoveForward::Value' has a wrong offset!");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputMoveForward, ReturnValue) == 0x000004, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputMoveForward::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputLookupRate
// 0x0008 (0x0008 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputLookupRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputLookupRate) == 0x000004, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputLookupRate");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputLookupRate) == 0x000008, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputLookupRate");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputLookupRate, Value) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputLookupRate::Value' has a wrong offset!");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputLookupRate, ReturnValue) == 0x000004, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputLookupRate::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.IsModeless
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_IsModeless final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_IsModeless) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_IsModeless");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_IsModeless) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_IsModeless");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_IsModeless, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_IsModeless::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputReleasedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedR2) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedR2");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedR2) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedR2");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedR2, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedR2::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputReleasedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedR1) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedR1");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedR1) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedR1");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedR1, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedR1::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputReleasedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedL2) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedL2");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedL2) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedL2");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedL2, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedL2::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputReleasedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedL1) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedL1");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedL1) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedL1");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedL1, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedL1::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputPressedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputPressedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedR2) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedR2");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedR2) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedR2");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedR2, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputPressedR2::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputPressedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputPressedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedR1) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedR1");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedR1) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedR1");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedR1, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputPressedR1::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputPressedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputPressedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedL2) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedL2");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedL2) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedL2");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedL2, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputPressedL2::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputPressedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputPressedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedL1) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedL1");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedL1) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedL1");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedL1, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputPressedL1::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputReleasedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedL3) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedL3");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedL3) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedL3");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedL3, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputReleasedL3::ReturnValue' has a wrong offset!");

// Function WB_RoomSelect_PairDecisionWindow.WB_RoomSelect_PairDecisionWindow_C.OnInputPressedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_RoomSelect_PairDecisionWindow_C_OnInputPressedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedL3) == 0x000001, "Wrong alignment on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedL3");
static_assert(sizeof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedL3) == 0x000001, "Wrong size on WB_RoomSelect_PairDecisionWindow_C_OnInputPressedL3");
static_assert(offsetof(WB_RoomSelect_PairDecisionWindow_C_OnInputPressedL3, ReturnValue) == 0x000000, "Member 'WB_RoomSelect_PairDecisionWindow_C_OnInputPressedL3::ReturnValue' has a wrong offset!");

}


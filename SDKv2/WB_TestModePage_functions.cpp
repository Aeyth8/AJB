#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TestModePage

#include "Basic.hpp"

#include "WB_TestModePage_classes.hpp"
#include "WB_TestModePage_parameters.hpp"


namespace SDK
{

// Function WB_TestModePage.WB_TestModePage_C.ExecuteUbergraph_WB_TestModePage
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TestModePage_C::ExecuteUbergraph_WB_TestModePage(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "ExecuteUbergraph_WB_TestModePage");

	Params::WB_TestModePage_C_ExecuteUbergraph_WB_TestModePage Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TestModePage.WB_TestModePage_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_TestModePage_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "PreConstruct");

	Params::WB_TestModePage_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TestModePage.WB_TestModePage_C.SetFocusMenuItem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SelectItemMenu                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TestModePage_C::SetFocusMenuItem(class FName SelectItemMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "SetFocusMenuItem");

	Params::WB_TestModePage_C_SetFocusMenuItem Parms{};

	Parms.SelectItemMenu = SelectItemMenu;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TestModePage.WB_TestModePage_C.OnCancel
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_TestModePage_C::OnCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "OnCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TestModePage.WB_TestModePage_C.OnDecide
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_TestModePage_C::OnDecide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "OnDecide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TestModePage.WB_TestModePage_C.OnPrev
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_TestModePage_C::OnPrev()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "OnPrev");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TestModePage.WB_TestModePage_C.OnNext
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_TestModePage_C::OnNext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "OnNext");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TestModePage.WB_TestModePage_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_TestModePage_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TestModePage.WB_TestModePage_C.CreateMenuItemInteger
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Label                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DefaultValue                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ValueMin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ValueMax                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLoop                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   InValueOffsetX                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_TestModeMenuItemInteger_C*    MenuItem                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TestModePage_C::CreateMenuItemInteger(const class FText& Label, int32 Value, int32 DefaultValue, int32 ValueMin, int32 ValueMax, bool IsLoop, float InValueOffsetX, class UWB_TestModeMenuItemInteger_C** MenuItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "CreateMenuItemInteger");

	Params::WB_TestModePage_C_CreateMenuItemInteger Parms{};

	Parms.Label = std::move(Label);
	Parms.Value = Value;
	Parms.DefaultValue = DefaultValue;
	Parms.ValueMin = ValueMin;
	Parms.ValueMax = ValueMax;
	Parms.IsLoop = IsLoop;
	Parms.InValueOffsetX = InValueOffsetX;

	UObject::ProcessEvent(Func, &Parms);

	if (MenuItem != nullptr)
		*MenuItem = Parms.MenuItem;
}


// Function WB_TestModePage.WB_TestModePage_C.CreateMenuItemSelectText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Label                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// TArray<class FText>                     SelectText                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int32                                   SelectIndex_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DefaultIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLoop                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bAlignRight                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   ValueOffsetX_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_TestModeMenuItemSelectText_C* MenuItem                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TestModePage_C::CreateMenuItemSelectText(const class FText& Label, TArray<class FText>& SelectText, int32 SelectIndex_0, int32 DefaultIndex, bool IsLoop, bool bAlignRight, float ValueOffsetX_0, class UWB_TestModeMenuItemSelectText_C** MenuItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "CreateMenuItemSelectText");

	Params::WB_TestModePage_C_CreateMenuItemSelectText Parms{};

	Parms.Label = std::move(Label);
	Parms.SelectText = std::move(SelectText);
	Parms.SelectIndex_0 = SelectIndex_0;
	Parms.DefaultIndex = DefaultIndex;
	Parms.IsLoop = IsLoop;
	Parms.bAlignRight = bAlignRight;
	Parms.ValueOffsetX_0 = ValueOffsetX_0;

	UObject::ProcessEvent(Func, &Parms);

	SelectText = std::move(Parms.SelectText);

	if (MenuItem != nullptr)
		*MenuItem = Parms.MenuItem;
}


// Function WB_TestModePage.WB_TestModePage_C.CreateMenuItemOpenPage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             OpenPage                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Label                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class UWB_TestModeMenuItemOpenPage_C*   MenuItem                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TestModePage_C::CreateMenuItemOpenPage(class FName OpenPage, const class FText& Label, class UWB_TestModeMenuItemOpenPage_C** MenuItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "CreateMenuItemOpenPage");

	Params::WB_TestModePage_C_CreateMenuItemOpenPage Parms{};

	Parms.OpenPage = OpenPage;
	Parms.Label = std::move(Label);

	UObject::ProcessEvent(Func, &Parms);

	if (MenuItem != nullptr)
		*MenuItem = Parms.MenuItem;
}


// Function WB_TestModePage.WB_TestModePage_C.FindFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TestModePage_C::FindFocus(class FName InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "FindFocus");

	Params::WB_TestModePage_C_FindFocus Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TestModePage.WB_TestModePage_C.MoveFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsNext                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_TestModePage_C::MoveFocus(bool bIsNext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "MoveFocus");

	Params::WB_TestModePage_C_MoveFocus Parms{};

	Parms.bIsNext = bIsNext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TestModePage.WB_TestModePage_C.CreateMenuItemButton
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Label                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class UWB_TestModeMenuItemBase_C*       MenuItem                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TestModePage_C::CreateMenuItemButton(const class FText& Label, class UWB_TestModeMenuItemBase_C** MenuItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "CreateMenuItemButton");

	Params::WB_TestModePage_C_CreateMenuItemButton Parms{};

	Parms.Label = std::move(Label);

	UObject::ProcessEvent(Func, &Parms);

	if (MenuItem != nullptr)
		*MenuItem = Parms.MenuItem;
}


// Function WB_TestModePage.WB_TestModePage_C.AddMenuItemWidget
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      AddWidget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TestModePage_C::AddMenuItemWidget(class UUserWidget* AddWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "AddMenuItemWidget");

	Params::WB_TestModePage_C_AddMenuItemWidget Parms{};

	Parms.AddWidget = AddWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TestModePage.WB_TestModePage_C.CreateMenuItemExit
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWB_TestModeMenuItemOpenPage_C*   MenuItem                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TestModePage_C::CreateMenuItemExit(class UWB_TestModeMenuItemOpenPage_C** MenuItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "CreateMenuItemExit");

	Params::WB_TestModePage_C_CreateMenuItemExit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MenuItem != nullptr)
		*MenuItem = Parms.MenuItem;
}


// Function WB_TestModePage.WB_TestModePage_C.SetOtherMenuItemsCanSelect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          BaseMenuItem                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCanSelect                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_TestModePage_C::SetOtherMenuItemsCanSelect(class UObject* BaseMenuItem, bool bCanSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "SetOtherMenuItemsCanSelect");

	Params::WB_TestModePage_C_SetOtherMenuItemsCanSelect Parms{};

	Parms.BaseMenuItem = BaseMenuItem;
	Parms.bCanSelect = bCanSelect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TestModePage.WB_TestModePage_C.CreateReadOnlyLabel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FST_TestModeText                 LabelData                                              (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// float                                   ValueOffset                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   IndentOffset                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_AJBTestModeReadOnlyValue_C*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWB_AJBTestModeReadOnlyValue_C* UWB_TestModePage_C::CreateReadOnlyLabel(const struct FST_TestModeText& LabelData, float ValueOffset, float IndentOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "CreateReadOnlyLabel");

	Params::WB_TestModePage_C_CreateReadOnlyLabel Parms{};

	Parms.LabelData = std::move(LabelData);
	Parms.ValueOffset = ValueOffset;
	Parms.IndentOffset = IndentOffset;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_TestModePage.WB_TestModePage_C.AddSpaceLine
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LineNum                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TestModePage_C::AddSpaceLine(int32 LineNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "AddSpaceLine");

	Params::WB_TestModePage_C_AddSpaceLine Parms{};

	Parms.LineNum = LineNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TestModePage.WB_TestModePage_C.CreateMenuItemLockButton
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Label                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// float                                   StatusOffsetX                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_TestModeMenuItem_StatusLockButton_C*MenuItem                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TestModePage_C::CreateMenuItemLockButton(const class FText& Label, float StatusOffsetX, class UWB_TestModeMenuItem_StatusLockButton_C** MenuItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "CreateMenuItemLockButton");

	Params::WB_TestModePage_C_CreateMenuItemLockButton Parms{};

	Parms.Label = std::move(Label);
	Parms.StatusOffsetX = StatusOffsetX;

	UObject::ProcessEvent(Func, &Parms);

	if (MenuItem != nullptr)
		*MenuItem = Parms.MenuItem;
}


// Function WB_TestModePage.WB_TestModePage_C.AddFooterText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FST_TestModeText>         TextData                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// EHorizontalAlignment                    InHorizontalAlignment                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EVerticalAlignment                      InVerticalAlignment                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_AJBTestModeText_C*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWB_AJBTestModeText_C* UWB_TestModePage_C::AddFooterText(TArray<struct FST_TestModeText>& TextData, EHorizontalAlignment InHorizontalAlignment, EVerticalAlignment InVerticalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "AddFooterText");

	Params::WB_TestModePage_C_AddFooterText Parms{};

	Parms.TextData = std::move(TextData);
	Parms.InHorizontalAlignment = InHorizontalAlignment;
	Parms.InVerticalAlignment = InVerticalAlignment;

	UObject::ProcessEvent(Func, &Parms);

	TextData = std::move(Parms.TextData);

	return Parms.ReturnValue;
}


// Function WB_TestModePage.WB_TestModePage_C.CreateMenuItemDummyExit
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWB_TestModeMenuItemOpenPage_C*   MenuItem                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TestModePage_C::CreateMenuItemDummyExit(class UWB_TestModeMenuItemOpenPage_C** MenuItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "CreateMenuItemDummyExit");

	Params::WB_TestModePage_C_CreateMenuItemDummyExit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MenuItem != nullptr)
		*MenuItem = Parms.MenuItem;
}


// Function WB_TestModePage.WB_TestModePage_C.IsLock
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_TestModePage_C::IsLock(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModePage_C", "IsLock");

	Params::WB_TestModePage_C_IsLock Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


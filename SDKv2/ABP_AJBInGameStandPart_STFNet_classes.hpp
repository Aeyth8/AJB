#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_AJBInGameStandPart_STFNet

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_AJBInGameStandPart_STFNet.ABP_AJBInGameStandPart_STFNet_C
// 0x0DA0 (0x10F8 - 0x0358)
class UABP_AJBInGameStandPart_STFNet_C final : public UAnimInstance
{
public:
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(Transient, DuplicateTransient)
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_5EE31B4F443B537725A162AAAA4F3E46; // 0x0368(0x0048)()
	struct FAnimNode_SplineIK                     AnimGraphNode_SplineIK_021AA7DB4AAC87561CC4CBBF63C3E280; // 0x03B0(0x02B8)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose_FF5BC4104995E1107D2B6D922B7474C8; // 0x0668(0x0038)()
	struct FAnimNode_Root                         AnimGraphNode_Root_F9B13ECF4D9CED05729C33AD92799A3B; // 0x06A0(0x0048)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_5E3DD24046609A5FFF4793BD16F344BB; // 0x06E8(0x0048)()
	struct FAnimNode_BlendBoneByChannel           AnimGraphNode_BlendBoneByChannel_85498669424E37673A44FA8806902C06; // 0x0730(0x00A0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_D1A57D7F439EC2997DC85697B452F189; // 0x07D0(0x0160)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_245EB66F4E70777E162368A7C1B37A8B; // 0x0930(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_E3B1F0B6488C26522FA472B858846A08; // 0x0978(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25B6260C4B8FEC1914465E8093BD2028; // 0x09C0(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_F63BC23A400E124D7C2064B9604863AA; // 0x0A08(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_351290DC41924B8FBE3E5B96AF2DDAFA; // 0x0A50(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_StateResult_1D613737480B1E566DB13492E59ABD58; // 0x0B00(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_558A93764B2CF16E08F51687D5124404; // 0x0B48(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_StateResult_3DEAB93E4474EFBACDD0F4A6C4D96692; // 0x0BF8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_DB8823AD4FBCAFDEB0C56C97FC65ED0A; // 0x0C40(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_StateResult_0FAE602B470387C1E2A91E91B22CBFE2; // 0x0CF0(0x0048)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_FCE471564AB6625467A5F587CDC290EC; // 0x0D38(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4FE7F51345BA20F55E5A609ACCD98BFA; // 0x0D80(0x0160)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_084F471F455F77F9FBA5E6900ED52B9E; // 0x0EE0(0x0048)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose_39EBAF7B4382BE2586BE97B5F1F19D60; // 0x0F28(0x0038)()
	struct FAnimNode_Root                         AnimGraphNode_StateResult_0B90F5964A312E655908C2B3B15428DC; // 0x0F60(0x0048)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_055180D7498313D172C61FAAEAC2162D; // 0x0FA8(0x00E0)()
	class UBP_AJBStringJailSkill_C*               StringJail;                                        // 0x1088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x1090(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SplinePointComponentLocationOffset;                // 0x109C(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxFluctuationLength_cm_;                          // 0x10A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10AC[0x4];                                     // 0x10AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        SplinePointOriginComponentLocation;                // 0x10B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          bDebugView;                                        // 0x10C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10C1[0x7];                                     // 0x10C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     SplinePointComponentTransforms;                    // 0x10C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FRotator                               NewVar_0;                                          // 0x10D8(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ActiveTime;                                        // 0x10E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          NewVar_1;                                          // 0x10E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkillState_CloseRange                        SkillState;                                        // 0x10F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10F1[0x3];                                     // 0x10F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HitLengthAlpha;                                    // 0x10F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBInGameStandPart_STFNet_AnimGraphNode_TransitionResult_25B6260C4B8FEC1914465E8093BD2028();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBInGameStandPart_STFNet_AnimGraphNode_SequencePlayer_351290DC41924B8FBE3E5B96AF2DDAFA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBInGameStandPart_STFNet_AnimGraphNode_TransitionResult_F63BC23A400E124D7C2064B9604863AA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBInGameStandPart_STFNet_AnimGraphNode_TransitionResult_245EB66F4E70777E162368A7C1B37A8B();
	void ExecuteUbergraph_ABP_AJBInGameStandPart_STFNet(int32 EntryPoint);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBInGameStandPart_STFNet_AnimGraphNode_TransitionResult_E3B1F0B6488C26522FA472B858846A08();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBInGameStandPart_STFNet_AnimGraphNode_SplineIK_021AA7DB4AAC87561CC4CBBF63C3E280();
	void TryGetStringJailSkill(class UBP_AJBStringJailSkill_C** StringJail_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_AJBInGameStandPart_STFNet_C">();
	}
	static class UABP_AJBInGameStandPart_STFNet_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_AJBInGameStandPart_STFNet_C>();
	}
};
static_assert(alignof(UABP_AJBInGameStandPart_STFNet_C) == 0x000008, "Wrong alignment on UABP_AJBInGameStandPart_STFNet_C");
static_assert(sizeof(UABP_AJBInGameStandPart_STFNet_C) == 0x0010F8, "Wrong size on UABP_AJBInGameStandPart_STFNet_C");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, UberGraphFrame) == 0x000360, "Member 'UABP_AJBInGameStandPart_STFNet_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_ComponentToLocalSpace_5EE31B4F443B537725A162AAAA4F3E46) == 0x000368, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_ComponentToLocalSpace_5EE31B4F443B537725A162AAAA4F3E46' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_SplineIK_021AA7DB4AAC87561CC4CBBF63C3E280) == 0x0003B0, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_SplineIK_021AA7DB4AAC87561CC4CBBF63C3E280' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_LocalRefPose_FF5BC4104995E1107D2B6D922B7474C8) == 0x000668, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_LocalRefPose_FF5BC4104995E1107D2B6D922B7474C8' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_Root_F9B13ECF4D9CED05729C33AD92799A3B) == 0x0006A0, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_Root_F9B13ECF4D9CED05729C33AD92799A3B' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_LocalToComponentSpace_5E3DD24046609A5FFF4793BD16F344BB) == 0x0006E8, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_LocalToComponentSpace_5E3DD24046609A5FFF4793BD16F344BB' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_BlendBoneByChannel_85498669424E37673A44FA8806902C06) == 0x000730, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_BlendBoneByChannel_85498669424E37673A44FA8806902C06' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_ModifyBone_D1A57D7F439EC2997DC85697B452F189) == 0x0007D0, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_ModifyBone_D1A57D7F439EC2997DC85697B452F189' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_TransitionResult_245EB66F4E70777E162368A7C1B37A8B) == 0x000930, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_TransitionResult_245EB66F4E70777E162368A7C1B37A8B' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_TransitionResult_E3B1F0B6488C26522FA472B858846A08) == 0x000978, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_TransitionResult_E3B1F0B6488C26522FA472B858846A08' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_TransitionResult_25B6260C4B8FEC1914465E8093BD2028) == 0x0009C0, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_TransitionResult_25B6260C4B8FEC1914465E8093BD2028' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_TransitionResult_F63BC23A400E124D7C2064B9604863AA) == 0x000A08, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_TransitionResult_F63BC23A400E124D7C2064B9604863AA' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_SequencePlayer_351290DC41924B8FBE3E5B96AF2DDAFA) == 0x000A50, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_SequencePlayer_351290DC41924B8FBE3E5B96AF2DDAFA' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_StateResult_1D613737480B1E566DB13492E59ABD58) == 0x000B00, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_StateResult_1D613737480B1E566DB13492E59ABD58' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_SequencePlayer_558A93764B2CF16E08F51687D5124404) == 0x000B48, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_SequencePlayer_558A93764B2CF16E08F51687D5124404' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_StateResult_3DEAB93E4474EFBACDD0F4A6C4D96692) == 0x000BF8, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_StateResult_3DEAB93E4474EFBACDD0F4A6C4D96692' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_SequencePlayer_DB8823AD4FBCAFDEB0C56C97FC65ED0A) == 0x000C40, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_SequencePlayer_DB8823AD4FBCAFDEB0C56C97FC65ED0A' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_StateResult_0FAE602B470387C1E2A91E91B22CBFE2) == 0x000CF0, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_StateResult_0FAE602B470387C1E2A91E91B22CBFE2' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_ComponentToLocalSpace_FCE471564AB6625467A5F587CDC290EC) == 0x000D38, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_ComponentToLocalSpace_FCE471564AB6625467A5F587CDC290EC' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_ModifyBone_4FE7F51345BA20F55E5A609ACCD98BFA) == 0x000D80, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_ModifyBone_4FE7F51345BA20F55E5A609ACCD98BFA' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_LocalToComponentSpace_084F471F455F77F9FBA5E6900ED52B9E) == 0x000EE0, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_LocalToComponentSpace_084F471F455F77F9FBA5E6900ED52B9E' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_LocalRefPose_39EBAF7B4382BE2586BE97B5F1F19D60) == 0x000F28, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_LocalRefPose_39EBAF7B4382BE2586BE97B5F1F19D60' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_StateResult_0B90F5964A312E655908C2B3B15428DC) == 0x000F60, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_StateResult_0B90F5964A312E655908C2B3B15428DC' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, AnimGraphNode_StateMachine_055180D7498313D172C61FAAEAC2162D) == 0x000FA8, "Member 'UABP_AJBInGameStandPart_STFNet_C::AnimGraphNode_StateMachine_055180D7498313D172C61FAAEAC2162D' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, StringJail) == 0x001088, "Member 'UABP_AJBInGameStandPart_STFNet_C::StringJail' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, TargetLocation) == 0x001090, "Member 'UABP_AJBInGameStandPart_STFNet_C::TargetLocation' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, SplinePointComponentLocationOffset) == 0x00109C, "Member 'UABP_AJBInGameStandPart_STFNet_C::SplinePointComponentLocationOffset' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, MaxFluctuationLength_cm_) == 0x0010A8, "Member 'UABP_AJBInGameStandPart_STFNet_C::MaxFluctuationLength_cm_' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, SplinePointOriginComponentLocation) == 0x0010B0, "Member 'UABP_AJBInGameStandPart_STFNet_C::SplinePointOriginComponentLocation' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, bDebugView) == 0x0010C0, "Member 'UABP_AJBInGameStandPart_STFNet_C::bDebugView' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, SplinePointComponentTransforms) == 0x0010C8, "Member 'UABP_AJBInGameStandPart_STFNet_C::SplinePointComponentTransforms' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, NewVar_0) == 0x0010D8, "Member 'UABP_AJBInGameStandPart_STFNet_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, ActiveTime) == 0x0010E4, "Member 'UABP_AJBInGameStandPart_STFNet_C::ActiveTime' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, NewVar_1) == 0x0010E8, "Member 'UABP_AJBInGameStandPart_STFNet_C::NewVar_1' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, SkillState) == 0x0010F0, "Member 'UABP_AJBInGameStandPart_STFNet_C::SkillState' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_STFNet_C, HitLengthAlpha) == 0x0010F4, "Member 'UABP_AJBInGameStandPart_STFNet_C::HitLengthAlpha' has a wrong offset!");

}


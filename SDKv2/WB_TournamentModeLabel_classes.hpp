#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TournamentModeLabel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_TournamentModeLabel.WB_TournamentModeLabel_C
// 0x0028 (0x0230 - 0x0208)
class UWB_TournamentModeLabel_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0208(0x0008)(Transient, DuplicateTransient)
	class UAJBImage*                              AJBImage_2;                                        // 0x0210(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              BG;                                                // 0x0218(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_0;                                  // 0x0220(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsPPBuy;                                           // 0x0228(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WB_TournamentModeLabel(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void ChangeDisplayType(bool PPBuyMode);
	void UpdateDisplay(bool bCameraman);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_TournamentModeLabel_C">();
	}
	static class UWB_TournamentModeLabel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_TournamentModeLabel_C>();
	}
};
static_assert(alignof(UWB_TournamentModeLabel_C) == 0x000008, "Wrong alignment on UWB_TournamentModeLabel_C");
static_assert(sizeof(UWB_TournamentModeLabel_C) == 0x000230, "Wrong size on UWB_TournamentModeLabel_C");
static_assert(offsetof(UWB_TournamentModeLabel_C, UberGraphFrame) == 0x000208, "Member 'UWB_TournamentModeLabel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_TournamentModeLabel_C, AJBImage_2) == 0x000210, "Member 'UWB_TournamentModeLabel_C::AJBImage_2' has a wrong offset!");
static_assert(offsetof(UWB_TournamentModeLabel_C, BG) == 0x000218, "Member 'UWB_TournamentModeLabel_C::BG' has a wrong offset!");
static_assert(offsetof(UWB_TournamentModeLabel_C, WidgetSwitcher_0) == 0x000220, "Member 'UWB_TournamentModeLabel_C::WidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UWB_TournamentModeLabel_C, IsPPBuy) == 0x000228, "Member 'UWB_TournamentModeLabel_C::IsPPBuy' has a wrong offset!");

}


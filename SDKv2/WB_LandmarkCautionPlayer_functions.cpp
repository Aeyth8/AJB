#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_LandmarkCautionPlayer

#include "Basic.hpp"

#include "WB_LandmarkCautionPlayer_classes.hpp"
#include "WB_LandmarkCautionPlayer_parameters.hpp"


namespace SDK
{

// Function WB_LandmarkCautionPlayer.WB_LandmarkCautionPlayer_C.ExecuteUbergraph_WB_LandmarkCautionPlayer
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_LandmarkCautionPlayer_C::ExecuteUbergraph_WB_LandmarkCautionPlayer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkCautionPlayer_C", "ExecuteUbergraph_WB_LandmarkCautionPlayer");

	Params::WB_LandmarkCautionPlayer_C_ExecuteUbergraph_WB_LandmarkCautionPlayer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LandmarkCautionPlayer.WB_LandmarkCautionPlayer_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_LandmarkCautionPlayer_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkCautionPlayer_C", "Tick");

	Params::WB_LandmarkCautionPlayer_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LandmarkCautionPlayer.WB_LandmarkCautionPlayer_C.SetInnerScale
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InnerScale_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_LandmarkCautionPlayer_C::SetInnerScale(float InnerScale_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkCautionPlayer_C", "SetInnerScale");

	Params::WB_LandmarkCautionPlayer_C_SetInnerScale Parms{};

	Parms.InnerScale_0 = InnerScale_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LandmarkCautionPlayer.WB_LandmarkCautionPlayer_C.IsTouchMarker
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        TouchPosition                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsTouch                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_LandmarkCautionPlayer_C::IsTouchMarker(const struct FVector2D& TouchPosition, float Scale, bool* IsTouch) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkCautionPlayer_C", "IsTouchMarker");

	Params::WB_LandmarkCautionPlayer_C_IsTouchMarker Parms{};

	Parms.TouchPosition = std::move(TouchPosition);
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);

	if (IsTouch != nullptr)
		*IsTouch = Parms.IsTouch;
}


// Function WB_LandmarkCautionPlayer.WB_LandmarkCautionPlayer_C.GetContentWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UWidget*                          ContentWidget                                          (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_LandmarkCautionPlayer_C::GetContentWidget(class UWidget** ContentWidget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkCautionPlayer_C", "GetContentWidget");

	Params::WB_LandmarkCautionPlayer_C_GetContentWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ContentWidget != nullptr)
		*ContentWidget = Parms.ContentWidget;
}


// Function WB_LandmarkCautionPlayer.WB_LandmarkCautionPlayer_C.GetRetainerBoxWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class URetainerBox*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class URetainerBox* UWB_LandmarkCautionPlayer_C::GetRetainerBoxWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkCautionPlayer_C", "GetRetainerBoxWidget");

	Params::WB_LandmarkCautionPlayer_C_GetRetainerBoxWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkCautionPlayer.WB_LandmarkCautionPlayer_C.GetResizerWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USizeBox*                         SizeBox                                                (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_LandmarkCautionPlayer_C::GetResizerWidget(class USizeBox** SizeBox) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkCautionPlayer_C", "GetResizerWidget");

	Params::WB_LandmarkCautionPlayer_C_GetResizerWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SizeBox != nullptr)
		*SizeBox = Parms.SizeBox;
}

}


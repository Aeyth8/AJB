#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameCharacter_DVL

#include "Basic.hpp"

#include "BP_AJBInGameCharacter_DVL_classes.hpp"
#include "BP_AJBInGameCharacter_DVL_parameters.hpp"


namespace SDK
{

// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.ExecuteUbergraph_BP_AJBInGameCharacter_DVL
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_DVL_C::ExecuteUbergraph_BP_AJBInGameCharacter_DVL(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "ExecuteUbergraph_BP_AJBInGameCharacter_DVL");

	Params::BP_AJBInGameCharacter_DVL_C_ExecuteUbergraph_BP_AJBInGameCharacter_DVL Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.ROC_TryCancelVanishingOfTimeSkill
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_DVL_C::ROC_TryCancelVanishingOfTimeSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "ROC_TryCancelVanishingOfTimeSkill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.OnBlocking
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          BlockingLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Reflect                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsPairAttack                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bImpulseDamage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           DamageOwner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSeparateStandAttack                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DVL_C::OnBlocking(const struct FVector& BlockingLocation, bool Reflect, bool bIsPairAttack, bool bImpulseDamage, class AActor* DamageOwner, bool bSeparateStandAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "OnBlocking");

	Params::BP_AJBInGameCharacter_DVL_C_OnBlocking Parms{};

	Parms.BlockingLocation = std::move(BlockingLocation);
	Parms.Reflect = Reflect;
	Parms.bIsPairAttack = bIsPairAttack;
	Parms.bImpulseDamage = bImpulseDamage;
	Parms.DamageOwner = DamageOwner;
	Parms.bSeparateStandAttack = bSeparateStandAttack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.CheckBlockingComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bBlockingComponent                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DVL_C::CheckBlockingComponent(class UPrimitiveComponent* Component, bool* bBlockingComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "CheckBlockingComponent");

	Params::BP_AJBInGameCharacter_DVL_C_CheckBlockingComponent Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);

	if (bBlockingComponent != nullptr)
		*bBlockingComponent = Parms.bBlockingComponent;
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.CheckBlockingValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bBlockingValid                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DVL_C::CheckBlockingValid(class AActor* DamageActor, bool* bBlockingValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "CheckBlockingValid");

	Params::BP_AJBInGameCharacter_DVL_C_CheckBlockingValid Parms{};

	Parms.DamageActor = DamageActor;

	UObject::ProcessEvent(Func, &Parms);

	if (bBlockingValid != nullptr)
		*bBlockingValid = Parms.bBlockingValid;
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.IgnoreGivePassive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIgnore                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DVL_C::IgnoreGivePassive(class UPrimitiveComponent* Component, bool* bIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "IgnoreGivePassive");

	Params::BP_AJBInGameCharacter_DVL_C_IgnoreGivePassive Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);

	if (bIgnore != nullptr)
		*bIgnore = Parms.bIgnore;
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.BlockPenetrate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           CauserActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bBlock                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DVL_C::BlockPenetrate(class AActor* CauserActor, bool* bBlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "BlockPenetrate");

	Params::BP_AJBInGameCharacter_DVL_C_BlockPenetrate Parms{};

	Parms.CauserActor = CauserActor;

	UObject::ProcessEvent(Func, &Parms);

	if (bBlock != nullptr)
		*bBlock = Parms.bBlock;
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.GetDummyShotLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_DVL_C::GetDummyShotLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "GetDummyShotLocation");

	Params::BP_AJBInGameCharacter_DVL_C_GetDummyShotLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.ShouldShowNGPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DVL_C::ShouldShowNGPoint(bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "ShouldShowNGPoint");

	Params::BP_AJBInGameCharacter_DVL_C_ShouldShowNGPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.GetShutTraceRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_DVL_C::GetShutTraceRadius(float* Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "GetShutTraceRadius");

	Params::BP_AJBInGameCharacter_DVL_C_GetShutTraceRadius Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Radius != nullptr)
		*Radius = Parms.Radius;
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.GetShotLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bConsiderCharacterCapsuleRadius                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGameplayTag                     SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVector>                  Locations                                              (Parm, OutParm, ZeroConstructor)

void ABP_AJBInGameCharacter_DVL_C::GetShotLocation(bool bConsiderCharacterCapsuleRadius, const struct FGameplayTag& SkillTag, TArray<struct FVector>* Locations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "GetShotLocation");

	Params::BP_AJBInGameCharacter_DVL_C_GetShotLocation Parms{};

	Parms.bConsiderCharacterCapsuleRadius = bConsiderCharacterCapsuleRadius;
	Parms.SkillTag = std::move(SkillTag);

	UObject::ProcessEvent(Func, &Parms);

	if (Locations != nullptr)
		*Locations = std::move(Parms.Locations);
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.CheckLocallyControlled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bLocallyControlled                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DVL_C::CheckLocallyControlled(bool* bLocallyControlled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "CheckLocallyControlled");

	Params::BP_AJBInGameCharacter_DVL_C_CheckLocallyControlled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bLocallyControlled != nullptr)
		*bLocallyControlled = Parms.bLocallyControlled;
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.PressedButton_ActiveBase
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_DVL_C::PressedButton_ActiveBase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "PressedButton_ActiveBase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.PressedButton_Ultimate
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_DVL_C::PressedButton_Ultimate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "PressedButton_Ultimate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.ReleasedButton_ActiveSpecial
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_DVL_C::ReleasedButton_ActiveSpecial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "ReleasedButton_ActiveSpecial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.PressedButton_ActiveSpecial
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_DVL_C::PressedButton_ActiveSpecial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "PressedButton_ActiveSpecial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.ReleasedButton_Basic
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_DVL_C::ReleasedButton_Basic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "ReleasedButton_Basic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.PressedButton_Basic
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_DVL_C::PressedButton_Basic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "PressedButton_Basic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.MoveRight
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_DVL_C::MoveRight(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "MoveRight");

	Params::BP_AJBInGameCharacter_DVL_C_MoveRight Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.MoveForward
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_DVL_C::MoveForward(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "MoveForward");

	Params::BP_AJBInGameCharacter_DVL_C_MoveForward Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DVL_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "NotifyTheWorld");

	Params::BP_AJBInGameCharacter_DVL_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.OnGainSupportSkillServer
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_DVL_C::OnGainSupportSkillServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "OnGainSupportSkillServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_DVL_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.OnBeforeInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldInteract                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DVL_C::OnBeforeInteract(bool* bShouldInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "OnBeforeInteract");

	Params::BP_AJBInGameCharacter_DVL_C_OnBeforeInteract Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldInteract != nullptr)
		*bShouldInteract = Parms.bShouldInteract;
}


// Function BP_AJBInGameCharacter_DVL.BP_AJBInGameCharacter_DVL_C.CheckPossibleDetection
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bPossibleDetection                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DVL_C::CheckPossibleDetection(bool* bPossibleDetection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DVL_C", "CheckPossibleDetection");

	Params::BP_AJBInGameCharacter_DVL_C_CheckPossibleDetection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPossibleDetection != nullptr)
		*bPossibleDetection = Parms.bPossibleDetection;
}

}


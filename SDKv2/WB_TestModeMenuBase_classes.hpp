#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TestModeMenuBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_classes.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_TestModeMenuBase.WB_TestModeMenuBase_C
// 0x00F0 (0x03B0 - 0x02C0)
class UWB_TestModeMenuBase_C final : public UAJBWindowWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(Transient, DuplicateTransient)
	class UImage*                                 Back;                                              // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanelRoot;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<class FName, class UUserWidget*>         MenuPageWidgets;                                   // 0x02D8(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class FName                                   TopMenuName;                                       // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           OpenedMenuPage;                                    // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FSlateFontInfo                         SlateFont;                                         // 0x0340(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UUserWidget*                            CurrentMenuPage;                                   // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FKey>                           CachedInputKey;                                    // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          bIsEnablePadInput;                                 // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WB_TestModeMenuBase(int32 EntryPoint);
	void Construct();
	void OnClosingWindow();
	void OnOpeningWindow();
	void CreateMenuPage(class UClass* Class_0, class FName PageName, float ValueOffsetX, const struct FVector2D& BasePosition, const class FText& TitleText, class UUserWidget** PageWidget);
	void OpenMenuPage(class FName OpenPageName);
	void OpenTopPage();
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	bool IsInputDecideButton(struct FKeyEvent& KeyEvent);
	bool IsInputCancelButton(struct FKeyEvent& KeyEvent);
	bool IsInputPrevButton(struct FKeyEvent& KeyEvent);
	bool IsInputNextButton(struct FKeyEvent& KeyEvent);
	struct FEventReply OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void ResetMenuParameter();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_TestModeMenuBase_C">();
	}
	static class UWB_TestModeMenuBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_TestModeMenuBase_C>();
	}
};
static_assert(alignof(UWB_TestModeMenuBase_C) == 0x000008, "Wrong alignment on UWB_TestModeMenuBase_C");
static_assert(sizeof(UWB_TestModeMenuBase_C) == 0x0003B0, "Wrong size on UWB_TestModeMenuBase_C");
static_assert(offsetof(UWB_TestModeMenuBase_C, UberGraphFrame) == 0x0002C0, "Member 'UWB_TestModeMenuBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_TestModeMenuBase_C, Back) == 0x0002C8, "Member 'UWB_TestModeMenuBase_C::Back' has a wrong offset!");
static_assert(offsetof(UWB_TestModeMenuBase_C, CanvasPanelRoot) == 0x0002D0, "Member 'UWB_TestModeMenuBase_C::CanvasPanelRoot' has a wrong offset!");
static_assert(offsetof(UWB_TestModeMenuBase_C, MenuPageWidgets) == 0x0002D8, "Member 'UWB_TestModeMenuBase_C::MenuPageWidgets' has a wrong offset!");
static_assert(offsetof(UWB_TestModeMenuBase_C, TopMenuName) == 0x000328, "Member 'UWB_TestModeMenuBase_C::TopMenuName' has a wrong offset!");
static_assert(offsetof(UWB_TestModeMenuBase_C, OpenedMenuPage) == 0x000330, "Member 'UWB_TestModeMenuBase_C::OpenedMenuPage' has a wrong offset!");
static_assert(offsetof(UWB_TestModeMenuBase_C, SlateFont) == 0x000340, "Member 'UWB_TestModeMenuBase_C::SlateFont' has a wrong offset!");
static_assert(offsetof(UWB_TestModeMenuBase_C, CurrentMenuPage) == 0x000390, "Member 'UWB_TestModeMenuBase_C::CurrentMenuPage' has a wrong offset!");
static_assert(offsetof(UWB_TestModeMenuBase_C, CachedInputKey) == 0x000398, "Member 'UWB_TestModeMenuBase_C::CachedInputKey' has a wrong offset!");
static_assert(offsetof(UWB_TestModeMenuBase_C, bIsEnablePadInput) == 0x0003A8, "Member 'UWB_TestModeMenuBase_C::bIsEnablePadInput' has a wrong offset!");

}


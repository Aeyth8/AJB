#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ExchangeScoreBoard

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ExchangeScoreBoard.WB_ExchangeScoreBoard_C
// 0x0090 (0x0298 - 0x0208)
class UWB_ExchangeScoreBoard_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0208(0x0008)(Transient, DuplicateTransient)
	class UVerticalBox*                           Rows;                                              // 0x0210(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ScoreBoardRow_C*                    WB_ScoreBoardRow;                                  // 0x0218(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ScoreBoardRow_C*                    WB_ScoreBoardRow_0;                                // 0x0220(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ScoreBoardRow_C*                    WB_ScoreBoardRow_1;                                // 0x0228(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ScoreBoardRow_C*                    WB_ScoreBoardRow_2;                                // 0x0230(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ScoreBoardRow_C*                    WB_ScoreBoardRow_3;                                // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ScoreBoardRow_C*                    WB_ScoreBoardRow_4;                                // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ScoreBoardRow_C*                    WB_ScoreBoardRow_5;                                // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ScoreBoardRow_C*                    WB_ScoreBoardRow_6;                                // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ScoreBoardRow_C*                    WB_ScoreBoardRow_7;                                // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ScoreBoardTitle_C*                  WB_ScoreBoardTitle;                                // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         RowTopPadding;                                     // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ScoreBoardManager_C*                CacheScoreBoardManager;                            // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ScoreBoardRow_C*                    Widget_local;                                      // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScoreBoardUpdateInterval;                          // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMatchingPlayerInfo>            MatchingPlayers;                                   // 0x0288(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_WB_ExchangeScoreBoard(int32 EntryPoint);
	void OnUpdate();
	void Initialize();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void TryGetScoreBoardManager(class ABP_ScoreBoardManager_C** Output, bool* bSuccess);
	void FindScoreBoardRowByPlayerID(uint8 PlayerID, class UWB_ScoreBoardRow_C** Widget, bool* bSuccess);
	void SortMatchingPlayerInfo(TArray<struct FMatchingPlayerInfo>& MatchingPlayerInfo, TArray<struct FMatchingPlayerInfo>* SortedMatchingPlayerInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ExchangeScoreBoard_C">();
	}
	static class UWB_ExchangeScoreBoard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ExchangeScoreBoard_C>();
	}
};
static_assert(alignof(UWB_ExchangeScoreBoard_C) == 0x000008, "Wrong alignment on UWB_ExchangeScoreBoard_C");
static_assert(sizeof(UWB_ExchangeScoreBoard_C) == 0x000298, "Wrong size on UWB_ExchangeScoreBoard_C");
static_assert(offsetof(UWB_ExchangeScoreBoard_C, UberGraphFrame) == 0x000208, "Member 'UWB_ExchangeScoreBoard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ExchangeScoreBoard_C, Rows) == 0x000210, "Member 'UWB_ExchangeScoreBoard_C::Rows' has a wrong offset!");
static_assert(offsetof(UWB_ExchangeScoreBoard_C, WB_ScoreBoardRow) == 0x000218, "Member 'UWB_ExchangeScoreBoard_C::WB_ScoreBoardRow' has a wrong offset!");
static_assert(offsetof(UWB_ExchangeScoreBoard_C, WB_ScoreBoardRow_0) == 0x000220, "Member 'UWB_ExchangeScoreBoard_C::WB_ScoreBoardRow_0' has a wrong offset!");
static_assert(offsetof(UWB_ExchangeScoreBoard_C, WB_ScoreBoardRow_1) == 0x000228, "Member 'UWB_ExchangeScoreBoard_C::WB_ScoreBoardRow_1' has a wrong offset!");
static_assert(offsetof(UWB_ExchangeScoreBoard_C, WB_ScoreBoardRow_2) == 0x000230, "Member 'UWB_ExchangeScoreBoard_C::WB_ScoreBoardRow_2' has a wrong offset!");
static_assert(offsetof(UWB_ExchangeScoreBoard_C, WB_ScoreBoardRow_3) == 0x000238, "Member 'UWB_ExchangeScoreBoard_C::WB_ScoreBoardRow_3' has a wrong offset!");
static_assert(offsetof(UWB_ExchangeScoreBoard_C, WB_ScoreBoardRow_4) == 0x000240, "Member 'UWB_ExchangeScoreBoard_C::WB_ScoreBoardRow_4' has a wrong offset!");
static_assert(offsetof(UWB_ExchangeScoreBoard_C, WB_ScoreBoardRow_5) == 0x000248, "Member 'UWB_ExchangeScoreBoard_C::WB_ScoreBoardRow_5' has a wrong offset!");
static_assert(offsetof(UWB_ExchangeScoreBoard_C, WB_ScoreBoardRow_6) == 0x000250, "Member 'UWB_ExchangeScoreBoard_C::WB_ScoreBoardRow_6' has a wrong offset!");
static_assert(offsetof(UWB_ExchangeScoreBoard_C, WB_ScoreBoardRow_7) == 0x000258, "Member 'UWB_ExchangeScoreBoard_C::WB_ScoreBoardRow_7' has a wrong offset!");
static_assert(offsetof(UWB_ExchangeScoreBoard_C, WB_ScoreBoardTitle) == 0x000260, "Member 'UWB_ExchangeScoreBoard_C::WB_ScoreBoardTitle' has a wrong offset!");
static_assert(offsetof(UWB_ExchangeScoreBoard_C, RowTopPadding) == 0x000268, "Member 'UWB_ExchangeScoreBoard_C::RowTopPadding' has a wrong offset!");
static_assert(offsetof(UWB_ExchangeScoreBoard_C, CacheScoreBoardManager) == 0x000270, "Member 'UWB_ExchangeScoreBoard_C::CacheScoreBoardManager' has a wrong offset!");
static_assert(offsetof(UWB_ExchangeScoreBoard_C, Widget_local) == 0x000278, "Member 'UWB_ExchangeScoreBoard_C::Widget_local' has a wrong offset!");
static_assert(offsetof(UWB_ExchangeScoreBoard_C, ScoreBoardUpdateInterval) == 0x000280, "Member 'UWB_ExchangeScoreBoard_C::ScoreBoardUpdateInterval' has a wrong offset!");
static_assert(offsetof(UWB_ExchangeScoreBoard_C, MatchingPlayers) == 0x000288, "Member 'UWB_ExchangeScoreBoard_C::MatchingPlayers' has a wrong offset!");

}


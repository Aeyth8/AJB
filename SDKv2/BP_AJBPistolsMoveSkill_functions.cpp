#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBPistolsMoveSkill

#include "Basic.hpp"

#include "BP_AJBPistolsMoveSkill_classes.hpp"
#include "BP_AJBPistolsMoveSkill_parameters.hpp"


namespace SDK
{

// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.ExecuteUbergraph_BP_AJBPistolsMoveSkill
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBPistolsMoveSkill_C::ExecuteUbergraph_BP_AJBPistolsMoveSkill(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "ExecuteUbergraph_BP_AJBPistolsMoveSkill");

	Params::BP_AJBPistolsMoveSkill_C_ExecuteUbergraph_BP_AJBPistolsMoveSkill Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.ROS_CheckCancelFlinch
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_AJBPistolsMoveSkill_C::ROS_CheckCancelFlinch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "ROS_CheckCancelFlinch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.OnDisconnected
// (Event, Public, BlueprintEvent)

void UBP_AJBPistolsMoveSkill_C::OnDisconnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "OnDisconnected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.TryEndSkill_Local
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBPistolsMoveSkill_C::TryEndSkill_Local()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "TryEndSkill_Local");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.OnPawnClientRestarted
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBPistolsMoveSkill_C::OnPawnClientRestarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "OnPawnClientRestarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.ROS_EndSkill
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_AJBPistolsMoveSkill_C::ROS_EndSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "ROS_EndSkill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.BindEventToOnMaxSpeedChanged
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBPistolsMoveSkill_C::BindEventToOnMaxSpeedChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "BindEventToOnMaxSpeedChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.OnMaxSpeedChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EMovableSXPFlyingState                  FlyingState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBPistolsMoveSkill_C::OnMaxSpeedChanged(EMovableSXPFlyingState FlyingState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "OnMaxSpeedChanged");

	Params::BP_AJBPistolsMoveSkill_C_OnMaxSpeedChanged Parms{};

	Parms.FlyingState = FlyingState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.OnStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EMovableStandSXPState                   PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMovableStandSXPState                   NextState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBPistolsMoveSkill_C::OnStateChanged(EMovableStandSXPState PrevState, EMovableStandSXPState NextState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "OnStateChanged");

	Params::BP_AJBPistolsMoveSkill_C_OnStateChanged Parms{};

	Parms.PrevState = PrevState;
	Parms.NextState = NextState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBPistolsMoveSkill_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "ReceiveEndPlay");

	Params::BP_AJBPistolsMoveSkill_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.OnClientMovableStandRestarted
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBPistolsMoveSkill_C::OnClientMovableStandRestarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "OnClientMovableStandRestarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.OnCharacterClientRestarted
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBPistolsMoveSkill_C::OnCharacterClientRestarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "OnCharacterClientRestarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.MC_EndSkill
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_AJBPistolsMoveSkill_C::MC_EndSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "MC_EndSkill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.EndSkill_Server
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBPistolsMoveSkill_C::EndSkill_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "EndSkill_Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.OnCompleted
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBPistolsMoveSkill_C::OnCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "OnCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.AdjustStandTransform
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Loation                                                (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void UBP_AJBPistolsMoveSkill_C::AdjustStandTransform(const struct FVector& Loation, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "AdjustStandTransform");

	Params::BP_AJBPistolsMoveSkill_C_AdjustStandTransform Parms{};

	Parms.Loation = std::move(Loation);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.GetMeshAndAnimSeq
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USkeletalMesh*                    Mesh                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     AnimSeq                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBPistolsMoveSkill_C::GetMeshAndAnimSeq(class USkeletalMesh** Mesh, class UAnimMontage** AnimSeq)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "GetMeshAndAnimSeq");

	Params::BP_AJBPistolsMoveSkill_C_GetMeshAndAnimSeq Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Mesh != nullptr)
		*Mesh = Parms.Mesh;

	if (AnimSeq != nullptr)
		*AnimSeq = Parms.AnimSeq;
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.SetEnablePostProcess
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBPistolsMoveSkill_C::SetEnablePostProcess(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "SetEnablePostProcess");

	Params::BP_AJBPistolsMoveSkill_C_SetEnablePostProcess Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.ChengePPParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Intencity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBPistolsMoveSkill_C::ChengePPParam(float Intencity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "ChengePPParam");

	Params::BP_AJBPistolsMoveSkill_C_ChengePPParam Parms{};

	Parms.Intencity = Intencity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.ApplySkillSettings
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBPistolsMoveSkill_C::ApplySkillSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "ApplySkillSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBPistolsMoveSkill_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.OnMCShot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void UBP_AJBPistolsMoveSkill_C::OnMCShot(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "OnMCShot");

	Params::BP_AJBPistolsMoveSkill_C_OnMCShot Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.OnROSShot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void UBP_AJBPistolsMoveSkill_C::OnROSShot(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "OnROSShot");

	Params::BP_AJBPistolsMoveSkill_C_OnROSShot Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.OnShot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void UBP_AJBPistolsMoveSkill_C::OnShot(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "OnShot");

	Params::BP_AJBPistolsMoveSkill_C_OnShot Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.OnCancel
// (Event, Public, BlueprintEvent)

void UBP_AJBPistolsMoveSkill_C::OnCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "OnCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.OnInactive
// (Event, Public, BlueprintEvent)

void UBP_AJBPistolsMoveSkill_C::OnInactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "OnInactive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.OnActive
// (Event, Public, BlueprintEvent)

void UBP_AJBPistolsMoveSkill_C::OnActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "OnActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPistolsMoveSkill.BP_AJBPistolsMoveSkill_C.InitializeVariables
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBPistolsMoveSkill_C::InitializeVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPistolsMoveSkill_C", "InitializeVariables");

	UObject::ProcessEvent(Func, nullptr);
}

}


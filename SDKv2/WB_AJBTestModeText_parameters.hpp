#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_AJBTestModeText

#include "Basic.hpp"

#include "ST_TestModeText_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_AJBTestModeText.WB_AJBTestModeText_C.ExecuteUbergraph_WB_AJBTestModeText
// 0x00B0 (0x00B0 - 0x0000)
struct WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             CallFunc_SpawnObject_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_TestModeText                       CallFunc_Array_Get_Item;                           // 0x0028(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0058(0x0028)()
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             K2Node_DynamicCast_AsText;                         // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText) == 0x000008, "Wrong alignment on WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText");
static_assert(sizeof(WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText) == 0x0000B0, "Wrong size on WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText");
static_assert(offsetof(WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText, EntryPoint) == 0x000000, "Member 'WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText, K2Node_Event_IsDesignTime) == 0x000010, "Member 'WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText, CallFunc_SpawnObject_ReturnValue) == 0x000018, "Member 'WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000020, "Member 'WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText, CallFunc_Array_Get_Item) == 0x000028, "Member 'WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText, CallFunc_Array_Length_ReturnValue1) == 0x000050, "Member 'WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText, K2Node_MakeStruct_SlateColor) == 0x000058, "Member 'WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText, Temp_int_Loop_Counter_Variable1) == 0x000080, "Member 'WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText, CallFunc_GetChildAt_ReturnValue) == 0x000088, "Member 'WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText, CallFunc_Less_IntInt_ReturnValue1) == 0x000090, "Member 'WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText, K2Node_DynamicCast_AsText) == 0x000098, "Member 'WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText::K2Node_DynamicCast_AsText' has a wrong offset!");
static_assert(offsetof(WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText, CallFunc_Add_IntInt_ReturnValue1) == 0x0000A4, "Member 'WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText, Temp_int_Array_Index_Variable1) == 0x0000A8, "Member 'WB_AJBTestModeText_C_ExecuteUbergraph_WB_AJBTestModeText::Temp_int_Array_Index_Variable1' has a wrong offset!");

// Function WB_AJBTestModeText.WB_AJBTestModeText_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_AJBTestModeText_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_AJBTestModeText_C_PreConstruct) == 0x000001, "Wrong alignment on WB_AJBTestModeText_C_PreConstruct");
static_assert(sizeof(WB_AJBTestModeText_C_PreConstruct) == 0x000001, "Wrong size on WB_AJBTestModeText_C_PreConstruct");
static_assert(offsetof(WB_AJBTestModeText_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_AJBTestModeText_C_PreConstruct::IsDesignTime' has a wrong offset!");

}


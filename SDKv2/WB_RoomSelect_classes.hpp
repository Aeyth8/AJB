#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_RoomSelect

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ERoomConnectState_structs.hpp"
#include "AJB_classes.hpp"
#include "ERoomWindowState_structs.hpp"
#include "ERoomState_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_RoomSelect.WB_RoomSelect_C
// 0x00F8 (0x03B8 - 0x02C0)
class UWB_RoomSelect_C final : public UAJBWindowWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Close;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Open;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           RoonButtonListRoot;                                // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CommonButton_Simple_C*              ShopCompetitionPairBackButton;                     // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ABP_AJBOutGameHUD_C*                    CachedOutGameHUD;                                  // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableUpdateTimeCountDown;                        // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ElapsedTime;                                       // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CountDownMaxTime;                                  // 0x02F8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_RoomSelect_PairConfirmWindow_C*     CachedRoomSelectPairConfirm;                       // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_RoomSelect_Button_Room_C*           CachedLastDecidedRoomButton;                       // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_RoomSelect_PairDecisionWindow_C*    CachedPairDecisionWindow;                          // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsMatchedPair;                                    // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MatchPairRecheckTimespan;                          // 0x031C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bDebugForceMatchPair;                              // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsEnableDebugCommand;                             // 0x0321(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          IsForceCreateRoom1;                                // 0x0322(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsForceCreateRoom2;                                // 0x0323(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsForceCreateRoom3;                                // 0x0324(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_RoomSelect_WaitingWindow_C*         CachedRoomSelectWaitWindow;                        // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_CommonWIndow_S_C*                   CachedFaliedRoomCreateConfirm;                     // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBOutGameProxy_C*                  OutGameProxy;                                      // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERoomConnectState                             ConnectedStartPairMatchingRoom;                    // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERoomConnectState                             ConnectedCreateRoom;                               // 0x0341(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERoomConnectState                             ConnectedDeleteRoom;                               // 0x0342(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERoomConnectState                             ConnectedRoomIn;                                   // 0x0343(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERoomConnectState                             ConnectedRandomPairMatch;                          // 0x0344(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345[0x3];                                      // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CachedCountDownMaxTime;                            // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERoomWindowState                              RoomState;                                         // 0x034C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D[0x3];                                      // 0x034D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_CommonWIndow_S_C*                   CachedServerCheckConfirm;                          // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_CommonWIndow_S_C*                   RandomMatchWaitConfirm;                            // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTimeOut;                                          // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bDisableCountDownTimer;                            // 0x0361(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362[0x2];                                      // 0x0362(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ButtonOffsetX;                                     // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ButtonOffsetY;                                     // 0x0368(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RoomButtonNumber;                                  // 0x036C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class UWB_RoomSelect_Button_Room_C*>   CachedRoomButtons;                                 // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          bReturnModeSelect;                                 // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_RoomSelect_Button_Random_C*         RandomMatchButton;                                 // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_RoomSelect_Button_ID_C*             IdMatchButton;                                     // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_RoomSelect_IDMatchWindow_C*         CachedIDMatchWindow;                               // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableIDMatch;                                    // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_RoomSelect_IDMatchStandby_C*        CachedIDMatchStandby;                              // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERoomConnectState                             ConnectedPairIDMatch;                              // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_RoomSelect(int32 EntryPoint);
	void StopTimeCountDown();
	void StartTimeCountDown(float Time);
	void SetTimeCountDownElapsedTime(float ElapsedTime_0);
	void OnClosedIDMatchStandby(class UAJBWindowWidget* TargetWidget);
	void OnStartWaitPairIDMatching(float RemainTime);
	void OnStartPairIDMatching();
	void OnClosedIDSettingWindow(class UAJBWindowWidget* TargetWidget);
	void OpenIDSettingWindow();
	void ResetRandomPairMatch();
	void OnDecidedRoomButton(class UAJBButtonWidget* ButtonWidget, class UAJBButton* Button);
	void BndEvt__WB_CommonButton_Simple_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature(class UAJBButtonWidget* OwnerWidget, class UAJBButton* TargetButton);
	void OnClosedRandomPairMatchConfirm(class UAJBWindowWidget* TargetWidget);
	void OnStartRandomPairMatch(class UAJBWindowWidget* TargetWidget);
	void OnClosingFaliedRoomCreateConfirm(class UAJBWindowWidget* TargetWidget);
	void OnFoundRoom(int32 RoomNum, int32 PairIconID, int32 PairLevel, const class FText& PairName, const class FText& PairTitle);
	void StopCheckPairMatching();
	void StartCheckPairMatching();
	void OnClosedRoomSelectWaiter(class UAJBWindowWidget* TargetWidget);
	void TransitionNextFlowForCloseDelegate(class UAJBWindowWidget* TargetWidget);
	void OpenUnmatchPairWindow();
	void OpenPairConfirm();
	void OpenDecisionedPairWindow(bool bIsPlayOpenSE);
	void OpenRoomWaiterWindow();
	void OnClosedRoomSelectPairConfirm(class UAJBWindowWidget* TargetWidget);
	void OnCloseAnimationFinished();
	void OnClosingWindow();
	void OnOpenAnimationFinished();
	void OnOpeningWindow();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void OnDeletePairIDMatchRoom();
	void OnTimeoutPairIDMatch();
	void Connect_PairIDMatch(const class FString& PairMatchID);
	void OnTimeoutPairMatchingRoom();
	void OnEnterRoom(bool bSuccess);
	void _Connect_DeleteRoom();
	void BindOutgameProxyEvents();
	void Connect_RandomPairMatch();
	void Connect_RoomIn(int32 RoomNo);
	void Connect_CreateRoom(int32 RoomNo);
	void UnbindOutGameProxyEvents();
	void Connect_StartPairMatchingRoom();
	void OnPairMatched(bool bSuccess, const struct FMatchingPlayerInfo& PairMatchingPlayerInfo);
	void OnDeletedRoom(bool bSuccess);
	void OnUpdatePairMatchingRoomInfo();
	void OnCreateRoom(bool bSuccess);
	void Finished_ADFC1B6F4B1940E1C55FA3A4C5887085();
	void Finished_0201F34C4195A09F7C4E05BBAC90689E();
	void Finished_DB602FC549E00832213623B3D66F98AB();
	void Finished_78D8F475428552060E7842B54DC685EA();
	void IsEnteredPair(bool* bIsMatch);
	void GetRoomState(const struct FRoomPlayerInfo& RoomPlayerInfo, ERoomState* State);
	void UpdateRoomButtonDisplay();
	void GetRoomPairInfo(int32* IconID, int32* PlayerLevel, class FText* PlayerName, class FText* PlayerTitle);
	void CreateRoomButtons();
	bool OnInputTurnRate(float Value);
	bool OnInputReleasedUp();
	bool OnInputReleasedTouch();
	bool OnInputReleasedRight();
	bool OnInputReleasedLeft();
	bool OnInputReleasedDown();
	bool OnInputReleasedDecide();
	bool OnInputReleasedCancel();
	bool OnInputPressedUp();
	bool OnInputPressedTouch(const float LocationX, const float LocationY);
	bool OnInputPressedRight();
	bool OnInputPressedLeft();
	bool OnInputPressedDown();
	bool OnInputPressedDecide();
	bool OnInputPressedCancel();
	bool OnInputMoveRight(float Value);
	bool OnInputMoveForward(float Value);
	bool OnInputLookupRate(float Value);
	bool IsModeless();
	bool OnInputReleasedR2();
	bool OnInputReleasedR1();
	bool OnInputReleasedL2();
	bool OnInputReleasedL1();
	bool OnInputPressedR2();
	bool OnInputPressedR1();
	bool OnInputPressedL2();
	bool OnInputPressedL1();
	bool OnInputReleasedL3();
	bool OnInputPressedL3();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_RoomSelect_C">();
	}
	static class UWB_RoomSelect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_RoomSelect_C>();
	}
};
static_assert(alignof(UWB_RoomSelect_C) == 0x000008, "Wrong alignment on UWB_RoomSelect_C");
static_assert(sizeof(UWB_RoomSelect_C) == 0x0003B8, "Wrong size on UWB_RoomSelect_C");
static_assert(offsetof(UWB_RoomSelect_C, UberGraphFrame) == 0x0002C0, "Member 'UWB_RoomSelect_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, Anim_Close) == 0x0002C8, "Member 'UWB_RoomSelect_C::Anim_Close' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, Anim_Open) == 0x0002D0, "Member 'UWB_RoomSelect_C::Anim_Open' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, RoonButtonListRoot) == 0x0002D8, "Member 'UWB_RoomSelect_C::RoonButtonListRoot' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, ShopCompetitionPairBackButton) == 0x0002E0, "Member 'UWB_RoomSelect_C::ShopCompetitionPairBackButton' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, CachedOutGameHUD) == 0x0002E8, "Member 'UWB_RoomSelect_C::CachedOutGameHUD' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, bEnableUpdateTimeCountDown) == 0x0002F0, "Member 'UWB_RoomSelect_C::bEnableUpdateTimeCountDown' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, ElapsedTime) == 0x0002F4, "Member 'UWB_RoomSelect_C::ElapsedTime' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, CountDownMaxTime) == 0x0002F8, "Member 'UWB_RoomSelect_C::CountDownMaxTime' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, CachedRoomSelectPairConfirm) == 0x000300, "Member 'UWB_RoomSelect_C::CachedRoomSelectPairConfirm' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, CachedLastDecidedRoomButton) == 0x000308, "Member 'UWB_RoomSelect_C::CachedLastDecidedRoomButton' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, CachedPairDecisionWindow) == 0x000310, "Member 'UWB_RoomSelect_C::CachedPairDecisionWindow' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, bIsMatchedPair) == 0x000318, "Member 'UWB_RoomSelect_C::bIsMatchedPair' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, MatchPairRecheckTimespan) == 0x00031C, "Member 'UWB_RoomSelect_C::MatchPairRecheckTimespan' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, bDebugForceMatchPair) == 0x000320, "Member 'UWB_RoomSelect_C::bDebugForceMatchPair' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, bIsEnableDebugCommand) == 0x000321, "Member 'UWB_RoomSelect_C::bIsEnableDebugCommand' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, IsForceCreateRoom1) == 0x000322, "Member 'UWB_RoomSelect_C::IsForceCreateRoom1' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, IsForceCreateRoom2) == 0x000323, "Member 'UWB_RoomSelect_C::IsForceCreateRoom2' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, IsForceCreateRoom3) == 0x000324, "Member 'UWB_RoomSelect_C::IsForceCreateRoom3' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, CachedRoomSelectWaitWindow) == 0x000328, "Member 'UWB_RoomSelect_C::CachedRoomSelectWaitWindow' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, CachedFaliedRoomCreateConfirm) == 0x000330, "Member 'UWB_RoomSelect_C::CachedFaliedRoomCreateConfirm' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, OutGameProxy) == 0x000338, "Member 'UWB_RoomSelect_C::OutGameProxy' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, ConnectedStartPairMatchingRoom) == 0x000340, "Member 'UWB_RoomSelect_C::ConnectedStartPairMatchingRoom' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, ConnectedCreateRoom) == 0x000341, "Member 'UWB_RoomSelect_C::ConnectedCreateRoom' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, ConnectedDeleteRoom) == 0x000342, "Member 'UWB_RoomSelect_C::ConnectedDeleteRoom' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, ConnectedRoomIn) == 0x000343, "Member 'UWB_RoomSelect_C::ConnectedRoomIn' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, ConnectedRandomPairMatch) == 0x000344, "Member 'UWB_RoomSelect_C::ConnectedRandomPairMatch' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, CachedCountDownMaxTime) == 0x000348, "Member 'UWB_RoomSelect_C::CachedCountDownMaxTime' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, RoomState) == 0x00034C, "Member 'UWB_RoomSelect_C::RoomState' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, CachedServerCheckConfirm) == 0x000350, "Member 'UWB_RoomSelect_C::CachedServerCheckConfirm' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, RandomMatchWaitConfirm) == 0x000358, "Member 'UWB_RoomSelect_C::RandomMatchWaitConfirm' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, bTimeOut) == 0x000360, "Member 'UWB_RoomSelect_C::bTimeOut' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, bDisableCountDownTimer) == 0x000361, "Member 'UWB_RoomSelect_C::bDisableCountDownTimer' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, ButtonOffsetX) == 0x000364, "Member 'UWB_RoomSelect_C::ButtonOffsetX' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, ButtonOffsetY) == 0x000368, "Member 'UWB_RoomSelect_C::ButtonOffsetY' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, RoomButtonNumber) == 0x00036C, "Member 'UWB_RoomSelect_C::RoomButtonNumber' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, CachedRoomButtons) == 0x000370, "Member 'UWB_RoomSelect_C::CachedRoomButtons' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, bReturnModeSelect) == 0x000380, "Member 'UWB_RoomSelect_C::bReturnModeSelect' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, RandomMatchButton) == 0x000388, "Member 'UWB_RoomSelect_C::RandomMatchButton' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, IdMatchButton) == 0x000390, "Member 'UWB_RoomSelect_C::IdMatchButton' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, CachedIDMatchWindow) == 0x000398, "Member 'UWB_RoomSelect_C::CachedIDMatchWindow' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, bEnableIDMatch) == 0x0003A0, "Member 'UWB_RoomSelect_C::bEnableIDMatch' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, CachedIDMatchStandby) == 0x0003A8, "Member 'UWB_RoomSelect_C::CachedIDMatchStandby' has a wrong offset!");
static_assert(offsetof(UWB_RoomSelect_C, ConnectedPairIDMatch) == 0x0003B0, "Member 'UWB_RoomSelect_C::ConnectedPairIDMatch' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_AJBSignalPin

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_AJBSignalPin.WB_AJBSignalPin_C.ExecuteUbergraph_WB_AJBSignalPin
// 0x01E8 (0x01E8 - 0x0000)
struct WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0054(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_PinLocation3D;                  // 0x005C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0068(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x0070(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInViewportPositionFun_ReturnValue;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBSignalPin_C>    K2Node_DynamicCast_AsBI_AJBSignal_Pin;             // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsPair;                              // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3[0x1];                                       // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetTargetPositionOutOfView_ReturnValue;   // 0x00A4(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsOutViewPosition;              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_CustomEvent_ScreenPosition;                 // 0x00B0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ClampScreenPosition_NewPosition;          // 0x00B8(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetOrthant_Orthant;                       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue1;        // 0x00C4(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00CC(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_BlurOffset;                           // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_SignalTypeTag;                        // 0x00D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_Size;                                 // 0x00E0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue1;                  // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBSignalPin_C>    K2Node_DynamicCast_AsBI_AJBSignal_Pin1;            // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBSignalPin_C>    K2Node_DynamicCast_AsBI_AJBSignal_Pin2;            // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0124(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue2;                  // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBSignalPin_C>    K2Node_DynamicCast_AsBI_AJBSignal_Pin3;            // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTargetActor_ViewTargetActor;       // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBInGameHUD_bIsValid;                 // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameHUD*                          CallFunc_GetAJBInGameHUD_ReturnValue;              // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInGameHUD_C>    K2Node_DynamicCast_AsBI_AJBIn_Game_HUD;            // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBUIMapManager_C*                  CallFunc_GetUIMapManager_Manager;                  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStickNewPin_ReturnValue;               // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x01D8(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue1;                        // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin) == 0x000008, "Wrong alignment on WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin");
static_assert(sizeof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin) == 0x0001E8, "Wrong size on WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, EntryPoint) == 0x000000, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_Event_MyGeometry) == 0x000008, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_Event_InDeltaTime) == 0x000040, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_GetViewportScale_ReturnValue) == 0x000050, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_GetDesiredSize_ReturnValue) == 0x000054, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_CustomEvent_PinLocation3D) == 0x00005C, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_CustomEvent_PinLocation3D' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000068, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x000070, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x000078, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_GetChildAt_ReturnValue) == 0x000080, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_IsInViewportPositionFun_ReturnValue) == 0x000088, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_IsInViewportPositionFun_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_DynamicCast_AsBI_AJBSignal_Pin) == 0x000090, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_DynamicCast_AsBI_AJBSignal_Pin' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_IsValid_ReturnValue) == 0x0000A1, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_Event_bIsPair) == 0x0000A2, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_Event_bIsPair' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_GetTargetPositionOutOfView_ReturnValue) == 0x0000A4, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_GetTargetPositionOutOfView_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_CustomEvent_IsOutViewPosition) == 0x0000AC, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_CustomEvent_IsOutViewPosition' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_CustomEvent_ScreenPosition) == 0x0000B0, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_CustomEvent_ScreenPosition' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_ClampScreenPosition_NewPosition) == 0x0000B8, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_ClampScreenPosition_NewPosition' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_GetOrthant_Orthant) == 0x0000C0, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_GetOrthant_Orthant' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_Divide_Vector2DFloat_ReturnValue1) == 0x0000C4, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_Divide_Vector2DFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000CC, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_Event_BlurOffset) == 0x0000D4, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_Event_BlurOffset' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_Event_SignalTypeTag) == 0x0000D8, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_Event_SignalTypeTag' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_Event_Size) == 0x0000E0, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_Event_Size' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_GetChildAt_ReturnValue1) == 0x0000E8, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_GetChildAt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_SwitchInteger_CmpSuccess) == 0x0000F0, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_DynamicCast_AsBI_AJBSignal_Pin1) == 0x0000F8, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_DynamicCast_AsBI_AJBSignal_Pin1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_DynamicCast_bSuccess1) == 0x000108, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_DynamicCast_AsBI_AJBSignal_Pin2) == 0x000110, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_DynamicCast_AsBI_AJBSignal_Pin2' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_DynamicCast_bSuccess2) == 0x000120, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_IsValid_ReturnValue1) == 0x000121, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_MakeVector2D_ReturnValue) == 0x000124, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_Create_ReturnValue) == 0x000130, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_AddChild_ReturnValue) == 0x000138, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_GetChildAt_ReturnValue2) == 0x000140, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_GetChildAt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x000148, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_DynamicCast_bSuccess3) == 0x000150, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_DynamicCast_AsBI_AJBSignal_Pin3) == 0x000158, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_DynamicCast_AsBI_AJBSignal_Pin3' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_DynamicCast_bSuccess4) == 0x000168, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_GetViewTargetActor_ViewTargetActor) == 0x000170, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_GetViewTargetActor_ViewTargetActor' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_GetAJBInGameHUD_bIsValid) == 0x000178, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_GetAJBInGameHUD_bIsValid' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_GetAJBInGameHUD_ReturnValue) == 0x000180, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_GetAJBInGameHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_IsValid_ReturnValue2) == 0x000188, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_DynamicCast_AsBI_AJBIn_Game_HUD) == 0x000190, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_DynamicCast_AsBI_AJBIn_Game_HUD' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, K2Node_DynamicCast_bSuccess5) == 0x0001A0, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_GetUIMapManager_Manager) == 0x0001A8, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_GetUIMapManager_Manager' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001B0, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001BC, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_CanStickNewPin_ReturnValue) == 0x0001C8, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_CanStickNewPin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_VSize_ReturnValue) == 0x0001CC, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_MapRangeClamped_ReturnValue) == 0x0001D0, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_Lerp_ReturnValue) == 0x0001D4, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0001D8, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin, CallFunc_Lerp_ReturnValue1) == 0x0001E0, "Member 'WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin::CallFunc_Lerp_ReturnValue1' has a wrong offset!");

// Function WB_AJBSignalPin.WB_AJBSignalPin_C.UpdateArrowVisibility
// 0x000C (0x000C - 0x0000)
struct WB_AJBSignalPin_C_UpdateArrowVisibility final
{
public:
	bool                                          IsOutViewPosition;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ScreenPosition;                                    // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AJBSignalPin_C_UpdateArrowVisibility) == 0x000004, "Wrong alignment on WB_AJBSignalPin_C_UpdateArrowVisibility");
static_assert(sizeof(WB_AJBSignalPin_C_UpdateArrowVisibility) == 0x00000C, "Wrong size on WB_AJBSignalPin_C_UpdateArrowVisibility");
static_assert(offsetof(WB_AJBSignalPin_C_UpdateArrowVisibility, IsOutViewPosition) == 0x000000, "Member 'WB_AJBSignalPin_C_UpdateArrowVisibility::IsOutViewPosition' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_UpdateArrowVisibility, ScreenPosition) == 0x000004, "Member 'WB_AJBSignalPin_C_UpdateArrowVisibility::ScreenPosition' has a wrong offset!");

// Function WB_AJBSignalPin.WB_AJBSignalPin_C.SetPinLocation
// 0x000C (0x000C - 0x0000)
struct WB_AJBSignalPin_C_SetPinLocation final
{
public:
	struct FVector                                PinLocation3D_0;                                   // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AJBSignalPin_C_SetPinLocation) == 0x000004, "Wrong alignment on WB_AJBSignalPin_C_SetPinLocation");
static_assert(sizeof(WB_AJBSignalPin_C_SetPinLocation) == 0x00000C, "Wrong size on WB_AJBSignalPin_C_SetPinLocation");
static_assert(offsetof(WB_AJBSignalPin_C_SetPinLocation, PinLocation3D_0) == 0x000000, "Member 'WB_AJBSignalPin_C_SetPinLocation::PinLocation3D_0' has a wrong offset!");

// Function WB_AJBSignalPin.WB_AJBSignalPin_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_AJBSignalPin_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AJBSignalPin_C_Tick) == 0x000004, "Wrong alignment on WB_AJBSignalPin_C_Tick");
static_assert(sizeof(WB_AJBSignalPin_C_Tick) == 0x00003C, "Wrong size on WB_AJBSignalPin_C_Tick");
static_assert(offsetof(WB_AJBSignalPin_C_Tick, MyGeometry) == 0x000000, "Member 'WB_AJBSignalPin_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_AJBSignalPin_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_AJBSignalPin.WB_AJBSignalPin_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_AJBSignalPin_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_AJBSignalPin_C_PreConstruct) == 0x000001, "Wrong alignment on WB_AJBSignalPin_C_PreConstruct");
static_assert(sizeof(WB_AJBSignalPin_C_PreConstruct) == 0x000001, "Wrong size on WB_AJBSignalPin_C_PreConstruct");
static_assert(offsetof(WB_AJBSignalPin_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_AJBSignalPin_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_AJBSignalPin.WB_AJBSignalPin_C.SetIsPair
// 0x0001 (0x0001 - 0x0000)
struct WB_AJBSignalPin_C_SetIsPair final
{
public:
	bool                                          bIsPair;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_AJBSignalPin_C_SetIsPair) == 0x000001, "Wrong alignment on WB_AJBSignalPin_C_SetIsPair");
static_assert(sizeof(WB_AJBSignalPin_C_SetIsPair) == 0x000001, "Wrong size on WB_AJBSignalPin_C_SetIsPair");
static_assert(offsetof(WB_AJBSignalPin_C_SetIsPair, bIsPair) == 0x000000, "Member 'WB_AJBSignalPin_C_SetIsPair::bIsPair' has a wrong offset!");

// Function WB_AJBSignalPin.WB_AJBSignalPin_C.UpdateBlurOffset
// 0x0004 (0x0004 - 0x0000)
struct WB_AJBSignalPin_C_UpdateBlurOffset final
{
public:
	float                                         BlurOffset;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AJBSignalPin_C_UpdateBlurOffset) == 0x000004, "Wrong alignment on WB_AJBSignalPin_C_UpdateBlurOffset");
static_assert(sizeof(WB_AJBSignalPin_C_UpdateBlurOffset) == 0x000004, "Wrong size on WB_AJBSignalPin_C_UpdateBlurOffset");
static_assert(offsetof(WB_AJBSignalPin_C_UpdateBlurOffset, BlurOffset) == 0x000000, "Member 'WB_AJBSignalPin_C_UpdateBlurOffset::BlurOffset' has a wrong offset!");

// Function WB_AJBSignalPin.WB_AJBSignalPin_C.SetSignalType
// 0x0008 (0x0008 - 0x0000)
struct WB_AJBSignalPin_C_SetSignalType final
{
public:
	struct FGameplayTag                           SignalTypeTag;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AJBSignalPin_C_SetSignalType) == 0x000008, "Wrong alignment on WB_AJBSignalPin_C_SetSignalType");
static_assert(sizeof(WB_AJBSignalPin_C_SetSignalType) == 0x000008, "Wrong size on WB_AJBSignalPin_C_SetSignalType");
static_assert(offsetof(WB_AJBSignalPin_C_SetSignalType, SignalTypeTag) == 0x000000, "Member 'WB_AJBSignalPin_C_SetSignalType::SignalTypeTag' has a wrong offset!");

// Function WB_AJBSignalPin.WB_AJBSignalPin_C.UpdateSize
// 0x0008 (0x0008 - 0x0000)
struct WB_AJBSignalPin_C_UpdateSize final
{
public:
	struct FVector2D                              Size;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AJBSignalPin_C_UpdateSize) == 0x000004, "Wrong alignment on WB_AJBSignalPin_C_UpdateSize");
static_assert(sizeof(WB_AJBSignalPin_C_UpdateSize) == 0x000008, "Wrong size on WB_AJBSignalPin_C_UpdateSize");
static_assert(offsetof(WB_AJBSignalPin_C_UpdateSize, Size) == 0x000000, "Member 'WB_AJBSignalPin_C_UpdateSize::Size' has a wrong offset!");

// Function WB_AJBSignalPin.WB_AJBSignalPin_C.ClampScreenPosition
// 0x00A0 (0x00A0 - 0x0000)
struct WB_AJBSignalPin_C_ClampScreenPosition final
{
public:
	struct FVector2D                              Position;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NewPosition;                                       // 0x0008(0x0008)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LHalfViewportSize;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LPosX;                                             // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LTargetValue;                                      // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LPosY;                                             // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X1;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y1;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0034(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X2;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y2;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X3;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y3;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue1;             // 0x004C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X4;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y4;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X5;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y5;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue1;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue2;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue1;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x007C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X6;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y6;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue2;             // 0x008C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0094(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue3;             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AJBSignalPin_C_ClampScreenPosition) == 0x000004, "Wrong alignment on WB_AJBSignalPin_C_ClampScreenPosition");
static_assert(sizeof(WB_AJBSignalPin_C_ClampScreenPosition) == 0x0000A0, "Wrong size on WB_AJBSignalPin_C_ClampScreenPosition");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, Position) == 0x000000, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::Position' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, NewPosition) == 0x000008, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::NewPosition' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, LHalfViewportSize) == 0x000010, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::LHalfViewportSize' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, LPosX) == 0x000018, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::LPosX' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, LTargetValue) == 0x00001C, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::LTargetValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, LPosY) == 0x000020, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::LPosY' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_BreakVector2D_X) == 0x000024, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_BreakVector2D_X1) == 0x00002C, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_BreakVector2D_X1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_BreakVector2D_Y1) == 0x000030, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_BreakVector2D_Y1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_GetViewportSize_ReturnValue) == 0x000034, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_BreakVector2D_X2) == 0x00003C, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_BreakVector2D_X2' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_BreakVector2D_Y2) == 0x000040, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_BreakVector2D_Y2' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_BreakVector2D_X3) == 0x000044, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_BreakVector2D_X3' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_BreakVector2D_Y3) == 0x000048, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_BreakVector2D_Y3' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_GetViewportSize_ReturnValue1) == 0x00004C, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_GetViewportSize_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_BreakVector2D_X4) == 0x000054, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_BreakVector2D_X4' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_BreakVector2D_Y4) == 0x000058, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_BreakVector2D_Y4' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_BreakVector2D_X5) == 0x00005C, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_BreakVector2D_X5' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_BreakVector2D_Y5) == 0x000060, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_BreakVector2D_Y5' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_MapRangeClamped_ReturnValue) == 0x000064, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000068, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_MapRangeClamped_ReturnValue1) == 0x00006C, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_MapRangeClamped_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_Less_FloatFloat_ReturnValue) == 0x000070, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x000071, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_MapRangeClamped_ReturnValue2) == 0x000074, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_MapRangeClamped_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_Less_FloatFloat_ReturnValue1) == 0x000078, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_Less_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_MakeVector2D_ReturnValue) == 0x00007C, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_BreakVector2D_X6) == 0x000084, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_BreakVector2D_X6' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_BreakVector2D_Y6) == 0x000088, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_BreakVector2D_Y6' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_GetViewportSize_ReturnValue2) == 0x00008C, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_GetViewportSize_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000094, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_ClampScreenPosition, CallFunc_MapRangeClamped_ReturnValue3) == 0x00009C, "Member 'WB_AJBSignalPin_C_ClampScreenPosition::CallFunc_MapRangeClamped_ReturnValue3' has a wrong offset!");

// Function WB_AJBSignalPin.WB_AJBSignalPin_C.IsInViewportPositionFun
// 0x0050 (0x0050 - 0x0000)
struct WB_AJBSignalPin_C_IsInViewportPositionFun final
{
public:
	struct FVector2D                              ScreenPosition;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDPIScaledDesiredSize_ReturnValue;      // 0x0014(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x001C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0024(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X1;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y1;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X2;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y2;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue1;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_AJBSignalPin_C_IsInViewportPositionFun) == 0x000004, "Wrong alignment on WB_AJBSignalPin_C_IsInViewportPositionFun");
static_assert(sizeof(WB_AJBSignalPin_C_IsInViewportPositionFun) == 0x000050, "Wrong size on WB_AJBSignalPin_C_IsInViewportPositionFun");
static_assert(offsetof(WB_AJBSignalPin_C_IsInViewportPositionFun, ScreenPosition) == 0x000000, "Member 'WB_AJBSignalPin_C_IsInViewportPositionFun::ScreenPosition' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_IsInViewportPositionFun, ReturnValue) == 0x000008, "Member 'WB_AJBSignalPin_C_IsInViewportPositionFun::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_IsInViewportPositionFun, CallFunc_BreakVector2D_X) == 0x00000C, "Member 'WB_AJBSignalPin_C_IsInViewportPositionFun::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_IsInViewportPositionFun, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'WB_AJBSignalPin_C_IsInViewportPositionFun::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_IsInViewportPositionFun, CallFunc_GetDPIScaledDesiredSize_ReturnValue) == 0x000014, "Member 'WB_AJBSignalPin_C_IsInViewportPositionFun::CallFunc_GetDPIScaledDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_IsInViewportPositionFun, CallFunc_GetViewportSize_ReturnValue) == 0x00001C, "Member 'WB_AJBSignalPin_C_IsInViewportPositionFun::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_IsInViewportPositionFun, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000024, "Member 'WB_AJBSignalPin_C_IsInViewportPositionFun::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_IsInViewportPositionFun, CallFunc_BreakVector2D_X1) == 0x00002C, "Member 'WB_AJBSignalPin_C_IsInViewportPositionFun::CallFunc_BreakVector2D_X1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_IsInViewportPositionFun, CallFunc_BreakVector2D_Y1) == 0x000030, "Member 'WB_AJBSignalPin_C_IsInViewportPositionFun::CallFunc_BreakVector2D_Y1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_IsInViewportPositionFun, CallFunc_BreakVector2D_X2) == 0x000034, "Member 'WB_AJBSignalPin_C_IsInViewportPositionFun::CallFunc_BreakVector2D_X2' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_IsInViewportPositionFun, CallFunc_BreakVector2D_Y2) == 0x000038, "Member 'WB_AJBSignalPin_C_IsInViewportPositionFun::CallFunc_BreakVector2D_Y2' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_IsInViewportPositionFun, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00003C, "Member 'WB_AJBSignalPin_C_IsInViewportPositionFun::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_IsInViewportPositionFun, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'WB_AJBSignalPin_C_IsInViewportPositionFun::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_IsInViewportPositionFun, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000044, "Member 'WB_AJBSignalPin_C_IsInViewportPositionFun::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_IsInViewportPositionFun, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000048, "Member 'WB_AJBSignalPin_C_IsInViewportPositionFun::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_IsInViewportPositionFun, CallFunc_InRange_FloatFloat_ReturnValue1) == 0x00004C, "Member 'WB_AJBSignalPin_C_IsInViewportPositionFun::CallFunc_InRange_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_IsInViewportPositionFun, CallFunc_BooleanAND_ReturnValue) == 0x00004D, "Member 'WB_AJBSignalPin_C_IsInViewportPositionFun::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WB_AJBSignalPin.WB_AJBSignalPin_C.GetDPIScaledDesiredSize
// 0x001C (0x001C - 0x0000)
struct WB_AJBSignalPin_C_GetDPIScaledDesiredSize final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x000C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0014(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AJBSignalPin_C_GetDPIScaledDesiredSize) == 0x000004, "Wrong alignment on WB_AJBSignalPin_C_GetDPIScaledDesiredSize");
static_assert(sizeof(WB_AJBSignalPin_C_GetDPIScaledDesiredSize) == 0x00001C, "Wrong size on WB_AJBSignalPin_C_GetDPIScaledDesiredSize");
static_assert(offsetof(WB_AJBSignalPin_C_GetDPIScaledDesiredSize, ReturnValue) == 0x000000, "Member 'WB_AJBSignalPin_C_GetDPIScaledDesiredSize::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetDPIScaledDesiredSize, CallFunc_GetViewportScale_ReturnValue) == 0x000008, "Member 'WB_AJBSignalPin_C_GetDPIScaledDesiredSize::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetDPIScaledDesiredSize, CallFunc_GetDesiredSize_ReturnValue) == 0x00000C, "Member 'WB_AJBSignalPin_C_GetDPIScaledDesiredSize::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetDPIScaledDesiredSize, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000014, "Member 'WB_AJBSignalPin_C_GetDPIScaledDesiredSize::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");

// Function WB_AJBSignalPin.WB_AJBSignalPin_C.GetTargetPositionOutOfView
// 0x0110 (0x0110 - 0x0000)
struct WB_AJBSignalPin_C_GetTargetPositionOutOfView final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x000C(0x0008)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDPIScaledDesiredSize_ReturnValue;      // 0x0018(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0034(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue1;                // 0x0040(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue2;                // 0x0048(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0050(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue1;             // 0x0058(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0060(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0068(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue1;   // 0x0078(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue1;        // 0x00B0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x00B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue3;                // 0x00D4(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x00DC(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X1;                         // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y1;                         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue1;                         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x00F8(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0100(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue1;        // 0x0108(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AJBSignalPin_C_GetTargetPositionOutOfView) == 0x000010, "Wrong alignment on WB_AJBSignalPin_C_GetTargetPositionOutOfView");
static_assert(sizeof(WB_AJBSignalPin_C_GetTargetPositionOutOfView) == 0x000110, "Wrong size on WB_AJBSignalPin_C_GetTargetPositionOutOfView");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, Location) == 0x000000, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::Location' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, ReturnValue) == 0x00000C, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_GetViewportScale_ReturnValue) == 0x000014, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_GetDPIScaledDesiredSize_ReturnValue) == 0x000018, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_GetDPIScaledDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_BreakVector2D_X) == 0x000024, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x00002C, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_MakeVector2D_ReturnValue) == 0x000034, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x00003C, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_MakeVector2D_ReturnValue1) == 0x000040, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_MakeVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_MakeVector2D_ReturnValue2) == 0x000048, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_MakeVector2D_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_GetViewportSize_ReturnValue) == 0x000050, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_GetViewportSize_ReturnValue1) == 0x000058, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_GetViewportSize_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000060, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000068, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000070, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_Subtract_Vector2DVector2D_ReturnValue1) == 0x000078, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_Subtract_Vector2DVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_GetTransform_ReturnValue) == 0x000080, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_Divide_Vector2DFloat_ReturnValue1) == 0x0000B0, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_Divide_Vector2DFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_InverseTransformLocation_ReturnValue) == 0x0000B8, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_BreakVector_X) == 0x0000C4, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_BreakVector_Y) == 0x0000C8, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_BreakVector_Z) == 0x0000CC, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x0000D0, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_MakeVector2D_ReturnValue3) == 0x0000D4, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_MakeVector2D_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x0000DC, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_BreakVector2D_X1) == 0x0000E4, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_BreakVector2D_X1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_BreakVector2D_Y1) == 0x0000E8, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_BreakVector2D_Y1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_Abs_ReturnValue) == 0x0000EC, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_Abs_ReturnValue1) == 0x0000F0, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_Abs_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_FMin_ReturnValue) == 0x0000F4, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0000F8, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000100, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetTargetPositionOutOfView, CallFunc_Add_Vector2DVector2D_ReturnValue1) == 0x000108, "Member 'WB_AJBSignalPin_C_GetTargetPositionOutOfView::CallFunc_Add_Vector2DVector2D_ReturnValue1' has a wrong offset!");

// Function WB_AJBSignalPin.WB_AJBSignalPin_C.GetOrthant
// 0x00AC (0x00AC - 0x0000)
struct WB_AJBSignalPin_C_GetOrthant final
{
public:
	struct FVector2D                              ScreenPosition;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Orthant;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DegreeLocal;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DiagonalDegreeOffset3Local;                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DiagonalDegreeOffset2Local;                        // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DiagonalDegreeOffset1Local;                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DiagonalDegreeLocal;                               // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0030(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue1;             // 0x0038(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0048(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0054(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan_ReturnValue;                      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0060(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue1;        // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue2;        // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue3;        // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0070(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue4;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DotProduct2D_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue5;        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue1;                // 0x0090(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DotProduct2D_ReturnValue1;                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CrossProduct2D_ReturnValue;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue1;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AJBSignalPin_C_GetOrthant) == 0x000004, "Wrong alignment on WB_AJBSignalPin_C_GetOrthant");
static_assert(sizeof(WB_AJBSignalPin_C_GetOrthant) == 0x0000AC, "Wrong size on WB_AJBSignalPin_C_GetOrthant");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, ScreenPosition) == 0x000000, "Member 'WB_AJBSignalPin_C_GetOrthant::ScreenPosition' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, Orthant) == 0x000008, "Member 'WB_AJBSignalPin_C_GetOrthant::Orthant' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, DegreeLocal) == 0x00000C, "Member 'WB_AJBSignalPin_C_GetOrthant::DegreeLocal' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, DiagonalDegreeOffset3Local) == 0x000010, "Member 'WB_AJBSignalPin_C_GetOrthant::DiagonalDegreeOffset3Local' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, DiagonalDegreeOffset2Local) == 0x000014, "Member 'WB_AJBSignalPin_C_GetOrthant::DiagonalDegreeOffset2Local' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, DiagonalDegreeOffset1Local) == 0x000018, "Member 'WB_AJBSignalPin_C_GetOrthant::DiagonalDegreeOffset1Local' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, DiagonalDegreeLocal) == 0x00001C, "Member 'WB_AJBSignalPin_C_GetOrthant::DiagonalDegreeLocal' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, Temp_bool_Variable) == 0x000020, "Member 'WB_AJBSignalPin_C_GetOrthant::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x00002C, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_GetViewportSize_ReturnValue) == 0x000030, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_GetViewportSize_ReturnValue1) == 0x000038, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_GetViewportSize_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_BreakVector2D_X) == 0x000040, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_BreakVector2D_Y) == 0x000044, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000048, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000050, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000054, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_DegAtan_ReturnValue) == 0x00005C, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_DegAtan_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_Normal2D_ReturnValue) == 0x000060, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000068, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_LessEqual_FloatFloat_ReturnValue1) == 0x000069, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_LessEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_LessEqual_FloatFloat_ReturnValue2) == 0x00006A, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_LessEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_LessEqual_FloatFloat_ReturnValue3) == 0x00006B, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_LessEqual_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_BooleanAND_ReturnValue) == 0x00006C, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_BooleanAND_ReturnValue1) == 0x00006D, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_MakeVector2D_ReturnValue) == 0x000070, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_LessEqual_FloatFloat_ReturnValue4) == 0x000078, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_LessEqual_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_DotProduct2D_ReturnValue) == 0x00007C, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_DotProduct2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_LessEqual_FloatFloat_ReturnValue5) == 0x000080, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_LessEqual_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_DegAcos_ReturnValue) == 0x000084, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_BooleanAND_ReturnValue2) == 0x000088, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_Add_FloatFloat_ReturnValue1) == 0x00008C, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_MakeVector2D_ReturnValue1) == 0x000090, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_MakeVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_DotProduct2D_ReturnValue1) == 0x000098, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_DotProduct2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_CrossProduct2D_ReturnValue) == 0x00009C, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_CrossProduct2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_DegAcos_ReturnValue1) == 0x0000A0, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_DegAcos_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000A4, "Member 'WB_AJBSignalPin_C_GetOrthant::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_GetOrthant, K2Node_Select_Default) == 0x0000A8, "Member 'WB_AJBSignalPin_C_GetOrthant::K2Node_Select_Default' has a wrong offset!");

// Function WB_AJBSignalPin.WB_AJBSignalPin_C.PlayVanishAnimation
// 0x0048 (0x0048 - 0x0000)
struct WB_AJBSignalPin_C_PlayVanishAnimation final
{
public:
	bool                                          bIsTimeUp;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AnimationLength;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBSignalPin_C>    K2Node_DynamicCast_AsBI_AJBSignal_Pin;             // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayVanishAnimation_AnimationLength;      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_AJBSignalPin_C_PlayVanishAnimation) == 0x000008, "Wrong alignment on WB_AJBSignalPin_C_PlayVanishAnimation");
static_assert(sizeof(WB_AJBSignalPin_C_PlayVanishAnimation) == 0x000048, "Wrong size on WB_AJBSignalPin_C_PlayVanishAnimation");
static_assert(offsetof(WB_AJBSignalPin_C_PlayVanishAnimation, bIsTimeUp) == 0x000000, "Member 'WB_AJBSignalPin_C_PlayVanishAnimation::bIsTimeUp' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_PlayVanishAnimation, AnimationLength) == 0x000004, "Member 'WB_AJBSignalPin_C_PlayVanishAnimation::AnimationLength' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_PlayVanishAnimation, Temp_bool_Variable) == 0x000008, "Member 'WB_AJBSignalPin_C_PlayVanishAnimation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_PlayVanishAnimation, CallFunc_GetChildAt_ReturnValue) == 0x000010, "Member 'WB_AJBSignalPin_C_PlayVanishAnimation::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_PlayVanishAnimation, K2Node_Select_Default) == 0x000018, "Member 'WB_AJBSignalPin_C_PlayVanishAnimation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_PlayVanishAnimation, K2Node_DynamicCast_AsBI_AJBSignal_Pin) == 0x000020, "Member 'WB_AJBSignalPin_C_PlayVanishAnimation::K2Node_DynamicCast_AsBI_AJBSignal_Pin' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_PlayVanishAnimation, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WB_AJBSignalPin_C_PlayVanishAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_PlayVanishAnimation, CallFunc_GetEndTime_ReturnValue) == 0x000034, "Member 'WB_AJBSignalPin_C_PlayVanishAnimation::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_PlayVanishAnimation, CallFunc_PlayVanishAnimation_AnimationLength) == 0x000038, "Member 'WB_AJBSignalPin_C_PlayVanishAnimation::CallFunc_PlayVanishAnimation_AnimationLength' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_PlayVanishAnimation, CallFunc_FMax_ReturnValue) == 0x00003C, "Member 'WB_AJBSignalPin_C_PlayVanishAnimation::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AJBSignalPin_C_PlayVanishAnimation, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'WB_AJBSignalPin_C_PlayVanishAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_AJBInGameGionScreen

#include "Basic.hpp"

#include "E_GionSpawnedSpace_structs.hpp"
#include "ST_GionLocallyControlScreenInfo_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AJB_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_AJBInGameGionScreen.WB_AJBInGameGionScreen_C
// 0x0078 (0x02C0 - 0x0248)
class UWB_AJBInGameGionScreen_C final : public UAJBUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0248(0x0008)(Transient, DuplicateTransient)
	class UCanvasPanel*                           ScreenRoot;                                        // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UWB_AJBInGameGionEffect_C*>      EffectPool;                                        // 0x0258(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         EffectPoolSize;                                    // 0x0268(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox2D                                 MarginRect;                                        // 0x0270(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FVector2D                              ScreenScale;                                       // 0x0284(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FST_GionLocallyControlScreenInfo> LocallyScreenData;                                 // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         LossSize;                                          // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsShowDebug;                                      // 0x02A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnDisplayGion;                                     // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         ViewTargetHearingAbilityRate;                      // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnDisplayGion__DelegateSignature(const struct FGameplayTag& GionType, bool bIsOnScreen, bool bIsOwnerGion);
	void ExecuteUbergraph_WB_AJBInGameGionScreen(int32 EntryPoint);
	void StopCallOnDisplayGionDispatcher();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void RequestEffect(bool bIsOwner, class AActor* Owner, bool bIsFriend, E_GionSpawnedSpace SpanwedSpaceInOwnersEnv, E_GionSpawnedSpace SpanwedSpaceInNotOwnersEnv, class ABP_AJBInGameGion_C* GionActor);
	void Construct();
	void FindUseEffect(class UWB_AJBInGameGionEffect_C** Output_Get);
	void UpdateEffectPosition(class UWB_AJBInGameGionEffect_C* UpdateWidget, struct FGameplayTag* GionType, bool* bIsOnScreen, bool* bIsOwnerGion);
	void SetupEffect(bool bIsOwner, class AActor* Owner, bool bIsFriend, E_GionSpawnedSpace SpanwedSpaceInOwnersEnv, E_GionSpawnedSpace SpanwedSpaceInNotOwnersEnv, class ABP_AJBInGameGion_C* GionActor, struct FGameplayTag* GionType, bool* bIsOnScreen);
	void ToggleShowDebug();
	void GetViewTargetHearingAbilityRate(float* HearingAbilityRate);
	void AdjustEffect(class AActor* Owner, const struct FST_GionInfo& GionInfo);

	void OnPaint(struct FPaintContext& Context) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_AJBInGameGionScreen_C">();
	}
	static class UWB_AJBInGameGionScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_AJBInGameGionScreen_C>();
	}
};
static_assert(alignof(UWB_AJBInGameGionScreen_C) == 0x000008, "Wrong alignment on UWB_AJBInGameGionScreen_C");
static_assert(sizeof(UWB_AJBInGameGionScreen_C) == 0x0002C0, "Wrong size on UWB_AJBInGameGionScreen_C");
static_assert(offsetof(UWB_AJBInGameGionScreen_C, UberGraphFrame) == 0x000248, "Member 'UWB_AJBInGameGionScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_AJBInGameGionScreen_C, ScreenRoot) == 0x000250, "Member 'UWB_AJBInGameGionScreen_C::ScreenRoot' has a wrong offset!");
static_assert(offsetof(UWB_AJBInGameGionScreen_C, EffectPool) == 0x000258, "Member 'UWB_AJBInGameGionScreen_C::EffectPool' has a wrong offset!");
static_assert(offsetof(UWB_AJBInGameGionScreen_C, EffectPoolSize) == 0x000268, "Member 'UWB_AJBInGameGionScreen_C::EffectPoolSize' has a wrong offset!");
static_assert(offsetof(UWB_AJBInGameGionScreen_C, CurrentIndex) == 0x00026C, "Member 'UWB_AJBInGameGionScreen_C::CurrentIndex' has a wrong offset!");
static_assert(offsetof(UWB_AJBInGameGionScreen_C, MarginRect) == 0x000270, "Member 'UWB_AJBInGameGionScreen_C::MarginRect' has a wrong offset!");
static_assert(offsetof(UWB_AJBInGameGionScreen_C, ScreenScale) == 0x000284, "Member 'UWB_AJBInGameGionScreen_C::ScreenScale' has a wrong offset!");
static_assert(offsetof(UWB_AJBInGameGionScreen_C, LocallyScreenData) == 0x000290, "Member 'UWB_AJBInGameGionScreen_C::LocallyScreenData' has a wrong offset!");
static_assert(offsetof(UWB_AJBInGameGionScreen_C, LossSize) == 0x0002A0, "Member 'UWB_AJBInGameGionScreen_C::LossSize' has a wrong offset!");
static_assert(offsetof(UWB_AJBInGameGionScreen_C, bIsShowDebug) == 0x0002A4, "Member 'UWB_AJBInGameGionScreen_C::bIsShowDebug' has a wrong offset!");
static_assert(offsetof(UWB_AJBInGameGionScreen_C, OnDisplayGion) == 0x0002A8, "Member 'UWB_AJBInGameGionScreen_C::OnDisplayGion' has a wrong offset!");
static_assert(offsetof(UWB_AJBInGameGionScreen_C, ViewTargetHearingAbilityRate) == 0x0002B8, "Member 'UWB_AJBInGameGionScreen_C::ViewTargetHearingAbilityRate' has a wrong offset!");

}


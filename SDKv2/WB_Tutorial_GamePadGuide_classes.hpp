#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Tutorial_GamePadGuide

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Tutorial_GamePadGuide.WB_Tutorial_GamePadGuide_C
// 0x0058 (0x0260 - 0x0208)
class UWB_Tutorial_GamePadGuide_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0208(0x0008)(Transient, DuplicateTransient)
	class UAJBImage*                              HighlightEffect;                                   // 0x0210(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              IMG_GamePad_Left;                                  // 0x0218(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              IMG_GamePad_right;                                 // 0x0220(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox_FittingPosition;                          // 0x0228(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct FVector>                        PositionAndScale;                                  // 0x0230(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FVector>                        TextureMinusMirrorMinusMIVariable;                 // 0x0240(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Index_0;                                           // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DynamicMaterial;                                   // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_Tutorial_GamePadGuide(int32 EntryPoint);
	void Construct();
	void ButtonEffectSettings(EAJBPadIconType PadIconType);
	void ConvertIndex(EAJBPadIconType Selection);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Tutorial_GamePadGuide_C">();
	}
	static class UWB_Tutorial_GamePadGuide_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Tutorial_GamePadGuide_C>();
	}
};
static_assert(alignof(UWB_Tutorial_GamePadGuide_C) == 0x000008, "Wrong alignment on UWB_Tutorial_GamePadGuide_C");
static_assert(sizeof(UWB_Tutorial_GamePadGuide_C) == 0x000260, "Wrong size on UWB_Tutorial_GamePadGuide_C");
static_assert(offsetof(UWB_Tutorial_GamePadGuide_C, UberGraphFrame) == 0x000208, "Member 'UWB_Tutorial_GamePadGuide_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_Tutorial_GamePadGuide_C, HighlightEffect) == 0x000210, "Member 'UWB_Tutorial_GamePadGuide_C::HighlightEffect' has a wrong offset!");
static_assert(offsetof(UWB_Tutorial_GamePadGuide_C, IMG_GamePad_Left) == 0x000218, "Member 'UWB_Tutorial_GamePadGuide_C::IMG_GamePad_Left' has a wrong offset!");
static_assert(offsetof(UWB_Tutorial_GamePadGuide_C, IMG_GamePad_right) == 0x000220, "Member 'UWB_Tutorial_GamePadGuide_C::IMG_GamePad_right' has a wrong offset!");
static_assert(offsetof(UWB_Tutorial_GamePadGuide_C, ScaleBox_FittingPosition) == 0x000228, "Member 'UWB_Tutorial_GamePadGuide_C::ScaleBox_FittingPosition' has a wrong offset!");
static_assert(offsetof(UWB_Tutorial_GamePadGuide_C, PositionAndScale) == 0x000230, "Member 'UWB_Tutorial_GamePadGuide_C::PositionAndScale' has a wrong offset!");
static_assert(offsetof(UWB_Tutorial_GamePadGuide_C, TextureMinusMirrorMinusMIVariable) == 0x000240, "Member 'UWB_Tutorial_GamePadGuide_C::TextureMinusMirrorMinusMIVariable' has a wrong offset!");
static_assert(offsetof(UWB_Tutorial_GamePadGuide_C, Index_0) == 0x000250, "Member 'UWB_Tutorial_GamePadGuide_C::Index_0' has a wrong offset!");
static_assert(offsetof(UWB_Tutorial_GamePadGuide_C, DynamicMaterial) == 0x000258, "Member 'UWB_Tutorial_GamePadGuide_C::DynamicMaterial' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameMiniMapMaterialController

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameMiniMapMaterialController.BP_AJBInGameMiniMapMaterialController_C.ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController
// 0x0550 (0x0550 - 0x0000)
struct BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBDamageAreaLocal_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_AJBDamageArea_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_GetAdvanceSafeArea_bExistAdvanceSafeArea; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAdvanceSafeArea_Radius;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAdvanceSafeArea_Location;              // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBDamageArea_C*                    CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcRelativeTransfrom_Location;           // 0x0048(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RadiusToMaterialUVRadius_ReturnValue;     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LocationToMaterialUVPosition_ReturnValue; // 0x0058(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSafeArea_Radius;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCurrentSafeArea_Location;              // 0x006C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetSafeArea_Radius;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetSafeArea_Location;               // 0x007C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0088(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcRelativeTransfrom_Location1;          // 0x0098(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LocationToMaterialUVPosition_ReturnValue1; // 0x00A4(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RadiusToMaterialUVRadius_ReturnValue1;    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcRelativeTransfrom_Location2;          // 0x00B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RadiusToMaterialUVRadius_ReturnValue2;    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LocationToMaterialUVPosition_ReturnValue2; // 0x00C8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0108(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x0194(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0xF];                                      // 0x01A1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x01B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector2D                              K2Node_CustomEvent_NormalizedPosition1;            // 0x01E0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_IconAngle1;                     // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_NormalizedPosition;             // 0x01EC(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_IconAngle;                      // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PairHP;                         // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0204(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayModeIsPair_ReturnValue;               // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21A[0x6];                                      // 0x021A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue1;      // 0x0220(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGamePlayerController_bIsValid;    // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGamePlayerController*             CallFunc_GetAJBInGamePlayerController_ReturnValue; // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBHighlightOnlyInGamePlayerController_bIsValid; // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGamePlayerController*             CallFunc_GetAJBHighlightOnlyInGamePlayerController_ReturnValue; // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess1;             // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance1;    // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExecutedReplay_ReturnValue;             // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetTargetActor_TargetActor;               // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACameraActor*                           K2Node_DynamicCast_AsCamera_Actor;                 // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInGamePlayerController_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Player_Controller; // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B2[0x2];                                      // 0x02B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetGameStartLocation_Location;            // 0x02B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x02C0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0xF];                                      // 0x02F1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ConvertTransformToRelative_ReturnValue;   // 0x0300(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0330(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x033C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0348(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base;    // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_LocationToMaterialUVPositionCenter_ReturnValue; // 0x0364(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_385[0x3];                                      // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue1;                // 0x0388(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x03A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ConvertTransformToRelative_ReturnValue1;  // 0x03D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetCharacterTransformforMapCenter_ReturnValue; // 0x0400(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location1;                 // 0x0430(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation1;                 // 0x043C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale1;                    // 0x0448(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location2;                 // 0x0454(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation2;                 // 0x0460(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale2;                    // 0x046C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LocationToMiniMapRelativePosition_ReturnValue; // 0x0498(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LocationToMiniMapRelativePosition_ReturnValue1; // 0x04A8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LocationToMiniMapRelativePosition_ReturnValue2; // 0x04B8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LocationToMaterialUVPositionCenter_ReturnValue1; // 0x04C8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R1;                            // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G1;                            // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B1;                            // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A1;                            // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LocationToMaterialUVPositionCenter_ReturnValue2; // 0x04E8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue2;                // 0x04F8(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R2;                            // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G2;                            // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B2;                            // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A2;                            // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Vector2d_ReturnValue;         // 0x0510(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue3;                // 0x0520(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBUIMapManager_C*                  CallFunc_GetUIMapmanager_UIMapManager;             // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBUIMapManager_C*                  CallFunc_GetUIMapmanager_UIMapManager1;            // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBUIMapManager_C*                  CallFunc_GetUIMapmanager_UIMapManager2;            // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController) == 0x000010, "Wrong alignment on BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController");
static_assert(sizeof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController) == 0x000550, "Wrong size on BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, EntryPoint) == 0x000000, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetAdvanceSafeArea_bExistAdvanceSafeArea) == 0x000028, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetAdvanceSafeArea_bExistAdvanceSafeArea' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetAdvanceSafeArea_Radius) == 0x00002C, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetAdvanceSafeArea_Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetAdvanceSafeArea_Location) == 0x000030, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetAdvanceSafeArea_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_CalcRelativeTransfrom_Location) == 0x000048, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_CalcRelativeTransfrom_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_RadiusToMaterialUVRadius_ReturnValue) == 0x000054, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_RadiusToMaterialUVRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_LocationToMaterialUVPosition_ReturnValue) == 0x000058, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_LocationToMaterialUVPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetCurrentSafeArea_Radius) == 0x000068, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetCurrentSafeArea_Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetCurrentSafeArea_Location) == 0x00006C, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetCurrentSafeArea_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetTargetSafeArea_Radius) == 0x000078, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetTargetSafeArea_Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetTargetSafeArea_Location) == 0x00007C, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetTargetSafeArea_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000088, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_CalcRelativeTransfrom_Location1) == 0x000098, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_CalcRelativeTransfrom_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_LocationToMaterialUVPosition_ReturnValue1) == 0x0000A4, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_LocationToMaterialUVPosition_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_RadiusToMaterialUVRadius_ReturnValue1) == 0x0000B4, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_RadiusToMaterialUVRadius_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_CalcRelativeTransfrom_Location2) == 0x0000B8, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_CalcRelativeTransfrom_Location2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_RadiusToMaterialUVRadius_ReturnValue2) == 0x0000C4, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_RadiusToMaterialUVRadius_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_LocationToMaterialUVPosition_ReturnValue2) == 0x0000C8, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_LocationToMaterialUVPosition_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x0000D8, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_Array_Add_ReturnValue) == 0x0000DC, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, Temp_bool_IsClosed_Variable) == 0x0000E0, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000E4, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakVector_X) == 0x0000F0, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakVector_Y) == 0x0000F4, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakVector_Z) == 0x0000F8, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_MakeVector_ReturnValue) == 0x0000FC, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000108, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000190, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_MakeVector_ReturnValue1) == 0x000194, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_IsDedicatedServer_ReturnValue) == 0x0001A0, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0001B0, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, K2Node_CustomEvent_NormalizedPosition1) == 0x0001E0, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::K2Node_CustomEvent_NormalizedPosition1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, K2Node_CustomEvent_IconAngle1) == 0x0001E8, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::K2Node_CustomEvent_IconAngle1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, K2Node_CustomEvent_NormalizedPosition) == 0x0001EC, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::K2Node_CustomEvent_NormalizedPosition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, K2Node_CustomEvent_IconAngle) == 0x0001F4, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::K2Node_CustomEvent_IconAngle' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, K2Node_CustomEvent_PairHP) == 0x0001F8, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::K2Node_CustomEvent_PairHP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, K2Node_Event_DeltaSeconds) == 0x0001FC, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, Temp_bool_Has_Been_Initd_Variable) == 0x000200, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_MakeVector2D_ReturnValue) == 0x000204, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetAJBGameInstance_bSuccess) == 0x00020C, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000210, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_PlayModeIsPair_ReturnValue) == 0x000218, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_PlayModeIsPair_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_IsDedicatedServer_ReturnValue1) == 0x000219, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_K2_GetComponentToWorld_ReturnValue1) == 0x000220, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_K2_GetComponentToWorld_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetAJBInGamePlayerController_bIsValid) == 0x000250, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetAJBInGamePlayerController_bIsValid' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetAJBInGamePlayerController_ReturnValue) == 0x000258, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetAJBInGamePlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetAJBHighlightOnlyInGamePlayerController_bIsValid) == 0x000260, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetAJBHighlightOnlyInGamePlayerController_bIsValid' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetAJBHighlightOnlyInGamePlayerController_ReturnValue) == 0x000268, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetAJBHighlightOnlyInGamePlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetAJBGameInstance_bSuccess1) == 0x000270, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetAJBGameInstance_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetAJBGameInstance_AJB_Game_Instance1) == 0x000278, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetAJBGameInstance_AJB_Game_Instance1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_IsExecutedReplay_ReturnValue) == 0x000280, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_IsExecutedReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetTargetActor_TargetActor) == 0x000288, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetTargetActor_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, K2Node_DynamicCast_AsCamera_Actor) == 0x000290, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::K2Node_DynamicCast_AsCamera_Actor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, K2Node_DynamicCast_bSuccess) == 0x000298, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, K2Node_DynamicCast_AsBI_AJBIn_Game_Player_Controller) == 0x0002A0, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::K2Node_DynamicCast_AsBI_AJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, K2Node_DynamicCast_bSuccess1) == 0x0002B0, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_Not_PreBool_ReturnValue) == 0x0002B1, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetGameStartLocation_Location) == 0x0002B4, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetGameStartLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x0002C0, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_IsValid_ReturnValue) == 0x0002F0, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_ConvertTransformToRelative_ReturnValue) == 0x000300, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_ConvertTransformToRelative_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakTransform_Location) == 0x000330, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakTransform_Rotation) == 0x00033C, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakTransform_Scale) == 0x000348, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, K2Node_DynamicCast_AsAJBIn_Game_Character_Base) == 0x000358, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::K2Node_DynamicCast_AsAJBIn_Game_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, K2Node_DynamicCast_bSuccess2) == 0x000360, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_LocationToMaterialUVPositionCenter_ReturnValue) == 0x000364, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_LocationToMaterialUVPositionCenter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakColor_R) == 0x000374, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakColor_G) == 0x000378, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakColor_B) == 0x00037C, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakColor_A) == 0x000380, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_IsValid_ReturnValue1) == 0x000384, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_MakeVector2D_ReturnValue1) == 0x000388, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_MakeVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000390, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, K2Node_DynamicCast_bSuccess3) == 0x000398, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetTransform_ReturnValue) == 0x0003A0, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_ConvertTransformToRelative_ReturnValue1) == 0x0003D0, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_ConvertTransformToRelative_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetCharacterTransformforMapCenter_ReturnValue) == 0x000400, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetCharacterTransformforMapCenter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakTransform_Location1) == 0x000430, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakTransform_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakTransform_Rotation1) == 0x00043C, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakTransform_Rotation1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakTransform_Scale1) == 0x000448, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakTransform_Scale1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakTransform_Location2) == 0x000454, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakTransform_Location2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakTransform_Rotation2) == 0x000460, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakTransform_Rotation2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakTransform_Scale2) == 0x00046C, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakTransform_Scale2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakRotator_Roll) == 0x000478, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakRotator_Pitch) == 0x00047C, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakRotator_Yaw) == 0x000480, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakRotator_Roll1) == 0x000484, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakRotator_Pitch1) == 0x000488, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakRotator_Yaw1) == 0x00048C, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakRotator_Yaw1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000490, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000494, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_LocationToMiniMapRelativePosition_ReturnValue) == 0x000498, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_LocationToMiniMapRelativePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_LocationToMiniMapRelativePosition_ReturnValue1) == 0x0004A8, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_LocationToMiniMapRelativePosition_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_LocationToMiniMapRelativePosition_ReturnValue2) == 0x0004B8, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_LocationToMiniMapRelativePosition_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_LocationToMaterialUVPositionCenter_ReturnValue1) == 0x0004C8, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_LocationToMaterialUVPositionCenter_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakColor_R1) == 0x0004D8, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakColor_R1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakColor_G1) == 0x0004DC, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakColor_G1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakColor_B1) == 0x0004E0, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakColor_B1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakColor_A1) == 0x0004E4, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakColor_A1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_LocationToMaterialUVPositionCenter_ReturnValue2) == 0x0004E8, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_LocationToMaterialUVPositionCenter_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_MakeVector2D_ReturnValue2) == 0x0004F8, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_MakeVector2D_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakColor_R2) == 0x000500, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakColor_R2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakColor_G2) == 0x000504, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakColor_G2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakColor_B2) == 0x000508, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakColor_B2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BreakColor_A2) == 0x00050C, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BreakColor_A2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_BuildString_Vector2d_ReturnValue) == 0x000510, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_BuildString_Vector2d_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_MakeVector2D_ReturnValue3) == 0x000520, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_MakeVector2D_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetUIMapmanager_UIMapManager) == 0x000528, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetUIMapmanager_UIMapManager' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetUIMapmanager_UIMapManager1) == 0x000530, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetUIMapmanager_UIMapManager1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_GetUIMapmanager_UIMapManager2) == 0x000538, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_GetUIMapmanager_UIMapManager2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController, CallFunc_IsValid_ReturnValue2) == 0x000540, "Member 'BP_AJBInGameMiniMapMaterialController_C_ExecuteUbergraph_BP_AJBInGameMiniMapMaterialController::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function BP_AJBInGameMiniMapMaterialController.BP_AJBInGameMiniMapMaterialController_C.SetPairIconInfo
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameMiniMapMaterialController_C_SetPairIconInfo final
{
public:
	struct FVector2D                              NormalizedPosition;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IconAngle;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PairHP;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameMiniMapMaterialController_C_SetPairIconInfo) == 0x000004, "Wrong alignment on BP_AJBInGameMiniMapMaterialController_C_SetPairIconInfo");
static_assert(sizeof(BP_AJBInGameMiniMapMaterialController_C_SetPairIconInfo) == 0x000010, "Wrong size on BP_AJBInGameMiniMapMaterialController_C_SetPairIconInfo");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_SetPairIconInfo, NormalizedPosition) == 0x000000, "Member 'BP_AJBInGameMiniMapMaterialController_C_SetPairIconInfo::NormalizedPosition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_SetPairIconInfo, IconAngle) == 0x000008, "Member 'BP_AJBInGameMiniMapMaterialController_C_SetPairIconInfo::IconAngle' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_SetPairIconInfo, PairHP) == 0x00000C, "Member 'BP_AJBInGameMiniMapMaterialController_C_SetPairIconInfo::PairHP' has a wrong offset!");

// Function BP_AJBInGameMiniMapMaterialController.BP_AJBInGameMiniMapMaterialController_C.SetPlayerIconInfo
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameMiniMapMaterialController_C_SetPlayerIconInfo final
{
public:
	struct FVector2D                              NormalizedPosition;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IconAngle;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameMiniMapMaterialController_C_SetPlayerIconInfo) == 0x000004, "Wrong alignment on BP_AJBInGameMiniMapMaterialController_C_SetPlayerIconInfo");
static_assert(sizeof(BP_AJBInGameMiniMapMaterialController_C_SetPlayerIconInfo) == 0x00000C, "Wrong size on BP_AJBInGameMiniMapMaterialController_C_SetPlayerIconInfo");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_SetPlayerIconInfo, NormalizedPosition) == 0x000000, "Member 'BP_AJBInGameMiniMapMaterialController_C_SetPlayerIconInfo::NormalizedPosition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_SetPlayerIconInfo, IconAngle) == 0x000008, "Member 'BP_AJBInGameMiniMapMaterialController_C_SetPlayerIconInfo::IconAngle' has a wrong offset!");

// Function BP_AJBInGameMiniMapMaterialController.BP_AJBInGameMiniMapMaterialController_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameMiniMapMaterialController_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameMiniMapMaterialController_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBInGameMiniMapMaterialController_C_ReceiveTick");
static_assert(sizeof(BP_AJBInGameMiniMapMaterialController_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBInGameMiniMapMaterialController_C_ReceiveTick");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameMiniMapMaterialController_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameMiniMapMaterialController.BP_AJBInGameMiniMapMaterialController_C.LocationToMaterialUVPositionCenter
// 0x0060 (0x0060 - 0x0000)
struct BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ReturnValue;                                       // 0x000C(0x0010)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue1;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorFloat_ReturnValue;         // 0x0044(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0050(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter) == 0x000004, "Wrong alignment on BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter");
static_assert(sizeof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter) == 0x000060, "Wrong size on BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter, Location) == 0x000000, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter, ReturnValue) == 0x00000C, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter, CallFunc_BreakVector_X) == 0x00001C, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter, CallFunc_BreakVector_Y) == 0x000020, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter, CallFunc_BreakVector_Z) == 0x000024, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x00002C, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter, CallFunc_MapRangeClamped_ReturnValue1) == 0x000034, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter::CallFunc_MapRangeClamped_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter, CallFunc_Subtract_VectorFloat_ReturnValue) == 0x000044, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter::CallFunc_Subtract_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000050, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPositionCenter::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameMiniMapMaterialController.BP_AJBInGameMiniMapMaterialController_C.LocationToMiniMapRelativePosition
// 0x0084 (0x0084 - 0x0000)
struct BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlayerLocation;                                    // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue1;           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0068(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0074(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition) == 0x000004, "Wrong alignment on BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition");
static_assert(sizeof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition) == 0x000084, "Wrong size on BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition, TargetLocation) == 0x000000, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition, PlayerLocation) == 0x00000C, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition::PlayerLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition, ReturnValue) == 0x000018, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition, CallFunc_BreakVector_X) == 0x000028, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition, CallFunc_BreakVector_Y) == 0x00002C, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition, CallFunc_BreakVector_Z) == 0x000030, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition, CallFunc_Square_ReturnValue) == 0x000034, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition, CallFunc_BreakVector_X1) == 0x000038, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition, CallFunc_BreakVector_Y1) == 0x00003C, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition, CallFunc_BreakVector_Z1) == 0x000040, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000048, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000050, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000054, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x000058, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x00005C, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000060, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition, CallFunc_MapRangeUnclamped_ReturnValue1) == 0x000064, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition::CallFunc_MapRangeUnclamped_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition, CallFunc_MakeVector_ReturnValue) == 0x000068, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000074, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMiniMapRelativePosition::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameMiniMapMaterialController.BP_AJBInGameMiniMapMaterialController_C.RadiusToMaterialUVRadius
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameMiniMapMaterialController_C_RadiusToMaterialUVRadius final
{
public:
	float                                         A;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameMiniMapMaterialController_C_RadiusToMaterialUVRadius) == 0x000004, "Wrong alignment on BP_AJBInGameMiniMapMaterialController_C_RadiusToMaterialUVRadius");
static_assert(sizeof(BP_AJBInGameMiniMapMaterialController_C_RadiusToMaterialUVRadius) == 0x00000C, "Wrong size on BP_AJBInGameMiniMapMaterialController_C_RadiusToMaterialUVRadius");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_RadiusToMaterialUVRadius, A) == 0x000000, "Member 'BP_AJBInGameMiniMapMaterialController_C_RadiusToMaterialUVRadius::A' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_RadiusToMaterialUVRadius, ReturnValue) == 0x000004, "Member 'BP_AJBInGameMiniMapMaterialController_C_RadiusToMaterialUVRadius::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_RadiusToMaterialUVRadius, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBInGameMiniMapMaterialController_C_RadiusToMaterialUVRadius::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameMiniMapMaterialController.BP_AJBInGameMiniMapMaterialController_C.LocationToMaterialUVPosition
// 0x0054 (0x0054 - 0x0000)
struct BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ReturnValue;                                       // 0x000C(0x0010)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue1;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0044(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition) == 0x000004, "Wrong alignment on BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition");
static_assert(sizeof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition) == 0x000054, "Wrong size on BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition, Location) == 0x000000, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition, ReturnValue) == 0x00000C, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition, CallFunc_BreakVector_X) == 0x00001C, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition, CallFunc_BreakVector_Y) == 0x000020, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition, CallFunc_BreakVector_Z) == 0x000024, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x00002C, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition, CallFunc_MapRangeClamped_ReturnValue1) == 0x000034, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition::CallFunc_MapRangeClamped_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000044, "Member 'BP_AJBInGameMiniMapMaterialController_C_LocationToMaterialUVPosition::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameMiniMapMaterialController.BP_AJBInGameMiniMapMaterialController_C.CalcRelativeTransfrom
// 0x00E0 (0x00E0 - 0x0000)
struct BP_AJBInGameMiniMapMaterialController_C_CalcRelativeTransfrom final
{
public:
	struct FVector                                InLocation;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x000C(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ConvertTransformToRelative_ReturnValue;   // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00BC(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameMiniMapMaterialController_C_CalcRelativeTransfrom) == 0x000010, "Wrong alignment on BP_AJBInGameMiniMapMaterialController_C_CalcRelativeTransfrom");
static_assert(sizeof(BP_AJBInGameMiniMapMaterialController_C_CalcRelativeTransfrom) == 0x0000E0, "Wrong size on BP_AJBInGameMiniMapMaterialController_C_CalcRelativeTransfrom");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_CalcRelativeTransfrom, InLocation) == 0x000000, "Member 'BP_AJBInGameMiniMapMaterialController_C_CalcRelativeTransfrom::InLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_CalcRelativeTransfrom, Location) == 0x00000C, "Member 'BP_AJBInGameMiniMapMaterialController_C_CalcRelativeTransfrom::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_CalcRelativeTransfrom, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000020, "Member 'BP_AJBInGameMiniMapMaterialController_C_CalcRelativeTransfrom::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_CalcRelativeTransfrom, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000050, "Member 'BP_AJBInGameMiniMapMaterialController_C_CalcRelativeTransfrom::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_CalcRelativeTransfrom, CallFunc_ConvertTransformToRelative_ReturnValue) == 0x000080, "Member 'BP_AJBInGameMiniMapMaterialController_C_CalcRelativeTransfrom::CallFunc_ConvertTransformToRelative_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_CalcRelativeTransfrom, CallFunc_BreakTransform_Location) == 0x0000B0, "Member 'BP_AJBInGameMiniMapMaterialController_C_CalcRelativeTransfrom::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_CalcRelativeTransfrom, CallFunc_BreakTransform_Rotation) == 0x0000BC, "Member 'BP_AJBInGameMiniMapMaterialController_C_CalcRelativeTransfrom::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_CalcRelativeTransfrom, CallFunc_BreakTransform_Scale) == 0x0000C8, "Member 'BP_AJBInGameMiniMapMaterialController_C_CalcRelativeTransfrom::CallFunc_BreakTransform_Scale' has a wrong offset!");

// Function BP_AJBInGameMiniMapMaterialController.BP_AJBInGameMiniMapMaterialController_C.GetTargetActor
// 0x0090 (0x0090 - 0x0000)
struct BP_AJBInGameMiniMapMaterialController_C_GetTargetActor final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LCandidateActor;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacter*                    K2Node_DynamicCast_AsAJBIn_Game_Character;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSeparating_ReturnValue;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetFocusActor_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAJBHighlightManager*                   CallFunc_GetHighlightManager_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameMiniMapMaterialController_C_GetTargetActor) == 0x000008, "Wrong alignment on BP_AJBInGameMiniMapMaterialController_C_GetTargetActor");
static_assert(sizeof(BP_AJBInGameMiniMapMaterialController_C_GetTargetActor) == 0x000090, "Wrong size on BP_AJBInGameMiniMapMaterialController_C_GetTargetActor");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetTargetActor, TargetActor) == 0x000000, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetTargetActor::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetTargetActor, LCandidateActor) == 0x000008, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetTargetActor::LCandidateActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetTargetActor, K2Node_DynamicCast_AsAJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetTargetActor::K2Node_DynamicCast_AsAJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetTargetActor, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetTargetActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetTargetActor, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetTargetActor::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetTargetActor, CallFunc_GetViewTarget_ReturnValue) == 0x000028, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetTargetActor::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetTargetActor, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetTargetActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetTargetActor, CallFunc_IsSeparating_ReturnValue) == 0x000031, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetTargetActor::CallFunc_IsSeparating_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetTargetActor, CallFunc_GetAJBGameInstance_bSuccess) == 0x000032, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetTargetActor::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetTargetActor, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000038, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetTargetActor::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetTargetActor, CallFunc_GetFocusActor_ReturnValue) == 0x000040, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetTargetActor::CallFunc_GetFocusActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetTargetActor, CallFunc_GetObjectName_ReturnValue) == 0x000048, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetTargetActor::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetTargetActor, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetTargetActor::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetTargetActor, CallFunc_IsValid_ReturnValue1) == 0x000068, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetTargetActor::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetTargetActor, CallFunc_Concat_StrStr_ReturnValue1) == 0x000070, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetTargetActor::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetTargetActor, CallFunc_GetHighlightManager_ReturnValue) == 0x000080, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetTargetActor::CallFunc_GetHighlightManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetTargetActor, CallFunc_IsPlayingReplay_ReturnValue) == 0x000088, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetTargetActor::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameMiniMapMaterialController.BP_AJBInGameMiniMapMaterialController_C.GetCharacterTransformforMapCenter
// 0x00D0 (0x00D0 - 0x0000)
struct BP_AJBInGameMiniMapMaterialController_C_GetCharacterTransformforMapCenter final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ReturnValue;                                       // 0x0010(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ConvertTransformToRelative_ReturnValue;   // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameMiniMapMaterialController_C_GetCharacterTransformforMapCenter) == 0x000010, "Wrong alignment on BP_AJBInGameMiniMapMaterialController_C_GetCharacterTransformforMapCenter");
static_assert(sizeof(BP_AJBInGameMiniMapMaterialController_C_GetCharacterTransformforMapCenter) == 0x0000D0, "Wrong size on BP_AJBInGameMiniMapMaterialController_C_GetCharacterTransformforMapCenter");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetCharacterTransformforMapCenter, TargetActor) == 0x000000, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetCharacterTransformforMapCenter::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetCharacterTransformforMapCenter, ReturnValue) == 0x000010, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetCharacterTransformforMapCenter::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetCharacterTransformforMapCenter, CallFunc_GetTransform_ReturnValue) == 0x000040, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetCharacterTransformforMapCenter::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetCharacterTransformforMapCenter, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000070, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetCharacterTransformforMapCenter::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetCharacterTransformforMapCenter, CallFunc_ConvertTransformToRelative_ReturnValue) == 0x0000A0, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetCharacterTransformforMapCenter::CallFunc_ConvertTransformToRelative_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameMiniMapMaterialController.BP_AJBInGameMiniMapMaterialController_C.GetUIMapManager
// 0x00F0 (0x00F0 - 0x0000)
struct BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager final
{
public:
	class ABP_AJBUIMapManager_C*                  UIMapManager;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Bool_ReturnValue;             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_AJBUIMapManager_C*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BuildString_Bool_ReturnValue1;            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGameHUD_bIsValid;                 // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameHUD*                          CallFunc_GetAJBInGameHUD_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBInGameHUD_C>    K2Node_DynamicCast_AsBI_AJBIn_Game_HUD;            // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBUIMapManager_C*                  CallFunc_GetUIMapManager_Manager;                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BuildString_Bool_ReturnValue2;            // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class ABP_AJBUIMapManager_C*>          CallFunc_GetAllActorsOfClass_OutActors;            // 0x00C8(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_AJBUIMapManager_C*                  CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager) == 0x000010, "Wrong alignment on BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager");
static_assert(sizeof(BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager) == 0x0000F0, "Wrong size on BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager, UIMapManager) == 0x000000, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager::UIMapManager' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000048, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager, CallFunc_BuildString_Bool_ReturnValue) == 0x000050, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager::CallFunc_BuildString_Bool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager, CallFunc_FinishSpawningActor_ReturnValue) == 0x000060, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager, CallFunc_IsValid_ReturnValue1) == 0x000068, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager, CallFunc_BuildString_Bool_ReturnValue1) == 0x000070, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager::CallFunc_BuildString_Bool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager, CallFunc_IsValid_ReturnValue2) == 0x000080, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager, CallFunc_GetAJBInGameHUD_bIsValid) == 0x000081, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager::CallFunc_GetAJBInGameHUD_bIsValid' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager, CallFunc_GetAJBInGameHUD_ReturnValue) == 0x000088, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager::CallFunc_GetAJBInGameHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager, K2Node_DynamicCast_AsBI_AJBIn_Game_HUD) == 0x000090, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager::K2Node_DynamicCast_AsBI_AJBIn_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager, CallFunc_GetUIMapManager_Manager) == 0x0000A8, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager::CallFunc_GetUIMapManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager, CallFunc_IsValid_ReturnValue3) == 0x0000B0, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager, CallFunc_BuildString_Bool_ReturnValue2) == 0x0000B8, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager::CallFunc_BuildString_Bool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000C8, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_AJBInGameMiniMapMaterialController_C_GetUIMapManager::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameMessageManagerProxy

#include "Basic.hpp"

#include "BP_AJBInGameMessageManagerProxy_classes.hpp"
#include "BP_AJBInGameMessageManagerProxy_parameters.hpp"


namespace SDK
{

// Function BP_AJBInGameMessageManagerProxy.BP_AJBInGameMessageManagerProxy_C.OnMessageRequestedToClients__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MessageType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value1                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value2                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBInGameMessageManagerProxy_C::OnMessageRequestedToClients__DelegateSignature(int32 MessageType, float Value1, float Value2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameMessageManagerProxy_C", "OnMessageRequestedToClients__DelegateSignature");

	Params::BP_AJBInGameMessageManagerProxy_C_OnMessageRequestedToClients__DelegateSignature Parms{};

	Parms.MessageType = MessageType;
	Parms.Value1 = Value1;
	Parms.Value2 = Value2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameMessageManagerProxy.BP_AJBInGameMessageManagerProxy_C.ExecuteUbergraph_BP_AJBInGameMessageManagerProxy
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBInGameMessageManagerProxy_C::ExecuteUbergraph_BP_AJBInGameMessageManagerProxy(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameMessageManagerProxy_C", "ExecuteUbergraph_BP_AJBInGameMessageManagerProxy");

	Params::BP_AJBInGameMessageManagerProxy_C_ExecuteUbergraph_BP_AJBInGameMessageManagerProxy Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameMessageManagerProxy.BP_AJBInGameMessageManagerProxy_C.RequestMessage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MessageType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value1                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value2                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBInGameMessageManagerProxy_C::RequestMessage(int32 MessageType, float Value1, float Value2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameMessageManagerProxy_C", "RequestMessage");

	Params::BP_AJBInGameMessageManagerProxy_C_RequestMessage Parms{};

	Parms.MessageType = MessageType;
	Parms.Value1 = Value1;
	Parms.Value2 = Value2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameMessageManagerProxy.BP_AJBInGameMessageManagerProxy_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBInGameMessageManagerProxy_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameMessageManagerProxy_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}


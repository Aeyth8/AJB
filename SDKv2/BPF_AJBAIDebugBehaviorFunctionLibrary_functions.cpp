#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPF_AJBAIDebugBehaviorFunctionLibrary

#include "Basic.hpp"

#include "BPF_AJBAIDebugBehaviorFunctionLibrary_classes.hpp"
#include "BPF_AJBAIDebugBehaviorFunctionLibrary_parameters.hpp"


namespace SDK
{

// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.GetAIDebugComponent
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AAIController*                    AI_Controller                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_AJBAIDebugComponent_C*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Exists                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

class UBP_AJBAIDebugComponent_C* UBPF_AJBAIDebugBehaviorFunctionLibrary_C::GetAIDebugComponent(class AAIController* AI_Controller, class UObject* __WorldContext, bool* Exists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBAIDebugBehaviorFunctionLibrary_C", "GetAIDebugComponent");

	Params::BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetAIDebugComponent Parms{};

	Parms.AI_Controller = AI_Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Exists != nullptr)
		*Exists = Parms.Exists;

	return Parms.ReturnValue;
}


// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.IfDebugDrawOnTask
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AAIController*                    AI_Controller                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBPF_AJBAIDebugBehaviorFunctionLibrary_C::IfDebugDrawOnTask(class AAIController* AI_Controller, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBAIDebugBehaviorFunctionLibrary_C", "IfDebugDrawOnTask");

	Params::BPF_AJBAIDebugBehaviorFunctionLibrary_C_IfDebugDrawOnTask Parms{};

	Parms.AI_Controller = AI_Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.AI_DebugDrawLineBox
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDebugDrawFlag                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          LineStart                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LineEnd                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BoxExtent                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         BoxRotation                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FLinearColor                     LineColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LineThickness                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BoxThickness                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_AJBAIDebugBehaviorFunctionLibrary_C::AI_DebugDrawLineBox(bool bDebugDrawFlag, const struct FVector& LineStart, const struct FVector& LineEnd, const struct FVector& BoxExtent, const struct FRotator& BoxRotation, const struct FLinearColor& LineColor, float Duration, float LineThickness, float BoxThickness, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBAIDebugBehaviorFunctionLibrary_C", "AI_DebugDrawLineBox");

	Params::BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox Parms{};

	Parms.bDebugDrawFlag = bDebugDrawFlag;
	Parms.LineStart = std::move(LineStart);
	Parms.LineEnd = std::move(LineEnd);
	Parms.BoxExtent = std::move(BoxExtent);
	Parms.BoxRotation = std::move(BoxRotation);
	Parms.LineColor = std::move(LineColor);
	Parms.Duration = Duration;
	Parms.LineThickness = LineThickness;
	Parms.BoxThickness = BoxThickness;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.AI_DebugDrawPathPointLineBox
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNavigationPath*                  NavigationPath                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDebugDrawFlag                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          BoxExtent                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         BoxRotation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FLinearColor                     ColorOnTheWay                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     ColorDestination                                       (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LineThickness                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BoxThickness                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_AJBAIDebugBehaviorFunctionLibrary_C::AI_DebugDrawPathPointLineBox(class UNavigationPath* NavigationPath, bool bDebugDrawFlag, const struct FVector& BoxExtent, const struct FRotator& BoxRotation, const struct FLinearColor& ColorOnTheWay, const struct FLinearColor& ColorDestination, float Duration, float LineThickness, float BoxThickness, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBAIDebugBehaviorFunctionLibrary_C", "AI_DebugDrawPathPointLineBox");

	Params::BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox Parms{};

	Parms.NavigationPath = NavigationPath;
	Parms.bDebugDrawFlag = bDebugDrawFlag;
	Parms.BoxExtent = std::move(BoxExtent);
	Parms.BoxRotation = std::move(BoxRotation);
	Parms.ColorOnTheWay = std::move(ColorOnTheWay);
	Parms.ColorDestination = std::move(ColorDestination);
	Parms.Duration = Duration;
	Parms.LineThickness = LineThickness;
	Parms.BoxThickness = BoxThickness;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.AI_DebugSetNodeStatusForMovement
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAIController*                    AI_Controller                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Status                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_AJBAIDebugBehaviorFunctionLibrary_C::AI_DebugSetNodeStatusForMovement(class AAIController* AI_Controller, const class FString& Status, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBAIDebugBehaviorFunctionLibrary_C", "AI_DebugSetNodeStatusForMovement");

	Params::BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForMovement Parms{};

	Parms.AI_Controller = AI_Controller;
	Parms.Status = std::move(Status);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.AI_DebugSetNodeStatusForAction
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAIController*                    AI_Controller                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Status                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_AJBAIDebugBehaviorFunctionLibrary_C::AI_DebugSetNodeStatusForAction(class AAIController* AI_Controller, const class FString& Status, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBAIDebugBehaviorFunctionLibrary_C", "AI_DebugSetNodeStatusForAction");

	Params::BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForAction Parms{};

	Parms.AI_Controller = AI_Controller;
	Parms.Status = std::move(Status);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.AI_DebugSetNodeStatusForLastError
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAIController*                    AI_Controller                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Status                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_AJBAIDebugBehaviorFunctionLibrary_C::AI_DebugSetNodeStatusForLastError(class AAIController* AI_Controller, const class FString& Status, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBAIDebugBehaviorFunctionLibrary_C", "AI_DebugSetNodeStatusForLastError");

	Params::BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForLastError Parms{};

	Parms.AI_Controller = AI_Controller;
	Parms.Status = std::move(Status);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.AI_DebugGetStringFromGameplayTagContainer
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            Container                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// class FString                           ReplaceFrom                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ReplaceTo                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBPF_AJBAIDebugBehaviorFunctionLibrary_C::AI_DebugGetStringFromGameplayTagContainer(const struct FGameplayTagContainer& Container, const class FString& ReplaceFrom, const class FString& ReplaceTo, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBAIDebugBehaviorFunctionLibrary_C", "AI_DebugGetStringFromGameplayTagContainer");

	Params::BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer Parms{};

	Parms.Container = std::move(Container);
	Parms.ReplaceFrom = std::move(ReplaceFrom);
	Parms.ReplaceTo = std::move(ReplaceTo);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.AI_GetLogColor
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     AI_Log_Color                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FLinearColor UBPF_AJBAIDebugBehaviorFunctionLibrary_C::AI_GetLogColor(const struct FGameplayTag& AI_Log_Color, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBAIDebugBehaviorFunctionLibrary_C", "AI_GetLogColor");

	Params::BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_GetLogColor Parms{};

	Parms.AI_Log_Color = std::move(AI_Log_Color);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.AI_DebugDiluteColor
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FLinearColor UBPF_AJBAIDebugBehaviorFunctionLibrary_C::AI_DebugDiluteColor(const struct FLinearColor& Color, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBAIDebugBehaviorFunctionLibrary_C", "AI_DebugDiluteColor");

	Params::BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDiluteColor Parms{};

	Parms.Color = std::move(Color);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.GetDebugAICaption
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AAIController*                    AI_Controller                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBPF_AJBAIDebugBehaviorFunctionLibrary_C::GetDebugAICaption(class AAIController* AI_Controller, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBAIDebugBehaviorFunctionLibrary_C", "GetDebugAICaption");

	Params::BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaption Parms{};

	Parms.AI_Controller = AI_Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.GetDebugAICaptionFromComponent
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UActorComponent*                  Component_On_AI_Controller                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBPF_AJBAIDebugBehaviorFunctionLibrary_C::GetDebugAICaptionFromComponent(class UActorComponent* Component_On_AI_Controller, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBAIDebugBehaviorFunctionLibrary_C", "GetDebugAICaptionFromComponent");

	Params::BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaptionFromComponent Parms{};

	Parms.Component_On_AI_Controller = Component_On_AI_Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


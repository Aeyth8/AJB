#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_AJBJumpIfFacingInstantWall

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BTS_AJBJumpIfFacingInstantWall.BTS_AJBJumpIfFacingInstantWall_C.ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall
// 0x01B8 (0x01B8 - 0x0000)
struct BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBInGameAIRecognition_C*           CallFunc_GetRecognition_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIInputProxy_C*            CallFunc_GetInput_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIRecognition_C*           CallFunc_GetRecognition_ReturnValue1;              // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameAIImaginaryCharacter_C*    CallFunc_GetControllingImaginaryCharacter_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEventTagLocker*                        CallFunc_SpawnEventTagLocker_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_ReturnValue;                  // 0x0064(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsJumping_ReturnValue;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_AITraceObjectTypesWithPlayers_ReturnValue; // 0x0078(0x0010)(ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0088(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0094(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x00A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B[0x1];                                      // 0x012B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0134(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0140(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x014C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0158(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0190(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x019C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInstantWall_C*                   K2Node_DynamicCast_AsBP_AJBInstant_Wall;           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall) == 0x000008, "Wrong alignment on BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall");
static_assert(sizeof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall) == 0x0001B8, "Wrong size on BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, EntryPoint) == 0x000000, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, Temp_object_Variable) == 0x000008, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, K2Node_Event_OwnerController) == 0x000018, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, K2Node_Event_ControlledPawn) == 0x000020, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, K2Node_Event_DeltaSeconds) == 0x000028, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_GetRecognition_ReturnValue) == 0x000030, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_GetRecognition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_GetInput_ReturnValue) == 0x000038, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_GetInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_GetRecognition_ReturnValue1) == 0x000040, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_GetRecognition_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_GetControllingImaginaryCharacter_ReturnValue) == 0x000048, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_GetControllingImaginaryCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_SpawnEventTagLocker_ReturnValue) == 0x000050, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_SpawnEventTagLocker_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_GetForwardVector_ReturnValue) == 0x000058, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_GetLocation_ReturnValue) == 0x000064, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_GetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_IsJumping_ReturnValue) == 0x000070, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_IsJumping_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, Temp_bool_IsClosed_Variable) == 0x000071, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, Temp_bool_Has_Been_Initd_Variable) == 0x000072, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_AITraceObjectTypesWithPlayers_ReturnValue) == 0x000078, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_AITraceObjectTypesWithPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000088, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_Add_VectorVector_ReturnValue) == 0x000094, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0000A0, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000128, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_BreakHitResult_bBlockingHit) == 0x000129, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_BreakHitResult_bInitialOverlap) == 0x00012A, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_BreakHitResult_Time) == 0x00012C, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_BreakHitResult_Distance) == 0x000130, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_BreakHitResult_Location) == 0x000134, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_BreakHitResult_ImpactPoint) == 0x000140, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_BreakHitResult_Normal) == 0x00014C, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_BreakHitResult_ImpactNormal) == 0x000158, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_BreakHitResult_HitItem) == 0x000188, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_BreakHitResult_FaceIndex) == 0x00018C, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_BreakHitResult_TraceStart) == 0x000190, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, CallFunc_BreakHitResult_TraceEnd) == 0x00019C, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, K2Node_DynamicCast_AsBP_AJBInstant_Wall) == 0x0001A8, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::K2Node_DynamicCast_AsBP_AJBInstant_Wall' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ExecuteUbergraph_BTS_AJBJumpIfFacingInstantWall::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BTS_AJBJumpIfFacingInstantWall.BTS_AJBJumpIfFacingInstantWall_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTS_AJBJumpIfFacingInstantWall_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBJumpIfFacingInstantWall_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTS_AJBJumpIfFacingInstantWall_C_ReceiveTickAI");
static_assert(sizeof(BTS_AJBJumpIfFacingInstantWall_C_ReceiveTickAI) == 0x000018, "Wrong size on BTS_AJBJumpIfFacingInstantWall_C_ReceiveTickAI");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_AJBJumpIfFacingInstantWall_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTS_AJBJumpIfFacingInstantWall_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

}


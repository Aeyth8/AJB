#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameProjectileSHA

#include "Basic.hpp"

#include "BP_AJBInGameProjectile_Straight_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBInGameProjectileSHA.BP_AJBInGameProjectileSHA_C
// 0x0038 (0x04C8 - 0x0490)
class ABP_AJBInGameProjectileSHA_C final : public ABP_AJBInGameProjectile_Straight_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBInGameProjectileSHA_C;        // 0x0490(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               PS_HEG_ProjectileES_Trail_GL;                      // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         GravityScale;                                      // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugShowTrySpawnSHAInfo_Server_;                 // 0x04AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AD[0x3];                                      // 0x04AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ExtrusionBuffer;                                   // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B4[0x4];                                      // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DisappearParticleTag;                              // 0x04B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bAlreadySpawnSHA_Server_;                          // 0x04C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_AJBInGameProjectileSHA(int32 EntryPoint);
	void OnPassiveAddedAfterSetCauser(const struct FGameplayTag& AddCondition, class UObject* Causer);
	void MC_OnCancelSHAProjectile();
	void CancelSHAProjectile_Server();
	void OnCritical();
	void OnBecomeLastSurvivor();
	void OnCharacterDead(const struct FGameplayTag& DamageType, class AActor* DeadActor, class AActor* DamageCauser);
	void ShowTrySpawnSHAInfo(const struct FVector& HitLocation_0, const struct FVector& HitNormal_0, const struct FVector& AdjustLocation, float CapsuleHeight, float CapsuleRadius, const struct FRotator& Rotation);
	void ShowSHAPositioningInfo(EPositioningSafeLocationResult Result);
	void TrySpawnSHA(const struct FVector& Location, const struct FVector& Normal);
	void AddGravityScale();
	void ReceiveBeginPlay();
	void OnProjectileHit(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult, bool bHeadShot, bool bPenetrate_0, bool bFirstHit);
	void OnROS_ProjectileHit(class AActor* HitActor, const struct FVector& HitLocation_0, const struct FVector& HitNormal_0, bool bHeadShot, bool bPenetrate_0, bool bFirstHit, float CuttingRate, bool bDisableDamage, bool bReflect, const struct FRotator& ReflectRotation, bool bBlocking, const struct FGameplayTag& ReflectSkillTag_0);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBInGameProjectileSHA_C">();
	}
	static class ABP_AJBInGameProjectileSHA_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBInGameProjectileSHA_C>();
	}
};
static_assert(alignof(ABP_AJBInGameProjectileSHA_C) == 0x000008, "Wrong alignment on ABP_AJBInGameProjectileSHA_C");
static_assert(sizeof(ABP_AJBInGameProjectileSHA_C) == 0x0004C8, "Wrong size on ABP_AJBInGameProjectileSHA_C");
static_assert(offsetof(ABP_AJBInGameProjectileSHA_C, UberGraphFrame_BP_AJBInGameProjectileSHA_C) == 0x000490, "Member 'ABP_AJBInGameProjectileSHA_C::UberGraphFrame_BP_AJBInGameProjectileSHA_C' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectileSHA_C, PS_HEG_ProjectileES_Trail_GL) == 0x000498, "Member 'ABP_AJBInGameProjectileSHA_C::PS_HEG_ProjectileES_Trail_GL' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectileSHA_C, SkeletalMesh) == 0x0004A0, "Member 'ABP_AJBInGameProjectileSHA_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectileSHA_C, GravityScale) == 0x0004A8, "Member 'ABP_AJBInGameProjectileSHA_C::GravityScale' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectileSHA_C, bDebugShowTrySpawnSHAInfo_Server_) == 0x0004AC, "Member 'ABP_AJBInGameProjectileSHA_C::bDebugShowTrySpawnSHAInfo_Server_' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectileSHA_C, ExtrusionBuffer) == 0x0004B0, "Member 'ABP_AJBInGameProjectileSHA_C::ExtrusionBuffer' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectileSHA_C, DisappearParticleTag) == 0x0004B8, "Member 'ABP_AJBInGameProjectileSHA_C::DisappearParticleTag' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectileSHA_C, bAlreadySpawnSHA_Server_) == 0x0004C0, "Member 'ABP_AJBInGameProjectileSHA_C::bAlreadySpawnSHA_Server_' has a wrong offset!");

}


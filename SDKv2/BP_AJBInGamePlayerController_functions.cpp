#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGamePlayerController

#include "Basic.hpp"

#include "BP_AJBInGamePlayerController_classes.hpp"
#include "BP_AJBInGamePlayerController_parameters.hpp"


namespace SDK
{

// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnReadyCharacterDispatcher__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   PlayerID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAJBInGameCharacter*              TargetCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnReadyCharacterDispatcher__DelegateSignature(uint8 PlayerID, class AAJBInGameCharacter* TargetCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnReadyCharacterDispatcher__DelegateSignature");

	Params::BP_AJBInGamePlayerController_C_OnReadyCharacterDispatcher__DelegateSignature Parms{};

	Parms.PlayerID = PlayerID;
	Parms.TargetCharacter = TargetCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnDetermineLivingTime_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTimespan                        LivingTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnDetermineLivingTime_Local__DelegateSignature(const struct FTimespan& LivingTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnDetermineLivingTime_Local__DelegateSignature");

	Params::BP_AJBInGamePlayerController_C_OnDetermineLivingTime_Local__DelegateSignature Parms{};

	Parms.LivingTime = std::move(LivingTime);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnDetermineBattleGameRank_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   BattleGameRank_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   BattleGameRankWithoutCPU                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnDetermineBattleGameRank_Local__DelegateSignature(int32 BattleGameRank_0, int32 BattleGameRankWithoutCPU)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnDetermineBattleGameRank_Local__DelegateSignature");

	Params::BP_AJBInGamePlayerController_C_OnDetermineBattleGameRank_Local__DelegateSignature Parms{};

	Parms.BattleGameRank_0 = BattleGameRank_0;
	Parms.BattleGameRankWithoutCPU = BattleGameRankWithoutCPU;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnDetermineWatchingTime_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTimespan                        WatchingTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnDetermineWatchingTime_Local__DelegateSignature(const struct FTimespan& WatchingTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnDetermineWatchingTime_Local__DelegateSignature");

	Params::BP_AJBInGamePlayerController_C_OnDetermineWatchingTime_Local__DelegateSignature Parms{};

	Parms.WatchingTime = std::move(WatchingTime);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnSetViewTargetToNewSpectator_Local__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::OnSetViewTargetToNewSpectator_Local__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnSetViewTargetToNewSpectator_Local__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ExecuteUbergraph_BP_AJBInGamePlayerController
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::ExecuteUbergraph_BP_AJBInGamePlayerController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ExecuteUbergraph_BP_AJBInGamePlayerController");

	Params::BP_AJBInGamePlayerController_C_ExecuteUbergraph_BP_AJBInGamePlayerController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ChangeDashInputMode
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EDashInputMode                          NewMode                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::ChangeDashInputMode(EDashInputMode NewMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ChangeDashInputMode");

	Params::BP_AJBInGamePlayerController_C_ChangeDashInputMode Parms{};

	Parms.NewMode = NewMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.InitializeDashInputMode
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::InitializeDashInputMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "InitializeDashInputMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.NotifySettingNewViewTarget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          NewViewTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::NotifySettingNewViewTarget(class UObject* NewViewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "NotifySettingNewViewTarget");

	Params::BP_AJBInGamePlayerController_C_NotifySettingNewViewTarget Parms{};

	Parms.NewViewTarget = NewViewTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.WaitForNewViewTarget
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::WaitForNewViewTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "WaitForNewViewTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnPawnLeavingGameBP
// (Event, Protected, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::OnPawnLeavingGameBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnPawnLeavingGameBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ChangeKeyAssign
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EAJBKeyConfigType                       KeyConfigType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::ChangeKeyAssign(EAJBKeyConfigType KeyConfigType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ChangeKeyAssign");

	Params::BP_AJBInGamePlayerController_C_ChangeKeyAssign Parms{};

	Parms.KeyConfigType = KeyConfigType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnSetupInputComponentBP
// (Event, Public, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::OnSetupInputComponentBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnSetupInputComponentBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROC_NotifySettingViewTargetToNewSpectator
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           BeforeViewTarget                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           CurrentViewTarget                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bBeforeAndCurrentAreRelated                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGamePlayerController_C::ROC_NotifySettingViewTargetToNewSpectator(class AActor* BeforeViewTarget, class AActor* CurrentViewTarget, bool bBeforeAndCurrentAreRelated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROC_NotifySettingViewTargetToNewSpectator");

	Params::BP_AJBInGamePlayerController_C_ROC_NotifySettingViewTargetToNewSpectator Parms{};

	Parms.BeforeViewTarget = BeforeViewTarget;
	Parms.CurrentViewTarget = CurrentViewTarget;
	Parms.bBeforeAndCurrentAreRelated = bBeforeAndCurrentAreRelated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ReceiveTick");

	Params::BP_AJBInGamePlayerController_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROC_SetClientControlRotation
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ABP_AJBInGamePlayerController_C::ROC_SetClientControlRotation(const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROC_SetClientControlRotation");

	Params::BP_AJBInGamePlayerController_C_ROC_SetClientControlRotation Parms{};

	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.BeginPlay_ServerOnly
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::BeginPlay_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "BeginPlay_ServerOnly");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROC_SyncProperties
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ControlledMatchingPlayerIndex                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAJBInGameCharacterBase*          PairCharacter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           PairID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::ROC_SyncProperties(int32 ControlledMatchingPlayerIndex, class AAJBInGameCharacterBase* PairCharacter, const class FString& PairID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROC_SyncProperties");

	Params::BP_AJBInGamePlayerController_C_ROC_SyncProperties Parms{};

	Parms.ControlledMatchingPlayerIndex = ControlledMatchingPlayerIndex;
	Parms.PairCharacter = PairCharacter;
	Parms.PairID = std::move(PairID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_SyncProperties
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ROS_SyncProperties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_SyncProperties");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.BeginPlay_LocalController
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::BeginPlay_LocalController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "BeginPlay_LocalController");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_OnPlayerFinalize
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ROS_OnPlayerFinalize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_OnPlayerFinalize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnPlayerFinalize_Local
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::OnPlayerFinalize_Local()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnPlayerFinalize_Local");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.SetSpectatorTarget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::SetSpectatorTarget(class ABP_AJBInGameCharacter_C* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "SetSpectatorTarget");

	Params::BP_AJBInGamePlayerController_C_SetSpectatorTarget Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_TryChangeViewTarget
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ROS_TryChangeViewTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_TryChangeViewTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ChangeViewTargetAtRandom
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ChangeViewTargetAtRandom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ChangeViewTargetAtRandom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROC_SetViewTargetFromCharacter
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         Character_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::ROC_SetViewTargetFromCharacter(class ABP_AJBInGameCharacter_C* Character_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROC_SetViewTargetFromCharacter");

	Params::BP_AJBInGamePlayerController_C_ROC_SetViewTargetFromCharacter Parms{};

	Parms.Character_0 = Character_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ResetStandby
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ResetStandby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ResetStandby");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_StandbyOK
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ROS_StandbyOK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_StandbyOK");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROC_RequestCharactorNo
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ROC_RequestCharactorNo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROC_RequestCharactorNo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_SendCharaInfo
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CharacterNo_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::ROS_SendCharaInfo(int32 CharacterNo_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_SendCharaInfo");

	Params::BP_AJBInGamePlayerController_C_ROS_SendCharaInfo Parms{};

	Parms.CharacterNo_0 = CharacterNo_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROC_Debug_SyncMatchingPlayerInfo
// (Net, NetReliable, HasOutParams, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   KeyList                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FMatchingPlayerInfo>      ValueList                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ABP_AJBInGamePlayerController_C::ROC_Debug_SyncMatchingPlayerInfo(const TArray<class FString>& KeyList, const TArray<struct FMatchingPlayerInfo>& ValueList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROC_Debug_SyncMatchingPlayerInfo");

	Params::BP_AJBInGamePlayerController_C_ROC_Debug_SyncMatchingPlayerInfo Parms{};

	Parms.KeyList = std::move(KeyList);
	Parms.ValueList = std::move(ValueList);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_Debug_ChangeSkinColorAtRandom
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ROS_Debug_ChangeSkinColorAtRandom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_Debug_ChangeSkinColorAtRandom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.Debug_ROC_PrintPairInfo
// (Net, NetReliable, HasOutParams, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   PairInfoStrings                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ABP_AJBInGamePlayerController_C::Debug_ROC_PrintPairInfo(const TArray<class FString>& PairInfoStrings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "Debug_ROC_PrintPairInfo");

	Params::BP_AJBInGamePlayerController_C_Debug_ROC_PrintPairInfo Parms{};

	Parms.PairInfoStrings = std::move(PairInfoStrings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.Debug_ROS_PrintPairInfo
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::Debug_ROS_PrintPairInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "Debug_ROS_PrintPairInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_Debug_ChangeDamageArea
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   AreaType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::ROS_Debug_ChangeDamageArea(uint8 AreaType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_Debug_ChangeDamageArea");

	Params::BP_AJBInGamePlayerController_C_ROS_Debug_ChangeDamageArea Parms{};

	Parms.AreaType = AreaType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.Debug_ChangeDamageArea
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   AreaType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::Debug_ChangeDamageArea(uint8 AreaType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "Debug_ChangeDamageArea");

	Params::BP_AJBInGamePlayerController_C_Debug_ChangeDamageArea Parms{};

	Parms.AreaType = AreaType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_DebugCharacterDamage
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::ROS_DebugCharacterDamage(int32 Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_DebugCharacterDamage");

	Params::BP_AJBInGamePlayerController_C_ROS_DebugCharacterDamage Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.DebugCharacterDamage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::DebugCharacterDamage(int32 Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "DebugCharacterDamage");

	Params::BP_AJBInGamePlayerController_C_DebugCharacterDamage Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_Debug_VanishDamageArea
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ROS_Debug_VanishDamageArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_Debug_VanishDamageArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.Debug_VanishDamageArea
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::Debug_VanishDamageArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "Debug_VanishDamageArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ToggleFlag_ShowCloseRangeDebugInfo
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ToggleFlag_ShowCloseRangeDebugInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ToggleFlag_ShowCloseRangeDebugInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_DebugShowSpectatorsInfo
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGamePlayerController_C::ROS_DebugShowSpectatorsInfo(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_DebugShowSpectatorsInfo");

	Params::BP_AJBInGamePlayerController_C_ROS_DebugShowSpectatorsInfo Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.DebugShowWwiseInfo
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShowDebugPrint                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGamePlayerController_C::DebugShowWwiseInfo(bool bShowDebugPrint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "DebugShowWwiseInfo");

	Params::BP_AJBInGamePlayerController_C_DebugShowWwiseInfo Parms{};

	Parms.bShowDebugPrint = bShowDebugPrint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnDebugSuicide
// (Event, Protected, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::OnDebugSuicide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnDebugSuicide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_Suicide
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ROS_Suicide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_Suicide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROC_ResponsePlayerInfo
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Player_ID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Team_ID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Charactor_ID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EInGameProgressID                       In_Game_Progress_ID                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FStartLocation                   Start_Location                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class FString                           InString                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::ROC_ResponsePlayerInfo(uint8 Player_ID, uint8 Team_ID, uint8 Charactor_ID, EInGameProgressID In_Game_Progress_ID, const struct FStartLocation& Start_Location, const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROC_ResponsePlayerInfo");

	Params::BP_AJBInGamePlayerController_C_ROC_ResponsePlayerInfo Parms{};

	Parms.Player_ID = Player_ID;
	Parms.Team_ID = Team_ID;
	Parms.Charactor_ID = Charactor_ID;
	Parms.In_Game_Progress_ID = In_Game_Progress_ID;
	Parms.Start_Location = std::move(Start_Location);
	Parms.InString = std::move(InString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_RequestPlayerInfo
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ROS_RequestPlayerInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_RequestPlayerInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ToggleShowAtkHitLocation
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ToggleShowAtkHitLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ToggleShowAtkHitLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_DebugRemovePassiveSkills
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ROS_DebugRemovePassiveSkills()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_DebugRemovePassiveSkills");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.DebugRemovePassiveSkills
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::DebugRemovePassiveSkills()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "DebugRemovePassiveSkills");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_DebugAddPassiveSkill
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     PassiveSkillTag                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Causer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::ROS_DebugAddPassiveSkill(const struct FGameplayTag& PassiveSkillTag, class UObject* Causer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_DebugAddPassiveSkill");

	Params::BP_AJBInGamePlayerController_C_ROS_DebugAddPassiveSkill Parms{};

	Parms.PassiveSkillTag = std::move(PassiveSkillTag);
	Parms.Causer = Causer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.DebugAddPassiveSkill
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     PassiveSkillTag                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::DebugAddPassiveSkill(const struct FGameplayTag& PassiveSkillTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "DebugAddPassiveSkill");

	Params::BP_AJBInGamePlayerController_C_DebugAddPassiveSkill Parms{};

	Parms.PassiveSkillTag = std::move(PassiveSkillTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_DebugTogglePauseDamageArea
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGamePlayerController_C::ROS_DebugTogglePauseDamageArea(bool IsOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_DebugTogglePauseDamageArea");

	Params::BP_AJBInGamePlayerController_C_ROS_DebugTogglePauseDamageArea Parms{};

	Parms.IsOn = IsOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.DebugTogglePauseDamageArea
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsOn                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGamePlayerController_C::DebugTogglePauseDamageArea(bool bIsOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "DebugTogglePauseDamageArea");

	Params::BP_AJBInGamePlayerController_C_DebugTogglePauseDamageArea Parms{};

	Parms.bIsOn = bIsOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnChangeQualityFromDebugMenu
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::OnChangeQualityFromDebugMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnChangeQualityFromDebugMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnDebugChangeQuality
// (Event, Protected, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::OnDebugChangeQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnDebugChangeQuality");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.DebugSetNPCNum
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NPCNum                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::DebugSetNPCNum(int32 NPCNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "DebugSetNPCNum");

	Params::BP_AJBInGamePlayerController_C_DebugSetNPCNum Parms{};

	Parms.NPCNum = NPCNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_DebugSetNPCNum
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   NPCNum                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::ROS_DebugSetNPCNum(uint8 NPCNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_DebugSetNPCNum");

	Params::BP_AJBInGamePlayerController_C_ROS_DebugSetNPCNum Parms{};

	Parms.NPCNum = NPCNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_DebugCharaChange
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CharacterNo_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::ROS_DebugCharaChange(int32 CharacterNo_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_DebugCharaChange");

	Params::BP_AJBInGamePlayerController_C_ROS_DebugCharaChange Parms{};

	Parms.CharacterNo_0 = CharacterNo_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.DebugCharacterChange
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CharacterNo_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::DebugCharacterChange(int32 CharacterNo_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "DebugCharacterChange");

	Params::BP_AJBInGamePlayerController_C_DebugCharacterChange Parms{};

	Parms.CharacterNo_0 = CharacterNo_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.CallStopClimaxBGM
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::CallStopClimaxBGM()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "CallStopClimaxBGM");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.CheckPlayClimaxBGMByLivingPlayerCount
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LivingPlayerRate                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PairCount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::CheckPlayClimaxBGMByLivingPlayerCount(int32 Count, float LivingPlayerRate, int32 PairCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "CheckPlayClimaxBGMByLivingPlayerCount");

	Params::BP_AJBInGamePlayerController_C_CheckPlayClimaxBGMByLivingPlayerCount Parms{};

	Parms.Count = Count;
	Parms.LivingPlayerRate = LivingPlayerRate;
	Parms.PairCount = PairCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.CheckPlayClimaxBGMByDamageArea
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::CheckPlayClimaxBGMByDamageArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "CheckPlayClimaxBGMByDamageArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.SetDeathCamera(Client)
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBinGameDeathCamera_C*       DeathCamera_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::SetDeathCamera_Client_(class ABP_AJBinGameDeathCamera_C* DeathCamera_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "SetDeathCamera(Client)");

	Params::BP_AJBInGamePlayerController_C_SetDeathCamera_Client_ Parms{};

	Parms.DeathCamera_0 = DeathCamera_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnEnd_VictoryResult
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     NextState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnEnd_VictoryResult(const struct FGameplayTag& NextState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnEnd_VictoryResult");

	Params::BP_AJBInGamePlayerController_C_OnEnd_VictoryResult Parms{};

	Parms.NextState = std::move(NextState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.CloseUploadingConfirm
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::CloseUploadingConfirm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "CloseUploadingConfirm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnShowUploadingConfirm
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::OnShowUploadingConfirm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnShowUploadingConfirm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_SetCharacterBPRef
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         CharacterBPRef_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::ROS_SetCharacterBPRef(class ABP_AJBInGameCharacter_C* CharacterBPRef_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_SetCharacterBPRef");

	Params::BP_AJBInGamePlayerController_C_ROS_SetCharacterBPRef Parms{};

	Parms.CharacterBPRef_0 = CharacterBPRef_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROC_SetLivingTime
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ROC_SetLivingTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROC_SetLivingTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.StartInGameDefaultBGM
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::StartInGameDefaultBGM()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "StartInGameDefaultBGM");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROC_OnEnd_VictoryShot_Posing
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ROC_OnEnd_VictoryShot_Posing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROC_OnEnd_VictoryShot_Posing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_OnEnd_VictoryShot_Posing
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ROS_OnEnd_VictoryShot_Posing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_OnEnd_VictoryShot_Posing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_PossessDeathCamera
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ROS_PossessDeathCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_PossessDeathCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_SetupDeathCamera
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           CameraTarget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSkipWatchingDeadBody                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGamePlayerController_C::ROS_SetupDeathCamera(class AActor* CameraTarget, bool bSkipWatchingDeadBody)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_SetupDeathCamera");

	Params::BP_AJBInGamePlayerController_C_ROS_SetupDeathCamera Parms{};

	Parms.CameraTarget = CameraTarget;
	Parms.bSkipWatchingDeadBody = bSkipWatchingDeadBody;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.WaiitCaptureLoop
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::WaiitCaptureLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "WaiitCaptureLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnTimeOut
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::OnTimeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnTimeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnClosedFailedMessage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAJBWindowWidget*                 TargetWidget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnClosedFailedMessage(class UAJBWindowWidget* TargetWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnClosedFailedMessage");

	Params::BP_AJBInGamePlayerController_C_OnClosedFailedMessage Parms{};

	Parms.TargetWidget = TargetWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROC_SetBattleGameRank
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   BattleGameRank_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   BattleGameRankWithoutCPU                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::ROC_SetBattleGameRank(int32 BattleGameRank_0, int32 BattleGameRankWithoutCPU)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROC_SetBattleGameRank");

	Params::BP_AJBInGamePlayerController_C_ROC_SetBattleGameRank Parms{};

	Parms.BattleGameRank_0 = BattleGameRank_0;
	Parms.BattleGameRankWithoutCPU = BattleGameRankWithoutCPU;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnBegin_VictoryShot_Finish
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnBegin_VictoryShot_Finish(const struct FGameplayTag& PrevState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnBegin_VictoryShot_Finish");

	Params::BP_AJBInGamePlayerController_C_OnBegin_VictoryShot_Finish Parms{};

	Parms.PrevState = std::move(PrevState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ChangeState
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     NextStateTag                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::ChangeState(const struct FGameplayTag& NextStateTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ChangeState");

	Params::BP_AJBInGamePlayerController_C_ChangeState Parms{};

	Parms.NextStateTag = std::move(NextStateTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROC_ChangeStateWithRank
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     NextStateTag                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   Rank                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RankWithoutCPU                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::ROC_ChangeStateWithRank(const struct FGameplayTag& NextStateTag, int32 Rank, int32 RankWithoutCPU)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROC_ChangeStateWithRank");

	Params::BP_AJBInGamePlayerController_C_ROC_ChangeStateWithRank Parms{};

	Parms.NextStateTag = std::move(NextStateTag);
	Parms.Rank = Rank;
	Parms.RankWithoutCPU = RankWithoutCPU;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnTick_InGameSpectator
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSecond                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnTick_InGameSpectator(float DeltaSecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnTick_InGameSpectator");

	Params::BP_AJBInGamePlayerController_C_OnTick_InGameSpectator Parms{};

	Parms.DeltaSecond = DeltaSecond;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnActiveHUD
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::OnActiveHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnActiveHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnBegin_GameResult
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnBegin_GameResult(const struct FGameplayTag& PrevState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnBegin_GameResult");

	Params::BP_AJBInGamePlayerController_C_OnBegin_GameResult Parms{};

	Parms.PrevState = std::move(PrevState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnEnd_Gameplay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     NextState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnEnd_Gameplay(const struct FGameplayTag& NextState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnEnd_Gameplay");

	Params::BP_AJBInGamePlayerController_C_OnEnd_Gameplay Parms{};

	Parms.NextState = std::move(NextState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnTick_Gameplay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSecond                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnTick_Gameplay(float DeltaSecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnTick_Gameplay");

	Params::BP_AJBInGamePlayerController_C_OnTick_Gameplay Parms{};

	Parms.DeltaSecond = DeltaSecond;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnBegin_Gameplay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnBegin_Gameplay(const struct FGameplayTag& PrevState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnBegin_Gameplay");

	Params::BP_AJBInGamePlayerController_C_OnBegin_Gameplay Parms{};

	Parms.PrevState = std::move(PrevState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_PossessVictoryShotCamera
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ROS_PossessVictoryShotCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_PossessVictoryShotCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnEnd_VictoryShot_Posing
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     NextState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnEnd_VictoryShot_Posing(const struct FGameplayTag& NextState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnEnd_VictoryShot_Posing");

	Params::BP_AJBInGamePlayerController_C_OnEnd_VictoryShot_Posing Parms{};

	Parms.NextState = std::move(NextState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnBegin_VictoryResult
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnBegin_VictoryResult(const struct FGameplayTag& PrevState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnBegin_VictoryResult");

	Params::BP_AJBInGamePlayerController_C_OnBegin_VictoryResult Parms{};

	Parms.PrevState = std::move(PrevState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROS_SetupVictoryShotCamera
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ROS_SetupVictoryShotCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROS_SetupVictoryShotCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnBegin_VictroyShot_Posing
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnBegin_VictroyShot_Posing(const struct FGameplayTag& PrevState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnBegin_VictroyShot_Posing");

	Params::BP_AJBInGamePlayerController_C_OnBegin_VictroyShot_Posing Parms{};

	Parms.PrevState = std::move(PrevState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnBegin_VictoryShot_Shot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnBegin_VictoryShot_Shot(const struct FGameplayTag& PrevState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnBegin_VictoryShot_Shot");

	Params::BP_AJBInGamePlayerController_C_OnBegin_VictoryShot_Shot Parms{};

	Parms.PrevState = std::move(PrevState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnBegin_Exit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnBegin_Exit(const struct FGameplayTag& PrevState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnBegin_Exit");

	Params::BP_AJBInGamePlayerController_C_OnBegin_Exit Parms{};

	Parms.PrevState = std::move(PrevState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnTick_InGameStandBy
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSecond                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnTick_InGameStandBy(float DeltaSecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnTick_InGameStandBy");

	Params::BP_AJBInGamePlayerController_C_OnTick_InGameStandBy Parms{};

	Parms.DeltaSecond = DeltaSecond;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnEnd_InGameSpectator
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     NextState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnEnd_InGameSpectator(const struct FGameplayTag& NextState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnEnd_InGameSpectator");

	Params::BP_AJBInGamePlayerController_C_OnEnd_InGameSpectator Parms{};

	Parms.NextState = std::move(NextState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnBegin_InGameSpectator
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnBegin_InGameSpectator(const struct FGameplayTag& PrevState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnBegin_InGameSpectator");

	Params::BP_AJBInGamePlayerController_C_OnBegin_InGameSpectator Parms{};

	Parms.PrevState = std::move(PrevState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnEnd_InGameRetire
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     NextState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnEnd_InGameRetire(const struct FGameplayTag& NextState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnEnd_InGameRetire");

	Params::BP_AJBInGamePlayerController_C_OnEnd_InGameRetire Parms{};

	Parms.NextState = std::move(NextState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnBegin_InGameRetire
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnBegin_InGameRetire(const struct FGameplayTag& PrevState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnBegin_InGameRetire");

	Params::BP_AJBInGamePlayerController_C_OnBegin_InGameRetire Parms{};

	Parms.PrevState = std::move(PrevState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnEnd_InGameStandBy
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     NextState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnEnd_InGameStandBy(const struct FGameplayTag& NextState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnEnd_InGameStandBy");

	Params::BP_AJBInGamePlayerController_C_OnEnd_InGameStandBy Parms{};

	Parms.NextState = std::move(NextState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnBegin_InGameStandby
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnBegin_InGameStandby(const struct FGameplayTag& PrevState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnBegin_InGameStandby");

	Params::BP_AJBInGamePlayerController_C_OnBegin_InGameStandby Parms{};

	Parms.PrevState = std::move(PrevState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROC_ChangeState
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     NextStateTag                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::ROC_ChangeState(const struct FGameplayTag& NextStateTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROC_ChangeState");

	Params::BP_AJBInGamePlayerController_C_ROC_ChangeState Parms{};

	Parms.NextStateTag = std::move(NextStateTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnBegin_SimpleMatchExit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnBegin_SimpleMatchExit(const struct FGameplayTag& PrevState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnBegin_SimpleMatchExit");

	Params::BP_AJBInGamePlayerController_C_OnBegin_SimpleMatchExit Parms{};

	Parms.PrevState = std::move(PrevState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.BindFlowStateEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::BindFlowStateEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "BindFlowStateEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROC_PlayDownSE
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ROC_PlayDownSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROC_PlayDownSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROC_PlayKnockdownSE
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::ROC_PlayKnockdownSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROC_PlayKnockdownSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ROC_SpeakVoiceFromRemote
// (Net, NetReliable, HasOutParams, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         Character_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     VoiceTag                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// E_VoiceCommandType                      VoiceCommandType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::ROC_SpeakVoiceFromRemote(class ABP_AJBInGameCharacter_C* Character_0, const struct FGameplayTag& VoiceTag, E_VoiceCommandType VoiceCommandType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ROC_SpeakVoiceFromRemote");

	Params::BP_AJBInGamePlayerController_C_ROC_SpeakVoiceFromRemote Parms{};

	Parms.Character_0 = Character_0;
	Parms.VoiceTag = std::move(VoiceTag);
	Parms.VoiceCommandType = VoiceCommandType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnSuccess_0F16E7A64DDAD633C5E69784E63CFA47
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EAJBNetAPIResult                        Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnSuccess_0F16E7A64DDAD633C5E69784E63CFA47(EAJBNetAPIResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnSuccess_0F16E7A64DDAD633C5E69784E63CFA47");

	Params::BP_AJBInGamePlayerController_C_OnSuccess_0F16E7A64DDAD633C5E69784E63CFA47 Parms{};

	Parms.Result = Result;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnFailed_0F16E7A64DDAD633C5E69784E63CFA47
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EAJBNetAPIResult                        Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::OnFailed_0F16E7A64DDAD633C5E69784E63CFA47(EAJBNetAPIResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnFailed_0F16E7A64DDAD633C5E69784E63CFA47");

	Params::BP_AJBInGamePlayerController_C_OnFailed_0F16E7A64DDAD633C5E69784E63CFA47 Parms{};

	Parms.Result = Result;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnRep_CharacterNo
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::OnRep_CharacterNo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnRep_CharacterNo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.InitializeScore
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::InitializeScore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "InitializeScore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.GetCurrentFlowState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     FlowState                                              (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::GetCurrentFlowState(struct FGameplayTag* FlowState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "GetCurrentFlowState");

	Params::BP_AJBInGamePlayerController_C_GetCurrentFlowState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FlowState != nullptr)
		*FlowState = std::move(Parms.FlowState);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.SpawnPlayerCharacter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::SpawnPlayerCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "SpawnPlayerCharacter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.IsStandby
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGamePlayerController_C::IsStandby(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "IsStandby");

	Params::BP_AJBInGamePlayerController_C_IsStandby Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.ChangeFlowState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     NewFlowState                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::ChangeFlowState(const struct FGameplayTag& NewFlowState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "ChangeFlowState");

	Params::BP_AJBInGamePlayerController_C_ChangeFlowState Parms{};

	Parms.NewFlowState = std::move(NewFlowState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.SafetyPossess
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            NewPawn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bUseClientSideCameraUpdate                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class APawn*                            BeforePossessedPawn                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::SafetyPossess(class APawn* NewPawn, bool bUseClientSideCameraUpdate, class APawn** BeforePossessedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "SafetyPossess");

	Params::BP_AJBInGamePlayerController_C_SafetyPossess Parms{};

	Parms.NewPawn = NewPawn;
	Parms.bUseClientSideCameraUpdate = bUseClientSideCameraUpdate;

	UObject::ProcessEvent(Func, &Parms);

	if (BeforePossessedPawn != nullptr)
		*BeforePossessedPawn = Parms.BeforePossessedPawn;
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnPawnClientRestarted
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::OnPawnClientRestarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnPawnClientRestarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.GetControlledCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_AJBInGameCharacter_C*         AsBP_AJBIn_Game_Character                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::GetControlledCharacter(class ABP_AJBInGameCharacter_C** AsBP_AJBIn_Game_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "GetControlledCharacter");

	Params::BP_AJBInGamePlayerController_C_GetControlledCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AsBP_AJBIn_Game_Character != nullptr)
		*AsBP_AJBIn_Game_Character = Parms.AsBP_AJBIn_Game_Character;
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.CheckSpectatorTarget
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::CheckSpectatorTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "CheckSpectatorTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.GetGamePlayTime
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FTimespan ABP_AJBInGamePlayerController_C::GetGamePlayTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "GetGamePlayTime");

	Params::BP_AJBInGamePlayerController_C_GetGamePlayTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.CheckLoginPlayerInfo
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::CheckLoginPlayerInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "CheckLoginPlayerInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.PlayClimaxBGM
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     BGMTag                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::PlayClimaxBGM(const struct FGameplayTag& BGMTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "PlayClimaxBGM");

	Params::BP_AJBInGamePlayerController_C_PlayClimaxBGM Parms{};

	Parms.BGMTag = std::move(BGMTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.StopClimaxBGM
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::StopClimaxBGM()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "StopClimaxBGM");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.SetBattleGameRankIfPossible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewBattleGameRank                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewBattleGameRankWithoutCPU                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::SetBattleGameRankIfPossible(int32 NewBattleGameRank, int32 NewBattleGameRankWithoutCPU)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "SetBattleGameRankIfPossible");

	Params::BP_AJBInGamePlayerController_C_SetBattleGameRankIfPossible Parms{};

	Parms.NewBattleGameRank = NewBattleGameRank;
	Parms.NewBattleGameRankWithoutCPU = NewBattleGameRankWithoutCPU;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.SetLivingTime
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::SetLivingTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "SetLivingTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.CalcProperWorldLocationForCamera
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Result                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::CalcProperWorldLocationForCamera(float Radius, struct FVector* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "CalcProperWorldLocationForCamera");

	Params::BP_AJBInGamePlayerController_C_CalcProperWorldLocationForCamera Parms{};

	Parms.Radius = Radius;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.IsWatcherCameraControlled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGamePlayerController_C::IsWatcherCameraControlled(bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "IsWatcherCameraControlled");

	Params::BP_AJBInGamePlayerController_C_IsWatcherCameraControlled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.Debug_CreatePairInfoString
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   PairInfoStrings                                        (Parm, OutParm, ZeroConstructor)

void ABP_AJBInGamePlayerController_C::Debug_CreatePairInfoString(TArray<class FString>* PairInfoStrings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "Debug_CreatePairInfoString");

	Params::BP_AJBInGamePlayerController_C_Debug_CreatePairInfoString Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PairInfoStrings != nullptr)
		*PairInfoStrings = std::move(Parms.PairInfoStrings);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.Debug_StartStickTiltingCount
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::Debug_StartStickTiltingCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "Debug_StartStickTiltingCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.OnEndVictoryShotPosing
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGamePlayerController_C::OnEndVictoryShotPosing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "OnEndVictoryShotPosing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.DebugChangeShowDistanceLimit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGamePlayerController_C::DebugChangeShowDistanceLimit(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "DebugChangeShowDistanceLimit");

	Params::BP_AJBInGamePlayerController_C_DebugChangeShowDistanceLimit Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.DebugChangeDistanceLimitSegments
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Segments                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::DebugChangeDistanceLimitSegments(int32 Segments)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "DebugChangeDistanceLimitSegments");

	Params::BP_AJBInGamePlayerController_C_DebugChangeDistanceLimitSegments Parms{};

	Parms.Segments = Segments;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.GetCameraForwardVector
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_AJBInGamePlayerController_C::GetCameraForwardVector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "GetCameraForwardVector");

	Params::BP_AJBInGamePlayerController_C_GetCameraForwardVector Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.GetCameraLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_AJBInGamePlayerController_C::GetCameraLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "GetCameraLocation");

	Params::BP_AJBInGamePlayerController_C_GetCameraLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.GetCameraInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (Parm, OutParm, IsPlainOldData, NoDestructor)
// float                                   FOV_0                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::GetCameraInfo(struct FVector* Location, struct FRotator* Rotation, float* FOV_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "GetCameraInfo");

	Params::BP_AJBInGamePlayerController_C_GetCameraInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);

	if (FOV_0 != nullptr)
		*FOV_0 = Parms.FOV_0;
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.GetPassiveSkillTag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     PassiveSkillTag                                        (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::GetPassiveSkillTag(struct FGameplayTag* PassiveSkillTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "GetPassiveSkillTag");

	Params::BP_AJBInGamePlayerController_C_GetPassiveSkillTag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PassiveSkillTag != nullptr)
		*PassiveSkillTag = std::move(Parms.PassiveSkillTag);
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.GetDuration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Duration                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::GetDuration(float* Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "GetDuration");

	Params::BP_AJBInGamePlayerController_C_GetDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Duration != nullptr)
		*Duration = Parms.Duration;
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.GetCauserOwnerCharacterBP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         CharacterBP                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::GetCauserOwnerCharacterBP(class ABP_AJBInGameCharacter_C** CharacterBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "GetCauserOwnerCharacterBP");

	Params::BP_AJBInGamePlayerController_C_GetCauserOwnerCharacterBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CharacterBP != nullptr)
		*CharacterBP = Parms.CharacterBP;
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.IsLocalTransitionGameResult
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bTransition                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGamePlayerController_C::IsLocalTransitionGameResult(bool* bTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "IsLocalTransitionGameResult");

	Params::BP_AJBInGamePlayerController_C_IsLocalTransitionGameResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bTransition != nullptr)
		*bTransition = Parms.bTransition;
}


// Function BP_AJBInGamePlayerController.BP_AJBInGamePlayerController_C.GetGameStartLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGamePlayerController_C::GetGameStartLocation(struct FVector* Location) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGamePlayerController_C", "GetGameStartLocation");

	Params::BP_AJBInGamePlayerController_C_GetGameStartLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}

}


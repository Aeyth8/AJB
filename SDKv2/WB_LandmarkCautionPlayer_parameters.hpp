#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_LandmarkCautionPlayer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_LandmarkCautionPlayer.WB_LandmarkCautionPlayer_C.ExecuteUbergraph_WB_LandmarkCautionPlayer
// 0x0048 (0x0048 - 0x0000)
struct WB_LandmarkCautionPlayer_C_ExecuteUbergraph_WB_LandmarkCautionPlayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InnerScale;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_LandmarkCautionPlayer_C_ExecuteUbergraph_WB_LandmarkCautionPlayer) == 0x000004, "Wrong alignment on WB_LandmarkCautionPlayer_C_ExecuteUbergraph_WB_LandmarkCautionPlayer");
static_assert(sizeof(WB_LandmarkCautionPlayer_C_ExecuteUbergraph_WB_LandmarkCautionPlayer) == 0x000048, "Wrong size on WB_LandmarkCautionPlayer_C_ExecuteUbergraph_WB_LandmarkCautionPlayer");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_ExecuteUbergraph_WB_LandmarkCautionPlayer, EntryPoint) == 0x000000, "Member 'WB_LandmarkCautionPlayer_C_ExecuteUbergraph_WB_LandmarkCautionPlayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_ExecuteUbergraph_WB_LandmarkCautionPlayer, K2Node_Event_MyGeometry) == 0x000004, "Member 'WB_LandmarkCautionPlayer_C_ExecuteUbergraph_WB_LandmarkCautionPlayer::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_ExecuteUbergraph_WB_LandmarkCautionPlayer, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WB_LandmarkCautionPlayer_C_ExecuteUbergraph_WB_LandmarkCautionPlayer::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_ExecuteUbergraph_WB_LandmarkCautionPlayer, K2Node_Event_InnerScale) == 0x000040, "Member 'WB_LandmarkCautionPlayer_C_ExecuteUbergraph_WB_LandmarkCautionPlayer::K2Node_Event_InnerScale' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_ExecuteUbergraph_WB_LandmarkCautionPlayer, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000044, "Member 'WB_LandmarkCautionPlayer_C_ExecuteUbergraph_WB_LandmarkCautionPlayer::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function WB_LandmarkCautionPlayer.WB_LandmarkCautionPlayer_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_LandmarkCautionPlayer_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_LandmarkCautionPlayer_C_Tick) == 0x000004, "Wrong alignment on WB_LandmarkCautionPlayer_C_Tick");
static_assert(sizeof(WB_LandmarkCautionPlayer_C_Tick) == 0x00003C, "Wrong size on WB_LandmarkCautionPlayer_C_Tick");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_Tick, MyGeometry) == 0x000000, "Member 'WB_LandmarkCautionPlayer_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_LandmarkCautionPlayer_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_LandmarkCautionPlayer.WB_LandmarkCautionPlayer_C.SetInnerScale
// 0x0004 (0x0004 - 0x0000)
struct WB_LandmarkCautionPlayer_C_SetInnerScale final
{
public:
	float                                         InnerScale_0;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_LandmarkCautionPlayer_C_SetInnerScale) == 0x000004, "Wrong alignment on WB_LandmarkCautionPlayer_C_SetInnerScale");
static_assert(sizeof(WB_LandmarkCautionPlayer_C_SetInnerScale) == 0x000004, "Wrong size on WB_LandmarkCautionPlayer_C_SetInnerScale");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_SetInnerScale, InnerScale_0) == 0x000000, "Member 'WB_LandmarkCautionPlayer_C_SetInnerScale::InnerScale_0' has a wrong offset!");

// Function WB_LandmarkCautionPlayer.WB_LandmarkCautionPlayer_C.IsTouchMarker
// 0x0068 (0x0068 - 0x0000)
struct WB_LandmarkCautionPlayer_C_IsTouchMarker final
{
public:
	struct FVector2D                              TouchPosition;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTouch;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0018(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0020(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0028(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue1;      // 0x0030(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0038(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue1;   // 0x0040(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0048(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X1;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y1;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X2;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y2;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue1;        // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue2;        // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue3;        // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_LandmarkCautionPlayer_C_IsTouchMarker) == 0x000004, "Wrong alignment on WB_LandmarkCautionPlayer_C_IsTouchMarker");
static_assert(sizeof(WB_LandmarkCautionPlayer_C_IsTouchMarker) == 0x000068, "Wrong size on WB_LandmarkCautionPlayer_C_IsTouchMarker");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, TouchPosition) == 0x000000, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::TouchPosition' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, Scale) == 0x000008, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::Scale' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, IsTouch) == 0x00000C, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::IsTouch' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, CallFunc_BreakVector2D_X) == 0x000010, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, CallFunc_BreakVector2D_Y) == 0x000014, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000018, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000020, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, CallFunc_GetDesiredSize_ReturnValue) == 0x000028, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, CallFunc_Multiply_Vector2DFloat_ReturnValue1) == 0x000030, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::CallFunc_Multiply_Vector2DFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000038, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, CallFunc_Subtract_Vector2DVector2D_ReturnValue1) == 0x000040, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::CallFunc_Subtract_Vector2DVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000048, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, CallFunc_BreakVector2D_X1) == 0x000050, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::CallFunc_BreakVector2D_X1' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, CallFunc_BreakVector2D_Y1) == 0x000054, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::CallFunc_BreakVector2D_Y1' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, CallFunc_BreakVector2D_X2) == 0x000058, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::CallFunc_BreakVector2D_X2' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, CallFunc_BreakVector2D_Y2) == 0x00005C, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::CallFunc_BreakVector2D_Y2' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000060, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, CallFunc_LessEqual_FloatFloat_ReturnValue1) == 0x000061, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::CallFunc_LessEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, CallFunc_LessEqual_FloatFloat_ReturnValue2) == 0x000062, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::CallFunc_LessEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, CallFunc_LessEqual_FloatFloat_ReturnValue3) == 0x000063, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::CallFunc_LessEqual_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, CallFunc_BooleanAND_ReturnValue) == 0x000064, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, CallFunc_BooleanAND_ReturnValue1) == 0x000065, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_IsTouchMarker, CallFunc_BooleanAND_ReturnValue2) == 0x000066, "Member 'WB_LandmarkCautionPlayer_C_IsTouchMarker::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function WB_LandmarkCautionPlayer.WB_LandmarkCautionPlayer_C.GetContentWidget
// 0x0008 (0x0008 - 0x0000)
struct WB_LandmarkCautionPlayer_C_GetContentWidget final
{
public:
	class UWidget*                                ContentWidget;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_LandmarkCautionPlayer_C_GetContentWidget) == 0x000008, "Wrong alignment on WB_LandmarkCautionPlayer_C_GetContentWidget");
static_assert(sizeof(WB_LandmarkCautionPlayer_C_GetContentWidget) == 0x000008, "Wrong size on WB_LandmarkCautionPlayer_C_GetContentWidget");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_GetContentWidget, ContentWidget) == 0x000000, "Member 'WB_LandmarkCautionPlayer_C_GetContentWidget::ContentWidget' has a wrong offset!");

// Function WB_LandmarkCautionPlayer.WB_LandmarkCautionPlayer_C.GetRetainerBoxWidget
// 0x0008 (0x0008 - 0x0000)
struct WB_LandmarkCautionPlayer_C_GetRetainerBoxWidget final
{
public:
	class URetainerBox*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_LandmarkCautionPlayer_C_GetRetainerBoxWidget) == 0x000008, "Wrong alignment on WB_LandmarkCautionPlayer_C_GetRetainerBoxWidget");
static_assert(sizeof(WB_LandmarkCautionPlayer_C_GetRetainerBoxWidget) == 0x000008, "Wrong size on WB_LandmarkCautionPlayer_C_GetRetainerBoxWidget");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_GetRetainerBoxWidget, ReturnValue) == 0x000000, "Member 'WB_LandmarkCautionPlayer_C_GetRetainerBoxWidget::ReturnValue' has a wrong offset!");

// Function WB_LandmarkCautionPlayer.WB_LandmarkCautionPlayer_C.GetResizerWidget
// 0x0008 (0x0008 - 0x0000)
struct WB_LandmarkCautionPlayer_C_GetResizerWidget final
{
public:
	class USizeBox*                               SizeBox;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_LandmarkCautionPlayer_C_GetResizerWidget) == 0x000008, "Wrong alignment on WB_LandmarkCautionPlayer_C_GetResizerWidget");
static_assert(sizeof(WB_LandmarkCautionPlayer_C_GetResizerWidget) == 0x000008, "Wrong size on WB_LandmarkCautionPlayer_C_GetResizerWidget");
static_assert(offsetof(WB_LandmarkCautionPlayer_C_GetResizerWidget, SizeBox) == 0x000000, "Member 'WB_LandmarkCautionPlayer_C_GetResizerWidget::SizeBox' has a wrong offset!");

}


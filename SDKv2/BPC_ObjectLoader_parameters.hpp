#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_ObjectLoader

#include "Basic.hpp"

#include "ST_ObjectClassLoadInfo_structs.hpp"
#include "ST_ObjectLoadInfo_structs.hpp"


namespace SDK::Params
{

// Function BPC_ObjectLoader.BPC_ObjectLoader_C.OnLoadedObjectDispatcher__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BPC_ObjectLoader_C_OnLoadedObjectDispatcher__DelegateSignature final
{
public:
	class FString                                 LoadId;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                LoadedObject;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_ObjectLoader_C_OnLoadedObjectDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on BPC_ObjectLoader_C_OnLoadedObjectDispatcher__DelegateSignature");
static_assert(sizeof(BPC_ObjectLoader_C_OnLoadedObjectDispatcher__DelegateSignature) == 0x000018, "Wrong size on BPC_ObjectLoader_C_OnLoadedObjectDispatcher__DelegateSignature");
static_assert(offsetof(BPC_ObjectLoader_C_OnLoadedObjectDispatcher__DelegateSignature, LoadId) == 0x000000, "Member 'BPC_ObjectLoader_C_OnLoadedObjectDispatcher__DelegateSignature::LoadId' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_OnLoadedObjectDispatcher__DelegateSignature, LoadedObject) == 0x000010, "Member 'BPC_ObjectLoader_C_OnLoadedObjectDispatcher__DelegateSignature::LoadedObject' has a wrong offset!");

// Function BPC_ObjectLoader.BPC_ObjectLoader_C.OnLoadedClassDispatcher__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BPC_ObjectLoader_C_OnLoadedClassDispatcher__DelegateSignature final
{
public:
	class FString                                 LoadId;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 LoadObjClass;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_ObjectLoader_C_OnLoadedClassDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on BPC_ObjectLoader_C_OnLoadedClassDispatcher__DelegateSignature");
static_assert(sizeof(BPC_ObjectLoader_C_OnLoadedClassDispatcher__DelegateSignature) == 0x000018, "Wrong size on BPC_ObjectLoader_C_OnLoadedClassDispatcher__DelegateSignature");
static_assert(offsetof(BPC_ObjectLoader_C_OnLoadedClassDispatcher__DelegateSignature, LoadId) == 0x000000, "Member 'BPC_ObjectLoader_C_OnLoadedClassDispatcher__DelegateSignature::LoadId' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_OnLoadedClassDispatcher__DelegateSignature, LoadObjClass) == 0x000010, "Member 'BPC_ObjectLoader_C_OnLoadedClassDispatcher__DelegateSignature::LoadObjClass' has a wrong offset!");

// Function BPC_ObjectLoader.BPC_ObjectLoader_C.ExecuteUbergraph_BPC_ObjectLoader
// 0x0218 (0x0218 - 0x0000)
struct BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_ObjectLoadInfo                     K2Node_CustomEvent_LoadObjInfo;                    // 0x0020(0x0040)(ConstParm, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate1;             // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	class UClass*                                 K2Node_CustomEvent_Loaded;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_LoadId1;                        // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 K2Node_CustomEvent_ObjectAssetId;                  // 0x00A0(0x0028)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_LoadId;                         // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   K2Node_CustomEvent_ObjectClassAssetId;             // 0x00F0(0x0028)(HasGetValueTypeHash)
	class UClass*                                 CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_ObjectLoadInfo                     K2Node_Select_Default;                             // 0x0128(0x0040)(HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue1;            // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_182[0x2];                                      // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue1;             // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_ObjectClassLoadInfo                K2Node_CustomEvent_LoadObjClassInfo;               // 0x0188(0x0040)(ConstParm, HasGetValueTypeHash)
	struct FST_ObjectClassLoadInfo                K2Node_Select1_Default;                            // 0x01C8(0x0040)(HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded1;                        // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader) == 0x000008, "Wrong alignment on BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader");
static_assert(sizeof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader) == 0x000218, "Wrong size on BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, EntryPoint) == 0x000000, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, CallFunc_Array_LastIndex_ReturnValue) == 0x000018, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, K2Node_CustomEvent_LoadObjInfo) == 0x000020, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::K2Node_CustomEvent_LoadObjInfo' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, Temp_class_Variable) == 0x000068, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, K2Node_CreateDelegate_OutputDelegate1) == 0x000078, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, K2Node_CustomEvent_Loaded) == 0x000088, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, K2Node_CustomEvent_LoadId1) == 0x000090, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::K2Node_CustomEvent_LoadId1' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, K2Node_CustomEvent_ObjectAssetId) == 0x0000A0, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::K2Node_CustomEvent_ObjectAssetId' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, Temp_bool_Variable) == 0x0000C8, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000D0, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, K2Node_CustomEvent_LoadId) == 0x0000E0, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::K2Node_CustomEvent_LoadId' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, K2Node_CustomEvent_ObjectClassAssetId) == 0x0000F0, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::K2Node_CustomEvent_ObjectClassAssetId' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x000118, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, CallFunc_IsValidClass_ReturnValue) == 0x000120, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, Temp_bool_Variable1) == 0x000121, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, K2Node_Select_Default) == 0x000128, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, K2Node_Event_DeltaSeconds) == 0x000168, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, CallFunc_Not_PreBool_ReturnValue1) == 0x00016C, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, CallFunc_Array_Length_ReturnValue1) == 0x000170, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, CallFunc_Array_Length_ReturnValue2) == 0x000174, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, CallFunc_Greater_IntInt_ReturnValue1) == 0x000178, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000179, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, CallFunc_Array_Length_ReturnValue3) == 0x00017C, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, CallFunc_LessEqual_IntInt_ReturnValue1) == 0x000180, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::CallFunc_LessEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, CallFunc_BooleanAND_ReturnValue) == 0x000181, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, CallFunc_Array_LastIndex_ReturnValue1) == 0x000184, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::CallFunc_Array_LastIndex_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, K2Node_CustomEvent_LoadObjClassInfo) == 0x000188, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::K2Node_CustomEvent_LoadObjClassInfo' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, K2Node_Select1_Default) == 0x0001C8, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, Temp_object_Variable) == 0x000208, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader, K2Node_CustomEvent_Loaded1) == 0x000210, "Member 'BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader::K2Node_CustomEvent_Loaded1' has a wrong offset!");

// Function BPC_ObjectLoader.BPC_ObjectLoader_C.StartLoadObjectClass
// 0x0040 (0x0040 - 0x0000)
struct BPC_ObjectLoader_C_StartLoadObjectClass final
{
public:
	struct FST_ObjectClassLoadInfo                LoadObjClassInfo;                                  // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BPC_ObjectLoader_C_StartLoadObjectClass) == 0x000008, "Wrong alignment on BPC_ObjectLoader_C_StartLoadObjectClass");
static_assert(sizeof(BPC_ObjectLoader_C_StartLoadObjectClass) == 0x000040, "Wrong size on BPC_ObjectLoader_C_StartLoadObjectClass");
static_assert(offsetof(BPC_ObjectLoader_C_StartLoadObjectClass, LoadObjClassInfo) == 0x000000, "Member 'BPC_ObjectLoader_C_StartLoadObjectClass::LoadObjClassInfo' has a wrong offset!");

// Function BPC_ObjectLoader.BPC_ObjectLoader_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BPC_ObjectLoader_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_ObjectLoader_C_ReceiveTick) == 0x000004, "Wrong alignment on BPC_ObjectLoader_C_ReceiveTick");
static_assert(sizeof(BPC_ObjectLoader_C_ReceiveTick) == 0x000004, "Wrong size on BPC_ObjectLoader_C_ReceiveTick");
static_assert(offsetof(BPC_ObjectLoader_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BPC_ObjectLoader_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BPC_ObjectLoader.BPC_ObjectLoader_C.RequestLoadObjectClass
// 0x0038 (0x0038 - 0x0000)
struct BPC_ObjectLoader_C_RequestLoadObjectClass final
{
public:
	class FString                                 LoadId;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   ObjectClassAssetId;                                // 0x0010(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BPC_ObjectLoader_C_RequestLoadObjectClass) == 0x000008, "Wrong alignment on BPC_ObjectLoader_C_RequestLoadObjectClass");
static_assert(sizeof(BPC_ObjectLoader_C_RequestLoadObjectClass) == 0x000038, "Wrong size on BPC_ObjectLoader_C_RequestLoadObjectClass");
static_assert(offsetof(BPC_ObjectLoader_C_RequestLoadObjectClass, LoadId) == 0x000000, "Member 'BPC_ObjectLoader_C_RequestLoadObjectClass::LoadId' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RequestLoadObjectClass, ObjectClassAssetId) == 0x000010, "Member 'BPC_ObjectLoader_C_RequestLoadObjectClass::ObjectClassAssetId' has a wrong offset!");

// Function BPC_ObjectLoader.BPC_ObjectLoader_C.RequestLoadObject
// 0x0038 (0x0038 - 0x0000)
struct BPC_ObjectLoader_C_RequestLoadObject final
{
public:
	class FString                                 LoadId;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 ObjectAssetId;                                     // 0x0010(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BPC_ObjectLoader_C_RequestLoadObject) == 0x000008, "Wrong alignment on BPC_ObjectLoader_C_RequestLoadObject");
static_assert(sizeof(BPC_ObjectLoader_C_RequestLoadObject) == 0x000038, "Wrong size on BPC_ObjectLoader_C_RequestLoadObject");
static_assert(offsetof(BPC_ObjectLoader_C_RequestLoadObject, LoadId) == 0x000000, "Member 'BPC_ObjectLoader_C_RequestLoadObject::LoadId' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RequestLoadObject, ObjectAssetId) == 0x000010, "Member 'BPC_ObjectLoader_C_RequestLoadObject::ObjectAssetId' has a wrong offset!");

// Function BPC_ObjectLoader.BPC_ObjectLoader_C.StartLoadObject
// 0x0040 (0x0040 - 0x0000)
struct BPC_ObjectLoader_C_StartLoadObject final
{
public:
	struct FST_ObjectLoadInfo                     LoadObjInfo;                                       // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BPC_ObjectLoader_C_StartLoadObject) == 0x000008, "Wrong alignment on BPC_ObjectLoader_C_StartLoadObject");
static_assert(sizeof(BPC_ObjectLoader_C_StartLoadObject) == 0x000040, "Wrong size on BPC_ObjectLoader_C_StartLoadObject");
static_assert(offsetof(BPC_ObjectLoader_C_StartLoadObject, LoadObjInfo) == 0x000000, "Member 'BPC_ObjectLoader_C_StartLoadObject::LoadObjInfo' has a wrong offset!");

// Function BPC_ObjectLoader.BPC_ObjectLoader_C.OnLoaded_B3CE73F644F30E7B1B2ECAA2C7ED9949
// 0x0008 (0x0008 - 0x0000)
struct BPC_ObjectLoader_C_OnLoaded_B3CE73F644F30E7B1B2ECAA2C7ED9949 final
{
public:
	class UClass*                                 Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_ObjectLoader_C_OnLoaded_B3CE73F644F30E7B1B2ECAA2C7ED9949) == 0x000008, "Wrong alignment on BPC_ObjectLoader_C_OnLoaded_B3CE73F644F30E7B1B2ECAA2C7ED9949");
static_assert(sizeof(BPC_ObjectLoader_C_OnLoaded_B3CE73F644F30E7B1B2ECAA2C7ED9949) == 0x000008, "Wrong size on BPC_ObjectLoader_C_OnLoaded_B3CE73F644F30E7B1B2ECAA2C7ED9949");
static_assert(offsetof(BPC_ObjectLoader_C_OnLoaded_B3CE73F644F30E7B1B2ECAA2C7ED9949, Loaded) == 0x000000, "Member 'BPC_ObjectLoader_C_OnLoaded_B3CE73F644F30E7B1B2ECAA2C7ED9949::Loaded' has a wrong offset!");

// Function BPC_ObjectLoader.BPC_ObjectLoader_C.OnLoaded_066D0130431550B75D2FBDB198B97FBC
// 0x0008 (0x0008 - 0x0000)
struct BPC_ObjectLoader_C_OnLoaded_066D0130431550B75D2FBDB198B97FBC final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_ObjectLoader_C_OnLoaded_066D0130431550B75D2FBDB198B97FBC) == 0x000008, "Wrong alignment on BPC_ObjectLoader_C_OnLoaded_066D0130431550B75D2FBDB198B97FBC");
static_assert(sizeof(BPC_ObjectLoader_C_OnLoaded_066D0130431550B75D2FBDB198B97FBC) == 0x000008, "Wrong size on BPC_ObjectLoader_C_OnLoaded_066D0130431550B75D2FBDB198B97FBC");
static_assert(offsetof(BPC_ObjectLoader_C_OnLoaded_066D0130431550B75D2FBDB198B97FBC, Loaded) == 0x000000, "Member 'BPC_ObjectLoader_C_OnLoaded_066D0130431550B75D2FBDB198B97FBC::Loaded' has a wrong offset!");

// Function BPC_ObjectLoader.BPC_ObjectLoader_C.AddLoadingList
// 0x0108 (0x0108 - 0x0000)
struct BPC_ObjectLoader_C_AddLoadingList final
{
public:
	class FString                                 LoadId;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 ObjectAssetId;                                     // 0x0010(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bLo_Exist;                                         // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_ObjectLoadInfo                     K2Node_MakeStruct_ST_ObjectLoadInfo;               // 0x0040(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_ObjectLoadInfo                     CallFunc_Array_Get_Item;                           // 0x00C0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_ObjectLoader_C_AddLoadingList) == 0x000008, "Wrong alignment on BPC_ObjectLoader_C_AddLoadingList");
static_assert(sizeof(BPC_ObjectLoader_C_AddLoadingList) == 0x000108, "Wrong size on BPC_ObjectLoader_C_AddLoadingList");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingList, LoadId) == 0x000000, "Member 'BPC_ObjectLoader_C_AddLoadingList::LoadId' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingList, ObjectAssetId) == 0x000010, "Member 'BPC_ObjectLoader_C_AddLoadingList::ObjectAssetId' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingList, bLo_Exist) == 0x000038, "Member 'BPC_ObjectLoader_C_AddLoadingList::bLo_Exist' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingList, Temp_bool_True_if_break_was_hit_Variable) == 0x000039, "Member 'BPC_ObjectLoader_C_AddLoadingList::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingList, K2Node_MakeStruct_ST_ObjectLoadInfo) == 0x000040, "Member 'BPC_ObjectLoader_C_AddLoadingList::K2Node_MakeStruct_ST_ObjectLoadInfo' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingList, CallFunc_Not_PreBool_ReturnValue) == 0x000080, "Member 'BPC_ObjectLoader_C_AddLoadingList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingList, CallFunc_Concat_StrStr_ReturnValue) == 0x000088, "Member 'BPC_ObjectLoader_C_AddLoadingList::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingList, Temp_int_Array_Index_Variable) == 0x000098, "Member 'BPC_ObjectLoader_C_AddLoadingList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingList, CallFunc_Concat_StrStr_ReturnValue1) == 0x0000A0, "Member 'BPC_ObjectLoader_C_AddLoadingList::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingList, Temp_int_Loop_Counter_Variable) == 0x0000B0, "Member 'BPC_ObjectLoader_C_AddLoadingList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingList, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'BPC_ObjectLoader_C_AddLoadingList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingList, CallFunc_Array_Add_ReturnValue) == 0x0000B8, "Member 'BPC_ObjectLoader_C_AddLoadingList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingList, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'BPC_ObjectLoader_C_AddLoadingList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingList, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BPC_ObjectLoader_C_AddLoadingList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingList, CallFunc_Less_IntInt_ReturnValue) == 0x000100, "Member 'BPC_ObjectLoader_C_AddLoadingList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingList, CallFunc_BooleanAND_ReturnValue) == 0x000101, "Member 'BPC_ObjectLoader_C_AddLoadingList::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingList, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000102, "Member 'BPC_ObjectLoader_C_AddLoadingList::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BPC_ObjectLoader.BPC_ObjectLoader_C.RemoveLoadingList
// 0x00C8 (0x00C8 - 0x0000)
struct BPC_ObjectLoader_C_RemoveLoadingList final
{
public:
	class FString                                 LoadId;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bLExist;                                           // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable1;         // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_ObjectClassLoadInfo                CallFunc_Array_Get_Item;                           // 0x0030(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77[0x1];                                       // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_ObjectLoadInfo                     CallFunc_Array_Get_Item1;                          // 0x0080(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue1;           // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_ObjectLoader_C_RemoveLoadingList) == 0x000008, "Wrong alignment on BPC_ObjectLoader_C_RemoveLoadingList");
static_assert(sizeof(BPC_ObjectLoader_C_RemoveLoadingList) == 0x0000C8, "Wrong size on BPC_ObjectLoader_C_RemoveLoadingList");
static_assert(offsetof(BPC_ObjectLoader_C_RemoveLoadingList, LoadId) == 0x000000, "Member 'BPC_ObjectLoader_C_RemoveLoadingList::LoadId' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RemoveLoadingList, bLExist) == 0x000010, "Member 'BPC_ObjectLoader_C_RemoveLoadingList::bLExist' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RemoveLoadingList, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BPC_ObjectLoader_C_RemoveLoadingList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RemoveLoadingList, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BPC_ObjectLoader_C_RemoveLoadingList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RemoveLoadingList, Temp_bool_True_if_break_was_hit_Variable) == 0x00001C, "Member 'BPC_ObjectLoader_C_RemoveLoadingList::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RemoveLoadingList, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BPC_ObjectLoader_C_RemoveLoadingList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RemoveLoadingList, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'BPC_ObjectLoader_C_RemoveLoadingList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RemoveLoadingList, Temp_bool_True_if_break_was_hit_Variable1) == 0x000025, "Member 'BPC_ObjectLoader_C_RemoveLoadingList::Temp_bool_True_if_break_was_hit_Variable1' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RemoveLoadingList, CallFunc_Not_PreBool_ReturnValue1) == 0x000026, "Member 'BPC_ObjectLoader_C_RemoveLoadingList::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RemoveLoadingList, Temp_int_Array_Index_Variable1) == 0x000028, "Member 'BPC_ObjectLoader_C_RemoveLoadingList::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RemoveLoadingList, Temp_int_Loop_Counter_Variable1) == 0x00002C, "Member 'BPC_ObjectLoader_C_RemoveLoadingList::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RemoveLoadingList, CallFunc_Array_Get_Item) == 0x000030, "Member 'BPC_ObjectLoader_C_RemoveLoadingList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RemoveLoadingList, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BPC_ObjectLoader_C_RemoveLoadingList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RemoveLoadingList, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'BPC_ObjectLoader_C_RemoveLoadingList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RemoveLoadingList, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000075, "Member 'BPC_ObjectLoader_C_RemoveLoadingList::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RemoveLoadingList, CallFunc_BooleanAND_ReturnValue) == 0x000076, "Member 'BPC_ObjectLoader_C_RemoveLoadingList::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RemoveLoadingList, CallFunc_Add_IntInt_ReturnValue1) == 0x000078, "Member 'BPC_ObjectLoader_C_RemoveLoadingList::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RemoveLoadingList, CallFunc_Array_Get_Item1) == 0x000080, "Member 'BPC_ObjectLoader_C_RemoveLoadingList::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RemoveLoadingList, CallFunc_Array_Length_ReturnValue1) == 0x0000C0, "Member 'BPC_ObjectLoader_C_RemoveLoadingList::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RemoveLoadingList, CallFunc_Less_IntInt_ReturnValue1) == 0x0000C4, "Member 'BPC_ObjectLoader_C_RemoveLoadingList::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RemoveLoadingList, CallFunc_EqualEqual_StrStr_ReturnValue1) == 0x0000C5, "Member 'BPC_ObjectLoader_C_RemoveLoadingList::CallFunc_EqualEqual_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_RemoveLoadingList, CallFunc_BooleanAND_ReturnValue1) == 0x0000C6, "Member 'BPC_ObjectLoader_C_RemoveLoadingList::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function BPC_ObjectLoader.BPC_ObjectLoader_C.AssetLoadObject
// 0x0068 (0x0068 - 0x0000)
struct BPC_ObjectLoader_C_AssetLoadObject final
{
public:
	struct FST_ObjectLoadInfo                     LoadInfo;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class FString                                 Lo_Id;                                             // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                Lo_ResolvesObject;                                 // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_ObjectLoader_C_AssetLoadObject) == 0x000008, "Wrong alignment on BPC_ObjectLoader_C_AssetLoadObject");
static_assert(sizeof(BPC_ObjectLoader_C_AssetLoadObject) == 0x000068, "Wrong size on BPC_ObjectLoader_C_AssetLoadObject");
static_assert(offsetof(BPC_ObjectLoader_C_AssetLoadObject, LoadInfo) == 0x000000, "Member 'BPC_ObjectLoader_C_AssetLoadObject::LoadInfo' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AssetLoadObject, Lo_Id) == 0x000040, "Member 'BPC_ObjectLoader_C_AssetLoadObject::Lo_Id' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AssetLoadObject, Lo_ResolvesObject) == 0x000050, "Member 'BPC_ObjectLoader_C_AssetLoadObject::Lo_ResolvesObject' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AssetLoadObject, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000058, "Member 'BPC_ObjectLoader_C_AssetLoadObject::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AssetLoadObject, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BPC_ObjectLoader_C_AssetLoadObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPC_ObjectLoader.BPC_ObjectLoader_C.AddLoadingClassList
// 0x0100 (0x0100 - 0x0000)
struct BPC_ObjectLoader_C_AddLoadingClassList final
{
public:
	class FString                                 LoadId;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   ObjClassAssetId;                                   // 0x0010(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bLo_Exist;                                         // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FST_ObjectClassLoadInfo                K2Node_MakeStruct_ST_ObjectClassLoadInfo;          // 0x0060(0x0040)(HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_ObjectClassLoadInfo                CallFunc_Array_Get_Item;                           // 0x00B8(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_ObjectLoader_C_AddLoadingClassList) == 0x000008, "Wrong alignment on BPC_ObjectLoader_C_AddLoadingClassList");
static_assert(sizeof(BPC_ObjectLoader_C_AddLoadingClassList) == 0x000100, "Wrong size on BPC_ObjectLoader_C_AddLoadingClassList");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingClassList, LoadId) == 0x000000, "Member 'BPC_ObjectLoader_C_AddLoadingClassList::LoadId' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingClassList, ObjClassAssetId) == 0x000010, "Member 'BPC_ObjectLoader_C_AddLoadingClassList::ObjClassAssetId' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingClassList, bLo_Exist) == 0x000038, "Member 'BPC_ObjectLoader_C_AddLoadingClassList::bLo_Exist' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingClassList, Temp_bool_True_if_break_was_hit_Variable) == 0x000039, "Member 'BPC_ObjectLoader_C_AddLoadingClassList::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingClassList, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BPC_ObjectLoader_C_AddLoadingClassList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingClassList, CallFunc_Not_PreBool_ReturnValue) == 0x000040, "Member 'BPC_ObjectLoader_C_AddLoadingClassList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingClassList, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BPC_ObjectLoader_C_AddLoadingClassList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingClassList, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BPC_ObjectLoader_C_AddLoadingClassList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingClassList, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BPC_ObjectLoader_C_AddLoadingClassList::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingClassList, K2Node_MakeStruct_ST_ObjectClassLoadInfo) == 0x000060, "Member 'BPC_ObjectLoader_C_AddLoadingClassList::K2Node_MakeStruct_ST_ObjectClassLoadInfo' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingClassList, CallFunc_Concat_StrStr_ReturnValue1) == 0x0000A0, "Member 'BPC_ObjectLoader_C_AddLoadingClassList::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingClassList, CallFunc_Array_Add_ReturnValue) == 0x0000B0, "Member 'BPC_ObjectLoader_C_AddLoadingClassList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingClassList, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BPC_ObjectLoader_C_AddLoadingClassList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingClassList, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'BPC_ObjectLoader_C_AddLoadingClassList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingClassList, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000FC, "Member 'BPC_ObjectLoader_C_AddLoadingClassList::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingClassList, CallFunc_Less_IntInt_ReturnValue) == 0x0000FD, "Member 'BPC_ObjectLoader_C_AddLoadingClassList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AddLoadingClassList, CallFunc_BooleanAND_ReturnValue) == 0x0000FE, "Member 'BPC_ObjectLoader_C_AddLoadingClassList::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BPC_ObjectLoader.BPC_ObjectLoader_C.AssetLoadObjClass
// 0x0068 (0x0068 - 0x0000)
struct BPC_ObjectLoader_C_AssetLoadObjClass final
{
public:
	struct FST_ObjectClassLoadInfo                LoadInfo;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class FString                                 LId;                                               // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 LResolvesObject;                                   // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_ObjectLoader_C_AssetLoadObjClass) == 0x000008, "Wrong alignment on BPC_ObjectLoader_C_AssetLoadObjClass");
static_assert(sizeof(BPC_ObjectLoader_C_AssetLoadObjClass) == 0x000068, "Wrong size on BPC_ObjectLoader_C_AssetLoadObjClass");
static_assert(offsetof(BPC_ObjectLoader_C_AssetLoadObjClass, LoadInfo) == 0x000000, "Member 'BPC_ObjectLoader_C_AssetLoadObjClass::LoadInfo' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AssetLoadObjClass, LId) == 0x000040, "Member 'BPC_ObjectLoader_C_AssetLoadObjClass::LId' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AssetLoadObjClass, LResolvesObject) == 0x000050, "Member 'BPC_ObjectLoader_C_AssetLoadObjClass::LResolvesObject' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AssetLoadObjClass, CallFunc_IsValidClass_ReturnValue) == 0x000058, "Member 'BPC_ObjectLoader_C_AssetLoadObjClass::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ObjectLoader_C_AssetLoadObjClass, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x000060, "Member 'BPC_ObjectLoader_C_AssetLoadObjClass::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_GameResultBonusPoint

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "AJB_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WB_GameResultBonusPoint.WB_GameResultBonusPoint_C.ExecuteUbergraph_WB_GameResultBonusPoint
// 0x01B0 (0x01B0 - 0x0000)
struct WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable1; // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Title;                          // 0x0010(0x0018)()
	EAJBLimitedBounusSign                         K2Node_CustomEvent_Sign;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Value;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0030(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue1;            // 0x0088(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ZeroConstructor, ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x00B0(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array1;                           // 0x0108(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue1;                      // 0x0120(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0138(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_CustomEvent_DelayTime;                      // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_CustomEvent_Target;                         // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStartTime_ReturnValue;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue1;                  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0170(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint) == 0x000008, "Wrong alignment on WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint");
static_assert(sizeof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint) == 0x0001B0, "Wrong size on WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, EntryPoint) == 0x000000, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, Temp_bool_Variable) == 0x000004, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, Temp_byte_Variable) == 0x000005, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, Temp_byte_Variable1) == 0x000006, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, Temp_bool_Has_Been_Initd_Variable) == 0x000007, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000008, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, Temp_bool_IsClosed_Variable) == 0x000009, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable1) == 0x00000A, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable1' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, Temp_bool_Has_Been_Initd_Variable1) == 0x00000B, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, K2Node_CustomEvent_Title) == 0x000010, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::K2Node_CustomEvent_Title' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, K2Node_CustomEvent_Sign) == 0x000028, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::K2Node_CustomEvent_Sign' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, K2Node_CustomEvent_Value) == 0x00002C, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, CallFunc_Conv_FloatToText_ReturnValue) == 0x000030, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, CallFunc_Conv_FloatToText_ReturnValue1) == 0x000088, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::CallFunc_Conv_FloatToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, K2Node_MakeArray_Array) == 0x0000A0, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, K2Node_MakeStruct_FormatArgumentData1) == 0x0000B0, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, K2Node_MakeArray_Array1) == 0x000108, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, K2Node_SwitchEnum_CmpSuccess) == 0x000118, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, CallFunc_Format_ReturnValue1) == 0x000120, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::CallFunc_Format_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, K2Node_CreateDelegate_OutputDelegate) == 0x000138, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, K2Node_CustomEvent_DelayTime) == 0x000148, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::K2Node_CustomEvent_DelayTime' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00014C, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, Temp_bool_IsClosed_Variable1) == 0x000150, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, CallFunc_Add_FloatFloat_ReturnValue) == 0x000154, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, K2Node_CustomEvent_Target) == 0x000158, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, CallFunc_GetEndTime_ReturnValue) == 0x000160, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, CallFunc_GetStartTime_ReturnValue) == 0x000164, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::CallFunc_GetStartTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, CallFunc_FClamp_ReturnValue) == 0x000168, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, CallFunc_GetEndTime_ReturnValue1) == 0x00016C, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::CallFunc_GetEndTime_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, K2Node_Event_MyGeometry) == 0x000170, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, K2Node_Event_InDeltaTime) == 0x0001A8, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint, K2Node_Select_Default) == 0x0001AC, "Member 'WB_GameResultBonusPoint_C_ExecuteUbergraph_WB_GameResultBonusPoint::K2Node_Select_Default' has a wrong offset!");

// Function WB_GameResultBonusPoint.WB_GameResultBonusPoint_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_GameResultBonusPoint_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameResultBonusPoint_C_Tick) == 0x000004, "Wrong alignment on WB_GameResultBonusPoint_C_Tick");
static_assert(sizeof(WB_GameResultBonusPoint_C_Tick) == 0x00003C, "Wrong size on WB_GameResultBonusPoint_C_Tick");
static_assert(offsetof(WB_GameResultBonusPoint_C_Tick, MyGeometry) == 0x000000, "Member 'WB_GameResultBonusPoint_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_GameResultBonusPoint_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_GameResultBonusPoint.WB_GameResultBonusPoint_C.StartOutViewUMGAnimation
// 0x0008 (0x0008 - 0x0000)
struct WB_GameResultBonusPoint_C_StartOutViewUMGAnimation final
{
public:
	class UWidgetAnimation*                       Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameResultBonusPoint_C_StartOutViewUMGAnimation) == 0x000008, "Wrong alignment on WB_GameResultBonusPoint_C_StartOutViewUMGAnimation");
static_assert(sizeof(WB_GameResultBonusPoint_C_StartOutViewUMGAnimation) == 0x000008, "Wrong size on WB_GameResultBonusPoint_C_StartOutViewUMGAnimation");
static_assert(offsetof(WB_GameResultBonusPoint_C_StartOutViewUMGAnimation, Target) == 0x000000, "Member 'WB_GameResultBonusPoint_C_StartOutViewUMGAnimation::Target' has a wrong offset!");

// Function WB_GameResultBonusPoint.WB_GameResultBonusPoint_C.PlayBonusPointAnimation
// 0x0004 (0x0004 - 0x0000)
struct WB_GameResultBonusPoint_C_PlayBonusPointAnimation final
{
public:
	float                                         DelayTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameResultBonusPoint_C_PlayBonusPointAnimation) == 0x000004, "Wrong alignment on WB_GameResultBonusPoint_C_PlayBonusPointAnimation");
static_assert(sizeof(WB_GameResultBonusPoint_C_PlayBonusPointAnimation) == 0x000004, "Wrong size on WB_GameResultBonusPoint_C_PlayBonusPointAnimation");
static_assert(offsetof(WB_GameResultBonusPoint_C_PlayBonusPointAnimation, DelayTime) == 0x000000, "Member 'WB_GameResultBonusPoint_C_PlayBonusPointAnimation::DelayTime' has a wrong offset!");

// Function WB_GameResultBonusPoint.WB_GameResultBonusPoint_C.UpdateDisplay
// 0x0020 (0x0020 - 0x0000)
struct WB_GameResultBonusPoint_C_UpdateDisplay final
{
public:
	class FText                                   Title_0;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	EAJBLimitedBounusSign                         Sign;                                              // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameResultBonusPoint_C_UpdateDisplay) == 0x000008, "Wrong alignment on WB_GameResultBonusPoint_C_UpdateDisplay");
static_assert(sizeof(WB_GameResultBonusPoint_C_UpdateDisplay) == 0x000020, "Wrong size on WB_GameResultBonusPoint_C_UpdateDisplay");
static_assert(offsetof(WB_GameResultBonusPoint_C_UpdateDisplay, Title_0) == 0x000000, "Member 'WB_GameResultBonusPoint_C_UpdateDisplay::Title_0' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_UpdateDisplay, Sign) == 0x000018, "Member 'WB_GameResultBonusPoint_C_UpdateDisplay::Sign' has a wrong offset!");
static_assert(offsetof(WB_GameResultBonusPoint_C_UpdateDisplay, Value) == 0x00001C, "Member 'WB_GameResultBonusPoint_C_UpdateDisplay::Value' has a wrong offset!");

// Function WB_GameResultBonusPoint.WB_GameResultBonusPoint_C.IsUsedWidget
// 0x0001 (0x0001 - 0x0000)
struct WB_GameResultBonusPoint_C_IsUsedWidget final
{
public:
	bool                                          bUsed;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_GameResultBonusPoint_C_IsUsedWidget) == 0x000001, "Wrong alignment on WB_GameResultBonusPoint_C_IsUsedWidget");
static_assert(sizeof(WB_GameResultBonusPoint_C_IsUsedWidget) == 0x000001, "Wrong size on WB_GameResultBonusPoint_C_IsUsedWidget");
static_assert(offsetof(WB_GameResultBonusPoint_C_IsUsedWidget, bUsed) == 0x000000, "Member 'WB_GameResultBonusPoint_C_IsUsedWidget::bUsed' has a wrong offset!");

}


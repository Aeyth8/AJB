#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_AJBInGameStand_ECH01

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_AJBInGameStand_ECH01.ABP_AJBInGameStand_ECH01_C
// 0x0940 (0x0C98 - 0x0358)
class UABP_AJBInGameStand_ECH01_C final : public UAnimInstance
{
public:
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_FCB551DB42718868CFEF089A51F07CB6; // 0x0368(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_4817454C404BD42D904B76A2933D5DA6; // 0x03B0(0x0070)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8FFB22064D56F89C9C9E00BF21B49899; // 0x0420(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_760635F641E831C8262CFEB43DD68577; // 0x0468(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6F7603DF41B7665C677A8BB8A62FC809; // 0x04B0(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_StateResult_29E515D241EDC994C7A8AEB573E621EB; // 0x0560(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_163A7E24496CE54F1874C58B88DDAB50; // 0x05A8(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_StateResult_AB11E78F47D2F886AD2B1EBBFF5219AC; // 0x0658(0x0048)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_98E01633474A06AC51B984A2527066C1; // 0x06A0(0x00E0)()
	struct FAnimNode_SplineIK                     AnimGraphNode_SplineIK_7091EA7443A937978F44F5AA2EA5C255; // 0x0780(0x02B8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_148483C54FC8D61BF20F3695DAB2BA70; // 0x0A38(0x0048)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_12170BE341C15A64C278CEB278F0F577; // 0x0A80(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_F005C704431ED1C410DC7791727C0B89; // 0x0AC8(0x0160)()
	bool                                          IsSeparate;                                        // 0x0C28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C29[0x3];                                      // 0x0C29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MovementVectorForward;                             // 0x0C2C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementVectorRight;                               // 0x0C30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CurrentTailLaunching;                              // 0x0C34(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          BeforeTailLaunching;                               // 0x0C35(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C36[0x2];                                      // 0x0C36(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBMiddleRangeSkill_C*              MiddleRangeSkillComp;                              // 0x0C38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TailAnimationBlendAlpha;                           // 0x0C40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0C44(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TailFluctuationCoefficient;                        // 0x0C50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C54[0x4];                                      // 0x0C54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        SplinePointOriginComponentLocations;               // 0x0C58(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FTransform>                     SplinePointComponentTransforms;                    // 0x0C68(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FVector                                SplinePointComponentLocationOffset;                // 0x0C78(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SplinePointRotation;                               // 0x0C84(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         MaxFluctuationLength_cm_;                          // 0x0C90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugView;                                        // 0x0C94(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ABP_AJBInGameStand_ECH01(int32 EntryPoint);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBInGameStand_ECH01_AnimGraphNode_TransitionResult_8FFB22064D56F89C9C9E00BF21B49899();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBInGameStand_ECH01_AnimGraphNode_ModifyBone_F005C704431ED1C410DC7791727C0B89();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBInGameStand_ECH01_AnimGraphNode_SplineIK_7091EA7443A937978F44F5AA2EA5C255();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBInGameStand_ECH01_AnimGraphNode_TransitionResult_760635F641E831C8262CFEB43DD68577();
	void TryGetCloseRangeSkillComp(class UBP_AJBCloseRangeSkill_C** CloseRangeSkillComp);
	void IsTailStretching(bool* Result);
	void IsTailLaunching(bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_AJBInGameStand_ECH01_C">();
	}
	static class UABP_AJBInGameStand_ECH01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_AJBInGameStand_ECH01_C>();
	}
};
static_assert(alignof(UABP_AJBInGameStand_ECH01_C) == 0x000008, "Wrong alignment on UABP_AJBInGameStand_ECH01_C");
static_assert(sizeof(UABP_AJBInGameStand_ECH01_C) == 0x000C98, "Wrong size on UABP_AJBInGameStand_ECH01_C");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, UberGraphFrame) == 0x000360, "Member 'UABP_AJBInGameStand_ECH01_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, AnimGraphNode_Root_FCB551DB42718868CFEF089A51F07CB6) == 0x000368, "Member 'UABP_AJBInGameStand_ECH01_C::AnimGraphNode_Root_FCB551DB42718868CFEF089A51F07CB6' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, AnimGraphNode_Slot_4817454C404BD42D904B76A2933D5DA6) == 0x0003B0, "Member 'UABP_AJBInGameStand_ECH01_C::AnimGraphNode_Slot_4817454C404BD42D904B76A2933D5DA6' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, AnimGraphNode_TransitionResult_8FFB22064D56F89C9C9E00BF21B49899) == 0x000420, "Member 'UABP_AJBInGameStand_ECH01_C::AnimGraphNode_TransitionResult_8FFB22064D56F89C9C9E00BF21B49899' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, AnimGraphNode_TransitionResult_760635F641E831C8262CFEB43DD68577) == 0x000468, "Member 'UABP_AJBInGameStand_ECH01_C::AnimGraphNode_TransitionResult_760635F641E831C8262CFEB43DD68577' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, AnimGraphNode_SequencePlayer_6F7603DF41B7665C677A8BB8A62FC809) == 0x0004B0, "Member 'UABP_AJBInGameStand_ECH01_C::AnimGraphNode_SequencePlayer_6F7603DF41B7665C677A8BB8A62FC809' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, AnimGraphNode_StateResult_29E515D241EDC994C7A8AEB573E621EB) == 0x000560, "Member 'UABP_AJBInGameStand_ECH01_C::AnimGraphNode_StateResult_29E515D241EDC994C7A8AEB573E621EB' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, AnimGraphNode_SequencePlayer_163A7E24496CE54F1874C58B88DDAB50) == 0x0005A8, "Member 'UABP_AJBInGameStand_ECH01_C::AnimGraphNode_SequencePlayer_163A7E24496CE54F1874C58B88DDAB50' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, AnimGraphNode_StateResult_AB11E78F47D2F886AD2B1EBBFF5219AC) == 0x000658, "Member 'UABP_AJBInGameStand_ECH01_C::AnimGraphNode_StateResult_AB11E78F47D2F886AD2B1EBBFF5219AC' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, AnimGraphNode_StateMachine_98E01633474A06AC51B984A2527066C1) == 0x0006A0, "Member 'UABP_AJBInGameStand_ECH01_C::AnimGraphNode_StateMachine_98E01633474A06AC51B984A2527066C1' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, AnimGraphNode_SplineIK_7091EA7443A937978F44F5AA2EA5C255) == 0x000780, "Member 'UABP_AJBInGameStand_ECH01_C::AnimGraphNode_SplineIK_7091EA7443A937978F44F5AA2EA5C255' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, AnimGraphNode_ComponentToLocalSpace_148483C54FC8D61BF20F3695DAB2BA70) == 0x000A38, "Member 'UABP_AJBInGameStand_ECH01_C::AnimGraphNode_ComponentToLocalSpace_148483C54FC8D61BF20F3695DAB2BA70' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, AnimGraphNode_LocalToComponentSpace_12170BE341C15A64C278CEB278F0F577) == 0x000A80, "Member 'UABP_AJBInGameStand_ECH01_C::AnimGraphNode_LocalToComponentSpace_12170BE341C15A64C278CEB278F0F577' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, AnimGraphNode_ModifyBone_F005C704431ED1C410DC7791727C0B89) == 0x000AC8, "Member 'UABP_AJBInGameStand_ECH01_C::AnimGraphNode_ModifyBone_F005C704431ED1C410DC7791727C0B89' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, IsSeparate) == 0x000C28, "Member 'UABP_AJBInGameStand_ECH01_C::IsSeparate' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, MovementVectorForward) == 0x000C2C, "Member 'UABP_AJBInGameStand_ECH01_C::MovementVectorForward' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, MovementVectorRight) == 0x000C30, "Member 'UABP_AJBInGameStand_ECH01_C::MovementVectorRight' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, CurrentTailLaunching) == 0x000C34, "Member 'UABP_AJBInGameStand_ECH01_C::CurrentTailLaunching' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, BeforeTailLaunching) == 0x000C35, "Member 'UABP_AJBInGameStand_ECH01_C::BeforeTailLaunching' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, MiddleRangeSkillComp) == 0x000C38, "Member 'UABP_AJBInGameStand_ECH01_C::MiddleRangeSkillComp' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, TailAnimationBlendAlpha) == 0x000C40, "Member 'UABP_AJBInGameStand_ECH01_C::TailAnimationBlendAlpha' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, TargetLocation) == 0x000C44, "Member 'UABP_AJBInGameStand_ECH01_C::TargetLocation' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, TailFluctuationCoefficient) == 0x000C50, "Member 'UABP_AJBInGameStand_ECH01_C::TailFluctuationCoefficient' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, SplinePointOriginComponentLocations) == 0x000C58, "Member 'UABP_AJBInGameStand_ECH01_C::SplinePointOriginComponentLocations' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, SplinePointComponentTransforms) == 0x000C68, "Member 'UABP_AJBInGameStand_ECH01_C::SplinePointComponentTransforms' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, SplinePointComponentLocationOffset) == 0x000C78, "Member 'UABP_AJBInGameStand_ECH01_C::SplinePointComponentLocationOffset' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, SplinePointRotation) == 0x000C84, "Member 'UABP_AJBInGameStand_ECH01_C::SplinePointRotation' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, MaxFluctuationLength_cm_) == 0x000C90, "Member 'UABP_AJBInGameStand_ECH01_C::MaxFluctuationLength_cm_' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_ECH01_C, bDebugView) == 0x000C94, "Member 'UABP_AJBInGameStand_ECH01_C::bDebugView' has a wrong offset!");

}


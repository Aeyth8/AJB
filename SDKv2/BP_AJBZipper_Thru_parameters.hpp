#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBZipper_Thru

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBZipper_Thru.BP_AJBZipper_Thru_C.ExecuteUbergraph_BP_AJBZipper_Thru
// 0x0310 (0x0310 - 0x0000)
struct BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaledBoxExtent_ReturnValue;           // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUnscaledBoxExtent_ReturnValue;         // 0x0048(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable1;                             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0088(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bOriginToCounterpart3;          // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X2;                           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bOriginToCounterpart2;          // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bOriginToCounterpart1;          // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x00B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_bOriginToCounterpart;           // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue1;      // 0x0180(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01BC(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location1;                 // 0x01D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation1;                 // 0x01E0(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale1;                    // 0x01EC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectOnLocal_ParticleEffect; // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectOnLocal_ParticleEffect1; // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor1;                    // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ServerIsInteractingPlayer;            // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0214(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0220(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x02A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess;              // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD;           // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DA[0x2];                                      // 0x02DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRadiusOfLargestCharacter_ReturnValue;  // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x3];                                      // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHalfHeightOfLargestCharacter_ReturnValue; // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRadiusOfLargestCharacter_ReturnValue1; // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHalfHeightOfLargestCharacter_ReturnValue1; // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru) == 0x000010, "Wrong alignment on BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru");
static_assert(sizeof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru) == 0x000310, "Wrong size on BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, EntryPoint) == 0x000000, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller) == 0x000010, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, Temp_string_Variable) == 0x000020, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000030, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_GetScaledBoxExtent_ReturnValue) == 0x00003C, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_GetScaledBoxExtent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_GetUnscaledBoxExtent_ReturnValue) == 0x000048, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_GetUnscaledBoxExtent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_BreakVector_X) == 0x000054, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_BreakVector_Y) == 0x000058, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_BreakVector_Z) == 0x00005C, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_BreakVector_X1) == 0x000060, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_BreakVector_Y1) == 0x000064, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_BreakVector_Z1) == 0x000068, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000070, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, Temp_string_Variable1) == 0x000078, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::Temp_string_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_MakeVector_ReturnValue) == 0x000088, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, Temp_bool_Variable) == 0x000094, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, K2Node_CustomEvent_bOriginToCounterpart3) == 0x000095, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::K2Node_CustomEvent_bOriginToCounterpart3' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_BreakVector_X2) == 0x000098, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_BreakVector_Y2) == 0x00009C, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_BreakVector_Z2) == 0x0000A0, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, K2Node_CustomEvent_bOriginToCounterpart2) == 0x0000A4, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::K2Node_CustomEvent_bOriginToCounterpart2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, K2Node_CustomEvent_bOriginToCounterpart1) == 0x0000AC, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::K2Node_CustomEvent_bOriginToCounterpart1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_MakeVector_ReturnValue1) == 0x0000B0, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000C0, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, K2Node_CustomEvent_bOriginToCounterpart) == 0x000148, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::K2Node_CustomEvent_bOriginToCounterpart' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000150, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_K2_GetComponentToWorld_ReturnValue1) == 0x000180, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_K2_GetComponentToWorld_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_BreakTransform_Location) == 0x0001B0, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_BreakTransform_Rotation) == 0x0001BC, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_BreakTransform_Scale) == 0x0001C8, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_BreakTransform_Location1) == 0x0001D4, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_BreakTransform_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_BreakTransform_Rotation1) == 0x0001E0, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_BreakTransform_Rotation1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_BreakTransform_Scale1) == 0x0001EC, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_BreakTransform_Scale1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_RequestParticleEffectOnLocal_ParticleEffect) == 0x0001F8, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_RequestParticleEffectOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_RequestParticleEffectOnLocal_ParticleEffect1) == 0x000200, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_RequestParticleEffectOnLocal_ParticleEffect1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, K2Node_Event_InteractingActor1) == 0x000208, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::K2Node_Event_InteractingActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, K2Node_Event_ServerIsInteractingPlayer) == 0x000210, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::K2Node_Event_ServerIsInteractingPlayer' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000214, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000220, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0002A8, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_VSize_ReturnValue) == 0x0002B4, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0002B8, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, K2Node_Event_InteractingActor) == 0x0002C0, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_GetAJBInGameHUD_BP_bSuccess) == 0x0002C8, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_GetAJBInGameHUD_BP_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD) == 0x0002D0, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_IsDedicatedServer_ReturnValue) == 0x0002D8, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x0002D9, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_GetRadiusOfLargestCharacter_ReturnValue) == 0x0002DC, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_GetRadiusOfLargestCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_Not_PreBool_ReturnValue) == 0x0002E0, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_GetHalfHeightOfLargestCharacter_ReturnValue) == 0x0002E4, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_GetHalfHeightOfLargestCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, K2Node_Select_Default) == 0x0002E8, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_Concat_StrStr_ReturnValue) == 0x0002F8, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_GetRadiusOfLargestCharacter_ReturnValue1) == 0x000308, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_GetRadiusOfLargestCharacter_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru, CallFunc_GetHalfHeightOfLargestCharacter_ReturnValue1) == 0x00030C, "Member 'BP_AJBZipper_Thru_C_ExecuteUbergraph_BP_AJBZipper_Thru::CallFunc_GetHalfHeightOfLargestCharacter_ReturnValue1' has a wrong offset!");

// Function BP_AJBZipper_Thru.BP_AJBZipper_Thru_C.OnInteractionBlocked
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBZipper_Thru_C_OnInteractionBlocked final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBZipper_Thru_C_OnInteractionBlocked) == 0x000008, "Wrong alignment on BP_AJBZipper_Thru_C_OnInteractionBlocked");
static_assert(sizeof(BP_AJBZipper_Thru_C_OnInteractionBlocked) == 0x000008, "Wrong size on BP_AJBZipper_Thru_C_OnInteractionBlocked");
static_assert(offsetof(BP_AJBZipper_Thru_C_OnInteractionBlocked, InteractingActor) == 0x000000, "Member 'BP_AJBZipper_Thru_C_OnInteractionBlocked::InteractingActor' has a wrong offset!");

// Function BP_AJBZipper_Thru.BP_AJBZipper_Thru_C.OnROSInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBZipper_Thru_C_OnROSInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ServerIsInteractingPlayer;                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Thru_C_OnROSInteract) == 0x000008, "Wrong alignment on BP_AJBZipper_Thru_C_OnROSInteract");
static_assert(sizeof(BP_AJBZipper_Thru_C_OnROSInteract) == 0x000010, "Wrong size on BP_AJBZipper_Thru_C_OnROSInteract");
static_assert(offsetof(BP_AJBZipper_Thru_C_OnROSInteract, InteractingActor) == 0x000000, "Member 'BP_AJBZipper_Thru_C_OnROSInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_OnROSInteract, ServerIsInteractingPlayer) == 0x000008, "Member 'BP_AJBZipper_Thru_C_OnROSInteract::ServerIsInteractingPlayer' has a wrong offset!");

// Function BP_AJBZipper_Thru.BP_AJBZipper_Thru_C.ServerNotifyOnExit
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBZipper_Thru_C_ServerNotifyOnExit final
{
public:
	bool                                          bOriginToCounterpart;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Thru_C_ServerNotifyOnExit) == 0x000001, "Wrong alignment on BP_AJBZipper_Thru_C_ServerNotifyOnExit");
static_assert(sizeof(BP_AJBZipper_Thru_C_ServerNotifyOnExit) == 0x000001, "Wrong size on BP_AJBZipper_Thru_C_ServerNotifyOnExit");
static_assert(offsetof(BP_AJBZipper_Thru_C_ServerNotifyOnExit, bOriginToCounterpart) == 0x000000, "Member 'BP_AJBZipper_Thru_C_ServerNotifyOnExit::bOriginToCounterpart' has a wrong offset!");

// Function BP_AJBZipper_Thru.BP_AJBZipper_Thru_C.ServerNotifyOnEnter
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBZipper_Thru_C_ServerNotifyOnEnter final
{
public:
	bool                                          bOriginToCounterpart;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Thru_C_ServerNotifyOnEnter) == 0x000001, "Wrong alignment on BP_AJBZipper_Thru_C_ServerNotifyOnEnter");
static_assert(sizeof(BP_AJBZipper_Thru_C_ServerNotifyOnEnter) == 0x000001, "Wrong size on BP_AJBZipper_Thru_C_ServerNotifyOnEnter");
static_assert(offsetof(BP_AJBZipper_Thru_C_ServerNotifyOnEnter, bOriginToCounterpart) == 0x000000, "Member 'BP_AJBZipper_Thru_C_ServerNotifyOnEnter::bOriginToCounterpart' has a wrong offset!");

// Function BP_AJBZipper_Thru.BP_AJBZipper_Thru_C.MC_ShowExitEffect
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBZipper_Thru_C_MC_ShowExitEffect final
{
public:
	bool                                          bOriginToCounterpart;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Thru_C_MC_ShowExitEffect) == 0x000001, "Wrong alignment on BP_AJBZipper_Thru_C_MC_ShowExitEffect");
static_assert(sizeof(BP_AJBZipper_Thru_C_MC_ShowExitEffect) == 0x000001, "Wrong size on BP_AJBZipper_Thru_C_MC_ShowExitEffect");
static_assert(offsetof(BP_AJBZipper_Thru_C_MC_ShowExitEffect, bOriginToCounterpart) == 0x000000, "Member 'BP_AJBZipper_Thru_C_MC_ShowExitEffect::bOriginToCounterpart' has a wrong offset!");

// Function BP_AJBZipper_Thru.BP_AJBZipper_Thru_C.MC_ShowEnterEffect
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBZipper_Thru_C_MC_ShowEnterEffect final
{
public:
	bool                                          bOriginToCounterpart;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Thru_C_MC_ShowEnterEffect) == 0x000001, "Wrong alignment on BP_AJBZipper_Thru_C_MC_ShowEnterEffect");
static_assert(sizeof(BP_AJBZipper_Thru_C_MC_ShowEnterEffect) == 0x000001, "Wrong size on BP_AJBZipper_Thru_C_MC_ShowEnterEffect");
static_assert(offsetof(BP_AJBZipper_Thru_C_MC_ShowEnterEffect, bOriginToCounterpart) == 0x000000, "Member 'BP_AJBZipper_Thru_C_MC_ShowEnterEffect::bOriginToCounterpart' has a wrong offset!");

// Function BP_AJBZipper_Thru.BP_AJBZipper_Thru_C.Interactable
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBZipper_Thru_C_Interactable final
{
public:
	class ABP_AJBInGameCharacter_C*               Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceLength;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Interactable_ReturnValue;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckDistanceLimit_bSuccess;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInteractableDirection_ReturnValue;      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Thru_C_Interactable) == 0x000008, "Wrong alignment on BP_AJBZipper_Thru_C_Interactable");
static_assert(sizeof(BP_AJBZipper_Thru_C_Interactable) == 0x000028, "Wrong size on BP_AJBZipper_Thru_C_Interactable");
static_assert(offsetof(BP_AJBZipper_Thru_C_Interactable, Character) == 0x000000, "Member 'BP_AJBZipper_Thru_C_Interactable::Character' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_Interactable, TraceLength) == 0x000008, "Member 'BP_AJBZipper_Thru_C_Interactable::TraceLength' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_Interactable, ReturnValue) == 0x00000C, "Member 'BP_AJBZipper_Thru_C_Interactable::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_Interactable, CallFunc_Interactable_ReturnValue) == 0x00000D, "Member 'BP_AJBZipper_Thru_C_Interactable::CallFunc_Interactable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_Interactable, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_AJBZipper_Thru_C_Interactable::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_Interactable, CallFunc_CheckDistanceLimit_bSuccess) == 0x00001C, "Member 'BP_AJBZipper_Thru_C_Interactable::CallFunc_CheckDistanceLimit_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_Interactable, CallFunc_IsInteractableDirection_ReturnValue) == 0x00001D, "Member 'BP_AJBZipper_Thru_C_Interactable::CallFunc_IsInteractableDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_Interactable, CallFunc_Not_PreBool_ReturnValue) == 0x00001E, "Member 'BP_AJBZipper_Thru_C_Interactable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_Interactable, CallFunc_BooleanAND_ReturnValue) == 0x00001F, "Member 'BP_AJBZipper_Thru_C_Interactable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_Interactable, CallFunc_BooleanAND_ReturnValue1) == 0x000020, "Member 'BP_AJBZipper_Thru_C_Interactable::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function BP_AJBZipper_Thru.BP_AJBZipper_Thru_C.TryGetInteractableText
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBZipper_Thru_C_TryGetInteractableText final
{
public:
	class ABP_AJBInGameCharacter_C*               OperatorCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   InteractMessage;                                   // 0x0010(0x0018)(Parm, OutParm)
};
static_assert(alignof(BP_AJBZipper_Thru_C_TryGetInteractableText) == 0x000008, "Wrong alignment on BP_AJBZipper_Thru_C_TryGetInteractableText");
static_assert(sizeof(BP_AJBZipper_Thru_C_TryGetInteractableText) == 0x000028, "Wrong size on BP_AJBZipper_Thru_C_TryGetInteractableText");
static_assert(offsetof(BP_AJBZipper_Thru_C_TryGetInteractableText, OperatorCharacter) == 0x000000, "Member 'BP_AJBZipper_Thru_C_TryGetInteractableText::OperatorCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_TryGetInteractableText, bSuccess) == 0x000008, "Member 'BP_AJBZipper_Thru_C_TryGetInteractableText::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_TryGetInteractableText, InteractMessage) == 0x000010, "Member 'BP_AJBZipper_Thru_C_TryGetInteractableText::InteractMessage' has a wrong offset!");

// Function BP_AJBZipper_Thru.BP_AJBZipper_Thru_C.IfEnteringOriginToCounterpart
// 0x0058 (0x0058 - 0x0000)
struct BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1;       // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue1;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart) == 0x000008, "Wrong alignment on BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart");
static_assert(sizeof(BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart) == 0x000058, "Wrong size on BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart, Actor) == 0x000000, "Member 'BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart::Actor' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart, ReturnValue) == 0x000008, "Member 'BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000024, "Member 'BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart, CallFunc_Subtract_VectorVector_ReturnValue1) == 0x00003C, "Member 'BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart::CallFunc_Subtract_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart, CallFunc_VSizeSquared_ReturnValue) == 0x000048, "Member 'BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart, CallFunc_VSizeSquared_ReturnValue1) == 0x00004C, "Member 'BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart::CallFunc_VSizeSquared_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart, CallFunc_Less_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_AJBZipper_Thru_C_IfEnteringOriginToCounterpart::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBZipper_Thru.BP_AJBZipper_Thru_C.AdjustLocationOfInjection
// 0x0350 (0x0350 - 0x0000)
struct BP_AJBZipper_Thru_C_AdjustLocationOfInjection final
{
public:
	bool                                          bAdjustOrigin;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TrialNum;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InInteractionBuffer;                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFound;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0010(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_SemiSafeLocationHasFound;                     // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_SafeLocationHasFound;                         // 0x001D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_SucceededTrialNum;                            // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_TargetLocation;                               // 0x0024(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x003C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable1;                             // 0x004C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0060(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable2;                              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable3;                              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select1_Default;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable1;                             // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select2_Default;                            // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00B0(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue5;               // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable3;                               // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0124(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0130(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13E[0x2];                                      // 0x013E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable4;                              // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select3_Default;                            // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller; // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue6;               // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue7;               // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable5;                              // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable5;                               // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select4_Default;                            // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHalfHeightOfLargestCharacter_ReturnValue; // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x01A0(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRadiusOfLargestCharacter_ReturnValue;  // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable6;                               // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHalfHeightOfLargestCharacter_ReturnValue1; // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRadiusOfLargestCharacter_ReturnValue1; // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D6[0x2];                                      // 0x01D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRadiusOfLargestCharacter_ReturnValue2; // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable2;                             // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable3;                             // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue1;            // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue8;               // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable7;                               // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue9;               // 0x0238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable1;                             // 0x0248(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class FString                                 K2Node_Select5_Default;                            // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            CallFunc_CapsuleOverlapComponents_OutComponents;   // 0x0268(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_CapsuleOverlapComponents_ReturnValue;     // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue10;              // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select6_Default;                            // 0x0298(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable8;                               // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AA[0x6];                                      // 0x02AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select7_Default;                            // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRadiusOfLargestCharacter_ReturnValue3; // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue1;            // 0x02CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x02DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x02E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x02F4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0300(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x030C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHalfHeightOfLargestCharacter_ReturnValue2; // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array1;                           // 0x0320(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	float                                         CallFunc_GetRadiusOfLargestCharacter_ReturnValue4; // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_CapsuleOverlapComponents_OutComponents1;  // 0x0338(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_CapsuleOverlapComponents_ReturnValue1;    // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection) == 0x000008, "Wrong alignment on BP_AJBZipper_Thru_C_AdjustLocationOfInjection");
static_assert(sizeof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection) == 0x000350, "Wrong size on BP_AJBZipper_Thru_C_AdjustLocationOfInjection");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, bAdjustOrigin) == 0x000000, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::bAdjustOrigin' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, TrialNum) == 0x000004, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::TrialNum' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, InInteractionBuffer) == 0x000008, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::InInteractionBuffer' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, bFound) == 0x00000C, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::bFound' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Location) == 0x000010, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_SemiSafeLocationHasFound) == 0x00001C, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_SemiSafeLocationHasFound' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_SafeLocationHasFound) == 0x00001D, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_SafeLocationHasFound' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_SucceededTrialNum) == 0x000020, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_SucceededTrialNum' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_TargetLocation) == 0x000024, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_float_Variable) == 0x000030, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_float_Variable1) == 0x000034, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_bool_Variable) == 0x000038, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_struct_Variable) == 0x00003C, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_struct_Variable1) == 0x00004C, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_bool_Variable1) == 0x00005C, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, K2Node_Select_Default) == 0x000060, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_float_Variable2) == 0x000070, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_float_Variable3) == 0x000074, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_float_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_bool_Variable2) == 0x000078, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, K2Node_Select1_Default) == 0x00007C, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_string_Variable) == 0x000080, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_string_Variable1) == 0x000090, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_string_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, K2Node_Select2_Default) == 0x0000A0, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_object_Variable) == 0x0000B0, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C0, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Concat_StrStr_ReturnValue1) == 0x0000D0, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Concat_StrStr_ReturnValue2) == 0x0000E0, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Concat_StrStr_ReturnValue3) == 0x0000F0, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Concat_StrStr_ReturnValue4) == 0x000100, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Concat_StrStr_ReturnValue5) == 0x000110, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Concat_StrStr_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_bool_Variable3) == 0x000120, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_GetForwardVector_ReturnValue) == 0x000124, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000130, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Not_PreBool_ReturnValue) == 0x00013C, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_bool_Variable4) == 0x00013D, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_float_Variable4) == 0x000140, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_float_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, K2Node_Select3_Default) == 0x000144, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_GetPlayerController_ReturnValue) == 0x000148, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller) == 0x000150, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, K2Node_DynamicCast_bSuccess) == 0x000158, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Conv_IntToString_ReturnValue) == 0x000160, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Concat_StrStr_ReturnValue6) == 0x000170, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Concat_StrStr_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Concat_StrStr_ReturnValue7) == 0x000180, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Concat_StrStr_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_float_Variable5) == 0x000190, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_float_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_bool_Variable5) == 0x000194, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, K2Node_Select4_Default) == 0x000198, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_GetHalfHeightOfLargestCharacter_ReturnValue) == 0x00019C, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_GetHalfHeightOfLargestCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, K2Node_MakeArray_Array) == 0x0001A0, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001B0, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_GetRadiusOfLargestCharacter_ReturnValue) == 0x0001B4, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_GetRadiusOfLargestCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_bool_Variable6) == 0x0001B8, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_bool_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_GetHalfHeightOfLargestCharacter_ReturnValue1) == 0x0001BC, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_GetHalfHeightOfLargestCharacter_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_GetRadiusOfLargestCharacter_ReturnValue1) == 0x0001C0, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_GetRadiusOfLargestCharacter_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_int_Variable) == 0x0001C4, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001C8, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0001CC, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Add_IntInt_ReturnValue) == 0x0001D0, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001D4, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_BooleanAND_ReturnValue) == 0x0001D5, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_GetRadiusOfLargestCharacter_ReturnValue2) == 0x0001D8, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_GetRadiusOfLargestCharacter_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_string_Variable2) == 0x0001E0, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_string_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001F0, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001F4, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_string_Variable3) == 0x0001F8, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_string_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000208, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Conv_IntToString_ReturnValue1) == 0x000210, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Conv_IntToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Concat_StrStr_ReturnValue8) == 0x000220, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Concat_StrStr_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_bool_Variable7) == 0x000230, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_bool_Variable7' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Concat_StrStr_ReturnValue9) == 0x000238, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Concat_StrStr_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_object_Variable1) == 0x000248, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, K2Node_Select5_Default) == 0x000258, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::K2Node_Select5_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_CapsuleOverlapComponents_OutComponents) == 0x000268, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_CapsuleOverlapComponents_OutComponents' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_CapsuleOverlapComponents_ReturnValue) == 0x000278, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_CapsuleOverlapComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Concat_StrStr_ReturnValue10) == 0x000280, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Concat_StrStr_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Not_PreBool_ReturnValue1) == 0x000290, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, K2Node_Select6_Default) == 0x000298, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::K2Node_Select6_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, Temp_bool_Variable8) == 0x0002A8, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::Temp_bool_Variable8' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0002A9, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, K2Node_Select7_Default) == 0x0002B0, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::K2Node_Select7_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_GetRadiusOfLargestCharacter_ReturnValue3) == 0x0002C0, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_GetRadiusOfLargestCharacter_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x0002C4, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Add_FloatFloat_ReturnValue1) == 0x0002C8, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_GetForwardVector_ReturnValue1) == 0x0002CC, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_GetForwardVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x0002D8, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0002DC, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x0002E8, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x0002F4, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Add_VectorVector_ReturnValue) == 0x000300, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Add_VectorVector_ReturnValue1) == 0x00030C, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_GetHalfHeightOfLargestCharacter_ReturnValue2) == 0x000318, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_GetHalfHeightOfLargestCharacter_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, K2Node_MakeArray_Array1) == 0x000320, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_GetRadiusOfLargestCharacter_ReturnValue4) == 0x000330, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_GetRadiusOfLargestCharacter_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_CapsuleOverlapComponents_OutComponents1) == 0x000338, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_CapsuleOverlapComponents_OutComponents1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_CapsuleOverlapComponents_ReturnValue1) == 0x000348, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_CapsuleOverlapComponents_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_AdjustLocationOfInjection, CallFunc_Not_PreBool_ReturnValue2) == 0x000349, "Member 'BP_AJBZipper_Thru_C_AdjustLocationOfInjection::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");

// Function BP_AJBZipper_Thru.BP_AJBZipper_Thru_C.OnLocalInteract
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBZipper_Thru_C_OnLocalInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnLocalInteract_bSuccess;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IfEnteringOriginToCounterpart_ReturnValue; // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Thru_C_OnLocalInteract) == 0x000008, "Wrong alignment on BP_AJBZipper_Thru_C_OnLocalInteract");
static_assert(sizeof(BP_AJBZipper_Thru_C_OnLocalInteract) == 0x000020, "Wrong size on BP_AJBZipper_Thru_C_OnLocalInteract");
static_assert(offsetof(BP_AJBZipper_Thru_C_OnLocalInteract, InteractingActor) == 0x000000, "Member 'BP_AJBZipper_Thru_C_OnLocalInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_OnLocalInteract, bSuccess) == 0x000008, "Member 'BP_AJBZipper_Thru_C_OnLocalInteract::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_OnLocalInteract, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBZipper_Thru_C_OnLocalInteract::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_OnLocalInteract, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBZipper_Thru_C_OnLocalInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_OnLocalInteract, CallFunc_OnLocalInteract_bSuccess) == 0x000019, "Member 'BP_AJBZipper_Thru_C_OnLocalInteract::CallFunc_OnLocalInteract_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_OnLocalInteract, CallFunc_IfEnteringOriginToCounterpart_ReturnValue) == 0x00001A, "Member 'BP_AJBZipper_Thru_C_OnLocalInteract::CallFunc_IfEnteringOriginToCounterpart_ReturnValue' has a wrong offset!");

// Function BP_AJBZipper_Thru.BP_AJBZipper_Thru_C.IfNeedsExclusiveInteractStrictly
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBZipper_Thru_C_IfNeedsExclusiveInteractStrictly final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Thru_C_IfNeedsExclusiveInteractStrictly) == 0x000001, "Wrong alignment on BP_AJBZipper_Thru_C_IfNeedsExclusiveInteractStrictly");
static_assert(sizeof(BP_AJBZipper_Thru_C_IfNeedsExclusiveInteractStrictly) == 0x000001, "Wrong size on BP_AJBZipper_Thru_C_IfNeedsExclusiveInteractStrictly");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfNeedsExclusiveInteractStrictly, ReturnValue) == 0x000000, "Member 'BP_AJBZipper_Thru_C_IfNeedsExclusiveInteractStrictly::ReturnValue' has a wrong offset!");

// Function BP_AJBZipper_Thru.BP_AJBZipper_Thru_C.GetInteractBoundForCulling
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBZipper_Thru_C_GetInteractBoundForCulling final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Center;                                            // 0x0008(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IfEnteringOriginToCounterpart_ReturnValue; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBZipper_Thru_C_GetInteractBoundForCulling) == 0x000008, "Wrong alignment on BP_AJBZipper_Thru_C_GetInteractBoundForCulling");
static_assert(sizeof(BP_AJBZipper_Thru_C_GetInteractBoundForCulling) == 0x000048, "Wrong size on BP_AJBZipper_Thru_C_GetInteractBoundForCulling");
static_assert(offsetof(BP_AJBZipper_Thru_C_GetInteractBoundForCulling, InteractingActor) == 0x000000, "Member 'BP_AJBZipper_Thru_C_GetInteractBoundForCulling::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_GetInteractBoundForCulling, Center) == 0x000008, "Member 'BP_AJBZipper_Thru_C_GetInteractBoundForCulling::Center' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_GetInteractBoundForCulling, Radius) == 0x000014, "Member 'BP_AJBZipper_Thru_C_GetInteractBoundForCulling::Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_GetInteractBoundForCulling, Temp_bool_Variable) == 0x000018, "Member 'BP_AJBZipper_Thru_C_GetInteractBoundForCulling::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_GetInteractBoundForCulling, CallFunc_IfEnteringOriginToCounterpart_ReturnValue) == 0x000019, "Member 'BP_AJBZipper_Thru_C_GetInteractBoundForCulling::CallFunc_IfEnteringOriginToCounterpart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_GetInteractBoundForCulling, K2Node_Select_Default) == 0x000020, "Member 'BP_AJBZipper_Thru_C_GetInteractBoundForCulling::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_GetInteractBoundForCulling, CallFunc_GetComponentBounds_Origin) == 0x000028, "Member 'BP_AJBZipper_Thru_C_GetInteractBoundForCulling::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_GetInteractBoundForCulling, CallFunc_GetComponentBounds_BoxExtent) == 0x000034, "Member 'BP_AJBZipper_Thru_C_GetInteractBoundForCulling::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_GetInteractBoundForCulling, CallFunc_GetComponentBounds_SphereRadius) == 0x000040, "Member 'BP_AJBZipper_Thru_C_GetInteractBoundForCulling::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");

// Function BP_AJBZipper_Thru.BP_AJBZipper_Thru_C.IfBlockInteract
// 0x00F0 (0x00F0 - 0x0000)
struct BP_AJBZipper_Thru_C_IfBlockInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHalfHeightOfLargestCharacter_ReturnValue; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IfEnteringOriginToCounterpart_ReturnValue; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	float                                         CallFunc_GetRadiusOfLargestCharacter_ReturnValue;  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0030(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                K2Node_Select_Default;                             // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_CapsuleTraceSingleForObjects_OutHit;      // 0x0060(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleForObjects_ReturnValue; // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Thru_C_IfBlockInteract) == 0x000008, "Wrong alignment on BP_AJBZipper_Thru_C_IfBlockInteract");
static_assert(sizeof(BP_AJBZipper_Thru_C_IfBlockInteract) == 0x0000F0, "Wrong size on BP_AJBZipper_Thru_C_IfBlockInteract");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfBlockInteract, InteractingActor) == 0x000000, "Member 'BP_AJBZipper_Thru_C_IfBlockInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfBlockInteract, ReturnValue) == 0x000008, "Member 'BP_AJBZipper_Thru_C_IfBlockInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfBlockInteract, CallFunc_GetHalfHeightOfLargestCharacter_ReturnValue) == 0x00000C, "Member 'BP_AJBZipper_Thru_C_IfBlockInteract::CallFunc_GetHalfHeightOfLargestCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfBlockInteract, CallFunc_IfEnteringOriginToCounterpart_ReturnValue) == 0x000010, "Member 'BP_AJBZipper_Thru_C_IfBlockInteract::CallFunc_IfEnteringOriginToCounterpart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfBlockInteract, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_AJBZipper_Thru_C_IfBlockInteract::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfBlockInteract, CallFunc_GetRadiusOfLargestCharacter_ReturnValue) == 0x000028, "Member 'BP_AJBZipper_Thru_C_IfBlockInteract::CallFunc_GetRadiusOfLargestCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfBlockInteract, Temp_bool_Variable) == 0x00002C, "Member 'BP_AJBZipper_Thru_C_IfBlockInteract::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfBlockInteract, Temp_object_Variable) == 0x000030, "Member 'BP_AJBZipper_Thru_C_IfBlockInteract::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfBlockInteract, K2Node_Select_Default) == 0x000040, "Member 'BP_AJBZipper_Thru_C_IfBlockInteract::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfBlockInteract, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x00004C, "Member 'BP_AJBZipper_Thru_C_IfBlockInteract::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfBlockInteract, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'BP_AJBZipper_Thru_C_IfBlockInteract::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfBlockInteract, CallFunc_CapsuleTraceSingleForObjects_OutHit) == 0x000060, "Member 'BP_AJBZipper_Thru_C_IfBlockInteract::CallFunc_CapsuleTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_IfBlockInteract, CallFunc_CapsuleTraceSingleForObjects_ReturnValue) == 0x0000E8, "Member 'BP_AJBZipper_Thru_C_IfBlockInteract::CallFunc_CapsuleTraceSingleForObjects_ReturnValue' has a wrong offset!");

// Function BP_AJBZipper_Thru.BP_AJBZipper_Thru_C.ShouldPrioritizedThanPrepaidSkillCancel
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBZipper_Thru_C_ShouldPrioritizedThanPrepaidSkillCancel final
{
public:
	bool                                          bShouldPriorirized;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Thru_C_ShouldPrioritizedThanPrepaidSkillCancel) == 0x000001, "Wrong alignment on BP_AJBZipper_Thru_C_ShouldPrioritizedThanPrepaidSkillCancel");
static_assert(sizeof(BP_AJBZipper_Thru_C_ShouldPrioritizedThanPrepaidSkillCancel) == 0x000001, "Wrong size on BP_AJBZipper_Thru_C_ShouldPrioritizedThanPrepaidSkillCancel");
static_assert(offsetof(BP_AJBZipper_Thru_C_ShouldPrioritizedThanPrepaidSkillCancel, bShouldPriorirized) == 0x000000, "Member 'BP_AJBZipper_Thru_C_ShouldPrioritizedThanPrepaidSkillCancel::bShouldPriorirized' has a wrong offset!");

// Function BP_AJBZipper_Thru.BP_AJBZipper_Thru_C.NormalOfEntrance
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBZipper_Thru_C_NormalOfEntrance final
{
public:
	bool                                          bOriginToCounterpart;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0014(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue1;            // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBZipper_Thru_C_NormalOfEntrance) == 0x000004, "Wrong alignment on BP_AJBZipper_Thru_C_NormalOfEntrance");
static_assert(sizeof(BP_AJBZipper_Thru_C_NormalOfEntrance) == 0x000038, "Wrong size on BP_AJBZipper_Thru_C_NormalOfEntrance");
static_assert(offsetof(BP_AJBZipper_Thru_C_NormalOfEntrance, bOriginToCounterpart) == 0x000000, "Member 'BP_AJBZipper_Thru_C_NormalOfEntrance::bOriginToCounterpart' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_NormalOfEntrance, ReturnValue) == 0x000004, "Member 'BP_AJBZipper_Thru_C_NormalOfEntrance::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_NormalOfEntrance, Temp_bool_Variable) == 0x000010, "Member 'BP_AJBZipper_Thru_C_NormalOfEntrance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_NormalOfEntrance, CallFunc_GetForwardVector_ReturnValue) == 0x000014, "Member 'BP_AJBZipper_Thru_C_NormalOfEntrance::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_NormalOfEntrance, CallFunc_GetForwardVector_ReturnValue1) == 0x000020, "Member 'BP_AJBZipper_Thru_C_NormalOfEntrance::CallFunc_GetForwardVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_NormalOfEntrance, K2Node_Select_Default) == 0x00002C, "Member 'BP_AJBZipper_Thru_C_NormalOfEntrance::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBZipper_Thru.BP_AJBZipper_Thru_C.LocationExitTo
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBZipper_Thru_C_LocationExitTo final
{
public:
	bool                                          bOriginToCounterpart;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0014(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBZipper_Thru_C_LocationExitTo) == 0x000004, "Wrong alignment on BP_AJBZipper_Thru_C_LocationExitTo");
static_assert(sizeof(BP_AJBZipper_Thru_C_LocationExitTo) == 0x000020, "Wrong size on BP_AJBZipper_Thru_C_LocationExitTo");
static_assert(offsetof(BP_AJBZipper_Thru_C_LocationExitTo, bOriginToCounterpart) == 0x000000, "Member 'BP_AJBZipper_Thru_C_LocationExitTo::bOriginToCounterpart' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_LocationExitTo, ReturnValue) == 0x000004, "Member 'BP_AJBZipper_Thru_C_LocationExitTo::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_LocationExitTo, Temp_bool_Variable) == 0x000010, "Member 'BP_AJBZipper_Thru_C_LocationExitTo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_LocationExitTo, K2Node_Select_Default) == 0x000014, "Member 'BP_AJBZipper_Thru_C_LocationExitTo::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBZipper_Thru.BP_AJBZipper_Thru_C.LocationExitFrom
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBZipper_Thru_C_LocationExitFrom final
{
public:
	bool                                          bOriginToCounterpart;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0014(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBZipper_Thru_C_LocationExitFrom) == 0x000004, "Wrong alignment on BP_AJBZipper_Thru_C_LocationExitFrom");
static_assert(sizeof(BP_AJBZipper_Thru_C_LocationExitFrom) == 0x000038, "Wrong size on BP_AJBZipper_Thru_C_LocationExitFrom");
static_assert(offsetof(BP_AJBZipper_Thru_C_LocationExitFrom, bOriginToCounterpart) == 0x000000, "Member 'BP_AJBZipper_Thru_C_LocationExitFrom::bOriginToCounterpart' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_LocationExitFrom, ReturnValue) == 0x000004, "Member 'BP_AJBZipper_Thru_C_LocationExitFrom::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_LocationExitFrom, Temp_bool_Variable) == 0x000010, "Member 'BP_AJBZipper_Thru_C_LocationExitFrom::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_LocationExitFrom, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000014, "Member 'BP_AJBZipper_Thru_C_LocationExitFrom::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_LocationExitFrom, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x000020, "Member 'BP_AJBZipper_Thru_C_LocationExitFrom::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_LocationExitFrom, K2Node_Select_Default) == 0x00002C, "Member 'BP_AJBZipper_Thru_C_LocationExitFrom::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBZipper_Thru.BP_AJBZipper_Thru_C.LocationEnterTo
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBZipper_Thru_C_LocationEnterTo final
{
public:
	bool                                          bOriginToCounterpart;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0014(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBZipper_Thru_C_LocationEnterTo) == 0x000004, "Wrong alignment on BP_AJBZipper_Thru_C_LocationEnterTo");
static_assert(sizeof(BP_AJBZipper_Thru_C_LocationEnterTo) == 0x000038, "Wrong size on BP_AJBZipper_Thru_C_LocationEnterTo");
static_assert(offsetof(BP_AJBZipper_Thru_C_LocationEnterTo, bOriginToCounterpart) == 0x000000, "Member 'BP_AJBZipper_Thru_C_LocationEnterTo::bOriginToCounterpart' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_LocationEnterTo, ReturnValue) == 0x000004, "Member 'BP_AJBZipper_Thru_C_LocationEnterTo::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_LocationEnterTo, Temp_bool_Variable) == 0x000010, "Member 'BP_AJBZipper_Thru_C_LocationEnterTo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_LocationEnterTo, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000014, "Member 'BP_AJBZipper_Thru_C_LocationEnterTo::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_LocationEnterTo, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x000020, "Member 'BP_AJBZipper_Thru_C_LocationEnterTo::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_LocationEnterTo, K2Node_Select_Default) == 0x00002C, "Member 'BP_AJBZipper_Thru_C_LocationEnterTo::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBZipper_Thru.BP_AJBZipper_Thru_C.LocationEnterFrom
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBZipper_Thru_C_LocationEnterFrom final
{
public:
	class ABP_AJBInGameCharacter_C*               Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOriginToCounterpart;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x000C(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBZipper_Thru_C_LocationEnterFrom) == 0x000008, "Wrong alignment on BP_AJBZipper_Thru_C_LocationEnterFrom");
static_assert(sizeof(BP_AJBZipper_Thru_C_LocationEnterFrom) == 0x000028, "Wrong size on BP_AJBZipper_Thru_C_LocationEnterFrom");
static_assert(offsetof(BP_AJBZipper_Thru_C_LocationEnterFrom, Character) == 0x000000, "Member 'BP_AJBZipper_Thru_C_LocationEnterFrom::Character' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_LocationEnterFrom, bOriginToCounterpart) == 0x000008, "Member 'BP_AJBZipper_Thru_C_LocationEnterFrom::bOriginToCounterpart' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_LocationEnterFrom, ReturnValue) == 0x00000C, "Member 'BP_AJBZipper_Thru_C_LocationEnterFrom::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Thru_C_LocationEnterFrom, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_AJBZipper_Thru_C_LocationEnterFrom::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

}


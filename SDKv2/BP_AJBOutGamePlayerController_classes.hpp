#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBOutGamePlayerController

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBOutGamePlayerController.BP_AJBOutGamePlayerController_C
// 0x0070 (0x0768 - 0x06F8)
class ABP_AJBOutGamePlayerController_C : public AAJBOutGamePlayerController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06F8(0x0008)(Transient, DuplicateTransient)
	class UBP_GameFlowStateManager_C*             BP_GameFlowStateManager;                           // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBOutGameProxy_C*                  OutGameProxy;                                      // 0x0708(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         StartPointSelectEndSequencer;                      // 0x0710(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnFinishedIntroDispatcher;                         // 0x0718(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bFinishedStartpointSelectSequencer_Server;         // 0x0728(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_729[0x7];                                      // 0x0729(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBWwiseManager_C*                  OutGameWwiseManager;                               // 0x0730(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBOutGameEffectPoolManager_C*      Rep_EffectPoolManager;                             // 0x0738(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_StartPointChip_C*>           IsNotLandedChips;                                  // 0x0740(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	class ABP_StartPointManager_C*                CachedStartPointManager;                           // 0x0750(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CachedDBISequencePlayer;                           // 0x0758(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_DBISequencerSkipper_C*              WB_DBISequncerSkipper;                             // 0x0760(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnFinishedIntroDispatcher__DelegateSignature();
	void ExecuteUbergraph_BP_AJBOutGamePlayerController(int32 EntryPoint);
	void OnFinishedSkipSequencerWithWaitForOuter1();
	void OnFinishedWaitPlayingDBIVoiceForOuter1();
	void OnOpend_Window(class UAJBWindowWidget* TargetWidget);
	void ROS_Debug_ChangeDamageAreaTypeID(int32 AreaTypeID);
	void SkipSequencer();
	void ROS_Debug_FixNPCCharacter(int32 DebugMenuIndex);
	void ROS_OnFinishedStartPointSelectSequencer();
	void OnFinishedSequencer();
	void OnStartIntroSequnecer();
	void OnFinishedStartPointSelectEndSequencer();
	void OnStartPointSelectSequnecer();
	void ROS_Debug_FinishMatching();
	void ReceiveBeginPlay();
	void OnLoaded_AD5A05E647A0BE7142EB59B8E5E293EE(class UObject* Loaded);
	void InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void UserConstructionScript();
	void IsReadyGamePlaying_Server(bool* bReady);
	void CheckAllChipsLandedGround(const TArray<class ABP_StartPointChip_C*>& CheckTargetChips, TArray<class ABP_StartPointChip_C*>* IsNotLandedChips_0);
	void CheckShopPlayModeFlowState();
	void GetAJBOutGameProxy(class ABP_AJBOutGameProxy_C** Object);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBOutGamePlayerController_C">();
	}
	static class ABP_AJBOutGamePlayerController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBOutGamePlayerController_C>();
	}
};
static_assert(alignof(ABP_AJBOutGamePlayerController_C) == 0x000008, "Wrong alignment on ABP_AJBOutGamePlayerController_C");
static_assert(sizeof(ABP_AJBOutGamePlayerController_C) == 0x000768, "Wrong size on ABP_AJBOutGamePlayerController_C");
static_assert(offsetof(ABP_AJBOutGamePlayerController_C, UberGraphFrame) == 0x0006F8, "Member 'ABP_AJBOutGamePlayerController_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AJBOutGamePlayerController_C, BP_GameFlowStateManager) == 0x000700, "Member 'ABP_AJBOutGamePlayerController_C::BP_GameFlowStateManager' has a wrong offset!");
static_assert(offsetof(ABP_AJBOutGamePlayerController_C, OutGameProxy) == 0x000708, "Member 'ABP_AJBOutGamePlayerController_C::OutGameProxy' has a wrong offset!");
static_assert(offsetof(ABP_AJBOutGamePlayerController_C, StartPointSelectEndSequencer) == 0x000710, "Member 'ABP_AJBOutGamePlayerController_C::StartPointSelectEndSequencer' has a wrong offset!");
static_assert(offsetof(ABP_AJBOutGamePlayerController_C, OnFinishedIntroDispatcher) == 0x000718, "Member 'ABP_AJBOutGamePlayerController_C::OnFinishedIntroDispatcher' has a wrong offset!");
static_assert(offsetof(ABP_AJBOutGamePlayerController_C, bFinishedStartpointSelectSequencer_Server) == 0x000728, "Member 'ABP_AJBOutGamePlayerController_C::bFinishedStartpointSelectSequencer_Server' has a wrong offset!");
static_assert(offsetof(ABP_AJBOutGamePlayerController_C, OutGameWwiseManager) == 0x000730, "Member 'ABP_AJBOutGamePlayerController_C::OutGameWwiseManager' has a wrong offset!");
static_assert(offsetof(ABP_AJBOutGamePlayerController_C, Rep_EffectPoolManager) == 0x000738, "Member 'ABP_AJBOutGamePlayerController_C::Rep_EffectPoolManager' has a wrong offset!");
static_assert(offsetof(ABP_AJBOutGamePlayerController_C, IsNotLandedChips) == 0x000740, "Member 'ABP_AJBOutGamePlayerController_C::IsNotLandedChips' has a wrong offset!");
static_assert(offsetof(ABP_AJBOutGamePlayerController_C, CachedStartPointManager) == 0x000750, "Member 'ABP_AJBOutGamePlayerController_C::CachedStartPointManager' has a wrong offset!");
static_assert(offsetof(ABP_AJBOutGamePlayerController_C, CachedDBISequencePlayer) == 0x000758, "Member 'ABP_AJBOutGamePlayerController_C::CachedDBISequencePlayer' has a wrong offset!");
static_assert(offsetof(ABP_AJBOutGamePlayerController_C, WB_DBISequncerSkipper) == 0x000760, "Member 'ABP_AJBOutGamePlayerController_C::WB_DBISequncerSkipper' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_AJBFindNearestWindow

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTT_AJBFindNearestWindow.BTT_AJBFindNearestWindow_C.ExecuteUbergraph_BTT_AJBFindNearestWindow
// 0x00E8 (0x00E8 - 0x0000)
struct BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_AI_GetLogColor_ReturnValue;               // 0x0004(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_AI_GetLogColor_ReturnValue1;              // 0x0014(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_AI_GetLogColor_ReturnValue2;              // 0x0024(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IfDebugDrawOnTask_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBInGameAIRecognition_C*           CallFunc_GetRecognition_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIRecognition_C*           CallFunc_GetRecognition_ReturnValue1;              // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameAIImaginaryCharacter_C*    CallFunc_GetControllingImaginaryCharacter_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IfDebugDrawOnTask_ReturnValue1;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocation_ReturnValue;                  // 0x006C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIRecognition_C*           CallFunc_GetRecognition_ReturnValue2;              // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FindNearestWindow_ReturnValue;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNavigationPath*                        CallFunc_FindNearestWindow_PathToNearestActor1;    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x009C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x00A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetGateInteractLocations_Location1;       // 0x00B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetGateInteractLocations_Location2;       // 0x00C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGateInteractLocations_bIsLocation1InHouse; // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGateInteractLocations_bIsLocation2InHouse; // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CF[0x1];                                       // 0x00CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x00D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetInteractDirectionForGate_ReturnValue;  // 0x00DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow) == 0x000008, "Wrong alignment on BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow");
static_assert(sizeof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow) == 0x0000E8, "Wrong size on BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, EntryPoint) == 0x000000, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, CallFunc_AI_GetLogColor_ReturnValue) == 0x000004, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::CallFunc_AI_GetLogColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, CallFunc_AI_GetLogColor_ReturnValue1) == 0x000014, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::CallFunc_AI_GetLogColor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, CallFunc_AI_GetLogColor_ReturnValue2) == 0x000024, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::CallFunc_AI_GetLogColor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, K2Node_Event_OwnerController) == 0x000038, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, K2Node_Event_ControlledPawn) == 0x000040, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, CallFunc_IfDebugDrawOnTask_ReturnValue) == 0x000048, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::CallFunc_IfDebugDrawOnTask_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, CallFunc_GetRecognition_ReturnValue) == 0x000050, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::CallFunc_GetRecognition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, CallFunc_GetRecognition_ReturnValue1) == 0x000058, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::CallFunc_GetRecognition_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, CallFunc_GetControllingImaginaryCharacter_ReturnValue) == 0x000060, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::CallFunc_GetControllingImaginaryCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, CallFunc_IfDebugDrawOnTask_ReturnValue1) == 0x000068, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::CallFunc_IfDebugDrawOnTask_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, CallFunc_GetLocation_ReturnValue) == 0x00006C, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::CallFunc_GetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, CallFunc_GetRecognition_ReturnValue2) == 0x000078, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::CallFunc_GetRecognition_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, Temp_bool_Variable) == 0x000080, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, CallFunc_FindNearestWindow_ReturnValue) == 0x000088, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::CallFunc_FindNearestWindow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, CallFunc_FindNearestWindow_PathToNearestActor1) == 0x000090, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::CallFunc_FindNearestWindow_PathToNearestActor1' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, CallFunc_GetActorBounds_Origin) == 0x00009C, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, CallFunc_GetActorBounds_BoxExtent) == 0x0000A8, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, CallFunc_GetGateInteractLocations_Location1) == 0x0000B4, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::CallFunc_GetGateInteractLocations_Location1' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, CallFunc_GetGateInteractLocations_Location2) == 0x0000C0, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::CallFunc_GetGateInteractLocations_Location2' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, CallFunc_GetGateInteractLocations_bIsLocation1InHouse) == 0x0000CC, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::CallFunc_GetGateInteractLocations_bIsLocation1InHouse' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, CallFunc_GetGateInteractLocations_bIsLocation2InHouse) == 0x0000CD, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::CallFunc_GetGateInteractLocations_bIsLocation2InHouse' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, CallFunc_BooleanAND_ReturnValue) == 0x0000CE, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, K2Node_Select_Default) == 0x0000D0, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow, CallFunc_GetInteractDirectionForGate_ReturnValue) == 0x0000DC, "Member 'BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow::CallFunc_GetInteractDirectionForGate_ReturnValue' has a wrong offset!");

// Function BTT_AJBFindNearestWindow.BTT_AJBFindNearestWindow_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_AJBFindNearestWindow_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_AJBFindNearestWindow_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_AJBFindNearestWindow_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_AJBFindNearestWindow_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_AJBFindNearestWindow_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_AJBFindNearestWindow_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_AJBFindNearestWindow_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function BTT_AJBFindNearestWindow.BTT_AJBFindNearestWindow_C.FindNearestWindow
// 0x0138 (0x0138 - 0x0000)
struct BTT_AJBFindNearestWindow_C_FindNearestWindow final
{
public:
	class UBP_AJBInGameAIRecognition_C*           Recognition;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBlackboardKeySelector                 WindowObjectToIgnore;                              // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AActor*                                 ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNavigationPath*                        PathToNearestActor1;                               // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         TargetWindows;                                     // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	bool                                          bIgnoreZDiff;                                      // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNavigationPath*                        PathToNearestActor;                                // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceSqTemp;                                    // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NearestDistanceSq;                                 // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 NearestActor;                                      // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBAIEnvironmentBlock*                 CallFunc_GetEnvironmentBlockSelf_ReturnValue;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBAIHouseInfo_C*                   CallFunc_FindIndoorHouseInfo_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocation_ReturnValue;                  // 0x008C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameAIImaginaryCharacter_C*    CallFunc_GetControllingImaginaryCharacter_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIndoor_ReturnValue;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ApproachableDiffZToInteractableActor_ReturnValue; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetBlackboardValueAsObject_ReturnValue;   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetRawPawn_ReturnValue;                   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_ReturnValue1;                 // 0x00C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UNavigationPath*                        CallFunc_FindPathToLocationSynchronously_ReturnValue; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPathValidAndReachable_ReturnValue;      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0104(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0110(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue1;             // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTT_AJBFindNearestWindow_C_FindNearestWindow) == 0x000008, "Wrong alignment on BTT_AJBFindNearestWindow_C_FindNearestWindow");
static_assert(sizeof(BTT_AJBFindNearestWindow_C_FindNearestWindow) == 0x000138, "Wrong size on BTT_AJBFindNearestWindow_C_FindNearestWindow");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, Recognition) == 0x000000, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::Recognition' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, WindowObjectToIgnore) == 0x000008, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::WindowObjectToIgnore' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, ReturnValue) == 0x000030, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, PathToNearestActor1) == 0x000038, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::PathToNearestActor1' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, TargetWindows) == 0x000040, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::TargetWindows' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, bIgnoreZDiff) == 0x000050, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::bIgnoreZDiff' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, PathToNearestActor) == 0x000058, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::PathToNearestActor' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, DistanceSqTemp) == 0x000060, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::DistanceSqTemp' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, NearestDistanceSq) == 0x000064, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::NearestDistanceSq' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, NearestActor) == 0x000068, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::NearestActor' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_GetEnvironmentBlockSelf_ReturnValue) == 0x000070, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_GetEnvironmentBlockSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000078, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_FindIndoorHouseInfo_ReturnValue) == 0x000080, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_FindIndoorHouseInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_GetLocation_ReturnValue) == 0x00008C, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_GetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_GetControllingImaginaryCharacter_ReturnValue) == 0x000098, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_GetControllingImaginaryCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_IsIndoor_ReturnValue) == 0x0000A0, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_IsIndoor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_ApproachableDiffZToInteractableActor_ReturnValue) == 0x0000A4, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_ApproachableDiffZToInteractableActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_GetBlackboardValueAsObject_ReturnValue) == 0x0000A8, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_GetBlackboardValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_GetRawPawn_ReturnValue) == 0x0000B8, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_GetRawPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_GetLocation_ReturnValue1) == 0x0000C0, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_GetLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, Temp_int_Loop_Counter_Variable) == 0x0000CC, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_Less_IntInt_ReturnValue) == 0x0000D0, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, Temp_int_Array_Index_Variable) == 0x0000D8, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000E8, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000F4, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_FindPathToLocationSynchronously_ReturnValue) == 0x0000F8, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_FindPathToLocationSynchronously_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_IsPathValidAndReachable_ReturnValue) == 0x000100, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_IsPathValidAndReachable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000104, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000110, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_BreakVector_X) == 0x00011C, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_BreakVector_Y) == 0x000120, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_BreakVector_Z) == 0x000124, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_VSizeSquared_ReturnValue) == 0x000128, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_Abs_ReturnValue) == 0x00012C, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_Less_FloatFloat_ReturnValue) == 0x000130, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_BooleanOR_ReturnValue) == 0x000131, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBFindNearestWindow_C_FindNearestWindow, CallFunc_Less_FloatFloat_ReturnValue1) == 0x000132, "Member 'BTT_AJBFindNearestWindow_C_FindNearestWindow::CallFunc_Less_FloatFloat_ReturnValue1' has a wrong offset!");

}


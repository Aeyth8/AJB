#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameAIEnvironment

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ST_GionInfo_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AJB_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBInGameAIEnvironment.BP_AJBInGameAIEnvironment_C
// 0x02E8 (0x0410 - 0x0128)
class UBP_AJBInGameAIEnvironment_C final : public UAJBInGameAIEnvironmentComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0128(0x0008)(Transient, DuplicateTransient)
	TArray<class ABP_AJBAIGionSource_C*>          AIGionSources;                                     // 0x0130(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	class UBP_AJBDamageAreaLocal_C*               DamageAreaLocalRef;                                // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSetupFinished;                                    // 0x0148(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBAIWaySpotFinder_C*>       WaySpotFinders;                                    // 0x0150(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	class ANavMeshBoundsVolume*                   NavMesh;                                           // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_AJBAIGionSource_C*>          AIAttackingGionSources;                            // 0x0168(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_AJBAIGionSource_C*>          AIMovingGionSources;                               // 0x0178(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TMap<class APawn*, class ABP_AJBInGameAIImaginaryCharacter_C*> ImaginaryCharacters;                               // 0x0188(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TMap<class APawn*, class ABP_AJBInGameAIImaginaryCharacter_C*> ImaginaryStands;                                   // 0x01D8(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	class ABP_AJBAIObjectPoolGionSource_C*        ObjectPoolAIGionSource;                            // 0x0228(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBAIObjectPoolObservedCharacter_C* ObjectPoolAIObservedCharacter;                     // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_AJBInGameItem_SP_C*>         ItemSPs;                                           // 0x0238(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	class UWB_AJBDebugAIMonitor_C*                DebugAIMonitor;                                    // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  DebugMonitoringEvents;                             // 0x0250(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bActivateDebugDrawOnTask;                          // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class APawn*, class ABP_AJBInGameAIImaginaryCharacter_C*> ImaginaryPlayerCharacters;                         // 0x0278(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	UMulticastDelegateProperty_                   OnTrapAdded;                                       // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnTrapRemoving;                                    // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bDamageAreaAvailableCache;                         // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             GionDataTableSource;                               // 0x02F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, struct FST_GionInfo> GionDataDictionary;                                // 0x02F8(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class AEventTagLockHolder*                    EventTagLockHolder;                                // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DebugDamageAreaLocationCache;                      // 0x0350(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebugDamageAreaRadiusCache;                        // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         DebugHouses;                                       // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	class ABP_AJBInGameStartPoint_C*              MasterStartPoint;                                  // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnBurningActorAdded;                               // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnBurningActorRemoving;                            // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class AActor*>                         BurningActors;                                     // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TMap<class AActor*, class ABP_AJBAIHouseInfo_C*> BurningActorAndHouseInfos;                         // 0x03A8(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          bHasDoorsNotInHouse;                               // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AEventTagLocker*>                DebugFlagLockers;                                  // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void OnTrapAdded__DelegateSignature(class AActor* Trap);
	void OnTrapRemoving__DelegateSignature(class AActor* Trap);
	void OnBurningActorAdded__DelegateSignature(class AActor* BurningActor);
	void OnBurningActorRemoving__DelegateSignature(class AActor* BurningActor);
	void ExecuteUbergraph_BP_AJBInGameAIEnvironment(int32 EntryPoint);
	void FinishSetup();
	void SetupEnvironment_OnNavMeshBoundsVolumeNotExists();
	void PoolImaginaryCharacters(class ABP_AJBInGameCharacter_C* InGameCharacter);
	void OnHouseInfoSetupFinished(class ABP_AJBAIHouseInfo_C* HouseInfo);
	void UpdateEnvironmentBlocks();
	void UpdateEnvironmentBlock(class UAJBAIEnvironmentBlock* EnvironmentBlock);
	void SetupEnvironment(float BlockUnitSize_0);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void DebugLockAIDebugTags();
	void DebugDumpGates();
	void DebugDrawHouse();
	void DebugDumpHouse();
	void RequestDebugDumpHouseLocation();
	void SetupDebugAIMonitor(const struct FGameplayTagContainer& MonitoringEvents);
	void DebugDrawBlockAreas();
	void ConstructGionDataDictionary();
	void OnGionSourceDestroyed(class ABP_AJBAIGionSource_C* GionSource, const struct FGameplayTag& AIEventTag);
	void OnGionSourceSpawned(class ABP_AJBAIGionSource_C* GionSource);
	void OnAttackingGionSourceLifeTimeElapsed(class ABP_AJBAIGionSource_C* AI_GionSource);
	void OnMovingGionSourceLifeTimeElapsed(class ABP_AJBAIGionSource_C* AI_GionSource);
	void RequestAIGion(const struct FGameplayTag& GionEffectType, class AActor* GionOwner, const struct FVector& Location);
	void OnDestroyedItemSP(class AActor* DestroyedActor);
	void RequestAddSpawnedItem(class AActor* Item);
	void OnDestroyedBurningActor(class AActor* DestroyedActor);
	void RequestAddBurningActor(class AActor* Actor);
	void OnDestroyedTrap(class AActor* DestroyedActor);
	void RequestAddTrap(class AActor* Trap);
	void GetGionsInRange(const struct FVector& Location, TArray<class ABP_AJBAIGionSource_C*>* ResultArray);
	class UAJBAIEnvironmentBlock* GetEnvironmentBlock(const struct FVector& Location);
	void GetSaferArea(struct FVector* Location, float* Radius);
	void GetGionsActorCanHear(class AActor* Actor, TArray<class ABP_AJBAIGionSource_C*>* ResultArray);
	class ABP_AJBInGameStartPoint_C* GetNearestStartPoint(const struct FVector& Location, TArray<class ABP_AJBInGameStartPoint_C*>& StartPoints);
	void GetRealCurrentSafeArea(struct FVector* Location, float* Radius);
	class UAJBAIEnvironmentBlock* GetEnvironmentBlockByIndex(int32 BlockIndex);
	void GetAttackingGionsActorCanHear(class AActor* Actor, TArray<class ABP_AJBAIGionSource_C*>* ResultArray);
	void GetMovingGionsActorCanHear(class AActor* Actor, TArray<class ABP_AJBAIGionSource_C*>* ResultArray);
	class ABP_AJBInGameAIImaginaryCharacter_C* GetImaginaryCharacter(class APawn* CharacterPawn, bool* Found);
	class ABP_AJBInGameAIImaginaryCharacter_C* GetImaginaryStand(class APawn* CharacterPawn, bool* Found);
	void GetAllImaginaryStands(TMap<class AActor*, class ABP_AJBInGameAIImaginaryCharacter_C*>* ImaginaryStands_0);
	TArray<class ABP_AJBInGameAIImaginaryCharacter_C*> GetImaginaryStandsInRange(class ABP_AJBInGameAIImaginaryCharacter_C* ImaginaryCharacterObserver, float MaxDistance);
	void SetupRelationships();
	TArray<class ABP_AJBInGameItem_SP_C*> GetItemSPs();
	class UWB_AJBDebugAIMonitor_C* GetDebugAIMonitor();
	struct FGameplayTagContainer GetDebugMonitoringEvents();
	int32 GetLivingPlayerCount();
	TMap<class AActor*, class ABP_AJBInGameAIImaginaryCharacter_C*> GetAllImaginaryPlayerCharacters();
	bool IsEnvironmentBlockOutOfSafeArea(class UAJBAIEnvironmentBlock* EnvironmentBlock);
	bool IsDamageAreaAvailable();
	TMap<class APawn*, class ABP_AJBInGameAIImaginaryCharacter_C*> GetAllImaginaryCharacters();
	class AEventTagLocker* SpawnEventTagLocker();
	bool IsEventTagLocked(const struct FGameplayTag& EventTag, bool bExactMatch);
	struct FGameplayTagContainer GetLockedEventTags();
	int32 DebugGetEnvBlockHouseInfoCount();
	TArray<class AActor*> GetBurningActors();
	bool HasDoorsNotInHouse();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBInGameAIEnvironment_C">();
	}
	static class UBP_AJBInGameAIEnvironment_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBInGameAIEnvironment_C>();
	}
};
static_assert(alignof(UBP_AJBInGameAIEnvironment_C) == 0x000008, "Wrong alignment on UBP_AJBInGameAIEnvironment_C");
static_assert(sizeof(UBP_AJBInGameAIEnvironment_C) == 0x000410, "Wrong size on UBP_AJBInGameAIEnvironment_C");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, UberGraphFrame) == 0x000128, "Member 'UBP_AJBInGameAIEnvironment_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, AIGionSources) == 0x000130, "Member 'UBP_AJBInGameAIEnvironment_C::AIGionSources' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, DamageAreaLocalRef) == 0x000140, "Member 'UBP_AJBInGameAIEnvironment_C::DamageAreaLocalRef' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, bSetupFinished) == 0x000148, "Member 'UBP_AJBInGameAIEnvironment_C::bSetupFinished' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, WaySpotFinders) == 0x000150, "Member 'UBP_AJBInGameAIEnvironment_C::WaySpotFinders' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, NavMesh) == 0x000160, "Member 'UBP_AJBInGameAIEnvironment_C::NavMesh' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, AIAttackingGionSources) == 0x000168, "Member 'UBP_AJBInGameAIEnvironment_C::AIAttackingGionSources' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, AIMovingGionSources) == 0x000178, "Member 'UBP_AJBInGameAIEnvironment_C::AIMovingGionSources' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, ImaginaryCharacters) == 0x000188, "Member 'UBP_AJBInGameAIEnvironment_C::ImaginaryCharacters' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, ImaginaryStands) == 0x0001D8, "Member 'UBP_AJBInGameAIEnvironment_C::ImaginaryStands' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, ObjectPoolAIGionSource) == 0x000228, "Member 'UBP_AJBInGameAIEnvironment_C::ObjectPoolAIGionSource' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, ObjectPoolAIObservedCharacter) == 0x000230, "Member 'UBP_AJBInGameAIEnvironment_C::ObjectPoolAIObservedCharacter' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, ItemSPs) == 0x000238, "Member 'UBP_AJBInGameAIEnvironment_C::ItemSPs' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, DebugAIMonitor) == 0x000248, "Member 'UBP_AJBInGameAIEnvironment_C::DebugAIMonitor' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, DebugMonitoringEvents) == 0x000250, "Member 'UBP_AJBInGameAIEnvironment_C::DebugMonitoringEvents' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, bActivateDebugDrawOnTask) == 0x000270, "Member 'UBP_AJBInGameAIEnvironment_C::bActivateDebugDrawOnTask' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, ImaginaryPlayerCharacters) == 0x000278, "Member 'UBP_AJBInGameAIEnvironment_C::ImaginaryPlayerCharacters' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, OnTrapAdded) == 0x0002C8, "Member 'UBP_AJBInGameAIEnvironment_C::OnTrapAdded' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, OnTrapRemoving) == 0x0002D8, "Member 'UBP_AJBInGameAIEnvironment_C::OnTrapRemoving' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, bDamageAreaAvailableCache) == 0x0002E8, "Member 'UBP_AJBInGameAIEnvironment_C::bDamageAreaAvailableCache' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, GionDataTableSource) == 0x0002F0, "Member 'UBP_AJBInGameAIEnvironment_C::GionDataTableSource' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, GionDataDictionary) == 0x0002F8, "Member 'UBP_AJBInGameAIEnvironment_C::GionDataDictionary' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, EventTagLockHolder) == 0x000348, "Member 'UBP_AJBInGameAIEnvironment_C::EventTagLockHolder' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, DebugDamageAreaLocationCache) == 0x000350, "Member 'UBP_AJBInGameAIEnvironment_C::DebugDamageAreaLocationCache' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, DebugDamageAreaRadiusCache) == 0x00035C, "Member 'UBP_AJBInGameAIEnvironment_C::DebugDamageAreaRadiusCache' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, DebugHouses) == 0x000360, "Member 'UBP_AJBInGameAIEnvironment_C::DebugHouses' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, MasterStartPoint) == 0x000370, "Member 'UBP_AJBInGameAIEnvironment_C::MasterStartPoint' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, OnBurningActorAdded) == 0x000378, "Member 'UBP_AJBInGameAIEnvironment_C::OnBurningActorAdded' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, OnBurningActorRemoving) == 0x000388, "Member 'UBP_AJBInGameAIEnvironment_C::OnBurningActorRemoving' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, BurningActors) == 0x000398, "Member 'UBP_AJBInGameAIEnvironment_C::BurningActors' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, BurningActorAndHouseInfos) == 0x0003A8, "Member 'UBP_AJBInGameAIEnvironment_C::BurningActorAndHouseInfos' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, bHasDoorsNotInHouse) == 0x0003F8, "Member 'UBP_AJBInGameAIEnvironment_C::bHasDoorsNotInHouse' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIEnvironment_C, DebugFlagLockers) == 0x000400, "Member 'UBP_AJBInGameAIEnvironment_C::DebugFlagLockers' has a wrong offset!");

}


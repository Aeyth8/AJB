#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_AJBDebugAIMonitor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_AJBDebugAIMonitor.WB_AJBDebugAIMonitor_C
// 0x0068 (0x0270 - 0x0208)
class UWB_AJBDebugAIMonitor_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0208(0x0008)(Transient, DuplicateTransient)
	class UEditableTextBox*                       HasAnotherRequestTextBox;                          // 0x0210(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       LIVETextBox;                                       // 0x0218(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NPCCameraImage;                                    // 0x0220(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       NPCCaptionTextBox;                                 // 0x0228(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       NPCStatusTextBox;                                  // 0x0230(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ASceneCapture2D*                        CaptureCamera;                                     // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  FollowingPawn;                                     // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFollowing;                                        // 0x0248(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bActive;                                           // 0x0249(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bWaitingMinimumFollowingTime;                      // 0x024A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24B[0x5];                                      // 0x024B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APawn*>                          WaitingPawnsToFollow;                              // 0x0250(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         MinimumFollowingTime;                              // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KeepFollowingTimeAfterCancelled;                   // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SlomoValueAtFollowing;                             // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_AJBDebugAIMonitor(int32 EntryPoint);
	void CloseGateOfCancelMonitoring();
	void OpenGateOfCancelMonitoring();
	void CancelMonitorCurrentPawn();
	void Monitor(class APawn* TargetPawn);
	void Deactivate();
	void Activate();
	void CancelMonitoring(class APawn* TargetPawn);
	void RequestMonitoring(class APawn* TargetPawn);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void UpdateVisibility();
	bool IsMonitoring();
	class APawn* GetMonitoringPawn();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_AJBDebugAIMonitor_C">();
	}
	static class UWB_AJBDebugAIMonitor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_AJBDebugAIMonitor_C>();
	}
};
static_assert(alignof(UWB_AJBDebugAIMonitor_C) == 0x000008, "Wrong alignment on UWB_AJBDebugAIMonitor_C");
static_assert(sizeof(UWB_AJBDebugAIMonitor_C) == 0x000270, "Wrong size on UWB_AJBDebugAIMonitor_C");
static_assert(offsetof(UWB_AJBDebugAIMonitor_C, UberGraphFrame) == 0x000208, "Member 'UWB_AJBDebugAIMonitor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_AJBDebugAIMonitor_C, HasAnotherRequestTextBox) == 0x000210, "Member 'UWB_AJBDebugAIMonitor_C::HasAnotherRequestTextBox' has a wrong offset!");
static_assert(offsetof(UWB_AJBDebugAIMonitor_C, LIVETextBox) == 0x000218, "Member 'UWB_AJBDebugAIMonitor_C::LIVETextBox' has a wrong offset!");
static_assert(offsetof(UWB_AJBDebugAIMonitor_C, NPCCameraImage) == 0x000220, "Member 'UWB_AJBDebugAIMonitor_C::NPCCameraImage' has a wrong offset!");
static_assert(offsetof(UWB_AJBDebugAIMonitor_C, NPCCaptionTextBox) == 0x000228, "Member 'UWB_AJBDebugAIMonitor_C::NPCCaptionTextBox' has a wrong offset!");
static_assert(offsetof(UWB_AJBDebugAIMonitor_C, NPCStatusTextBox) == 0x000230, "Member 'UWB_AJBDebugAIMonitor_C::NPCStatusTextBox' has a wrong offset!");
static_assert(offsetof(UWB_AJBDebugAIMonitor_C, CaptureCamera) == 0x000238, "Member 'UWB_AJBDebugAIMonitor_C::CaptureCamera' has a wrong offset!");
static_assert(offsetof(UWB_AJBDebugAIMonitor_C, FollowingPawn) == 0x000240, "Member 'UWB_AJBDebugAIMonitor_C::FollowingPawn' has a wrong offset!");
static_assert(offsetof(UWB_AJBDebugAIMonitor_C, bFollowing) == 0x000248, "Member 'UWB_AJBDebugAIMonitor_C::bFollowing' has a wrong offset!");
static_assert(offsetof(UWB_AJBDebugAIMonitor_C, bActive) == 0x000249, "Member 'UWB_AJBDebugAIMonitor_C::bActive' has a wrong offset!");
static_assert(offsetof(UWB_AJBDebugAIMonitor_C, bWaitingMinimumFollowingTime) == 0x00024A, "Member 'UWB_AJBDebugAIMonitor_C::bWaitingMinimumFollowingTime' has a wrong offset!");
static_assert(offsetof(UWB_AJBDebugAIMonitor_C, WaitingPawnsToFollow) == 0x000250, "Member 'UWB_AJBDebugAIMonitor_C::WaitingPawnsToFollow' has a wrong offset!");
static_assert(offsetof(UWB_AJBDebugAIMonitor_C, MinimumFollowingTime) == 0x000260, "Member 'UWB_AJBDebugAIMonitor_C::MinimumFollowingTime' has a wrong offset!");
static_assert(offsetof(UWB_AJBDebugAIMonitor_C, KeepFollowingTimeAfterCancelled) == 0x000264, "Member 'UWB_AJBDebugAIMonitor_C::KeepFollowingTimeAfterCancelled' has a wrong offset!");
static_assert(offsetof(UWB_AJBDebugAIMonitor_C, SlomoValueAtFollowing) == 0x000268, "Member 'UWB_AJBDebugAIMonitor_C::SlomoValueAtFollowing' has a wrong offset!");

}


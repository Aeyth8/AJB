#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBStringJailSkill

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AJB_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.ExecuteUbergraph_BP_AJBStringJailSkill
// 0x01F8 (0x01F8 - 0x0000)
struct BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeakVoice_bWillBeSpoken;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bCancel;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bRestore;                             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue1;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable1;                             // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface1; // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue2;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable2;                             // 0x00F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestGion_AkComponent__LocalOnly_;      // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_; // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSkillState_bMatch;                   // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select1_Default;                            // 0x0108(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToSpeakVoice_bWillBeSpoken1;           // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCloseRangeLaunchedActor_LaunchedActor; // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_HitActor;                             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0128(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0134(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CuttingRate;                          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_Event_SurfaceType;                          // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDisableDamage;                       // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInvincible;                          // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsPenetration;                       // 0x0147(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bBlockedByAAP;                        // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bHeadShot;                            // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A[0x2];                                      // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x014C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue2;               // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAJBSkillType                                 K2Node_CustomEvent_SkillType;                      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_HittedCharacterCount;           // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_BlockedCharacterCount;          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InvalidatedCharacterCount;      // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand2;         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x6];                                      // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_STF_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_STF;      // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19B[0x5];                                      // 0x019B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAJBSkillType SkillType, int32 HittedCharacterCount, int32 BlockedCharacterCount, int32 InvalidatedCharacterCount)> K2Node_CreateDelegate_OutputDelegate;              // 0x01A0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLaunchedActorHomeLocation_Location;    // 0x01C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1ED[0x3];                                      // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select2_Default;                            // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill) == 0x000008, "Wrong alignment on BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill");
static_assert(sizeof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill) == 0x0001F8, "Wrong size on BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, EntryPoint) == 0x000000, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, Temp_struct_Variable) == 0x000008, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000010, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_IsDedicatedServer_ReturnValue) == 0x000021, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_GetOwnerCharacter_ReturnValue1) == 0x000028, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_GetOwnerCharacter_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000030, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_TryToSpeakVoice_bWillBeSpoken) == 0x000039, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_TryToSpeakVoice_bWillBeSpoken' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_Event_bCancel) == 0x00003A, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_Event_bCancel' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_Event_bRestore) == 0x00003B, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_Event_bRestore' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_Not_PreBool_ReturnValue) == 0x00003C, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_Not_PreBool_ReturnValue1) == 0x00003D, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_BooleanAND_ReturnValue) == 0x00003E, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, Temp_bool_Variable) == 0x00003F, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_Event_Operator) == 0x000040, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_Event_Time) == 0x000048, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_Event_Timing) == 0x00004C, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_Event_bEnable) == 0x00004D, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_Event_bOperatorIsEmpty) == 0x00004E, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_GetOwnerStand_ReturnValue) == 0x000050, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_GetOwnerStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000058, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_DynamicCast_bSuccess2) == 0x000060, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface) == 0x000068, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_DynamicCast_bSuccess3) == 0x000078, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_Not_PreBool_ReturnValue2) == 0x000079, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00007A, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x00007B, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_BooleanAND_ReturnValue1) == 0x00007C, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_GetOwnerStand_ReturnValue1) == 0x000080, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_GetOwnerStand_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1) == 0x000088, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_DynamicCast_bSuccess4) == 0x000090, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, Temp_struct_Variable1) == 0x000098, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface1) == 0x0000A0, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_DynamicCast_bSuccess5) == 0x0000B0, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_GetOwnerCharacter_ReturnValue2) == 0x0000B8, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_GetOwnerCharacter_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_Select_Default) == 0x0000C0, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x0000C8, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_DynamicCast_bSuccess6) == 0x0000D0, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000D8, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000E0, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, Temp_struct_Variable2) == 0x0000F0, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_RequestGion_AkComponent__LocalOnly_) == 0x0000F8, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_RequestGion_AkComponent__LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_) == 0x000100, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_MakeLiteralByte_ReturnValue) == 0x000101, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, Temp_bool_Variable1) == 0x000102, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_CheckSkillState_bMatch) == 0x000103, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_CheckSkillState_bMatch' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_Select1_Default) == 0x000108, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_TryToSpeakVoice_bWillBeSpoken1) == 0x000110, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_TryToSpeakVoice_bWillBeSpoken1' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_GetCloseRangeLaunchedActor_LaunchedActor) == 0x000118, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_GetCloseRangeLaunchedActor_LaunchedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_Event_HitActor) == 0x000120, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_Event_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_Event_HitLocation) == 0x000128, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_Event_HitNormal) == 0x000134, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_Event_CuttingRate) == 0x000140, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_Event_CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_Event_SurfaceType) == 0x000144, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_Event_SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_Event_bDisableDamage) == 0x000145, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_Event_bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_Event_bInvincible) == 0x000146, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_Event_bInvincible' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_Event_bIsPenetration) == 0x000147, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_Event_bIsPenetration' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_Event_bBlockedByAAP) == 0x000148, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_Event_bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_Event_bHeadShot) == 0x000149, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_Event_bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x00014C, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_GetOwnerStand_ReturnValue2) == 0x000158, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_GetOwnerStand_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_CustomEvent_SkillType) == 0x000160, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_CustomEvent_SkillType' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_CustomEvent_HittedCharacterCount) == 0x000164, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_CustomEvent_HittedCharacterCount' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_CustomEvent_BlockedCharacterCount) == 0x000168, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_CustomEvent_BlockedCharacterCount' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_CustomEvent_InvalidatedCharacterCount) == 0x00016C, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_CustomEvent_InvalidatedCharacterCount' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand2) == 0x000170, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand2' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_DynamicCast_bSuccess7) == 0x000178, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_Greater_IntInt_ReturnValue) == 0x000179, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_STF) == 0x000180, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_STF' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_DynamicCast_bSuccess8) == 0x000188, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_Add_IntInt_ReturnValue) == 0x00018C, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_Add_IntInt_ReturnValue1) == 0x000190, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_Add_IntInt_ReturnValue2) == 0x000194, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_Greater_IntInt_ReturnValue1) == 0x000198, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000199, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_BooleanAND_ReturnValue2) == 0x00019A, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_CreateDelegate_OutputDelegate) == 0x0001A0, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x0001B0, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, Temp_float_Variable) == 0x0001B4, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_GetOwner_ReturnValue) == 0x0001B8, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001C0, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_GetLaunchedActorHomeLocation_Location) == 0x0001C4, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_GetLaunchedActorHomeLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_BooleanAND_ReturnValue3) == 0x0001D0, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001D4, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, Temp_float_Variable1) == 0x0001E0, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_VSize_ReturnValue) == 0x0001E4, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, CallFunc_MapRangeClamped_ReturnValue) == 0x0001E8, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, Temp_bool_Variable2) == 0x0001EC, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill, K2Node_Select2_Default) == 0x0001F0, "Member 'BP_AJBStringJailSkill_C_ExecuteUbergraph_BP_AJBStringJailSkill::K2Node_Select2_Default' has a wrong offset!");

// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.OnMultipleHit
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBStringJailSkill_C_OnMultipleHit final
{
public:
	EAJBSkillType                                 SkillType_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HittedCharacterCount;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BlockedCharacterCount;                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InvalidatedCharacterCount;                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBStringJailSkill_C_OnMultipleHit) == 0x000004, "Wrong alignment on BP_AJBStringJailSkill_C_OnMultipleHit");
static_assert(sizeof(BP_AJBStringJailSkill_C_OnMultipleHit) == 0x000010, "Wrong size on BP_AJBStringJailSkill_C_OnMultipleHit");
static_assert(offsetof(BP_AJBStringJailSkill_C_OnMultipleHit, SkillType_0) == 0x000000, "Member 'BP_AJBStringJailSkill_C_OnMultipleHit::SkillType_0' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_OnMultipleHit, HittedCharacterCount) == 0x000004, "Member 'BP_AJBStringJailSkill_C_OnMultipleHit::HittedCharacterCount' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_OnMultipleHit, BlockedCharacterCount) == 0x000008, "Member 'BP_AJBStringJailSkill_C_OnMultipleHit::BlockedCharacterCount' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_OnMultipleHit, InvalidatedCharacterCount) == 0x00000C, "Member 'BP_AJBStringJailSkill_C_OnMultipleHit::InvalidatedCharacterCount' has a wrong offset!");

// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.PlayNetScaleAnimation
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBStringJailSkill_C_PlayNetScaleAnimation final
{
public:
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_STF_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_STF;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlaySlotAnimation_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBStringJailSkill_C_PlayNetScaleAnimation) == 0x000008, "Wrong alignment on BP_AJBStringJailSkill_C_PlayNetScaleAnimation");
static_assert(sizeof(BP_AJBStringJailSkill_C_PlayNetScaleAnimation) == 0x000038, "Wrong size on BP_AJBStringJailSkill_C_PlayNetScaleAnimation");
static_assert(offsetof(BP_AJBStringJailSkill_C_PlayNetScaleAnimation, CallFunc_GetOwnerStand_ReturnValue) == 0x000000, "Member 'BP_AJBStringJailSkill_C_PlayNetScaleAnimation::CallFunc_GetOwnerStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_PlayNetScaleAnimation, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000008, "Member 'BP_AJBStringJailSkill_C_PlayNetScaleAnimation::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_PlayNetScaleAnimation, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_AJBStringJailSkill_C_PlayNetScaleAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_PlayNetScaleAnimation, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_STF) == 0x000018, "Member 'BP_AJBStringJailSkill_C_PlayNetScaleAnimation::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_STF' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_PlayNetScaleAnimation, K2Node_DynamicCast_bSuccess1) == 0x000020, "Member 'BP_AJBStringJailSkill_C_PlayNetScaleAnimation::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_PlayNetScaleAnimation, CallFunc_GetAnimInstance_ReturnValue) == 0x000028, "Member 'BP_AJBStringJailSkill_C_PlayNetScaleAnimation::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_PlayNetScaleAnimation, CallFunc_PlaySlotAnimation_ReturnValue) == 0x000030, "Member 'BP_AJBStringJailSkill_C_PlayNetScaleAnimation::CallFunc_PlaySlotAnimation_ReturnValue' has a wrong offset!");

// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.SetNetVisibility
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBStringJailSkill_C_SetNetVisibility final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_STF_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_STF;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBStringJailSkill_C_SetNetVisibility) == 0x000008, "Wrong alignment on BP_AJBStringJailSkill_C_SetNetVisibility");
static_assert(sizeof(BP_AJBStringJailSkill_C_SetNetVisibility) == 0x000030, "Wrong size on BP_AJBStringJailSkill_C_SetNetVisibility");
static_assert(offsetof(BP_AJBStringJailSkill_C_SetNetVisibility, bNewVisibility) == 0x000000, "Member 'BP_AJBStringJailSkill_C_SetNetVisibility::bNewVisibility' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_SetNetVisibility, CallFunc_GetOwnerStand_ReturnValue) == 0x000008, "Member 'BP_AJBStringJailSkill_C_SetNetVisibility::CallFunc_GetOwnerStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_SetNetVisibility, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000010, "Member 'BP_AJBStringJailSkill_C_SetNetVisibility::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_SetNetVisibility, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBStringJailSkill_C_SetNetVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_SetNetVisibility, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_STF) == 0x000020, "Member 'BP_AJBStringJailSkill_C_SetNetVisibility::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_STF' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_SetNetVisibility, K2Node_DynamicCast_bSuccess1) == 0x000028, "Member 'BP_AJBStringJailSkill_C_SetNetVisibility::K2Node_DynamicCast_bSuccess1' has a wrong offset!");

// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.IsInDashPossiblePlace
// 0x01E0 (0x01E0 - 0x0000)
struct BP_AJBStringJailSkill_C_IsInDashPossiblePlace final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      PossibleTraceObject;                               // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x006C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLaunchedActorHomeLocation_Location;    // 0x0078(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindTraceLocationsFromCamera_TraceStartLocation; // 0x0084(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindTraceLocationsFromCamera_TraceEndLocation; // 0x0090(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_AJBSphereTraceForObjects_OutHit;          // 0x00A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_AJBSphereTraceForObjects_ReturnValue;     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array1;                           // 0x0130(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class AActor*>                         K2Node_MakeArray_Array2;                           // 0x0140(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FHitResult                             CallFunc_AJBSphereTraceForObjects_OutHit1;         // 0x0150(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_AJBSphereTraceForObjects_ReturnValue1;    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace) == 0x000008, "Wrong alignment on BP_AJBStringJailSkill_C_IsInDashPossiblePlace");
static_assert(sizeof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace) == 0x0001E0, "Wrong size on BP_AJBStringJailSkill_C_IsInDashPossiblePlace");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, ReturnValue) == 0x000000, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, PossibleTraceObject) == 0x000008, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::PossibleTraceObject' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, CallFunc_GetOwnerStand_ReturnValue) == 0x000028, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::CallFunc_GetOwnerStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000030, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000040, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface) == 0x000048, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, K2Node_DynamicCast_bSuccess1) == 0x000058, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000060, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, K2Node_DynamicCast_bSuccess2) == 0x000068, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00006C, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, CallFunc_GetLaunchedActorHomeLocation_Location) == 0x000078, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::CallFunc_GetLaunchedActorHomeLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, CallFunc_FindTraceLocationsFromCamera_TraceStartLocation) == 0x000084, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::CallFunc_FindTraceLocationsFromCamera_TraceStartLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, CallFunc_FindTraceLocationsFromCamera_TraceEndLocation) == 0x000090, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::CallFunc_FindTraceLocationsFromCamera_TraceEndLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, CallFunc_AJBSphereTraceForObjects_OutHit) == 0x0000A0, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::CallFunc_AJBSphereTraceForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, CallFunc_AJBSphereTraceForObjects_ReturnValue) == 0x000128, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::CallFunc_AJBSphereTraceForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, K2Node_MakeArray_Array1) == 0x000130, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, K2Node_MakeArray_Array2) == 0x000140, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, CallFunc_AJBSphereTraceForObjects_OutHit1) == 0x000150, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::CallFunc_AJBSphereTraceForObjects_OutHit1' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, CallFunc_AJBSphereTraceForObjects_ReturnValue1) == 0x0001D8, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::CallFunc_AJBSphereTraceForObjects_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, CallFunc_BooleanOR_ReturnValue) == 0x0001D9, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_IsInDashPossiblePlace, CallFunc_Not_PreBool_ReturnValue) == 0x0001DA, "Member 'BP_AJBStringJailSkill_C_IsInDashPossiblePlace::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.GetDuration
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBStringJailSkill_C_GetDuration final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDuration_Duration;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBStringJailSkill_C_GetDuration) == 0x000004, "Wrong alignment on BP_AJBStringJailSkill_C_GetDuration");
static_assert(sizeof(BP_AJBStringJailSkill_C_GetDuration) == 0x000008, "Wrong size on BP_AJBStringJailSkill_C_GetDuration");
static_assert(offsetof(BP_AJBStringJailSkill_C_GetDuration, Duration) == 0x000000, "Member 'BP_AJBStringJailSkill_C_GetDuration::Duration' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_GetDuration, CallFunc_GetDuration_Duration) == 0x000004, "Member 'BP_AJBStringJailSkill_C_GetDuration::CallFunc_GetDuration_Duration' has a wrong offset!");

// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.OnEndState
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBStringJailSkill_C_OnEndState final
{
public:
	bool                                          bCancel;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRestore;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBStringJailSkill_C_OnEndState) == 0x000001, "Wrong alignment on BP_AJBStringJailSkill_C_OnEndState");
static_assert(sizeof(BP_AJBStringJailSkill_C_OnEndState) == 0x000002, "Wrong size on BP_AJBStringJailSkill_C_OnEndState");
static_assert(offsetof(BP_AJBStringJailSkill_C_OnEndState, bCancel) == 0x000000, "Member 'BP_AJBStringJailSkill_C_OnEndState::bCancel' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_OnEndState, bRestore) == 0x000001, "Member 'BP_AJBStringJailSkill_C_OnEndState::bRestore' has a wrong offset!");

// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.HitWait
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBStringJailSkill_C_HitWait final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CuttingRate;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableDamage;                                    // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInvincible;                                       // 0x0026(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsPenetration;                                    // 0x0027(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bBlockedByAAP;                                     // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHeadShot;                                         // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBStringJailSkill_C_HitWait) == 0x000008, "Wrong alignment on BP_AJBStringJailSkill_C_HitWait");
static_assert(sizeof(BP_AJBStringJailSkill_C_HitWait) == 0x000030, "Wrong size on BP_AJBStringJailSkill_C_HitWait");
static_assert(offsetof(BP_AJBStringJailSkill_C_HitWait, HitActor) == 0x000000, "Member 'BP_AJBStringJailSkill_C_HitWait::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_HitWait, HitLocation) == 0x000008, "Member 'BP_AJBStringJailSkill_C_HitWait::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_HitWait, HitNormal) == 0x000014, "Member 'BP_AJBStringJailSkill_C_HitWait::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_HitWait, CuttingRate) == 0x000020, "Member 'BP_AJBStringJailSkill_C_HitWait::CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_HitWait, SurfaceType) == 0x000024, "Member 'BP_AJBStringJailSkill_C_HitWait::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_HitWait, bDisableDamage) == 0x000025, "Member 'BP_AJBStringJailSkill_C_HitWait::bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_HitWait, bInvincible) == 0x000026, "Member 'BP_AJBStringJailSkill_C_HitWait::bInvincible' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_HitWait, bIsPenetration) == 0x000027, "Member 'BP_AJBStringJailSkill_C_HitWait::bIsPenetration' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_HitWait, bBlockedByAAP) == 0x000028, "Member 'BP_AJBStringJailSkill_C_HitWait::bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_HitWait, bHeadShot) == 0x000029, "Member 'BP_AJBStringJailSkill_C_HitWait::bHeadShot' has a wrong offset!");

// Function BP_AJBStringJailSkill.BP_AJBStringJailSkill_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBStringJailSkill_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBStringJailSkill_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBStringJailSkill_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBStringJailSkill_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBStringJailSkill_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBStringJailSkill_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBStringJailSkill_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBStringJailSkill_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBStringJailSkill_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBStringJailSkill_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBStringJailSkill_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBStringJailSkill_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

}


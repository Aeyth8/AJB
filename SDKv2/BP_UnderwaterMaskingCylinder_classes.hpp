#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UnderwaterMaskingCylinder

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_UnderwaterMaskingCylinder.BP_UnderwaterMaskingCylinder_C
// 0x0038 (0x0360 - 0x0328)
class ABP_UnderwaterMaskingCylinder_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DM_WaterFogMask;                                   // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusScale;                                       // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeightScale;                                       // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WaterSurfaceOffset;                                // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor;                                       // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_UnderwaterMaskingCylinder(int32 EntryPoint);
	void SetTarget(class AActor* TargetActor_0);
	void SetWaterSurfaceZ(float Value);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_UnderwaterMaskingCylinder_C">();
	}
	static class ABP_UnderwaterMaskingCylinder_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_UnderwaterMaskingCylinder_C>();
	}
};
static_assert(alignof(ABP_UnderwaterMaskingCylinder_C) == 0x000008, "Wrong alignment on ABP_UnderwaterMaskingCylinder_C");
static_assert(sizeof(ABP_UnderwaterMaskingCylinder_C) == 0x000360, "Wrong size on ABP_UnderwaterMaskingCylinder_C");
static_assert(offsetof(ABP_UnderwaterMaskingCylinder_C, UberGraphFrame) == 0x000328, "Member 'ABP_UnderwaterMaskingCylinder_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_UnderwaterMaskingCylinder_C, StaticMesh) == 0x000330, "Member 'ABP_UnderwaterMaskingCylinder_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_UnderwaterMaskingCylinder_C, DefaultSceneRoot) == 0x000338, "Member 'ABP_UnderwaterMaskingCylinder_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_UnderwaterMaskingCylinder_C, DM_WaterFogMask) == 0x000340, "Member 'ABP_UnderwaterMaskingCylinder_C::DM_WaterFogMask' has a wrong offset!");
static_assert(offsetof(ABP_UnderwaterMaskingCylinder_C, RadiusScale) == 0x000348, "Member 'ABP_UnderwaterMaskingCylinder_C::RadiusScale' has a wrong offset!");
static_assert(offsetof(ABP_UnderwaterMaskingCylinder_C, HeightScale) == 0x00034C, "Member 'ABP_UnderwaterMaskingCylinder_C::HeightScale' has a wrong offset!");
static_assert(offsetof(ABP_UnderwaterMaskingCylinder_C, WaterSurfaceOffset) == 0x000350, "Member 'ABP_UnderwaterMaskingCylinder_C::WaterSurfaceOffset' has a wrong offset!");
static_assert(offsetof(ABP_UnderwaterMaskingCylinder_C, TargetActor) == 0x000358, "Member 'ABP_UnderwaterMaskingCylinder_C::TargetActor' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBDamageAreaMaster

#include "Basic.hpp"

#include "BP_AJBDamageAreaMaster_classes.hpp"
#include "BP_AJBDamageAreaMaster_parameters.hpp"


namespace SDK
{

// Function BP_AJBDamageAreaMaster.BP_AJBDamageAreaMaster_C.ExecuteUbergraph_BP_AJBDamageAreaMaster
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDamageAreaMaster_C::ExecuteUbergraph_BP_AJBDamageAreaMaster(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaMaster_C", "ExecuteUbergraph_BP_AJBDamageAreaMaster");

	Params::BP_AJBDamageAreaMaster_C_ExecuteUbergraph_BP_AJBDamageAreaMaster Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAreaMaster.BP_AJBDamageAreaMaster_C.SetupNoReduction
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaMaster_C::SetupNoReduction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaMaster_C", "SetupNoReduction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaMaster.BP_AJBDamageAreaMaster_C.Vanish
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaMaster_C::Vanish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaMaster_C", "Vanish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaMaster.BP_AJBDamageAreaMaster_C.StopDamageAreaTick
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaMaster_C::StopDamageAreaTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaMaster_C", "StopDamageAreaTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaMaster.BP_AJBDamageAreaMaster_C.StartDamageAreaTick
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaMaster_C::StartDamageAreaTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaMaster_C", "StartDamageAreaTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaMaster.BP_AJBDamageAreaMaster_C.ToggleDebugPauseDamageArea
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPause                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBDamageAreaMaster_C::ToggleDebugPauseDamageArea(bool IsPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaMaster_C", "ToggleDebugPauseDamageArea");

	Params::BP_AJBDamageAreaMaster_C_ToggleDebugPauseDamageArea Parms{};

	Parms.IsPause = IsPause;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAreaMaster.BP_AJBDamageAreaMaster_C.Restart
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaMaster_C::Restart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaMaster_C", "Restart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaMaster.BP_AJBDamageAreaMaster_C.CompleteInterval
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaMaster_C::CompleteInterval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaMaster_C", "CompleteInterval");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaMaster.BP_AJBDamageAreaMaster_C.CloseIntervalTickInternal
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaMaster_C::CloseIntervalTickInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaMaster_C", "CloseIntervalTickInternal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaMaster.BP_AJBDamageAreaMaster_C.OpenIntervalTickInternal
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaMaster_C::OpenIntervalTickInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaMaster_C", "OpenIntervalTickInternal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaMaster.BP_AJBDamageAreaMaster_C.SetupInterval
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaMaster_C::SetupInterval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaMaster_C", "SetupInterval");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaMaster.BP_AJBDamageAreaMaster_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDamageAreaMaster_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaMaster_C", "ReceiveTick");

	Params::BP_AJBDamageAreaMaster_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAreaMaster.BP_AJBDamageAreaMaster_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBDamageAreaMaster_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaMaster_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaMaster.BP_AJBDamageAreaMaster_C.GetInterval
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   IntervalIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FST_DamageAreaInterval           ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash)

struct FST_DamageAreaInterval UBP_AJBDamageAreaMaster_C::GetInterval(int32 IntervalIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaMaster_C", "GetInterval");

	Params::BP_AJBDamageAreaMaster_C_GetInterval Parms{};

	Parms.IntervalIndex = IntervalIndex;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBDamageAreaMaster.BP_AJBDamageAreaMaster_C.InitializeDamageAreaIntervalParam
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaMaster_C::InitializeDamageAreaIntervalParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaMaster_C", "InitializeDamageAreaIntervalParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaMaster.BP_AJBDamageAreaMaster_C.AdvanceCalculationTargetLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaMaster_C::AdvanceCalculationTargetLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaMaster_C", "AdvanceCalculationTargetLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaMaster.BP_AJBDamageAreaMaster_C.AdvanceCalculationTargetLocationCore
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          CurrentLocation                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CurrentLocationDiff                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentRadius                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NextRadius                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDamageAreaMaster_C::AdvanceCalculationTargetLocationCore(struct FVector& CurrentLocation, struct FVector& CurrentLocationDiff, float& CurrentRadius, float NextRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaMaster_C", "AdvanceCalculationTargetLocationCore");

	Params::BP_AJBDamageAreaMaster_C_AdvanceCalculationTargetLocationCore Parms{};

	Parms.CurrentLocation = std::move(CurrentLocation);
	Parms.CurrentLocationDiff = std::move(CurrentLocationDiff);
	Parms.CurrentRadius = CurrentRadius;
	Parms.NextRadius = NextRadius;

	UObject::ProcessEvent(Func, &Parms);

	CurrentLocation = std::move(Parms.CurrentLocation);
	CurrentLocationDiff = std::move(Parms.CurrentLocationDiff);
	CurrentRadius = Parms.CurrentRadius;
}

}


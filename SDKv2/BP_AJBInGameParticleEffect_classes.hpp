#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameParticleEffect

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBInGameParticleEffect.BP_AJBInGameParticleEffect_C
// 0x0020 (0x0348 - 0x0328)
class ABP_AJBInGameParticleEffect_C final : public AAJBInGameEffectActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugShowParticleInfo;                            // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_AJBInGameParticleEffect(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void BndEvt__ParticleSystem_K2Node_ComponentBoundEvent_0_OnSystemFinished__DelegateSignature(class UParticleSystemComponent* PSystem);
	void UserConstructionScript();
	void SetupParticle(class UParticleSystem* Particle, const struct FVector& Location, const struct FRotator& Rotation);
	void DestroyParticle();
	void DetachParticle();
	void SetParticleScale(const struct FVector& NewScale);
	bool IsBeingUsed();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBInGameParticleEffect_C">();
	}
	static class ABP_AJBInGameParticleEffect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBInGameParticleEffect_C>();
	}
};
static_assert(alignof(ABP_AJBInGameParticleEffect_C) == 0x000008, "Wrong alignment on ABP_AJBInGameParticleEffect_C");
static_assert(sizeof(ABP_AJBInGameParticleEffect_C) == 0x000348, "Wrong size on ABP_AJBInGameParticleEffect_C");
static_assert(offsetof(ABP_AJBInGameParticleEffect_C, UberGraphFrame) == 0x000328, "Member 'ABP_AJBInGameParticleEffect_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameParticleEffect_C, ParticleSystem) == 0x000330, "Member 'ABP_AJBInGameParticleEffect_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameParticleEffect_C, DefaultSceneRoot) == 0x000338, "Member 'ABP_AJBInGameParticleEffect_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameParticleEffect_C, bDebugShowParticleInfo) == 0x000340, "Member 'ABP_AJBInGameParticleEffect_C::bDebugShowParticleInfo' has a wrong offset!");

}


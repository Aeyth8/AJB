#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CharaAchieve_SmallProgress

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "WB_CharaAchieve_Progress_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_CharaAchieve_SmallProgress.WB_CharaAchieve_SmallProgress_C
// 0x0040 (0x0250 - 0x0210)
class UWB_CharaAchieve_SmallProgress_C final : public UWB_CharaAchieve_Progress_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WB_CharaAchieve_SmallProgress_C;    // 0x0210(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Loop_PillerMove;                              // 0x0218(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_FadeOutEffect;                                // 0x0220(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_FadeInEffect;                                 // 0x0228(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_effect;                                   // 0x0230(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_under;                                    // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_upper;                                    // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_upperWhite;                               // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_CharaAchieve_SmallProgress(int32 EntryPoint);
	void ForceFadeIn();
	void ForceFadeOut();
	void SetActiveDisplay(bool bEffectsAlsoBeDisplayed);
	class UWidgetAnimation* GetFadeInAnimation();
	class UWidgetAnimation* GetFadeOutAnimation();
	class UWidgetAnimation* GetLoopPillerMoveAnimation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_CharaAchieve_SmallProgress_C">();
	}
	static class UWB_CharaAchieve_SmallProgress_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_CharaAchieve_SmallProgress_C>();
	}
};
static_assert(alignof(UWB_CharaAchieve_SmallProgress_C) == 0x000008, "Wrong alignment on UWB_CharaAchieve_SmallProgress_C");
static_assert(sizeof(UWB_CharaAchieve_SmallProgress_C) == 0x000250, "Wrong size on UWB_CharaAchieve_SmallProgress_C");
static_assert(offsetof(UWB_CharaAchieve_SmallProgress_C, UberGraphFrame_WB_CharaAchieve_SmallProgress_C) == 0x000210, "Member 'UWB_CharaAchieve_SmallProgress_C::UberGraphFrame_WB_CharaAchieve_SmallProgress_C' has a wrong offset!");
static_assert(offsetof(UWB_CharaAchieve_SmallProgress_C, Anim_Loop_PillerMove) == 0x000218, "Member 'UWB_CharaAchieve_SmallProgress_C::Anim_Loop_PillerMove' has a wrong offset!");
static_assert(offsetof(UWB_CharaAchieve_SmallProgress_C, Anim_FadeOutEffect) == 0x000220, "Member 'UWB_CharaAchieve_SmallProgress_C::Anim_FadeOutEffect' has a wrong offset!");
static_assert(offsetof(UWB_CharaAchieve_SmallProgress_C, Anim_FadeInEffect) == 0x000228, "Member 'UWB_CharaAchieve_SmallProgress_C::Anim_FadeInEffect' has a wrong offset!");
static_assert(offsetof(UWB_CharaAchieve_SmallProgress_C, AJBImage_effect) == 0x000230, "Member 'UWB_CharaAchieve_SmallProgress_C::AJBImage_effect' has a wrong offset!");
static_assert(offsetof(UWB_CharaAchieve_SmallProgress_C, AJBImage_under) == 0x000238, "Member 'UWB_CharaAchieve_SmallProgress_C::AJBImage_under' has a wrong offset!");
static_assert(offsetof(UWB_CharaAchieve_SmallProgress_C, AJBImage_upper) == 0x000240, "Member 'UWB_CharaAchieve_SmallProgress_C::AJBImage_upper' has a wrong offset!");
static_assert(offsetof(UWB_CharaAchieve_SmallProgress_C, AJBImage_upperWhite) == 0x000248, "Member 'UWB_CharaAchieve_SmallProgress_C::AJBImage_upperWhite' has a wrong offset!");

}


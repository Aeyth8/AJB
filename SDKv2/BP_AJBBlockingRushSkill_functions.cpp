#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBBlockingRushSkill

#include "Basic.hpp"

#include "BP_AJBBlockingRushSkill_classes.hpp"
#include "BP_AJBBlockingRushSkill_parameters.hpp"


namespace SDK
{

// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.ExecuteUbergraph_BP_AJBBlockingRushSkill
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBlockingRushSkill_C::ExecuteUbergraph_BP_AJBBlockingRushSkill(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "ExecuteUbergraph_BP_AJBBlockingRushSkill");

	Params::BP_AJBBlockingRushSkill_C_ExecuteUbergraph_BP_AJBBlockingRushSkill Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.OnDisconnected
// (Event, Public, BlueprintEvent)

void UBP_AJBBlockingRushSkill_C::OnDisconnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "OnDisconnected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBlockingRushSkill_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "ReceiveEndPlay");

	Params::BP_AJBBlockingRushSkill_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.ROS_NotifyBlocking
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           BlockedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CuttingProjectile____0                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CuttingOther____0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInvincible                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bReflectProjectile_0                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         ReflectRotation                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// bool                                    bSeparateStandAttack                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBlockingRushSkill_C::ROS_NotifyBlocking(class UObject* Target, class AActor* BlockedActor, class AActor* OtherActor, const struct FVector& HitLocation, int32 CuttingProjectile____0, int32 CuttingOther____0, bool bInvincible, bool bReflectProjectile_0, const struct FRotator& ReflectRotation, bool bSeparateStandAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "ROS_NotifyBlocking");

	Params::BP_AJBBlockingRushSkill_C_ROS_NotifyBlocking Parms{};

	Parms.Target = Target;
	Parms.BlockedActor = BlockedActor;
	Parms.OtherActor = OtherActor;
	Parms.HitLocation = std::move(HitLocation);
	Parms.CuttingProjectile____0 = CuttingProjectile____0;
	Parms.CuttingOther____0 = CuttingOther____0;
	Parms.bInvincible = bInvincible;
	Parms.bReflectProjectile_0 = bReflectProjectile_0;
	Parms.ReflectRotation = std::move(ReflectRotation);
	Parms.bSeparateStandAttack = bSeparateStandAttack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.OnBlocking
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bReflect                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsPairAttack                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           DamageOwner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSeparateStandAttack                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBlockingRushSkill_C::OnBlocking(bool bReflect, bool bIsPairAttack, class AActor* DamageOwner, bool bSeparateStandAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "OnBlocking");

	Params::BP_AJBBlockingRushSkill_C_OnBlocking Parms{};

	Parms.bReflect = bReflect;
	Parms.bIsPairAttack = bIsPairAttack;
	Parms.DamageOwner = DamageOwner;
	Parms.bSeparateStandAttack = bSeparateStandAttack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.OnBeginOverlap_BlockCollision
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FromSweep                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_AJBBlockingRushSkill_C::OnBeginOverlap_BlockCollision(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "OnBeginOverlap_BlockCollision");

	Params::BP_AJBBlockingRushSkill_C_OnBeginOverlap_BlockCollision Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.FromSweep = FromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.SetCollisionEnabled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBlockingRushSkill_C::SetCollisionEnabled(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "SetCollisionEnabled");

	Params::BP_AJBBlockingRushSkill_C_SetCollisionEnabled Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.TickState_Waiting
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBlockingRushSkill_C::TickState_Waiting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "TickState_Waiting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.OnBeginState_Waiting_OneShot
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBlockingRushSkill_C::OnBeginState_Waiting_OneShot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "OnBeginState_Waiting_OneShot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.OnBeginState_Waiting
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBlockingRushSkill_C::OnBeginState_Waiting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "OnBeginState_Waiting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.OnStateEnd_OneShot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCancel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBlockingRushSkill_C::OnStateEnd_OneShot(bool bCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "OnStateEnd_OneShot");

	Params::BP_AJBBlockingRushSkill_C_OnStateEnd_OneShot Parms{};

	Parms.bCancel = bCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.OnBeginState_Blocking_OneShot
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBlockingRushSkill_C::OnBeginState_Blocking_OneShot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "OnBeginState_Blocking_OneShot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.StateBeginPlay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldRestore                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBlockingRushSkill_C::StateBeginPlay(bool bShouldRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "StateBeginPlay");

	Params::BP_AJBBlockingRushSkill_C_StateBeginPlay Parms{};

	Parms.bShouldRestore = bShouldRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.MC_BeginState_Blocking
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_AJBBlockingRushSkill_C::MC_BeginState_Blocking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "MC_BeginState_Blocking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.ROS_BeginState_Blocking
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_AJBBlockingRushSkill_C::ROS_BeginState_Blocking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "ROS_BeginState_Blocking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.BeginState_Blocking
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBlockingRushSkill_C::BeginState_Blocking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "BeginState_Blocking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.MC_EndState
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCancel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBlockingRushSkill_C::MC_EndState(bool bCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "MC_EndState");

	Params::BP_AJBBlockingRushSkill_C_MC_EndState Parms{};

	Parms.bCancel = bCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.ROS_EndState
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCancel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBlockingRushSkill_C::ROS_EndState(bool bCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "ROS_EndState");

	Params::BP_AJBBlockingRushSkill_C_ROS_EndState Parms{};

	Parms.bCancel = bCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBBlockingRushSkill_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.StateEnd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCancel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBlockingRushSkill_C::StateEnd(bool bCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "StateEnd");

	Params::BP_AJBBlockingRushSkill_C_StateEnd Parms{};

	Parms.bCancel = bCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.BeginOverlap_BlockCollision
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_AJBBlockingRushSkill_C::BeginOverlap_BlockCollision(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "BeginOverlap_BlockCollision");

	Params::BP_AJBBlockingRushSkill_C_BeginOverlap_BlockCollision Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.OnStateEnd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCancel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBlockingRushSkill_C::OnStateEnd(bool bCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "OnStateEnd");

	Params::BP_AJBBlockingRushSkill_C_OnStateEnd Parms{};

	Parms.bCancel = bCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.OnBeginState_Blocking
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBlockingRushSkill_C::OnBeginState_Blocking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "OnBeginState_Blocking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.TickState_Blocking
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBlockingRushSkill_C::TickState_Blocking(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "TickState_Blocking");

	Params::BP_AJBBlockingRushSkill_C_TickState_Blocking Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.StateTick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBlockingRushSkill_C::StateTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "StateTick");

	Params::BP_AJBBlockingRushSkill_C_StateTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.OnCompleted_BA0F5D9641BCE4230CC79B96D645A2FB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBlockingRushSkill_C::OnCompleted_BA0F5D9641BCE4230CC79B96D645A2FB(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "OnCompleted_BA0F5D9641BCE4230CC79B96D645A2FB");

	Params::BP_AJBBlockingRushSkill_C_OnCompleted_BA0F5D9641BCE4230CC79B96D645A2FB Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.OnBlendOut_BA0F5D9641BCE4230CC79B96D645A2FB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBlockingRushSkill_C::OnBlendOut_BA0F5D9641BCE4230CC79B96D645A2FB(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "OnBlendOut_BA0F5D9641BCE4230CC79B96D645A2FB");

	Params::BP_AJBBlockingRushSkill_C_OnBlendOut_BA0F5D9641BCE4230CC79B96D645A2FB Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.OnInterrupted_BA0F5D9641BCE4230CC79B96D645A2FB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBlockingRushSkill_C::OnInterrupted_BA0F5D9641BCE4230CC79B96D645A2FB(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "OnInterrupted_BA0F5D9641BCE4230CC79B96D645A2FB");

	Params::BP_AJBBlockingRushSkill_C_OnInterrupted_BA0F5D9641BCE4230CC79B96D645A2FB Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.OnNotifyBegin_BA0F5D9641BCE4230CC79B96D645A2FB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBlockingRushSkill_C::OnNotifyBegin_BA0F5D9641BCE4230CC79B96D645A2FB(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "OnNotifyBegin_BA0F5D9641BCE4230CC79B96D645A2FB");

	Params::BP_AJBBlockingRushSkill_C_OnNotifyBegin_BA0F5D9641BCE4230CC79B96D645A2FB Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.OnNotifyEnd_BA0F5D9641BCE4230CC79B96D645A2FB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBlockingRushSkill_C::OnNotifyEnd_BA0F5D9641BCE4230CC79B96D645A2FB(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "OnNotifyEnd_BA0F5D9641BCE4230CC79B96D645A2FB");

	Params::BP_AJBBlockingRushSkill_C_OnNotifyEnd_BA0F5D9641BCE4230CC79B96D645A2FB Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.GetBlockingLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBlockingRushSkill_C::GetBlockingLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "GetBlockingLocation");

	Params::BP_AJBBlockingRushSkill_C_GetBlockingLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.CheckBlockingValid
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bValid                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBlockingRushSkill_C::CheckBlockingValid(class AActor* DamageCauser, bool* bValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "CheckBlockingValid");

	Params::BP_AJBBlockingRushSkill_C_CheckBlockingValid Parms{};

	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	if (bValid != nullptr)
		*bValid = Parms.bValid;
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.SettingBlockingCollision
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AJBBlockingRushSkill_C::SettingBlockingCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "SettingBlockingCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.TryDestroyRunningParticle
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBBlockingRushSkill_C::TryDestroyRunningParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "TryDestroyRunningParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.GetBlockingRunningParticleTag
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     BlockingRunningTag                                     (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBlockingRushSkill_C::GetBlockingRunningParticleTag(struct FGameplayTag* BlockingRunningTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "GetBlockingRunningParticleTag");

	Params::BP_AJBBlockingRushSkill_C_GetBlockingRunningParticleTag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BlockingRunningTag != nullptr)
		*BlockingRunningTag = std::move(Parms.BlockingRunningTag);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.EndBlockingProcess
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBBlockingRushSkill_C::EndBlockingProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "EndBlockingProcess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.CheckSeparateStandAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           DamageOwner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSeparateStandAttack                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBlockingRushSkill_C::CheckSeparateStandAttack(class AActor* DamageOwner, bool* bSeparateStandAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "CheckSeparateStandAttack");

	Params::BP_AJBBlockingRushSkill_C_CheckSeparateStandAttack Parms{};

	Parms.DamageOwner = DamageOwner;

	UObject::ProcessEvent(Func, &Parms);

	if (bSeparateStandAttack != nullptr)
		*bSeparateStandAttack = Parms.bSeparateStandAttack;
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.OnCancel
// (Event, Public, BlueprintEvent)

void UBP_AJBBlockingRushSkill_C::OnCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "OnCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBlockingRushSkill_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "ReceiveTick");

	Params::BP_AJBBlockingRushSkill_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.OnActive
// (Event, Public, BlueprintEvent)

void UBP_AJBBlockingRushSkill_C::OnActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "OnActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBlockingRushSkill_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "NotifyTheWorld");

	Params::BP_AJBBlockingRushSkill_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.InitializeVariables
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBBlockingRushSkill_C::InitializeVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "InitializeVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.ReserveInactive
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBBlockingRushSkill_C::ReserveInactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "ReserveInactive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.UnreserveInactive
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBBlockingRushSkill_C::UnreserveInactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "UnreserveInactive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBlockingRushSkill.BP_AJBBlockingRushSkill_C.CheckStateCanAccompany
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bCanAccompany                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBlockingRushSkill_C::CheckStateCanAccompany(bool* bCanAccompany)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBlockingRushSkill_C", "CheckStateCanAccompany");

	Params::BP_AJBBlockingRushSkill_C_CheckStateCanAccompany Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bCanAccompany != nullptr)
		*bCanAccompany = Parms.bCanAccompany;
}

}


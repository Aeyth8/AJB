#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_AnimPostProcess

#include "Basic.hpp"

#include "BPI_AnimPostProcess_classes.hpp"
#include "BPI_AnimPostProcess_parameters.hpp"


namespace SDK
{

// Function BPI_AnimPostProcess.BPI_AnimPostProcess_C.SetEnableLip
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewFlag                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AnimPostProcess_C::SetEnableLip(bool NewFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AnimPostProcess_C", "SetEnableLip");

	Params::BPI_AnimPostProcess_C_SetEnableLip Parms{};

	Parms.NewFlag = NewFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_AnimPostProcess.BPI_AnimPostProcess_C.SetLipAnimSequence
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequenceBase*                Lip_A                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimSequenceBase*                Lip_I                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimSequenceBase*                Lip_U                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimSequenceBase*                Lip_E                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimSequenceBase*                Lip_O                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AnimPostProcess_C::SetLipAnimSequence(class UAnimSequenceBase* Lip_A, class UAnimSequenceBase* Lip_I, class UAnimSequenceBase* Lip_U, class UAnimSequenceBase* Lip_E, class UAnimSequenceBase* Lip_O)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AnimPostProcess_C", "SetLipAnimSequence");

	Params::BPI_AnimPostProcess_C_SetLipAnimSequence Parms{};

	Parms.Lip_A = Lip_A;
	Parms.Lip_I = Lip_I;
	Parms.Lip_U = Lip_U;
	Parms.Lip_E = Lip_E;
	Parms.Lip_O = Lip_O;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_AnimPostProcess.BPI_AnimPostProcess_C.UpdateLipType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ELipType                                NewType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AnimPostProcess_C::UpdateLipType(ELipType NewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AnimPostProcess_C", "UpdateLipType");

	Params::BPI_AnimPostProcess_C_UpdateLipType Parms{};

	Parms.NewType = NewType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_AnimPostProcess.BPI_AnimPostProcess_C.UpdateLipBlendTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewBlendTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AnimPostProcess_C::UpdateLipBlendTime(float NewBlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AnimPostProcess_C", "UpdateLipBlendTime");

	Params::BPI_AnimPostProcess_C_UpdateLipBlendTime Parms{};

	Parms.NewBlendTime = NewBlendTime;

	UObject::ProcessEvent(Func, &Parms);
}

}


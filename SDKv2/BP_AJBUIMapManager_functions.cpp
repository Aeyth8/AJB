#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBUIMapManager

#include "Basic.hpp"

#include "BP_AJBUIMapManager_classes.hpp"
#include "BP_AJBUIMapManager_parameters.hpp"


namespace SDK
{

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.OnStickedPlayerMarker__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        NormalizedPosition                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_LandmarkableMap_C*            MapWidget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     SignalTypeTag                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    FromMap                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBUIMapManager_C::OnStickedPlayerMarker__DelegateSignature(const struct FVector2D& NormalizedPosition, class UWB_LandmarkableMap_C* MapWidget, const struct FGameplayTag& SignalTypeTag, bool FromMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "OnStickedPlayerMarker__DelegateSignature");

	Params::BP_AJBUIMapManager_C_OnStickedPlayerMarker__DelegateSignature Parms{};

	Parms.NormalizedPosition = std::move(NormalizedPosition);
	Parms.MapWidget = MapWidget;
	Parms.SignalTypeTag = std::move(SignalTypeTag);
	Parms.FromMap = FromMap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.OnStickedPairMarker__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        NormalizedPosition                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_LandmarkableMap_C*            MapWidget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     SignalTypeTag                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBUIMapManager_C::OnStickedPairMarker__DelegateSignature(const struct FVector2D& NormalizedPosition, class UWB_LandmarkableMap_C* MapWidget, const struct FGameplayTag& SignalTypeTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "OnStickedPairMarker__DelegateSignature");

	Params::BP_AJBUIMapManager_C_OnStickedPairMarker__DelegateSignature Parms{};

	Parms.NormalizedPosition = std::move(NormalizedPosition);
	Parms.MapWidget = MapWidget;
	Parms.SignalTypeTag = std::move(SignalTypeTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.OnChangedPlayerIcon__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        NormalizedPosition                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   IconAngle                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_LandmarkableMap_C*            MapWidget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBUIMapManager_C::OnChangedPlayerIcon__DelegateSignature(const struct FVector2D& NormalizedPosition, float IconAngle, class UWB_LandmarkableMap_C* MapWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "OnChangedPlayerIcon__DelegateSignature");

	Params::BP_AJBUIMapManager_C_OnChangedPlayerIcon__DelegateSignature Parms{};

	Parms.NormalizedPosition = std::move(NormalizedPosition);
	Parms.IconAngle = IconAngle;
	Parms.MapWidget = MapWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.OnChangedPairIcon__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        NormalizedPosition                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   IconAngle                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_LandmarkableMap_C*            MapWidget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bVisibleIcon                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   PairHP                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBUIMapManager_C::OnChangedPairIcon__DelegateSignature(const struct FVector2D& NormalizedPosition, float IconAngle, class UWB_LandmarkableMap_C* MapWidget, bool bVisibleIcon, int32 PairHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "OnChangedPairIcon__DelegateSignature");

	Params::BP_AJBUIMapManager_C_OnChangedPairIcon__DelegateSignature Parms{};

	Parms.NormalizedPosition = std::move(NormalizedPosition);
	Parms.IconAngle = IconAngle;
	Parms.MapWidget = MapWidget;
	Parms.bVisibleIcon = bVisibleIcon;
	Parms.PairHP = PairHP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.ResetMarker__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AJBUIMapManager_C::ResetMarker__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "ResetMarker__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.OnSpawnSignalPin__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     SignalPinType                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsRemove                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bWithSound                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBUIMapManager_C::OnSpawnSignalPin__DelegateSignature(const struct FVector& Location, const struct FGameplayTag& SignalPinType, bool bIsRemove, bool bWithSound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "OnSpawnSignalPin__DelegateSignature");

	Params::BP_AJBUIMapManager_C_OnSpawnSignalPin__DelegateSignature Parms{};

	Parms.Location = std::move(Location);
	Parms.SignalPinType = std::move(SignalPinType);
	Parms.bIsRemove = bIsRemove;
	Parms.bWithSound = bWithSound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.ExecuteUbergraph_BP_AJBUIMapManager
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBUIMapManager_C::ExecuteUbergraph_BP_AJBUIMapManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "ExecuteUbergraph_BP_AJBUIMapManager");

	Params::BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.OnSetViewTargetToNewSpectator_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBUIMapManager_C::OnSetViewTargetToNewSpectator_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "OnSetViewTargetToNewSpectator_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.OnStickedMaker_Pair
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        NormalizedPosition                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_LandmarkableMap_C*            MapWidget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBUIMapManager_C::OnStickedMaker_Pair(const struct FVector2D& NormalizedPosition, class UWB_LandmarkableMap_C* MapWidget, const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "OnStickedMaker_Pair");

	Params::BP_AJBUIMapManager_C_OnStickedMaker_Pair Parms{};

	Parms.NormalizedPosition = std::move(NormalizedPosition);
	Parms.MapWidget = MapWidget;
	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.OnStickedMaker_Owner
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        NormalizedPosition                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_LandmarkableMap_C*            MapWidget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    FromMap                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBUIMapManager_C::OnStickedMaker_Owner(const struct FVector2D& NormalizedPosition, class UWB_LandmarkableMap_C* MapWidget, const struct FGameplayTag& Tag, bool FromMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "OnStickedMaker_Owner");

	Params::BP_AJBUIMapManager_C_OnStickedMaker_Owner Parms{};

	Parms.NormalizedPosition = std::move(NormalizedPosition);
	Parms.MapWidget = MapWidget;
	Parms.Tag = std::move(Tag);
	Parms.FromMap = FromMap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.DisabledMapPinSound
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBUIMapManager_C::DisabledMapPinSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "DisabledMapPinSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.EnabledMapPinSound
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBUIMapManager_C::EnabledMapPinSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "EnabledMapPinSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.OnStickedMarker_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        NormalizedPosition                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_LandmarkableMap_C*            MapWidget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     SignalTypeTag                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsPair                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    FromMap                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBUIMapManager_C::OnStickedMarker_Event(const struct FVector2D& NormalizedPosition, class UWB_LandmarkableMap_C* MapWidget, const struct FGameplayTag& SignalTypeTag, bool bIsPair, bool FromMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "OnStickedMarker_Event");

	Params::BP_AJBUIMapManager_C_OnStickedMarker_Event Parms{};

	Parms.NormalizedPosition = std::move(NormalizedPosition);
	Parms.MapWidget = MapWidget;
	Parms.SignalTypeTag = std::move(SignalTypeTag);
	Parms.bIsPair = bIsPair;
	Parms.FromMap = FromMap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AJBUIMapManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.DestroyAllSignalPin_Local
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInstant                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBUIMapManager_C::DestroyAllSignalPin_Local(bool bInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "DestroyAllSignalPin_Local");

	Params::BP_AJBUIMapManager_C_DestroyAllSignalPin_Local Parms{};

	Parms.bInstant = bInstant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.PlaySignalPinDestroySound
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SignalPinType                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBUIMapManager_C::PlaySignalPinDestroySound(const struct FGameplayTag& SignalPinType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "PlaySignalPinDestroySound");

	Params::BP_AJBUIMapManager_C_PlaySignalPinDestroySound Parms{};

	Parms.SignalPinType = std::move(SignalPinType);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.PlaySignalPinSpawnSound
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SignalPinType                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBUIMapManager_C::PlaySignalPinSpawnSound(const struct FGameplayTag& SignalPinType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "PlaySignalPinSpawnSound");

	Params::BP_AJBUIMapManager_C_PlaySignalPinSpawnSound Parms{};

	Parms.SignalPinType = std::move(SignalPinType);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.DestroySignalPin
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SignalPinType                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsPair                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsLocalOnly                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsIntention                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBUIMapManager_C::DestroySignalPin(const struct FGameplayTag& SignalPinType, const struct FVector& Location, bool bIsPair, bool bIsLocalOnly, bool bIsIntention)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "DestroySignalPin");

	Params::BP_AJBUIMapManager_C_DestroySignalPin Parms{};

	Parms.SignalPinType = std::move(SignalPinType);
	Parms.Location = std::move(Location);
	Parms.bIsPair = bIsPair;
	Parms.bIsLocalOnly = bIsLocalOnly;
	Parms.bIsIntention = bIsIntention;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.DestroySignalPinFromActor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBSignalPinBase_C*           SignalPinActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsIntention                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBUIMapManager_C::DestroySignalPinFromActor(class ABP_AJBSignalPinBase_C* SignalPinActor, bool bIsIntention)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "DestroySignalPinFromActor");

	Params::BP_AJBUIMapManager_C_DestroySignalPinFromActor Parms{};

	Parms.SignalPinActor = SignalPinActor;
	Parms.bIsIntention = bIsIntention;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.SpawnSignalPinFromDisplayTap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     SignalPinTag                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBUIMapManager_C::SpawnSignalPinFromDisplayTap(const struct FVector& Spawn_Transform_Location, const struct FGameplayTag& SignalPinTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "SpawnSignalPinFromDisplayTap");

	Params::BP_AJBUIMapManager_C_SpawnSignalPinFromDisplayTap Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.SignalPinTag = std::move(SignalPinTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.OnClick
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBUIMapManager_C::OnClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "OnClick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.StickCautionPin
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBUIMapManager_C::StickCautionPin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "StickCautionPin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.ReserveNewPin
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBUIMapManager_C::ReserveNewPin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "ReserveNewPin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.SpawnSignalPin
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Pair                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     SignalPinTag                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsRemove                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bWithSound                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBUIMapManager_C::SpawnSignalPin(bool Pair, const struct FVector& Spawn_Transform_Location, const struct FGameplayTag& SignalPinTag, bool bIsRemove, bool bWithSound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "SpawnSignalPin");

	Params::BP_AJBUIMapManager_C_SpawnSignalPin Parms{};

	Parms.Pair = Pair;
	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.SignalPinTag = std::move(SignalPinTag);
	Parms.bIsRemove = bIsRemove;
	Parms.bWithSound = bWithSound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.DestroySignalPinType
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SignalTypeTag                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsPair                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsIntention                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBUIMapManager_C::DestroySignalPinType(const struct FGameplayTag& SignalTypeTag, bool bIsPair, bool bIsIntention)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "DestroySignalPinType");

	Params::BP_AJBUIMapManager_C_DestroySignalPinType Parms{};

	Parms.SignalTypeTag = std::move(SignalTypeTag);
	Parms.bIsPair = bIsPair;
	Parms.bIsIntention = bIsIntention;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.SpawnSignalPinFromMap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        SignalPinlocation                                      (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     SignalTypeTag                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsPair                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBUIMapManager_C::SpawnSignalPinFromMap(const struct FVector2D& SignalPinlocation, const struct FGameplayTag& SignalTypeTag, bool bIsPair)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "SpawnSignalPinFromMap");

	Params::BP_AJBUIMapManager_C_SpawnSignalPinFromMap Parms{};

	Parms.SignalPinlocation = std::move(SignalPinlocation);
	Parms.SignalTypeTag = std::move(SignalTypeTag);
	Parms.bIsPair = bIsPair;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBUIMapManager_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.GetSignalPinActorFromTag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     SignalPinTag                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UClass*                           ReturnActor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBUIMapManager_C::GetSignalPinActorFromTag(const struct FGameplayTag& SignalPinTag, class UClass** ReturnActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "GetSignalPinActorFromTag");

	Params::BP_AJBUIMapManager_C_GetSignalPinActorFromTag Parms{};

	Parms.SignalPinTag = std::move(SignalPinTag);

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnActor != nullptr)
		*ReturnActor = Parms.ReturnActor;
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.TryTracePinPosition
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     SignalPinType                                          (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBUIMapManager_C::TryTracePinPosition(struct FVector* Location, struct FGameplayTag* SignalPinType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "TryTracePinPosition");

	Params::BP_AJBUIMapManager_C_TryTracePinPosition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (SignalPinType != nullptr)
		*SignalPinType = std::move(Parms.SignalPinType);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.CalcMapNormalizePosition
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        NormalizePosition                                      (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBUIMapManager_C::CalcMapNormalizePosition(const struct FVector& Position, struct FVector2D* NormalizePosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "CalcMapNormalizePosition");

	Params::BP_AJBUIMapManager_C_CalcMapNormalizePosition Parms{};

	Parms.Position = std::move(Position);

	UObject::ProcessEvent(Func, &Parms);

	if (NormalizePosition != nullptr)
		*NormalizePosition = std::move(Parms.NormalizePosition);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.GetCountOwningItemPin
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ItemPinNum                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBUIMapManager_C::GetCountOwningItemPin(int32* ItemPinNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "GetCountOwningItemPin");

	Params::BP_AJBUIMapManager_C_GetCountOwningItemPin Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemPinNum != nullptr)
		*ItemPinNum = Parms.ItemPinNum;
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.GetOldestItemlPin
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_AJBSignalPinBase_C*           OldestItemPin                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBUIMapManager_C::GetOldestItemlPin(class ABP_AJBSignalPinBase_C** OldestItemPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "GetOldestItemlPin");

	Params::BP_AJBUIMapManager_C_GetOldestItemlPin Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OldestItemPin != nullptr)
		*OldestItemPin = Parms.OldestItemPin;
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.GetAllWindowActors
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class AActor*>                   WindowActors                                           (Parm, OutParm, ZeroConstructor)

void ABP_AJBUIMapManager_C::GetAllWindowActors(TArray<class AActor*>* WindowActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "GetAllWindowActors");

	Params::BP_AJBUIMapManager_C_GetAllWindowActors Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WindowActors != nullptr)
		*WindowActors = std::move(Parms.WindowActors);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.TryTraceCautionPosition
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBUIMapManager_C::TryTraceCautionPosition(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "TryTraceCautionPosition");

	Params::BP_AJBUIMapManager_C_TryTraceCautionPosition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.CanStickNewPin
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_AJBUIMapManager_C::CanStickNewPin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "CanStickNewPin");

	Params::BP_AJBUIMapManager_C_CanStickNewPin Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.IsInClickableArea
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bIsClickable                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBUIMapManager_C::IsInClickableArea(bool* bIsClickable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "IsInClickableArea");

	Params::BP_AJBUIMapManager_C_IsInClickableArea Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsClickable != nullptr)
		*bIsClickable = Parms.bIsClickable;
}


// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.GetAllIgnoreCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class ABP_AJBInGameCharacter_C*> IgnoreCharacters                                       (Parm, OutParm, ZeroConstructor)

void ABP_AJBUIMapManager_C::GetAllIgnoreCharacter(TArray<class ABP_AJBInGameCharacter_C*>* IgnoreCharacters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBUIMapManager_C", "GetAllIgnoreCharacter");

	Params::BP_AJBUIMapManager_C_GetAllIgnoreCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IgnoreCharacters != nullptr)
		*IgnoreCharacters = std::move(Parms.IgnoreCharacters);
}

}


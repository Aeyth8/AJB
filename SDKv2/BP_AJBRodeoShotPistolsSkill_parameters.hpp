#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBRodeoShotPistolsSkill

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBRodeoShotPistolsSkill.BP_AJBRodeoShotPistolsSkill_C.ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Damage, const struct FGameplayTag& DamageType, class AActor* DamageReceiver, bool bRemainHP, bool bDamageIsCut, int32 SerialNumber, bool DamageReceiverIsPlayer, bool bWithSeparatedStandAttack, bool bEnemysSeparateStand)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_AJBInGameCharacter_C*               K2Node_Event_CharacterBP;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Damage;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_DamageType;                     // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageReceiver;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bRemainHP;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bDamageIsCut;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_SerialNumber;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DamageReceiverIsPlayer;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bWithSeparatedStandAttack;      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bEnemysSeparateStand;           // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeakVoice_bWillBeSpoken;            // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill) == 0x000008, "Wrong alignment on BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill");
static_assert(sizeof(BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill) == 0x000048, "Wrong size on BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill, EntryPoint) == 0x000000, "Member 'BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill, K2Node_Event_CharacterBP) == 0x000018, "Member 'BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill::K2Node_Event_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill, K2Node_CustomEvent_Damage) == 0x000020, "Member 'BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill, K2Node_CustomEvent_DamageType) == 0x000028, "Member 'BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill, K2Node_CustomEvent_DamageReceiver) == 0x000030, "Member 'BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill::K2Node_CustomEvent_DamageReceiver' has a wrong offset!");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill, K2Node_CustomEvent_bRemainHP) == 0x000038, "Member 'BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill::K2Node_CustomEvent_bRemainHP' has a wrong offset!");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill, K2Node_CustomEvent_bDamageIsCut) == 0x000039, "Member 'BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill::K2Node_CustomEvent_bDamageIsCut' has a wrong offset!");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill, K2Node_CustomEvent_SerialNumber) == 0x00003C, "Member 'BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill::K2Node_CustomEvent_SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill, K2Node_CustomEvent_DamageReceiverIsPlayer) == 0x000040, "Member 'BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill::K2Node_CustomEvent_DamageReceiverIsPlayer' has a wrong offset!");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill, K2Node_CustomEvent_bWithSeparatedStandAttack) == 0x000041, "Member 'BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill::K2Node_CustomEvent_bWithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill, K2Node_CustomEvent_bEnemysSeparateStand) == 0x000042, "Member 'BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill::K2Node_CustomEvent_bEnemysSeparateStand' has a wrong offset!");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill, CallFunc_TryToSpeakVoice_bWillBeSpoken) == 0x000043, "Member 'BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill::CallFunc_TryToSpeakVoice_bWillBeSpoken' has a wrong offset!");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000044, "Member 'BP_AJBRodeoShotPistolsSkill_C_ExecuteUbergraph_BP_AJBRodeoShotPistolsSkill::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function BP_AJBRodeoShotPistolsSkill.BP_AJBRodeoShotPistolsSkill_C.OnGiveDamage
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage final
{
public:
	int32                                         Damage_0;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DamageType;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageReceiver;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRemainHP;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDamageIsCut;                                      // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SerialNumber_0;                                    // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DamageReceiverIsPlayer;                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWithSeparatedStandAttack;                         // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bEnemysSeparateStand;                              // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage) == 0x000008, "Wrong alignment on BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage");
static_assert(sizeof(BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage) == 0x000028, "Wrong size on BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage, Damage_0) == 0x000000, "Member 'BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage::Damage_0' has a wrong offset!");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage, DamageType) == 0x000008, "Member 'BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage, DamageReceiver) == 0x000010, "Member 'BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage::DamageReceiver' has a wrong offset!");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage, bRemainHP) == 0x000018, "Member 'BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage::bRemainHP' has a wrong offset!");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage, bDamageIsCut) == 0x000019, "Member 'BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage::bDamageIsCut' has a wrong offset!");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage, SerialNumber_0) == 0x00001C, "Member 'BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage::SerialNumber_0' has a wrong offset!");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage, DamageReceiverIsPlayer) == 0x000020, "Member 'BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage::DamageReceiverIsPlayer' has a wrong offset!");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage, bWithSeparatedStandAttack) == 0x000021, "Member 'BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage::bWithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage, bEnemysSeparateStand) == 0x000022, "Member 'BP_AJBRodeoShotPistolsSkill_C_OnGiveDamage::bEnemysSeparateStand' has a wrong offset!");

// Function BP_AJBRodeoShotPistolsSkill.BP_AJBRodeoShotPistolsSkill_C.BindCharacterDispatcher
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBRodeoShotPistolsSkill_C_BindCharacterDispatcher final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBRodeoShotPistolsSkill_C_BindCharacterDispatcher) == 0x000008, "Wrong alignment on BP_AJBRodeoShotPistolsSkill_C_BindCharacterDispatcher");
static_assert(sizeof(BP_AJBRodeoShotPistolsSkill_C_BindCharacterDispatcher) == 0x000008, "Wrong size on BP_AJBRodeoShotPistolsSkill_C_BindCharacterDispatcher");
static_assert(offsetof(BP_AJBRodeoShotPistolsSkill_C_BindCharacterDispatcher, CharacterBP) == 0x000000, "Member 'BP_AJBRodeoShotPistolsSkill_C_BindCharacterDispatcher::CharacterBP' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AJBIngameUtilFunctionLibrary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "ST_SkillInfo_structs.hpp"
#include "AJB_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AkAudio_structs.hpp"
#include "E_StencilDigit_structs.hpp"
#include "ST_DamageInfo_structs.hpp"
#include "ST_TraceInfo_structs.hpp"


namespace SDK::Params
{

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.CuttingDamage
// 0x0070 (0x0070 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_CuttingDamage final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BaseDamage;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DamageType;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamagePriority                               DamagePriority;                                    // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AttackDistance;                                    // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CuttingRate;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPenetrateAP;                                      // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WithSeparatedStandAttack;                          // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bNotUseCollision;                                  // 0x0032(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempCuttingRate;                                   // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TempDamageIsCut;                                   // 0x0044(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalcDamage_DamageForHPAP;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcDamage_DamageForAAP;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcDamage_CutDamage;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcDamage_bRemainHP;                     // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcDamage_bDamageIsCutByAAP;             // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface;              // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_CuttingDamage) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_CuttingDamage");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_CuttingDamage) == 0x000070, "Wrong size on AJBIngameUtilFunctionLibrary_C_CuttingDamage");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CuttingDamage, DamagedActor) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_CuttingDamage::DamagedActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CuttingDamage, BaseDamage) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_CuttingDamage::BaseDamage' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CuttingDamage, DamageType) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_CuttingDamage::DamageType' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CuttingDamage, SerialNumber) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_CuttingDamage::SerialNumber' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CuttingDamage, DamagePriority) == 0x00001C, "Member 'AJBIngameUtilFunctionLibrary_C_CuttingDamage::DamagePriority' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CuttingDamage, AttackDistance) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_CuttingDamage::AttackDistance' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CuttingDamage, CuttingRate) == 0x000024, "Member 'AJBIngameUtilFunctionLibrary_C_CuttingDamage::CuttingRate' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CuttingDamage, DamageCauser) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_CuttingDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CuttingDamage, bPenetrateAP) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_CuttingDamage::bPenetrateAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CuttingDamage, WithSeparatedStandAttack) == 0x000031, "Member 'AJBIngameUtilFunctionLibrary_C_CuttingDamage::WithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CuttingDamage, bNotUseCollision) == 0x000032, "Member 'AJBIngameUtilFunctionLibrary_C_CuttingDamage::bNotUseCollision' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CuttingDamage, __WorldContext) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_CuttingDamage::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CuttingDamage, TempCuttingRate) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_CuttingDamage::TempCuttingRate' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CuttingDamage, TempDamageIsCut) == 0x000044, "Member 'AJBIngameUtilFunctionLibrary_C_CuttingDamage::TempDamageIsCut' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CuttingDamage, CallFunc_MakeLiteralBool_ReturnValue) == 0x000045, "Member 'AJBIngameUtilFunctionLibrary_C_CuttingDamage::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CuttingDamage, CallFunc_CalcDamage_DamageForHPAP) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_CuttingDamage::CallFunc_CalcDamage_DamageForHPAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CuttingDamage, CallFunc_CalcDamage_DamageForAAP) == 0x00004C, "Member 'AJBIngameUtilFunctionLibrary_C_CuttingDamage::CallFunc_CalcDamage_DamageForAAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CuttingDamage, CallFunc_CalcDamage_CutDamage) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_CuttingDamage::CallFunc_CalcDamage_CutDamage' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CuttingDamage, CallFunc_CalcDamage_bRemainHP) == 0x000054, "Member 'AJBIngameUtilFunctionLibrary_C_CuttingDamage::CallFunc_CalcDamage_bRemainHP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CuttingDamage, CallFunc_CalcDamage_bDamageIsCutByAAP) == 0x000055, "Member 'AJBIngameUtilFunctionLibrary_C_CuttingDamage::CallFunc_CalcDamage_bDamageIsCutByAAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CuttingDamage, K2Node_DynamicCast_AsBI_AJBInterface) == 0x000058, "Member 'AJBIngameUtilFunctionLibrary_C_CuttingDamage::K2Node_DynamicCast_AsBI_AJBInterface' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CuttingDamage, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_CuttingDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.RandomPointInCircle
// 0x0070 (0x0070 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_RandomPointInCircle final
{
public:
	struct FVector                                Origin;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0018(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Length;                                            // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radian;                                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sin_ReturnValue;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Cos_ReturnValue;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue1;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPI_ReturnValue;                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_RandomPointInCircle) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_RandomPointInCircle");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_RandomPointInCircle) == 0x000070, "Wrong size on AJBIngameUtilFunctionLibrary_C_RandomPointInCircle");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInCircle, Origin) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInCircle::Origin' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInCircle, Radius) == 0x00000C, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInCircle::Radius' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInCircle, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInCircle::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInCircle, ReturnValue) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInCircle::ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInCircle, Length) == 0x000024, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInCircle::Length' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInCircle, Radian) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInCircle::Radian' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInCircle, CallFunc_Sin_ReturnValue) == 0x00002C, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInCircle::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInCircle, CallFunc_Cos_ReturnValue) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInCircle::CallFunc_Cos_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInCircle, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInCircle::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInCircle, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInCircle::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInCircle, CallFunc_RandomFloatInRange_ReturnValue) == 0x00003C, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInCircle::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInCircle, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInCircle::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInCircle, CallFunc_Sqrt_ReturnValue) == 0x00004C, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInCircle::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInCircle, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInCircle::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInCircle, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x00005C, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInCircle::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInCircle, CallFunc_RandomFloatInRange_ReturnValue1) == 0x000060, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInCircle::CallFunc_RandomFloatInRange_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInCircle, CallFunc_GetPI_ReturnValue) == 0x000064, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInCircle::CallFunc_GetPI_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInCircle, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInCircle::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInCircle, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x00006C, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInCircle::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GetResolutionScale
// 0x0040 (0x0040 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GetResolutionScale final
{
public:
	class AActor*                                 WorldActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Scale;                                             // 0x0010(0x0008)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x001C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue1;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0038(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GetResolutionScale) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GetResolutionScale");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GetResolutionScale) == 0x000040, "Wrong size on AJBIngameUtilFunctionLibrary_C_GetResolutionScale");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetResolutionScale, WorldActor) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GetResolutionScale::WorldActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetResolutionScale, __WorldContext) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_GetResolutionScale::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetResolutionScale, Scale) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_GetResolutionScale::Scale' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetResolutionScale, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GetResolutionScale::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetResolutionScale, CallFunc_GetViewportSize_ReturnValue) == 0x00001C, "Member 'AJBIngameUtilFunctionLibrary_C_GetResolutionScale::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetResolutionScale, CallFunc_MakeLiteralFloat_ReturnValue1) == 0x000024, "Member 'AJBIngameUtilFunctionLibrary_C_GetResolutionScale::CallFunc_MakeLiteralFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetResolutionScale, CallFunc_BreakVector2D_X) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_GetResolutionScale::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetResolutionScale, CallFunc_BreakVector2D_Y) == 0x00002C, "Member 'AJBIngameUtilFunctionLibrary_C_GetResolutionScale::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetResolutionScale, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_GetResolutionScale::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetResolutionScale, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000034, "Member 'AJBIngameUtilFunctionLibrary_C_GetResolutionScale::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetResolutionScale, CallFunc_MakeVector2D_ReturnValue) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_GetResolutionScale::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GetViewRotation
// 0x0690 (0x0690 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GetViewRotation final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0010(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_AJBHighlightSpectatorPawn_C*> CallFunc_GetAllActorsOfClass_OutActors;            // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	class UAJBHighlightManager*                   CallFunc_GetHighlightManager_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBHighlightSpectatorPawn_C*        CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x005C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0068(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0084(0x000C)(IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetComponentByClass_ReturnValue1;         // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMinimalViewInfo                       CallFunc_GetCameraView_DesiredView;                // 0x00C0(0x0570)()
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_631[0x7];                                      // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue1;               // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0641(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_642[0x6];                                      // 0x0642(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       CallFunc_GetComponentByClass_ReturnValue2;         // 0x0648(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_651[0x3];                                      // 0x0651(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue1;            // 0x0654(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x0660(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x066C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue1;          // 0x0678(0x000C)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GetViewRotation) == 0x000010, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GetViewRotation");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GetViewRotation) == 0x000690, "Wrong size on AJBIngameUtilFunctionLibrary_C_GetViewRotation");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, Actor) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::Actor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, __WorldContext) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, Rotation) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::Rotation' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_GetAJBGameInstance_bSuccess) == 0x00001C, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_GetAllActorsOfClass_OutActors) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_GetHighlightManager_ReturnValue) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_GetHighlightManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_Array_Get_Item) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_IsPlayingReplay_ReturnValue) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_GetComponentByClass_ReturnValue) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_GetForwardVector_ReturnValue) == 0x00005C, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000074, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_FindLookAtRotation_ReturnValue) == 0x000084, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_GetPlayerController_ReturnValue) == 0x000090, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000098, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x0000A0, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_GetViewTarget_ReturnValue) == 0x0000A8, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_GetComponentByClass_ReturnValue1) == 0x0000B0, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_GetCameraView_DesiredView) == 0x0000C0, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_GetCameraView_DesiredView' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_IsValid_ReturnValue1) == 0x000630, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_GetViewTarget_ReturnValue1) == 0x000638, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_GetViewTarget_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_IsValid_ReturnValue2) == 0x000640, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_IsValid_ReturnValue3) == 0x000641, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_GetComponentByClass_ReturnValue2) == 0x000648, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_GetComponentByClass_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_IsValid_ReturnValue4) == 0x000650, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_GetForwardVector_ReturnValue1) == 0x000654, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_GetForwardVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x000660, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_Add_VectorVector_ReturnValue1) == 0x00066C, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewRotation, CallFunc_FindLookAtRotation_ReturnValue1) == 0x000678, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewRotation::CallFunc_FindLookAtRotation_ReturnValue1' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GetScreenCenterPosition
// 0x0040 (0x0040 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition final
{
public:
	class AActor*                                 WorldActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PosX;                                              // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PosY;                                              // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetResolutionScale_Scale;                 // 0x001C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue1;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition) == 0x000040, "Wrong size on AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition, WorldActor) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition::WorldActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition, __WorldContext) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition, PosX) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition::PosX' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition, PosY) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition::PosY' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition, CallFunc_GetResolutionScale_Scale) == 0x00001C, "Member 'AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition::CallFunc_GetResolutionScale_Scale' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition, CallFunc_BreakVector2D_X) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition, CallFunc_BreakVector2D_Y) == 0x00002C, "Member 'AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition, CallFunc_MakeLiteralFloat_ReturnValue1) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition::CallFunc_MakeLiteralFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000034, "Member 'AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x00003C, "Member 'AJBIngameUtilFunctionLibrary_C_GetScreenCenterPosition::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GenerateHitEffect_Local
// 0x0118 (0x0118 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               HitRotation;                                       // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DamageType;                                        // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bCharacter;                                        // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bLeftAP;                                           // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHeadShot;                                         // 0x0032(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              SurfaceType;                                       // 0x0033(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBlockedByAAP;                                     // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ParticleTagBlockedByAAP;                           // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable1;                             // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable2;                             // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable3;                             // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable4;                             // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable5;                             // 0x0078(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable6;                             // 0x0088(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable7;                             // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable8;                             // 0x00A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable9;                             // 0x00A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable3;                               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x00C0(0x000C)(IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default;                             // 0x00CC(0x000C)(IsPlainOldData, NoDestructor)
	struct FGameplayTag                           K2Node_Select1_Default;                            // 0x00D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select2_Default;                            // 0x00E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select3_Default;                            // 0x00E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select4_Default;                            // 0x00F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable5;                               // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select5_Default;                            // 0x0100(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select6_Default;                            // 0x0108(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectOnLocal_ParticleEffect; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local) == 0x000118, "Wrong size on AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, HitLocation) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::HitLocation' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, HitNormal) == 0x00000C, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::HitNormal' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, HitRotation) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::HitRotation' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, DamageType) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::DamageType' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, bCharacter) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::bCharacter' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, bLeftAP) == 0x000031, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::bLeftAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, bHeadShot) == 0x000032, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::bHeadShot' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, SurfaceType) == 0x000033, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::SurfaceType' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, bBlockedByAAP) == 0x000034, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, ParticleTagBlockedByAAP) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::ParticleTagBlockedByAAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, __WorldContext) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, Temp_byte_Variable) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, Temp_struct_Variable) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, Temp_struct_Variable1) == 0x000058, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, Temp_struct_Variable2) == 0x000060, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, Temp_struct_Variable3) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, Temp_struct_Variable4) == 0x000070, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, Temp_struct_Variable5) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::Temp_struct_Variable5' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, Temp_bool_Variable) == 0x000080, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, Temp_bool_Variable1) == 0x000081, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, Temp_struct_Variable6) == 0x000088, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::Temp_struct_Variable6' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, Temp_struct_Variable7) == 0x000090, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::Temp_struct_Variable7' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, Temp_bool_Variable2) == 0x000098, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, Temp_struct_Variable8) == 0x0000A0, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::Temp_struct_Variable8' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, Temp_struct_Variable9) == 0x0000A8, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::Temp_struct_Variable9' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, Temp_bool_Variable3) == 0x0000B0, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, Temp_bool_Variable4) == 0x0000B1, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B4, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, CallFunc_FindLookAtRotation_ReturnValue) == 0x0000C0, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, K2Node_Select_Default) == 0x0000CC, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, K2Node_Select1_Default) == 0x0000D8, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, K2Node_Select2_Default) == 0x0000E0, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, K2Node_Select3_Default) == 0x0000E8, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, K2Node_Select4_Default) == 0x0000F0, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, Temp_bool_Variable5) == 0x0000F8, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, K2Node_Select5_Default) == 0x000100, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::K2Node_Select5_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, K2Node_Select6_Default) == 0x000108, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::K2Node_Select6_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local, CallFunc_RequestParticleEffectOnLocal_ParticleEffect) == 0x000110, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitEffect_Local::CallFunc_RequestParticleEffectOnLocal_ParticleEffect' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.ParcentageToRatio
// 0x0020 (0x0020 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_ParcentageToRatio final
{
public:
	int32                                         Parcentage;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ratio;                                             // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_ParcentageToRatio) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_ParcentageToRatio");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_ParcentageToRatio) == 0x000020, "Wrong size on AJBIngameUtilFunctionLibrary_C_ParcentageToRatio");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ParcentageToRatio, Parcentage) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_ParcentageToRatio::Parcentage' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ParcentageToRatio, __WorldContext) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_ParcentageToRatio::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ParcentageToRatio, Ratio) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_ParcentageToRatio::Ratio' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ParcentageToRatio, CallFunc_Clamp_ReturnValue) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_ParcentageToRatio::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ParcentageToRatio, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_ParcentageToRatio::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ParcentageToRatio, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00001C, "Member 'AJBIngameUtilFunctionLibrary_C_ParcentageToRatio::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.CalcHitLocation(Deprecated)
// 0x0190 (0x0190 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_ final
{
public:
	class AActor*                                 OwnActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSweep;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitResult;                                         // 0x0010(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bSafety;                                           // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x00A8(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x00B4(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C3[0x1];                                       // 0x00C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0128(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0134(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0140(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x014C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x0158(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0164(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_173[0x1];                                      // 0x0173(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select1_Default;                            // 0x0174(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select2_Default;                            // 0x0180(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_) == 0x000190, "Wrong size on AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, OwnActor) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::OwnActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, bSweep) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::bSweep' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, HitResult) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::HitResult' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, bSafety) == 0x000098, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::bSafety' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, __WorldContext) == 0x0000A0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, HitLocation) == 0x0000A8, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::HitLocation' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, HitNormal) == 0x0000B4, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::HitNormal' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, Temp_bool_Variable) == 0x0000C0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, CallFunc_BreakHitResult_bBlockingHit) == 0x0000C1, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000C2, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, CallFunc_BreakHitResult_Time) == 0x0000C4, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, CallFunc_BreakHitResult_Distance) == 0x0000C8, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, CallFunc_BreakHitResult_Location) == 0x0000CC, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, CallFunc_BreakHitResult_ImpactPoint) == 0x0000D8, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, CallFunc_BreakHitResult_Normal) == 0x0000E4, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, CallFunc_BreakHitResult_ImpactNormal) == 0x0000F0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, CallFunc_BreakHitResult_PhysMat) == 0x000100, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, CallFunc_BreakHitResult_HitActor) == 0x000108, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, CallFunc_BreakHitResult_HitComponent) == 0x000110, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, CallFunc_BreakHitResult_HitBoneName) == 0x000118, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, CallFunc_BreakHitResult_HitItem) == 0x000120, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, CallFunc_BreakHitResult_FaceIndex) == 0x000124, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, CallFunc_BreakHitResult_TraceStart) == 0x000128, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, CallFunc_BreakHitResult_TraceEnd) == 0x000134, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, CallFunc_GetActorForwardVector_ReturnValue) == 0x000140, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00014C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, CallFunc_NegateVector_ReturnValue) == 0x000158, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, K2Node_Select_Default) == 0x000164, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, Temp_bool_Variable1) == 0x000170, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000171, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, Temp_bool_Variable2) == 0x000172, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, K2Node_Select1_Default) == 0x000174, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_, K2Node_Select2_Default) == 0x000180, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHitLocation_Deprecated_::K2Node_Select2_Default' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GetHitObjectTypesByPrevTrace(Deprecated)
// 0x0028 (0x0028 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GetHitObjectTypesByPrevTrace_Deprecated_ final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      NewParam;                                          // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GetHitObjectTypesByPrevTrace_Deprecated_) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GetHitObjectTypesByPrevTrace_Deprecated_");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GetHitObjectTypesByPrevTrace_Deprecated_) == 0x000028, "Wrong size on AJBIngameUtilFunctionLibrary_C_GetHitObjectTypesByPrevTrace_Deprecated_");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetHitObjectTypesByPrevTrace_Deprecated_, __WorldContext) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GetHitObjectTypesByPrevTrace_Deprecated_::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetHitObjectTypesByPrevTrace_Deprecated_, NewParam) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_GetHitObjectTypesByPrevTrace_Deprecated_::NewParam' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetHitObjectTypesByPrevTrace_Deprecated_, K2Node_MakeArray_Array) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GetHitObjectTypesByPrevTrace_Deprecated_::K2Node_MakeArray_Array' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.AJBMultiLineTrace(Deprecated)
// 0x01D0 (0x01D0 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_ final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0014(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTargetHit;                                        // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        TargetComponent;                                   // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0040(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_GetHitObjectTypesByPrevTrace_Deprecated__NewParam; // 0x0058(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0070(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_LineTraceMultiForObjects_OutHits;         // 0x0080(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceMultiForObjects_ReturnValue;     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x00A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B[0x1];                                      // 0x012B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0134(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0140(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x014C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0158(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0190(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x019C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface;              // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckTargetSelf_bTarget;                  // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bCharacter;                   // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bLeftAP;                      // 0x01BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_OwnHitParam_ParticleTagBlockedByAAP;      // 0x01C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_OwnHitParam_SETagBlockedByAAP;            // 0x01C8(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_) == 0x0001D0, "Wrong size on AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, DamageCauser) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::DamageCauser' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, Start) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::Start' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, End) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::End' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, __WorldContext) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, bTargetHit) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::bTargetHit' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, TargetActor) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::TargetActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, TargetComponent) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::TargetComponent' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, TargetLocation) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::TargetLocation' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_GetHitObjectTypesByPrevTrace_Deprecated__NewParam) == 0x000058, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_GetHitObjectTypesByPrevTrace_Deprecated__NewParam' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, Temp_int_Array_Index_Variable) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, Temp_bool_True_if_break_was_hit_Variable) == 0x00006C, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_Not_PreBool_ReturnValue) == 0x00006D, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, Temp_object_Variable) == 0x000070, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_LineTraceMultiForObjects_OutHits) == 0x000080, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_LineTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_LineTraceMultiForObjects_ReturnValue) == 0x000090, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_LineTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_BooleanAND_ReturnValue) == 0x000128, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_BreakHitResult_bBlockingHit) == 0x000129, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_BreakHitResult_bInitialOverlap) == 0x00012A, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_BreakHitResult_Time) == 0x00012C, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_BreakHitResult_Distance) == 0x000130, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_BreakHitResult_Location) == 0x000134, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_BreakHitResult_ImpactPoint) == 0x000140, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_BreakHitResult_Normal) == 0x00014C, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_BreakHitResult_ImpactNormal) == 0x000158, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_BreakHitResult_HitItem) == 0x000188, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_BreakHitResult_FaceIndex) == 0x00018C, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_BreakHitResult_TraceStart) == 0x000190, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_BreakHitResult_TraceEnd) == 0x00019C, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, K2Node_DynamicCast_AsBI_AJBInterface) == 0x0001A8, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::K2Node_DynamicCast_AsBI_AJBInterface' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, K2Node_DynamicCast_bSuccess) == 0x0001B8, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_CheckTargetSelf_bTarget) == 0x0001B9, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_CheckTargetSelf_bTarget' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_OwnHitParam_bCharacter) == 0x0001BA, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_OwnHitParam_bCharacter' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_OwnHitParam_bLeftAP) == 0x0001BB, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_OwnHitParam_bLeftAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_OwnHitParam_ParticleTagBlockedByAAP) == 0x0001C0, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_OwnHitParam_ParticleTagBlockedByAAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_, CallFunc_OwnHitParam_SETagBlockedByAAP) == 0x0001C8, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTrace_Deprecated_::CallFunc_OwnHitParam_SETagBlockedByAAP' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.ChangeViewTarget
// 0x0030 (0x0030 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_ChangeViewTarget final
{
public:
	class AActor*                                 NewViewTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendTime;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAutoManageActiveCameraTarget_ReturnValue; // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_ChangeViewTarget) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_ChangeViewTarget");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_ChangeViewTarget) == 0x000030, "Wrong size on AJBIngameUtilFunctionLibrary_C_ChangeViewTarget");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeViewTarget, NewViewTarget) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeViewTarget::NewViewTarget' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeViewTarget, BlendTime) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeViewTarget::BlendTime' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeViewTarget, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeViewTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeViewTarget, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeViewTarget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeViewTarget, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeViewTarget::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeViewTarget, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeViewTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeViewTarget, CallFunc_GetAutoManageActiveCameraTarget_ReturnValue) == 0x000029, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeViewTarget::CallFunc_GetAutoManageActiveCameraTarget_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GenerateDamageEffect
// 0x0280 (0x0280 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           DamageType;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bRemainHP;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDamageIsCut;                                      // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetDamageAreaDamageSEGameplayTag_Inside_Damage_Area_SE; // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue1;         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTargetActor_ViewTargetActor;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent1; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface; // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy;         // 0x00B0(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight;   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DamageAreaDamageFX_C*               K2Node_DynamicCast_AsBP_Damage_Area_Damage_FX;     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0xF];                                       // 0x00F1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_DamageAreaFXInterface_C> CallFunc_AppearDamageAreaFX_self_CastInput;        // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue1;               // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCapsuleComponent*                      CallFunc_GetComponentByClass_ReturnValue;          // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_Select_Default;                             // 0x0180(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect1; // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorRelativeTransform_SweepHitResult; // 0x01B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       CallFunc_GetComponentsByTag_ReturnValue;           // 0x0240(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_MatchesTag_ReturnValue1;                  // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_Array_Get_Item;                           // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDamageInfo_bResult;                    // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FST_DamageInfo                         CallFunc_GetDamageInfo_DamageInfo;                 // 0x0269(0x0003)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x026D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26E[0x2];                                      // 0x026E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue2;                  // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect) == 0x000010, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect) == 0x000280, "Wrong size on AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, DamagedActor) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::DamagedActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, DamageType) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::DamageType' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, bRemainHP) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::bRemainHP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, bDamageIsCut) == 0x000011, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::bDamageIsCut' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, __WorldContext) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_GetDamageAreaDamageSEGameplayTag_Inside_Damage_Area_SE) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_GetDamageAreaDamageSEGameplayTag_Inside_Damage_Area_SE' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_Not_PreBool_ReturnValue1) == 0x000039, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_K2_GetRootComponent_ReturnValue1) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_K2_GetRootComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_GetViewTargetActor_ViewTargetActor) == 0x000058, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_GetViewTargetActor_ViewTargetActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent1) == 0x000060, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000070, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect) == 0x000080, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000088, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, K2Node_DynamicCast_bSuccess1) == 0x000090, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface) == 0x000098, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, K2Node_DynamicCast_bSuccess2) == 0x0000A8, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_MatchesTag_ReturnValue) == 0x0000A9, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_GetGameplayTags_TagContainerCopy) == 0x0000B0, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_GetGameplayTags_TagContainerCopy' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_HasTag_ReturnValue) == 0x0000D0, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight) == 0x0000D4, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D8, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_MakeVector_ReturnValue) == 0x0000DC, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, K2Node_DynamicCast_AsBP_Damage_Area_Damage_FX) == 0x0000E8, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::K2Node_DynamicCast_AsBP_Damage_Area_Damage_FX' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, K2Node_DynamicCast_bSuccess3) == 0x0000F0, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_MakeTransform_ReturnValue) == 0x000100, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_AppearDamageAreaFX_self_CastInput) == 0x000130, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_AppearDamageAreaFX_self_CastInput' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_MakeTransform_ReturnValue1) == 0x000140, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_MakeTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, Temp_int_Array_Index_Variable) == 0x000170, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, Temp_bool_Variable) == 0x000174, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_GetComponentByClass_ReturnValue) == 0x000178, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, K2Node_Select_Default) == 0x000180, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect1) == 0x0001B0, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_K2_SetActorRelativeTransform_SweepHitResult) == 0x0001B8, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_K2_SetActorRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_GetComponentsByTag_ReturnValue) == 0x000240, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_MatchesTag_ReturnValue1) == 0x000250, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_MatchesTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_Array_Get_Item) == 0x000258, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_Array_Length_ReturnValue) == 0x000260, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, Temp_int_Loop_Counter_Variable) == 0x000264, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_GetDamageInfo_bResult) == 0x000268, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_GetDamageInfo_bResult' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_GetDamageInfo_DamageInfo) == 0x000269, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_GetDamageInfo_DamageInfo' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_BooleanAND_ReturnValue) == 0x00026C, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_Less_IntInt_ReturnValue) == 0x00026D, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_Add_IntInt_ReturnValue) == 0x000270, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect, CallFunc_MatchesTag_ReturnValue2) == 0x000274, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageEffect::CallFunc_MatchesTag_ReturnValue2' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.ExtractFloatValuesFromTagValueMap
// 0x00F8 (0x00F8 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap final
{
public:
	struct FGameplayTagContainer                  TargetTagContainer;                                // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ExtractedTag;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, float>              TagValueMapRef;                                    // 0x0028(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor)
	class UObject*                                __WorldContext;                                    // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 ReturnValues;                                      // 0x0080(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<float>                                 Temp_FloatValues;                                  // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FGameplayTag>                   Temp_GameplayTagContainer;                         // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x00B8(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value;                           // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap) == 0x0000F8, "Wrong size on AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap, TargetTagContainer) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap::TargetTagContainer' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap, ExtractedTag) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap::ExtractedTag' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap, TagValueMapRef) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap::TagValueMapRef' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap, __WorldContext) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap, ReturnValues) == 0x000080, "Member 'AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap::ReturnValues' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap, Temp_FloatValues) == 0x000090, "Member 'AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap::Temp_FloatValues' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap, Temp_GameplayTagContainer) == 0x0000A0, "Member 'AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap::Temp_GameplayTagContainer' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap, Temp_int_Array_Index_Variable) == 0x0000B0, "Member 'AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x0000B8, "Member 'AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap, Temp_int_Loop_Counter_Variable) == 0x0000C8, "Member 'AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap, CallFunc_Add_IntInt_ReturnValue) == 0x0000CC, "Member 'AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap, CallFunc_Less_IntInt_ReturnValue) == 0x0000E0, "Member 'AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap, CallFunc_Map_Find_Value) == 0x0000E4, "Member 'AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap, CallFunc_Map_Find_ReturnValue) == 0x0000E8, "Member 'AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap, CallFunc_Array_Add_ReturnValue) == 0x0000EC, "Member 'AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap, CallFunc_MatchesTag_ReturnValue) == 0x0000F0, "Member 'AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap, CallFunc_BooleanAND_ReturnValue) == 0x0000F1, "Member 'AJBIngameUtilFunctionLibrary_C_ExtractFloatValuesFromTagValueMap::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.MultiplyFloatValues
// 0x0040 (0x0040 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues final
{
public:
	TArray<float>                                 Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ResultParam;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_Result;                                       // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues) == 0x000040, "Wrong size on AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues, Array) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues::Array' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues, ResultParam) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues::ResultParam' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues, Temp_Result) == 0x00001C, "Member 'AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues::Temp_Result' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues, Temp_int_Array_Index_Variable) == 0x000024, "Member 'AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues, CallFunc_Array_Get_Item) == 0x00002C, "Member 'AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_MultiplyFloatValues::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.AddFloatValues
// 0x0040 (0x0040 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_AddFloatValues final
{
public:
	TArray<float>                                 Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ResultParam;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_Result;                                       // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_AddFloatValues) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_AddFloatValues");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_AddFloatValues) == 0x000040, "Wrong size on AJBIngameUtilFunctionLibrary_C_AddFloatValues");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AddFloatValues, Array) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_AddFloatValues::Array' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AddFloatValues, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_AddFloatValues::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AddFloatValues, ResultParam) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_AddFloatValues::ResultParam' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AddFloatValues, Temp_Result) == 0x00001C, "Member 'AJBIngameUtilFunctionLibrary_C_AddFloatValues::Temp_Result' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AddFloatValues, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_AddFloatValues::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AddFloatValues, Temp_int_Array_Index_Variable) == 0x000024, "Member 'AJBIngameUtilFunctionLibrary_C_AddFloatValues::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AddFloatValues, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_AddFloatValues::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AddFloatValues, CallFunc_Array_Get_Item) == 0x00002C, "Member 'AJBIngameUtilFunctionLibrary_C_AddFloatValues::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AddFloatValues, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_AddFloatValues::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AddFloatValues, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'AJBIngameUtilFunctionLibrary_C_AddFloatValues::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AddFloatValues, CallFunc_Add_FloatFloat_ReturnValue) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_AddFloatValues::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GetPlayerMatchingIndexIdByActor
// 0x0030 (0x0030 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GetPlayerMatchingIndexIdByActor final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerMatchingIndex;                               // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LPlayerID;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GetPlayerMatchingIndexIdByActor) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GetPlayerMatchingIndexIdByActor");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GetPlayerMatchingIndexIdByActor) == 0x000030, "Wrong size on AJBIngameUtilFunctionLibrary_C_GetPlayerMatchingIndexIdByActor");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPlayerMatchingIndexIdByActor, TargetActor) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GetPlayerMatchingIndexIdByActor::TargetActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPlayerMatchingIndexIdByActor, __WorldContext) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_GetPlayerMatchingIndexIdByActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPlayerMatchingIndexIdByActor, PlayerMatchingIndex) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_GetPlayerMatchingIndexIdByActor::PlayerMatchingIndex' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPlayerMatchingIndexIdByActor, LPlayerID) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_GetPlayerMatchingIndexIdByActor::LPlayerID' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPlayerMatchingIndexIdByActor, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GetPlayerMatchingIndexIdByActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPlayerMatchingIndexIdByActor, K2Node_DynamicCast_AsAJBIn_Game_Character_Base) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_GetPlayerMatchingIndexIdByActor::K2Node_DynamicCast_AsAJBIn_Game_Character_Base' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPlayerMatchingIndexIdByActor, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_GetPlayerMatchingIndexIdByActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.TryGetTraceInfo(Deprecated)
// 0x0058 (0x0058 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_ final
{
public:
	struct FGameplayTag                           TraceInfoTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               DrawDebugTrace;                                    // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DrawTime;                                          // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_TraceInfo                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0008)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGamePlayerController*             K2Node_DynamicCast_AsAJBIn_Game_Player_Controller; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_) == 0x000058, "Wrong size on AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_, TraceInfoTag) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_::TraceInfoTag' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_, __WorldContext) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_, DrawDebugTrace) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_::DrawDebugTrace' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_, DrawTime) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_::DrawTime' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_, CallFunc_GetTagName_ReturnValue) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_, K2Node_DynamicCast_AsAJBIn_Game_Player_Controller) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_::K2Node_DynamicCast_AsAJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_, CallFunc_IsDedicatedServer_ReturnValue) == 0x000041, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_, CallFunc_Conv_NameToString_ReturnValue) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetTraceInfo_Deprecated_::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.AJBMultiSphereTraceForObjects(Deprecated)
// 0x00B0 (0x00B0 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_ final
{
public:
	struct FGameplayTag                           TraceInfoTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0014(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x0028(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          bTraceComplex;                                     // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0040(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          bIgnoreSelf;                                       // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TraceColor;                                        // 0x0054(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TraceHitColor;                                     // 0x0064(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     OutHits;                                           // 0x0080(0x0010)(Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	EDrawDebugTrace                               CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace; // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_TryGetTraceInfo_Deprecated__DrawTime;     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits;       // 0x0098(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue;   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_) == 0x0000B0, "Wrong size on AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_, TraceInfoTag) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_::TraceInfoTag' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_, Start) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_::Start' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_, End) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_::End' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_, Radius) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_::Radius' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_, ObjectTypes) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_::ObjectTypes' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_, bTraceComplex) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_::bTraceComplex' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_, ActorsToIgnore) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_, bIgnoreSelf) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_, TraceColor) == 0x000054, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_::TraceColor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_, TraceHitColor) == 0x000064, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_::TraceHitColor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_, __WorldContext) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_, OutHits) == 0x000080, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_::OutHits' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_, ReturnValue) == 0x000090, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_::ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_, CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace) == 0x000091, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_::CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_, CallFunc_TryGetTraceInfo_Deprecated__DrawTime) == 0x000094, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_::CallFunc_TryGetTraceInfo_Deprecated__DrawTime' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_, CallFunc_SphereTraceMultiForObjects_OutHits) == 0x000098, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_::CallFunc_SphereTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_, CallFunc_SphereTraceMultiForObjects_ReturnValue) == 0x0000A8, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceForObjects_Deprecated_::CallFunc_SphereTraceMultiForObjects_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.AJBLineTraceForObjects(Deprecated)
// 0x0198 (0x0198 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_ final
{
public:
	struct FGameplayTag                           TraceInfoTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0014(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x0020(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          bTraceComplex;                                     // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0038(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          bIgnoreSelf;                                       // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TraceColor;                                        // 0x004C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TraceHitColor;                                     // 0x005C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             OutHit;                                            // 0x0078(0x0088)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0100(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	EDrawDebugTrace                               CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace; // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_TryGetTraceInfo_Deprecated__DrawTime;     // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0108(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_) == 0x000198, "Wrong size on AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_, TraceInfoTag) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_::TraceInfoTag' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_, Start) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_::Start' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_, End) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_::End' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_, ObjectTypes) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_::ObjectTypes' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_, bTraceComplex) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_::bTraceComplex' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_, ActorsToIgnore) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_, bIgnoreSelf) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_, TraceColor) == 0x00004C, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_::TraceColor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_, TraceHitColor) == 0x00005C, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_::TraceHitColor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_, __WorldContext) == 0x000070, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_, OutHit) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_::OutHit' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_, ReturnValue) == 0x000100, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_::ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_, CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace) == 0x000101, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_::CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_, CallFunc_TryGetTraceInfo_Deprecated__DrawTime) == 0x000104, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_::CallFunc_TryGetTraceInfo_Deprecated__DrawTime' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000108, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000190, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceForObjects_Deprecated_::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.AJBSphereTraceForObjects(Deprecated)
// 0x01A0 (0x01A0 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_ final
{
public:
	struct FGameplayTag                           TraceInfoTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0014(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x0028(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          bTraceComplex;                                     // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0040(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          bIgnoreSelf;                                       // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TraceColor;                                        // 0x0054(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TraceHitColor;                                     // 0x0064(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             OutHit;                                            // 0x0080(0x0088)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0108(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	EDrawDebugTrace                               CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace; // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_TryGetTraceInfo_Deprecated__DrawTime;     // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x0110(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_) == 0x0001A0, "Wrong size on AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_, TraceInfoTag) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_::TraceInfoTag' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_, Start) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_::Start' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_, End) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_::End' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_, Radius) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_::Radius' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_, ObjectTypes) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_::ObjectTypes' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_, bTraceComplex) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_::bTraceComplex' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_, ActorsToIgnore) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_, bIgnoreSelf) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_, TraceColor) == 0x000054, "Member 'AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_::TraceColor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_, TraceHitColor) == 0x000064, "Member 'AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_::TraceHitColor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_, __WorldContext) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_, OutHit) == 0x000080, "Member 'AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_::OutHit' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_, ReturnValue) == 0x000108, "Member 'AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_::ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_, CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace) == 0x000109, "Member 'AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_::CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_, CallFunc_TryGetTraceInfo_Deprecated__DrawTime) == 0x00010C, "Member 'AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_::CallFunc_TryGetTraceInfo_Deprecated__DrawTime' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x000110, "Member 'AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x000198, "Member 'AJBIngameUtilFunctionLibrary_C_AJBSphereTraceForObjects_Deprecated_::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.AJBLineTraceByChannel(Deprecated)
// 0x0188 (0x0188 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_ final
{
public:
	struct FGameplayTag                           TraceInfoTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0014(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETraceTypeQuery                               TraceChannel;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTraceComplex;                                     // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0028(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          bIgnoreSelf;                                       // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TraceColor;                                        // 0x003C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TraceHitColor;                                     // 0x004C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             OutHit;                                            // 0x0068(0x0088)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00F0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	EDrawDebugTrace                               CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace; // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_TryGetTraceInfo_Deprecated__DrawTime;     // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00F8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_) == 0x000188, "Wrong size on AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_, TraceInfoTag) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_::TraceInfoTag' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_, Start) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_::Start' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_, End) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_::End' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_, TraceChannel) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_::TraceChannel' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_, bTraceComplex) == 0x000021, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_::bTraceComplex' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_, ActorsToIgnore) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_, bIgnoreSelf) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_, TraceColor) == 0x00003C, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_::TraceColor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_, TraceHitColor) == 0x00004C, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_::TraceHitColor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_, __WorldContext) == 0x000060, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_, OutHit) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_::OutHit' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_, ReturnValue) == 0x0000F0, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_::ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_, CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace) == 0x0000F1, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_::CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_, CallFunc_TryGetTraceInfo_Deprecated__DrawTime) == 0x0000F4, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_::CallFunc_TryGetTraceInfo_Deprecated__DrawTime' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_, CallFunc_LineTraceSingle_OutHit) == 0x0000F8, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_, CallFunc_LineTraceSingle_ReturnValue) == 0x000180, "Member 'AJBIngameUtilFunctionLibrary_C_AJBLineTraceByChannel_Deprecated_::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.AJBCapsuleTraceByChannel(Deprecated)
// 0x0190 (0x0190 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_ final
{
public:
	struct FGameplayTag                           TraceInfoTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0014(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HalfHeight;                                        // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETraceTypeQuery                               TraceChannel;                                      // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTraceComplex;                                     // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0030(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          bIgnoreSelf;                                       // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TraceColor;                                        // 0x0044(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TraceHitColor;                                     // 0x0054(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             OutHit;                                            // 0x0070(0x0088)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00F8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	EDrawDebugTrace                               CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace; // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_TryGetTraceInfo_Deprecated__DrawTime;     // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_CapsuleTraceSingle_OutHit;                // 0x0100(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingle_ReturnValue;           // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_) == 0x000190, "Wrong size on AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_, TraceInfoTag) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_::TraceInfoTag' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_, Start) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_::Start' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_, End) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_::End' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_, Radius) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_::Radius' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_, HalfHeight) == 0x000024, "Member 'AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_::HalfHeight' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_, TraceChannel) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_::TraceChannel' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_, bTraceComplex) == 0x000029, "Member 'AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_::bTraceComplex' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_, ActorsToIgnore) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_, bIgnoreSelf) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_, TraceColor) == 0x000044, "Member 'AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_::TraceColor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_, TraceHitColor) == 0x000054, "Member 'AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_::TraceHitColor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_, __WorldContext) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_, OutHit) == 0x000070, "Member 'AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_::OutHit' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_, ReturnValue) == 0x0000F8, "Member 'AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_::ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_, CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace) == 0x0000F9, "Member 'AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_::CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_, CallFunc_TryGetTraceInfo_Deprecated__DrawTime) == 0x0000FC, "Member 'AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_::CallFunc_TryGetTraceInfo_Deprecated__DrawTime' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_, CallFunc_CapsuleTraceSingle_OutHit) == 0x000100, "Member 'AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_::CallFunc_CapsuleTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_, CallFunc_CapsuleTraceSingle_ReturnValue) == 0x000188, "Member 'AJBIngameUtilFunctionLibrary_C_AJBCapsuleTraceByChannel_Deprecated_::CallFunc_CapsuleTraceSingle_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GetDamageInfo
// 0x0028 (0x0028 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GetDamageInfo final
{
public:
	struct FGameplayTag                           DamageTypeTag;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResult;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FST_DamageInfo                         DamageInfo;                                        // 0x0011(0x0003)(Parm, OutParm, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_DamageInfo                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0003)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GetDamageInfo) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GetDamageInfo");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GetDamageInfo) == 0x000028, "Wrong size on AJBIngameUtilFunctionLibrary_C_GetDamageInfo");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetDamageInfo, DamageTypeTag) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GetDamageInfo::DamageTypeTag' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetDamageInfo, __WorldContext) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_GetDamageInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetDamageInfo, bResult) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_GetDamageInfo::bResult' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetDamageInfo, DamageInfo) == 0x000011, "Member 'AJBIngameUtilFunctionLibrary_C_GetDamageInfo::DamageInfo' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetDamageInfo, CallFunc_GetTagName_ReturnValue) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GetDamageInfo::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetDamageInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_GetDamageInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetDamageInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000023, "Member 'AJBIngameUtilFunctionLibrary_C_GetDamageInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GenerateHitSECharacter
// 0x0068 (0x0068 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter final
{
public:
	bool                                          bHeadShot;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        AttachTarget;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBlockedByAAP;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           SETagBlockedByAAP;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable1;                             // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select1_Default;                            // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter) == 0x000068, "Wrong size on AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter, bHeadShot) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter::bHeadShot' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter, AttachTarget) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter::AttachTarget' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter, bBlockedByAAP) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter::bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter, SETagBlockedByAAP) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter::SETagBlockedByAAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter, __WorldContext) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter, Temp_struct_Variable) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter, Temp_bool_Variable) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter, Temp_struct_Variable1) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter, Temp_bool_Variable1) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter, K2Node_Select_Default) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter, K2Node_Select1_Default) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000058, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter, CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent) == 0x000060, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSECharacter::CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GenerateHitSENonCharacter
// 0x0080 (0x0080 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DamageType;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           OverrideSETag;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable1;                             // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable2;                             // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable3;                             // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable4;                             // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	ESkillAttackType                              Temp_byte_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDamageInfo_bResult;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FST_DamageInfo                         CallFunc_GetDamageInfo_DamageInfo;                 // 0x005A(0x0003)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue1;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select1_Default;                            // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter) == 0x000080, "Wrong size on AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter, HitLocation) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter::HitLocation' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter, DamageType) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter::DamageType' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter, OverrideSETag) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter::OverrideSETag' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter, __WorldContext) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter, Temp_struct_Variable) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter, Temp_struct_Variable1) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter, Temp_struct_Variable2) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter, Temp_struct_Variable3) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter, Temp_struct_Variable4) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter, Temp_byte_Variable) == 0x000058, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter, CallFunc_GetDamageInfo_bResult) == 0x000059, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter::CallFunc_GetDamageInfo_bResult' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter, CallFunc_GetDamageInfo_DamageInfo) == 0x00005A, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter::CallFunc_GetDamageInfo_DamageInfo' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter, Temp_bool_Variable) == 0x00005D, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter, K2Node_Select_Default) == 0x000060, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter, CallFunc_IsGameplayTagValid_ReturnValue1) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter::CallFunc_IsGameplayTagValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter, K2Node_Select1_Default) == 0x000070, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateHitSENonCharacter::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GenerateDamageSENonCharacter
// 0x0068 (0x0068 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable1;                             // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable2;                             // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable3;                             // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable4;                             // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable5;                             // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter) == 0x000068, "Wrong size on AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter, HitLocation) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter::HitLocation' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter, SurfaceType) == 0x00000C, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter::SurfaceType' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter, Temp_struct_Variable) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter, Temp_struct_Variable1) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter, Temp_struct_Variable2) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter, Temp_struct_Variable3) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter, Temp_struct_Variable4) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter, Temp_struct_Variable5) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter::Temp_struct_Variable5' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter, Temp_byte_Variable) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter, K2Node_Select_Default) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000058, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000060, "Member 'AJBIngameUtilFunctionLibrary_C_GenerateDamageSENonCharacter::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.CalcHeadShot(Deprecated)
// 0x01A8 (0x01A8 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_ final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceLength;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHeadShot;                                         // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array1;                           // 0x0068(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_AJBMultiSphereTraceForObjects_Deprecated__OutHits; // 0x0078(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_AJBMultiSphereTraceForObjects_Deprecated__ReturnValue; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0098(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x012C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0138(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0144(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0150(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0188(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0194(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_) == 0x0001A8, "Wrong size on AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, HitActor) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::HitActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, HitLocation) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::HitLocation' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, Direction) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::Direction' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, Radius) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::Radius' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, TraceLength) == 0x000024, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::TraceLength' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, __WorldContext) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, bHeadShot) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::bHeadShot' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000034, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, K2Node_MakeArray_Array) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, Temp_int_Array_Index_Variable) == 0x000060, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, K2Node_MakeArray_Array1) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_AJBMultiSphereTraceForObjects_Deprecated__OutHits) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_AJBMultiSphereTraceForObjects_Deprecated__OutHits' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_AJBMultiSphereTraceForObjects_Deprecated__ReturnValue) == 0x000088, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_AJBMultiSphereTraceForObjects_Deprecated__ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_Array_Get_Item) == 0x000098, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_BreakHitResult_bBlockingHit) == 0x000120, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_BreakHitResult_bInitialOverlap) == 0x000121, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_BreakHitResult_Time) == 0x000124, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_BreakHitResult_Distance) == 0x000128, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_BreakHitResult_Location) == 0x00012C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_BreakHitResult_ImpactPoint) == 0x000138, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_BreakHitResult_Normal) == 0x000144, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_BreakHitResult_ImpactNormal) == 0x000150, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_BreakHitResult_PhysMat) == 0x000160, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_BreakHitResult_HitActor) == 0x000168, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_BreakHitResult_HitComponent) == 0x000170, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_BreakHitResult_HitBoneName) == 0x000178, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_BreakHitResult_HitItem) == 0x000180, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_BreakHitResult_FaceIndex) == 0x000184, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_BreakHitResult_TraceStart) == 0x000188, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_BreakHitResult_TraceEnd) == 0x000194, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001A0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcHeadShot_Deprecated_::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.AJBMultiLineTraceForObjects(Deprecated)
// 0x00A8 (0x00A8 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_ final
{
public:
	struct FGameplayTag                           TraceInfoTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0014(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x0020(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          bTraceComplex;                                     // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0038(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          bIgnoreSelf;                                       // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TraceColor;                                        // 0x004C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TraceHitColor;                                     // 0x005C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     OutHits;                                           // 0x0078(0x0010)(Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	EDrawDebugTrace                               CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace; // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_TryGetTraceInfo_Deprecated__DrawTime;     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_LineTraceMultiForObjects_OutHits;         // 0x0090(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceMultiForObjects_ReturnValue;     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_) == 0x0000A8, "Wrong size on AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_, TraceInfoTag) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_::TraceInfoTag' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_, Start) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_::Start' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_, End) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_::End' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_, ObjectTypes) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_::ObjectTypes' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_, bTraceComplex) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_::bTraceComplex' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_, ActorsToIgnore) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_, bIgnoreSelf) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_, TraceColor) == 0x00004C, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_::TraceColor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_, TraceHitColor) == 0x00005C, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_::TraceHitColor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_, __WorldContext) == 0x000070, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_, OutHits) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_::OutHits' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_, ReturnValue) == 0x000088, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_::ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_, CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace) == 0x000089, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_::CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_, CallFunc_TryGetTraceInfo_Deprecated__DrawTime) == 0x00008C, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_::CallFunc_TryGetTraceInfo_Deprecated__DrawTime' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_, CallFunc_LineTraceMultiForObjects_OutHits) == 0x000090, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_::CallFunc_LineTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_, CallFunc_LineTraceMultiForObjects_ReturnValue) == 0x0000A0, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiLineTraceForObjects_Deprecated_::CallFunc_LineTraceMultiForObjects_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.RInterpToQuaternion
// 0x00D0 (0x00D0 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion final
{
public:
	struct FRotator                               Current;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FRotator                               Target;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         DeltaTime;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InterpSpeed;                                       // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ReturnValue;                                       // 0x0028(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	struct FVector                                TempInterpVec;                                     // 0x0034(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempAxis;                                          // 0x0040(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempTargetXVec;                                    // 0x004C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempCurrentXVec;                                   // 0x0058(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempRotateAngle;                                   // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TempTarget;                                        // 0x0068(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0078(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0084(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0090(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x009C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x00A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue1;        // 0x00BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion) == 0x0000D0, "Wrong size on AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion, Current) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion::Current' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion, Target) == 0x00000C, "Member 'AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion::Target' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion, DeltaTime) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion::DeltaTime' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion, InterpSpeed) == 0x00001C, "Member 'AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion::InterpSpeed' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion, __WorldContext) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion, ReturnValue) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion::ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion, TempInterpVec) == 0x000034, "Member 'AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion::TempInterpVec' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion, TempAxis) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion::TempAxis' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion, TempTargetXVec) == 0x00004C, "Member 'AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion::TempTargetXVec' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion, TempCurrentXVec) == 0x000058, "Member 'AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion::TempCurrentXVec' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion, TempRotateAngle) == 0x000064, "Member 'AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion::TempRotateAngle' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion, TempTarget) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion::TempTarget' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000074, "Member 'AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion, CallFunc_RotateAngleAxis_ReturnValue) == 0x000084, "Member 'AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000090, "Member 'AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion, CallFunc_Cross_VectorVector_ReturnValue) == 0x00009C, "Member 'AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion, CallFunc_VInterpTo_ReturnValue) == 0x0000A8, "Member 'AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000B4, "Member 'AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion, CallFunc_DegAcos_ReturnValue) == 0x0000B8, "Member 'AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion, CallFunc_Conv_RotatorToVector_ReturnValue1) == 0x0000BC, "Member 'AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion::CallFunc_Conv_RotatorToVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000C8, "Member 'AJBIngameUtilFunctionLibrary_C_RInterpToQuaternion::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GetAJBCharacter
// 0x0098 (0x0098 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GetAJBCharacter final
{
public:
	class AController*                            Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameMovableStand_C*            K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBInGameCharacterProperty_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetPropertyOwnerCharacterBP_CharacterBP;  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBInGameCharacterProperty_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property1; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAJBCharacterPropertyType                     CallFunc_GetPropertyType_PropertyType;             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GetAJBCharacter");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter) == 0x000098, "Wrong size on AJBIngameUtilFunctionLibrary_C_GetAJBCharacter");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter, Controller) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacter::Controller' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter, __WorldContext) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacter::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter, CharacterBP) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacter::CharacterBP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter, bSuccess) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacter::bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacter::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter, K2Node_DynamicCast_bSuccess1) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacter::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacter::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacter::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter, K2Node_DynamicCast_bSuccess2) == 0x000060, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacter::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter, K2Node_DynamicCast_bSuccess3) == 0x000070, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacter::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter, CallFunc_GetPropertyOwnerCharacterBP_CharacterBP) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacter::CallFunc_GetPropertyOwnerCharacterBP_CharacterBP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property1) == 0x000080, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacter::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter, K2Node_DynamicCast_bSuccess4) == 0x000090, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacter::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter, CallFunc_GetPropertyType_PropertyType) == 0x000091, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacter::CallFunc_GetPropertyType_PropertyType' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter, CallFunc_IsValid_ReturnValue1) == 0x000092, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacter::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000093, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.CalcShotTransform
// 0x0430 (0x0430 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_CalcShotTransform final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceLength;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IrregularAngleThresould_Deg_;                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreTarget;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           SkillTag;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreCharacterSpread;                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bNotOwnerEnv;                                      // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     Transforms;                                        // 0x0038(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<struct FTransform>                     TempReturnTransforms;                              // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FVector>                        TempLocations;                                     // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	struct FVector2D                              TempViewOffset;                                    // 0x0068(0x0008)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TempBaseViewSize;                                  // 0x0070(0x0008)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempTraceEnd;                                      // 0x0078(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempShotLocation;                                  // 0x0084(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempWorldLocation;                                 // 0x0090(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempWorldDirection;                                // 0x009C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBHighlightManager_bIsValid;          // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBHighlightManager*                   CallFunc_GetAJBHighlightManager_ReturnValue;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x00C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x00D8(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue1;      // 0x00E0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00E8(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue1;        // 0x00F0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item1;                          // 0x0104(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0110(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue;           // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_163[0x5];                                      // 0x0163(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInGameCameraAccessor_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Camera_Accessor; // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraInfo_Location;                   // 0x017C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraInfo_Rotation;                   // 0x0188(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetCameraInfo_FOV;                        // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenPositionToWorldForAI_WorldLocation; // 0x0198(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenPositionToWorldForAI_WorldDirection; // 0x01A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeprojectScreenPositionToWorldForAI_ReturnValue; // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue1;          // 0x01B4(0x000C)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue1;               // 0x01C0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetResolutionScale_Scale;                 // 0x01F4(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x01FC(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X1;                         // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y1;                         // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenPositionToWorld_WorldLocation; // 0x0218(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenPositionToWorld_WorldDirection; // 0x0224(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeprojectScreenPositionToWorld_ReturnValue; // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_ShotNGPoint_C>     K2Node_DynamicCast_AsBI_Shot_NGPoint;              // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_GetShotLocation_Locations;                // 0x0250(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0260(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_AJBLineTraceByChannelIgnore_OutHit;       // 0x0278(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_AJBLineTraceByChannelIgnore_ReturnValue;  // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_303[0x1];                                      // 0x0303(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x030C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0318(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0324(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0330(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0350(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0368(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0374(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381[0x3];                                      // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue2;          // 0x0384(0x000C)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue2;               // 0x0390(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x03C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x03D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x03EC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x03FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomPointInCircle_ReturnValue;          // 0x040C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0424(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform) == 0x000010, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_CalcShotTransform");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform) == 0x000430, "Wrong size on AJBIngameUtilFunctionLibrary_C_CalcShotTransform");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CharacterBP) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CharacterBP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, TraceLength) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::TraceLength' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, IrregularAngleThresould_Deg_) == 0x00000C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::IrregularAngleThresould_Deg_' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, bIgnoreTarget) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::bIgnoreTarget' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, SkillTag) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::SkillTag' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, bIgnoreCharacterSpread) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::bIgnoreCharacterSpread' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, bNotOwnerEnv) == 0x000021, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::bNotOwnerEnv' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, __WorldContext) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, bSuccess) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, Transforms) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::Transforms' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, TempReturnTransforms) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::TempReturnTransforms' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, TempLocations) == 0x000058, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::TempLocations' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, TempViewOffset) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::TempViewOffset' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, TempBaseViewSize) == 0x000070, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::TempBaseViewSize' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, TempTraceEnd) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::TempTraceEnd' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, TempShotLocation) == 0x000084, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::TempShotLocation' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, TempWorldLocation) == 0x000090, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::TempWorldLocation' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, TempWorldDirection) == 0x00009C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::TempWorldDirection' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_HasLocalSharedController_ReturnValue) == 0x0000A8, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BooleanOR_ReturnValue) == 0x0000A9, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_GetAJBHighlightManager_bIsValid) == 0x0000AA, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_GetAJBHighlightManager_bIsValid' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_GetAJBHighlightManager_ReturnValue) == 0x0000B0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_GetAJBHighlightManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, Temp_int_Array_Index_Variable) == 0x0000B8, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_IsPlayingReplay_ReturnValue) == 0x0000BC, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Array_Length_ReturnValue1) == 0x0000D0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Not_PreBool_ReturnValue) == 0x0000D4, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Not_PreBool_ReturnValue1) == 0x0000D5, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0000D8, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Multiply_Vector2DFloat_ReturnValue1) == 0x0000E0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Multiply_Vector2DFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000E8, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Add_Vector2DVector2D_ReturnValue1) == 0x0000F0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Add_Vector2DVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakVector2D_X) == 0x0000F8, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakVector2D_Y) == 0x0000FC, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, Temp_int_Array_Index_Variable1) == 0x000100, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Array_Get_Item1) == 0x000104, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_FindLookAtRotation_ReturnValue) == 0x000110, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_MakeTransform_ReturnValue) == 0x000120, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, Temp_int_Loop_Counter_Variable) == 0x000150, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Array_Add_ReturnValue) == 0x000154, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Less_IntInt_ReturnValue) == 0x000158, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Add_IntInt_ReturnValue) == 0x00015C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, Temp_bool_Variable) == 0x000160, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_IsPlayerController_ReturnValue) == 0x000161, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_IsPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BooleanOR_ReturnValue1) == 0x000162, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, K2Node_DynamicCast_AsBI_AJBIn_Game_Camera_Accessor) == 0x000168, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::K2Node_DynamicCast_AsBI_AJBIn_Game_Camera_Accessor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, K2Node_DynamicCast_bSuccess) == 0x000178, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BooleanAND_ReturnValue) == 0x000179, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_GetCameraInfo_Location) == 0x00017C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_GetCameraInfo_Location' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_GetCameraInfo_Rotation) == 0x000188, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_GetCameraInfo_Rotation' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_GetCameraInfo_FOV) == 0x000194, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_GetCameraInfo_FOV' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_DeprojectScreenPositionToWorldForAI_WorldLocation) == 0x000198, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_DeprojectScreenPositionToWorldForAI_WorldLocation' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_DeprojectScreenPositionToWorldForAI_WorldDirection) == 0x0001A4, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_DeprojectScreenPositionToWorldForAI_WorldDirection' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_DeprojectScreenPositionToWorldForAI_ReturnValue) == 0x0001B0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_DeprojectScreenPositionToWorldForAI_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_FindLookAtRotation_ReturnValue1) == 0x0001B4, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_FindLookAtRotation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_MakeTransform_ReturnValue1) == 0x0001C0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_MakeTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Array_Add_ReturnValue1) == 0x0001F0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_GetResolutionScale_Scale) == 0x0001F4, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_GetResolutionScale_Scale' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x0001FC, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_GetPlayerController_ReturnValue) == 0x000208, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakVector2D_X1) == 0x000210, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakVector2D_X1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakVector2D_Y1) == 0x000214, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakVector2D_Y1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_DeprojectScreenPositionToWorld_WorldLocation) == 0x000218, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_DeprojectScreenPositionToWorld_WorldLocation' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_DeprojectScreenPositionToWorld_WorldDirection) == 0x000224, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_DeprojectScreenPositionToWorld_WorldDirection' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_DeprojectScreenPositionToWorld_ReturnValue) == 0x000230, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_DeprojectScreenPositionToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, K2Node_DynamicCast_AsBI_Shot_NGPoint) == 0x000238, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::K2Node_DynamicCast_AsBI_Shot_NGPoint' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, K2Node_DynamicCast_bSuccess1) == 0x000248, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_GetShotLocation_Locations) == 0x000250, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_GetShotLocation_Locations' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, K2Node_MakeArray_Array) == 0x000260, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, Temp_int_Loop_Counter_Variable1) == 0x000270, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_AJBLineTraceByChannelIgnore_OutHit) == 0x000278, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_AJBLineTraceByChannelIgnore_OutHit' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_AJBLineTraceByChannelIgnore_ReturnValue) == 0x000300, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_AJBLineTraceByChannelIgnore_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakHitResult_bBlockingHit) == 0x000301, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakHitResult_bInitialOverlap) == 0x000302, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakHitResult_Time) == 0x000304, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakHitResult_Distance) == 0x000308, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakHitResult_Location) == 0x00030C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakHitResult_ImpactPoint) == 0x000318, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakHitResult_Normal) == 0x000324, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakHitResult_ImpactNormal) == 0x000330, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakHitResult_PhysMat) == 0x000340, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakHitResult_HitActor) == 0x000348, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakHitResult_HitComponent) == 0x000350, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakHitResult_HitBoneName) == 0x000358, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakHitResult_HitItem) == 0x000360, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakHitResult_FaceIndex) == 0x000364, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakHitResult_TraceStart) == 0x000368, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakHitResult_TraceEnd) == 0x000374, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Less_IntInt_ReturnValue1) == 0x000380, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_FindLookAtRotation_ReturnValue2) == 0x000384, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_FindLookAtRotation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_MakeTransform_ReturnValue2) == 0x000390, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_MakeTransform_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0003C0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Array_Add_ReturnValue2) == 0x0003CC, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Normal_ReturnValue) == 0x0003D0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Add_IntInt_ReturnValue1) == 0x0003DC, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Dot_VectorVector_ReturnValue) == 0x0003E0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_DegAcos_ReturnValue) == 0x0003E4, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0003E8, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0003EC, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, Temp_float_Variable) == 0x0003F8, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x0003FC, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, K2Node_Select_Default) == 0x000408, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_RandomPointInCircle_ReturnValue) == 0x00040C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_RandomPointInCircle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakVector_X) == 0x000418, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakVector_Y) == 0x00041C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_BreakVector_Z) == 0x000420, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcShotTransform, CallFunc_MakeVector2D_ReturnValue) == 0x000424, "Member 'AJBIngameUtilFunctionLibrary_C_CalcShotTransform::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.TraceCharacterFootingInfo
// 0x0278 (0x0278 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo final
{
public:
	class ABP_AJBInGameCharacter_C*               Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CharacterWorldLocation;                            // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          bAccurate;                                         // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             OutHit;                                            // 0x0038(0x0088)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCapsuleRadius_CapsuleRadius;           // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight;   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCapsuleRadius_CapsuleRadius1;          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x00F4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1;       // 0x0100(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0110(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	float                                         CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight1;  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_AJBSphereTraceForObjects_OutHit;          // 0x0128(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_AJBSphereTraceForObjects_ReturnValue;     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x01B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue3;                  // 0x01D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue2;       // 0x01DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_AJBLineTraceForObjects_OutHit;            // 0x01E8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_AJBLineTraceForObjects_ReturnValue;       // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo) == 0x000278, "Wrong size on AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, Character) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::Character' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, CharacterWorldLocation) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::CharacterWorldLocation' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, ActorsToIgnore) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, bAccurate) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::bAccurate' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, __WorldContext) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, OutHit) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::OutHit' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, ReturnValue) == 0x0000C0, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, CallFunc_GetCapsuleRadius_CapsuleRadius) == 0x0000C4, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::CallFunc_GetCapsuleRadius_CapsuleRadius' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight) == 0x0000C8, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000CC, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, CallFunc_GetCapsuleRadius_CapsuleRadius1) == 0x0000D0, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::CallFunc_GetCapsuleRadius_CapsuleRadius1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, CallFunc_MakeVector_ReturnValue) == 0x0000D4, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x0000E0, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000E4, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000F0, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, CallFunc_MakeVector_ReturnValue1) == 0x0000F4, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, CallFunc_Subtract_VectorVector_ReturnValue1) == 0x000100, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::CallFunc_Subtract_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, K2Node_MakeArray_Array) == 0x000110, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight1) == 0x000120, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, CallFunc_AJBSphereTraceForObjects_OutHit) == 0x000128, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::CallFunc_AJBSphereTraceForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, CallFunc_AJBSphereTraceForObjects_ReturnValue) == 0x0001B0, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::CallFunc_AJBSphereTraceForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, CallFunc_MakeVector_ReturnValue2) == 0x0001B4, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, CallFunc_Add_VectorVector_ReturnValue) == 0x0001C0, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0001CC, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, CallFunc_MakeVector_ReturnValue3) == 0x0001D0, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::CallFunc_MakeVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, CallFunc_Subtract_VectorVector_ReturnValue2) == 0x0001DC, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::CallFunc_Subtract_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, CallFunc_AJBLineTraceForObjects_OutHit) == 0x0001E8, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::CallFunc_AJBLineTraceForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo, CallFunc_AJBLineTraceForObjects_ReturnValue) == 0x000270, "Member 'AJBIngameUtilFunctionLibrary_C_TraceCharacterFootingInfo::CallFunc_AJBLineTraceForObjects_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GetAJBCharacterFromActor
// 0x00F0 (0x00F0 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInGameCharacterProperty_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryGetPropertyOwnerCharacterFromActor_bSucceed; // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_TryGetPropertyOwnerCharacterFromActor_OutActor; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAJBCharacterPropertyType                     CallFunc_GetPropertyType_PropertyType;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBinGameDeathCamera_C*             K2Node_DynamicCast_AsBP_AJBin_Game_Death_Camera;   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameProjectile_C*              K2Node_DynamicCast_AsBP_AJBIn_Game_Projectile;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameMovableStand_C*            K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand;  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character3;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character4;     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor) == 0x0000F0, "Wrong size on AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, Actor) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::Actor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, __WorldContext) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, CharacterBP) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::CharacterBP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, bSuccess) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, CallFunc_TryGetPropertyOwnerCharacterFromActor_bSucceed) == 0x000031, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::CallFunc_TryGetPropertyOwnerCharacterFromActor_bSucceed' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, CallFunc_TryGetPropertyOwnerCharacterFromActor_OutActor) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::CallFunc_TryGetPropertyOwnerCharacterFromActor_OutActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, CallFunc_GetPropertyType_PropertyType) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::CallFunc_GetPropertyType_PropertyType' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, K2Node_DynamicCast_bSuccess1) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000051, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, CallFunc_BooleanAND_ReturnValue) == 0x000052, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, K2Node_DynamicCast_AsBP_AJBin_Game_Death_Camera) == 0x000058, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::K2Node_DynamicCast_AsBP_AJBin_Game_Death_Camera' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, K2Node_DynamicCast_bSuccess2) == 0x000060, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, K2Node_DynamicCast_AsBP_AJBIn_Game_Projectile) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::K2Node_DynamicCast_AsBP_AJBIn_Game_Projectile' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, K2Node_DynamicCast_bSuccess3) == 0x000070, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, CallFunc_GetOwner_ReturnValue) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000080, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, K2Node_DynamicCast_bSuccess4) == 0x000088, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000090, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, K2Node_DynamicCast_bSuccess5) == 0x000098, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, CallFunc_GetOwner_ReturnValue1) == 0x0000A0, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand) == 0x0000A8, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, K2Node_DynamicCast_bSuccess6) == 0x0000B0, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x0000B8, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, K2Node_DynamicCast_bSuccess7) == 0x0000C0, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, CallFunc_GetOwner_ReturnValue2) == 0x0000C8, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, K2Node_DynamicCast_AsBP_AJBIn_Game_Character3) == 0x0000D0, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::K2Node_DynamicCast_AsBP_AJBIn_Game_Character3' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, K2Node_DynamicCast_bSuccess8) == 0x0000D8, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, K2Node_DynamicCast_AsBP_AJBIn_Game_Character4) == 0x0000E0, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::K2Node_DynamicCast_AsBP_AJBIn_Game_Character4' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor, K2Node_DynamicCast_bSuccess9) == 0x0000E8, "Member 'AJBIngameUtilFunctionLibrary_C_GetAJBCharacterFromActor::K2Node_DynamicCast_bSuccess9' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.AJBMultiCapsuleTraceForObjects(Deprecated)
// 0x00B0 (0x00B0 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_ final
{
public:
	struct FGameplayTag                           TraceInfoTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0014(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HalfHeight;                                        // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x0028(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          bTraceComplex;                                     // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0040(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          bIgnoreSelf;                                       // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TraceColor;                                        // 0x0054(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TraceHitColor;                                     // 0x0064(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     OutHits;                                           // 0x0080(0x0010)(Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	EDrawDebugTrace                               CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace; // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_TryGetTraceInfo_Deprecated__DrawTime;     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_CapsuleTraceMultiForObjects_OutHits;      // 0x0098(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceMultiForObjects_ReturnValue;  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_) == 0x0000B0, "Wrong size on AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_, TraceInfoTag) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_::TraceInfoTag' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_, Start) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_::Start' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_, End) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_::End' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_, Radius) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_::Radius' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_, HalfHeight) == 0x000024, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_::HalfHeight' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_, ObjectTypes) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_::ObjectTypes' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_, bTraceComplex) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_::bTraceComplex' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_, ActorsToIgnore) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_, bIgnoreSelf) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_, TraceColor) == 0x000054, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_::TraceColor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_, TraceHitColor) == 0x000064, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_::TraceHitColor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_, __WorldContext) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_, OutHits) == 0x000080, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_::OutHits' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_, ReturnValue) == 0x000090, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_::ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_, CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace) == 0x000091, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_::CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_, CallFunc_TryGetTraceInfo_Deprecated__DrawTime) == 0x000094, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_::CallFunc_TryGetTraceInfo_Deprecated__DrawTime' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_, CallFunc_CapsuleTraceMultiForObjects_OutHits) == 0x000098, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_::CallFunc_CapsuleTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_, CallFunc_CapsuleTraceMultiForObjects_ReturnValue) == 0x0000A8, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiCapsuleTraceForObjects_Deprecated_::CallFunc_CapsuleTraceMultiForObjects_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.AJBMultiSphereTraceByProfile(Deprecated)
// 0x00A8 (0x00A8 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_ final
{
public:
	struct FGameplayTag                           TraceInfoTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0014(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ProfileName;                                       // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTraceComplex;                                     // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0038(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          bIgnoreSelf;                                       // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TraceColor;                                        // 0x004C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TraceHitColor;                                     // 0x005C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     OutHits;                                           // 0x0078(0x0010)(Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	EDrawDebugTrace                               CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace; // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_TryGetTraceInfo_Deprecated__DrawTime;     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiByProfile_OutHits;        // 0x0090(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiByProfile_ReturnValue;    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_) == 0x0000A8, "Wrong size on AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_, TraceInfoTag) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_::TraceInfoTag' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_, Start) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_::Start' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_, End) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_::End' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_, Radius) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_::Radius' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_, ProfileName) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_::ProfileName' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_, bTraceComplex) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_::bTraceComplex' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_, ActorsToIgnore) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_, bIgnoreSelf) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_, TraceColor) == 0x00004C, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_::TraceColor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_, TraceHitColor) == 0x00005C, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_::TraceHitColor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_, __WorldContext) == 0x000070, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_, OutHits) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_::OutHits' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_, ReturnValue) == 0x000088, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_::ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_, CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace) == 0x000089, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_::CallFunc_TryGetTraceInfo_Deprecated__DrawDebugTrace' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_, CallFunc_TryGetTraceInfo_Deprecated__DrawTime) == 0x00008C, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_::CallFunc_TryGetTraceInfo_Deprecated__DrawTime' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_, CallFunc_SphereTraceMultiByProfile_OutHits) == 0x000090, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_::CallFunc_SphereTraceMultiByProfile_OutHits' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_, CallFunc_SphereTraceMultiByProfile_ReturnValue) == 0x0000A0, "Member 'AJBIngameUtilFunctionLibrary_C_AJBMultiSphereTraceByProfile_Deprecated_::CallFunc_SphereTraceMultiByProfile_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.CheckSkillSealing
// 0x0070 (0x0070 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_CheckSkillSealing final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SkillClass;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSkillSealing;                                     // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy;         // 0x0048(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_CheckSkillSealing) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_CheckSkillSealing");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_CheckSkillSealing) == 0x000070, "Wrong size on AJBIngameUtilFunctionLibrary_C_CheckSkillSealing");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckSkillSealing, CharacterBP) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_CheckSkillSealing::CharacterBP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckSkillSealing, SkillClass) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_CheckSkillSealing::SkillClass' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckSkillSealing, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_CheckSkillSealing::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckSkillSealing, bSkillSealing) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_CheckSkillSealing::bSkillSealing' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckSkillSealing, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_CheckSkillSealing::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckSkillSealing, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_CheckSkillSealing::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckSkillSealing, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_CheckSkillSealing::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckSkillSealing, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_CheckSkillSealing::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckSkillSealing, CallFunc_GetGameplayTags_TagContainerCopy) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_CheckSkillSealing::CallFunc_GetGameplayTags_TagContainerCopy' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckSkillSealing, CallFunc_HasTag_ReturnValue) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_CheckSkillSealing::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.CheckCharacterOnInstantObject
// 0x01B0 (0x01B0 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject final
{
public:
	struct FVector                                FootLocation;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TraceInfoTag;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOnInstant;                                        // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TempRadius;                                        // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCapsuleRadius_CapsuleRadius;           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array1;                           // 0x0070(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_AJBMultiSphereTraceForObjects_OutHits;    // 0x0080(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_AJBMultiSphereTraceForObjects_ReturnValue; // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x00A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0134(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0140(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x014C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0158(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0190(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x019C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject) == 0x0001B0, "Wrong size on AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, FootLocation) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::FootLocation' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CharacterBP) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CharacterBP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, TraceInfoTag) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::TraceInfoTag' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, __WorldContext) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, bOnInstant) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::bOnInstant' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, TempRadius) == 0x00002C, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::TempRadius' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, Temp_int_Array_Index_Variable) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_BreakVector_X) == 0x00003C, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_BreakVector_Y) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_BreakVector_Z) == 0x000044, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_MakeVector_ReturnValue) == 0x00004C, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_GetCapsuleRadius_CapsuleRadius) == 0x000058, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_GetCapsuleRadius_CapsuleRadius' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, K2Node_MakeArray_Array) == 0x000060, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, K2Node_MakeArray_Array1) == 0x000070, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_AJBMultiSphereTraceForObjects_OutHits) == 0x000080, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_AJBMultiSphereTraceForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_AJBMultiSphereTraceForObjects_ReturnValue) == 0x000090, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_AJBMultiSphereTraceForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_Not_PreBool_ReturnValue) == 0x000098, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_Less_IntInt_ReturnValue) == 0x000099, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_BreakHitResult_bBlockingHit) == 0x000128, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_BreakHitResult_bInitialOverlap) == 0x000129, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_BreakHitResult_Time) == 0x00012C, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_BreakHitResult_Distance) == 0x000130, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_BreakHitResult_Location) == 0x000134, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_BreakHitResult_ImpactPoint) == 0x000140, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_BreakHitResult_Normal) == 0x00014C, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_BreakHitResult_ImpactNormal) == 0x000158, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_BreakHitResult_HitItem) == 0x000188, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_BreakHitResult_FaceIndex) == 0x00018C, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_BreakHitResult_TraceStart) == 0x000190, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_BreakHitResult_TraceEnd) == 0x00019C, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject, CallFunc_ComponentHasTag_ReturnValue) == 0x0001A8, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterOnInstantObject::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.CalcDamage
// 0x0148 (0x0148 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_CalcDamage final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BaseDamage;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CuttingRateByBlocking;                             // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPenetrateAP;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIgnoreCalcAttackRate;                             // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageForHPAP;                                     // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageForAAP;                                      // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CutDamage;                                         // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRemainHP;                                         // 0x0034(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDamageIsCutByAAP;                                 // 0x0035(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempDamageForHPAP;                                 // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempDamageForAAP;                                  // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempLeftDamage;                                    // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempCalcedDamage;                                  // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempCuttingRateByStatus;                           // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempCuttingRateByBlocking;                         // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTempDamageIsCutByAAP;                             // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempCutDamage;                                     // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempFinalDamage;                                   // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTempRemainHP;                                     // 0x005C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TempDamageRate;                                    // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempCuttingRate;                                   // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AdditionalAP_C>    K2Node_DynamicCast_AsBI_Additional_AP;             // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConsumeSimulated_LeftDamage;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConsumeSimulated_BeforeValue;             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConsumeSimulated_AfterValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue1;           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue1;                       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue2;           // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue2;                       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue;           // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default;                             // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP1;    // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess1;       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcAAPInfo_bDamageCutByAAP;              // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcAAPInfo_bDamageBlockByAAP;            // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRemainHP_IsRemain;                      // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP2;    // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess2;       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcDamageRate_DamageRate;                // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP3;    // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess3;       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcCuttingRate_CuttingsRate;             // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue2;             // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_CalcDamage) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_CalcDamage");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_CalcDamage) == 0x000148, "Wrong size on AJBIngameUtilFunctionLibrary_C_CalcDamage");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, DamagedActor) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::DamagedActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, DamageCauser) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, BaseDamage) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::BaseDamage' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CuttingRateByBlocking) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CuttingRateByBlocking' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, bPenetrateAP) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::bPenetrateAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, bIgnoreCalcAttackRate) == 0x000019, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::bIgnoreCalcAttackRate' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, __WorldContext) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, DamageForHPAP) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::DamageForHPAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, DamageForAAP) == 0x00002C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::DamageForAAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CutDamage) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CutDamage' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, bRemainHP) == 0x000034, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::bRemainHP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, bDamageIsCutByAAP) == 0x000035, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::bDamageIsCutByAAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, TempDamageForHPAP) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::TempDamageForHPAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, TempDamageForAAP) == 0x00003C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::TempDamageForAAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, TempLeftDamage) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::TempLeftDamage' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, TempCalcedDamage) == 0x000044, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::TempCalcedDamage' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, TempCuttingRateByStatus) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::TempCuttingRateByStatus' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, TempCuttingRateByBlocking) == 0x00004C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::TempCuttingRateByBlocking' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, bTempDamageIsCutByAAP) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::bTempDamageIsCutByAAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, TempCutDamage) == 0x000054, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::TempCutDamage' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, TempFinalDamage) == 0x000058, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::TempFinalDamage' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, bTempRemainHP) == 0x00005C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::bTempRemainHP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, TempDamageRate) == 0x000060, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::TempDamageRate' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, TempCuttingRate) == 0x000064, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::TempCuttingRate' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00006C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000070, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Round_ReturnValue) == 0x000074, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, K2Node_DynamicCast_AsBI_Additional_AP) == 0x000088, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::K2Node_DynamicCast_AsBI_Additional_AP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, K2Node_DynamicCast_bSuccess1) == 0x000098, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Add_IntInt_ReturnValue1) == 0x00009C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_ConsumeSimulated_LeftDamage) == 0x0000A0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_ConsumeSimulated_LeftDamage' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_ConsumeSimulated_BeforeValue) == 0x0000A4, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_ConsumeSimulated_BeforeValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_ConsumeSimulated_AfterValue) == 0x0000A8, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_ConsumeSimulated_AfterValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_IsValid_ReturnValue) == 0x0000AC, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Multiply_IntFloat_ReturnValue1) == 0x0000B4, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Multiply_IntFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Not_PreBool_ReturnValue) == 0x0000B8, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Round_ReturnValue1) == 0x0000BC, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Round_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x0000C0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0000C4, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Multiply_IntFloat_ReturnValue2) == 0x0000C8, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Multiply_IntFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Not_PreBool_ReturnValue1) == 0x0000CC, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Round_ReturnValue2) == 0x0000D0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Round_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, Temp_float_Variable) == 0x0000D4, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Not_PreBool_ReturnValue2) == 0x0000D8, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, Temp_bool_Variable) == 0x0000D9, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x0000E0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x0000E8, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_IsPlayerController_ReturnValue) == 0x0000E9, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_IsPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Not_PreBool_ReturnValue3) == 0x0000EA, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Not_PreBool_ReturnValue4) == 0x0000EB, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, K2Node_Select_Default) == 0x0000EC, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000F0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_GetAJBCharacterFromActor_CharacterBP1) == 0x0000F8, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_GetAJBCharacterFromActor_CharacterBP1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_GetAJBCharacterFromActor_bSuccess1) == 0x000100, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_GetAJBCharacterFromActor_bSuccess1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_CalcAAPInfo_bDamageCutByAAP) == 0x000101, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_CalcAAPInfo_bDamageCutByAAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_CalcAAPInfo_bDamageBlockByAAP) == 0x000102, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_CalcAAPInfo_bDamageBlockByAAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_IsRemainHP_IsRemain) == 0x000103, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_IsRemainHP_IsRemain' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_GetAJBCharacterFromActor_CharacterBP2) == 0x000108, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_GetAJBCharacterFromActor_CharacterBP2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_GetAJBCharacterFromActor_bSuccess2) == 0x000110, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_GetAJBCharacterFromActor_bSuccess2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Subtract_IntInt_ReturnValue1) == 0x000114, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_CalcDamageRate_DamageRate) == 0x000118, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_CalcDamageRate_DamageRate' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Add_FloatFloat_ReturnValue) == 0x00011C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_GetAJBCharacterFromActor_CharacterBP3) == 0x000120, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_GetAJBCharacterFromActor_CharacterBP3' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_GetAJBCharacterFromActor_bSuccess3) == 0x000128, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_GetAJBCharacterFromActor_bSuccess3' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_BooleanAND_ReturnValue) == 0x000129, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_CalcCuttingRate_CuttingsRate) == 0x00012C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_CalcCuttingRate_CuttingsRate' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000130, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Subtract_IntInt_ReturnValue2) == 0x000134, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Subtract_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_FClamp_ReturnValue) == 0x000138, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Add_IntInt_ReturnValue2) == 0x00013C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDamage, CallFunc_Not_PreBool_ReturnValue5) == 0x000140, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDamage::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.CheckCharacterByTag
// 0x0060 (0x0060 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_CheckCharacterByTag final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CharacterTag;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReturnValue;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy;         // 0x0038(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_CheckCharacterByTag) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_CheckCharacterByTag");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_CheckCharacterByTag) == 0x000060, "Wrong size on AJBIngameUtilFunctionLibrary_C_CheckCharacterByTag");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterByTag, CharacterBP) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterByTag::CharacterBP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterByTag, CharacterTag) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterByTag::CharacterTag' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterByTag, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterByTag::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterByTag, bReturnValue) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterByTag::bReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterByTag, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterByTag::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterByTag, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterByTag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterByTag, CallFunc_GetGameplayTags_TagContainerCopy) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterByTag::CallFunc_GetGameplayTags_TagContainerCopy' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterByTag, CallFunc_HasTag_ReturnValue) == 0x000058, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterByTag::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.IsPair
// 0x0040 (0x0040 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_IsPair final
{
public:
	class AActor*                                 FirstActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SecondActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPairCharacter;                                    // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base1;   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue1;             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_IsPair) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_IsPair");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_IsPair) == 0x000040, "Wrong size on AJBIngameUtilFunctionLibrary_C_IsPair");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsPair, FirstActor) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_IsPair::FirstActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsPair, SecondActor) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_IsPair::SecondActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsPair, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_IsPair::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsPair, bPairCharacter) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_IsPair::bPairCharacter' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsPair, K2Node_DynamicCast_AsAJBIn_Game_Character_Base) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_IsPair::K2Node_DynamicCast_AsAJBIn_Game_Character_Base' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsPair, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_IsPair::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsPair, K2Node_DynamicCast_AsAJBIn_Game_Character_Base1) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_IsPair::K2Node_DynamicCast_AsAJBIn_Game_Character_Base1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsPair, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_IsPair::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsPair, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000039, "Member 'AJBIngameUtilFunctionLibrary_C_IsPair::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsPair, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x00003A, "Member 'AJBIngameUtilFunctionLibrary_C_IsPair::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsPair, CallFunc_NotEqual_StrStr_ReturnValue1) == 0x00003B, "Member 'AJBIngameUtilFunctionLibrary_C_IsPair::CallFunc_NotEqual_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsPair, CallFunc_BooleanAND_ReturnValue) == 0x00003C, "Member 'AJBIngameUtilFunctionLibrary_C_IsPair::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsPair, CallFunc_BooleanAND_ReturnValue1) == 0x00003D, "Member 'AJBIngameUtilFunctionLibrary_C_IsPair::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GetPairCount(Svr)
// 0x00B8 (0x00B8 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_ final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Num;                                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPair;                                             // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LCount;                                            // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               LCheckChara;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_AJBInGameCharacter_C*>       LWorkCharacters;                                   // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<class ABP_AJBInGameCharacter_C*>       CallFunc_GetJoinPawns_OutPawns;                    // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable1;                                // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_Array_Get_Item1;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue;     // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_Array_Get_Item2;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue1;            // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPair_bPairCharacter;                    // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_) == 0x0000B8, "Wrong size on AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, __WorldContext) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, Num) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::Num' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, bPair) == 0x00000C, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::bPair' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, LCount) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::LCount' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, LCheckChara) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::LCheckChara' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, LWorkCharacters) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::LWorkCharacters' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_GetJoinPawns_OutPawns) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_GetJoinPawns_OutPawns' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, Temp_bool_True_if_break_was_hit_Variable) == 0x00004C, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, Temp_int_Array_Index_Variable) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_Not_PreBool_ReturnValue) == 0x000054, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_Subtract_IntInt_ReturnValue) == 0x00005C, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_Max_ReturnValue) == 0x000060, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, Temp_int_Loop_Counter_Variable1) == 0x000064, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, Temp_int_Variable) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_Subtract_IntInt_ReturnValue1) == 0x00006C, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000070, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, Temp_int_Variable1) == 0x000074, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_Array_Get_Item) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000080, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_Add_IntInt_ReturnValue1) == 0x000084, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, Temp_int_Array_Index_Variable1) == 0x000088, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_Array_Get_Item1) == 0x000090, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_Array_RemoveItem_ReturnValue) == 0x000098, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_CharacterBehaviorMatches_ReturnValue) == 0x000099, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_CharacterBehaviorMatches_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_BooleanAND_ReturnValue) == 0x00009A, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_Not_PreBool_ReturnValue1) == 0x00009B, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_Add_IntInt_ReturnValue2) == 0x00009C, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_Array_Length_ReturnValue1) == 0x0000A0, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_Array_Get_Item2) == 0x0000A8, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_Array_RemoveItem_ReturnValue1) == 0x0000B1, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_Array_RemoveItem_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_BooleanAND_ReturnValue1) == 0x0000B2, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_, CallFunc_IsPair_bPairCharacter) == 0x0000B3, "Member 'AJBIngameUtilFunctionLibrary_C_GetPairCount_Svr_::CallFunc_IsPair_bPairCharacter' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.LastSurvivorIsDetermined_OnServer
// 0x0038 (0x0038 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPairCount_Svr__Num;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBBattleGameState_C*               K2Node_DynamicCast_AsBP_AJBBattle_Game_State;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLivingPlayerCount_Count;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayModeIsPair_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue1;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer) == 0x000038, "Wrong size on AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer, __WorldContext) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer, ReturnValue) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer::ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer, CallFunc_GetPairCount_Svr__Num) == 0x00000C, "Member 'AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer::CallFunc_GetPairCount_Svr__Num' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer, K2Node_DynamicCast_AsBP_AJBBattle_Game_State) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer::K2Node_DynamicCast_AsBP_AJBBattle_Game_State' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer, CallFunc_GetLivingPlayerCount_Count) == 0x00002C, "Member 'AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer::CallFunc_GetLivingPlayerCount_Count' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer, CallFunc_PlayModeIsPair_ReturnValue) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer::CallFunc_PlayModeIsPair_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer, CallFunc_LessEqual_IntInt_ReturnValue1) == 0x000031, "Member 'AJBIngameUtilFunctionLibrary_C_LastSurvivorIsDetermined_OnServer::CallFunc_LessEqual_IntInt_ReturnValue1' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GetSkillInfo
// 0x0028 (0x0028 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GetSkillInfo final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResult;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FST_SkillInfo                          SkillInfo;                                         // 0x0011(0x0002)(Parm, OutParm, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_SkillInfo                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0002)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GetSkillInfo) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GetSkillInfo");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GetSkillInfo) == 0x000028, "Wrong size on AJBIngameUtilFunctionLibrary_C_GetSkillInfo");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetSkillInfo, SkillTag) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GetSkillInfo::SkillTag' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetSkillInfo, __WorldContext) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_GetSkillInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetSkillInfo, bResult) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_GetSkillInfo::bResult' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetSkillInfo, SkillInfo) == 0x000011, "Member 'AJBIngameUtilFunctionLibrary_C_GetSkillInfo::SkillInfo' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetSkillInfo, CallFunc_GetTagName_ReturnValue) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GetSkillInfo::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetSkillInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_GetSkillInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetSkillInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000022, "Member 'AJBIngameUtilFunctionLibrary_C_GetSkillInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GetCharacterShortNameFromSkillTag
// 0x0088 (0x0088 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResult;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ShortName;                                         // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToUpper_ReturnValue;                      // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag) == 0x000088, "Wrong size on AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag, SkillTag) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag::SkillTag' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag, __WorldContext) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag, bResult) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag::bResult' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag, ShortName) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag::ShortName' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag, CallFunc_MakeLiteralString_ReturnValue) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag, CallFunc_GetTagName_ReturnValue) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag, CallFunc_Conv_NameToString_ReturnValue) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag, CallFunc_Replace_ReturnValue) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag, CallFunc_GetSubstring_ReturnValue) == 0x000060, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag, CallFunc_ToUpper_ReturnValue) == 0x000070, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag::CallFunc_ToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000080, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterShortNameFromSkillTag::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GetCharacterTagFromCharacter
// 0x0088 (0x0088 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CharacterTag;                                      // 0x0010(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> CallFunc_GetGameplayTags_self_CastInput;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy;         // 0x0028(0x0020)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0078(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter) == 0x000088, "Wrong size on AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter, CharacterBP) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter::CharacterBP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter, __WorldContext) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter, CharacterTag) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter::CharacterTag' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter, CallFunc_GetGameplayTags_self_CastInput) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter::CallFunc_GetGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter, CallFunc_GetGameplayTags_TagContainerCopy) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter::CallFunc_GetGameplayTags_TagContainerCopy' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter, Temp_int_Array_Index_Variable) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter, CallFunc_Array_Get_Item) == 0x000060, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter, CallFunc_MatchesTag_ReturnValue) == 0x000080, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterTagFromCharacter::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GetCharacterIdFromActor
// 0x0128 (0x0128 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CharacterID;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetCharacterTagFromCharacter_CharacterTag; // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAJBCharacterInfo                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x00E0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor) == 0x000128, "Wrong size on AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor, Actor) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor::Actor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor, __WorldContext) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor, CharacterID) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor::CharacterID' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor, CallFunc_GetCharacterTagFromCharacter_CharacterTag) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor::CallFunc_GetCharacterTagFromCharacter_CharacterTag' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor, CallFunc_GetTagName_ReturnValue) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000120, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor, CallFunc_Conv_IntToByte_ReturnValue) == 0x000121, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterIdFromActor::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GetSkillBitmaskFromSkillTag
// 0x0038 (0x0038 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkillBitmask;                                      // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAJBSkillType                                 Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable3;                                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable4;                                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable5;                                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillInfo_bResult;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FST_SkillInfo                          CallFunc_GetSkillInfo_SkillInfo;                   // 0x0031(0x0002)(HasGetValueTypeHash)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag) == 0x000038, "Wrong size on AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag, SkillTag) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag::SkillTag' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag, __WorldContext) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag, SkillBitmask) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag::SkillBitmask' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag, Temp_byte_Variable) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag, Temp_int_Variable) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag, Temp_int_Variable1) == 0x00001C, "Member 'AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag, Temp_int_Variable2) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag, Temp_int_Variable3) == 0x000024, "Member 'AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag::Temp_int_Variable3' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag, Temp_int_Variable4) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag::Temp_int_Variable4' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag, Temp_int_Variable5) == 0x00002C, "Member 'AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag::Temp_int_Variable5' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag, CallFunc_GetSkillInfo_bResult) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag::CallFunc_GetSkillInfo_bResult' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag, CallFunc_GetSkillInfo_SkillInfo) == 0x000031, "Member 'AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag::CallFunc_GetSkillInfo_SkillInfo' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag, K2Node_Select_Default) == 0x000034, "Member 'AJBIngameUtilFunctionLibrary_C_GetSkillBitmaskFromSkillTag::K2Node_Select_Default' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.SetPostProcessMaterial
// 0x0048 (0x0048 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial final
{
public:
	class UCameraComponent*                       CameraComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MaterialInterface;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0028(0x0010)(NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue1;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial) == 0x000048, "Wrong size on AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial, CameraComponent) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial::CameraComponent' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial, MaterialInterface) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial::MaterialInterface' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial, Index_0) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial::Index_0' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial, bEnable) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial::bEnable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial, __WorldContext) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000024, "Member 'AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial, CallFunc_IsValid_ReturnValue) == 0x000025, "Member 'AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial, K2Node_MakeStruct_WeightedBlendable) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial, CallFunc_GreaterEqual_IntInt_ReturnValue1) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial::CallFunc_GreaterEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial, CallFunc_IsValid_ReturnValue1) == 0x000039, "Member 'AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial, CallFunc_IsValid_ReturnValue2) == 0x00003A, "Member 'AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial, CallFunc_Array_Find_ReturnValue) == 0x00003C, "Member 'AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterial::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.SetPostProcessMaterialBlendWeight
// 0x0020 (0x0020 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterialBlendWeight final
{
public:
	class UCameraComponent*                       CameraComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Weight;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterialBlendWeight) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterialBlendWeight");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterialBlendWeight) == 0x000020, "Wrong size on AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterialBlendWeight");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterialBlendWeight, CameraComponent) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterialBlendWeight::CameraComponent' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterialBlendWeight, Index_0) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterialBlendWeight::Index_0' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterialBlendWeight, Weight) == 0x00000C, "Member 'AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterialBlendWeight::Weight' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterialBlendWeight, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterialBlendWeight::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterialBlendWeight, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterialBlendWeight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterialBlendWeight, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000019, "Member 'AJBIngameUtilFunctionLibrary_C_SetPostProcessMaterialBlendWeight::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GetCharacterFloatParameterFromDefaultContent
// 0x0030 (0x0030 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GetCharacterFloatParameterFromDefaultContent final
{
public:
	class FName                                   Filename;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ValueName;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBParamContent*                       CallFunc_GetParamDefaultContent_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GetCharacterFloatParameterFromDefaultContent) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GetCharacterFloatParameterFromDefaultContent");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GetCharacterFloatParameterFromDefaultContent) == 0x000030, "Wrong size on AJBIngameUtilFunctionLibrary_C_GetCharacterFloatParameterFromDefaultContent");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterFloatParameterFromDefaultContent, Filename) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterFloatParameterFromDefaultContent::Filename' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterFloatParameterFromDefaultContent, ValueName) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterFloatParameterFromDefaultContent::ValueName' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterFloatParameterFromDefaultContent, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterFloatParameterFromDefaultContent::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterFloatParameterFromDefaultContent, bSuccess) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterFloatParameterFromDefaultContent::bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterFloatParameterFromDefaultContent, Value) == 0x00001C, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterFloatParameterFromDefaultContent::Value' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterFloatParameterFromDefaultContent, CallFunc_GetParamDefaultContent_ReturnValue) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterFloatParameterFromDefaultContent::CallFunc_GetParamDefaultContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterFloatParameterFromDefaultContent, CallFunc_Contains_ReturnValue) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterFloatParameterFromDefaultContent::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterFloatParameterFromDefaultContent, CallFunc_GetFloatValue_ReturnValue) == 0x00002C, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterFloatParameterFromDefaultContent::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GetCharacterVectorParameterFromDefaultContent
// 0x0040 (0x0040 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GetCharacterVectorParameterFromDefaultContent final
{
public:
	class FName                                   Filename;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ValueName;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Value;                                             // 0x001C(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBParamContent*                       CallFunc_GetParamDefaultContent_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GetCharacterVectorParameterFromDefaultContent) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GetCharacterVectorParameterFromDefaultContent");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GetCharacterVectorParameterFromDefaultContent) == 0x000040, "Wrong size on AJBIngameUtilFunctionLibrary_C_GetCharacterVectorParameterFromDefaultContent");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterVectorParameterFromDefaultContent, Filename) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterVectorParameterFromDefaultContent::Filename' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterVectorParameterFromDefaultContent, ValueName) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterVectorParameterFromDefaultContent::ValueName' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterVectorParameterFromDefaultContent, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterVectorParameterFromDefaultContent::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterVectorParameterFromDefaultContent, bSuccess) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterVectorParameterFromDefaultContent::bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterVectorParameterFromDefaultContent, Value) == 0x00001C, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterVectorParameterFromDefaultContent::Value' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterVectorParameterFromDefaultContent, CallFunc_GetParamDefaultContent_ReturnValue) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterVectorParameterFromDefaultContent::CallFunc_GetParamDefaultContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterVectorParameterFromDefaultContent, CallFunc_Contains_ReturnValue) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterVectorParameterFromDefaultContent::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetCharacterVectorParameterFromDefaultContent, CallFunc_GetVectorValue_ReturnValue) == 0x000034, "Member 'AJBIngameUtilFunctionLibrary_C_GetCharacterVectorParameterFromDefaultContent::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.RandomPointInRing
// 0x0070 (0x0070 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_RandomPointInRing final
{
public:
	struct FVector                                Origin;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusMin;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusMax;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0020(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Length;                                            // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radian;                                            // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sin_ReturnValue;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Cos_ReturnValue;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue1;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPI_ReturnValue;                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_RandomPointInRing) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_RandomPointInRing");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_RandomPointInRing) == 0x000070, "Wrong size on AJBIngameUtilFunctionLibrary_C_RandomPointInRing");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInRing, Origin) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInRing::Origin' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInRing, RadiusMin) == 0x00000C, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInRing::RadiusMin' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInRing, RadiusMax) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInRing::RadiusMax' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInRing, __WorldContext) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInRing::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInRing, ReturnValue) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInRing::ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInRing, Length) == 0x00002C, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInRing::Length' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInRing, Radian) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInRing::Radian' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInRing, CallFunc_RandomFloatInRange_ReturnValue) == 0x000034, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInRing::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInRing, CallFunc_Sin_ReturnValue) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInRing::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInRing, CallFunc_Cos_ReturnValue) == 0x00003C, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInRing::CallFunc_Cos_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInRing, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInRing::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInRing, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000044, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInRing::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInRing, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInRing::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInRing, CallFunc_RandomFloatInRange_ReturnValue1) == 0x000054, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInRing::CallFunc_RandomFloatInRange_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInRing, CallFunc_Add_VectorVector_ReturnValue) == 0x000058, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInRing::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInRing, CallFunc_GetPI_ReturnValue) == 0x000064, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInRing::CallFunc_GetPI_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInRing, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInRing::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RandomPointInRing, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x00006C, "Member 'AJBIngameUtilFunctionLibrary_C_RandomPointInRing::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.CalcDualZoneCameraRotate
// 0x0070 (0x0070 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate final
{
public:
	float                                         CameraInputRate;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraInputDeadRate;                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraInputSecondRate;                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotationMinPerSecond;                              // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotationMaxPerSecond;                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            CVCameraInputDualZoneFirst;                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CVCameraInputDualZoneSecond;                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentInputSpeedRate;                             // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rotation;                                          // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue1;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue1;     // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate) == 0x000070, "Wrong size on AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, CameraInputRate) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::CameraInputRate' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, CameraInputDeadRate) == 0x000004, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::CameraInputDeadRate' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, CameraInputSecondRate) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::CameraInputSecondRate' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, RotationMinPerSecond) == 0x00000C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::RotationMinPerSecond' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, RotationMaxPerSecond) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::RotationMaxPerSecond' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, CVCameraInputDualZoneFirst) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::CVCameraInputDualZoneFirst' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, CVCameraInputDualZoneSecond) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::CVCameraInputDualZoneSecond' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, CurrentInputSpeedRate) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::CurrentInputSpeedRate' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, __WorldContext) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, Rotation) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::Rotation' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00003C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, CallFunc_FMax_ReturnValue) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, CallFunc_MapRangeClamped_ReturnValue) == 0x000044, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, CallFunc_MapRangeClamped_ReturnValue1) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::CallFunc_MapRangeClamped_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, CallFunc_GetFloatValue_ReturnValue) == 0x00004C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, CallFunc_GetFloatValue_ReturnValue1) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::CallFunc_GetFloatValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000054, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000058, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, CallFunc_Add_FloatFloat_ReturnValue) == 0x00005C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000060, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, CallFunc_GreaterEqual_FloatFloat_ReturnValue1) == 0x000061, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::CallFunc_GreaterEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, Temp_bool_Variable) == 0x000062, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, K2Node_Select_Default) == 0x000064, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_CalcDualZoneCameraRotate::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.IsRelatedCharacterAndMovableStand
// 0x0080 (0x0080 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand final
{
public:
	class AActor*                                 Actor1;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor2;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResult;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue1;     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameMovableStand_C*            K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameMovableStand_C*            K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand1; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand) == 0x000080, "Wrong size on AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand, Actor1) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand::Actor1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand, Actor2) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand::Actor2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand, bResult) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand::bResult' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand, CallFunc_GetOwner_ReturnValue1) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand, CallFunc_EqualEqual_ObjectObject_ReturnValue1) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand::CallFunc_EqualEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand, K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand::K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand, K2Node_DynamicCast_bSuccess1) == 0x000058, "Member 'AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand, K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand1) == 0x000060, "Member 'AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand::K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand, K2Node_DynamicCast_bSuccess2) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000070, "Member 'AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand, K2Node_DynamicCast_bSuccess3) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_IsRelatedCharacterAndMovableStand::K2Node_DynamicCast_bSuccess3' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.ChangeStencilValueByDigit
// 0x0038 (0x0038 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit final
{
public:
	class UPrimitiveComponent*                    PrimitiveComponent;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StencilDigit                                DigitToChange;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFlag;                                             // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_BitmaskToChange;                              // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_StencilValue;                                 // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Not_Int_ReturnValue;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Or_IntInt_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_StencilDigitToBitmask_BitmaskInt;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit) == 0x000038, "Wrong size on AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit, PrimitiveComponent) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit::PrimitiveComponent' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit, DigitToChange) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit::DigitToChange' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit, bFlag) == 0x000009, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit::bFlag' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit, Temp_BitmaskToChange) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit::Temp_BitmaskToChange' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit, Temp_StencilValue) == 0x00001C, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit::Temp_StencilValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit, CallFunc_Not_Int_ReturnValue) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit::CallFunc_Not_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit, CallFunc_Or_IntInt_ReturnValue) == 0x000024, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit::CallFunc_Or_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit, CallFunc_And_IntInt_ReturnValue) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit, Temp_bool_Variable) == 0x00002C, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit, K2Node_Select_Default) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit, CallFunc_StencilDigitToBitmask_BitmaskInt) == 0x000034, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeStencilValueByDigit::CallFunc_StencilDigitToBitmask_BitmaskInt' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.StencilDigitToBitmask
// 0x0040 (0x0040 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask final
{
public:
	E_StencilDigit                                StencilDigit;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BitmaskInt;                                        // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StencilDigit                                Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable3;                                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable4;                                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable5;                                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable6;                                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable7;                                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask) == 0x000040, "Wrong size on AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask, StencilDigit) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask::StencilDigit' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask, __WorldContext) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask, BitmaskInt) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask::BitmaskInt' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask, Temp_byte_Variable) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask, Temp_int_Variable) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask, Temp_int_Variable1) == 0x00001C, "Member 'AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask, Temp_int_Variable2) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask, Temp_int_Variable3) == 0x000024, "Member 'AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask::Temp_int_Variable3' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask, Temp_int_Variable4) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask::Temp_int_Variable4' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask, Temp_int_Variable5) == 0x00002C, "Member 'AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask::Temp_int_Variable5' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask, Temp_int_Variable6) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask::Temp_int_Variable6' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask, Temp_int_Variable7) == 0x000034, "Member 'AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask::Temp_int_Variable7' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask, K2Node_Select_Default) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_StencilDigitToBitmask::K2Node_Select_Default' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.CalcAdditionalGravityPower
// 0x0040 (0x0040 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdditionalGravityPower;                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GravityPowerScale;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AddtionalGravityScale;                             // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower) == 0x000040, "Wrong size on AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower, Speed) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower::Speed' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower, AdditionalGravityPower) == 0x000004, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower::AdditionalGravityPower' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower, GravityPowerScale) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower::GravityPowerScale' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower, AddtionalGravityScale) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower::AddtionalGravityScale' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower, Temp_float_Variable) == 0x00001C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower, Temp_bool_Variable) == 0x000021, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower, K2Node_Select_Default) == 0x00002C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x000034, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAdditionalGravityPower::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.CalcRightVectorByForward
// 0x0060 (0x0060 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward final
{
public:
	struct FVector                                ForwardVector;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightVector;                                       // 0x0018(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable1;                             // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue1;     // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0044(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0050(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward) == 0x000060, "Wrong size on AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward, ForwardVector) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward::ForwardVector' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward, RightVector) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward::RightVector' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward, Temp_bool_Variable) == 0x000024, "Member 'AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward, Temp_struct_Variable) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward, Temp_struct_Variable1) == 0x000034, "Member 'AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward, CallFunc_EqualEqual_VectorVector_ReturnValue1) == 0x000041, "Member 'AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward::CallFunc_EqualEqual_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward, CallFunc_BooleanOR_ReturnValue) == 0x000042, "Member 'AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward, K2Node_Select_Default) == 0x000044, "Member 'AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward, CallFunc_Cross_VectorVector_ReturnValue) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_CalcRightVectorByForward::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.CalcUpVectorByForwardRight
// 0x0038 (0x0038 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_CalcUpVectorByForwardRight final
{
public:
	struct FVector                                ForwardVector;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightVector;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                UpVector;                                          // 0x0020(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_CalcUpVectorByForwardRight) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_CalcUpVectorByForwardRight");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_CalcUpVectorByForwardRight) == 0x000038, "Wrong size on AJBIngameUtilFunctionLibrary_C_CalcUpVectorByForwardRight");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcUpVectorByForwardRight, ForwardVector) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_CalcUpVectorByForwardRight::ForwardVector' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcUpVectorByForwardRight, RightVector) == 0x00000C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcUpVectorByForwardRight::RightVector' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcUpVectorByForwardRight, __WorldContext) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_CalcUpVectorByForwardRight::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcUpVectorByForwardRight, UpVector) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_CalcUpVectorByForwardRight::UpVector' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcUpVectorByForwardRight, CallFunc_Cross_VectorVector_ReturnValue) == 0x00002C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcUpVectorByForwardRight::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.CalcStartAndEndLocation
// 0x0080 (0x0080 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmallAmount;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0028(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0034(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0064(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0070(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation) == 0x000080, "Wrong size on AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation, Location) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation::Location' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation, Direction) == 0x00000C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation::Direction' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation, SmallAmount) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation::SmallAmount' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation, __WorldContext) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation, Start) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation::Start' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation, End) == 0x000034, "Member 'AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation::End' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x00004C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation, CallFunc_NegateVector_ReturnValue) == 0x000058, "Member 'AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000064, "Member 'AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation, CallFunc_Add_VectorVector_ReturnValue1) == 0x000070, "Member 'AJBIngameUtilFunctionLibrary_C_CalcStartAndEndLocation::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GetViewTargetActor
// 0x0048 (0x0048 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GetViewTargetActor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ViewTargetActor;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBHighlightManager*                   CallFunc_GetHighlightManager_HighlightManager;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetFocusActor_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActor) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GetViewTargetActor");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActor) == 0x000048, "Wrong size on AJBIngameUtilFunctionLibrary_C_GetViewTargetActor");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActor, __WorldContext) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewTargetActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActor, ViewTargetActor) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewTargetActor::ViewTargetActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActor, Temp_bool_Variable) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewTargetActor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActor, CallFunc_GetHighlightManager_HighlightManager) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewTargetActor::CallFunc_GetHighlightManager_HighlightManager' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActor, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewTargetActor::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActor, CallFunc_IsPlayingReplay_ReturnValue) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewTargetActor::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActor, CallFunc_GetViewTarget_ReturnValue) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewTargetActor::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActor, CallFunc_GetFocusActor_ReturnValue) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewTargetActor::CallFunc_GetFocusActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActor, K2Node_Select_Default) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewTargetActor::K2Node_Select_Default' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.IsTimeUp
// 0x0048 (0x0048 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_IsTimeUp final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_TimespanZeroValue_ReturnValue;            // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBInGameGameState_bIsValid;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameGameState*                    CallFunc_GetAJBInGameGameState_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBBattleGameState_C*               K2Node_DynamicCast_AsBP_AJBBattle_Game_State;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetRemainingLimitTimespan_FromAfterOpenTheGame_ReturnValue; // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_TimespanTimespan_ReturnValue;   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_IsTimeUp) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_IsTimeUp");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_IsTimeUp) == 0x000048, "Wrong size on AJBIngameUtilFunctionLibrary_C_IsTimeUp");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsTimeUp, __WorldContext) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_IsTimeUp::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsTimeUp, ReturnValue) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_IsTimeUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsTimeUp, CallFunc_TimespanZeroValue_ReturnValue) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_IsTimeUp::CallFunc_TimespanZeroValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsTimeUp, CallFunc_GetAJBInGameGameState_bIsValid) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_IsTimeUp::CallFunc_GetAJBInGameGameState_bIsValid' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsTimeUp, CallFunc_GetAJBInGameGameState_ReturnValue) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_IsTimeUp::CallFunc_GetAJBInGameGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsTimeUp, K2Node_DynamicCast_AsBP_AJBBattle_Game_State) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_IsTimeUp::K2Node_DynamicCast_AsBP_AJBBattle_Game_State' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsTimeUp, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_IsTimeUp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsTimeUp, CallFunc_GetRemainingLimitTimespan_FromAfterOpenTheGame_ReturnValue) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_IsTimeUp::CallFunc_GetRemainingLimitTimespan_FromAfterOpenTheGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_IsTimeUp, CallFunc_LessEqual_TimespanTimespan_ReturnValue) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_IsTimeUp::CallFunc_LessEqual_TimespanTimespan_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.CompareParentMaterial
// 0x0078 (0x0078 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_CompareParentMaterial final
{
public:
	class UObject*                                Object1;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Object2;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMatch;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface1;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterial*                              CallFunc_GetBaseMaterial_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              CallFunc_GetBaseMaterial_ReturnValue1;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue1;               // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue1;     // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue2;     // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue3;     // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_CompareParentMaterial) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_CompareParentMaterial");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_CompareParentMaterial) == 0x000078, "Wrong size on AJBIngameUtilFunctionLibrary_C_CompareParentMaterial");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CompareParentMaterial, Object1) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_CompareParentMaterial::Object1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CompareParentMaterial, Object2) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_CompareParentMaterial::Object2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CompareParentMaterial, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_CompareParentMaterial::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CompareParentMaterial, bMatch) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_CompareParentMaterial::bMatch' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CompareParentMaterial, K2Node_DynamicCast_AsMaterial_Interface) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_CompareParentMaterial::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CompareParentMaterial, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_CompareParentMaterial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CompareParentMaterial, K2Node_DynamicCast_AsMaterial_Interface1) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_CompareParentMaterial::K2Node_DynamicCast_AsMaterial_Interface1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CompareParentMaterial, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_CompareParentMaterial::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CompareParentMaterial, CallFunc_GetBaseMaterial_ReturnValue) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_CompareParentMaterial::CallFunc_GetBaseMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CompareParentMaterial, CallFunc_GetBaseMaterial_ReturnValue1) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_CompareParentMaterial::CallFunc_GetBaseMaterial_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CompareParentMaterial, CallFunc_GetObjectName_ReturnValue) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_CompareParentMaterial::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CompareParentMaterial, CallFunc_GetObjectName_ReturnValue1) == 0x000060, "Member 'AJBIngameUtilFunctionLibrary_C_CompareParentMaterial::CallFunc_GetObjectName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CompareParentMaterial, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000070, "Member 'AJBIngameUtilFunctionLibrary_C_CompareParentMaterial::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CompareParentMaterial, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000071, "Member 'AJBIngameUtilFunctionLibrary_C_CompareParentMaterial::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CompareParentMaterial, CallFunc_EqualEqual_ObjectObject_ReturnValue1) == 0x000072, "Member 'AJBIngameUtilFunctionLibrary_C_CompareParentMaterial::CallFunc_EqualEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CompareParentMaterial, CallFunc_BooleanAND_ReturnValue) == 0x000073, "Member 'AJBIngameUtilFunctionLibrary_C_CompareParentMaterial::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CompareParentMaterial, CallFunc_EqualEqual_ObjectObject_ReturnValue2) == 0x000074, "Member 'AJBIngameUtilFunctionLibrary_C_CompareParentMaterial::CallFunc_EqualEqual_ObjectObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CompareParentMaterial, CallFunc_EqualEqual_ObjectObject_ReturnValue3) == 0x000075, "Member 'AJBIngameUtilFunctionLibrary_C_CompareParentMaterial::CallFunc_EqualEqual_ObjectObject_ReturnValue3' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CompareParentMaterial, CallFunc_BooleanAND_ReturnValue1) == 0x000076, "Member 'AJBIngameUtilFunctionLibrary_C_CompareParentMaterial::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.CalcPositionsBetweenTwoPoints
// 0x00D0 (0x00D0 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints final
{
public:
	struct FVector                                Point1;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Point2;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Interval;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIncludePoint1;                                    // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIncludePoint2;                                    // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIncludeLastLessInterval;                          // 0x001E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        PathPositions;                                     // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor)
	struct FVector                                TempCurrentPosition;                               // 0x0038(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempCurrentDisance;                                // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempMaxDistance;                                   // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTempCompleted;                                    // 0x004C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        TempPathPositions;                                 // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	struct FVector                                TempNormal;                                        // 0x0060(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0094(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints) == 0x0000D0, "Wrong size on AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, Point1) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::Point1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, Point2) == 0x00000C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::Point2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, Interval) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::Interval' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, bIncludePoint1) == 0x00001C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::bIncludePoint1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, bIncludePoint2) == 0x00001D, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::bIncludePoint2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, bIncludeLastLessInterval) == 0x00001E, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::bIncludeLastLessInterval' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, __WorldContext) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, PathPositions) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::PathPositions' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, TempCurrentPosition) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::TempCurrentPosition' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, TempCurrentDisance) == 0x000044, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::TempCurrentDisance' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, TempMaxDistance) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::TempMaxDistance' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, bTempCompleted) == 0x00004C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::bTempCompleted' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, TempPathPositions) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::TempPathPositions' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, TempNormal) == 0x000060, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::TempNormal' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, CallFunc_Add_FloatFloat_ReturnValue) == 0x00006C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000070, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000074, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, CallFunc_Not_PreBool_ReturnValue) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, CallFunc_Add_FloatFloat_ReturnValue2) == 0x00007C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, CallFunc_Array_Add_ReturnValue1) == 0x000084, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, CallFunc_Array_Add_ReturnValue2) == 0x000088, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, Temp_bool_Variable) == 0x00008C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, K2Node_Select_Default) == 0x000090, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000094, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000A0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A4, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000B0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, CallFunc_Normal_ReturnValue) == 0x0000BC, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints, CallFunc_VSize_ReturnValue) == 0x0000C8, "Member 'AJBIngameUtilFunctionLibrary_C_CalcPositionsBetweenTwoPoints::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.CheckDistanceLimit
// 0x0040 (0x0040 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStageDistanceLimitParameter_DistanceLimitParam; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit) == 0x000040, "Wrong size on AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit, Location) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit::Location' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit, bSuccess) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit::bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit, CallFunc_BreakVector_X) == 0x00001C, "Member 'AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit, CallFunc_BreakVector_Y) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit, CallFunc_BreakVector_Z) == 0x000024, "Member 'AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit, CallFunc_GetStageDistanceLimitParameter_DistanceLimitParam) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit::CallFunc_GetStageDistanceLimitParameter_DistanceLimitParam' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit, CallFunc_MakeVector_ReturnValue) == 0x00002C, "Member 'AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit, CallFunc_VSize_ReturnValue) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'AJBIngameUtilFunctionLibrary_C_CheckDistanceLimit::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.ChangeEnableSkillLock
// 0x0060 (0x0060 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SkillClass;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBInGameSkillComponent*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBInGameSkillComponent*               CallFunc_GetComponentByClass_ReturnValue1;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock) == 0x000060, "Wrong size on AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock, bEnable) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock::bEnable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock, Actor) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock::Actor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock, SkillClass) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock::SkillClass' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock, __WorldContext) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock, CallFunc_GetComponentByClass_ReturnValue1) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock, K2Node_DynamicCast_bSuccess1) == 0x000058, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock, CallFunc_IsValid_ReturnValue1) == 0x00005A, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSkillLock::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GetViewTargetActorConsiderVSCamera
// 0x0058 (0x0058 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ViewTargetActor;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTargetActor_ViewTargetActor;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera) == 0x000058, "Wrong size on AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera, __WorldContext) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera, ViewTargetActor) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera::ViewTargetActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera, Temp_bool_Variable) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera, CallFunc_GetViewTargetActor_ViewTargetActor) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera::CallFunc_GetViewTargetActor_ViewTargetActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera, CallFunc_GetViewTarget_ReturnValue) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera, CallFunc_GetObjectClass_ReturnValue) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera, CallFunc_ClassIsChildOf_ReturnValue) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera, K2Node_Select_Default) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_GetViewTargetActorConsiderVSCamera::K2Node_Select_Default' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.CalcCameraBaseTraceInfo
// 0x0190 (0x0190 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo final
{
public:
	float                                         MaxDistanceTraceStartToBase;                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceBaseToTraceEnd;                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinForwardZForMaxTraceDistanceRate;                // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxForawrdZForMinTraceDistanceRate;                // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxTraceDistanceRate;                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinTraceDistanceRateUp;                            // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinTraceDistanceRateDown;                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSucceed;                                          // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TraceStart;                                        // 0x002C(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceEnd;                                          // 0x0038(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempDistanceBaseToTraceEndRate;                    // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempTraceEndLocation;                              // 0x0048(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempTraceStartLocation;                            // 0x0054(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempDistanceTraceStartToBase;                      // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempDistanceCameraToTraceStart;                    // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempDistanceCameraToBase;                          // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   TempCameraManager;                                 // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               TempViewTargetCharacter;                           // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempCameraForwardVector;                           // 0x0080(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempCameraToPlayerVector;                          // 0x008C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempCameraLocation;                                // 0x0098(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      TempPlayerController;                              // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerControllerConsiderHighlight_PlayerController; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00EC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x00F8(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0104(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0110(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11E[0x2];                                      // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0144(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0150(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x015C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0168(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0178(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo) == 0x000190, "Wrong size on AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, MaxDistanceTraceStartToBase) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::MaxDistanceTraceStartToBase' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, DistanceBaseToTraceEnd) == 0x000004, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::DistanceBaseToTraceEnd' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, MinForwardZForMaxTraceDistanceRate) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::MinForwardZForMaxTraceDistanceRate' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, MaxForawrdZForMinTraceDistanceRate) == 0x00000C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::MaxForawrdZForMinTraceDistanceRate' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, MaxTraceDistanceRate) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::MaxTraceDistanceRate' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, MinTraceDistanceRateUp) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::MinTraceDistanceRateUp' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, MinTraceDistanceRateDown) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::MinTraceDistanceRateDown' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, __WorldContext) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, bSucceed) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::bSucceed' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, TraceStart) == 0x00002C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::TraceStart' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, TraceEnd) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::TraceEnd' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, TempDistanceBaseToTraceEndRate) == 0x000044, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::TempDistanceBaseToTraceEndRate' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, TempTraceEndLocation) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::TempTraceEndLocation' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, TempTraceStartLocation) == 0x000054, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::TempTraceStartLocation' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, TempDistanceTraceStartToBase) == 0x000060, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::TempDistanceTraceStartToBase' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, TempDistanceCameraToTraceStart) == 0x000064, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::TempDistanceCameraToTraceStart' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, TempDistanceCameraToBase) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::TempDistanceCameraToBase' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, TempCameraManager) == 0x000070, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::TempCameraManager' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, TempViewTargetCharacter) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::TempViewTargetCharacter' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, TempCameraForwardVector) == 0x000080, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::TempCameraForwardVector' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, TempCameraToPlayerVector) == 0x00008C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::TempCameraToPlayerVector' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, TempCameraLocation) == 0x000098, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::TempCameraLocation' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, TempPlayerController) == 0x0000A8, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::TempPlayerController' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_GetPlayerControllerConsiderHighlight_PlayerController) == 0x0000B0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_GetPlayerControllerConsiderHighlight_PlayerController' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_BreakVector_X) == 0x0000B8, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_BreakVector_Y) == 0x0000BC, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_BreakVector_Z) == 0x0000C0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000C4, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_Abs_ReturnValue) == 0x0000C8, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000CC, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_IsValid_ReturnValue1) == 0x0000D1, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000D4, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_BooleanAND_ReturnValue) == 0x0000D8, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_FMax_ReturnValue) == 0x0000DC, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000E0, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000EC, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_GetCameraRotation_ReturnValue) == 0x0000F8, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_GetForwardVector_ReturnValue) == 0x000104, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_GetCameraLocation_ReturnValue) == 0x000110, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, Temp_bool_Variable) == 0x00011C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_IsValid_ReturnValue2) == 0x00011D, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, K2Node_Select_Default) == 0x000120, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_MapRangeClamped_ReturnValue) == 0x000124, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_GetViewTarget_ReturnValue) == 0x000128, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000130, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_Add_FloatFloat_ReturnValue) == 0x00013C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000140, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000144, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_Add_VectorVector_ReturnValue) == 0x000150, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x00015C, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_Add_VectorVector_ReturnValue1) == 0x000168, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_VSize_ReturnValue) == 0x000174, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_Normal_ReturnValue) == 0x000178, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_Dot_VectorVector_ReturnValue) == 0x000184, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000188, "Member 'AJBIngameUtilFunctionLibrary_C_CalcCameraBaseTraceInfo::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.GetPlayerControllerConsiderHighlight
// 0x0058 (0x0058 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetFocusActor_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight) == 0x000058, "Wrong size on AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight, __WorldContext) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight, PlayerController) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight::PlayerController' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight, CallFunc_GetAJBGameInstance_bSuccess) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight, CallFunc_GetFocusActor_ReturnValue) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight::CallFunc_GetFocusActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight, K2Node_DynamicCast_AsPawn) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight, CallFunc_IsPlayingReplay_ReturnValue) == 0x000039, "Member 'AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight, CallFunc_GetController_ReturnValue) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight, K2Node_DynamicCast_bSuccess1) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_GetPlayerControllerConsiderHighlight::K2Node_DynamicCast_bSuccess1' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.PossibleUseStand
// 0x0020 (0x0020 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_PossibleUseStand final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SkillClass;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPossible;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSkillSealing_bSkillSealing;          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue; // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_PossibleUseStand) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_PossibleUseStand");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_PossibleUseStand) == 0x000020, "Wrong size on AJBIngameUtilFunctionLibrary_C_PossibleUseStand");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_PossibleUseStand, CharacterBP) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_PossibleUseStand::CharacterBP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_PossibleUseStand, SkillClass) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_PossibleUseStand::SkillClass' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_PossibleUseStand, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_PossibleUseStand::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_PossibleUseStand, bPossible) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_PossibleUseStand::bPossible' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_PossibleUseStand, CallFunc_CheckActiveBehavior_bRetValue) == 0x000019, "Member 'AJBIngameUtilFunctionLibrary_C_PossibleUseStand::CallFunc_CheckActiveBehavior_bRetValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_PossibleUseStand, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'AJBIngameUtilFunctionLibrary_C_PossibleUseStand::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_PossibleUseStand, CallFunc_CheckSkillSealing_bSkillSealing) == 0x00001B, "Member 'AJBIngameUtilFunctionLibrary_C_PossibleUseStand::CallFunc_CheckSkillSealing_bSkillSealing' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_PossibleUseStand, CallFunc_Not_PreBool_ReturnValue1) == 0x00001C, "Member 'AJBIngameUtilFunctionLibrary_C_PossibleUseStand::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_PossibleUseStand, CallFunc_CheckCharacterBehavior_Active_bReturnValue) == 0x00001D, "Member 'AJBIngameUtilFunctionLibrary_C_PossibleUseStand::CallFunc_CheckCharacterBehavior_Active_bReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_PossibleUseStand, CallFunc_IsValid_ReturnValue) == 0x00001E, "Member 'AJBIngameUtilFunctionLibrary_C_PossibleUseStand::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.ChangeEnablePPMaterials
// 0x0040 (0x0040 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MaterialInterface;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaterialIndexRefCharacter;                         // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bChangeForMovableStand;                            // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaterialIndexRefMovableStand;                      // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials) == 0x000040, "Wrong size on AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials, CharacterBP) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials::CharacterBP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials, MaterialInterface) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials::MaterialInterface' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials, bEnable) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials::bEnable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials, MaterialIndexRefCharacter) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials::MaterialIndexRefCharacter' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials, bChangeForMovableStand) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials::bChangeForMovableStand' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials, MaterialIndexRefMovableStand) == 0x00001C, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials::MaterialIndexRefMovableStand' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials, __WorldContext) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials, CallFunc_IsValid_ReturnValue1) == 0x000029, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials, CallFunc_IsValid_ReturnValue2) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnablePPMaterials::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.CheckBreakDownMovableStandOnly
// 0x00D0 (0x00D0 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  PassiveTags;                                       // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFlinchMovableStandOnly;                           // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActiveBehaviorBreakDown_bBreakDown;  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehaviorBreakDown_bSpecialBreakDown; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehaviorBreakDown_bBreakDownBoth; // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_CheckActiveBehaviorBreakDown_Factor_Tags; // 0x0040(0x0020)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy;         // 0x0080(0x0020)()
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x00A0(0x0010)(ZeroConstructor, ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesAnyTags_ReturnValue;               // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly) == 0x0000D0, "Wrong size on AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly, CharacterBP) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly::CharacterBP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly, PassiveTags) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly::PassiveTags' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly, __WorldContext) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly, bFlinchMovableStandOnly) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly::bFlinchMovableStandOnly' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly, Temp_int_Array_Index_Variable) == 0x000034, "Member 'AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly, CallFunc_CheckActiveBehaviorBreakDown_bBreakDown) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly::CallFunc_CheckActiveBehaviorBreakDown_bBreakDown' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly, CallFunc_CheckActiveBehaviorBreakDown_bSpecialBreakDown) == 0x000039, "Member 'AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly::CallFunc_CheckActiveBehaviorBreakDown_bSpecialBreakDown' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly, CallFunc_CheckActiveBehaviorBreakDown_bBreakDownBoth) == 0x00003A, "Member 'AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly::CallFunc_CheckActiveBehaviorBreakDown_bBreakDownBoth' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly, CallFunc_CheckActiveBehaviorBreakDown_Factor_Tags) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly::CallFunc_CheckActiveBehaviorBreakDown_Factor_Tags' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly, CallFunc_BooleanAND_ReturnValue) == 0x000079, "Member 'AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly, CallFunc_GetGameplayTags_TagContainerCopy) == 0x000080, "Member 'AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly::CallFunc_GetGameplayTags_TagContainerCopy' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x0000A0, "Member 'AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly, CallFunc_MatchesAnyTags_ReturnValue) == 0x0000BC, "Member 'AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly::CallFunc_MatchesAnyTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly, Temp_int_Loop_Counter_Variable) == 0x0000C0, "Member 'AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'AJBIngameUtilFunctionLibrary_C_CheckBreakDownMovableStandOnly::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.TryGetCloudPointTarget
// 0x0048 (0x0048 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget final
{
public:
	class AActor*                                 TargetOwner;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBCloudPointTarget_C*              CloudPointTarget;                                  // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBCloudPointTarget_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_AddComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBCloudPointTarget_C*              K2Node_DynamicCast_AsBP_AJBCloud_Point_Target;     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget) == 0x000048, "Wrong size on AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget, TargetOwner) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget::TargetOwner' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget, __WorldContext) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget, CloudPointTarget) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget::CloudPointTarget' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget, CallFunc_AddComponentByClass_ReturnValue) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget, K2Node_DynamicCast_AsBP_AJBCloud_Point_Target) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget::K2Node_DynamicCast_AsBP_AJBCloud_Point_Target' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget, K2Node_DynamicCast_bSuccess1) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetCloudPointTarget::K2Node_DynamicCast_bSuccess1' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.CalcAAPInfo
// 0x0030 (0x0030 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_CalcAAPInfo final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDamageCutByAAP;                                   // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDamageBlockByAAP;                                 // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTempDamageBlockByAAP;                             // 0x001A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTempDamageCutByAAP;                               // 0x001B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcAAPInfo_bDamageCutByAAP;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcAAPInfo_bDamageBlockByAAP;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_CalcAAPInfo) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_CalcAAPInfo");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_CalcAAPInfo) == 0x000030, "Wrong size on AJBIngameUtilFunctionLibrary_C_CalcAAPInfo");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAAPInfo, HitActor) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAAPInfo::HitActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAAPInfo, Damage) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAAPInfo::Damage' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAAPInfo, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAAPInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAAPInfo, bDamageCutByAAP) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAAPInfo::bDamageCutByAAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAAPInfo, bDamageBlockByAAP) == 0x000019, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAAPInfo::bDamageBlockByAAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAAPInfo, bTempDamageBlockByAAP) == 0x00001A, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAAPInfo::bTempDamageBlockByAAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAAPInfo, bTempDamageCutByAAP) == 0x00001B, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAAPInfo::bTempDamageCutByAAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAAPInfo, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAAPInfo::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAAPInfo, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAAPInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAAPInfo, CallFunc_CalcAAPInfo_bDamageCutByAAP) == 0x000029, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAAPInfo::CallFunc_CalcAAPInfo_bDamageCutByAAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CalcAAPInfo, CallFunc_CalcAAPInfo_bDamageBlockByAAP) == 0x00002A, "Member 'AJBIngameUtilFunctionLibrary_C_CalcAAPInfo::CallFunc_CalcAAPInfo_bDamageBlockByAAP' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.DestroyAkComponent
// 0x0018 (0x0018 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_DestroyAkComponent final
{
public:
	class UAkComponent*                           AkComponent;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_DestroyAkComponent) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_DestroyAkComponent");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_DestroyAkComponent) == 0x000018, "Wrong size on AJBIngameUtilFunctionLibrary_C_DestroyAkComponent");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_DestroyAkComponent, AkComponent) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_DestroyAkComponent::AkComponent' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_DestroyAkComponent, __WorldContext) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_DestroyAkComponent::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_DestroyAkComponent, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_DestroyAkComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.ChangeEnableAkComponent
// 0x0030 (0x0030 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_ChangeEnableAkComponent final
{
public:
	class UAkComponent*                           AkComponent;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0018(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostAssociatedAkEvent_ReturnValue;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_ChangeEnableAkComponent) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_ChangeEnableAkComponent");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_ChangeEnableAkComponent) == 0x000030, "Wrong size on AJBIngameUtilFunctionLibrary_C_ChangeEnableAkComponent");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableAkComponent, AkComponent) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableAkComponent::AkComponent' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableAkComponent, bEnable) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableAkComponent::bEnable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableAkComponent, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableAkComponent::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableAkComponent, Temp_delegate_Variable) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableAkComponent::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableAkComponent, CallFunc_PostAssociatedAkEvent_ReturnValue) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableAkComponent::CallFunc_PostAssociatedAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableAkComponent, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableAkComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.ChangeEnableTimerHandle
// 0x0020 (0x0020 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_ChangeEnableTimerHandle final
{
public:
	struct FTimerHandle                           TimerHandle;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          bEnable;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_ChangeEnableTimerHandle) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_ChangeEnableTimerHandle");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_ChangeEnableTimerHandle) == 0x000020, "Wrong size on AJBIngameUtilFunctionLibrary_C_ChangeEnableTimerHandle");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableTimerHandle, TimerHandle) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableTimerHandle::TimerHandle' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableTimerHandle, bEnable) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableTimerHandle::bEnable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableTimerHandle, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableTimerHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableTimerHandle, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableTimerHandle::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.ChangeEnableCustomTimeDilation
// 0x0030 (0x0030 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_ChangeEnableCustomTimeDilation final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_ChangeEnableCustomTimeDilation) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_ChangeEnableCustomTimeDilation");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_ChangeEnableCustomTimeDilation) == 0x000030, "Wrong size on AJBIngameUtilFunctionLibrary_C_ChangeEnableCustomTimeDilation");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableCustomTimeDilation, Actor) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableCustomTimeDilation::Actor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableCustomTimeDilation, bEnable) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableCustomTimeDilation::bEnable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableCustomTimeDilation, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableCustomTimeDilation::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableCustomTimeDilation, Temp_bool_Variable) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableCustomTimeDilation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableCustomTimeDilation, Temp_float_Variable) == 0x00001C, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableCustomTimeDilation::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableCustomTimeDilation, Temp_float_Variable1) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableCustomTimeDilation::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableCustomTimeDilation, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableCustomTimeDilation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableCustomTimeDilation, K2Node_Select_Default) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableCustomTimeDilation::K2Node_Select_Default' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.RecalcDamageForZipperHide
// 0x0038 (0x0038 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide final
{
public:
	class AActor*                                 DamageActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalDamage;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPenetrateAP;                                      // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageForHPAP;                                     // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageForAAP;                                      // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcDamage_DamageForHPAP;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcDamage_DamageForAAP;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcDamage_CutDamage;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcDamage_bRemainHP;                     // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcDamage_bDamageIsCutByAAP;             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide) == 0x000038, "Wrong size on AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide, DamageActor) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide::DamageActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide, DamageCauser) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide::DamageCauser' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide, TotalDamage) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide::TotalDamage' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide, bPenetrateAP) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide::bPenetrateAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide, __WorldContext) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide, DamageForHPAP) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide::DamageForHPAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide, DamageForAAP) == 0x000024, "Member 'AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide::DamageForAAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide, CallFunc_CalcDamage_DamageForHPAP) == 0x000028, "Member 'AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide::CallFunc_CalcDamage_DamageForHPAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide, CallFunc_CalcDamage_DamageForAAP) == 0x00002C, "Member 'AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide::CallFunc_CalcDamage_DamageForAAP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide, CallFunc_CalcDamage_CutDamage) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide::CallFunc_CalcDamage_CutDamage' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide, CallFunc_CalcDamage_bRemainHP) == 0x000034, "Member 'AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide::CallFunc_CalcDamage_bRemainHP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide, CallFunc_CalcDamage_bDamageIsCutByAAP) == 0x000035, "Member 'AJBIngameUtilFunctionLibrary_C_RecalcDamageForZipperHide::CallFunc_CalcDamage_bDamageIsCutByAAP' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.TraceActorFootingInfo
// 0x0198 (0x0198 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Length;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             OutHit;                                            // 0x0018(0x0088)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x00B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x00D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array1;                           // 0x00E8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_AJBSphereTraceForObjects_OutHit;          // 0x0108(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_AJBSphereTraceForObjects_ReturnValue;     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo) == 0x000198, "Wrong size on AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo, Actor) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo::Actor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo, Radius) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo::Radius' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo, Length) == 0x00000C, "Member 'AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo::Length' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo, OutHit) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo::OutHit' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo, ReturnValue) == 0x0000A0, "Member 'AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo::ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo, K2Node_MakeArray_Array) == 0x0000A8, "Member 'AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo, CallFunc_GetActorUpVector_ReturnValue) == 0x0000B8, "Member 'AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000C4, "Member 'AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo, CallFunc_NegateVector_ReturnValue) == 0x0000D0, "Member 'AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000DC, "Member 'AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo, K2Node_MakeArray_Array1) == 0x0000E8, "Member 'AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F8, "Member 'AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo, CallFunc_AJBSphereTraceForObjects_OutHit) == 0x000108, "Member 'AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo::CallFunc_AJBSphereTraceForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo, CallFunc_AJBSphereTraceForObjects_ReturnValue) == 0x000190, "Member 'AJBIngameUtilFunctionLibrary_C_TraceActorFootingInfo::CallFunc_AJBSphereTraceForObjects_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.TryGetPropertyOwnerCharacterFromActor
// 0x0058 (0x0058 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor final
{
public:
	class AActor*                                 InActor;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSucceed;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 OutActor;                                          // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBInGameCharacterProperty_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetPropertyOwnerCharacterBP_CharacterBP;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBInGameCharacterProperty_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property1; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAJBCharacterPropertyType                     CallFunc_GetPropertyType_PropertyType;             // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor) == 0x000058, "Wrong size on AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor, InActor) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor::InActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor, __WorldContext) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor, bSucceed) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor::bSucceed' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor, OutActor) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor::OutActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor, CallFunc_GetPropertyOwnerCharacterBP_CharacterBP) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor::CallFunc_GetPropertyOwnerCharacterBP_CharacterBP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property1) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor, K2Node_DynamicCast_bSuccess1) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor, CallFunc_GetPropertyType_PropertyType) == 0x000051, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor::CallFunc_GetPropertyType_PropertyType' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000052, "Member 'AJBIngameUtilFunctionLibrary_C_TryGetPropertyOwnerCharacterFromActor::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.ChangeEnableSliceCut
// 0x0090 (0x0090 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut final
{
public:
	TArray<class UMaterialInstanceDynamic*>       DMIList;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          bEnable;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Direction;                                         // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x005C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor1;                    // 0x006C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut) == 0x000090, "Wrong size on AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut, DMIList) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut::DMIList' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut, bEnable) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut::bEnable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut, Direction) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut::Direction' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut, Offset) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut::Offset' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut, __WorldContext) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut, Temp_int_Array_Index_Variable) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut, CallFunc_BreakVector_X) == 0x000044, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut, CallFunc_BreakVector_Y) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut, CallFunc_BreakVector_Z) == 0x00004C, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut, CallFunc_BreakVector_X1) == 0x000050, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut, CallFunc_BreakVector_Y1) == 0x000054, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut, CallFunc_BreakVector_Z1) == 0x000058, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut, K2Node_MakeStruct_LinearColor) == 0x00005C, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut, K2Node_MakeStruct_LinearColor1) == 0x00006C, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut::K2Node_MakeStruct_LinearColor1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00007C, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut, CallFunc_Array_Get_Item) == 0x000080, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'AJBIngameUtilFunctionLibrary_C_ChangeEnableSliceCut::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.TryChangeParticleVisibility
// 0x0020 (0x0020 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_TryChangeParticleVisibility final
{
public:
	class ABP_AJBInGameParticleEffect_C*          Particle;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNewVisibility;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPropagateToChildren;                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanXOR_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_TryChangeParticleVisibility) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_TryChangeParticleVisibility");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_TryChangeParticleVisibility) == 0x000020, "Wrong size on AJBIngameUtilFunctionLibrary_C_TryChangeParticleVisibility");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryChangeParticleVisibility, Particle) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_TryChangeParticleVisibility::Particle' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryChangeParticleVisibility, bNewVisibility) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_TryChangeParticleVisibility::bNewVisibility' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryChangeParticleVisibility, bPropagateToChildren) == 0x000009, "Member 'AJBIngameUtilFunctionLibrary_C_TryChangeParticleVisibility::bPropagateToChildren' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryChangeParticleVisibility, __WorldContext) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_TryChangeParticleVisibility::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryChangeParticleVisibility, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_TryChangeParticleVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryChangeParticleVisibility, CallFunc_IsVisible_ReturnValue) == 0x000019, "Member 'AJBIngameUtilFunctionLibrary_C_TryChangeParticleVisibility::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_TryChangeParticleVisibility, CallFunc_BooleanXOR_ReturnValue) == 0x00001A, "Member 'AJBIngameUtilFunctionLibrary_C_TryChangeParticleVisibility::CallFunc_BooleanXOR_ReturnValue' has a wrong offset!");

// Function AJBIngameUtilFunctionLibrary.AJBIngameUtilFunctionLibrary_C.CheckCharacterInInstantObject
// 0x0180 (0x0180 - 0x0000)
struct AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInInstant;                                        // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight;   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCapsuleRadius_CapsuleRadius;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array1;                           // 0x0048(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_AJBMultiCapsuleTraceForObjects_OutHits;   // 0x0058(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_AJBMultiCapsuleTraceForObjects_ReturnValue; // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0070(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0104(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0110(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x011C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0128(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0160(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x016C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject) == 0x000008, "Wrong alignment on AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject");
static_assert(sizeof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject) == 0x000180, "Wrong size on AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CharacterBP) == 0x000000, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CharacterBP' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, __WorldContext) == 0x000008, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::__WorldContext' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, bInInstant) == 0x000010, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::bInInstant' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight) == 0x000018, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_GetCapsuleRadius_CapsuleRadius) == 0x000020, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_GetCapsuleRadius_CapsuleRadius' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, Temp_int_Array_Index_Variable) == 0x000030, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, K2Node_MakeArray_Array) == 0x000038, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, K2Node_MakeArray_Array1) == 0x000048, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_AJBMultiCapsuleTraceForObjects_OutHits) == 0x000058, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_AJBMultiCapsuleTraceForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_AJBMultiCapsuleTraceForObjects_ReturnValue) == 0x000068, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_AJBMultiCapsuleTraceForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_Not_PreBool_ReturnValue) == 0x000069, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_Array_Get_Item) == 0x000070, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F8, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F9, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_BreakHitResult_Time) == 0x0000FC, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_BreakHitResult_Distance) == 0x000100, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_BreakHitResult_Location) == 0x000104, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_BreakHitResult_ImpactPoint) == 0x000110, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_BreakHitResult_Normal) == 0x00011C, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_BreakHitResult_ImpactNormal) == 0x000128, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_BreakHitResult_PhysMat) == 0x000138, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_BreakHitResult_HitActor) == 0x000140, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_BreakHitResult_HitComponent) == 0x000148, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_BreakHitResult_HitBoneName) == 0x000150, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_BreakHitResult_HitItem) == 0x000158, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_BreakHitResult_FaceIndex) == 0x00015C, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_BreakHitResult_TraceStart) == 0x000160, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_BreakHitResult_TraceEnd) == 0x00016C, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_Array_Length_ReturnValue) == 0x000178, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_ComponentHasTag_ReturnValue) == 0x00017C, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject, CallFunc_Less_IntInt_ReturnValue) == 0x00017D, "Member 'AJBIngameUtilFunctionLibrary_C_CheckCharacterInInstantObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}


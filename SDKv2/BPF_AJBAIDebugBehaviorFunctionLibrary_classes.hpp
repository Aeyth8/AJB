#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPF_AJBAIDebugBehaviorFunctionLibrary

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C
// 0x0000 (0x0028 - 0x0028)
class UBPF_AJBAIDebugBehaviorFunctionLibrary_C final : public UBlueprintFunctionLibrary
{
public:
	static class UBP_AJBAIDebugComponent_C* GetAIDebugComponent(class AAIController* AI_Controller, class UObject* __WorldContext, bool* Exists);
	static bool IfDebugDrawOnTask(class AAIController* AI_Controller, class UObject* __WorldContext);
	static void AI_DebugDrawLineBox(bool bDebugDrawFlag, const struct FVector& LineStart, const struct FVector& LineEnd, const struct FVector& BoxExtent, const struct FRotator& BoxRotation, const struct FLinearColor& LineColor, float Duration, float LineThickness, float BoxThickness, class UObject* __WorldContext);
	static void AI_DebugDrawPathPointLineBox(class UNavigationPath* NavigationPath, bool bDebugDrawFlag, const struct FVector& BoxExtent, const struct FRotator& BoxRotation, const struct FLinearColor& ColorOnTheWay, const struct FLinearColor& ColorDestination, float Duration, float LineThickness, float BoxThickness, class UObject* __WorldContext);
	static void AI_DebugSetNodeStatusForMovement(class AAIController* AI_Controller, const class FString& Status, class UObject* __WorldContext);
	static void AI_DebugSetNodeStatusForAction(class AAIController* AI_Controller, const class FString& Status, class UObject* __WorldContext);
	static void AI_DebugSetNodeStatusForLastError(class AAIController* AI_Controller, const class FString& Status, class UObject* __WorldContext);
	static class FString AI_DebugGetStringFromGameplayTagContainer(const struct FGameplayTagContainer& Container, const class FString& ReplaceFrom, const class FString& ReplaceTo, class UObject* __WorldContext);
	static struct FLinearColor AI_GetLogColor(const struct FGameplayTag& AI_Log_Color, class UObject* __WorldContext);
	static struct FLinearColor AI_DebugDiluteColor(const struct FLinearColor& Color, class UObject* __WorldContext);
	static class FString GetDebugAICaption(class AAIController* AI_Controller, class UObject* __WorldContext);
	static class FString GetDebugAICaptionFromComponent(class UActorComponent* Component_On_AI_Controller, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPF_AJBAIDebugBehaviorFunctionLibrary_C">();
	}
	static class UBPF_AJBAIDebugBehaviorFunctionLibrary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPF_AJBAIDebugBehaviorFunctionLibrary_C>();
	}
};
static_assert(alignof(UBPF_AJBAIDebugBehaviorFunctionLibrary_C) == 0x000008, "Wrong alignment on UBPF_AJBAIDebugBehaviorFunctionLibrary_C");
static_assert(sizeof(UBPF_AJBAIDebugBehaviorFunctionLibrary_C) == 0x000028, "Wrong size on UBPF_AJBAIDebugBehaviorFunctionLibrary_C");

}


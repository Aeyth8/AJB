#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBDamageAreaContext

#include "Basic.hpp"

#include "BP_AJBDamageAreaContext_classes.hpp"
#include "BP_AJBDamageAreaContext_parameters.hpp"


namespace SDK
{

// Function BP_AJBDamageAreaContext.BP_AJBDamageAreaContext_C.OnIntervalSetupCompleted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BaseRadius                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BaseLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DisableReduction                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBDamageAreaContext_C::OnIntervalSetupCompleted__DelegateSignature(float BaseRadius, const struct FVector& BaseLocation, bool DisableReduction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaContext_C", "OnIntervalSetupCompleted__DelegateSignature");

	Params::BP_AJBDamageAreaContext_C_OnIntervalSetupCompleted__DelegateSignature Parms{};

	Parms.BaseRadius = BaseRadius;
	Parms.BaseLocation = std::move(BaseLocation);
	Parms.DisableReduction = DisableReduction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAreaContext.BP_AJBDamageAreaContext_C.OnIntervalCompleted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaContext_C::OnIntervalCompleted__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaContext_C", "OnIntervalCompleted__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaContext.BP_AJBDamageAreaContext_C.OnRestart__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BaseRadius                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BaseLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDamageAreaContext_C::OnRestart__DelegateSignature(float BaseRadius, const struct FVector& BaseLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaContext_C", "OnRestart__DelegateSignature");

	Params::BP_AJBDamageAreaContext_C_OnRestart__DelegateSignature Parms{};

	Parms.BaseRadius = BaseRadius;
	Parms.BaseLocation = std::move(BaseLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAreaContext.BP_AJBDamageAreaContext_C.OnVanish__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaContext_C::OnVanish__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaContext_C", "OnVanish__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaContext.BP_AJBDamageAreaContext_C.OnStop__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaContext_C::OnStop__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaContext_C", "OnStop__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaContext.BP_AJBDamageAreaContext_C.OnStart__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaContext_C::OnStart__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaContext_C", "OnStart__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaContext.BP_AJBDamageAreaContext_C.ExecuteUbergraph_BP_AJBDamageAreaContext
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDamageAreaContext_C::ExecuteUbergraph_BP_AJBDamageAreaContext(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaContext_C", "ExecuteUbergraph_BP_AJBDamageAreaContext");

	Params::BP_AJBDamageAreaContext_C_ExecuteUbergraph_BP_AJBDamageAreaContext Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAreaContext.BP_AJBDamageAreaContext_C.MC_Start
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaContext_C::MC_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaContext_C", "MC_Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaContext.BP_AJBDamageAreaContext_C.MC_Stop
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaContext_C::MC_Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaContext_C", "MC_Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaContext.BP_AJBDamageAreaContext_C.MC_Vanish
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaContext_C::MC_Vanish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaContext_C", "MC_Vanish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaContext.BP_AJBDamageAreaContext_C.MC_Restart
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BaseRadius                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BaseLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDamageAreaContext_C::MC_Restart(float BaseRadius, const struct FVector& BaseLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaContext_C", "MC_Restart");

	Params::BP_AJBDamageAreaContext_C_MC_Restart Parms{};

	Parms.BaseRadius = BaseRadius;
	Parms.BaseLocation = std::move(BaseLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAreaContext.BP_AJBDamageAreaContext_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDamageAreaContext_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaContext_C", "ReceiveTick");

	Params::BP_AJBDamageAreaContext_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAreaContext.BP_AJBDamageAreaContext_C.MC_IntervalCompleted
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaContext_C::MC_IntervalCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaContext_C", "MC_IntervalCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaContext.BP_AJBDamageAreaContext_C.MC_IntervalSetupCompleted
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BaseRadius                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BaseLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DoesNotReduction                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBDamageAreaContext_C::MC_IntervalSetupCompleted(float BaseRadius, const struct FVector& BaseLocation, bool DoesNotReduction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaContext_C", "MC_IntervalSetupCompleted");

	Params::BP_AJBDamageAreaContext_C_MC_IntervalSetupCompleted Parms{};

	Parms.BaseRadius = BaseRadius;
	Parms.BaseLocation = std::move(BaseLocation);
	Parms.DoesNotReduction = DoesNotReduction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAreaContext.BP_AJBDamageAreaContext_C.ReductionStarted
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBDamageAreaContext_C::ReductionStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaContext_C", "ReductionStarted");

	Params::BP_AJBDamageAreaContext_C_ReductionStarted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBDamageAreaContext.BP_AJBDamageAreaContext_C.GetTimespanFromBattleStart
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FTimespan UBP_AJBDamageAreaContext_C::GetTimespanFromBattleStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaContext_C", "GetTimespanFromBattleStart");

	Params::BP_AJBDamageAreaContext_C_GetTimespanFromBattleStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBDamageAreaContext.BP_AJBDamageAreaContext_C.ReductionCompleted
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBDamageAreaContext_C::ReductionCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaContext_C", "ReductionCompleted");

	Params::BP_AJBDamageAreaContext_C_ReductionCompleted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBDamageAreaContext.BP_AJBDamageAreaContext_C.ReductionPreAnnounced
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBDamageAreaContext_C::ReductionPreAnnounced()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaContext_C", "ReductionPreAnnounced");

	Params::BP_AJBDamageAreaContext_C_ReductionPreAnnounced Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


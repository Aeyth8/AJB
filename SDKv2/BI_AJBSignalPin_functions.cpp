#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_AJBSignalPin

#include "Basic.hpp"

#include "BI_AJBSignalPin_classes.hpp"
#include "BI_AJBSignalPin_parameters.hpp"


namespace SDK
{

// Function BI_AJBSignalPin.BI_AJBSignalPin_C.UpdateSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBI_AJBSignalPin_C::UpdateSize(const struct FVector2D& Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BI_AJBSignalPin_C", "UpdateSize");

	Params::BI_AJBSignalPin_C_UpdateSize Parms{};

	Parms.Size = std::move(Size);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BI_AJBSignalPin.BI_AJBSignalPin_C.SetIsPair
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsPair                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_AJBSignalPin_C::SetIsPair(bool bIsPair)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BI_AJBSignalPin_C", "SetIsPair");

	Params::BI_AJBSignalPin_C_SetIsPair Parms{};

	Parms.bIsPair = bIsPair;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BI_AJBSignalPin.BI_AJBSignalPin_C.PlayVanishAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsTimeUp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   AnimationLength                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBI_AJBSignalPin_C::PlayVanishAnimation(bool bIsTimeUp, float* AnimationLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BI_AJBSignalPin_C", "PlayVanishAnimation");

	Params::BI_AJBSignalPin_C_PlayVanishAnimation Parms{};

	Parms.bIsTimeUp = bIsTimeUp;

	UObject::ProcessEvent(Func, &Parms);

	if (AnimationLength != nullptr)
		*AnimationLength = Parms.AnimationLength;
}


// Function BI_AJBSignalPin.BI_AJBSignalPin_C.SetSignalType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SignalTypeTag                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void IBI_AJBSignalPin_C::SetSignalType(const struct FGameplayTag& SignalTypeTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BI_AJBSignalPin_C", "SetSignalType");

	Params::BI_AJBSignalPin_C_SetSignalType Parms{};

	Parms.SignalTypeTag = std::move(SignalTypeTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BI_AJBSignalPin.BI_AJBSignalPin_C.UpdateBlurOffset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BlurOffset                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBI_AJBSignalPin_C::UpdateBlurOffset(float BlurOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BI_AJBSignalPin_C", "UpdateBlurOffset");

	Params::BI_AJBSignalPin_C_UpdateBlurOffset Parms{};

	Parms.BlurOffset = BlurOffset;

	UObject::ProcessEvent(Func, &Parms);
}

}


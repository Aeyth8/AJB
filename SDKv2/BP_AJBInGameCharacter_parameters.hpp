#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameCharacter

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "ST_SkillInfo_structs.hpp"
#include "E_GionSpawnedSpace_structs.hpp"
#include "ST_ContinuedDamageKeepInfo_structs.hpp"
#include "E_StencilDigit_structs.hpp"
#include "ST_GrowupInfo_Processed_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AJB_structs.hpp"
#include "ST_CameraParam_structs.hpp"
#include "E_VoiceProcessType_structs.hpp"
#include "ST_ActionSkillInfo_structs.hpp"
#include "ST_FXVisibilityInfo_structs.hpp"
#include "ST_CharaSkin_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillGrownup__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_OnSkillGrownup__DelegateSignature final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnSkillGrownup__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnSkillGrownup__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnSkillGrownup__DelegateSignature) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_OnSkillGrownup__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillGrownup__DelegateSignature, GameplayTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnSkillGrownup__DelegateSignature::GameplayTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillGrownup__DelegateSignature, Value) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnSkillGrownup__DelegateSignature::Value' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnCharacterDead_Server__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_OnCharacterDead_Server__DelegateSignature final
{
public:
	struct FGameplayTag                           DamageType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DeadActor;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnCharacterDead_Server__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnCharacterDead_Server__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnCharacterDead_Server__DelegateSignature) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_OnCharacterDead_Server__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnCharacterDead_Server__DelegateSignature, DamageType) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnCharacterDead_Server__DelegateSignature::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnCharacterDead_Server__DelegateSignature, DeadActor) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnCharacterDead_Server__DelegateSignature::DeadActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnCharacterDead_Server__DelegateSignature, DamageCauser) == 0x000010, "Member 'BP_AJBInGameCharacter_C_OnCharacterDead_Server__DelegateSignature::DamageCauser' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillConsumed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnSkillConsumed__DelegateSignature final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnSkillConsumed__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnSkillConsumed__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnSkillConsumed__DelegateSignature) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnSkillConsumed__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillConsumed__DelegateSignature, SkillTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnSkillConsumed__DelegateSignature::SkillTag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPassiveAdded__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnPassiveAdded__DelegateSignature final
{
public:
	struct FGameplayTag                           AddCondition;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnPassiveAdded__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnPassiveAdded__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnPassiveAdded__DelegateSignature) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnPassiveAdded__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPassiveAdded__DelegateSignature, AddCondition) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnPassiveAdded__DelegateSignature::AddCondition' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPassiveRemoved__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_OnPassiveRemoved__DelegateSignature final
{
public:
	struct FGameplayTag                           RemoveCondition;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnPassiveRemoved__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnPassiveRemoved__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnPassiveRemoved__DelegateSignature) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_OnPassiveRemoved__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPassiveRemoved__DelegateSignature, RemoveCondition) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnPassiveRemoved__DelegateSignature::RemoveCondition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPassiveRemoved__DelegateSignature, CharacterBP) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnPassiveRemoved__DelegateSignature::CharacterBP' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillActivated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnSkillActivated__DelegateSignature final
{
public:
	class UBP_AJBSkillBase_C*                     ActivatedSkill;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnSkillActivated__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnSkillActivated__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnSkillActivated__DelegateSignature) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnSkillActivated__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillActivated__DelegateSignature, ActivatedSkill) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnSkillActivated__DelegateSignature::ActivatedSkill' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillInactivated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnSkillInactivated__DelegateSignature final
{
public:
	class UBP_AJBSkillBase_C*                     InactivatedSkill;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnSkillInactivated__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnSkillInactivated__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnSkillInactivated__DelegateSignature) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnSkillInactivated__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillInactivated__DelegateSignature, InactivatedSkill) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnSkillInactivated__DelegateSignature::InactivatedSkill' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnCharacterActiveBehaviorChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_OnCharacterActiveBehaviorChanged__DelegateSignature final
{
public:
	class AAJBInGameCharacter*                    TargetCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      OldBehavior;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      NextBehavior;                                      // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSpecialBreakDown;                                 // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnCharacterActiveBehaviorChanged__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnCharacterActiveBehaviorChanged__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnCharacterActiveBehaviorChanged__DelegateSignature) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_OnCharacterActiveBehaviorChanged__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnCharacterActiveBehaviorChanged__DelegateSignature, TargetCharacter) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnCharacterActiveBehaviorChanged__DelegateSignature::TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnCharacterActiveBehaviorChanged__DelegateSignature, OldBehavior) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnCharacterActiveBehaviorChanged__DelegateSignature::OldBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnCharacterActiveBehaviorChanged__DelegateSignature, NextBehavior) == 0x000009, "Member 'BP_AJBInGameCharacter_C_OnCharacterActiveBehaviorChanged__DelegateSignature::NextBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnCharacterActiveBehaviorChanged__DelegateSignature, bSpecialBreakDown) == 0x00000A, "Member 'BP_AJBInGameCharacter_C_OnCharacterActiveBehaviorChanged__DelegateSignature::bSpecialBreakDown' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnAttackHit__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_OnAttackHit__DelegateSignature final
{
public:
	bool                                          bHeadShot;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFInishBlow;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnAttackHit__DelegateSignature) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_OnAttackHit__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnAttackHit__DelegateSignature) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_OnAttackHit__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnAttackHit__DelegateSignature, bHeadShot) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnAttackHit__DelegateSignature::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnAttackHit__DelegateSignature, bFInishBlow) == 0x000001, "Member 'BP_AJBInGameCharacter_C_OnAttackHit__DelegateSignature::bFInishBlow' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnReceiveDamage_Local__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_C_OnReceiveDamage_Local__DelegateSignature final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DamageType;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRemainHP;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDamageIsCutByStatus;                              // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDamageIsCutByAAP;                                 // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnReceiveDamage_Local__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnReceiveDamage_Local__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnReceiveDamage_Local__DelegateSignature) == 0x000020, "Wrong size on BP_AJBInGameCharacter_C_OnReceiveDamage_Local__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnReceiveDamage_Local__DelegateSignature, Damage) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnReceiveDamage_Local__DelegateSignature::Damage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnReceiveDamage_Local__DelegateSignature, DamageType) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnReceiveDamage_Local__DelegateSignature::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnReceiveDamage_Local__DelegateSignature, DamageCauser) == 0x000010, "Member 'BP_AJBInGameCharacter_C_OnReceiveDamage_Local__DelegateSignature::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnReceiveDamage_Local__DelegateSignature, bRemainHP) == 0x000018, "Member 'BP_AJBInGameCharacter_C_OnReceiveDamage_Local__DelegateSignature::bRemainHP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnReceiveDamage_Local__DelegateSignature, bDamageIsCutByStatus) == 0x000019, "Member 'BP_AJBInGameCharacter_C_OnReceiveDamage_Local__DelegateSignature::bDamageIsCutByStatus' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnReceiveDamage_Local__DelegateSignature, bDamageIsCutByAAP) == 0x00001A, "Member 'BP_AJBInGameCharacter_C_OnReceiveDamage_Local__DelegateSignature::bDamageIsCutByAAP' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnGiveDamage_Local__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DamageType;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageReceiver;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRemainHP;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDamageIsCut;                                      // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SerialNumber;                                      // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DamageReceiverIsPlayer;                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWithSeparatedStandAttack;                         // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bEnemysSeparateStand;                              // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature) == 0x000028, "Wrong size on BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature, Damage) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature::Damage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature, DamageType) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature, DamageReceiver) == 0x000010, "Member 'BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature::DamageReceiver' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature, bRemainHP) == 0x000018, "Member 'BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature::bRemainHP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature, bDamageIsCut) == 0x000019, "Member 'BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature::bDamageIsCut' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature, SerialNumber) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature::SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature, DamageReceiverIsPlayer) == 0x000020, "Member 'BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature::DamageReceiverIsPlayer' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature, bWithSeparatedStandAttack) == 0x000021, "Member 'BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature::bWithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature, bEnemysSeparateStand) == 0x000022, "Member 'BP_AJBInGameCharacter_C_OnGiveDamage_Local__DelegateSignature::bEnemysSeparateStand' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnGetItem__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnGetItem__DelegateSignature final
{
public:
	struct FGameplayTag                           ItemTag;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnGetItem__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnGetItem__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnGetItem__DelegateSignature) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnGetItem__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnGetItem__DelegateSignature, ItemTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnGetItem__DelegateSignature::ItemTag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPossessTargetChenged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_OnPossessTargetChenged__DelegateSignature final
{
public:
	class AAJBInGameCharacterBase*                SeparateFrom;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                SeparateTo;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnPossessTargetChenged__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnPossessTargetChenged__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnPossessTargetChenged__DelegateSignature) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_OnPossessTargetChenged__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPossessTargetChenged__DelegateSignature, SeparateFrom) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnPossessTargetChenged__DelegateSignature::SeparateFrom' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPossessTargetChenged__DelegateSignature, SeparateTo) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnPossessTargetChenged__DelegateSignature::SeparateTo' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillUnlocked__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_OnSkillUnlocked__DelegateSignature final
{
public:
	EAJBSkillType                                 SkillType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnSkillUnlocked__DelegateSignature) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_OnSkillUnlocked__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnSkillUnlocked__DelegateSignature) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_OnSkillUnlocked__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillUnlocked__DelegateSignature, SkillType) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnSkillUnlocked__DelegateSignature::SkillType' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnHPChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_OnHPChanged__DelegateSignature final
{
public:
	int32                                         HP;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnHPChanged__DelegateSignature) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_OnHPChanged__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnHPChanged__DelegateSignature) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_OnHPChanged__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnHPChanged__DelegateSignature, HP) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnHPChanged__DelegateSignature::HP' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillMissed_Local__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_OnSkillMissed_Local__DelegateSignature final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bHitObject;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnSkillMissed_Local__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnSkillMissed_Local__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnSkillMissed_Local__DelegateSignature) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_OnSkillMissed_Local__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillMissed_Local__DelegateSignature, SkillTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnSkillMissed_Local__DelegateSignature::SkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillMissed_Local__DelegateSignature, bHitObject) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnSkillMissed_Local__DelegateSignature::bHitObject' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnShotPossibilityChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_OnShotPossibilityChanged__DelegateSignature final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnShotPossibilityChanged__DelegateSignature) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_OnShotPossibilityChanged__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnShotPossibilityChanged__DelegateSignature) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_OnShotPossibilityChanged__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnShotPossibilityChanged__DelegateSignature, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnShotPossibilityChanged__DelegateSignature::bEnable' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnEmote__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_OnEmote__DelegateSignature final
{
public:
	int32                                         VoiceIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnEmote__DelegateSignature) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_OnEmote__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnEmote__DelegateSignature) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_OnEmote__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnEmote__DelegateSignature, VoiceIndex) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnEmote__DelegateSignature::VoiceIndex' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnKill_Local__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackDistance;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         KilledCharacterId;                                 // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWithSeparatedStandAttack;                         // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHitEnemysSeparatedStand;                          // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFirstBlood;                                       // 0x0013(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         UltimateSkillSerialNumberIfInEffect;               // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedTime;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DeadPlayerID;                                      // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLastDefeated;                                   // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPlayerKill;                                       // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSpecialKill;                                      // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature) == 0x000028, "Wrong size on BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature, SkillTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature::SkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature, SerialNumber) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature::SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature, AttackDistance) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature::AttackDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature, KilledCharacterId) == 0x000010, "Member 'BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature::KilledCharacterId' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature, bWithSeparatedStandAttack) == 0x000011, "Member 'BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature::bWithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature, bHitEnemysSeparatedStand) == 0x000012, "Member 'BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature::bHitEnemysSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature, bFirstBlood) == 0x000013, "Member 'BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature::bFirstBlood' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature, UltimateSkillSerialNumberIfInEffect) == 0x000014, "Member 'BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature::UltimateSkillSerialNumberIfInEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature, ElapsedTime) == 0x000018, "Member 'BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature, DeadPlayerID) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature::DeadPlayerID' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature, bIsLastDefeated) == 0x000020, "Member 'BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature::bIsLastDefeated' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature, bPlayerKill) == 0x000021, "Member 'BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature::bPlayerKill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature, bSpecialKill) == 0x000022, "Member 'BP_AJBInGameCharacter_C_OnKill_Local__DelegateSignature::bSpecialKill' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnDie_Local__DelegateSignature
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBInGameCharacter_C_OnDie_Local__DelegateSignature final
{
public:
	bool                                          bWillRessurect;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsLastDefeated;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDiedOfKillZ;                                      // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnDie_Local__DelegateSignature) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_OnDie_Local__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnDie_Local__DelegateSignature) == 0x000003, "Wrong size on BP_AJBInGameCharacter_C_OnDie_Local__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnDie_Local__DelegateSignature, bWillRessurect) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnDie_Local__DelegateSignature::bWillRessurect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnDie_Local__DelegateSignature, bIsLastDefeated) == 0x000001, "Member 'BP_AJBInGameCharacter_C_OnDie_Local__DelegateSignature::bIsLastDefeated' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnDie_Local__DelegateSignature, bDiedOfKillZ) == 0x000002, "Member 'BP_AJBInGameCharacter_C_OnDie_Local__DelegateSignature::bDiedOfKillZ' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillGiveHeadShot_Local__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnSkillGiveHeadShot_Local__DelegateSignature final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnSkillGiveHeadShot_Local__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnSkillGiveHeadShot_Local__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnSkillGiveHeadShot_Local__DelegateSignature) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnSkillGiveHeadShot_Local__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillGiveHeadShot_Local__DelegateSignature, SkillTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnSkillGiveHeadShot_Local__DelegateSignature::SkillTag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillBlocked_Local__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_OnSkillBlocked_Local__DelegateSignature final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bAvoidSkill;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnSkillBlocked_Local__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnSkillBlocked_Local__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnSkillBlocked_Local__DelegateSignature) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_OnSkillBlocked_Local__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillBlocked_Local__DelegateSignature, SkillTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnSkillBlocked_Local__DelegateSignature::SkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillBlocked_Local__DelegateSignature, bAvoidSkill) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnSkillBlocked_Local__DelegateSignature::bAvoidSkill' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnReceiveDamage_Server__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_C_OnReceiveDamage_Server__DelegateSignature final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DamageType;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRemainHP;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDamageIsCut;                                      // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bNotUseCollision;                                  // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnReceiveDamage_Server__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnReceiveDamage_Server__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnReceiveDamage_Server__DelegateSignature) == 0x000020, "Wrong size on BP_AJBInGameCharacter_C_OnReceiveDamage_Server__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnReceiveDamage_Server__DelegateSignature, Damage) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnReceiveDamage_Server__DelegateSignature::Damage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnReceiveDamage_Server__DelegateSignature, DamageType) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnReceiveDamage_Server__DelegateSignature::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnReceiveDamage_Server__DelegateSignature, DamageCauser) == 0x000010, "Member 'BP_AJBInGameCharacter_C_OnReceiveDamage_Server__DelegateSignature::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnReceiveDamage_Server__DelegateSignature, bRemainHP) == 0x000018, "Member 'BP_AJBInGameCharacter_C_OnReceiveDamage_Server__DelegateSignature::bRemainHP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnReceiveDamage_Server__DelegateSignature, bDamageIsCut) == 0x000019, "Member 'BP_AJBInGameCharacter_C_OnReceiveDamage_Server__DelegateSignature::bDamageIsCut' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnReceiveDamage_Server__DelegateSignature, bNotUseCollision) == 0x00001A, "Member 'BP_AJBInGameCharacter_C_OnReceiveDamage_Server__DelegateSignature::bNotUseCollision' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnOtherGrowup__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_OnOtherGrowup__DelegateSignature final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         Value01;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value02;                                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value03;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnOtherGrowup__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnOtherGrowup__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnOtherGrowup__DelegateSignature) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_OnOtherGrowup__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnOtherGrowup__DelegateSignature, GameplayTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnOtherGrowup__DelegateSignature::GameplayTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnOtherGrowup__DelegateSignature, Value01) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnOtherGrowup__DelegateSignature::Value01' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnOtherGrowup__DelegateSignature, Value02) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_OnOtherGrowup__DelegateSignature::Value02' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnOtherGrowup__DelegateSignature, Value03) == 0x000010, "Member 'BP_AJBInGameCharacter_C_OnOtherGrowup__DelegateSignature::Value03' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnDown_Local__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_OnDown_Local__DelegateSignature final
{
public:
	int32                                         DownedMachingPlayerIndex;                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnDown_Local__DelegateSignature) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_OnDown_Local__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnDown_Local__DelegateSignature) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_OnDown_Local__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnDown_Local__DelegateSignature, DownedMachingPlayerIndex) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnDown_Local__DelegateSignature::DownedMachingPlayerIndex' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRevive_Local__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnRevive_Local__DelegateSignature final
{
public:
	class AActor*                                 Rescuer;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnRevive_Local__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnRevive_Local__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnRevive_Local__DelegateSignature) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnRevive_Local__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRevive_Local__DelegateSignature, Rescuer) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnRevive_Local__DelegateSignature::Rescuer' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnWindowBroken_Local__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_OnWindowBroken_Local__DelegateSignature final
{
public:
	bool                                          bBrokenByAttack;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnWindowBroken_Local__DelegateSignature) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_OnWindowBroken_Local__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnWindowBroken_Local__DelegateSignature) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_OnWindowBroken_Local__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWindowBroken_Local__DelegateSignature, bBrokenByAttack) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnWindowBroken_Local__DelegateSignature::bBrokenByAttack' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillNumUpdated__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_OnSkillNumUpdated__DelegateSignature final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         LeftNum;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnSkillNumUpdated__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnSkillNumUpdated__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnSkillNumUpdated__DelegateSignature) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_OnSkillNumUpdated__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillNumUpdated__DelegateSignature, SkillTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnSkillNumUpdated__DelegateSignature::SkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillNumUpdated__DelegateSignature, LeftNum) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnSkillNumUpdated__DelegateSignature::LeftNum' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillSucceeded_Local__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnSkillSucceeded_Local__DelegateSignature final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnSkillSucceeded_Local__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnSkillSucceeded_Local__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnSkillSucceeded_Local__DelegateSignature) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnSkillSucceeded_Local__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillSucceeded_Local__DelegateSignature, SkillTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnSkillSucceeded_Local__DelegateSignature::SkillTag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillEffectiveTimeDetermined_Local__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_OnSkillEffectiveTimeDetermined_Local__DelegateSignature final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         EffectiveTimeSec;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUpdateEvenIfNotInGameplay;                        // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnSkillEffectiveTimeDetermined_Local__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnSkillEffectiveTimeDetermined_Local__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnSkillEffectiveTimeDetermined_Local__DelegateSignature) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_OnSkillEffectiveTimeDetermined_Local__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillEffectiveTimeDetermined_Local__DelegateSignature, SkillTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnSkillEffectiveTimeDetermined_Local__DelegateSignature::SkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillEffectiveTimeDetermined_Local__DelegateSignature, EffectiveTimeSec) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnSkillEffectiveTimeDetermined_Local__DelegateSignature::EffectiveTimeSec' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillEffectiveTimeDetermined_Local__DelegateSignature, bUpdateEvenIfNotInGameplay) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_OnSkillEffectiveTimeDetermined_Local__DelegateSignature::bUpdateEvenIfNotInGameplay' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillReady_Local__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnSkillReady_Local__DelegateSignature final
{
public:
	class UBP_AJBSkillBase_C*                     ReadySkill;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnSkillReady_Local__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnSkillReady_Local__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnSkillReady_Local__DelegateSignature) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnSkillReady_Local__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillReady_Local__DelegateSignature, ReadySkill) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnSkillReady_Local__DelegateSignature::ReadySkill' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillEffectiveValueDetermined_Local__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_OnSkillEffectiveValueDetermined_Local__DelegateSignature final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         EffectiveValue;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUpdateEvenIfNotInGameplay;                        // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnSkillEffectiveValueDetermined_Local__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnSkillEffectiveValueDetermined_Local__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnSkillEffectiveValueDetermined_Local__DelegateSignature) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_OnSkillEffectiveValueDetermined_Local__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillEffectiveValueDetermined_Local__DelegateSignature, SkillTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnSkillEffectiveValueDetermined_Local__DelegateSignature::SkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillEffectiveValueDetermined_Local__DelegateSignature, EffectiveValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnSkillEffectiveValueDetermined_Local__DelegateSignature::EffectiveValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillEffectiveValueDetermined_Local__DelegateSignature, bUpdateEvenIfNotInGameplay) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_OnSkillEffectiveValueDetermined_Local__DelegateSignature::bUpdateEvenIfNotInGameplay' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnCutDamage_Local__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_OnCutDamage_Local__DelegateSignature final
{
public:
	int32                                         CutDamage;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnCutDamage_Local__DelegateSignature) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_OnCutDamage_Local__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnCutDamage_Local__DelegateSignature) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_OnCutDamage_Local__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnCutDamage_Local__DelegateSignature, CutDamage) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnCutDamage_Local__DelegateSignature::CutDamage' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillFailedToUse_Local__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_C_OnSkillFailedToUse_Local__DelegateSignature final
{
public:
	struct FGameplayTagContainer                  FactorTags;                                        // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnSkillFailedToUse_Local__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnSkillFailedToUse_Local__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnSkillFailedToUse_Local__DelegateSignature) == 0x000020, "Wrong size on BP_AJBInGameCharacter_C_OnSkillFailedToUse_Local__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillFailedToUse_Local__DelegateSignature, FactorTags) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnSkillFailedToUse_Local__DelegateSignature::FactorTags' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnUltimateSkillEffectStarted_Server__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_OnUltimateSkillEffectStarted_Server__DelegateSignature final
{
public:
	int32                                         SerialNumber;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnUltimateSkillEffectStarted_Server__DelegateSignature) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_OnUltimateSkillEffectStarted_Server__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnUltimateSkillEffectStarted_Server__DelegateSignature) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_OnUltimateSkillEffectStarted_Server__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnUltimateSkillEffectStarted_Server__DelegateSignature, SerialNumber) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnUltimateSkillEffectStarted_Server__DelegateSignature::SerialNumber' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnLastKill_Local__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnLastKill_Local__DelegateSignature final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnLastKill_Local__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnLastKill_Local__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnLastKill_Local__DelegateSignature) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnLastKill_Local__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnLastKill_Local__DelegateSignature, SkillTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnLastKill_Local__DelegateSignature::SkillTag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnKill_All__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameCharacter_C_OnKill_All__DelegateSignature final
{
public:
	uint8                                         KillCount;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DeadPlayerID;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLastDefeated;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnKill_All__DelegateSignature) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_OnKill_All__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnKill_All__DelegateSignature) == 0x00000C, "Wrong size on BP_AJBInGameCharacter_C_OnKill_All__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnKill_All__DelegateSignature, KillCount) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnKill_All__DelegateSignature::KillCount' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnKill_All__DelegateSignature, DeadPlayerID) == 0x000004, "Member 'BP_AJBInGameCharacter_C_OnKill_All__DelegateSignature::DeadPlayerID' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnKill_All__DelegateSignature, bIsLastDefeated) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnKill_All__DelegateSignature::bIsLastDefeated' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnDown_All__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_OnDown_All__DelegateSignature final
{
public:
	int32                                         DownedMachingPlayerIndex;                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnDown_All__DelegateSignature) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_OnDown_All__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnDown_All__DelegateSignature) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_OnDown_All__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnDown_All__DelegateSignature, DownedMachingPlayerIndex) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnDown_All__DelegateSignature::DownedMachingPlayerIndex' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillReady_All__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnSkillReady_All__DelegateSignature final
{
public:
	class UBP_AJBSkillBase_C*                     ReadySkill;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnSkillReady_All__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnSkillReady_All__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnSkillReady_All__DelegateSignature) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnSkillReady_All__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillReady_All__DelegateSignature, ReadySkill) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnSkillReady_All__DelegateSignature::ReadySkill' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SkillAnimationTiming_Ready__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_SkillAnimationTiming_Ready__DelegateSignature final
{
public:
	class UBP_AJBSkillBase_C*                     ReadySkill;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRenaturation;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SkillAnimationTiming_Ready__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_SkillAnimationTiming_Ready__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_SkillAnimationTiming_Ready__DelegateSignature) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_SkillAnimationTiming_Ready__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillAnimationTiming_Ready__DelegateSignature, ReadySkill) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SkillAnimationTiming_Ready__DelegateSignature::ReadySkill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillAnimationTiming_Ready__DelegateSignature, bRenaturation) == 0x000008, "Member 'BP_AJBInGameCharacter_C_SkillAnimationTiming_Ready__DelegateSignature::bRenaturation' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SkillAnimationTiming_Active__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_SkillAnimationTiming_Active__DelegateSignature final
{
public:
	class UBP_AJBSkillBase_C*                     ActiveSkill;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRenaturation;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SkillAnimationTiming_Active__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_SkillAnimationTiming_Active__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_SkillAnimationTiming_Active__DelegateSignature) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_SkillAnimationTiming_Active__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillAnimationTiming_Active__DelegateSignature, ActiveSkill) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SkillAnimationTiming_Active__DelegateSignature::ActiveSkill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillAnimationTiming_Active__DelegateSignature, bRenaturation) == 0x000008, "Member 'BP_AJBInGameCharacter_C_SkillAnimationTiming_Active__DelegateSignature::bRenaturation' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SkillAnimationTiming_Inactive__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_SkillAnimationTiming_Inactive__DelegateSignature final
{
public:
	class UBP_AJBSkillBase_C*                     InactiveSkill;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRenaturation;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SkillAnimationTiming_Inactive__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_SkillAnimationTiming_Inactive__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_SkillAnimationTiming_Inactive__DelegateSignature) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_SkillAnimationTiming_Inactive__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillAnimationTiming_Inactive__DelegateSignature, InactiveSkill) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SkillAnimationTiming_Inactive__DelegateSignature::InactiveSkill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillAnimationTiming_Inactive__DelegateSignature, bRenaturation) == 0x000008, "Member 'BP_AJBInGameCharacter_C_SkillAnimationTiming_Inactive__DelegateSignature::bRenaturation' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnLongPressSkillActivated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnLongPressSkillActivated__DelegateSignature final
{
public:
	class UBP_AJBLongPressInteract_C*             LongPressInteract;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnLongPressSkillActivated__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnLongPressSkillActivated__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnLongPressSkillActivated__DelegateSignature) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnLongPressSkillActivated__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnLongPressSkillActivated__DelegateSignature, LongPressInteract) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnLongPressSkillActivated__DelegateSignature::LongPressInteract' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnLongPressSkillInactivated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnLongPressSkillInactivated__DelegateSignature final
{
public:
	class UBP_AJBLongPressInteract_C*             LongPressInteract;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnLongPressSkillInactivated__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnLongPressSkillInactivated__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnLongPressSkillInactivated__DelegateSignature) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnLongPressSkillInactivated__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnLongPressSkillInactivated__DelegateSignature, LongPressInteract) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnLongPressSkillInactivated__DelegateSignature::LongPressInteract' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnChangeCharacterBehavior_Server__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_OnChangeCharacterBehavior_Server__DelegateSignature final
{
public:
	ECharacterBehavior                            New;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterBehavior                            Old;                                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnChangeCharacterBehavior_Server__DelegateSignature) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_OnChangeCharacterBehavior_Server__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnChangeCharacterBehavior_Server__DelegateSignature) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_OnChangeCharacterBehavior_Server__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnChangeCharacterBehavior_Server__DelegateSignature, New) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnChangeCharacterBehavior_Server__DelegateSignature::New' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnChangeCharacterBehavior_Server__DelegateSignature, Old) == 0x000001, "Member 'BP_AJBInGameCharacter_C_OnChangeCharacterBehavior_Server__DelegateSignature::Old' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPlayRadioChat_Local__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_OnPlayRadioChat_Local__DelegateSignature final
{
public:
	int32                                         ActionLogIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           VoiceTag;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnPlayRadioChat_Local__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnPlayRadioChat_Local__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnPlayRadioChat_Local__DelegateSignature) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_OnPlayRadioChat_Local__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPlayRadioChat_Local__DelegateSignature, ActionLogIndex) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnPlayRadioChat_Local__DelegateSignature::ActionLogIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPlayRadioChat_Local__DelegateSignature, VoiceTag) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnPlayRadioChat_Local__DelegateSignature::VoiceTag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPlayDamageVoice_Local__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_OnPlayDamageVoice_Local__DelegateSignature final
{
public:
	bool                                          bCausedByDamageArea;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnPlayDamageVoice_Local__DelegateSignature) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_OnPlayDamageVoice_Local__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnPlayDamageVoice_Local__DelegateSignature) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_OnPlayDamageVoice_Local__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPlayDamageVoice_Local__DelegateSignature, bCausedByDamageArea) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnPlayDamageVoice_Local__DelegateSignature::bCausedByDamageArea' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPassiveAddedAfterSetCauser__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_OnPassiveAddedAfterSetCauser__DelegateSignature final
{
public:
	struct FGameplayTag                           AddCondition;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnPassiveAddedAfterSetCauser__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnPassiveAddedAfterSetCauser__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnPassiveAddedAfterSetCauser__DelegateSignature) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_OnPassiveAddedAfterSetCauser__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPassiveAddedAfterSetCauser__DelegateSignature, AddCondition) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnPassiveAddedAfterSetCauser__DelegateSignature::AddCondition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPassiveAddedAfterSetCauser__DelegateSignature, Causer) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnPassiveAddedAfterSetCauser__DelegateSignature::Causer' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnHitMultipleCloseRange__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_OnHitMultipleCloseRange__DelegateSignature final
{
public:
	EAJBSkillType                                 SkillType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HittedCharacterCount;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BlockedCharacterCount;                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InvalidatedCharacterCount;                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnHitMultipleCloseRange__DelegateSignature) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_OnHitMultipleCloseRange__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnHitMultipleCloseRange__DelegateSignature) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_OnHitMultipleCloseRange__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnHitMultipleCloseRange__DelegateSignature, SkillType) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnHitMultipleCloseRange__DelegateSignature::SkillType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnHitMultipleCloseRange__DelegateSignature, HittedCharacterCount) == 0x000004, "Member 'BP_AJBInGameCharacter_C_OnHitMultipleCloseRange__DelegateSignature::HittedCharacterCount' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnHitMultipleCloseRange__DelegateSignature, BlockedCharacterCount) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnHitMultipleCloseRange__DelegateSignature::BlockedCharacterCount' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnHitMultipleCloseRange__DelegateSignature, InvalidatedCharacterCount) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_OnHitMultipleCloseRange__DelegateSignature::InvalidatedCharacterCount' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSpawnSignalPin_Local__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnSpawnSignalPin_Local__DelegateSignature final
{
public:
	struct FGameplayTag                           SignalPinType;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnSpawnSignalPin_Local__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnSpawnSignalPin_Local__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnSpawnSignalPin_Local__DelegateSignature) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnSpawnSignalPin_Local__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSpawnSignalPin_Local__DelegateSignature, SignalPinType) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnSpawnSignalPin_Local__DelegateSignature::SignalPinType' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPassiveGainedForAchievement__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_OnPassiveGainedForAchievement__DelegateSignature final
{
public:
	struct FGameplayTag                           CauserType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnPassiveGainedForAchievement__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnPassiveGainedForAchievement__DelegateSignature");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnPassiveGainedForAchievement__DelegateSignature) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_OnPassiveGainedForAchievement__DelegateSignature");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPassiveGainedForAchievement__DelegateSignature, CauserType) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnPassiveGainedForAchievement__DelegateSignature::CauserType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPassiveGainedForAchievement__DelegateSignature, SerialNumber) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnPassiveGainedForAchievement__DelegateSignature::SerialNumber' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ExecuteUbergraph_BP_AJBInGameCharacter
// 0x27A0 (0x27A0 - 0x0000)
struct BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_CheckEnableInputCameraOnly_bReturnValue;  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInput_InputEnable;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue;            // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue1;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable1;                                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue2;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable1;                              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue; // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue2;    // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue1; // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMovementMode                                 Temp_byte_Variable;                                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue3;    // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractActor;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor1;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ServerIsInteractingPlayer;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser1;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x00A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPenetrating;                         // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_FactorTag;                            // 0x00B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue;     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue6;                 // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable2;                                // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamageCauser2;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_DamageType5;                    // 0x00D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SerialNumber5;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_AttackDistance1;                // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_KilledCharacterId1;             // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_WithSeparatedStandAttack;       // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_HitEnemysSeparatedStand;        // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E3[0x1];                                       // 0x00E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_UltimateSkillSerialNumberIfInEffect1; // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_WasCriticalState;               // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_DeadPlayerID2;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWasCriticalState1;             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_DamageType4;                    // 0x00F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetPairCharacterBP_PairCharacterBP;       // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IncrementKillCount_Server__Result;        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetPairCharacterBP_PairCharacterBP1;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue;     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDeathAndEnd_ReturnValue;                // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue7;                 // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMovementMode                                 Temp_byte_Variable1;                               // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue;           // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue3;           // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue8;                 // 0x015F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue4;           // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A[0x2];                                      // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue9;                 // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_SkillTag3;                      // 0x0178(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SerialNumber4;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_AttackDistance;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_KilledCharacterId;              // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWithSeparatedStandAttack1;     // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bHitEnemysSeparatedStand;       // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bFirstBlood;                    // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_CustomEvent_UltimateSkillSerialNumberIfInEffect; // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_ElapsedTime;                    // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_DeadPlayerID1;                  // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsLastDefeated2;               // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bPlayerKill;                    // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bSpecialKill;                   // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsLastDefeated1;               // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bDiedOfKillZ;                   // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcBattleRank_OnServer_IsDetermined;     // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19E[0x2];                                      // 0x019E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalcBattleRank_OnServer_Rank;             // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcBattleRank_OnServer_RankWithoutCPU;   // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller1; // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Rank;                           // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_RankWithoutCPU;                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue; // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue10;                // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue1; // 0x01BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue11;                // 0x01BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue1;    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue12;                // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CA[0x2];                                      // 0x01CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsResurrectable_bResult;                  // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D5[0x3];                                      // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue6;                  // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue1; // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue2; // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x01DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGameGameState_bIsValid;           // 0x01DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AAJBInGameGameState*                    CallFunc_GetAJBInGameGameState_ReturnValue;        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBBattleGameState_C*               K2Node_DynamicCast_AsBP_AJBBattle_Game_State;      // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetElapsedInGameTimespan_ReturnValue;     // 0x01F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JudgeFirstBlood_IsFirstBlood;             // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue2; // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue3; // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue13;                // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20B[0x5];                                      // 0x020B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_SkillTag2;                      // 0x0210(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable3;                    // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWasCriticalState;              // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21D[0x3];                                      // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_DamageType3;                    // 0x0220(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsResurrectable_bResult1;                 // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue14;                // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsResurrectable_bResult2;                 // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x022B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue15;                // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         K2Node_CustomEvent_KillCount;                      // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22E[0x2];                                      // 0x022E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_DeadPlayerId;                   // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsLastDefeated;                // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_InvincibleTimeSec4;             // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue16;                // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue5;           // 0x023E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue17;                // 0x023F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable3;                   // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0244(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectOnLocal_ParticleEffect; // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue7;                  // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInput_InputEnable1;            // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Heal_bSuccess;                            // 0x0266(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_267[0x1];                                      // 0x0267(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Heal_HealValue;                           // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable4;                    // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_ReservedDamageCauser;           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ReservedDamageType;             // 0x0278(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Reserved_SerialNumber;          // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Reserved_AttackDistance;        // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Reserved_WithSeparatedStandAttack; // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Reserved_HitEnemyesSeparatedStand; // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28A[0x2];                                      // 0x028A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Reserved_UltimateSkillSerialNumberIfInEffect; // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character3;     // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInputCameraOnly_bReturnValue1; // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue18;                // 0x029A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29B[0x1];                                      // 0x029B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable4;                   // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEnableInputCameraOnly_bReturnValue2; // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue19;                // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A2[0x2];                                      // 0x02A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue8;                  // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_DownedMachingPlayerIndex;       // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable5;                    // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue3; // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue20;                // 0x02B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B6[0x2];                                      // 0x02B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable5;                   // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent1;    // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue9;                  // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable2;                              // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetCharacterIdFromActor_CharacterId;      // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DA[0x6];                                      // 0x02DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Rescuer1;                       // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F2[0x2];                                      // 0x02F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable6;                    // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable6;                   // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue10;                 // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue6;           // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue21;                // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInput_InputEnable2;            // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue7;           // 0x0303(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue22;                // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0305(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_306[0x2];                                      // 0x0306(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Rescuer;                        // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable7;                    // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue1;    // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0315(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue23;                // 0x0316(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0317(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                Temp_object_Variable;                              // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable7;                   // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue11;                 // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue2;    // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue4; // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue24;                // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue25;                // 0x033B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue5; // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D[0x3];                                      // 0x033D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue1;            // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue2; // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x0345(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_346[0x2];                                      // 0x0346(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBBattleGameState_C*               K2Node_DynamicCast_AsBP_AJBBattle_Game_State1;     // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable8;                    // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue3;    // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable8;                   // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue26;                // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x3];                                      // 0x0369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue12;                 // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue3; // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue6; // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue7; // 0x0372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue3;                   // 0x0373(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue27;                // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue8;           // 0x0375(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue28;                // 0x0376(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0377(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character4;     // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue9;           // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue29;                // 0x0382(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0383(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue30;                // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0385(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x0386(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x0387(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBI_AdditionalAP_C>    K2Node_DynamicCast_AsBI_Additional_AP;             // 0x0388(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399[0x3];                                      // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable9;                    // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue31;                // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A2[0x6];                                      // 0x03A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x03B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable9;                   // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectOnLocal_ParticleEffect1; // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue13;                 // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEnableInput_InputEnable3;            // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInputCameraOnly_bReturnValue3; // 0x03CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue32;                // 0x03CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CF[0x1];                                      // 0x03CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue1;                // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBBattleGameState_C*               K2Node_DynamicCast_AsBP_AJBBattle_Game_State2;     // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess11;                     // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBInGameCharacter_C*>       CallFunc_GetJoinPawns_OutPawns;                    // 0x03E8(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue1;                    // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue2;                    // 0x03FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue3;                    // 0x03FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue4; // 0x03FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue33;                // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue4;                    // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0402(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_403[0x5];                                      // 0x0403(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_TheWorldInterface_C> K2Node_DynamicCast_AsBI_the_World_Interface;       // 0x0408(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess12;                     // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue4;    // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue5; // 0x041A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue6; // 0x041B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCritical_IsCritical;                    // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInput_InputEnable4;            // 0x041D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41E[0x2];                                      // 0x041E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable1;                             // 0x0420(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue5;    // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue6;    // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Revive_bSuccess;                          // 0x0432(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_433[0x5];                                      // 0x0433(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetPairCharacterBP_PairCharacterBP2;      // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x0442(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue7;    // 0x0443(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue4;                   // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsResurrectable_bResult3;                 // 0x0445(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue34;                // 0x0446(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsResurrectable_bResult4;                 // 0x0447(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue35;                // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue5;                    // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44A[0x2];                                      // 0x044A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable10;                   // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue7; // 0x0451(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_452[0x6];                                      // 0x0452(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AJBSkillBase_C*>             CallFunc_GetComponentsByClass_ReturnValue;         // 0x0458(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller2; // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess13;                     // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_479[0x3];                                      // 0x0479(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable10;                  // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue14;                 // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEnableInputCameraOnly_bReturnValue4; // 0x0484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue36;                // 0x0485(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0486(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue8; // 0x0487(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue37;                // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x048A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48B[0x5];                                      // 0x048B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue2;           // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue38;                // 0x049A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerCharacterAsGame_bPlayerCharacterAsGame; // 0x049B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x049C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue9; // 0x049D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue4; // 0x049E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue5;                   // 0x049F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue1;          // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBCharacterActiveBehaviorInfo        K2Node_MakeStruct_AJBCharacterActiveBehaviorInfo;  // 0x04A8(0x0028)()
	bool                                          CallFunc_IsResurrectable_bResult5;                 // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue5;                  // 0x04D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue39;                // 0x04D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x04D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue2;          // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayModeEquals_bResult;                   // 0x04D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsResurrectable_bResult6;                 // 0x04D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue40;                // 0x04D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSpecialKill_bSpecialKill;            // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D9[0x7];                                      // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AdditionalAP_C>    K2Node_DynamicCast_AsBI_Additional_AP1;            // 0x04E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess14;                     // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AdditionalAP_C>    K2Node_DynamicCast_AsBI_Additional_AP2;            // 0x04F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess15;                     // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_509[0x3];                                      // 0x0509(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_DeltaSeconds2;                  // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaSeconds1;                  // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaSeconds;                   // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable2;                // 0x051C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x051D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x051E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue6;                  // 0x051F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue;            // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue8;                     // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue41;                // 0x052A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue3;          // 0x052B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAnimationLoop_ReturnValue;           // 0x052C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue4;    // 0x052D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue42;                // 0x052E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable2;                      // 0x052F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable11;                   // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534[0x4];                                      // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_Tag2;                                 // 0x0538(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Event_Operator1;                            // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Event_Target;                               // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_CauserType;                           // 0x0550(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SerialNumber1;                        // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55C[0x4];                                      // 0x055C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameMovableStand*                 K2Node_DynamicCast_AsAJBIn_Game_Movable_Stand;     // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess16;                     // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0569(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue1;                  // 0x056A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue2;                  // 0x056B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56C[0x4];                                      // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_Tag1;                                 // 0x0570(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue3;                  // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue4;                  // 0x0579(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue5;                  // 0x057A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57B[0x1];                                      // 0x057B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable11;                  // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x058C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x058D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x058E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue43;                // 0x058F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue15;                 // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C[0x4];                                      // 0x059C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x05A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable12;                   // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AC[0x4];                                      // 0x05AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent; // 0x05B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_Event_OperatorCharacter1;                   // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_EffectTag2;                           // 0x05C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_SETag2;                               // 0x05C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bNoDamage;                            // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_Event_OperatorCharacter;                    // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_EffectTag1;                           // 0x05E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_SETag1;                               // 0x05E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetPoliticAreaInNoDamageSETag_SETag;      // 0x05F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetPoliticAreaInNoDamageSETag_SETag1;     // 0x05F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamagedActor;                         // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_DamageForHPAP;                        // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_DamageForAAP;                         // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_CutDamage;                            // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_614[0x4];                                      // 0x0614(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_DamageType;                           // 0x0618(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SerialNumber;                         // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamagePriority                               K2Node_Event_DamagePriority;                       // 0x0624(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_625[0x3];                                      // 0x0625(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_AttackDistance;                       // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62C[0x4];                                      // 0x062C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_WithSeparatedStandAttack;             // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_HitEnemysSeparatedStand;              // 0x0639(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bPenetrateAP;                         // 0x063A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bNotUseCollision;                     // 0x063B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63C[0x4];                                      // 0x063C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select1_Default;                            // 0x0640(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CharacterDamage_Server__EffectiveDamage;  // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterBehavior                            CallFunc_CharacterDamage_Server__CharacterBehavior; // 0x064C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CharacterDamage_Server__bDamageIsCutByAAP; // 0x064D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64E[0x2];                                      // 0x064E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CharacterDamage_Server__BeforeAAP;        // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CharacterDamage_Server__AfterAAP;         // 0x0654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRemainHP_IsRemain;                      // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue44;                // 0x0659(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x065A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65B[0x5];                                      // 0x065B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character5;     // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess17;                     // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue7;                  // 0x0669(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x066A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue2;              // 0x066B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x066C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue6;                   // 0x066D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveGameplayTag_ReturnValue;            // 0x066E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66F[0x1];                                      // 0x066F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable12;                  // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue10;          // 0x0674(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue45;                // 0x0675(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_676[0x2];                                      // 0x0676(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue16;                 // 0x0678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue11;          // 0x067C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue46;                // 0x067D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_67E[0x2];                                      // 0x067E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_DamageType2;                    // 0x0680(0x0008)(NoDestructor, HasGetValueTypeHash)
	EDamagePriority                               K2Node_CustomEvent_DamagePriority;                 // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_689[0x7];                                      // 0x0689(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamageCauser1;                  // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bRemainHP;                      // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bDamageIsCut;                   // 0x0699(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69A[0x2];                                      // 0x069A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_BeforeAAP;                      // 0x069C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_AfterAAP;                       // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue12;          // 0x06A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue47;                // 0x06A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A6[0x2];                                      // 0x06A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP1;    // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess1;       // 0x06B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue8;    // 0x06B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x06B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B3[0x1];                                      // 0x06B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable13;                   // 0x06B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable13;                  // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue5;    // 0x06BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue48;                // 0x06BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6BE[0x2];                                      // 0x06BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue17;                 // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C4[0x4];                                      // 0x06C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_Tag;                                  // 0x06C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_FloatValue;                           // 0x06D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue6;                  // 0x06D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D5[0x3];                                      // 0x06D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x06D8(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess18;                     // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue5; // 0x06F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue6;                    // 0x06F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F3[0x5];                                      // 0x06F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameMovableStand_C*            K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand;  // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess19;                     // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue7;                    // 0x0701(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue9;                     // 0x0702(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue4;          // 0x0703(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue3;           // 0x0704(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue8;                    // 0x0705(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue9;                    // 0x0706(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInvincibleDueForSystemReason_bIsInvincible; // 0x0707(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGameplayTag_ReturnValue1;           // 0x070C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue9;    // 0x070D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue10;                    // 0x070E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue4;           // 0x070F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate2;             // 0x0710(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue5;           // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_721[0x7];                                      // 0x0721(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AJBActionBase_C*>            CallFunc_GetComponentsByClass_ReturnValue1;        // 0x0728(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0738(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue10;   // 0x073C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73D[0x3];                                      // 0x073D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Damage3;                        // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_744[0x4];                                      // 0x0744(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_DamageType1;                    // 0x0748(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_RemainHP1;                      // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bDamageIsCutByStatus;           // 0x0759(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bDamageIsCutByAAP;              // 0x075A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75B[0x1];                                      // 0x075B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Damage2;                        // 0x075C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_DamageType;                     // 0x0760(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageReceiver;                 // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_RemainHP;                       // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_DamageIsCut;                    // 0x0771(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_772[0x2];                                      // 0x0772(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_SerialNumber3;                  // 0x0774(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DamageReceiverIsPlayer;         // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bWithSeparatedStandAttack;      // 0x0779(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bHitEnemysSeparateStand;        // 0x077A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77B[0x5];                                      // 0x077B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName14;                   // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue10;                   // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_789[0x3];                                      // 0x0789(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable3;                              // 0x078C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerController_ReturnValue5;          // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue1;        // 0x0791(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_792[0x6];                                      // 0x0792(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_TheWorldInterface_C> CallFunc_NotifyTheWorld_self_CastInput;            // 0x0798(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue10; // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A9[0x3];                                      // 0x07A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue2;            // 0x07AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue7;                   // 0x07B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x07B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B2[0x6];                                      // 0x07B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate3;             // 0x07B8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable1; // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue2;    // 0x07C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue8;                  // 0x07CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue8; // 0x07CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue8;                   // 0x07CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7CD[0x3];                                      // 0x07CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName13;                   // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue49;                // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D9[0x3];                                      // 0x07D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x07DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CutDamage;                      // 0x07E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x07EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7ED[0x3];                                      // 0x07ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_Event_OperaatorCharacter;                   // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bNewFlag;                             // 0x07F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F9[0x7];                                      // 0x07F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_EffectTag;                            // 0x0800(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_SETag;                                // 0x0808(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue11;   // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_811[0x7];                                      // 0x0811(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetPoliticAreaInNoDamageSETag_SETag2;     // 0x0818(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetPoliticAreaInNoDamageSETag_SETag3;     // 0x0820(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable4;                              // 0x0828(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82C[0x4];                                      // 0x082C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate4;             // 0x0830(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue2;        // 0x0840(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue11; // 0x0841(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue50;                // 0x0842(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_843[0x1];                                      // 0x0843(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue3;            // 0x0844(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName12;                   // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue11;                   // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue12;                   // 0x0851(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_852[0x6];                                      // 0x0852(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select2_Default;                            // 0x0858(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate5;             // 0x0860(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue12;   // 0x0870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_871[0x7];                                      // 0x0871(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName11;                   // 0x0878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue4;            // 0x0880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable5;                              // 0x0884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue13;          // 0x0888(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue13;   // 0x0889(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue51;                // 0x088A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88B[0x1];                                      // 0x088B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue5;            // 0x088C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPair_bPairCharacter;                    // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue52;                // 0x0891(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_892[0x2];                                      // 0x0892(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable6;                              // 0x0894(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue9;                  // 0x0898(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_899[0x7];                                      // 0x0899(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBInGameCharacter_C*>       CallFunc_GetJoinPawns_OutPawns1;                   // 0x08A0(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          Temp_bool_Has_Been_Initd_Variable3;                // 0x08B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B1[0x3];                                      // 0x08B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue4;                // 0x08B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate6;             // 0x08B8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue6;           // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C9[0x7];                                      // 0x08C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName10;                   // 0x08D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue7;           // 0x08D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInput_InputEnable5;            // 0x08D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue8;           // 0x08DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DB[0x1];                                      // 0x08DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable14;                  // 0x08DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x08E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E1[0x3];                                      // 0x08E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue18;                 // 0x08E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEnableInputCameraOnly_bReturnValue5; // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue53;                // 0x08F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable1;         // 0x08F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue54;                // 0x08F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue10;                 // 0x08F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F5[0x3];                                      // 0x08F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable14;                   // 0x08F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8FC[0x4];                                      // 0x08FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable2;                             // 0x0900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_Array_Get_Item;                           // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0910(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess20;                     // 0x0918(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_919[0x7];                                      // 0x0919(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetPairCharacterBP_PairCharacterBP3;      // 0x0920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDeathAndEnd_ReturnValue1;               // 0x0928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue55;                // 0x0929(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue11;                 // 0x092A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue9;           // 0x092B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue14;   // 0x092C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue15;   // 0x092D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x092E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue10;          // 0x092F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue13;                   // 0x0930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bEnable5;                       // 0x0931(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bOperatorIsEmpty1;              // 0x0932(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_933[0x1];                                      // 0x0933(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable7;                              // 0x0934(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_Select3_Default;                            // 0x0938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue16;   // 0x0939(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93A[0x2];                                      // 0x093A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_InvincibleTimeSec3;             // 0x093C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_InvincibleTimeSec2;             // 0x0940(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Value1;                         // 0x0944(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Heal_bSuccess1;                           // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_949[0x3];                                      // 0x0949(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Heal_HealValue1;                          // 0x094C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0950(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue17;   // 0x0954(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_955[0x3];                                      // 0x0955(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_InvincibleTimeSec1;             // 0x0958(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEnableInputCameraOnly_bReturnValue6; // 0x095C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95D[0x3];                                      // 0x095D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x0960(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue56;                // 0x0964(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable3;                      // 0x0965(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_966[0x2];                                      // 0x0966(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_InvincibleTimeSec;              // 0x0968(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bAPMax;                         // 0x096C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable5;                               // 0x096D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue18;   // 0x096E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96F[0x1];                                      // 0x096F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_CustomEvent_OtherCharacterBP1;              // 0x0970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0978(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue11;                    // 0x0984(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_985[0x3];                                      // 0x0985(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0988(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0994(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x09A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue19;   // 0x09AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AD[0x3];                                      // 0x09AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingleByProfile_OutHit;          // 0x09B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleByProfile_ReturnValue;     // 0x0A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0A39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0A3A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3B[0x1];                                      // 0x0A3B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0A3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0A40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0A44(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0A50(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0A5C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0A68(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A74[0x4];                                      // 0x0A74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0A78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0A80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0A88(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0A90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0A98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0A9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0AA0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0AAC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character6;     // 0x0AB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess21;                     // 0x0AC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue12;                    // 0x0AC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC2[0x2];                                      // 0x0AC2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0AC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable1;                             // 0x0AC8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable3;                                // 0x0AD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue14;                   // 0x0AD4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD5[0x3];                                      // 0x0AD5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue19;                 // 0x0AD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable8;                              // 0x0ADC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue3;        // 0x0AE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable6;                               // 0x0AE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue3;    // 0x0AE2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AE3[0x1];                                      // 0x0AE3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0AE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0AE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AEC[0x4];                                      // 0x0AEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetPairCharacterBP_PairCharacterBP4;      // 0x0AF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBInterface_C>    CallFunc_AJBDamage_self_CastInput;                 // 0x0AF8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue13;                    // 0x0B08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B09[0x7];                                      // 0x0B09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded1;                        // 0x0B10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInfinityRevive1;               // 0x0B18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bInfinityRevive;                // 0x0B19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1A[0x6];                                      // 0x0B1A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_InString;                       // 0x0B20(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bPrintToScreen;                 // 0x0B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bPrintToLog;                    // 0x0B31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B32[0x2];                                      // 0x0B32(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_CustomEvent_TextColor;                      // 0x0B34(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Duration;                       // 0x0B44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEnableInput_InputEnable6;            // 0x0B48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B49[0x7];                                      // 0x0B49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBCloudPointTarget_C*              CallFunc_TryGetCloudPointTarget_CloudPointTarget;  // 0x0B50(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Value;                          // 0x0B58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5C[0x4];                                      // 0x0B5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AdditionalAP_C>    K2Node_DynamicCast_AsBI_Additional_AP3;            // 0x0B60(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess22;                     // 0x0B70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess1;             // 0x0B71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B72[0x6];                                      // 0x0B72(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance1;    // 0x0B78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue2;             // 0x0B80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayModeEquals_bResult1;                  // 0x0B84(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B85[0x3];                                      // 0x0B85(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_CustomEvent_OtherCharacterBP;               // 0x0B88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0B90(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue14;                    // 0x0BA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA1[0x7];                                      // 0x0BA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_ANS_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ANS;  // 0x0BA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess23;                     // 0x0BB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB1[0x3];                                      // 0x0BB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable4;                                // 0x0BB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue15;                    // 0x0BB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB9[0x7];                                      // 0x0BB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetAchievedGrowup_Growup;                 // 0x0BC0(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAchievedGrowup_Value;                  // 0x0BC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue20;                 // 0x0BCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue6;            // 0x0BD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum3_CmpSuccess;                     // 0x0BD4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD5[0x3];                                      // 0x0BD5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable2;                             // 0x0BD8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum4_CmpSuccess;                     // 0x0BE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BE1[0x7];                                      // 0x0BE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable3;                             // 0x0BE8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable3;                             // 0x0BF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue14;          // 0x0BF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue57;                // 0x0BF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BFA[0x6];                                      // 0x0BFA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_ANS_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ANS1; // 0x0C00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess24;                     // 0x0C08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue16;                    // 0x0C09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C0A[0x2];                                      // 0x0C0A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue1;       // 0x0C0C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0C18(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue12; // 0x0C24(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue58;                // 0x0C25(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C26[0x2];                                      // 0x0C26(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Value3;                               // 0x0C28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0C2C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0C38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0C3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C3D[0x3];                                      // 0x0C3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue1;                         // 0x0C40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Value2;                               // 0x0C44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x0C48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C49[0x3];                                      // 0x0C49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue2;        // 0x0C4C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue2;                         // 0x0C58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue2;          // 0x0C5C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5D[0x3];                                      // 0x0C5D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue3;                         // 0x0C60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue3;          // 0x0C64(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C65[0x3];                                      // 0x0C65(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Value1;                               // 0x0C68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Value;                                // 0x0C6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue15;          // 0x0C70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue59;                // 0x0C71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue13; // 0x0C72(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C73[0x1];                                      // 0x0C73(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue1;        // 0x0C74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable4;                             // 0x0C78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0C80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x0C84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue17;                    // 0x0C88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue6;          // 0x0C89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable7;                               // 0x0C8A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue6; // 0x0C8B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue9;                   // 0x0C8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C8D[0x3];                                      // 0x0C8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller3; // 0x0C90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess25;                     // 0x0C98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue18;                    // 0x0C99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9A[0x6];                                      // 0x0C9A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetCurrentFlowState_FlowState;            // 0x0CA0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue1;      // 0x0CA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable8;                               // 0x0CA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue20;   // 0x0CAA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CAB[0x5];                                      // 0x0CAB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select4_Default;                            // 0x0CB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue14; // 0x0CB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB9[0x7];                                      // 0x0CB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0CC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue60;                // 0x0CC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue19;                    // 0x0CC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue15; // 0x0CCA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue7; // 0x0CCB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue10;                  // 0x0CCC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue6;    // 0x0CCD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue16;          // 0x0CCE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue61;                // 0x0CCF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue62;                // 0x0CD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue17;          // 0x0CD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue63;                // 0x0CD2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue7;    // 0x0CD3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue64;                // 0x0CD4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD5[0x3];                                      // 0x0CD5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable1;                               // 0x0CD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0CE0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0CEC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0CF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue1;                   // 0x0CFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue65;                // 0x0CFD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CFE[0x2];                                      // 0x0CFE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_CustomEvent_Operator;                       // 0x0D00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Time;                           // 0x0D08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_CustomEvent_Timing;                         // 0x0D0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bEnable4;                       // 0x0D0D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bOperatorIsEmpty;               // 0x0D0E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue12;                 // 0x0D0F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue66;                // 0x0D10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue4;         // 0x0D11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue5;         // 0x0D12(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue1;     // 0x0D13(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue13;                 // 0x0D14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue14;                 // 0x0D15(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue21;   // 0x0D16(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue67;                // 0x0D17(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInputCameraOnly_bReturnValue7; // 0x0D18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInput_InputEnable7;            // 0x0D19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue68;                // 0x0D1A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue8;    // 0x0D1B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue20;                    // 0x0D1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue69;                // 0x0D1D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue7;          // 0x0D1E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess;              // 0x0D1F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD;           // 0x0D20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess1;             // 0x0D28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D29[0x7];                                      // 0x0D29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD1;          // 0x0D30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0D38(0x0008)(NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue16; // 0x0D40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue70;                // 0x0D41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess2;             // 0x0D42(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D43[0x5];                                      // 0x0D43(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD2;          // 0x0D48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShowingEmoteSelect_bShow;               // 0x0D50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue17; // 0x0D51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue8; // 0x0D52(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D53[0x5];                                      // 0x0D53(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_CanEmote_FailureFactor;                   // 0x0D58(0x0020)()
	struct FGameplayTagContainer                  CallFunc_CanEmote_FailureSkills;                   // 0x0D78(0x0020)()
	bool                                          CallFunc_CanEmote_bCanEmote;                       // 0x0D98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue11;                  // 0x0D99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue18;          // 0x0D9A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue71;                // 0x0D9B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue6;         // 0x0D9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue15;                 // 0x0D9D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue9; // 0x0D9E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue9;    // 0x0D9F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue18; // 0x0DA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue72;                // 0x0DA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue12;                  // 0x0DA2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnBeforeInteract_bShouldInteract;         // 0x0DA3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue3;              // 0x0DA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue4;              // 0x0DA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0DAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue1;                        // 0x0DB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue19;          // 0x0DB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue73;                // 0x0DB5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue1;      // 0x0DB6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue74;                // 0x0DB7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue20;          // 0x0DB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue75;                // 0x0DB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DBA[0x6];                                      // 0x0DBA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_CanEmote_FailureFactor1;                  // 0x0DC0(0x0020)()
	struct FGameplayTagContainer                  CallFunc_CanEmote_FailureSkills1;                  // 0x0DE0(0x0020)()
	bool                                          CallFunc_CanEmote_bCanEmote1;                      // 0x0E00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue19; // 0x0E01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue76;                // 0x0E02(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E03[0x1];                                      // 0x0E03(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue4;                         // 0x0E04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue5;                         // 0x0E08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue5;              // 0x0E0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess3;             // 0x0E10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E11[0x7];                                      // 0x0E11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD3;          // 0x0E18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue4;          // 0x0E20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShowingEmoteSelect_bShow1;              // 0x0E21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue77;                // 0x0E22(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EmotePoseExists_bResult;                  // 0x0E23(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue16;                 // 0x0E24(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPossibleDash_bPossible;              // 0x0E25(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInputCameraOnly_bReturnValue8; // 0x0E26(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue78;                // 0x0E27(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0E28(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x0E34(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckConstantVelocity_bConstantVelocity;  // 0x0E40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E41[0x3];                                      // 0x0E41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0E44(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue79;                // 0x0E50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E51[0x3];                                      // 0x0E51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0E54(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckConstantVelocity_bConstantVelocity1; // 0x0E60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckConstantVelocity_bConstantVelocity2; // 0x0E61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue80;                // 0x0E62(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInput_InputEnable8;            // 0x0E63(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue20; // 0x0E64(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue21;          // 0x0E65(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue81;                // 0x0E66(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue82;                // 0x0E67(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOperatingSeparatedStand_ReturnValue;    // 0x0E68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue21; // 0x0E69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue83;                // 0x0E6A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue10; // 0x0E6B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue13;                  // 0x0E6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue10;   // 0x0E6D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryGetSupportSkillComponent_bSuccess;     // 0x0E6E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E6F[0x1];                                      // 0x0E6F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSupportSkillBase_C*              CallFunc_TryGetSupportSkillComponent_SupportSkillComponent; // 0x0E70(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue84;                // 0x0E78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E79[0x7];                                      // 0x0E79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBLongPressInteract_C*             K2Node_DynamicCast_AsBP_AJBLong_Press_Interact;    // 0x0E80(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess26;                     // 0x0E88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActive_bActive;                      // 0x0E89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue17;                 // 0x0E8A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInput_InputEnable9;            // 0x0E8B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue22;          // 0x0E8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E8D[0x3];                                      // 0x0E8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName15;                   // 0x0E90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue85;                // 0x0E98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue22;   // 0x0E99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue23;          // 0x0E9A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue86;                // 0x0E9B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanDash_bIsDash;                          // 0x0E9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue18;                 // 0x0E9D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9E[0x2];                                      // 0x0E9E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_HalfHeightAdjust1;                    // 0x0EA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ScaledHalfHeightAdjust1;              // 0x0EA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue6;              // 0x0EA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_HalfHeightAdjust;                     // 0x0EAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ScaledHalfHeightAdjust;               // 0x0EB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x0EB4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0EC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0EC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0EC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue3;                  // 0x0ECC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0ED8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE4[0x4];                                      // 0x0EE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0EE8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue2;            // 0x0F70(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F7C[0x4];                                      // 0x0F7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult1;   // 0x0F80(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         K2Node_CustomEvent_Damage1;                        // 0x1008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEnableInputCameraOnly_bReturnValue9; // 0x100C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue87;                // 0x100D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_100E[0x2];                                     // 0x100E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PrevSP;                         // 0x1010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CurrentSP;                      // 0x1014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x1018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1019[0x3];                                     // 0x1019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x101C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x1028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue1;                      // 0x1034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate7;             // 0x1040(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue21;                 // 0x1050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWalkingState                                 K2Node_CustomEvent_NewState2;                      // 0x1054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1055[0x3];                                     // 0x1055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x1058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue1;            // 0x105C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWalkingState                                 K2Node_CustomEvent_NewState1;                      // 0x105D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWalkingState                                 K2Node_CustomEvent_NewState;                       // 0x105E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEnableInputCameraOnly_bReturnValue10; // 0x105F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInputCameraOnly_bReturnValue11; // 0x1060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue88;                // 0x1061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue89;                // 0x1062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInput_InputEnable10;           // 0x1063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue1;           // 0x1064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1065[0x3];                                     // 0x1065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBInGamePlayerController_C*> K2Node_CustomEvent_SpectatorControllers;           // 0x1068(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          K2Node_SwitchEnum5_CmpSuccess;                     // 0x1078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1079[0x7];                                     // 0x1079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_PC1;                                  // 0x1080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_Event_PC;                                   // 0x1088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SetPositionNo;                  // 0x1090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEnableInput_InputEnable11;           // 0x1094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue90;                // 0x1095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum6_CmpSuccess;                     // 0x1096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1097[0x1];                                     // 0x1097(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x1098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBBattleGameMode_C*                K2Node_DynamicCast_AsBP_AJBBattle_Game_Mode;       // 0x10A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess27;                     // 0x10A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A9[0x7];                                     // 0x10A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetCurrentFlowStateGameplayTag_CurrentState; // 0x10B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue2;      // 0x10B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10B9[0x7];                                     // 0x10B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_HitTarget1;                     // 0x10C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBInGameSkillComponent*               K2Node_CustomEvent_Causer1;                        // 0x10C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_CauserType1;                    // 0x10D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SerialNumber2;                  // 0x10D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10DC[0x4];                                     // 0x10DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_HitTarget;                      // 0x10E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag6;                           // 0x10E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Causer;                         // 0x10F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_CauserType;                     // 0x10F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SerialNumber1;                  // 0x1100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1104[0x4];                                     // 0x1104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_PassiveSkillAffecterInterface_C> K2Node_DynamicCast_AsBI_Passive_Skill_Affecter_Interface; // 0x1108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess28;                     // 0x1118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1119[0x7];                                     // 0x1119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface; // 0x1120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess29;                     // 0x1130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1131[0x7];                                     // 0x1131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetPassiveSkillTag_PassiveSkillTag;       // 0x1138(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x1140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1141[0x7];                                     // 0x1141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x1148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess30;                     // 0x1150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1151[0x7];                                     // 0x1151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP2;    // 0x1158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess2;       // 0x1160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1161[0x7];                                     // 0x1161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName16;                   // 0x1168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue4;    // 0x1170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable9;                               // 0x1171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue19;                 // 0x1172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1173[0x5];                                     // 0x1173(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate8;             // 0x1178(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue21;                    // 0x1188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1189[0x7];                                     // 0x1189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBCharacterActiveBehaviorInfo        K2Node_CustomEvent_BehaviorInfo1;                  // 0x1190(0x0028)()
	struct FAJBCharacterActiveBehaviorInfo        K2Node_CustomEvent_BehaviorInfo;                   // 0x11B8(0x0028)()
	bool                                          CallFunc_HasLocalSharedController_ReturnValue23;   // 0x11E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue2;                   // 0x11E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11E2[0x2];                                     // 0x11E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable9;                              // 0x11E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue4;        // 0x11E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11E9[0x3];                                     // 0x11E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue3;         // 0x11EC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x11F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x11FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x1200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x1204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue7;            // 0x1208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue8;            // 0x120C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName17;                   // 0x1210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x1218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_LandingStopTime_Sec_2;          // 0x121C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_LandingStopTime_Sec_1;          // 0x1220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_LandingStopTime_Sec_;           // 0x1224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue5;        // 0x1228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1229[0x7];                                     // 0x1229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x1230(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable2; // 0x1260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue22; // 0x1261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue22;                    // 0x1262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue91;                // 0x1263(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1264[0x4];                                     // 0x1264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameWindow_C*                  K2Node_CustomEvent_Window1;                        // 0x1268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x1270(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIgnorePitch;                   // 0x127C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_127D[0x3];                                     // 0x127D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_CustomEvent_NewRotation1;                   // 0x1280(0x000C)(ConstParm, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_CustomEvent_NewRotation;                    // 0x128C(0x000C)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue23; // 0x1298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue11; // 0x1299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue14;                  // 0x129A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129B[0x5];                                     // 0x129B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_ItemTag;                        // 0x12A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_SETag;                          // 0x12A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent2;    // 0x12B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate9;             // 0x12B8(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue9;            // 0x12C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x12CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue1;     // 0x12D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D1[0x7];                                     // 0x12D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select5_Default;                            // 0x12D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue2;                        // 0x12E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select6_Default;                            // 0x12E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_BlockedActor1;                  // 0x12E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation1;                   // 0x12F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSeparateStandAttack1;          // 0x12FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12FD[0x3];                                     // 0x12FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_BlockedActor;                   // 0x1300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HItLocation;                    // 0x1308(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsPairAttack;                  // 0x1314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1315[0x3];                                     // 0x1315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamageOwner;                    // 0x1318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSeparateStandAttack;           // 0x1320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1321[0x7];                                     // 0x1321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_BlockingRushOperatorInterface_C> K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface; // 0x1328(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess31;                     // 0x1338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue11;   // 0x1339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue92;                // 0x133A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue24;          // 0x133B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue93;                // 0x133C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue25;          // 0x133D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue94;                // 0x133E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_133F[0x1];                                     // 0x133F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AJBSkillBase_C*>             CallFunc_GetComponentsByClass_ReturnValue2;        // 0x1340(0x0010)(ZeroConstructor, ReferenceParm)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x1350(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x135C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x1360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x1364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x1368(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_1374[0x4];                                     // 0x1374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameWindow_C*                  K2Node_CustomEvent_Window;                         // 0x1378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x1380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue23;                    // 0x1388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue8;          // 0x1389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x138A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable3; // 0x138B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInputCameraOnly_bReturnValue12; // 0x138C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_138D[0x3];                                     // 0x138D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName18;                   // 0x1390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue95;                // 0x1398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInput_InputEnable12;           // 0x1399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue24;   // 0x139A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue7;         // 0x139B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue24;                    // 0x139C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue9;          // 0x139D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue8;         // 0x139E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue15;                  // 0x139F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate10;            // 0x13A0(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue4;         // 0x13B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13BC[0x4];                                     // 0x13BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent3;    // 0x13C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate11;            // 0x13C8(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_CustomEvent_NewMPMax;                       // 0x13D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_IncreaseValue;                  // 0x13DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue25;   // 0x13E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13E1[0x3];                                     // 0x13E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue7;              // 0x13E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckDisableAreaDamage_bDisableAreadamage; // 0x13E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue96;                // 0x13E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13EA[0x6];                                     // 0x13EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName9;                    // 0x13F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_UI_FollowPairInfo_C*                K2Node_CustomEvent_PairInfoWidget;                 // 0x13F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_PairName;                       // 0x1400(0x0018)()
	class FName                                   K2Node_CustomEvent_NotifyName19;                   // 0x1418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue26;   // 0x1420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue26;          // 0x1421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue27;   // 0x1422(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue97;                // 0x1423(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue28;   // 0x1424(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1425[0x3];                                     // 0x1425(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate12;            // 0x1428(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue25;                    // 0x1438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1439[0x3];                                     // 0x1439(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue1;                        // 0x143C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x1440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x1444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable4; // 0x1448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1449[0x3];                                     // 0x1449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue3;                        // 0x144C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue27;          // 0x1450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1451[0x3];                                     // 0x1451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable15;                  // 0x1454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue98;                // 0x1458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x1459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145A[0x2];                                     // 0x145A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue22;                 // 0x145C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue6;        // 0x1460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue15;                   // 0x1461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1462[0x2];                                     // 0x1462(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_NewValue;                       // 0x1464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable4;                // 0x1468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1469[0x3];                                     // 0x1469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_CustomEvent_NormalizedPosition2;            // 0x146C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1474[0x4];                                     // 0x1474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_PinTypeTag5;                    // 0x1478(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_NormalizedPosition1;            // 0x1480(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_PinTypeTag4;                    // 0x1488(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess4;             // 0x1490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1491[0x7];                                     // 0x1491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD4;          // 0x1498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_NormalizedPosition;             // 0x14A0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_PinTypeTag3;                    // 0x14A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable5; // 0x14B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable4;                      // 0x14B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue9;         // 0x14B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue16;                  // 0x14B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable15;                   // 0x14B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item1;                          // 0x14B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller4; // 0x14C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess32;                     // 0x14C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillActive_ReturnValue;                // 0x14C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue26;                    // 0x14CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue24; // 0x14CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14CC[0x4];                                     // 0x14CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate13;            // 0x14D0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue99;                // 0x14E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue25; // 0x14E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14E2[0x2];                                     // 0x14E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue1;         // 0x14E4(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPair_bPairCharacter1;                   // 0x14F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue12; // 0x14F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue17;                  // 0x14F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14F3[0x5];                                     // 0x14F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue1;              // 0x14F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x1508(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue1;            // 0x1518(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EPlayMode                                     CallFunc_GetPlayMode_PlayMode;                     // 0x1528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1529[0x7];                                     // 0x1529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x1530(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum7_CmpSuccess;                     // 0x1540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue12;   // 0x1541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue100;               // 0x1542(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1543[0x1];                                     // 0x1543(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue5;         // 0x1544(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SerialNumber;                   // 0x1550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue13;   // 0x1554(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue101;               // 0x1555(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue28;          // 0x1556(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue102;               // 0x1557(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue2;         // 0x1558(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_1564[0x4];                                     // 0x1564(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_FactorTag2;                     // 0x1568(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DurationSec;                    // 0x1570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1574[0x4];                                     // 0x1574(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_FactorTag1;                     // 0x1578(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue5;          // 0x1580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1581[0x3];                                     // 0x1581(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable16;                   // 0x1584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_FactorTag;                      // 0x1588(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_RemainingDurationSec;           // 0x1590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1594[0x4];                                     // 0x1594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_Array_Get_Item2;                          // 0x1598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x15A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15A1[0x3];                                     // 0x15A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value;                           // 0x15A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x15A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue29;          // 0x15A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15AA[0x2];                                     // 0x15AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue10;           // 0x15AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue103;               // 0x15B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15B1[0x7];                                     // 0x15B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_SkillTag1;                      // 0x15B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_SkillTag;                       // 0x15C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_EffectiveTimeSec;               // 0x15C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15CC[0x4];                                     // 0x15CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x15D0(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue13; // 0x15E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15E1[0x7];                                     // 0x15E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_EffectType1;                    // 0x15E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bLandingStop2;                  // 0x15F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15F1[0x3];                                     // 0x15F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_WorldLocation2;                 // 0x15F4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EffectType;                     // 0x1600(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bLandingStop1;                  // 0x1608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1609[0x3];                                     // 0x1609(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_WorldLocation1;                 // 0x160C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomPointInRing_ReturnValue;            // 0x1618(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1624[0x4];                                     // 0x1624(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x1628(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue104;               // 0x1630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess2;             // 0x1631(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1632[0x6];                                     // 0x1632(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance2;    // 0x1638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue1;             // 0x1640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue26; // 0x1641(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue18;                  // 0x1642(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess5;             // 0x1643(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1644[0x4];                                     // 0x1644(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD5;          // 0x1648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEnableInputCameraOnly_bReturnValue13; // 0x1650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInput_InputEnable13;           // 0x1651(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue105;               // 0x1652(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPossibleLandingStop_bPossible;       // 0x1653(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue27; // 0x1654(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue106;               // 0x1655(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1656[0x2];                                     // 0x1656(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue1; // 0x1658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue27;                    // 0x1660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1661[0x7];                                     // 0x1661(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue2; // 0x1668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue28; // 0x1670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue28;                    // 0x1671(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue14; // 0x1672(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue19;                  // 0x1673(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue14;   // 0x1674(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue29; // 0x1675(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue107;               // 0x1676(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue108;               // 0x1677(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bEnable3;                       // 0x1678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bResetRecording;                // 0x1679(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue30;          // 0x167A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue109;               // 0x167B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue31;          // 0x167C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_167D[0x3];                                     // 0x167D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName8;                    // 0x1680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue110;               // 0x1688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bLandingStop;                   // 0x1689(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_168A[0x2];                                     // 0x168A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_WorldLocation;                  // 0x168C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEnableInput_InputEnable14;           // 0x1698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1699[0x7];                                     // 0x1699(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select7_Default;                            // 0x16A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue1;          // 0x16A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInputCameraOnly_bReturnValue14; // 0x16A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInput_InputEnable15;           // 0x16AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue111;               // 0x16AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable5;                // 0x16AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue30; // 0x16AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue112;               // 0x16AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16AF[0x1];                                     // 0x16AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PositionNo3;                    // 0x16B0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue31; // 0x16B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16B5[0x3];                                     // 0x16B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_TryGetEmoteVoiceByIndex_ReturnValue;      // 0x16B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue15; // 0x16BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue20;                  // 0x16BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16BE[0x2];                                     // 0x16BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PositionNo2;                    // 0x16C0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C4[0x4];                                     // 0x16C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_TryGetEmoteAnimMontageByIndex_ReturnValue; // 0x16C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PositionNo1;                    // 0x16D0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PositionNo;                     // 0x16D4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue15;   // 0x16D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D9[0x3];                                     // 0x16D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue1;          // 0x16DC(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue113;               // 0x16E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16E9[0x3];                                     // 0x16E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue2;        // 0x16EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable5;                      // 0x16F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue32;          // 0x16F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue114;               // 0x16F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue33;          // 0x16F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInputCameraOnly_bReturnValue15; // 0x16F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue115;               // 0x16F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue116;               // 0x16F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16F7[0x1];                                     // 0x16F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue3;        // 0x16F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x16FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16FD[0x3];                                     // 0x16FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable5;                             // 0x1700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x1708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1709[0x7];                                     // 0x1709(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface1;          // 0x1710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess33;                     // 0x1718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue29;                    // 0x1719(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171A[0x6];                                     // 0x171A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x1720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable16;                  // 0x1728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue1;       // 0x172C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x172D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172E[0x2];                                     // 0x172E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue23;                 // 0x1730(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEnableInputCameraOnly_bReturnValue16; // 0x1734(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bSkillAnimation;                // 0x1735(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue117;               // 0x1736(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bDebugSkillAnimation1;          // 0x1737(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bDebugSkillAnimation;           // 0x1738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue29;   // 0x1739(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInput_InputEnable16;           // 0x173A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue11;          // 0x173B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_173C[0x4];                                     // 0x173C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded2;                        // 0x1740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetPairCharacterBP_PairCharacterBP5;      // 0x1748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate14;            // 0x1750(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_AJBInGamePlayerController_C*        CallFunc_Array_Get_Item3;                          // 0x1760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue5;                // 0x1768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_176C[0x4];                                     // 0x176C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x1770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x1778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1779[0x7];                                     // 0x1779(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBinGameDeathCamera_C*             K2Node_DynamicCast_AsBP_AJBin_Game_Death_Camera;   // 0x1780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess34;                     // 0x1788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue30;                    // 0x1789(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_178A[0x6];                                     // 0x178A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        CallFunc_Array_Get_Item4;                          // 0x1790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue1;                  // 0x1798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue6;                // 0x17A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17A4[0x4];                                     // 0x17A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameWatcherCamera_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Watcher_Camera; // 0x17A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess35;                     // 0x17B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue4;                 // 0x17B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue32; // 0x17B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue118;               // 0x17B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17B4[0x4];                                     // 0x17B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue2;                // 0x17B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBBattleGameState_C*               K2Node_DynamicCast_AsBP_AJBBattle_Game_State3;     // 0x17C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess36;                     // 0x17C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17C9[0x7];                                     // 0x17C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AJBSupportSkillBase_C*>      CallFunc_GetComponentsByClass_ReturnValue3;        // 0x17D0(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsLastDefeatedCharacter_Result;           // 0x17E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bShouldDestroy;                       // 0x17E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable6;                // 0x17E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue33; // 0x17E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue16; // 0x17E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue16;   // 0x17E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue21;                  // 0x17E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue119;               // 0x17E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate15;            // 0x17E8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess3;             // 0x17F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17F9[0x7];                                     // 0x17F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance3;    // 0x1800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue1;         // 0x1808(0x0008)(NoDestructor)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue2;             // 0x1810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable10;                              // 0x1811(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_StencilDigit                                K2Node_CustomEvent_DigitToChange;                  // 0x1812(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFlag;                          // 0x1813(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bAlsoChangeRelatedActors;       // 0x1814(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1815[0x3];                                     // 0x1815(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable6;                             // 0x1818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh1;               // 0x1820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess37;                     // 0x1828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1829[0x7];                                     // 0x1829(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_GetPrimitivesToChangeStencil_PrimitiveComponents; // 0x1830(0x0010)(ZeroConstructor, ReferenceParm)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item5;                          // 0x1840(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue7;                // 0x1848(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue5;                 // 0x184C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable6;                      // 0x184D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_184E[0x2];                                     // 0x184E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& PrevState)> K2Node_CreateDelegate_OutputDelegate16;            // 0x1850(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                K2Node_CustomEvent_Loaded3;                        // 0x1860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate17;            // 0x1868(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasMovableStand_ReturnValue;              // 0x1878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasStand_ReturnValue;                     // 0x1879(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_187A[0x6];                                     // 0x187A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& NextState)> K2Node_CreateDelegate_OutputDelegate18;            // 0x1880(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_bEnable2;                       // 0x1890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1891[0x7];                                     // 0x1891(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& PrevState)> K2Node_CreateDelegate_OutputDelegate19;            // 0x1898(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_bEnable1;                       // 0x18A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bEnable;                        // 0x18A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18AA[0x6];                                     // 0x18AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UBP_AJBSkillBase_C* ActivatedSkill)> K2Node_CreateDelegate_OutputDelegate20;            // 0x18B0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UBP_AJBSkillBase_C* InactivatedSkill)> K2Node_CreateDelegate_OutputDelegate21;            // 0x18C0(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_MatchingPlayerIndex;            // 0x18D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18D4[0x4];                                     // 0x18D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue2;            // 0x18D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue3;            // 0x18E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x18F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x1908(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x1918(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue5;               // 0x1928(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasStand_ReturnValue1;                    // 0x1938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1939[0x7];                                     // 0x1939(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UBP_AJBSkillBase_C* ReadySkill)> K2Node_CreateDelegate_OutputDelegate22;            // 0x1940(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasMovableStand_ReturnValue1;             // 0x1950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1951[0x7];                                     // 0x1951(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UBP_AJBLongPressInteract_C* LongPressInteract)> K2Node_CreateDelegate_OutputDelegate23;            // 0x1958(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UBP_AJBLongPressInteract_C* LongPressInteract)> K2Node_CreateDelegate_OutputDelegate24;            // 0x1968(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 Damage)>                 K2Node_CreateDelegate_OutputDelegate25;            // 0x1978(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate26;            // 0x1988(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue30;   // 0x1998(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayModeIsPair_ReturnValue;               // 0x1999(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199A[0x6];                                     // 0x199A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate27;            // 0x19A0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess4;             // 0x19B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19B1[0x7];                                     // 0x19B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance4;    // 0x19B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetFocusActor_ReturnValue;                // 0x19C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue3;             // 0x19C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue2;     // 0x19C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue20;                 // 0x19CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19CB[0x5];                                     // 0x19CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate28;            // 0x19D0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue31;   // 0x19E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess5;             // 0x19E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19E2[0x6];                                     // 0x19E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance5;    // 0x19E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue4;             // 0x19F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess6;             // 0x19F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19F2[0x6];                                     // 0x19F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance6;    // 0x19F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetFocusActor_ReturnValue1;               // 0x1A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue31;                    // 0x1A08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue12;          // 0x1A09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue32;   // 0x1A0A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue32;                    // 0x1A0B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess7;             // 0x1A0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A0D[0x3];                                     // 0x1A0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance7;    // 0x1A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess8;             // 0x1A18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A19[0x7];                                     // 0x1A19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance8;    // 0x1A20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue5;             // 0x1A28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A29[0x7];                                     // 0x1A29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetFocusActor_ReturnValue2;               // 0x1A30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue33;                    // 0x1A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue34;                    // 0x1A39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A3A[0x6];                                     // 0x1A3A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue1;         // 0x1A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x1A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP3;    // 0x1A50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess3;       // 0x1A58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue3;     // 0x1A59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess9;             // 0x1A5A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A5B[0x5];                                     // 0x1A5B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance9;    // 0x1A60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetGionOwner_GionOwner;                   // 0x1A68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasStartedPlayingReplay_ReturnValue;      // 0x1A70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_GionSpawnedSpace                            CallFunc_GetSpawnedSpaceInOwnersEnv_SpawnedSpaceInOwnersEnv; // 0x1A71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue120;               // 0x1A72(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue35;                    // 0x1A73(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A74[0x4];                                     // 0x1A74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_EffectVisibility_C> K2Node_DynamicCast_AsBI_Effect_Visibility;         // 0x1A78(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess38;                     // 0x1A88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A89[0x7];                                     // 0x1A89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x1A90(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue4;        // 0x1AA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA4[0x4];                                     // 0x1AA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item6;                          // 0x1AA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue8;                // 0x1AB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue6;                 // 0x1AB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AB5[0x3];                                     // 0x1AB5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x1AB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x1AC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AC1[0x3];                                     // 0x1AC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x1AC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue8;              // 0x1AC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue36;                    // 0x1ACC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue10;         // 0x1ACD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue2;     // 0x1ACE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1ACF[0x1];                                     // 0x1ACF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x1AD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD4[0x4];                                     // 0x1AD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_Tag5;                           // 0x1AD8(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select8_Default;                            // 0x1AE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TrySetNextLandingStopTime_Sec__ReturnValue; // 0x1AE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue6;          // 0x1AE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AE9[0x7];                                     // 0x1AE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_Tag4;                           // 0x1AF0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue37;                    // 0x1AF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AF9[0x7];                                     // 0x1AF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character7;     // 0x1B00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess39;                     // 0x1B08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B09[0x7];                                     // 0x1B09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_Tag3;                           // 0x1B10(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue5;        // 0x1B18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1C[0x4];                                     // 0x1B1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_Tag2;                           // 0x1B20(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue5;         // 0x1B28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue2;          // 0x1B2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B2D[0x3];                                     // 0x1B2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue9;              // 0x1B30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue3;          // 0x1B34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue4;          // 0x1B35(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue121;               // 0x1B36(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue5;          // 0x1B37(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue122;               // 0x1B38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue38;                    // 0x1B39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B3A[0x6];                                     // 0x1B3A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameMovableStand_C*            K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand1; // 0x1B40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess40;                     // 0x1B48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue123;               // 0x1B49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B4A[0x6];                                     // 0x1B4A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_Tag1;                           // 0x1B50(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue39;                    // 0x1B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue124;               // 0x1B59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B5A[0x6];                                     // 0x1B5A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1;         // 0x1B60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess41;                     // 0x1B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B69[0x3];                                     // 0x1B69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable5;                                // 0x1B6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag;                            // 0x1B70(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue6;        // 0x1B78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue6;         // 0x1B7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue10;             // 0x1B80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B84[0x4];                                     // 0x1B84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_GravityScaleTag2;               // 0x1B88(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_GravityScale2;                  // 0x1B90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B94[0x4];                                     // 0x1B94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_GravityScaleTag1;               // 0x1B98(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_GravityScale1;                  // 0x1BA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA4[0x4];                                     // 0x1BA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_GravityScaleTag;                // 0x1BA8(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_GravityScale;                   // 0x1BB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable6;                                // 0x1BB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable11;                              // 0x1BB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BB9[0x3];                                     // 0x1BB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select9_Default;                            // 0x1BBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable17;                   // 0x1BC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC4[0x4];                                     // 0x1BC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBActionBase_C*                    CallFunc_Array_Get_Item7;                          // 0x1BC8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_TheWorldInterface_C> K2Node_DynamicCast_AsBI_the_World_Interface1;      // 0x1BD0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess42;                     // 0x1BE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BE1[0x3];                                     // 0x1BE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable10;                             // 0x1BE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable12;                              // 0x1BE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BE9[0x3];                                     // 0x1BE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select10_Default;                           // 0x1BEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable2;                               // 0x1BF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable3;                               // 0x1BF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable13;                              // 0x1BF2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue125;               // 0x1BF3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             K2Node_Select11_Default;                           // 0x1BF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_FXVisibilityInfo                   K2Node_CustomEvent_PrevFXVisibility;               // 0x1BF5(0x0002)(HasGetValueTypeHash)
	uint8                                         Pad_1BF7[0x1];                                     // 0x1BF7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AJBPassiveSkillBase_C*>      CallFunc_GetComponentsByClass_ReturnValue4;        // 0x1BF8(0x0010)(ZeroConstructor, ReferenceParm)
	class UBP_AJBPassiveSkillBase_C*              CallFunc_Array_Get_Item8;                          // 0x1C08(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue9;                // 0x1C10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C14[0x4];                                     // 0x1C14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_EffectVisibility_C> K2Node_DynamicCast_AsBI_Effect_Visibility1;        // 0x1C18(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess43;                     // 0x1C28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue7;                 // 0x1C29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C2A[0x2];                                     // 0x1C2A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location2;                      // 0x1C2C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_PinTypeTag2;                    // 0x1C38(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsRemove2;                     // 0x1C40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bWithSound2;                    // 0x1C41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayModeIsPair_ReturnValue1;              // 0x1C42(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C43[0x1];                                     // 0x1C43(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location1;                      // 0x1C44(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_PinTypeTag1;                    // 0x1C50(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsRemove1;                     // 0x1C58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bWithSound1;                    // 0x1C59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C5A[0x6];                                     // 0x1C5A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetPairCharacterBP_PairCharacterBP6;      // 0x1C60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue40;                    // 0x1C68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C69[0x7];                                     // 0x1C69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        CallFunc_Array_Get_Item9;                          // 0x1C70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue2;                  // 0x1C78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue10;               // 0x1C80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C84[0x4];                                     // 0x1C84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBinGameDeathCamera_C*             K2Node_DynamicCast_AsBP_AJBin_Game_Death_Camera1;  // 0x1C88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess44;                     // 0x1C90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue8;                 // 0x1C91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C92[0x6];                                     // 0x1C92(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_StencilInterface_C> K2Node_DynamicCast_AsBI_Stencil_Interface;         // 0x1C98(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess45;                     // 0x1CA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CA9[0x7];                                     // 0x1CA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_GetPrimitivesToChangeStencil_PrimitiveComponents1; // 0x1CB0(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_AJBInGamePlayerController_C*        CallFunc_Array_Get_Item10;                         // 0x1CC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item11;                         // 0x1CC8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue3;                  // 0x1CD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameWatcherCamera_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Watcher_Camera1; // 0x1CD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess46;                     // 0x1CE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CE1[0x3];                                     // 0x1CE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue11;               // 0x1CE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue12;               // 0x1CE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue9;                 // 0x1CEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue10;                // 0x1CED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue41;                    // 0x1CEE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CEF[0x1];                                     // 0x1CEF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x1CF0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CFC[0x4];                                     // 0x1CFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_PinTypeTag;                     // 0x1D00(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsRemove;                      // 0x1D08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bWithSound;                     // 0x1D09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess6;             // 0x1D0A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D0B[0x5];                                     // 0x1D0B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD6;          // 0x1D10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue42;                    // 0x1D18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D19[0x7];                                     // 0x1D19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_StencilInterface_C> K2Node_DynamicCast_AsBI_Stencil_Interface1;        // 0x1D20(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess47;                     // 0x1D30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable14;                              // 0x1D31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D32[0x6];                                     // 0x1D32(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_GetPrimitivesToChangeStencil_PrimitiveComponents2; // 0x1D38(0x0010)(ZeroConstructor, ReferenceParm)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item12;                         // 0x1D48(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select12_Default;                           // 0x1D50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x1D54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D55[0x3];                                     // 0x1D55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue13;               // 0x1D58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D5C[0x4];                                     // 0x1D5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable4;                             // 0x1D60(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue11;                // 0x1D68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D69[0x3];                                     // 0x1D69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue7;        // 0x1D6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable5;                             // 0x1D70(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable15;                              // 0x1D78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable16;                              // 0x1D79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D7A[0x6];                                     // 0x1D7A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select13_Default;                           // 0x1D80(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestGion_AkComponent__LocalOnly_;      // 0x1D88(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_; // 0x1D90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D91[0x7];                                     // 0x1D91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select14_Default;                           // 0x1D98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue3; // 0x1DA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue11;             // 0x1DA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue43;                    // 0x1DAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue44;                    // 0x1DAD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DAE[0x2];                                     // 0x1DAE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x1DB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x1DB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x1DB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue1;                 // 0x1DBC(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue2;      // 0x1DC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DC9[0x3];                                     // 0x1DC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x1DCC(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue126;               // 0x1DD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue22;                  // 0x1DD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue21;                 // 0x1DDA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DDB[0x1];                                     // 0x1DDB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue7;         // 0x1DDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue12;             // 0x1DE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable17;                              // 0x1DE4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DE5[0x3];                                     // 0x1DE5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        CallFunc_Array_Get_Item13;                         // 0x1DE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Select15_Default;                           // 0x1DF0(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DFC[0x4];                                     // 0x1DFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue4;                  // 0x1E00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameWatcherCamera_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Watcher_Camera2; // 0x1E08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess48;                     // 0x1E10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E11[0x3];                                     // 0x1E11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue14;               // 0x1E14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue12;                // 0x1E18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E19[0x7];                                     // 0x1E19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        CallFunc_Array_Get_Item14;                         // 0x1E20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue15;               // 0x1E28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2C[0x4];                                     // 0x1E2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue5;                  // 0x1E30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue13;                // 0x1E38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E39[0x7];                                     // 0x1E39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBinGameDeathCamera_C*             K2Node_DynamicCast_AsBP_AJBin_Game_Death_Camera2;  // 0x1E40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess49;                     // 0x1E48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E49[0x7];                                     // 0x1E49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate29;            // 0x1E50(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_AJBInGamePlayerController_C*        CallFunc_Array_Get_Item15;                         // 0x1E60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        CallFunc_Array_Get_Item16;                         // 0x1E68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue6;                  // 0x1E70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue7;                  // 0x1E78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameWatcherCamera_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Watcher_Camera3; // 0x1E80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess50;                     // 0x1E88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E89[0x7];                                     // 0x1E89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBinGameDeathCamera_C*             K2Node_DynamicCast_AsBP_AJBin_Game_Death_Camera3;  // 0x1E90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess51;                     // 0x1E98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E99[0x3];                                     // 0x1E99(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue16;               // 0x1E9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue17;               // 0x1EA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue14;                // 0x1EA4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue15;                // 0x1EA5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable18;                              // 0x1EA6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EA7[0x1];                                     // 0x1EA7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate30;            // 0x1EA8(0x0010)(ZeroConstructor, NoDestructor)
	TArray<class AActor*>                         Temp_object_Variable7;                             // 0x1EB8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue2;         // 0x1EC8(0x0008)(NoDestructor)
	bool                                          Temp_bool_Variable19;                              // 0x1ED0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1ED1[0x3];                                     // 0x1ED1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select16_Default;                           // 0x1ED4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate31;            // 0x1ED8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 SerialNumber)>           K2Node_CreateDelegate_OutputDelegate32;            // 0x1EE8(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_CalcDamage_DamageForHPAP;                 // 0x1EF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcDamage_DamageForAAP;                  // 0x1EFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcDamage_CutDamage;                     // 0x1F00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcDamage_bRemainHP;                     // 0x1F04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcDamage_bDamageIsCutByAAP;             // 0x1F05(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F06[0xA];                                     // 0x1F06(0x000A)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x1F10(0x0030)(IsPlainOldData, NoDestructor)
	class UBP_AJBPairInfoUIFollowerComponent_C*   CallFunc_AddComponent_ReturnValue;                 // 0x1F40(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x1F48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F49[0x7];                                     // 0x1F49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable2;                               // 0x1F50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x1F58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetExistsUnderwater_Is_Exists_Underwater; // 0x1F60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F61[0x7];                                     // 0x1F61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate33;            // 0x1F68(0x0010)(ZeroConstructor, NoDestructor)
	class UBP_UnderwaterAffecter_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x1F78(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_AddComponentByClass_ReturnValue;          // 0x1F80(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue45;                    // 0x1F88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F89[0x7];                                     // 0x1F89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x1F90(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue127;               // 0x1FC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FC1[0xF];                                     // 0x1FC1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue1;                // 0x1FD0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue22;                 // 0x2000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2001[0x7];                                     // 0x2001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName1;                    // 0x2008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x2010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameMovableStand*                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x2018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x2020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue1;                // 0x2021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2022[0x6];                                     // 0x2022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1; // 0x2028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   CallFunc_FinishSpawningActor_ReturnValue1;         // 0x2030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue46;                    // 0x2038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x2039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_203A[0x6];                                     // 0x203A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate34;            // 0x2040(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName2;                    // 0x2050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Damage;                         // 0x2058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_205C[0x4];                                     // 0x205C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBLongPressInteract_C*             K2Node_CustomEvent_LongPressInteract1;             // 0x2060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBLongPressInteract_C*             K2Node_CustomEvent_LongPressInteract;              // 0x2068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBSkillBase_C*                     K2Node_CustomEvent_ReadySkill;                     // 0x2070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBSkillBase_C*                     K2Node_CustomEvent_InactivatedSkill;               // 0x2078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBSkillBase_C*                     K2Node_CustomEvent_ActivatedSkill;                 // 0x2080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue47;                    // 0x2088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue11;         // 0x2089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue128;               // 0x208A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue1;     // 0x208B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue33;   // 0x208C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_208D[0x3];                                     // 0x208D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue1;               // 0x2090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue48;                    // 0x2098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2099[0x7];                                     // 0x2099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_PrevState1;                     // 0x20A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UStateObj*                              CallFunc_FindStateFromPlayerController_ReturnValue; // 0x20A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindStateFromPlayerController_FindResult; // 0x20B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20B1[0x7];                                     // 0x20B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue2;               // 0x20B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller5; // 0x20C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess52;                     // 0x20C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20C9[0x7];                                     // 0x20C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetCurrentFlowState_FlowState1;           // 0x20D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue3;      // 0x20D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20D9[0x7];                                     // 0x20D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_NextState;                      // 0x20E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UStateObj*                              CallFunc_FindStateFromPlayerController_ReturnValue1; // 0x20E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindStateFromPlayerController_FindResult1; // 0x20F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20F1[0x3];                                     // 0x20F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable17;                  // 0x20F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue16;                // 0x20F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20F9[0x3];                                     // 0x20F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue24;                 // 0x20FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MP;                             // 0x2100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2104[0x4];                                     // 0x2104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue3;         // 0x2108(0x0008)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue49;                    // 0x2110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2111[0x7];                                     // 0x2111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller6; // 0x2118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess53;                     // 0x2120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue129;               // 0x2121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2122[0x6];                                     // 0x2122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate35;            // 0x2128(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess10;            // 0x2138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2139[0x7];                                     // 0x2139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance10;   // 0x2140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue6;             // 0x2148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2149[0x3];                                     // 0x2149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue8;        // 0x214C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue8;         // 0x2150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue13;             // 0x2154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName3;                    // 0x2158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue6;         // 0x2160(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_216C[0x4];                                     // 0x216C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_PrevState;                      // 0x2170(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectOnLocal_ParticleEffect2; // 0x2178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStateObj*                              CallFunc_FindStateFromPlayerController_ReturnValue2; // 0x2180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindStateFromPlayerController_FindResult2; // 0x2188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2189[0x3];                                     // 0x2189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable18;                   // 0x218C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item17;                         // 0x2190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_TheWorldInterface_C> K2Node_DynamicCast_AsBI_the_World_Interface2;      // 0x2198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess54;                     // 0x21A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21A9[0x7];                                     // 0x21A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName4;                    // 0x21B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate36;            // 0x21B8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable3;                               // 0x21C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate37;            // 0x21D0(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable18;                  // 0x21E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21E4[0x4];                                     // 0x21E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x21E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue17;                // 0x21F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21F1[0x7];                                     // 0x21F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x21F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x2208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x2218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x2228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2229[0x3];                                     // 0x2229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue25;                 // 0x222C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue13;          // 0x2230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2231[0x7];                                     // 0x2231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName5;                    // 0x2238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue14;          // 0x2240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2241[0x7];                                     // 0x2241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate38;            // 0x2248(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName6;                    // 0x2258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x2260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS1;                             // 0x2270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS1;                            // 0x2280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue1;                       // 0x2290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2291[0x7];                                     // 0x2291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x2298(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_TryGetPlayerCustomData_OutCharacterId;    // 0x22A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22AC[0x4];                                     // 0x22AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCustomData                            CallFunc_TryGetPlayerCustomData_Out;               // 0x22B0(0x0020)()
	bool                                          CallFunc_TryGetPlayerCustomData_ReturnValue;       // 0x22D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22D1[0x7];                                     // 0x22D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item18;                         // 0x22D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select17_Default;                           // 0x22E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue6;               // 0x22F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x2300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2301[0x7];                                     // 0x2301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue4;            // 0x2308(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue;            // 0x2318(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue7;               // 0x2328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue1;                // 0x2338(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue2;                // 0x2348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x2358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue8;               // 0x2360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FST_CharaSkin                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x2370(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x23A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23A9[0x7];                                     // 0x23A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue9;               // 0x23B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue10;              // 0x23C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue11;              // 0x23D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Array_Get_Item19;                         // 0x23E0(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue18;               // 0x2408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x240C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_240D[0x3];                                     // 0x240D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue1;           // 0x2410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CharaSkin                          CallFunc_GetDataTableRowFromName_OutRow1;          // 0x2418(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue1;     // 0x2450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2451[0x7];                                     // 0x2451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate39;            // 0x2458(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable7;                // 0x2468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2469[0x7];                                     // 0x2469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Array_Get_Item20;                         // 0x2470(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue19;               // 0x2498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x249C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249D[0x3];                                     // 0x249D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x24A0(0x0010)(ZeroConstructor, ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item21;                         // 0x24B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue20;               // 0x24B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24BC[0x4];                                     // 0x24BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBCharacterInfo                      CallFunc_GetDataTableRowFromName_OutRow2;          // 0x24C0(0x00E0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue2;     // 0x25A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue18;                // 0x25A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue23;                 // 0x25A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue2;           // 0x25A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A4[0x4];                                     // 0x25A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate40;            // 0x25A8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable7;                      // 0x25B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25B9[0x3];                                     // 0x25B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue9;         // 0x25BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue3;        // 0x25C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue3;            // 0x25CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x25D8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x2660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2661[0x7];                                     // 0x2661(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate41;            // 0x2668(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit1;             // 0x2678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap1;          // 0x2679(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_267A[0x2];                                     // 0x267A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time1;                     // 0x267C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance1;                 // 0x2680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location1;                 // 0x2684(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint1;              // 0x2690(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal1;                   // 0x269C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal1;             // 0x26A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26B4[0x4];                                     // 0x26B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat1;                  // 0x26B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor1;                 // 0x26C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent1;             // 0x26C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName1;              // 0x26D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem1;                  // 0x26D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex1;                // 0x26DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart1;               // 0x26E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd1;                 // 0x26EC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select18_Default;                           // 0x26F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2704[0xC];                                     // 0x2704(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue1;               // 0x2710(0x0030)(IsPlainOldData, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate42;            // 0x2740(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue2; // 0x2750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameItem_SP_C*                 CallFunc_FinishSpawningActor_ReturnValue2;         // 0x2758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll2;                       // 0x2760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch2;                      // 0x2764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw2;                        // 0x2768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_276C[0x4];                                     // 0x276C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName7;                    // 0x2770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsSidling1;                    // 0x2778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2779[0x3];                                     // 0x2779(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Z__Yaw_1;                       // 0x277C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsDidlingForGunnerAnimation1;  // 0x2780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsSidling;                     // 0x2781(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2782[0x2];                                     // 0x2782(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Z__Yaw_;                        // 0x2784(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsDidlingForGunnerAnimation;   // 0x2788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2789[0x3];                                     // 0x2789(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue2;                 // 0x278C(0x000C)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter) == 0x000010, "Wrong alignment on BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter");
static_assert(sizeof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter) == 0x0027A0, "Wrong size on BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, EntryPoint) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInputCameraOnly_bReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInputCameraOnly_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInput_InputEnable) == 0x000019, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInput_InputEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue) == 0x00001B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_float_Variable) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue1) == 0x000020, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Variable) == 0x000021, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Variable) == 0x000024, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue1) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue1) == 0x000040, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Variable1) == 0x000044, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue2) == 0x000048, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue2) == 0x00004C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue2) == 0x000050, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue) == 0x000051, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue3) == 0x000052, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_float_Variable1) == 0x000054, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsDedicatedServer_ReturnValue) == 0x000058, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsDedicatedServer_ReturnValue1) == 0x000059, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Variable1) == 0x00005A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue1) == 0x00005B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue) == 0x00005C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue4) == 0x00005D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue2) == 0x00005E, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue1) == 0x00005F, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Active_bReturnValue) == 0x000060, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Active_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_byte_Variable) == 0x000061, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue) == 0x000062, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue3) == 0x000068, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_True_if_break_was_hit_Variable) == 0x00006C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue5) == 0x000074, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue3) == 0x000075, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_InteractActor) == 0x000078, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_InteractActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_InteractingActor1) == 0x000080, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_InteractingActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_ServerIsInteractingPlayer) == 0x000088, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_ServerIsInteractingPlayer' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_InteractingActor) == 0x000090, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_DamageCauser1) == 0x000098, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_DamageCauser1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_HitLocation) == 0x0000A0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_bPenetrating) == 0x0000AC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_bPenetrating' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_FactorTag) == 0x0000B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_FactorTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehaviorIsEmote_bRetValue) == 0x0000B8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehaviorIsEmote_bRetValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue6) == 0x0000B9, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Variable2) == 0x0000BC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue4) == 0x0000C0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DamageCauser2) == 0x0000C8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DamageCauser2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DamageType5) == 0x0000D0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DamageType5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_SerialNumber5) == 0x0000D8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_SerialNumber5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_AttackDistance1) == 0x0000DC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_AttackDistance1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_KilledCharacterId1) == 0x0000E0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_KilledCharacterId1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_WithSeparatedStandAttack) == 0x0000E1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_WithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_HitEnemysSeparatedStand) == 0x0000E2, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_HitEnemysSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_UltimateSkillSerialNumberIfInEffect1) == 0x0000E4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_UltimateSkillSerialNumberIfInEffect1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_WasCriticalState) == 0x0000E8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_WasCriticalState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DeadPlayerID2) == 0x0000EC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DeadPlayerID2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bWasCriticalState1) == 0x0000F0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bWasCriticalState1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DamageType4) == 0x0000F8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DamageType4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000100, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MatchesTag_ReturnValue) == 0x000101, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000108, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetPairCharacterBP_PairCharacterBP) == 0x000118, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetPairCharacterBP_PairCharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue) == 0x000120, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IncrementKillCount_Server__Result) == 0x000124, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IncrementKillCount_Server__Result' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Conv_IntToByte_ReturnValue) == 0x000128, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000130, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess1) == 0x000138, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x000140, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess2) == 0x000148, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetPairCharacterBP_PairCharacterBP1) == 0x000150, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetPairCharacterBP_PairCharacterBP1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CharacterBehaviorMatches_ReturnValue) == 0x000158, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CharacterBehaviorMatches_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsDeathAndEnd_ReturnValue) == 0x000159, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsDeathAndEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue7) == 0x00015A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_byte_Variable1) == 0x00015B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsServer_ReturnValue) == 0x00015C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsPlayerController_ReturnValue) == 0x00015D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue3) == 0x00015E, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue8) == 0x00015F, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller) == 0x000160, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess3) == 0x000168, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue4) == 0x000169, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Array_Index_Variable1) == 0x00016C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue9) == 0x000170, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_SkillTag3) == 0x000178, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_SkillTag3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_SerialNumber4) == 0x000180, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_SerialNumber4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_AttackDistance) == 0x000184, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_AttackDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_KilledCharacterId) == 0x000188, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_KilledCharacterId' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bWithSeparatedStandAttack1) == 0x000189, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bWithSeparatedStandAttack1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bHitEnemysSeparatedStand) == 0x00018A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bHitEnemysSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bFirstBlood) == 0x00018B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bFirstBlood' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_UltimateSkillSerialNumberIfInEffect) == 0x00018C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_UltimateSkillSerialNumberIfInEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_ElapsedTime) == 0x000190, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DeadPlayerID1) == 0x000194, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DeadPlayerID1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bIsLastDefeated2) == 0x000198, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bIsLastDefeated2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bPlayerKill) == 0x000199, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bPlayerKill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bSpecialKill) == 0x00019A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bSpecialKill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bIsLastDefeated1) == 0x00019B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bIsLastDefeated1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bDiedOfKillZ) == 0x00019C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bDiedOfKillZ' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CalcBattleRank_OnServer_IsDetermined) == 0x00019D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CalcBattleRank_OnServer_IsDetermined' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CalcBattleRank_OnServer_Rank) == 0x0001A0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CalcBattleRank_OnServer_Rank' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CalcBattleRank_OnServer_RankWithoutCPU) == 0x0001A4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CalcBattleRank_OnServer_RankWithoutCPU' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller1) == 0x0001A8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess4) == 0x0001B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Rank) == 0x0001B4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Rank' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_RankWithoutCPU) == 0x0001B8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_RankWithoutCPU' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue) == 0x0001BC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue10) == 0x0001BD, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue1) == 0x0001BE, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue11) == 0x0001BF, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Loop_Counter_Variable1) == 0x0001C0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue5) == 0x0001C4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehaviorIsEmote_bRetValue1) == 0x0001C8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehaviorIsEmote_bRetValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue12) == 0x0001C9, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Array_Index_Variable2) == 0x0001CC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Loop_Counter_Variable2) == 0x0001D0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsResurrectable_bResult) == 0x0001D4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsResurrectable_bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue6) == 0x0001D8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Active_bReturnValue1) == 0x0001DC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Active_bReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue2) == 0x0001DD, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue1) == 0x0001DE, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBInGameGameState_bIsValid) == 0x0001DF, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBInGameGameState_bIsValid' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBInGameGameState_ReturnValue) == 0x0001E0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBInGameGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBBattle_Game_State) == 0x0001E8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBBattle_Game_State' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess5) == 0x0001F0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetElapsedInGameTimespan_ReturnValue) == 0x0001F8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetElapsedInGameTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_JudgeFirstBlood_IsFirstBlood) == 0x000200, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_JudgeFirstBlood_IsFirstBlood' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetTotalSeconds_ReturnValue) == 0x000204, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue2) == 0x000208, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue3) == 0x000209, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue13) == 0x00020A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_SkillTag2) == 0x000210, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_SkillTag2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Array_Index_Variable3) == 0x000218, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Array_Index_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bWasCriticalState) == 0x00021C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bWasCriticalState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DamageType3) == 0x000220, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DamageType3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsResurrectable_bResult1) == 0x000228, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsResurrectable_bResult1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue14) == 0x000229, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsResurrectable_bResult2) == 0x00022A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsResurrectable_bResult2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue) == 0x00022B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue15) == 0x00022C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_KillCount) == 0x00022D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_KillCount' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DeadPlayerId) == 0x000230, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DeadPlayerId' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bIsLastDefeated) == 0x000234, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bIsLastDefeated' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_InvincibleTimeSec4) == 0x000238, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_InvincibleTimeSec4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00023C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue16) == 0x00023D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue5) == 0x00023E, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue17) == 0x00023F, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Loop_Counter_Variable3) == 0x000240, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Loop_Counter_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000244, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000250, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_RequestParticleEffectOnLocal_ParticleEffect) == 0x000258, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_RequestParticleEffectOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue7) == 0x000260, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_IsClosed_Variable) == 0x000264, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInput_InputEnable1) == 0x000265, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInput_InputEnable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Heal_bSuccess) == 0x000266, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Heal_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Heal_HealValue) == 0x000268, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Heal_HealValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Array_Index_Variable4) == 0x00026C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Array_Index_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_ReservedDamageCauser) == 0x000270, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_ReservedDamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_ReservedDamageType) == 0x000278, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_ReservedDamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Reserved_SerialNumber) == 0x000280, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Reserved_SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Reserved_AttackDistance) == 0x000284, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Reserved_AttackDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Reserved_WithSeparatedStandAttack) == 0x000288, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Reserved_WithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Reserved_HitEnemyesSeparatedStand) == 0x000289, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Reserved_HitEnemyesSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Reserved_UltimateSkillSerialNumberIfInEffect) == 0x00028C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Reserved_UltimateSkillSerialNumberIfInEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Character3) == 0x000290, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Character3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess6) == 0x000298, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInputCameraOnly_bReturnValue1) == 0x000299, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInputCameraOnly_bReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue18) == 0x00029A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Loop_Counter_Variable4) == 0x00029C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Loop_Counter_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInputCameraOnly_bReturnValue2) == 0x0002A0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInputCameraOnly_bReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue19) == 0x0002A1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue8) == 0x0002A4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Variable2) == 0x0002A8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DownedMachingPlayerIndex) == 0x0002AC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DownedMachingPlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Array_Index_Variable5) == 0x0002B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Array_Index_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue3) == 0x0002B4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue20) == 0x0002B5, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue20' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Loop_Counter_Variable5) == 0x0002B8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Loop_Counter_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_RequestWwiseEventOnLocal_AkComponent1) == 0x0002C0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_RequestWwiseEventOnLocal_AkComponent1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue9) == 0x0002C8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_float_Variable2) == 0x0002CC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0002D0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MakeLiteralFloat_ReturnValue) == 0x0002D4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetCharacterIdFromActor_CharacterId) == 0x0002D8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetCharacterIdFromActor_CharacterId' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002D9, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Rescuer1) == 0x0002E0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Rescuer1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x0002E8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x0002F0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue1) == 0x0002F1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Array_Index_Variable6) == 0x0002F4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Array_Index_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Loop_Counter_Variable6) == 0x0002F8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Loop_Counter_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue10) == 0x0002FC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue6) == 0x000300, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue21) == 0x000301, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue21' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInput_InputEnable2) == 0x000302, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInput_InputEnable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue7) == 0x000303, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue22) == 0x000304, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue22' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Variable3) == 0x000305, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Rescuer) == 0x000308, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Rescuer' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Array_Index_Variable7) == 0x000310, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Array_Index_Variable7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CharacterBehaviorMatches_ReturnValue1) == 0x000314, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CharacterBehaviorMatches_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue1) == 0x000315, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue23) == 0x000316, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue23' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue2) == 0x000317, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_object_Variable) == 0x000318, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Loop_Counter_Variable7) == 0x000320, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Loop_Counter_Variable7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000328, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess7) == 0x000330, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue11) == 0x000334, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehaviorIsEmote_bRetValue2) == 0x000338, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehaviorIsEmote_bRetValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue4) == 0x000339, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue24) == 0x00033A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue24' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue25) == 0x00033B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue25' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue5) == 0x00033C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MakeLiteralFloat_ReturnValue1) == 0x000340, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MakeLiteralFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Active_bReturnValue2) == 0x000344, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Active_bReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue2) == 0x000345, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetGameState_ReturnValue) == 0x000348, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBBattle_Game_State1) == 0x000350, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBBattle_Game_State1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess8) == 0x000358, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Array_Index_Variable8) == 0x00035C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Array_Index_Variable8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehaviorIsEmote_bRetValue3) == 0x000360, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehaviorIsEmote_bRetValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Loop_Counter_Variable8) == 0x000364, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Loop_Counter_Variable8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue26) == 0x000368, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue26' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue12) == 0x00036C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Active_bReturnValue3) == 0x000370, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Active_bReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue6) == 0x000371, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue7) == 0x000372, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue3) == 0x000373, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue27) == 0x000374, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue27' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue8) == 0x000375, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue28) == 0x000376, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue28' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue2) == 0x000377, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Character4) == 0x000378, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Character4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess9) == 0x000380, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue9) == 0x000381, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue29) == 0x000382, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue29' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000383, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue30) == 0x000384, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue30' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue3) == 0x000385, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue3) == 0x000386, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue4) == 0x000387, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBI_Additional_AP) == 0x000388, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBI_Additional_AP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess10) == 0x000398, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Array_Index_Variable9) == 0x00039C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Array_Index_Variable9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsFalling_ReturnValue) == 0x0003A0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue31) == 0x0003A1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue31' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Loaded) == 0x0003A8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0003B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Loop_Counter_Variable9) == 0x0003BC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Loop_Counter_Variable9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_RequestParticleEffectOnLocal_ParticleEffect1) == 0x0003C0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_RequestParticleEffectOnLocal_ParticleEffect1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue13) == 0x0003C8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInput_InputEnable3) == 0x0003CC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInput_InputEnable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInputCameraOnly_bReturnValue3) == 0x0003CD, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInputCameraOnly_bReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue32) == 0x0003CE, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue32' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetGameState_ReturnValue1) == 0x0003D0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetGameState_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBBattle_Game_State2) == 0x0003D8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBBattle_Game_State2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess11) == 0x0003E0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetJoinPawns_OutPawns) == 0x0003E8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetJoinPawns_OutPawns' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Length_ReturnValue) == 0x0003F8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsServer_ReturnValue1) == 0x0003FC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsServer_ReturnValue2) == 0x0003FD, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsServer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsServer_ReturnValue3) == 0x0003FE, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsServer_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue4) == 0x0003FF, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue33) == 0x000400, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue33' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsServer_ReturnValue4) == 0x000401, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsServer_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue4) == 0x000402, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBI_the_World_Interface) == 0x000408, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBI_the_World_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess12) == 0x000418, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue4) == 0x000419, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue5) == 0x00041A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue6) == 0x00041B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsCritical_IsCritical) == 0x00041C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsCritical_IsCritical' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInput_InputEnable4) == 0x00041D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInput_InputEnable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_object_Variable1) == 0x000420, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue5) == 0x000430, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue6) == 0x000431, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Revive_bSuccess) == 0x000432, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Revive_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetPairCharacterBP_PairCharacterBP2) == 0x000438, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetPairCharacterBP_PairCharacterBP2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue5) == 0x000440, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000441, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x000442, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue7) == 0x000443, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue4) == 0x000444, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsResurrectable_bResult3) == 0x000445, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsResurrectable_bResult3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue34) == 0x000446, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue34' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsResurrectable_bResult4) == 0x000447, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsResurrectable_bResult4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue35) == 0x000448, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue35' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsServer_ReturnValue5) == 0x000449, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsServer_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Array_Index_Variable10) == 0x00044C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Array_Index_Variable10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Has_Been_Initd_Variable) == 0x000450, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue7) == 0x000451, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetComponentsByClass_ReturnValue) == 0x000458, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Length_ReturnValue1) == 0x000468, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue6) == 0x00046C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller2) == 0x000470, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess13) == 0x000478, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Loop_Counter_Variable10) == 0x00047C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Loop_Counter_Variable10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue14) == 0x000480, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInputCameraOnly_bReturnValue4) == 0x000484, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInputCameraOnly_bReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue36) == 0x000485, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue36' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000486, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue8) == 0x000487, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Has_Been_Initd_Variable1) == 0x000488, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue37) == 0x000489, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue37' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBGameInstance_bSuccess) == 0x00048A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000490, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsDedicatedServer_ReturnValue2) == 0x000498, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsDedicatedServer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsPlayingReplay_ReturnValue) == 0x000499, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue38) == 0x00049A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue38' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsPlayerCharacterAsGame_bPlayerCharacterAsGame) == 0x00049B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsPlayerCharacterAsGame_bPlayerCharacterAsGame' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_IsClosed_Variable1) == 0x00049C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue9) == 0x00049D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Active_bReturnValue4) == 0x00049E, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Active_bReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue5) == 0x00049F, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsPlayerController_ReturnValue1) == 0x0004A0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsPlayerController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_MakeStruct_AJBCharacterActiveBehaviorInfo) == 0x0004A8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_MakeStruct_AJBCharacterActiveBehaviorInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsResurrectable_bResult5) == 0x0004D0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsResurrectable_bResult5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue5) == 0x0004D1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue39) == 0x0004D2, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue39' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue7) == 0x0004D3, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsPlayerController_ReturnValue2) == 0x0004D4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsPlayerController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_PlayModeEquals_bResult) == 0x0004D5, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_PlayModeEquals_bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsResurrectable_bResult6) == 0x0004D6, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsResurrectable_bResult6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue40) == 0x0004D7, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue40' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckSpecialKill_bSpecialKill) == 0x0004D8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckSpecialKill_bSpecialKill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBI_Additional_AP1) == 0x0004E0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBI_Additional_AP1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess14) == 0x0004F0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBI_Additional_AP2) == 0x0004F8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBI_Additional_AP2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess15) == 0x000508, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DeltaSeconds2) == 0x00050C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DeltaSeconds2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_FloatFloat_ReturnValue) == 0x000510, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DeltaSeconds1) == 0x000514, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DeltaSeconds1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DeltaSeconds) == 0x000518, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Has_Been_Initd_Variable2) == 0x00051C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Has_Been_Initd_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00051D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x00051E, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue6) == 0x00051F, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAnimInstance_ReturnValue) == 0x000520, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Montage_IsPlaying_ReturnValue) == 0x000528, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Montage_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue8) == 0x000529, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue41) == 0x00052A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue41' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsPlayerController_ReturnValue3) == 0x00052B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsPlayerController_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckAnimationLoop_ReturnValue) == 0x00052C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckAnimationLoop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehaviorIsEmote_bRetValue4) == 0x00052D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehaviorIsEmote_bRetValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue42) == 0x00052E, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue42' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_IsClosed_Variable2) == 0x00052F, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_IsClosed_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Array_Index_Variable11) == 0x000530, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Array_Index_Variable11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_Tag2) == 0x000538, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_Tag2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_Operator1) == 0x000540, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_Operator1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_Target) == 0x000548, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_Target' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_CauserType) == 0x000550, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_CauserType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_SerialNumber1) == 0x000558, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_SerialNumber1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsAJBIn_Game_Movable_Stand) == 0x000560, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsAJBIn_Game_Movable_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess16) == 0x000568, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_SwitchEnum_CmpSuccess) == 0x000569, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MatchesTag_ReturnValue1) == 0x00056A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MatchesTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MatchesTag_ReturnValue2) == 0x00056B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MatchesTag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_Tag1) == 0x000570, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_Tag1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MatchesTag_ReturnValue3) == 0x000578, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MatchesTag_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MatchesTag_ReturnValue4) == 0x000579, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MatchesTag_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MatchesTag_ReturnValue5) == 0x00057A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MatchesTag_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Loop_Counter_Variable11) == 0x00057C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Loop_Counter_Variable11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_Operator) == 0x000580, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_Time) == 0x000588, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_Timing) == 0x00058C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_bEnable) == 0x00058D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_bOperatorIsEmpty) == 0x00058E, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue43) == 0x00058F, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue43' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000590, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Select_Default) == 0x000594, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue15) == 0x000598, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0005A0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Array_Index_Variable12) == 0x0005A8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Array_Index_Variable12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent) == 0x0005B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_OperatorCharacter1) == 0x0005B8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_OperatorCharacter1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_EffectTag2) == 0x0005C0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_EffectTag2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_SETag2) == 0x0005C8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_SETag2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_bNoDamage) == 0x0005D0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_bNoDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_OperatorCharacter) == 0x0005D8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_OperatorCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_EffectTag1) == 0x0005E0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_EffectTag1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_SETag1) == 0x0005E8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_SETag1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetPoliticAreaInNoDamageSETag_SETag) == 0x0005F0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetPoliticAreaInNoDamageSETag_SETag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetPoliticAreaInNoDamageSETag_SETag1) == 0x0005F8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetPoliticAreaInNoDamageSETag_SETag1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_DamagedActor) == 0x000600, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_DamageForHPAP) == 0x000608, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_DamageForHPAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_DamageForAAP) == 0x00060C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_DamageForAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_CutDamage) == 0x000610, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_CutDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_DamageType) == 0x000618, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_SerialNumber) == 0x000620, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_DamagePriority) == 0x000624, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_DamagePriority' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_AttackDistance) == 0x000628, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_AttackDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_DamageCauser) == 0x000630, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_WithSeparatedStandAttack) == 0x000638, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_WithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_HitEnemysSeparatedStand) == 0x000639, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_HitEnemysSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_bPenetrateAP) == 0x00063A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_bPenetrateAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_bNotUseCollision) == 0x00063B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_bNotUseCollision' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Select1_Default) == 0x000640, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CharacterDamage_Server__EffectiveDamage) == 0x000648, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CharacterDamage_Server__EffectiveDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CharacterDamage_Server__CharacterBehavior) == 0x00064C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CharacterDamage_Server__CharacterBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CharacterDamage_Server__bDamageIsCutByAAP) == 0x00064D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CharacterDamage_Server__bDamageIsCutByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CharacterDamage_Server__BeforeAAP) == 0x000650, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CharacterDamage_Server__BeforeAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CharacterDamage_Server__AfterAAP) == 0x000654, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CharacterDamage_Server__AfterAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsRemainHP_IsRemain) == 0x000658, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsRemainHP_IsRemain' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue44) == 0x000659, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue44' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Greater_IntInt_ReturnValue) == 0x00065A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Character5) == 0x000660, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Character5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess17) == 0x000668, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess17' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue7) == 0x000669, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Greater_IntInt_ReturnValue1) == 0x00066A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Greater_IntInt_ReturnValue2) == 0x00066B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Greater_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00066C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue6) == 0x00066D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_RemoveGameplayTag_ReturnValue) == 0x00066E, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_RemoveGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Loop_Counter_Variable12) == 0x000670, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Loop_Counter_Variable12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue10) == 0x000674, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue45) == 0x000675, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue45' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue16) == 0x000678, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue11) == 0x00067C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue46) == 0x00067D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue46' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DamageType2) == 0x000680, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DamageType2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DamagePriority) == 0x000688, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DamagePriority' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DamageCauser1) == 0x000690, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DamageCauser1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bRemainHP) == 0x000698, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bRemainHP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bDamageIsCut) == 0x000699, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bDamageIsCut' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_BeforeAAP) == 0x00069C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_BeforeAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_AfterAAP) == 0x0006A0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_AfterAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue12) == 0x0006A4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue47) == 0x0006A5, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue47' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBCharacterFromActor_CharacterBP1) == 0x0006A8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBCharacterFromActor_CharacterBP1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBCharacterFromActor_bSuccess1) == 0x0006B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBCharacterFromActor_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue8) == 0x0006B1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_SwitchEnum1_CmpSuccess) == 0x0006B2, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Array_Index_Variable13) == 0x0006B4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Array_Index_Variable13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Loop_Counter_Variable13) == 0x0006B8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Loop_Counter_Variable13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehaviorIsEmote_bRetValue5) == 0x0006BC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehaviorIsEmote_bRetValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue48) == 0x0006BD, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue48' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue17) == 0x0006C0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_Tag) == 0x0006C8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_Tag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_FloatValue) == 0x0006D0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_FloatValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MatchesTag_ReturnValue6) == 0x0006D4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MatchesTag_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate1) == 0x0006D8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x0006E8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess18) == 0x0006F0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess18' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Active_bReturnValue5) == 0x0006F1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Active_bReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsServer_ReturnValue6) == 0x0006F2, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsServer_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand) == 0x0006F8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess19) == 0x000700, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess19' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsServer_ReturnValue7) == 0x000701, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsServer_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue9) == 0x000702, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsPlayerController_ReturnValue4) == 0x000703, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsPlayerController_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsDedicatedServer_ReturnValue3) == 0x000704, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsDedicatedServer_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsServer_ReturnValue8) == 0x000705, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsServer_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsServer_ReturnValue9) == 0x000706, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsServer_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsInvincibleDueForSystemReason_bIsInvincible) == 0x000707, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsInvincibleDueForSystemReason_bIsInvincible' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Length_ReturnValue2) == 0x000708, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_RemoveGameplayTag_ReturnValue1) == 0x00070C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_RemoveGameplayTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue9) == 0x00070D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue10) == 0x00070E, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsDedicatedServer_ReturnValue4) == 0x00070F, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsDedicatedServer_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate2) == 0x000710, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsDedicatedServer_ReturnValue5) == 0x000720, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsDedicatedServer_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetComponentsByClass_ReturnValue1) == 0x000728, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetComponentsByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Length_ReturnValue3) == 0x000738, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue10) == 0x00073C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Damage3) == 0x000740, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Damage3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DamageType1) == 0x000748, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DamageType1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DamageCauser) == 0x000750, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_RemainHP1) == 0x000758, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_RemainHP1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bDamageIsCutByStatus) == 0x000759, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bDamageIsCutByStatus' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bDamageIsCutByAAP) == 0x00075A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bDamageIsCutByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Damage2) == 0x00075C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Damage2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DamageType) == 0x000760, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DamageReceiver) == 0x000768, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DamageReceiver' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_RemainHP) == 0x000770, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_RemainHP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DamageIsCut) == 0x000771, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DamageIsCut' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_SerialNumber3) == 0x000774, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_SerialNumber3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DamageReceiverIsPlayer) == 0x000778, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DamageReceiverIsPlayer' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bWithSeparatedStandAttack) == 0x000779, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bWithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bHitEnemysSeparateStand) == 0x00077A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bHitEnemysSeparateStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NotifyName14) == 0x000780, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NotifyName14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsServer_ReturnValue10) == 0x000788, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsServer_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_float_Variable3) == 0x00078C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_float_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsPlayerController_ReturnValue5) == 0x000790, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsPlayerController_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_LessEqual_FloatFloat_ReturnValue1) == 0x000791, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_LessEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_NotifyTheWorld_self_CastInput) == 0x000798, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_NotifyTheWorld_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue10) == 0x0007A8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MakeLiteralFloat_ReturnValue2) == 0x0007AC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MakeLiteralFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue7) == 0x0007B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x0007B1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate3) == 0x0007B8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable1) == 0x0007C8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CharacterBehaviorMatches_ReturnValue2) == 0x0007C9, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CharacterBehaviorMatches_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue8) == 0x0007CA, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue8) == 0x0007CB, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue8) == 0x0007CC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NotifyName13) == 0x0007D0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NotifyName13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue49) == 0x0007D8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue49' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_struct_Variable) == 0x0007DC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_CutDamage) == 0x0007E8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_CutDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_SwitchEnum2_CmpSuccess) == 0x0007EC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_OperaatorCharacter) == 0x0007F0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_OperaatorCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_bNewFlag) == 0x0007F8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_bNewFlag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_EffectTag) == 0x000800, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_EffectTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_SETag) == 0x000808, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_SETag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue11) == 0x000810, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetPoliticAreaInNoDamageSETag_SETag2) == 0x000818, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetPoliticAreaInNoDamageSETag_SETag2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetPoliticAreaInNoDamageSETag_SETag3) == 0x000820, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetPoliticAreaInNoDamageSETag_SETag3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_float_Variable4) == 0x000828, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_float_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate4) == 0x000830, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_LessEqual_FloatFloat_ReturnValue2) == 0x000840, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_LessEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue11) == 0x000841, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue50) == 0x000842, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue50' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MakeLiteralFloat_ReturnValue3) == 0x000844, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MakeLiteralFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NotifyName12) == 0x000848, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NotifyName12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsServer_ReturnValue11) == 0x000850, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsServer_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsServer_ReturnValue12) == 0x000851, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsServer_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Select2_Default) == 0x000858, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate5) == 0x000860, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue12) == 0x000870, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NotifyName11) == 0x000878, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NotifyName11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MakeLiteralFloat_ReturnValue4) == 0x000880, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MakeLiteralFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_float_Variable5) == 0x000884, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_float_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue13) == 0x000888, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue13) == 0x000889, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue51) == 0x00088A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue51' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MakeLiteralFloat_ReturnValue5) == 0x00088C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MakeLiteralFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsPair_bPairCharacter) == 0x000890, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsPair_bPairCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue52) == 0x000891, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue52' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_float_Variable6) == 0x000894, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_float_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue9) == 0x000898, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetJoinPawns_OutPawns1) == 0x0008A0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetJoinPawns_OutPawns1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Has_Been_Initd_Variable3) == 0x0008B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Has_Been_Initd_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Length_ReturnValue4) == 0x0008B4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Length_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate6) == 0x0008B8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsDedicatedServer_ReturnValue6) == 0x0008C8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsDedicatedServer_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NotifyName10) == 0x0008D0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NotifyName10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsDedicatedServer_ReturnValue7) == 0x0008D8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsDedicatedServer_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInput_InputEnable5) == 0x0008D9, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInput_InputEnable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsDedicatedServer_ReturnValue8) == 0x0008DA, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsDedicatedServer_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Loop_Counter_Variable14) == 0x0008DC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Loop_Counter_Variable14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x0008E0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue18) == 0x0008E4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_name_Variable) == 0x0008E8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInputCameraOnly_bReturnValue5) == 0x0008F0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInputCameraOnly_bReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue53) == 0x0008F1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue53' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_True_if_break_was_hit_Variable1) == 0x0008F2, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_True_if_break_was_hit_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue54) == 0x0008F3, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue54' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue10) == 0x0008F4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Array_Index_Variable14) == 0x0008F8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Array_Index_Variable14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_object_Variable2) == 0x000900, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Get_Item) == 0x000908, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsMaterial_Interface) == 0x000910, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess20) == 0x000918, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess20' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetPairCharacterBP_PairCharacterBP3) == 0x000920, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetPairCharacterBP_PairCharacterBP3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsDeathAndEnd_ReturnValue1) == 0x000928, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsDeathAndEnd_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue55) == 0x000929, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue55' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue11) == 0x00092A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsDedicatedServer_ReturnValue9) == 0x00092B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsDedicatedServer_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue14) == 0x00092C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue15) == 0x00092D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Variable4) == 0x00092E, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsDedicatedServer_ReturnValue10) == 0x00092F, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsDedicatedServer_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsServer_ReturnValue13) == 0x000930, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsServer_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bEnable5) == 0x000931, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bEnable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bOperatorIsEmpty1) == 0x000932, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bOperatorIsEmpty1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_float_Variable7) == 0x000934, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_float_Variable7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Select3_Default) == 0x000938, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue16) == 0x000939, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_InvincibleTimeSec3) == 0x00093C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_InvincibleTimeSec3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_InvincibleTimeSec2) == 0x000940, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_InvincibleTimeSec2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Value1) == 0x000944, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Value1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Heal_bSuccess1) == 0x000948, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Heal_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Heal_HealValue1) == 0x00094C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Heal_HealValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Subtract_IntInt_ReturnValue) == 0x000950, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue17) == 0x000954, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_InvincibleTimeSec1) == 0x000958, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_InvincibleTimeSec1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInputCameraOnly_bReturnValue6) == 0x00095C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInputCameraOnly_bReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Subtract_IntInt_ReturnValue1) == 0x000960, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue56) == 0x000964, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue56' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_IsClosed_Variable3) == 0x000965, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_IsClosed_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_InvincibleTimeSec) == 0x000968, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_InvincibleTimeSec' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bAPMax) == 0x00096C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bAPMax' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Variable5) == 0x00096D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue18) == 0x00096E, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_OtherCharacterBP1) == 0x000970, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_OtherCharacterBP1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000978, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue11) == 0x000984, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetActorForwardVector_ReturnValue) == 0x000988, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000994, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_VectorVector_ReturnValue) == 0x0009A0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue19) == 0x0009AC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_LineTraceSingleByProfile_OutHit) == 0x0009B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_LineTraceSingleByProfile_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_LineTraceSingleByProfile_ReturnValue) == 0x000A38, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_LineTraceSingleByProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_bBlockingHit) == 0x000A39, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_bInitialOverlap) == 0x000A3A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_Time) == 0x000A3C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_Distance) == 0x000A40, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_Location) == 0x000A44, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_ImpactPoint) == 0x000A50, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_Normal) == 0x000A5C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_ImpactNormal) == 0x000A68, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_PhysMat) == 0x000A78, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_HitActor) == 0x000A80, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_HitComponent) == 0x000A88, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_HitBoneName) == 0x000A90, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_HitItem) == 0x000A98, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_FaceIndex) == 0x000A9C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_TraceStart) == 0x000AA0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_TraceEnd) == 0x000AAC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Character6) == 0x000AB8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Character6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess21) == 0x000AC0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess21' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue12) == 0x000AC1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000AC4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_struct_Variable1) == 0x000AC8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Variable3) == 0x000AD0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsServer_ReturnValue14) == 0x000AD4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsServer_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue19) == 0x000AD8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_float_Variable8) == 0x000ADC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_float_Variable8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_LessEqual_FloatFloat_ReturnValue3) == 0x000AE0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_LessEqual_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Variable6) == 0x000AE1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CharacterBehaviorMatches_ReturnValue3) == 0x000AE2, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CharacterBehaviorMatches_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000AE4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000AE8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetPairCharacterBP_PairCharacterBP4) == 0x000AF0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetPairCharacterBP_PairCharacterBP4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_AJBDamage_self_CastInput) == 0x000AF8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_AJBDamage_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue13) == 0x000B08, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Loaded1) == 0x000B10, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Loaded1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bInfinityRevive1) == 0x000B18, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bInfinityRevive1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bInfinityRevive) == 0x000B19, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bInfinityRevive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_InString) == 0x000B20, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_InString' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bPrintToScreen) == 0x000B30, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bPrintToScreen' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bPrintToLog) == 0x000B31, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bPrintToLog' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_TextColor) == 0x000B34, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_TextColor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Duration) == 0x000B44, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInput_InputEnable6) == 0x000B48, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInput_InputEnable6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_TryGetCloudPointTarget_CloudPointTarget) == 0x000B50, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_TryGetCloudPointTarget_CloudPointTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Value) == 0x000B58, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBI_Additional_AP3) == 0x000B60, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBI_Additional_AP3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess22) == 0x000B70, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess22' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBGameInstance_bSuccess1) == 0x000B71, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBGameInstance_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBGameInstance_AJB_Game_Instance1) == 0x000B78, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBGameInstance_AJB_Game_Instance1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Subtract_IntInt_ReturnValue2) == 0x000B80, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Subtract_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_PlayModeEquals_bResult1) == 0x000B84, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_PlayModeEquals_bResult1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_OtherCharacterBP) == 0x000B88, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_OtherCharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetDisplayName_ReturnValue) == 0x000B90, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue14) == 0x000BA0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ANS) == 0x000BA8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ANS' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess23) == 0x000BB0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess23' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Variable4) == 0x000BB4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue15) == 0x000BB8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAchievedGrowup_Growup) == 0x000BC0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAchievedGrowup_Growup' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAchievedGrowup_Value) == 0x000BC8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAchievedGrowup_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue20) == 0x000BCC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue20' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MakeLiteralFloat_ReturnValue6) == 0x000BD0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MakeLiteralFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_SwitchEnum3_CmpSuccess) == 0x000BD4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_SwitchEnum3_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_struct_Variable2) == 0x000BD8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_SwitchEnum4_CmpSuccess) == 0x000BE0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_SwitchEnum4_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_struct_Variable3) == 0x000BE8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_object_Variable3) == 0x000BF0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue14) == 0x000BF8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue57) == 0x000BF9, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue57' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ANS1) == 0x000C00, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ANS1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess24) == 0x000C08, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess24' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue16) == 0x000C09, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetActorForwardVector_ReturnValue1) == 0x000C0C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetActorForwardVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetActorRightVector_ReturnValue) == 0x000C18, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue12) == 0x000C24, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue58) == 0x000C25, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue58' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_Value3) == 0x000C28, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_Value3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000C2C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Abs_ReturnValue) == 0x000C38, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000C3C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Abs_ReturnValue1) == 0x000C40, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Abs_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_Value2) == 0x000C44, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_Value2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x000C48, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Multiply_VectorFloat_ReturnValue2) == 0x000C4C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Multiply_VectorFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Abs_ReturnValue2) == 0x000C58, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Abs_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Greater_FloatFloat_ReturnValue2) == 0x000C5C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Greater_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Abs_ReturnValue3) == 0x000C60, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Abs_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Greater_FloatFloat_ReturnValue3) == 0x000C64, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Greater_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_Value1) == 0x000C68, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_Value1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_Value) == 0x000C6C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue15) == 0x000C70, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue59) == 0x000C71, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue59' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue13) == 0x000C72, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetWorldDeltaSeconds_ReturnValue1) == 0x000C74, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetWorldDeltaSeconds_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_object_Variable4) == 0x000C78, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_object_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000C80, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_FloatFloat_ReturnValue2) == 0x000C84, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue17) == 0x000C88, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsPlayerController_ReturnValue6) == 0x000C89, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsPlayerController_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Variable7) == 0x000C8A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Variable7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Active_bReturnValue6) == 0x000C8B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Active_bReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue9) == 0x000C8C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller3) == 0x000C90, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess25) == 0x000C98, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess25' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue18) == 0x000C99, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetCurrentFlowState_FlowState) == 0x000CA0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetCurrentFlowState_FlowState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EqualEqual_GameplayTag_ReturnValue1) == 0x000CA8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EqualEqual_GameplayTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Variable8) == 0x000CA9, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Variable8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue20) == 0x000CAA, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue20' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Select4_Default) == 0x000CB0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue14) == 0x000CB8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000CC0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue60) == 0x000CC8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue60' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue19) == 0x000CC9, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue15) == 0x000CCA, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Active_bReturnValue7) == 0x000CCB, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Active_bReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue10) == 0x000CCC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehaviorIsEmote_bRetValue6) == 0x000CCD, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehaviorIsEmote_bRetValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue16) == 0x000CCE, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue61) == 0x000CCF, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue61' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue62) == 0x000CD0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue62' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue17) == 0x000CD1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue17' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue63) == 0x000CD2, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue63' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehaviorIsEmote_bRetValue7) == 0x000CD3, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehaviorIsEmote_bRetValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue64) == 0x000CD4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue64' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_name_Variable1) == 0x000CD8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MakeVector_ReturnValue) == 0x000CE0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_ClampVectorSize_ReturnValue) == 0x000CEC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_VSize_ReturnValue) == 0x000CF8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsFalling_ReturnValue1) == 0x000CFC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsFalling_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue65) == 0x000CFD, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue65' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Operator) == 0x000D00, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Time) == 0x000D08, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Timing) == 0x000D0C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bEnable4) == 0x000D0D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bEnable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bOperatorIsEmpty) == 0x000D0E, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue12) == 0x000D0F, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue66) == 0x000D10, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue66' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue4) == 0x000D11, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue5) == 0x000D12, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EqualEqual_ObjectObject_ReturnValue1) == 0x000D13, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EqualEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue13) == 0x000D14, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue14) == 0x000D15, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue21) == 0x000D16, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue21' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue67) == 0x000D17, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue67' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInputCameraOnly_bReturnValue7) == 0x000D18, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInputCameraOnly_bReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInput_InputEnable7) == 0x000D19, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInput_InputEnable7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue68) == 0x000D1A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue68' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehaviorIsEmote_bRetValue8) == 0x000D1B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehaviorIsEmote_bRetValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue20) == 0x000D1C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue20' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue69) == 0x000D1D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue69' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsPlayerController_ReturnValue7) == 0x000D1E, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsPlayerController_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBInGameHUD_BP_bSuccess) == 0x000D1F, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBInGameHUD_BP_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD) == 0x000D20, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBInGameHUD_BP_bSuccess1) == 0x000D28, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBInGameHUD_BP_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD1) == 0x000D30, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000D38, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue16) == 0x000D40, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue70) == 0x000D41, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue70' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBInGameHUD_BP_bSuccess2) == 0x000D42, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBInGameHUD_BP_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD2) == 0x000D48, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsShowingEmoteSelect_bShow) == 0x000D50, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsShowingEmoteSelect_bShow' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue17) == 0x000D51, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Active_bReturnValue8) == 0x000D52, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Active_bReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CanEmote_FailureFactor) == 0x000D58, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CanEmote_FailureFactor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CanEmote_FailureSkills) == 0x000D78, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CanEmote_FailureSkills' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CanEmote_bCanEmote) == 0x000D98, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CanEmote_bCanEmote' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue11) == 0x000D99, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue18) == 0x000D9A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue18' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue71) == 0x000D9B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue71' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue6) == 0x000D9C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue15) == 0x000D9D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Active_bReturnValue9) == 0x000D9E, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Active_bReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehaviorIsEmote_bRetValue9) == 0x000D9F, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehaviorIsEmote_bRetValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue18) == 0x000DA0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue72) == 0x000DA1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue72' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue12) == 0x000DA2, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_OnBeforeInteract_bShouldInteract) == 0x000DA3, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_OnBeforeInteract_bShouldInteract' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_FloatFloat_ReturnValue3) == 0x000DA4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_FloatFloat_ReturnValue4) == 0x000DA8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_FMin_ReturnValue) == 0x000DAC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_FMin_ReturnValue1) == 0x000DB0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_FMin_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue19) == 0x000DB4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue19' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue73) == 0x000DB5, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue73' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_NearlyEqual_FloatFloat_ReturnValue1) == 0x000DB6, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_NearlyEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue74) == 0x000DB7, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue74' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue20) == 0x000DB8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue20' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue75) == 0x000DB9, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue75' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CanEmote_FailureFactor1) == 0x000DC0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CanEmote_FailureFactor1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CanEmote_FailureSkills1) == 0x000DE0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CanEmote_FailureSkills1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CanEmote_bCanEmote1) == 0x000E00, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CanEmote_bCanEmote1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue19) == 0x000E01, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue76) == 0x000E02, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue76' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Abs_ReturnValue4) == 0x000E04, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Abs_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Abs_ReturnValue5) == 0x000E08, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Abs_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_FloatFloat_ReturnValue5) == 0x000E0C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBInGameHUD_BP_bSuccess3) == 0x000E10, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBInGameHUD_BP_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD3) == 0x000E18, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Greater_FloatFloat_ReturnValue4) == 0x000E20, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Greater_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsShowingEmoteSelect_bShow1) == 0x000E21, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsShowingEmoteSelect_bShow1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue77) == 0x000E22, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue77' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EmotePoseExists_bResult) == 0x000E23, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EmotePoseExists_bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue16) == 0x000E24, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckPossibleDash_bPossible) == 0x000E25, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckPossibleDash_bPossible' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInputCameraOnly_bReturnValue8) == 0x000E26, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInputCameraOnly_bReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue78) == 0x000E27, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue78' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000E28, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MakeVector_ReturnValue1) == 0x000E34, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckConstantVelocity_bConstantVelocity) == 0x000E40, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckConstantVelocity_bConstantVelocity' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Normal_ReturnValue) == 0x000E44, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue79) == 0x000E50, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue79' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000E54, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckConstantVelocity_bConstantVelocity1) == 0x000E60, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckConstantVelocity_bConstantVelocity1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckConstantVelocity_bConstantVelocity2) == 0x000E61, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckConstantVelocity_bConstantVelocity2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue80) == 0x000E62, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue80' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInput_InputEnable8) == 0x000E63, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInput_InputEnable8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue20) == 0x000E64, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue20' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue21) == 0x000E65, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue21' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue81) == 0x000E66, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue81' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue82) == 0x000E67, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue82' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsOperatingSeparatedStand_ReturnValue) == 0x000E68, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsOperatingSeparatedStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue21) == 0x000E69, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue21' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue83) == 0x000E6A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue83' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Active_bReturnValue10) == 0x000E6B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Active_bReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue13) == 0x000E6C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehaviorIsEmote_bRetValue10) == 0x000E6D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehaviorIsEmote_bRetValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_TryGetSupportSkillComponent_bSuccess) == 0x000E6E, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_TryGetSupportSkillComponent_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_TryGetSupportSkillComponent_SupportSkillComponent) == 0x000E70, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_TryGetSupportSkillComponent_SupportSkillComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue84) == 0x000E78, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue84' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBLong_Press_Interact) == 0x000E80, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBLong_Press_Interact' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess26) == 0x000E88, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess26' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActive_bActive) == 0x000E89, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActive_bActive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue17) == 0x000E8A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInput_InputEnable9) == 0x000E8B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInput_InputEnable9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue22) == 0x000E8C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue22' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NotifyName15) == 0x000E90, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NotifyName15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue85) == 0x000E98, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue85' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue22) == 0x000E99, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue22' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue23) == 0x000E9A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue23' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue86) == 0x000E9B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue86' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CanDash_bIsDash) == 0x000E9C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CanDash_bIsDash' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue18) == 0x000E9D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_HalfHeightAdjust1) == 0x000EA0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_HalfHeightAdjust1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_ScaledHalfHeightAdjust1) == 0x000EA4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_ScaledHalfHeightAdjust1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_FloatFloat_ReturnValue6) == 0x000EA8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_HalfHeightAdjust) == 0x000EAC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_HalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_ScaledHalfHeightAdjust) == 0x000EB0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_ScaledHalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MakeVector_ReturnValue2) == 0x000EB4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000EC0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000EC4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_DeltaSeconds) == 0x000EC8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MakeVector_ReturnValue3) == 0x000ECC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MakeVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_VectorVector_ReturnValue1) == 0x000ED8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000EE8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_VectorVector_ReturnValue2) == 0x000F70, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_SetRelativeLocation_SweepHitResult1) == 0x000F80, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_SetRelativeLocation_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Damage1) == 0x001008, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Damage1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInputCameraOnly_bReturnValue9) == 0x00100C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInputCameraOnly_bReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue87) == 0x00100D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue87' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_PrevSP) == 0x001010, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_PrevSP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_CurrentSP) == 0x001014, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_CurrentSP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_LessEqual_IntInt_ReturnValue) == 0x001018, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x00101C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Subtract_VectorVector_ReturnValue) == 0x001028, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Normal_ReturnValue1) == 0x001034, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Normal_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate7) == 0x001040, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue21) == 0x001050, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue21' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NewState2) == 0x001054, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NewState2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Clamp_ReturnValue) == 0x001058, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_LessEqual_IntInt_ReturnValue1) == 0x00105C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_LessEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NewState1) == 0x00105D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NewState1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NewState) == 0x00105E, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NewState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInputCameraOnly_bReturnValue10) == 0x00105F, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInputCameraOnly_bReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInputCameraOnly_bReturnValue11) == 0x001060, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInputCameraOnly_bReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue88) == 0x001061, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue88' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue89) == 0x001062, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue89' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInput_InputEnable10) == 0x001063, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInput_InputEnable10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_NotEqual_ByteByte_ReturnValue1) == 0x001064, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_NotEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_SpectatorControllers) == 0x001068, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_SpectatorControllers' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_SwitchEnum5_CmpSuccess) == 0x001078, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_SwitchEnum5_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_PC1) == 0x001080, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_PC1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_PC) == 0x001088, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_PC' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_SetPositionNo) == 0x001090, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_SetPositionNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInput_InputEnable11) == 0x001094, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInput_InputEnable11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue90) == 0x001095, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue90' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_SwitchEnum6_CmpSuccess) == 0x001096, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_SwitchEnum6_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetGameMode_ReturnValue) == 0x001098, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBBattle_Game_Mode) == 0x0010A0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBBattle_Game_Mode' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess27) == 0x0010A8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess27' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetCurrentFlowStateGameplayTag_CurrentState) == 0x0010B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetCurrentFlowStateGameplayTag_CurrentState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EqualEqual_GameplayTag_ReturnValue2) == 0x0010B8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EqualEqual_GameplayTag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_HitTarget1) == 0x0010C0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_HitTarget1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Causer1) == 0x0010C8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Causer1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_CauserType1) == 0x0010D0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_CauserType1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_SerialNumber2) == 0x0010D8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_SerialNumber2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_HitTarget) == 0x0010E0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_HitTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Tag6) == 0x0010E8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Tag6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Causer) == 0x0010F0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Causer' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_CauserType) == 0x0010F8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_CauserType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_SerialNumber1) == 0x001100, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_SerialNumber1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBI_Passive_Skill_Affecter_Interface) == 0x001108, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBI_Passive_Skill_Affecter_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess28) == 0x001118, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess28' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface) == 0x001120, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess29) == 0x001130, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess29' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetPassiveSkillTag_PassiveSkillTag) == 0x001138, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetPassiveSkillTag_PassiveSkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsGameplayTagValid_ReturnValue) == 0x001140, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsActor) == 0x001148, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess30) == 0x001150, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess30' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBCharacterFromActor_CharacterBP2) == 0x001158, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBCharacterFromActor_CharacterBP2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBCharacterFromActor_bSuccess2) == 0x001160, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBCharacterFromActor_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NotifyName16) == 0x001168, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NotifyName16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CharacterBehaviorMatches_ReturnValue4) == 0x001170, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CharacterBehaviorMatches_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Variable9) == 0x001171, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Variable9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue19) == 0x001172, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate8) == 0x001178, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue21) == 0x001188, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue21' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_BehaviorInfo1) == 0x001190, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_BehaviorInfo1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_BehaviorInfo) == 0x0011B8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_BehaviorInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue23) == 0x0011E0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue23' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsFalling_ReturnValue2) == 0x0011E1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsFalling_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_float_Variable9) == 0x0011E4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_float_Variable9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_LessEqual_FloatFloat_ReturnValue4) == 0x0011E8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_LessEqual_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_GetActorLocation_ReturnValue3) == 0x0011EC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_GetActorLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakVector_X) == 0x0011F8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakVector_Y) == 0x0011FC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakVector_Z) == 0x001200, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x001204, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MakeLiteralFloat_ReturnValue7) == 0x001208, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MakeLiteralFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MakeLiteralFloat_ReturnValue8) == 0x00120C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MakeLiteralFloat_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NotifyName17) == 0x001210, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NotifyName17' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_FMax_ReturnValue) == 0x001218, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_LandingStopTime_Sec_2) == 0x00121C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_LandingStopTime_Sec_2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_LandingStopTime_Sec_1) == 0x001220, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_LandingStopTime_Sec_1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_LandingStopTime_Sec_) == 0x001224, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_LandingStopTime_Sec_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_LessEqual_FloatFloat_ReturnValue5) == 0x001228, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_LessEqual_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetRelativeTransform_ReturnValue) == 0x001230, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable2) == 0x001260, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue22) == 0x001261, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue22' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue22) == 0x001262, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue22' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue91) == 0x001263, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue91' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Window1) == 0x001268, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Window1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x001270, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bIgnorePitch) == 0x00127C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bIgnorePitch' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NewRotation1) == 0x001280, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NewRotation1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NewRotation) == 0x00128C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NewRotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue23) == 0x001298, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue23' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Active_bReturnValue11) == 0x001299, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Active_bReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue14) == 0x00129A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_ItemTag) == 0x0012A0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_ItemTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_SETag) == 0x0012A8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_SETag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_RequestWwiseEventOnLocal_AkComponent2) == 0x0012B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_RequestWwiseEventOnLocal_AkComponent2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate9) == 0x0012B8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MakeLiteralFloat_ReturnValue9) == 0x0012C8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MakeLiteralFloat_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x0012CC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GreaterEqual_FloatFloat_ReturnValue1) == 0x0012D0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GreaterEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Select5_Default) == 0x0012D8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Select5_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_FMin_ReturnValue2) == 0x0012E0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_FMin_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Select6_Default) == 0x0012E4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Select6_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_BlockedActor1) == 0x0012E8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_BlockedActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_HitLocation1) == 0x0012F0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_HitLocation1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bSeparateStandAttack1) == 0x0012FC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bSeparateStandAttack1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_BlockedActor) == 0x001300, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_BlockedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_HItLocation) == 0x001308, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_HItLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bIsPairAttack) == 0x001314, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bIsPairAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DamageOwner) == 0x001318, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DamageOwner' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bSeparateStandAttack) == 0x001320, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bSeparateStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface) == 0x001328, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess31) == 0x001338, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess31' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehaviorIsEmote_bRetValue11) == 0x001339, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehaviorIsEmote_bRetValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue92) == 0x00133A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue92' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue24) == 0x00133B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue24' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue93) == 0x00133C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue93' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue25) == 0x00133D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue25' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue94) == 0x00133E, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue94' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetComponentsByClass_ReturnValue2) == 0x001340, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetComponentsByClass_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetControlRotation_ReturnValue) == 0x001350, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakRotator_Roll) == 0x00135C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakRotator_Pitch) == 0x001360, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakRotator_Yaw) == 0x001364, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MakeRotator_ReturnValue) == 0x001368, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Window) == 0x001378, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Window' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetController_ReturnValue) == 0x001380, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue23) == 0x001388, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue23' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsPlayerController_ReturnValue8) == 0x001389, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsPlayerController_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsLocalController_ReturnValue) == 0x00138A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable3) == 0x00138B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInputCameraOnly_bReturnValue12) == 0x00138C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInputCameraOnly_bReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NotifyName18) == 0x001390, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NotifyName18' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue95) == 0x001398, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue95' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInput_InputEnable12) == 0x001399, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInput_InputEnable12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue24) == 0x00139A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue24' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue7) == 0x00139B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue24) == 0x00139C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue24' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsPlayerController_ReturnValue9) == 0x00139D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsPlayerController_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue8) == 0x00139E, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue15) == 0x00139F, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate10) == 0x0013A0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_GetActorLocation_ReturnValue4) == 0x0013B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_GetActorLocation_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_RequestWwiseEventOnLocal_AkComponent3) == 0x0013C0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_RequestWwiseEventOnLocal_AkComponent3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate11) == 0x0013C8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NewMPMax) == 0x0013D8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NewMPMax' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_IncreaseValue) == 0x0013DC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_IncreaseValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue25) == 0x0013E0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue25' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_FloatFloat_ReturnValue7) == 0x0013E4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_FloatFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckDisableAreaDamage_bDisableAreadamage) == 0x0013E8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckDisableAreaDamage_bDisableAreadamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue96) == 0x0013E9, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue96' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NotifyName9) == 0x0013F0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NotifyName9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_PairInfoWidget) == 0x0013F8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_PairInfoWidget' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_PairName) == 0x001400, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_PairName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NotifyName19) == 0x001418, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NotifyName19' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue26) == 0x001420, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue26' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue26) == 0x001421, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue26' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue27) == 0x001422, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue27' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue97) == 0x001423, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue97' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue28) == 0x001424, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue28' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate12) == 0x001428, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue25) == 0x001438, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue25' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_FMax_ReturnValue1) == 0x00143C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_FMax_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Divide_FloatFloat_ReturnValue) == 0x001440, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x001444, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable4) == 0x001448, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_FMin_ReturnValue3) == 0x00144C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_FMin_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue27) == 0x001450, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue27' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Loop_Counter_Variable15) == 0x001454, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Loop_Counter_Variable15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue98) == 0x001458, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue98' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Less_IntInt_ReturnValue1) == 0x001459, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue22) == 0x00145C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue22' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_LessEqual_FloatFloat_ReturnValue6) == 0x001460, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_LessEqual_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsServer_ReturnValue15) == 0x001461, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsServer_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NewValue) == 0x001464, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Has_Been_Initd_Variable4) == 0x001468, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Has_Been_Initd_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NormalizedPosition2) == 0x00146C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NormalizedPosition2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_PinTypeTag5) == 0x001478, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_PinTypeTag5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NormalizedPosition1) == 0x001480, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NormalizedPosition1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_PinTypeTag4) == 0x001488, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_PinTypeTag4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBInGameHUD_BP_bSuccess4) == 0x001490, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBInGameHUD_BP_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD4) == 0x001498, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NormalizedPosition) == 0x0014A0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NormalizedPosition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_PinTypeTag3) == 0x0014A8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_PinTypeTag3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable5) == 0x0014B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_IsClosed_Variable4) == 0x0014B1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_IsClosed_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue9) == 0x0014B2, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue16) == 0x0014B3, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Array_Index_Variable15) == 0x0014B4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Array_Index_Variable15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Get_Item1) == 0x0014B8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller4) == 0x0014C0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess32) == 0x0014C8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess32' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsSkillActive_ReturnValue) == 0x0014C9, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsSkillActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue26) == 0x0014CA, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue26' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue24) == 0x0014CB, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue24' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate13) == 0x0014D0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue99) == 0x0014E0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue99' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue25) == 0x0014E1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue25' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_GetActorRotation_ReturnValue1) == 0x0014E4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_GetActorRotation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsPair_bPairCharacter1) == 0x0014F0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsPair_bPairCharacter1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Active_bReturnValue12) == 0x0014F1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Active_bReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue17) == 0x0014F2, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetDisplayName_ReturnValue1) == 0x0014F8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetDisplayName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Concat_StrStr_ReturnValue) == 0x001508, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Conv_IntToString_ReturnValue1) == 0x001518, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Conv_IntToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetPlayMode_PlayMode) == 0x001528, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetPlayMode_PlayMode' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Concat_StrStr_ReturnValue1) == 0x001530, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_SwitchEnum7_CmpSuccess) == 0x001540, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_SwitchEnum7_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehaviorIsEmote_bRetValue12) == 0x001541, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehaviorIsEmote_bRetValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue100) == 0x001542, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue100' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_GetActorLocation_ReturnValue5) == 0x001544, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_GetActorLocation_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_SerialNumber) == 0x001550, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehaviorIsEmote_bRetValue13) == 0x001554, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehaviorIsEmote_bRetValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue101) == 0x001555, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue101' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue28) == 0x001556, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue28' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue102) == 0x001557, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue102' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_GetActorRotation_ReturnValue2) == 0x001558, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_GetActorRotation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_FactorTag2) == 0x001568, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_FactorTag2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DurationSec) == 0x001570, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DurationSec' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_FactorTag1) == 0x001578, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_FactorTag1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Greater_FloatFloat_ReturnValue5) == 0x001580, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Greater_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Array_Index_Variable16) == 0x001584, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Array_Index_Variable16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_FactorTag) == 0x001588, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_FactorTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_RemainingDurationSec) == 0x001590, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_RemainingDurationSec' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Get_Item2) == 0x001598, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Map_Remove_ReturnValue) == 0x0015A0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Map_Find_Value) == 0x0015A4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Map_Find_ReturnValue) == 0x0015A8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue29) == 0x0015A9, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue29' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MakeLiteralFloat_ReturnValue10) == 0x0015AC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MakeLiteralFloat_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue103) == 0x0015B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue103' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_SkillTag1) == 0x0015B8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_SkillTag1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_SkillTag) == 0x0015C0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_SkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_EffectiveTimeSec) == 0x0015C8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_EffectiveTimeSec' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_MakeArray_Array) == 0x0015D0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Active_bReturnValue13) == 0x0015E0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Active_bReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_EffectType1) == 0x0015E8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_EffectType1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bLandingStop2) == 0x0015F0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bLandingStop2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_WorldLocation2) == 0x0015F4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_WorldLocation2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_EffectType) == 0x001600, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_EffectType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bLandingStop1) == 0x001608, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bLandingStop1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_WorldLocation1) == 0x00160C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_WorldLocation1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_RandomPointInRing_ReturnValue) == 0x001618, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_RandomPointInRing_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x001628, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue104) == 0x001630, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue104' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBGameInstance_bSuccess2) == 0x001631, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBGameInstance_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBGameInstance_AJB_Game_Instance2) == 0x001638, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBGameInstance_AJB_Game_Instance2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsPlayingReplay_ReturnValue1) == 0x001640, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsPlayingReplay_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue26) == 0x001641, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue26' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue18) == 0x001642, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBInGameHUD_BP_bSuccess5) == 0x001643, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBInGameHUD_BP_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD5) == 0x001648, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInputCameraOnly_bReturnValue13) == 0x001650, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInputCameraOnly_bReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInput_InputEnable13) == 0x001651, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInput_InputEnable13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue105) == 0x001652, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue105' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckPossibleLandingStop_bPossible) == 0x001653, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckPossibleLandingStop_bPossible' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue27) == 0x001654, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue27' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue106) == 0x001655, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue106' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue1) == 0x001658, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue27) == 0x001660, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue27' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue2) == 0x001668, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue28) == 0x001670, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue28' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue28) == 0x001671, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue28' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Active_bReturnValue14) == 0x001672, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Active_bReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue19) == 0x001673, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehaviorIsEmote_bRetValue14) == 0x001674, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehaviorIsEmote_bRetValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue29) == 0x001675, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue29' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue107) == 0x001676, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue107' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue108) == 0x001677, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue108' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bEnable3) == 0x001678, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bEnable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bResetRecording) == 0x001679, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bResetRecording' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue30) == 0x00167A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue30' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue109) == 0x00167B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue109' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue31) == 0x00167C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue31' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NotifyName8) == 0x001680, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NotifyName8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue110) == 0x001688, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue110' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bLandingStop) == 0x001689, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bLandingStop' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_WorldLocation) == 0x00168C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInput_InputEnable14) == 0x001698, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInput_InputEnable14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Select7_Default) == 0x0016A0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Select7_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsGameplayTagValid_ReturnValue1) == 0x0016A8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsGameplayTagValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInputCameraOnly_bReturnValue14) == 0x0016A9, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInputCameraOnly_bReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInput_InputEnable15) == 0x0016AA, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInput_InputEnable15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue111) == 0x0016AB, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue111' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Has_Been_Initd_Variable5) == 0x0016AC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Has_Been_Initd_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue30) == 0x0016AD, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue30' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue112) == 0x0016AE, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue112' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_PositionNo3) == 0x0016B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_PositionNo3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue31) == 0x0016B4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue31' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_TryGetEmoteVoiceByIndex_ReturnValue) == 0x0016B8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_TryGetEmoteVoiceByIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Active_bReturnValue15) == 0x0016BC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Active_bReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue20) == 0x0016BD, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue20' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_PositionNo2) == 0x0016C0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_PositionNo2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_TryGetEmoteAnimMontageByIndex_ReturnValue) == 0x0016C8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_TryGetEmoteAnimMontageByIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_PositionNo1) == 0x0016D0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_PositionNo1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_PositionNo) == 0x0016D4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_PositionNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehaviorIsEmote_bRetValue15) == 0x0016D8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehaviorIsEmote_bRetValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetControlRotation_ReturnValue1) == 0x0016DC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetControlRotation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue113) == 0x0016E8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue113' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetWorldDeltaSeconds_ReturnValue2) == 0x0016EC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetWorldDeltaSeconds_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_IsClosed_Variable5) == 0x0016F0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_IsClosed_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue32) == 0x0016F1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue32' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue114) == 0x0016F2, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue114' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehavior_bRetValue33) == 0x0016F3, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehavior_bRetValue33' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInputCameraOnly_bReturnValue15) == 0x0016F4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInputCameraOnly_bReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue115) == 0x0016F5, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue115' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue116) == 0x0016F6, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue116' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetWorldDeltaSeconds_ReturnValue3) == 0x0016F8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetWorldDeltaSeconds_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Less_FloatFloat_ReturnValue) == 0x0016FC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_object_Variable5) == 0x001700, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_object_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x001708, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsMaterial_Interface1) == 0x001710, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsMaterial_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess33) == 0x001718, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess33' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue29) == 0x001719, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue29' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetPlayerController_ReturnValue) == 0x001720, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Loop_Counter_Variable16) == 0x001728, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Loop_Counter_Variable16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_NotEqual_ObjectObject_ReturnValue1) == 0x00172C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_NotEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Less_IntInt_ReturnValue2) == 0x00172D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue23) == 0x001730, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue23' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInputCameraOnly_bReturnValue16) == 0x001734, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInputCameraOnly_bReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bSkillAnimation) == 0x001735, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bSkillAnimation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue117) == 0x001736, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue117' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bDebugSkillAnimation1) == 0x001737, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bDebugSkillAnimation1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bDebugSkillAnimation) == 0x001738, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bDebugSkillAnimation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue29) == 0x001739, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue29' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckEnableInput_InputEnable16) == 0x00173A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckEnableInput_InputEnable16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsDedicatedServer_ReturnValue11) == 0x00173B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsDedicatedServer_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Loaded2) == 0x001740, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Loaded2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetPairCharacterBP_PairCharacterBP5) == 0x001748, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetPairCharacterBP_PairCharacterBP5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate14) == 0x001750, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Get_Item3) == 0x001760, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Length_ReturnValue5) == 0x001768, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Length_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_GetPawn_ReturnValue) == 0x001770, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Less_IntInt_ReturnValue3) == 0x001778, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBin_Game_Death_Camera) == 0x001780, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBin_Game_Death_Camera' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess34) == 0x001788, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess34' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue30) == 0x001789, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue30' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Get_Item4) == 0x001790, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_GetPawn_ReturnValue1) == 0x001798, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_GetPawn_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Length_ReturnValue6) == 0x0017A0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Length_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Watcher_Camera) == 0x0017A8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Watcher_Camera' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess35) == 0x0017B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess35' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Less_IntInt_ReturnValue4) == 0x0017B1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Less_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue32) == 0x0017B2, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue32' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue118) == 0x0017B3, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue118' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetGameState_ReturnValue2) == 0x0017B8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetGameState_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBBattle_Game_State3) == 0x0017C0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBBattle_Game_State3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess36) == 0x0017C8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess36' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetComponentsByClass_ReturnValue3) == 0x0017D0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetComponentsByClass_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsLastDefeatedCharacter_Result) == 0x0017E0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsLastDefeatedCharacter_Result' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Event_bShouldDestroy) == 0x0017E1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Event_bShouldDestroy' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Has_Been_Initd_Variable6) == 0x0017E2, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Has_Been_Initd_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Critical_bReturnValue33) == 0x0017E3, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Critical_bReturnValue33' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckCharacterBehavior_Active_bReturnValue16) == 0x0017E4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckCharacterBehavior_Active_bReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CheckActiveBehaviorIsEmote_bRetValue16) == 0x0017E5, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CheckActiveBehaviorIsEmote_bRetValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue21) == 0x0017E6, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue21' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue119) == 0x0017E7, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue119' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate15) == 0x0017E8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBGameInstance_bSuccess3) == 0x0017F8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBGameInstance_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBGameInstance_AJB_Game_Instance3) == 0x001800, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBGameInstance_AJB_Game_Instance3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue1) == 0x001808, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsPlayingReplay_ReturnValue2) == 0x001810, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsPlayingReplay_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Variable10) == 0x001811, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Variable10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_DigitToChange) == 0x001812, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_DigitToChange' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bFlag) == 0x001813, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bFlag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bAlsoChangeRelatedActors) == 0x001814, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bAlsoChangeRelatedActors' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_object_Variable6) == 0x001818, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_object_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsSkeletal_Mesh1) == 0x001820, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsSkeletal_Mesh1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess37) == 0x001828, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess37' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetPrimitivesToChangeStencil_PrimitiveComponents) == 0x001830, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetPrimitivesToChangeStencil_PrimitiveComponents' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Get_Item5) == 0x001840, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Get_Item5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Length_ReturnValue7) == 0x001848, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Length_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Less_IntInt_ReturnValue5) == 0x00184C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Less_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_IsClosed_Variable6) == 0x00184D, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_IsClosed_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate16) == 0x001850, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Loaded3) == 0x001860, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Loaded3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate17) == 0x001868, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate17' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasMovableStand_ReturnValue) == 0x001878, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasMovableStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasStand_ReturnValue) == 0x001879, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate18) == 0x001880, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate18' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bEnable2) == 0x001890, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bEnable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate19) == 0x001898, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate19' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bEnable1) == 0x0018A8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bEnable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bEnable) == 0x0018A9, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate20) == 0x0018B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate20' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate21) == 0x0018C0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate21' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_MatchingPlayerIndex) == 0x0018D0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_MatchingPlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Conv_IntToString_ReturnValue2) == 0x0018D8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Conv_IntToString_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Conv_IntToString_ReturnValue3) == 0x0018E8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Conv_IntToString_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Concat_StrStr_ReturnValue2) == 0x0018F8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Concat_StrStr_ReturnValue3) == 0x001908, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Concat_StrStr_ReturnValue4) == 0x001918, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Concat_StrStr_ReturnValue5) == 0x001928, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Concat_StrStr_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasStand_ReturnValue1) == 0x001938, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasStand_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate22) == 0x001940, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate22' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasMovableStand_ReturnValue1) == 0x001950, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasMovableStand_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate23) == 0x001958, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate23' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate24) == 0x001968, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate24' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate25) == 0x001978, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate25' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate26) == 0x001988, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate26' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue30) == 0x001998, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue30' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_PlayModeIsPair_ReturnValue) == 0x001999, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_PlayModeIsPair_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate27) == 0x0019A0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate27' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBGameInstance_bSuccess4) == 0x0019B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBGameInstance_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBGameInstance_AJB_Game_Instance4) == 0x0019B8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBGameInstance_AJB_Game_Instance4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetFocusActor_ReturnValue) == 0x0019C0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetFocusActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsPlayingReplay_ReturnValue3) == 0x0019C8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsPlayingReplay_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EqualEqual_ObjectObject_ReturnValue2) == 0x0019C9, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EqualEqual_ObjectObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue20) == 0x0019CA, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue20' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate28) == 0x0019D0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate28' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue31) == 0x0019E0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue31' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBGameInstance_bSuccess5) == 0x0019E1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBGameInstance_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBGameInstance_AJB_Game_Instance5) == 0x0019E8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBGameInstance_AJB_Game_Instance5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsPlayingReplay_ReturnValue4) == 0x0019F0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsPlayingReplay_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBGameInstance_bSuccess6) == 0x0019F1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBGameInstance_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBGameInstance_AJB_Game_Instance6) == 0x0019F8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBGameInstance_AJB_Game_Instance6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetFocusActor_ReturnValue1) == 0x001A00, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetFocusActor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue31) == 0x001A08, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue31' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsDedicatedServer_ReturnValue12) == 0x001A09, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsDedicatedServer_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue32) == 0x001A0A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue32' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue32) == 0x001A0B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue32' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBGameInstance_bSuccess7) == 0x001A0C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBGameInstance_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBGameInstance_AJB_Game_Instance7) == 0x001A10, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBGameInstance_AJB_Game_Instance7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBGameInstance_bSuccess8) == 0x001A18, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBGameInstance_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBGameInstance_AJB_Game_Instance8) == 0x001A20, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBGameInstance_AJB_Game_Instance8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsPlayingReplay_ReturnValue5) == 0x001A28, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsPlayingReplay_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetFocusActor_ReturnValue2) == 0x001A30, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetFocusActor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue33) == 0x001A38, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue33' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue34) == 0x001A39, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue34' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetPlayerController_ReturnValue1) == 0x001A40, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetPlayerController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetViewTarget_ReturnValue) == 0x001A48, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBCharacterFromActor_CharacterBP3) == 0x001A50, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBCharacterFromActor_CharacterBP3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBCharacterFromActor_bSuccess3) == 0x001A58, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBCharacterFromActor_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EqualEqual_ObjectObject_ReturnValue3) == 0x001A59, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EqualEqual_ObjectObject_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBGameInstance_bSuccess9) == 0x001A5A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBGameInstance_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBGameInstance_AJB_Game_Instance9) == 0x001A60, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBGameInstance_AJB_Game_Instance9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetGionOwner_GionOwner) == 0x001A68, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetGionOwner_GionOwner' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasStartedPlayingReplay_ReturnValue) == 0x001A70, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasStartedPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetSpawnedSpaceInOwnersEnv_SpawnedSpaceInOwnersEnv) == 0x001A71, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetSpawnedSpaceInOwnersEnv_SpawnedSpaceInOwnersEnv' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue120) == 0x001A72, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue120' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue35) == 0x001A73, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue35' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBI_Effect_Visibility) == 0x001A78, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBI_Effect_Visibility' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess38) == 0x001A88, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess38' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAttachedActors_OutActors) == 0x001A90, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetWorldDeltaSeconds_ReturnValue4) == 0x001AA0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetWorldDeltaSeconds_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Get_Item6) == 0x001AA8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Get_Item6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Length_ReturnValue8) == 0x001AB0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Length_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Less_IntInt_ReturnValue6) == 0x001AB4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Less_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetObjectClass_ReturnValue) == 0x001AB8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_ClassIsChildOf_ReturnValue) == 0x001AC0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x001AC4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_FloatFloat_ReturnValue8) == 0x001AC8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_FloatFloat_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue36) == 0x001ACC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue36' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsPlayerController_ReturnValue10) == 0x001ACD, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsPlayerController_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GreaterEqual_FloatFloat_ReturnValue2) == 0x001ACE, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GreaterEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MapRangeClamped_ReturnValue) == 0x001AD0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Tag5) == 0x001AD8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Tag5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Select8_Default) == 0x001AE0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Select8_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_TrySetNextLandingStopTime_Sec__ReturnValue) == 0x001AE4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_TrySetNextLandingStopTime_Sec__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Greater_FloatFloat_ReturnValue6) == 0x001AE8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Greater_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Tag4) == 0x001AF0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Tag4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue37) == 0x001AF8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue37' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Character7) == 0x001B00, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Character7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess39) == 0x001B08, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess39' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Tag3) == 0x001B10, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Tag3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetWorldDeltaSeconds_ReturnValue5) == 0x001B18, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetWorldDeltaSeconds_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Tag2) == 0x001B20, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Tag2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Multiply_FloatFloat_ReturnValue5) == 0x001B28, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Multiply_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsGameplayTagValid_ReturnValue2) == 0x001B2C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsGameplayTagValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_FloatFloat_ReturnValue9) == 0x001B30, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_FloatFloat_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsGameplayTagValid_ReturnValue3) == 0x001B34, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsGameplayTagValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsGameplayTagValid_ReturnValue4) == 0x001B35, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsGameplayTagValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue121) == 0x001B36, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue121' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsGameplayTagValid_ReturnValue5) == 0x001B37, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsGameplayTagValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue122) == 0x001B38, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue122' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue38) == 0x001B39, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue38' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand1) == 0x001B40, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess40) == 0x001B48, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess40' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue123) == 0x001B49, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue123' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Tag1) == 0x001B50, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Tag1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue39) == 0x001B58, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue39' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue124) == 0x001B59, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue124' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1) == 0x001B60, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess41) == 0x001B68, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess41' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Variable5) == 0x001B6C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Tag) == 0x001B70, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Tag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetWorldDeltaSeconds_ReturnValue6) == 0x001B78, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetWorldDeltaSeconds_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Multiply_FloatFloat_ReturnValue6) == 0x001B7C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Multiply_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_FloatFloat_ReturnValue10) == 0x001B80, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_FloatFloat_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_GravityScaleTag2) == 0x001B88, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_GravityScaleTag2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_GravityScale2) == 0x001B90, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_GravityScale2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_GravityScaleTag1) == 0x001B98, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_GravityScaleTag1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_GravityScale1) == 0x001BA0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_GravityScale1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_GravityScaleTag) == 0x001BA8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_GravityScaleTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_GravityScale) == 0x001BB0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_GravityScale' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Variable6) == 0x001BB4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Variable11) == 0x001BB8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Variable11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Select9_Default) == 0x001BBC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Select9_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Array_Index_Variable17) == 0x001BC0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Array_Index_Variable17' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Get_Item7) == 0x001BC8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Get_Item7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBI_the_World_Interface1) == 0x001BD0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBI_the_World_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess42) == 0x001BE0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess42' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_float_Variable10) == 0x001BE4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_float_Variable10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Variable12) == 0x001BE8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Variable12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Select10_Default) == 0x001BEC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Select10_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_byte_Variable2) == 0x001BF0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_byte_Variable3) == 0x001BF1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Variable13) == 0x001BF2, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Variable13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue125) == 0x001BF3, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue125' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Select11_Default) == 0x001BF4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Select11_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_PrevFXVisibility) == 0x001BF5, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_PrevFXVisibility' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetComponentsByClass_ReturnValue4) == 0x001BF8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetComponentsByClass_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Get_Item8) == 0x001C08, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Get_Item8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Length_ReturnValue9) == 0x001C10, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Length_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBI_Effect_Visibility1) == 0x001C18, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBI_Effect_Visibility1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess43) == 0x001C28, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess43' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Less_IntInt_ReturnValue7) == 0x001C29, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Less_IntInt_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Location2) == 0x001C2C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Location2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_PinTypeTag2) == 0x001C38, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_PinTypeTag2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bIsRemove2) == 0x001C40, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bIsRemove2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bWithSound2) == 0x001C41, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bWithSound2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_PlayModeIsPair_ReturnValue1) == 0x001C42, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_PlayModeIsPair_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Location1) == 0x001C44, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_PinTypeTag1) == 0x001C50, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_PinTypeTag1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bIsRemove1) == 0x001C58, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bIsRemove1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bWithSound1) == 0x001C59, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bWithSound1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetPairCharacterBP_PairCharacterBP6) == 0x001C60, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetPairCharacterBP_PairCharacterBP6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue40) == 0x001C68, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue40' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Get_Item9) == 0x001C70, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Get_Item9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_GetPawn_ReturnValue2) == 0x001C78, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_GetPawn_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Length_ReturnValue10) == 0x001C80, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Length_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBin_Game_Death_Camera1) == 0x001C88, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBin_Game_Death_Camera1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess44) == 0x001C90, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess44' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Less_IntInt_ReturnValue8) == 0x001C91, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Less_IntInt_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBI_Stencil_Interface) == 0x001C98, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBI_Stencil_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess45) == 0x001CA8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess45' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetPrimitivesToChangeStencil_PrimitiveComponents1) == 0x001CB0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetPrimitivesToChangeStencil_PrimitiveComponents1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Get_Item10) == 0x001CC0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Get_Item10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Get_Item11) == 0x001CC8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Get_Item11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_GetPawn_ReturnValue3) == 0x001CD0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_GetPawn_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Watcher_Camera1) == 0x001CD8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Watcher_Camera1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess46) == 0x001CE0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess46' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Length_ReturnValue11) == 0x001CE4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Length_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Length_ReturnValue12) == 0x001CE8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Length_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Less_IntInt_ReturnValue9) == 0x001CEC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Less_IntInt_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Less_IntInt_ReturnValue10) == 0x001CED, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Less_IntInt_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue41) == 0x001CEE, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue41' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Location) == 0x001CF0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_PinTypeTag) == 0x001D00, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_PinTypeTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bIsRemove) == 0x001D08, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bIsRemove' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bWithSound) == 0x001D09, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bWithSound' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBInGameHUD_BP_bSuccess6) == 0x001D0A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBInGameHUD_BP_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD6) == 0x001D10, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue42) == 0x001D18, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue42' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBI_Stencil_Interface1) == 0x001D20, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBI_Stencil_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess47) == 0x001D30, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess47' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Variable14) == 0x001D31, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Variable14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetPrimitivesToChangeStencil_PrimitiveComponents2) == 0x001D38, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetPrimitivesToChangeStencil_PrimitiveComponents2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Get_Item12) == 0x001D48, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Get_Item12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Select12_Default) == 0x001D50, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Select12_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x001D54, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Length_ReturnValue13) == 0x001D58, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Length_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_struct_Variable4) == 0x001D60, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Less_IntInt_ReturnValue11) == 0x001D68, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Less_IntInt_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetWorldDeltaSeconds_ReturnValue7) == 0x001D6C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetWorldDeltaSeconds_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_struct_Variable5) == 0x001D70, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_struct_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Variable15) == 0x001D78, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Variable15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Variable16) == 0x001D79, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Variable16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Select13_Default) == 0x001D80, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Select13_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_RequestGion_AkComponent__LocalOnly_) == 0x001D88, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_RequestGion_AkComponent__LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_) == 0x001D90, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Select14_Default) == 0x001D98, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Select14_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue3) == 0x001DA0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_FloatFloat_ReturnValue11) == 0x001DA8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_FloatFloat_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue43) == 0x001DAC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue43' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue44) == 0x001DAD, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue44' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakRotator_Roll1) == 0x001DB0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakRotator_Pitch1) == 0x001DB4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakRotator_Yaw1) == 0x001DB8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakRotator_Yaw1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MakeRotator_ReturnValue1) == 0x001DBC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MakeRotator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_NearlyEqual_FloatFloat_ReturnValue2) == 0x001DC8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_NearlyEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_RInterpTo_ReturnValue) == 0x001DCC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue126) == 0x001DD8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue126' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanOR_ReturnValue22) == 0x001DD9, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanOR_ReturnValue22' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue21) == 0x001DDA, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue21' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Multiply_FloatFloat_ReturnValue7) == 0x001DDC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Multiply_FloatFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_FloatFloat_ReturnValue12) == 0x001DE0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_FloatFloat_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Variable17) == 0x001DE4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Variable17' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Get_Item13) == 0x001DE8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Get_Item13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Select15_Default) == 0x001DF0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Select15_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_GetPawn_ReturnValue4) == 0x001E00, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_GetPawn_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Watcher_Camera2) == 0x001E08, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Watcher_Camera2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess48) == 0x001E10, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess48' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Length_ReturnValue14) == 0x001E14, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Length_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Less_IntInt_ReturnValue12) == 0x001E18, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Less_IntInt_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Get_Item14) == 0x001E20, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Get_Item14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Length_ReturnValue15) == 0x001E28, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Length_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_GetPawn_ReturnValue5) == 0x001E30, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_GetPawn_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Less_IntInt_ReturnValue13) == 0x001E38, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Less_IntInt_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBin_Game_Death_Camera2) == 0x001E40, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBin_Game_Death_Camera2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess49) == 0x001E48, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess49' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate29) == 0x001E50, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate29' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Get_Item15) == 0x001E60, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Get_Item15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Get_Item16) == 0x001E68, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Get_Item16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_GetPawn_ReturnValue6) == 0x001E70, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_GetPawn_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_GetPawn_ReturnValue7) == 0x001E78, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_GetPawn_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Watcher_Camera3) == 0x001E80, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Watcher_Camera3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess50) == 0x001E88, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess50' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBin_Game_Death_Camera3) == 0x001E90, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBin_Game_Death_Camera3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess51) == 0x001E98, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess51' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Length_ReturnValue16) == 0x001E9C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Length_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Length_ReturnValue17) == 0x001EA0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Length_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Less_IntInt_ReturnValue14) == 0x001EA4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Less_IntInt_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Less_IntInt_ReturnValue15) == 0x001EA5, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Less_IntInt_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Variable18) == 0x001EA6, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Variable18' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate30) == 0x001EA8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate30' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_object_Variable7) == 0x001EB8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_object_Variable7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue2) == 0x001EC8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Variable19) == 0x001ED0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Variable19' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Select16_Default) == 0x001ED4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Select16_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate31) == 0x001ED8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate31' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate32) == 0x001EE8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate32' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CalcDamage_DamageForHPAP) == 0x001EF8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CalcDamage_DamageForHPAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CalcDamage_DamageForAAP) == 0x001EFC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CalcDamage_DamageForAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CalcDamage_CutDamage) == 0x001F00, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CalcDamage_CutDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CalcDamage_bRemainHP) == 0x001F04, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CalcDamage_bRemainHP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_CalcDamage_bDamageIsCutByAAP) == 0x001F05, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_CalcDamage_bDamageIsCutByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MakeTransform_ReturnValue) == 0x001F10, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_AddComponent_ReturnValue) == 0x001F40, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_AttachToComponent_ReturnValue) == 0x001F48, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_name_Variable2) == 0x001F50, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_name_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NotifyName) == 0x001F58, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetExistsUnderwater_Is_Exists_Underwater) == 0x001F60, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetExistsUnderwater_Is_Exists_Underwater' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate33) == 0x001F68, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate33' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetComponentByClass_ReturnValue) == 0x001F78, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_AddComponentByClass_ReturnValue) == 0x001F80, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue45) == 0x001F88, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue45' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetTransform_ReturnValue) == 0x001F90, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue127) == 0x001FC0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue127' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetTransform_ReturnValue1) == 0x001FD0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue22) == 0x002000, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue22' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NotifyName1) == 0x002008, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NotifyName1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x002010, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_FinishSpawningActor_ReturnValue) == 0x002018, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValidClass_ReturnValue) == 0x002020, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValidClass_ReturnValue1) == 0x002021, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValidClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1) == 0x002028, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_FinishSpawningActor_ReturnValue1) == 0x002030, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_FinishSpawningActor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue46) == 0x002038, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue46' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsLocalPlayerController_ReturnValue) == 0x002039, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate34) == 0x002040, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate34' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NotifyName2) == 0x002050, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NotifyName2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Damage) == 0x002058, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_LongPressInteract1) == 0x002060, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_LongPressInteract1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_LongPressInteract) == 0x002068, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_LongPressInteract' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_ReadySkill) == 0x002070, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_ReadySkill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_InactivatedSkill) == 0x002078, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_InactivatedSkill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_ActivatedSkill) == 0x002080, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_ActivatedSkill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue47) == 0x002088, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue47' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsPlayerController_ReturnValue11) == 0x002089, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsPlayerController_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue128) == 0x00208A, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue128' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsLocalPlayerController_ReturnValue1) == 0x00208B, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsLocalPlayerController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_HasLocalSharedController_ReturnValue33) == 0x00208C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_HasLocalSharedController_ReturnValue33' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetController_ReturnValue1) == 0x002090, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue48) == 0x002098, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue48' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_PrevState1) == 0x0020A0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_PrevState1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_FindStateFromPlayerController_ReturnValue) == 0x0020A8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_FindStateFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_FindStateFromPlayerController_FindResult) == 0x0020B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_FindStateFromPlayerController_FindResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetController_ReturnValue2) == 0x0020B8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller5) == 0x0020C0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess52) == 0x0020C8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess52' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetCurrentFlowState_FlowState1) == 0x0020D0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetCurrentFlowState_FlowState1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EqualEqual_GameplayTag_ReturnValue3) == 0x0020D8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EqualEqual_GameplayTag_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NextState) == 0x0020E0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NextState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_FindStateFromPlayerController_ReturnValue1) == 0x0020E8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_FindStateFromPlayerController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_FindStateFromPlayerController_FindResult1) == 0x0020F0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_FindStateFromPlayerController_FindResult1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Loop_Counter_Variable17) == 0x0020F4, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Loop_Counter_Variable17' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Less_IntInt_ReturnValue16) == 0x0020F8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Less_IntInt_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue24) == 0x0020FC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue24' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_MP) == 0x002100, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_MP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue3) == 0x002108, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsValid_ReturnValue49) == 0x002110, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsValid_ReturnValue49' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller6) == 0x002118, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess53) == 0x002120, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess53' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Not_PreBool_ReturnValue129) == 0x002121, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Not_PreBool_ReturnValue129' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate35) == 0x002128, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate35' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBGameInstance_bSuccess10) == 0x002138, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBGameInstance_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetAJBGameInstance_AJB_Game_Instance10) == 0x002140, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetAJBGameInstance_AJB_Game_Instance10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsPlayingReplay_ReturnValue6) == 0x002148, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsPlayingReplay_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetWorldDeltaSeconds_ReturnValue8) == 0x00214C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetWorldDeltaSeconds_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Multiply_FloatFloat_ReturnValue8) == 0x002150, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Multiply_FloatFloat_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_FloatFloat_ReturnValue13) == 0x002154, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_FloatFloat_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NotifyName3) == 0x002158, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NotifyName3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_K2_GetActorLocation_ReturnValue6) == 0x002160, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_K2_GetActorLocation_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_PrevState) == 0x002170, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_PrevState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_RequestParticleEffectOnLocal_ParticleEffect2) == 0x002178, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_RequestParticleEffectOnLocal_ParticleEffect2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_FindStateFromPlayerController_ReturnValue2) == 0x002180, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_FindStateFromPlayerController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_FindStateFromPlayerController_FindResult2) == 0x002188, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_FindStateFromPlayerController_FindResult2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Array_Index_Variable18) == 0x00218C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Array_Index_Variable18' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Get_Item17) == 0x002190, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Get_Item17' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_AsBI_the_World_Interface2) == 0x002198, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_AsBI_the_World_Interface2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_DynamicCast_bSuccess54) == 0x0021A8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_DynamicCast_bSuccess54' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NotifyName4) == 0x0021B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NotifyName4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate36) == 0x0021B8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate36' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_name_Variable3) == 0x0021C8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_name_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate37) == 0x0021D0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate37' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_int_Loop_Counter_Variable18) == 0x0021E0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_int_Loop_Counter_Variable18' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetTagName_ReturnValue) == 0x0021E8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Less_IntInt_ReturnValue17) == 0x0021F0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Less_IntInt_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Conv_NameToString_ReturnValue) == 0x0021F8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Split_LeftS) == 0x002208, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Split_RightS) == 0x002218, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Split_ReturnValue) == 0x002228, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_IntInt_ReturnValue25) == 0x00222C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_IntInt_ReturnValue25' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsDedicatedServer_ReturnValue13) == 0x002230, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsDedicatedServer_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NotifyName5) == 0x002238, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NotifyName5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_IsDedicatedServer_ReturnValue14) == 0x002240, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_IsDedicatedServer_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate38) == 0x002248, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate38' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NotifyName6) == 0x002258, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NotifyName6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetObjectName_ReturnValue) == 0x002260, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Split_LeftS1) == 0x002270, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Split_LeftS1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Split_RightS1) == 0x002280, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Split_RightS1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Split_ReturnValue1) == 0x002290, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Split_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetSubstring_ReturnValue) == 0x002298, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_TryGetPlayerCustomData_OutCharacterId) == 0x0022A8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_TryGetPlayerCustomData_OutCharacterId' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_TryGetPlayerCustomData_Out) == 0x0022B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_TryGetPlayerCustomData_Out' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_TryGetPlayerCustomData_ReturnValue) == 0x0022D0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_TryGetPlayerCustomData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Get_Item18) == 0x0022D8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Get_Item18' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Select17_Default) == 0x0022E0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Select17_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Concat_StrStr_ReturnValue6) == 0x0022F0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Concat_StrStr_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_IsValidIndex_ReturnValue) == 0x002300, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Conv_IntToString_ReturnValue4) == 0x002308, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Conv_IntToString_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Conv_ByteToString_ReturnValue) == 0x002318, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Conv_ByteToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Concat_StrStr_ReturnValue7) == 0x002328, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Concat_StrStr_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetSubstring_ReturnValue1) == 0x002338, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetSubstring_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetSubstring_ReturnValue2) == 0x002348, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetSubstring_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Conv_StringToName_ReturnValue) == 0x002358, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Concat_StrStr_ReturnValue8) == 0x002360, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Concat_StrStr_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetDataTableRowFromName_OutRow) == 0x002370, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0023A8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Concat_StrStr_ReturnValue9) == 0x0023B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Concat_StrStr_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Concat_StrStr_ReturnValue10) == 0x0023C0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Concat_StrStr_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Concat_StrStr_ReturnValue11) == 0x0023D0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Concat_StrStr_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Get_Item19) == 0x0023E0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Get_Item19' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Length_ReturnValue18) == 0x002408, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Length_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00240C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Conv_StringToName_ReturnValue1) == 0x002410, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Conv_StringToName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetDataTableRowFromName_OutRow1) == 0x002418, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetDataTableRowFromName_OutRow1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetDataTableRowFromName_ReturnValue1) == 0x002450, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetDataTableRowFromName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate39) == 0x002458, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate39' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_Has_Been_Initd_Variable7) == 0x002468, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_Has_Been_Initd_Variable7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Get_Item20) == 0x002470, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Get_Item20' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Length_ReturnValue19) == 0x002498, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Length_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x00249C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0024A0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Get_Item21) == 0x0024B0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Get_Item21' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Array_Length_ReturnValue20) == 0x0024B8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Array_Length_ReturnValue20' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetDataTableRowFromName_OutRow2) == 0x0024C0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetDataTableRowFromName_OutRow2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_GetDataTableRowFromName_ReturnValue2) == 0x0025A0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_GetDataTableRowFromName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Less_IntInt_ReturnValue18) == 0x0025A1, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Less_IntInt_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BooleanAND_ReturnValue23) == 0x0025A2, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BooleanAND_ReturnValue23' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_EqualEqual_IntInt_ReturnValue2) == 0x0025A3, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_EqualEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate40) == 0x0025A8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate40' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, Temp_bool_IsClosed_Variable7) == 0x0025B8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::Temp_bool_IsClosed_Variable7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Multiply_FloatFloat_ReturnValue9) == 0x0025BC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Multiply_FloatFloat_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Multiply_VectorFloat_ReturnValue3) == 0x0025C0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Multiply_VectorFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_Add_VectorVector_ReturnValue3) == 0x0025CC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_Add_VectorVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x0025D8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x002660, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate41) == 0x002668, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate41' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_bBlockingHit1) == 0x002678, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_bBlockingHit1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_bInitialOverlap1) == 0x002679, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_bInitialOverlap1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_Time1) == 0x00267C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_Time1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_Distance1) == 0x002680, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_Distance1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_Location1) == 0x002684, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_ImpactPoint1) == 0x002690, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_ImpactPoint1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_Normal1) == 0x00269C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_Normal1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_ImpactNormal1) == 0x0026A8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_ImpactNormal1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_PhysMat1) == 0x0026B8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_PhysMat1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_HitActor1) == 0x0026C0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_HitActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_HitComponent1) == 0x0026C8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_HitComponent1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_HitBoneName1) == 0x0026D0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_HitBoneName1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_HitItem1) == 0x0026D8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_HitItem1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_FaceIndex1) == 0x0026DC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_FaceIndex1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_TraceStart1) == 0x0026E0, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_TraceStart1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakHitResult_TraceEnd1) == 0x0026EC, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakHitResult_TraceEnd1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_Select18_Default) == 0x0026F8, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_Select18_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MakeTransform_ReturnValue1) == 0x002710, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MakeTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CreateDelegate_OutputDelegate42) == 0x002740, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CreateDelegate_OutputDelegate42' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue2) == 0x002750, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_FinishSpawningActor_ReturnValue2) == 0x002758, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_FinishSpawningActor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakRotator_Roll2) == 0x002760, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakRotator_Roll2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakRotator_Pitch2) == 0x002764, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakRotator_Pitch2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_BreakRotator_Yaw2) == 0x002768, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_BreakRotator_Yaw2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_NotifyName7) == 0x002770, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_NotifyName7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bIsSidling1) == 0x002778, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bIsSidling1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Z__Yaw_1) == 0x00277C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Z__Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bIsDidlingForGunnerAnimation1) == 0x002780, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bIsDidlingForGunnerAnimation1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bIsSidling) == 0x002781, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bIsSidling' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_Z__Yaw_) == 0x002784, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_Z__Yaw_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, K2Node_CustomEvent_bIsDidlingForGunnerAnimation) == 0x002788, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::K2Node_CustomEvent_bIsDidlingForGunnerAnimation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter, CallFunc_MakeRotator_ReturnValue2) == 0x00278C, "Member 'BP_AJBInGameCharacter_C_ExecuteUbergraph_BP_AJBInGameCharacter::CallFunc_MakeRotator_ReturnValue2' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_SyncAnimationParams
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_SyncAnimationParams final
{
public:
	bool                                          bIsSidling_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Z__Yaw_;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDidlingForGunnerAnimation;                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_SyncAnimationParams) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_SyncAnimationParams");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_SyncAnimationParams) == 0x00000C, "Wrong size on BP_AJBInGameCharacter_C_ROS_SyncAnimationParams");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_SyncAnimationParams, bIsSidling_0) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_SyncAnimationParams::bIsSidling_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_SyncAnimationParams, Z__Yaw_) == 0x000004, "Member 'BP_AJBInGameCharacter_C_ROS_SyncAnimationParams::Z__Yaw_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_SyncAnimationParams, bIsDidlingForGunnerAnimation) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ROS_SyncAnimationParams::bIsDidlingForGunnerAnimation' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_SyncAnimationParams
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameCharacter_C_MC_SyncAnimationParams final
{
public:
	bool                                          bIsSidling_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Z__Yaw_;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDidlingForGunnerAnimation;                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_MC_SyncAnimationParams) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_MC_SyncAnimationParams");
static_assert(sizeof(BP_AJBInGameCharacter_C_MC_SyncAnimationParams) == 0x00000C, "Wrong size on BP_AJBInGameCharacter_C_MC_SyncAnimationParams");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_SyncAnimationParams, bIsSidling_0) == 0x000000, "Member 'BP_AJBInGameCharacter_C_MC_SyncAnimationParams::bIsSidling_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_SyncAnimationParams, Z__Yaw_) == 0x000004, "Member 'BP_AJBInGameCharacter_C_MC_SyncAnimationParams::Z__Yaw_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_SyncAnimationParams, bIsDidlingForGunnerAnimation) == 0x000008, "Member 'BP_AJBInGameCharacter_C_MC_SyncAnimationParams::bIsDidlingForGunnerAnimation' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnBegin_Gameplay
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnBegin_Gameplay final
{
public:
	struct FGameplayTag                           PrevState;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnBegin_Gameplay) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnBegin_Gameplay");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnBegin_Gameplay) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnBegin_Gameplay");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnBegin_Gameplay, PrevState) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnBegin_Gameplay::PrevState' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_ReplicateMP
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_ReplicateMP final
{
public:
	float                                         MP_0;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_ReplicateMP) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_ReplicateMP");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_ReplicateMP) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_ROS_ReplicateMP");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_ReplicateMP, MP_0) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_ReplicateMP::MP_0' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnStandbyEnded
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnStandbyEnded final
{
public:
	struct FGameplayTag                           NextState;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnStandbyEnded) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnStandbyEnded");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnStandbyEnded) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnStandbyEnded");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnStandbyEnded, NextState) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnStandbyEnded::NextState' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnBeginResult
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnBeginResult final
{
public:
	struct FGameplayTag                           PrevState;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnBeginResult) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnBeginResult");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnBeginResult) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnBeginResult");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnBeginResult, PrevState) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnBeginResult::PrevState' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SkillActivatedCalled
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_SkillActivatedCalled final
{
public:
	class UBP_AJBSkillBase_C*                     ActivatedSkill;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SkillActivatedCalled) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_SkillActivatedCalled");
static_assert(sizeof(BP_AJBInGameCharacter_C_SkillActivatedCalled) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_SkillActivatedCalled");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillActivatedCalled, ActivatedSkill) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SkillActivatedCalled::ActivatedSkill' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SkillInactivatedCalled
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_SkillInactivatedCalled final
{
public:
	class UBP_AJBSkillBase_C*                     InactivatedSkill;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SkillInactivatedCalled) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_SkillInactivatedCalled");
static_assert(sizeof(BP_AJBInGameCharacter_C_SkillInactivatedCalled) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_SkillInactivatedCalled");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillInactivatedCalled, InactivatedSkill) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SkillInactivatedCalled::InactivatedSkill' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SkillReadyCalled
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_SkillReadyCalled final
{
public:
	class UBP_AJBSkillBase_C*                     ReadySkill;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SkillReadyCalled) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_SkillReadyCalled");
static_assert(sizeof(BP_AJBInGameCharacter_C_SkillReadyCalled) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_SkillReadyCalled");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillReadyCalled, ReadySkill) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SkillReadyCalled::ReadySkill' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.LongPressSkillActivatedCalled
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_LongPressSkillActivatedCalled final
{
public:
	class UBP_AJBLongPressInteract_C*             LongPressInteract;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_LongPressSkillActivatedCalled) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_LongPressSkillActivatedCalled");
static_assert(sizeof(BP_AJBInGameCharacter_C_LongPressSkillActivatedCalled) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_LongPressSkillActivatedCalled");
static_assert(offsetof(BP_AJBInGameCharacter_C_LongPressSkillActivatedCalled, LongPressInteract) == 0x000000, "Member 'BP_AJBInGameCharacter_C_LongPressSkillActivatedCalled::LongPressInteract' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.LongPressSkillInactivatedCalled
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_LongPressSkillInactivatedCalled final
{
public:
	class UBP_AJBLongPressInteract_C*             LongPressInteract;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_LongPressSkillInactivatedCalled) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_LongPressSkillInactivatedCalled");
static_assert(sizeof(BP_AJBInGameCharacter_C_LongPressSkillInactivatedCalled) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_LongPressSkillInactivatedCalled");
static_assert(offsetof(BP_AJBInGameCharacter_C_LongPressSkillInactivatedCalled, LongPressInteract) == 0x000000, "Member 'BP_AJBInGameCharacter_C_LongPressSkillInactivatedCalled::LongPressInteract' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnAreaDamageCalled
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_OnAreaDamageCalled final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnAreaDamageCalled) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_OnAreaDamageCalled");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnAreaDamageCalled) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_OnAreaDamageCalled");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnAreaDamageCalled, Damage) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnAreaDamageCalled::Damage' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_SpawnSignalPin
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_C_ROC_SpawnSignalPin final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           PinTypeTag;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRemove;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWithSound;                                        // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROC_SpawnSignalPin) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ROC_SpawnSignalPin");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROC_SpawnSignalPin) == 0x000020, "Wrong size on BP_AJBInGameCharacter_C_ROC_SpawnSignalPin");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_SpawnSignalPin, Location) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROC_SpawnSignalPin::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_SpawnSignalPin, PinTypeTag) == 0x000010, "Member 'BP_AJBInGameCharacter_C_ROC_SpawnSignalPin::PinTypeTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_SpawnSignalPin, bIsRemove) == 0x000018, "Member 'BP_AJBInGameCharacter_C_ROC_SpawnSignalPin::bIsRemove' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_SpawnSignalPin, bWithSound) == 0x000019, "Member 'BP_AJBInGameCharacter_C_ROC_SpawnSignalPin::bWithSound' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_SpawnSignalPin
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_SpawnSignalPin final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           PinTypeTag;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRemove;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWithSound;                                        // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_SpawnSignalPin) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_SpawnSignalPin");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_SpawnSignalPin) == 0x000020, "Wrong size on BP_AJBInGameCharacter_C_ROS_SpawnSignalPin");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_SpawnSignalPin, Location) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_SpawnSignalPin::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_SpawnSignalPin, PinTypeTag) == 0x000010, "Member 'BP_AJBInGameCharacter_C_ROS_SpawnSignalPin::PinTypeTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_SpawnSignalPin, bIsRemove) == 0x000018, "Member 'BP_AJBInGameCharacter_C_ROS_SpawnSignalPin::bIsRemove' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_SpawnSignalPin, bWithSound) == 0x000019, "Member 'BP_AJBInGameCharacter_C_ROS_SpawnSignalPin::bWithSound' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.Request_SpawnSignalPin
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_C_Request_SpawnSignalPin final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           PinTypeTag;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRemove;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWithSound;                                        // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_Request_SpawnSignalPin) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_Request_SpawnSignalPin");
static_assert(sizeof(BP_AJBInGameCharacter_C_Request_SpawnSignalPin) == 0x000020, "Wrong size on BP_AJBInGameCharacter_C_Request_SpawnSignalPin");
static_assert(offsetof(BP_AJBInGameCharacter_C_Request_SpawnSignalPin, Location) == 0x000000, "Member 'BP_AJBInGameCharacter_C_Request_SpawnSignalPin::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Request_SpawnSignalPin, PinTypeTag) == 0x000010, "Member 'BP_AJBInGameCharacter_C_Request_SpawnSignalPin::PinTypeTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Request_SpawnSignalPin, bIsRemove) == 0x000018, "Member 'BP_AJBInGameCharacter_C_Request_SpawnSignalPin::bIsRemove' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Request_SpawnSignalPin, bWithSound) == 0x000019, "Member 'BP_AJBInGameCharacter_C_Request_SpawnSignalPin::bWithSound' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateFXVisibility
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_UpdateFXVisibility final
{
public:
	struct FST_FXVisibilityInfo                   PrevFXVisibility_0;                                // 0x0000(0x0002)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_UpdateFXVisibility) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_UpdateFXVisibility");
static_assert(sizeof(BP_AJBInGameCharacter_C_UpdateFXVisibility) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_UpdateFXVisibility");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateFXVisibility, PrevFXVisibility_0) == 0x000000, "Member 'BP_AJBInGameCharacter_C_UpdateFXVisibility::PrevFXVisibility_0' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_AddGravityStatusImmediate
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_MC_AddGravityStatusImmediate final
{
public:
	struct FGameplayTag                           GravityScaleTag;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         GravityScale;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_MC_AddGravityStatusImmediate) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_MC_AddGravityStatusImmediate");
static_assert(sizeof(BP_AJBInGameCharacter_C_MC_AddGravityStatusImmediate) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_MC_AddGravityStatusImmediate");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_AddGravityStatusImmediate, GravityScaleTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_MC_AddGravityStatusImmediate::GravityScaleTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_AddGravityStatusImmediate, GravityScale) == 0x000008, "Member 'BP_AJBInGameCharacter_C_MC_AddGravityStatusImmediate::GravityScale' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_AddGravityStatusImmediate
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_AddGravityStatusImmediate final
{
public:
	struct FGameplayTag                           GravityScaleTag;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         GravityScale;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_AddGravityStatusImmediate) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_AddGravityStatusImmediate");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_AddGravityStatusImmediate) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_ROS_AddGravityStatusImmediate");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_AddGravityStatusImmediate, GravityScaleTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_AddGravityStatusImmediate::GravityScaleTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_AddGravityStatusImmediate, GravityScale) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ROS_AddGravityStatusImmediate::GravityScale' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.AddGravityStatusImmediate_Local
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_AddGravityStatusImmediate_Local final
{
public:
	struct FGameplayTag                           GravityScaleTag;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         GravityScale;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_AddGravityStatusImmediate_Local) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_AddGravityStatusImmediate_Local");
static_assert(sizeof(BP_AJBInGameCharacter_C_AddGravityStatusImmediate_Local) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_AddGravityStatusImmediate_Local");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddGravityStatusImmediate_Local, GravityScaleTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_AddGravityStatusImmediate_Local::GravityScaleTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddGravityStatusImmediate_Local, GravityScale) == 0x000008, "Member 'BP_AJBInGameCharacter_C_AddGravityStatusImmediate_Local::GravityScale' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RemoveGravityStatusImmediateCore
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_RemoveGravityStatusImmediateCore final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_RemoveGravityStatusImmediateCore) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_RemoveGravityStatusImmediateCore");
static_assert(sizeof(BP_AJBInGameCharacter_C_RemoveGravityStatusImmediateCore) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_RemoveGravityStatusImmediateCore");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveGravityStatusImmediateCore, Tag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_RemoveGravityStatusImmediateCore::Tag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ReserveRemoveGravityStatusOnLandingCore
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_ReserveRemoveGravityStatusOnLandingCore final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ReserveRemoveGravityStatusOnLandingCore) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ReserveRemoveGravityStatusOnLandingCore");
static_assert(sizeof(BP_AJBInGameCharacter_C_ReserveRemoveGravityStatusOnLandingCore) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_ReserveRemoveGravityStatusOnLandingCore");
static_assert(offsetof(BP_AJBInGameCharacter_C_ReserveRemoveGravityStatusOnLandingCore, Tag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ReserveRemoveGravityStatusOnLandingCore::Tag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_RemoveGravityStatusImmediate
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_RemoveGravityStatusImmediate final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_RemoveGravityStatusImmediate) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_RemoveGravityStatusImmediate");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_RemoveGravityStatusImmediate) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_ROS_RemoveGravityStatusImmediate");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_RemoveGravityStatusImmediate, Tag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_RemoveGravityStatusImmediate::Tag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RemoveGravityStatusImmediate_Local
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_RemoveGravityStatusImmediate_Local final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_RemoveGravityStatusImmediate_Local) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_RemoveGravityStatusImmediate_Local");
static_assert(sizeof(BP_AJBInGameCharacter_C_RemoveGravityStatusImmediate_Local) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_RemoveGravityStatusImmediate_Local");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveGravityStatusImmediate_Local, Tag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_RemoveGravityStatusImmediate_Local::Tag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_ReserveRemoveGravityStatusOnLanding
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_ReserveRemoveGravityStatusOnLanding final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_ReserveRemoveGravityStatusOnLanding) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_ReserveRemoveGravityStatusOnLanding");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_ReserveRemoveGravityStatusOnLanding) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_ROS_ReserveRemoveGravityStatusOnLanding");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_ReserveRemoveGravityStatusOnLanding, Tag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_ReserveRemoveGravityStatusOnLanding::Tag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ReserveRemoveGravityStatusOnLanding_Local
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_ReserveRemoveGravityStatusOnLanding_Local final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ReserveRemoveGravityStatusOnLanding_Local) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ReserveRemoveGravityStatusOnLanding_Local");
static_assert(sizeof(BP_AJBInGameCharacter_C_ReserveRemoveGravityStatusOnLanding_Local) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_ReserveRemoveGravityStatusOnLanding_Local");
static_assert(offsetof(BP_AJBInGameCharacter_C_ReserveRemoveGravityStatusOnLanding_Local, Tag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ReserveRemoveGravityStatusOnLanding_Local::Tag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryToShareMatchingPlayerIndexWithStand
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_TryToShareMatchingPlayerIndexWithStand final
{
public:
	int32                                         MatchingPlayerIndex_0;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_TryToShareMatchingPlayerIndexWithStand) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_TryToShareMatchingPlayerIndexWithStand");
static_assert(sizeof(BP_AJBInGameCharacter_C_TryToShareMatchingPlayerIndexWithStand) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_TryToShareMatchingPlayerIndexWithStand");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryToShareMatchingPlayerIndexWithStand, MatchingPlayerIndex_0) == 0x000000, "Member 'BP_AJBInGameCharacter_C_TryToShareMatchingPlayerIndexWithStand::MatchingPlayerIndex_0' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_DebugChangeSuperJump
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_ROC_DebugChangeSuperJump final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROC_DebugChangeSuperJump) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ROC_DebugChangeSuperJump");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROC_DebugChangeSuperJump) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_ROC_DebugChangeSuperJump");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_DebugChangeSuperJump, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROC_DebugChangeSuperJump::bEnable' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_DebugChangeSuperJump
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_DebugChangeSuperJump final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_DebugChangeSuperJump) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_DebugChangeSuperJump");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_DebugChangeSuperJump) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_ROS_DebugChangeSuperJump");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_DebugChangeSuperJump, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_DebugChangeSuperJump::bEnable' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_DebugChangeCollisionEnable
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_DebugChangeCollisionEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_DebugChangeCollisionEnable) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_DebugChangeCollisionEnable");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_DebugChangeCollisionEnable) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_ROS_DebugChangeCollisionEnable");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_DebugChangeCollisionEnable, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_DebugChangeCollisionEnable::bEnable' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeRelatedMeshStencilValueByDigit
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeRelatedMeshStencilValueByDigit final
{
public:
	E_StencilDigit                                DigitToChange;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFlag;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAlsoChangeRelatedActors;                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeRelatedMeshStencilValueByDigit) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeRelatedMeshStencilValueByDigit");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeRelatedMeshStencilValueByDigit) == 0x000003, "Wrong size on BP_AJBInGameCharacter_C_ChangeRelatedMeshStencilValueByDigit");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeRelatedMeshStencilValueByDigit, DigitToChange) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeRelatedMeshStencilValueByDigit::DigitToChange' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeRelatedMeshStencilValueByDigit, bFlag) == 0x000001, "Member 'BP_AJBInGameCharacter_C_ChangeRelatedMeshStencilValueByDigit::bFlag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeRelatedMeshStencilValueByDigit, bAlsoChangeRelatedActors) == 0x000002, "Member 'BP_AJBInGameCharacter_C_ChangeRelatedMeshStencilValueByDigit::bAlsoChangeRelatedActors' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CleanUp
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_CleanUp final
{
public:
	bool                                          bShouldDestroy;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CleanUp) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CleanUp");
static_assert(sizeof(BP_AJBInGameCharacter_C_CleanUp) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_CleanUp");
static_assert(offsetof(BP_AJBInGameCharacter_C_CleanUp, bShouldDestroy) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CleanUp::bShouldDestroy' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_DebugChangeSkillAnimation
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_MC_DebugChangeSkillAnimation final
{
public:
	bool                                          bDebugSkillAnimation_0;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_MC_DebugChangeSkillAnimation) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_MC_DebugChangeSkillAnimation");
static_assert(sizeof(BP_AJBInGameCharacter_C_MC_DebugChangeSkillAnimation) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_MC_DebugChangeSkillAnimation");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_DebugChangeSkillAnimation, bDebugSkillAnimation_0) == 0x000000, "Member 'BP_AJBInGameCharacter_C_MC_DebugChangeSkillAnimation::bDebugSkillAnimation_0' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_DebugChangeSkillAnimation
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_DebugChangeSkillAnimation final
{
public:
	bool                                          bDebugSkillAnimation_0;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_DebugChangeSkillAnimation) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_DebugChangeSkillAnimation");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_DebugChangeSkillAnimation) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_ROS_DebugChangeSkillAnimation");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_DebugChangeSkillAnimation, bDebugSkillAnimation_0) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_DebugChangeSkillAnimation::bDebugSkillAnimation_0' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DebugChangeSkillAnimation_Local
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_DebugChangeSkillAnimation_Local final
{
public:
	bool                                          bSkillAnimation;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_DebugChangeSkillAnimation_Local) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_DebugChangeSkillAnimation_Local");
static_assert(sizeof(BP_AJBInGameCharacter_C_DebugChangeSkillAnimation_Local) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_DebugChangeSkillAnimation_Local");
static_assert(offsetof(BP_AJBInGameCharacter_C_DebugChangeSkillAnimation_Local, bSkillAnimation) == 0x000000, "Member 'BP_AJBInGameCharacter_C_DebugChangeSkillAnimation_Local::bSkillAnimation' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_EmoteWithoutPose
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_MC_EmoteWithoutPose final
{
public:
	int32                                         PositionNo;                                        // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_MC_EmoteWithoutPose) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_MC_EmoteWithoutPose");
static_assert(sizeof(BP_AJBInGameCharacter_C_MC_EmoteWithoutPose) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_MC_EmoteWithoutPose");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_EmoteWithoutPose, PositionNo) == 0x000000, "Member 'BP_AJBInGameCharacter_C_MC_EmoteWithoutPose::PositionNo' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_EmoteWithoutPose
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_EmoteWithoutPose final
{
public:
	int32                                         PositionNo;                                        // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_EmoteWithoutPose) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_EmoteWithoutPose");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_EmoteWithoutPose) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_ROS_EmoteWithoutPose");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_EmoteWithoutPose, PositionNo) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_EmoteWithoutPose::PositionNo' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryToPerformEmotePose
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_TryToPerformEmotePose final
{
public:
	int32                                         PositionNo;                                        // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_TryToPerformEmotePose) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_TryToPerformEmotePose");
static_assert(sizeof(BP_AJBInGameCharacter_C_TryToPerformEmotePose) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_TryToPerformEmotePose");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryToPerformEmotePose, PositionNo) == 0x000000, "Member 'BP_AJBInGameCharacter_C_TryToPerformEmotePose::PositionNo' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryToSpeakEmoteVoice
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_TryToSpeakEmoteVoice final
{
public:
	int32                                         PositionNo;                                        // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_TryToSpeakEmoteVoice) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_TryToSpeakEmoteVoice");
static_assert(sizeof(BP_AJBInGameCharacter_C_TryToSpeakEmoteVoice) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_TryToSpeakEmoteVoice");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryToSpeakEmoteVoice, PositionNo) == 0x000000, "Member 'BP_AJBInGameCharacter_C_TryToSpeakEmoteVoice::PositionNo' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RequestLandingEffect
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_RequestLandingEffect final
{
public:
	bool                                          bLandingStop;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WorldLocation;                                     // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_RequestLandingEffect) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_RequestLandingEffect");
static_assert(sizeof(BP_AJBInGameCharacter_C_RequestLandingEffect) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_RequestLandingEffect");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect, bLandingStop) == 0x000000, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect::bLandingStop' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect, WorldLocation) == 0x000004, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect::WorldLocation' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetLandingStopEnabled
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_SetLandingStopEnabled final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bResetRecording;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SetLandingStopEnabled) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_SetLandingStopEnabled");
static_assert(sizeof(BP_AJBInGameCharacter_C_SetLandingStopEnabled) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_SetLandingStopEnabled");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetLandingStopEnabled, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SetLandingStopEnabled::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetLandingStopEnabled, bResetRecording) == 0x000001, "Member 'BP_AJBInGameCharacter_C_SetLandingStopEnabled::bResetRecording' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_RequestLandingEffect
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_MC_RequestLandingEffect final
{
public:
	struct FGameplayTag                           EffectType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bLandingStop;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WorldLocation;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_MC_RequestLandingEffect) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_MC_RequestLandingEffect");
static_assert(sizeof(BP_AJBInGameCharacter_C_MC_RequestLandingEffect) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_MC_RequestLandingEffect");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_RequestLandingEffect, EffectType) == 0x000000, "Member 'BP_AJBInGameCharacter_C_MC_RequestLandingEffect::EffectType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_RequestLandingEffect, bLandingStop) == 0x000008, "Member 'BP_AJBInGameCharacter_C_MC_RequestLandingEffect::bLandingStop' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_RequestLandingEffect, WorldLocation) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_MC_RequestLandingEffect::WorldLocation' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_RequestLandingEffect
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_RequestLandingEffect final
{
public:
	struct FGameplayTag                           EffectType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bLandingStop;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WorldLocation;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_RequestLandingEffect) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_RequestLandingEffect");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_RequestLandingEffect) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_ROS_RequestLandingEffect");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_RequestLandingEffect, EffectType) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_RequestLandingEffect::EffectType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_RequestLandingEffect, bLandingStop) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ROS_RequestLandingEffect::bLandingStop' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_RequestLandingEffect, WorldLocation) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_ROS_RequestLandingEffect::WorldLocation' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_OnSkillEffectiveTimeDetermined
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_ROC_OnSkillEffectiveTimeDetermined final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         EffectiveTimeSec;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROC_OnSkillEffectiveTimeDetermined) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ROC_OnSkillEffectiveTimeDetermined");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROC_OnSkillEffectiveTimeDetermined) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_ROC_OnSkillEffectiveTimeDetermined");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_OnSkillEffectiveTimeDetermined, SkillTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROC_OnSkillEffectiveTimeDetermined::SkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_OnSkillEffectiveTimeDetermined, EffectiveTimeSec) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ROC_OnSkillEffectiveTimeDetermined::EffectiveTimeSec' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_OnSkillSucceeded
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_ROC_OnSkillSucceeded final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROC_OnSkillSucceeded) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ROC_OnSkillSucceeded");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROC_OnSkillSucceeded) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_ROC_OnSkillSucceeded");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_OnSkillSucceeded, SkillTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROC_OnSkillSucceeded::SkillTag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ReserveChangingNormalWalkingMode
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_ReserveChangingNormalWalkingMode final
{
public:
	struct FGameplayTag                           FactorTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         RemainingDurationSec;                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ReserveChangingNormalWalkingMode) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ReserveChangingNormalWalkingMode");
static_assert(sizeof(BP_AJBInGameCharacter_C_ReserveChangingNormalWalkingMode) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_ReserveChangingNormalWalkingMode");
static_assert(offsetof(BP_AJBInGameCharacter_C_ReserveChangingNormalWalkingMode, FactorTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ReserveChangingNormalWalkingMode::FactorTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ReserveChangingNormalWalkingMode, RemainingDurationSec) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ReserveChangingNormalWalkingMode::RemainingDurationSec' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeNormalWalkingMode
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeNormalWalkingMode final
{
public:
	struct FGameplayTag                           FactorTag;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeNormalWalkingMode) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeNormalWalkingMode");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeNormalWalkingMode) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_ChangeNormalWalkingMode");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeNormalWalkingMode, FactorTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeNormalWalkingMode::FactorTag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeSidlingMode
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeSidlingMode final
{
public:
	struct FGameplayTag                           FactorTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         DurationSec;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeSidlingMode) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeSidlingMode");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeSidlingMode) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_ChangeSidlingMode");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSidlingMode, FactorTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeSidlingMode::FactorTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSidlingMode, DurationSec) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ChangeSidlingMode::DurationSec' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnSkillEffectStarted
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_OnSkillEffectStarted final
{
public:
	int32                                         SerialNumber;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnSkillEffectStarted) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_OnSkillEffectStarted");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnSkillEffectStarted) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_OnSkillEffectStarted");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnSkillEffectStarted, SerialNumber) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnSkillEffectStarted::SerialNumber' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.Request_StickedMarker
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_Request_StickedMarker final
{
public:
	struct FVector2D                              NormalizedPosition;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PinTypeTag;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_Request_StickedMarker) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_Request_StickedMarker");
static_assert(sizeof(BP_AJBInGameCharacter_C_Request_StickedMarker) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_Request_StickedMarker");
static_assert(offsetof(BP_AJBInGameCharacter_C_Request_StickedMarker, NormalizedPosition) == 0x000000, "Member 'BP_AJBInGameCharacter_C_Request_StickedMarker::NormalizedPosition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Request_StickedMarker, PinTypeTag) == 0x000008, "Member 'BP_AJBInGameCharacter_C_Request_StickedMarker::PinTypeTag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_StickedPairMarker
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_ROC_StickedPairMarker final
{
public:
	struct FVector2D                              NormalizedPosition;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PinTypeTag;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROC_StickedPairMarker) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ROC_StickedPairMarker");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROC_StickedPairMarker) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_ROC_StickedPairMarker");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_StickedPairMarker, NormalizedPosition) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROC_StickedPairMarker::NormalizedPosition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_StickedPairMarker, PinTypeTag) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ROC_StickedPairMarker::PinTypeTag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_StickedMarker
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_StickedMarker final
{
public:
	struct FVector2D                              NormalizedPosition;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PinTypeTag;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_StickedMarker) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_StickedMarker");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_StickedMarker) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_ROS_StickedMarker");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_StickedMarker, NormalizedPosition) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_StickedMarker::NormalizedPosition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_StickedMarker, PinTypeTag) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ROS_StickedMarker::PinTypeTag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetMPMax_Local
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_SetMPMax_Local final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SetMPMax_Local) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_SetMPMax_Local");
static_assert(sizeof(BP_AJBInGameCharacter_C_SetMPMax_Local) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_SetMPMax_Local");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetMPMax_Local, NewValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SetMPMax_Local::NewValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.AddPairFollowerUI
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_C_AddPairFollowerUI final
{
public:
	class UWB_UI_FollowPairInfo_C*                PairInfoWidget;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   PairName;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_AJBInGameCharacter_C_AddPairFollowerUI) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_AddPairFollowerUI");
static_assert(sizeof(BP_AJBInGameCharacter_C_AddPairFollowerUI) == 0x000020, "Wrong size on BP_AJBInGameCharacter_C_AddPairFollowerUI");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddPairFollowerUI, PairInfoWidget) == 0x000000, "Member 'BP_AJBInGameCharacter_C_AddPairFollowerUI::PairInfoWidget' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddPairFollowerUI, PairName) == 0x000008, "Member 'BP_AJBInGameCharacter_C_AddPairFollowerUI::PairName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IncreaseMPMax_Local
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_IncreaseMPMax_Local final
{
public:
	float                                         IncreaseValue;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IncreaseMPMax_Local) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_IncreaseMPMax_Local");
static_assert(sizeof(BP_AJBInGameCharacter_C_IncreaseMPMax_Local) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_IncreaseMPMax_Local");
static_assert(offsetof(BP_AJBInGameCharacter_C_IncreaseMPMax_Local, IncreaseValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IncreaseMPMax_Local::IncreaseValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_UpdateMPMax
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_UpdateMPMax final
{
public:
	float                                         NewMPMax;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_UpdateMPMax) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_UpdateMPMax");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_UpdateMPMax) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_ROS_UpdateMPMax");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_UpdateMPMax, NewMPMax) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_UpdateMPMax::NewMPMax' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_BreakWindowOnAttack
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_MC_BreakWindowOnAttack final
{
public:
	class ABP_AJBInGameWindow_C*                  Window;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_MC_BreakWindowOnAttack) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_MC_BreakWindowOnAttack");
static_assert(sizeof(BP_AJBInGameCharacter_C_MC_BreakWindowOnAttack) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_MC_BreakWindowOnAttack");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_BreakWindowOnAttack, Window) == 0x000000, "Member 'BP_AJBInGameCharacter_C_MC_BreakWindowOnAttack::Window' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_OnDamageActorBlocked_OnServer
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameCharacter_C_MC_OnDamageActorBlocked_OnServer final
{
public:
	class AActor*                                 BlockedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPairAttack;                                     // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DamageOwner;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSeparateStandAttack;                              // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_MC_OnDamageActorBlocked_OnServer) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_MC_OnDamageActorBlocked_OnServer");
static_assert(sizeof(BP_AJBInGameCharacter_C_MC_OnDamageActorBlocked_OnServer) == 0x000028, "Wrong size on BP_AJBInGameCharacter_C_MC_OnDamageActorBlocked_OnServer");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_OnDamageActorBlocked_OnServer, BlockedActor) == 0x000000, "Member 'BP_AJBInGameCharacter_C_MC_OnDamageActorBlocked_OnServer::BlockedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_OnDamageActorBlocked_OnServer, HitLocation) == 0x000008, "Member 'BP_AJBInGameCharacter_C_MC_OnDamageActorBlocked_OnServer::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_OnDamageActorBlocked_OnServer, bIsPairAttack) == 0x000014, "Member 'BP_AJBInGameCharacter_C_MC_OnDamageActorBlocked_OnServer::bIsPairAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_OnDamageActorBlocked_OnServer, DamageOwner) == 0x000018, "Member 'BP_AJBInGameCharacter_C_MC_OnDamageActorBlocked_OnServer::DamageOwner' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_OnDamageActorBlocked_OnServer, bSeparateStandAttack) == 0x000020, "Member 'BP_AJBInGameCharacter_C_MC_OnDamageActorBlocked_OnServer::bSeparateStandAttack' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_OnDamageActorBlocked_OnServer
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_OnDamageActorBlocked_OnServer final
{
public:
	class AActor*                                 BlockedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSeparateStandAttack;                              // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_OnDamageActorBlocked_OnServer) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_OnDamageActorBlocked_OnServer");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_OnDamageActorBlocked_OnServer) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_ROS_OnDamageActorBlocked_OnServer");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_OnDamageActorBlocked_OnServer, BlockedActor) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_OnDamageActorBlocked_OnServer::BlockedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_OnDamageActorBlocked_OnServer, HitLocation) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ROS_OnDamageActorBlocked_OnServer::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_OnDamageActorBlocked_OnServer, bSeparateStandAttack) == 0x000014, "Member 'BP_AJBInGameCharacter_C_ROS_OnDamageActorBlocked_OnServer::bSeparateStandAttack' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_OnGetItem
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_ROC_OnGetItem final
{
public:
	struct FGameplayTag                           ItemTag;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SETag;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROC_OnGetItem) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ROC_OnGetItem");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROC_OnGetItem) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_ROC_OnGetItem");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_OnGetItem, ItemTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROC_OnGetItem::ItemTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_OnGetItem, SETag) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ROC_OnGetItem::SETag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RestoreCameraRotation
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameCharacter_C_RestoreCameraRotation final
{
public:
	struct FRotator                               NewRotation;                                       // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_RestoreCameraRotation) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_RestoreCameraRotation");
static_assert(sizeof(BP_AJBInGameCharacter_C_RestoreCameraRotation) == 0x00000C, "Wrong size on BP_AJBInGameCharacter_C_RestoreCameraRotation");
static_assert(offsetof(BP_AJBInGameCharacter_C_RestoreCameraRotation, NewRotation) == 0x000000, "Member 'BP_AJBInGameCharacter_C_RestoreCameraRotation::NewRotation' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_SetCameraRotation
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_SetCameraRotation final
{
public:
	struct FRotator                               NewRotation;                                       // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_SetCameraRotation) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_SetCameraRotation");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_SetCameraRotation) == 0x00000C, "Wrong size on BP_AJBInGameCharacter_C_ROS_SetCameraRotation");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_SetCameraRotation, NewRotation) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_SetCameraRotation::NewRotation' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SaveCameraRotation
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_SaveCameraRotation final
{
public:
	bool                                          bIgnorePitch;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SaveCameraRotation) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_SaveCameraRotation");
static_assert(sizeof(BP_AJBInGameCharacter_C_SaveCameraRotation) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_SaveCameraRotation");
static_assert(offsetof(BP_AJBInGameCharacter_C_SaveCameraRotation, bIgnorePitch) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SaveCameraRotation::bIgnorePitch' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_BreakWindowOnAttack
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_BreakWindowOnAttack final
{
public:
	class ABP_AJBInGameWindow_C*                  Window;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_BreakWindowOnAttack) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_BreakWindowOnAttack");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_BreakWindowOnAttack) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_ROS_BreakWindowOnAttack");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_BreakWindowOnAttack, Window) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_BreakWindowOnAttack::Window' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.PlayLandingStopMontage
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_PlayLandingStopMontage final
{
public:
	float                                         LandingStopTime_Sec_;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_PlayLandingStopMontage) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_PlayLandingStopMontage");
static_assert(sizeof(BP_AJBInGameCharacter_C_PlayLandingStopMontage) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_PlayLandingStopMontage");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayLandingStopMontage, LandingStopTime_Sec_) == 0x000000, "Member 'BP_AJBInGameCharacter_C_PlayLandingStopMontage::LandingStopTime_Sec_' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_PlayLandingStopMontage
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_MC_PlayLandingStopMontage final
{
public:
	float                                         LandingStopTime_Sec_;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_MC_PlayLandingStopMontage) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_MC_PlayLandingStopMontage");
static_assert(sizeof(BP_AJBInGameCharacter_C_MC_PlayLandingStopMontage) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_MC_PlayLandingStopMontage");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_PlayLandingStopMontage, LandingStopTime_Sec_) == 0x000000, "Member 'BP_AJBInGameCharacter_C_MC_PlayLandingStopMontage::LandingStopTime_Sec_' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_PlayLandingStopMontage
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_PlayLandingStopMontage final
{
public:
	float                                         LandingStopTime_Sec_;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_PlayLandingStopMontage) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_PlayLandingStopMontage");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_PlayLandingStopMontage) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_ROS_PlayLandingStopMontage");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_PlayLandingStopMontage, LandingStopTime_Sec_) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_PlayLandingStopMontage::LandingStopTime_Sec_' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_ActiveBehaviorChangedCalled
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_ActiveBehaviorChangedCalled final
{
public:
	struct FAJBCharacterActiveBehaviorInfo        BehaviorInfo;                                      // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_ActiveBehaviorChangedCalled) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_ActiveBehaviorChangedCalled");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_ActiveBehaviorChangedCalled) == 0x000028, "Wrong size on BP_AJBInGameCharacter_C_ROS_ActiveBehaviorChangedCalled");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_ActiveBehaviorChangedCalled, BehaviorInfo) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_ActiveBehaviorChangedCalled::BehaviorInfo' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ActiveBehaviorChangedCalled
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameCharacter_C_ActiveBehaviorChangedCalled final
{
public:
	struct FAJBCharacterActiveBehaviorInfo        BehaviorInfo;                                      // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ActiveBehaviorChangedCalled) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ActiveBehaviorChangedCalled");
static_assert(sizeof(BP_AJBInGameCharacter_C_ActiveBehaviorChangedCalled) == 0x000028, "Wrong size on BP_AJBInGameCharacter_C_ActiveBehaviorChangedCalled");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChangedCalled, BehaviorInfo) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChangedCalled::BehaviorInfo' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_GivePassiveSkill
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_GivePassiveSkill final
{
public:
	class UObject*                                HitTarget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Causer;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CauserType;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_GivePassiveSkill) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_GivePassiveSkill");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_GivePassiveSkill) == 0x000028, "Wrong size on BP_AJBInGameCharacter_C_ROS_GivePassiveSkill");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_GivePassiveSkill, HitTarget) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_GivePassiveSkill::HitTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_GivePassiveSkill, Tag) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ROS_GivePassiveSkill::Tag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_GivePassiveSkill, Causer) == 0x000010, "Member 'BP_AJBInGameCharacter_C_ROS_GivePassiveSkill::Causer' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_GivePassiveSkill, CauserType) == 0x000018, "Member 'BP_AJBInGameCharacter_C_ROS_GivePassiveSkill::CauserType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_GivePassiveSkill, SerialNumber) == 0x000020, "Member 'BP_AJBInGameCharacter_C_ROS_GivePassiveSkill::SerialNumber' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GivePassiveSkill
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_C_GivePassiveSkill final
{
public:
	class UObject*                                HitTarget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBInGameSkillComponent*               Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CauserType;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GivePassiveSkill) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_GivePassiveSkill");
static_assert(sizeof(BP_AJBInGameCharacter_C_GivePassiveSkill) == 0x000020, "Wrong size on BP_AJBInGameCharacter_C_GivePassiveSkill");
static_assert(offsetof(BP_AJBInGameCharacter_C_GivePassiveSkill, HitTarget) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GivePassiveSkill::HitTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GivePassiveSkill, Causer) == 0x000008, "Member 'BP_AJBInGameCharacter_C_GivePassiveSkill::Causer' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GivePassiveSkill, CauserType) == 0x000010, "Member 'BP_AJBInGameCharacter_C_GivePassiveSkill::CauserType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GivePassiveSkill, SerialNumber) == 0x000018, "Member 'BP_AJBInGameCharacter_C_GivePassiveSkill::SerialNumber' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.Emote
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_Emote final
{
public:
	int32                                         SetPositionNo;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_Emote) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_Emote");
static_assert(sizeof(BP_AJBInGameCharacter_C_Emote) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_Emote");
static_assert(offsetof(BP_AJBInGameCharacter_C_Emote, SetPositionNo) == 0x000000, "Member 'BP_AJBInGameCharacter_C_Emote::SetPositionNo' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.K2_OnEndViewTarget
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_K2_OnEndViewTarget final
{
public:
	class APlayerController*                      PC;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_K2_OnEndViewTarget) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_K2_OnEndViewTarget");
static_assert(sizeof(BP_AJBInGameCharacter_C_K2_OnEndViewTarget) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_K2_OnEndViewTarget");
static_assert(offsetof(BP_AJBInGameCharacter_C_K2_OnEndViewTarget, PC) == 0x000000, "Member 'BP_AJBInGameCharacter_C_K2_OnEndViewTarget::PC' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.K2_OnBecomeViewTarget
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_K2_OnBecomeViewTarget final
{
public:
	class APlayerController*                      PC;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_K2_OnBecomeViewTarget) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_K2_OnBecomeViewTarget");
static_assert(sizeof(BP_AJBInGameCharacter_C_K2_OnBecomeViewTarget) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_K2_OnBecomeViewTarget");
static_assert(offsetof(BP_AJBInGameCharacter_C_K2_OnBecomeViewTarget, PC) == 0x000000, "Member 'BP_AJBInGameCharacter_C_K2_OnBecomeViewTarget::PC' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ServerOnly_AddSpectatorController
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_ServerOnly_AddSpectatorController final
{
public:
	TArray<class ABP_AJBInGamePlayerController_C*> SpectatorControllers_0;                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ServerOnly_AddSpectatorController) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ServerOnly_AddSpectatorController");
static_assert(sizeof(BP_AJBInGameCharacter_C_ServerOnly_AddSpectatorController) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_ServerOnly_AddSpectatorController");
static_assert(offsetof(BP_AJBInGameCharacter_C_ServerOnly_AddSpectatorController, SpectatorControllers_0) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ServerOnly_AddSpectatorController::SpectatorControllers_0' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnChangeWalkingState
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_OnChangeWalkingState final
{
public:
	EWalkingState                                 NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnChangeWalkingState) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_OnChangeWalkingState");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnChangeWalkingState) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_OnChangeWalkingState");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnChangeWalkingState, NewState) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnChangeWalkingState::NewState' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_ChangeWalkingState
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_ChangeWalkingState final
{
public:
	EWalkingState                                 NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_ChangeWalkingState) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_ChangeWalkingState");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_ChangeWalkingState) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_ROS_ChangeWalkingState");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_ChangeWalkingState, NewState) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_ChangeWalkingState::NewState' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeWalkingState
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeWalkingState final
{
public:
	EWalkingState                                 NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeWalkingState) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeWalkingState");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeWalkingState) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_ChangeWalkingState");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeWalkingState, NewState) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeWalkingState::NewState' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_CheckGrowup
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_ROC_CheckGrowup final
{
public:
	int32                                         PrevSP;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentSP;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROC_CheckGrowup) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_ROC_CheckGrowup");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROC_CheckGrowup) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_ROC_CheckGrowup");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_CheckGrowup, PrevSP) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROC_CheckGrowup::PrevSP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_CheckGrowup, CurrentSP) == 0x000004, "Member 'BP_AJBInGameCharacter_C_ROC_CheckGrowup::CurrentSP' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnAreaDamage
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_OnAreaDamage final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnAreaDamage) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_OnAreaDamage");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnAreaDamage) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_OnAreaDamage");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnAreaDamage, Damage) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnAreaDamage::Damage' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_ReceiveTick");
static_assert(sizeof(BP_AJBInGameCharacter_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_ReceiveTick");
static_assert(offsetof(BP_AJBInGameCharacter_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.K2_OnEndCrouch
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_K2_OnEndCrouch final
{
public:
	float                                         HalfHeightAdjust;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaledHalfHeightAdjust;                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_K2_OnEndCrouch) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_K2_OnEndCrouch");
static_assert(sizeof(BP_AJBInGameCharacter_C_K2_OnEndCrouch) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_K2_OnEndCrouch");
static_assert(offsetof(BP_AJBInGameCharacter_C_K2_OnEndCrouch, HalfHeightAdjust) == 0x000000, "Member 'BP_AJBInGameCharacter_C_K2_OnEndCrouch::HalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_K2_OnEndCrouch, ScaledHalfHeightAdjust) == 0x000004, "Member 'BP_AJBInGameCharacter_C_K2_OnEndCrouch::ScaledHalfHeightAdjust' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.K2_OnStartCrouch
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_K2_OnStartCrouch final
{
public:
	float                                         HalfHeightAdjust;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaledHalfHeightAdjust;                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_K2_OnStartCrouch) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_K2_OnStartCrouch");
static_assert(sizeof(BP_AJBInGameCharacter_C_K2_OnStartCrouch) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_K2_OnStartCrouch");
static_assert(offsetof(BP_AJBInGameCharacter_C_K2_OnStartCrouch, HalfHeightAdjust) == 0x000000, "Member 'BP_AJBInGameCharacter_C_K2_OnStartCrouch::HalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_K2_OnStartCrouch, ScaledHalfHeightAdjust) == 0x000004, "Member 'BP_AJBInGameCharacter_C_K2_OnStartCrouch::ScaledHalfHeightAdjust' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.NotifyTheWorldToInputEventGraph
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_NotifyTheWorldToInputEventGraph final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_NotifyTheWorldToInputEventGraph) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_NotifyTheWorldToInputEventGraph");
static_assert(sizeof(BP_AJBInGameCharacter_C_NotifyTheWorldToInputEventGraph) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_NotifyTheWorldToInputEventGraph");
static_assert(offsetof(BP_AJBInGameCharacter_C_NotifyTheWorldToInputEventGraph, Operator) == 0x000000, "Member 'BP_AJBInGameCharacter_C_NotifyTheWorldToInputEventGraph::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_NotifyTheWorldToInputEventGraph, Time) == 0x000008, "Member 'BP_AJBInGameCharacter_C_NotifyTheWorldToInputEventGraph::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_NotifyTheWorldToInputEventGraph, Timing) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_NotifyTheWorldToInputEventGraph::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_NotifyTheWorldToInputEventGraph, bEnable) == 0x00000D, "Member 'BP_AJBInGameCharacter_C_NotifyTheWorldToInputEventGraph::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_NotifyTheWorldToInputEventGraph, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBInGameCharacter_C_NotifyTheWorldToInputEventGraph::bOperatorIsEmpty' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.LookupRate
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_LookupRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_LookupRate) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_LookupRate");
static_assert(sizeof(BP_AJBInGameCharacter_C_LookupRate) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_LookupRate");
static_assert(offsetof(BP_AJBInGameCharacter_C_LookupRate, Value) == 0x000000, "Member 'BP_AJBInGameCharacter_C_LookupRate::Value' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TurnRate
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_TurnRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_TurnRate) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_TurnRate");
static_assert(sizeof(BP_AJBInGameCharacter_C_TurnRate) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_TurnRate");
static_assert(offsetof(BP_AJBInGameCharacter_C_TurnRate, Value) == 0x000000, "Member 'BP_AJBInGameCharacter_C_TurnRate::Value' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MoveRight
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_MoveRight final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_MoveRight) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_MoveRight");
static_assert(sizeof(BP_AJBInGameCharacter_C_MoveRight) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_MoveRight");
static_assert(offsetof(BP_AJBInGameCharacter_C_MoveRight, Value) == 0x000000, "Member 'BP_AJBInGameCharacter_C_MoveRight::Value' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MoveForward
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_MoveForward final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_MoveForward) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_MoveForward");
static_assert(sizeof(BP_AJBInGameCharacter_C_MoveForward) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_MoveForward");
static_assert(offsetof(BP_AJBInGameCharacter_C_MoveForward, Value) == 0x000000, "Member 'BP_AJBInGameCharacter_C_MoveForward::Value' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnDebugMakePair
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnDebugMakePair final
{
public:
	class ABP_AJBInGameCharacter_C*               OtherCharacterBP;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnDebugMakePair) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnDebugMakePair");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnDebugMakePair) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnDebugMakePair");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnDebugMakePair, OtherCharacterBP) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnDebugMakePair::OtherCharacterBP' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_APHeal
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_APHeal final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_APHeal) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_APHeal");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_APHeal) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_ROS_APHeal");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_APHeal, Value) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_APHeal::Value' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_PrintString
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameCharacter_C_ROC_PrintString final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bPrintToScreen;                                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPrintToLog;                                       // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x0014(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROC_PrintString) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ROC_PrintString");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROC_PrintString) == 0x000028, "Wrong size on BP_AJBInGameCharacter_C_ROC_PrintString");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_PrintString, InString) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROC_PrintString::InString' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_PrintString, bPrintToScreen) == 0x000010, "Member 'BP_AJBInGameCharacter_C_ROC_PrintString::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_PrintString, bPrintToLog) == 0x000011, "Member 'BP_AJBInGameCharacter_C_ROC_PrintString::bPrintToLog' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_PrintString, TextColor) == 0x000014, "Member 'BP_AJBInGameCharacter_C_ROC_PrintString::TextColor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_PrintString, Duration) == 0x000024, "Member 'BP_AJBInGameCharacter_C_ROC_PrintString::Duration' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DebugChangeInfinityRevive
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_DebugChangeInfinityRevive final
{
public:
	bool                                          bInfinityRevive;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_DebugChangeInfinityRevive) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_DebugChangeInfinityRevive");
static_assert(sizeof(BP_AJBInGameCharacter_C_DebugChangeInfinityRevive) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_DebugChangeInfinityRevive");
static_assert(offsetof(BP_AJBInGameCharacter_C_DebugChangeInfinityRevive, bInfinityRevive) == 0x000000, "Member 'BP_AJBInGameCharacter_C_DebugChangeInfinityRevive::bInfinityRevive' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_DebugChangeInfinityRevive
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_DebugChangeInfinityRevive final
{
public:
	bool                                          bInfinityRevive;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_DebugChangeInfinityRevive) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_DebugChangeInfinityRevive");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_DebugChangeInfinityRevive) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_ROS_DebugChangeInfinityRevive");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_DebugChangeInfinityRevive, bInfinityRevive) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_DebugChangeInfinityRevive::bInfinityRevive' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_DebugMakePair
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_DebugMakePair final
{
public:
	class ABP_AJBInGameCharacter_C*               OtherCharacterBP;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_DebugMakePair) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_DebugMakePair");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_DebugMakePair) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_ROS_DebugMakePair");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_DebugMakePair, OtherCharacterBP) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_DebugMakePair::OtherCharacterBP' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.Resurrection_Impl
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_Resurrection_Impl final
{
public:
	float                                         InvincibleTimeSec;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAPMax;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_Resurrection_Impl) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_Resurrection_Impl");
static_assert(sizeof(BP_AJBInGameCharacter_C_Resurrection_Impl) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_Resurrection_Impl");
static_assert(offsetof(BP_AJBInGameCharacter_C_Resurrection_Impl, InvincibleTimeSec) == 0x000000, "Member 'BP_AJBInGameCharacter_C_Resurrection_Impl::InvincibleTimeSec' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Resurrection_Impl, bAPMax) == 0x000004, "Member 'BP_AJBInGameCharacter_C_Resurrection_Impl::bAPMax' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ResurrectionFromServer
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_ResurrectionFromServer final
{
public:
	float                                         InvincibleTimeSec;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ResurrectionFromServer) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_ResurrectionFromServer");
static_assert(sizeof(BP_AJBInGameCharacter_C_ResurrectionFromServer) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_ResurrectionFromServer");
static_assert(offsetof(BP_AJBInGameCharacter_C_ResurrectionFromServer, InvincibleTimeSec) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ResurrectionFromServer::InvincibleTimeSec' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_Heal
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_Heal final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_Heal) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_Heal");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_Heal) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_ROS_Heal");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_Heal, Value) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_Heal::Value' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_CharacterRessurection
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_CharacterRessurection final
{
public:
	float                                         InvincibleTimeSec;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_CharacterRessurection) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_CharacterRessurection");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_CharacterRessurection) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_ROS_CharacterRessurection");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_CharacterRessurection, InvincibleTimeSec) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_CharacterRessurection::InvincibleTimeSec' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.Resurrection
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_Resurrection final
{
public:
	float                                         InvincibleTimeSec;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_Resurrection) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_Resurrection");
static_assert(sizeof(BP_AJBInGameCharacter_C_Resurrection) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_Resurrection");
static_assert(offsetof(BP_AJBInGameCharacter_C_Resurrection, InvincibleTimeSec) == 0x000000, "Member 'BP_AJBInGameCharacter_C_Resurrection::InvincibleTimeSec' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeMovementModeOnTimeStop
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeMovementModeOnTimeStop final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeMovementModeOnTimeStop) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeMovementModeOnTimeStop");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeMovementModeOnTimeStop) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_ChangeMovementModeOnTimeStop");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeMovementModeOnTimeStop, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeMovementModeOnTimeStop::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeMovementModeOnTimeStop, bOperatorIsEmpty) == 0x000001, "Member 'BP_AJBInGameCharacter_C_ChangeMovementModeOnTimeStop::bOperatorIsEmpty' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnNoDamageChanged
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_C_OnNoDamageChanged final
{
public:
	class ABP_AJBInGameCharacter_C*               OperaatorCharacter;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNewFlag;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           EffectTag;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SETag;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnNoDamageChanged) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnNoDamageChanged");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnNoDamageChanged) == 0x000020, "Wrong size on BP_AJBInGameCharacter_C_OnNoDamageChanged");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnNoDamageChanged, OperaatorCharacter) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnNoDamageChanged::OperaatorCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnNoDamageChanged, bNewFlag) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnNoDamageChanged::bNewFlag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnNoDamageChanged, EffectTag) == 0x000010, "Member 'BP_AJBInGameCharacter_C_OnNoDamageChanged::EffectTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnNoDamageChanged, SETag) == 0x000018, "Member 'BP_AJBInGameCharacter_C_OnNoDamageChanged::SETag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_CutDamage
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_ROC_CutDamage final
{
public:
	int32                                         CutDamage;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROC_CutDamage) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_ROC_CutDamage");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROC_CutDamage) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_ROC_CutDamage");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_CutDamage, CutDamage) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROC_CutDamage::CutDamage' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_GiveDamage
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameCharacter_C_ROC_GiveDamage final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DamageType;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageReceiver;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemainHP;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DamageIsCut;                                       // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SerialNumber;                                      // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DamageReceiverIsPlayer;                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWithSeparatedStandAttack;                         // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHitEnemysSeparateStand;                           // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROC_GiveDamage) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ROC_GiveDamage");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROC_GiveDamage) == 0x000028, "Wrong size on BP_AJBInGameCharacter_C_ROC_GiveDamage");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_GiveDamage, Damage) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROC_GiveDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_GiveDamage, DamageType) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ROC_GiveDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_GiveDamage, DamageReceiver) == 0x000010, "Member 'BP_AJBInGameCharacter_C_ROC_GiveDamage::DamageReceiver' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_GiveDamage, RemainHP) == 0x000018, "Member 'BP_AJBInGameCharacter_C_ROC_GiveDamage::RemainHP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_GiveDamage, DamageIsCut) == 0x000019, "Member 'BP_AJBInGameCharacter_C_ROC_GiveDamage::DamageIsCut' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_GiveDamage, SerialNumber) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_ROC_GiveDamage::SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_GiveDamage, DamageReceiverIsPlayer) == 0x000020, "Member 'BP_AJBInGameCharacter_C_ROC_GiveDamage::DamageReceiverIsPlayer' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_GiveDamage, bWithSeparatedStandAttack) == 0x000021, "Member 'BP_AJBInGameCharacter_C_ROC_GiveDamage::bWithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_GiveDamage, bHitEnemysSeparateStand) == 0x000022, "Member 'BP_AJBInGameCharacter_C_ROC_GiveDamage::bHitEnemysSeparateStand' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_ReceiveDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_C_ROC_ReceiveDamage final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DamageType;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemainHP;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDamageIsCutByStatus;                              // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDamageIsCutByAAP;                                 // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROC_ReceiveDamage) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ROC_ReceiveDamage");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROC_ReceiveDamage) == 0x000020, "Wrong size on BP_AJBInGameCharacter_C_ROC_ReceiveDamage");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_ReceiveDamage, Damage) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROC_ReceiveDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_ReceiveDamage, DamageType) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ROC_ReceiveDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_ReceiveDamage, DamageCauser) == 0x000010, "Member 'BP_AJBInGameCharacter_C_ROC_ReceiveDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_ReceiveDamage, RemainHP) == 0x000018, "Member 'BP_AJBInGameCharacter_C_ROC_ReceiveDamage::RemainHP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_ReceiveDamage, bDamageIsCutByStatus) == 0x000019, "Member 'BP_AJBInGameCharacter_C_ROC_ReceiveDamage::bDamageIsCutByStatus' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_ReceiveDamage, bDamageIsCutByAAP) == 0x00001A, "Member 'BP_AJBInGameCharacter_C_ROC_ReceiveDamage::bDamageIsCutByAAP' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.AddGameplayTagWithFloat
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_AddGameplayTagWithFloat final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         FloatValue;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_AddGameplayTagWithFloat) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_AddGameplayTagWithFloat");
static_assert(sizeof(BP_AJBInGameCharacter_C_AddGameplayTagWithFloat) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_AddGameplayTagWithFloat");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddGameplayTagWithFloat, Tag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_AddGameplayTagWithFloat::Tag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddGameplayTagWithFloat, FloatValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_AddGameplayTagWithFloat::FloatValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_AJBDamage
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameCharacter_C_MC_AJBDamage final
{
public:
	struct FGameplayTag                           DamageType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	EDamagePriority                               DamagePriority;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DamageCauser;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRemainHP;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDamageIsCut;                                      // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BeforeAAP;                                         // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AfterAAP;                                          // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_MC_AJBDamage) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_MC_AJBDamage");
static_assert(sizeof(BP_AJBInGameCharacter_C_MC_AJBDamage) == 0x000028, "Wrong size on BP_AJBInGameCharacter_C_MC_AJBDamage");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_AJBDamage, DamageType) == 0x000000, "Member 'BP_AJBInGameCharacter_C_MC_AJBDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_AJBDamage, DamagePriority) == 0x000008, "Member 'BP_AJBInGameCharacter_C_MC_AJBDamage::DamagePriority' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_AJBDamage, DamageCauser) == 0x000010, "Member 'BP_AJBInGameCharacter_C_MC_AJBDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_AJBDamage, bRemainHP) == 0x000018, "Member 'BP_AJBInGameCharacter_C_MC_AJBDamage::bRemainHP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_AJBDamage, bDamageIsCut) == 0x000019, "Member 'BP_AJBInGameCharacter_C_MC_AJBDamage::bDamageIsCut' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_AJBDamage, BeforeAAP) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_MC_AJBDamage::BeforeAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_AJBDamage, AfterAAP) == 0x000020, "Member 'BP_AJBInGameCharacter_C_MC_AJBDamage::AfterAAP' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.AJBDamage
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameCharacter_C_AJBDamage final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageForHPAP;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageForAAP;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CutDamage;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DamageType;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamagePriority                               DamagePriority;                                    // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AttackDistance;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DamageCauser;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithSeparatedStandAttack;                          // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HitEnemysSeparatedStand;                           // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPenetrateAP;                                      // 0x003A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bNotUseCollision;                                  // 0x003B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_AJBDamage) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_AJBDamage");
static_assert(sizeof(BP_AJBInGameCharacter_C_AJBDamage) == 0x000040, "Wrong size on BP_AJBInGameCharacter_C_AJBDamage");
static_assert(offsetof(BP_AJBInGameCharacter_C_AJBDamage, DamagedActor) == 0x000000, "Member 'BP_AJBInGameCharacter_C_AJBDamage::DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AJBDamage, DamageForHPAP) == 0x000008, "Member 'BP_AJBInGameCharacter_C_AJBDamage::DamageForHPAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AJBDamage, DamageForAAP) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_AJBDamage::DamageForAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AJBDamage, CutDamage) == 0x000010, "Member 'BP_AJBInGameCharacter_C_AJBDamage::CutDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AJBDamage, DamageType) == 0x000018, "Member 'BP_AJBInGameCharacter_C_AJBDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AJBDamage, SerialNumber) == 0x000020, "Member 'BP_AJBInGameCharacter_C_AJBDamage::SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AJBDamage, DamagePriority) == 0x000024, "Member 'BP_AJBInGameCharacter_C_AJBDamage::DamagePriority' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AJBDamage, AttackDistance) == 0x000028, "Member 'BP_AJBInGameCharacter_C_AJBDamage::AttackDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AJBDamage, DamageCauser) == 0x000030, "Member 'BP_AJBInGameCharacter_C_AJBDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AJBDamage, WithSeparatedStandAttack) == 0x000038, "Member 'BP_AJBInGameCharacter_C_AJBDamage::WithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AJBDamage, HitEnemysSeparatedStand) == 0x000039, "Member 'BP_AJBInGameCharacter_C_AJBDamage::HitEnemysSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AJBDamage, bPenetrateAP) == 0x00003A, "Member 'BP_AJBInGameCharacter_C_AJBDamage::bPenetrateAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AJBDamage, bNotUseCollision) == 0x00003B, "Member 'BP_AJBInGameCharacter_C_AJBDamage::bNotUseCollision' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnAreaOut
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_OnAreaOut final
{
public:
	class ABP_AJBInGameCharacter_C*               OperatorCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EffectTag;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SETag;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnAreaOut) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnAreaOut");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnAreaOut) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_OnAreaOut");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnAreaOut, OperatorCharacter) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnAreaOut::OperatorCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnAreaOut, EffectTag) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnAreaOut::EffectTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnAreaOut, SETag) == 0x000010, "Member 'BP_AJBInGameCharacter_C_OnAreaOut::SETag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnAreaIn
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_C_OnAreaIn final
{
public:
	class ABP_AJBInGameCharacter_C*               OperatorCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EffectTag;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SETag;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bNoDamage;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnAreaIn) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnAreaIn");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnAreaIn) == 0x000020, "Wrong size on BP_AJBInGameCharacter_C_OnAreaIn");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnAreaIn, OperatorCharacter) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnAreaIn::OperatorCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnAreaIn, EffectTag) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnAreaIn::EffectTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnAreaIn, SETag) == 0x000010, "Member 'BP_AJBInGameCharacter_C_OnAreaIn::SETag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnAreaIn, bNoDamage) == 0x000018, "Member 'BP_AJBInGameCharacter_C_OnAreaIn::bNoDamage' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBInGameCharacter_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBInGameCharacter_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBInGameCharacter_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBInGameCharacter_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBInGameCharacter_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBInGameCharacter_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RemoveGameplayTag
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_RemoveGameplayTag final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_RemoveGameplayTag) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_RemoveGameplayTag");
static_assert(sizeof(BP_AJBInGameCharacter_C_RemoveGameplayTag) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_RemoveGameplayTag");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveGameplayTag, Tag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_RemoveGameplayTag::Tag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.AddGameplayTag
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameCharacter_C_AddGameplayTag final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Operator;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Target;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CauserType;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_AddGameplayTag) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_AddGameplayTag");
static_assert(sizeof(BP_AJBInGameCharacter_C_AddGameplayTag) == 0x000028, "Wrong size on BP_AJBInGameCharacter_C_AddGameplayTag");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddGameplayTag, Tag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_AddGameplayTag::Tag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddGameplayTag, Operator) == 0x000008, "Member 'BP_AJBInGameCharacter_C_AddGameplayTag::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddGameplayTag, Target) == 0x000010, "Member 'BP_AJBInGameCharacter_C_AddGameplayTag::Target' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddGameplayTag, CauserType) == 0x000018, "Member 'BP_AJBInGameCharacter_C_AddGameplayTag::CauserType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddGameplayTag, SerialNumber) == 0x000020, "Member 'BP_AJBInGameCharacter_C_AddGameplayTag::SerialNumber' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.EmoteTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_EmoteTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_EmoteTick) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_EmoteTick");
static_assert(sizeof(BP_AJBInGameCharacter_C_EmoteTick) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_EmoteTick");
static_assert(offsetof(BP_AJBInGameCharacter_C_EmoteTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameCharacter_C_EmoteTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DefaultTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_DefaultTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_DefaultTick) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_DefaultTick");
static_assert(sizeof(BP_AJBInGameCharacter_C_DefaultTick) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_DefaultTick");
static_assert(offsetof(BP_AJBInGameCharacter_C_DefaultTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameCharacter_C_DefaultTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.StateTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_StateTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_StateTick) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_StateTick");
static_assert(sizeof(BP_AJBInGameCharacter_C_StateTick) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_StateTick");
static_assert(offsetof(BP_AJBInGameCharacter_C_StateTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameCharacter_C_StateTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_OnRevive
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_ROC_OnRevive final
{
public:
	class AActor*                                 Rescuer;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROC_OnRevive) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ROC_OnRevive");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROC_OnRevive) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_ROC_OnRevive");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_OnRevive, Rescuer) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROC_OnRevive::Rescuer' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterCriticalnessToActive
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_CharacterCriticalnessToActive final
{
public:
	class AActor*                                 Rescuer;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CharacterCriticalnessToActive) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CharacterCriticalnessToActive");
static_assert(sizeof(BP_AJBInGameCharacter_C_CharacterCriticalnessToActive) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_CharacterCriticalnessToActive");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterCriticalnessToActive, Rescuer) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CharacterCriticalnessToActive::Rescuer' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_OnDown
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_MC_OnDown final
{
public:
	int32                                         DownedMachingPlayerIndex;                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_MC_OnDown) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_MC_OnDown");
static_assert(sizeof(BP_AJBInGameCharacter_C_MC_OnDown) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_MC_OnDown");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_OnDown, DownedMachingPlayerIndex) == 0x000000, "Member 'BP_AJBInGameCharacter_C_MC_OnDown::DownedMachingPlayerIndex' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterActiveToCriticalness
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_C_CharacterActiveToCriticalness final
{
public:
	class AActor*                                 ReservedDamageCauser;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ReservedDamageType;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         Reserved_SerialNumber;                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Reserved_AttackDistance;                           // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Reserved_WithSeparatedStandAttack;                 // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Reserved_HitEnemyesSeparatedStand;                 // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Reserved_UltimateSkillSerialNumberIfInEffect;      // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CharacterActiveToCriticalness) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CharacterActiveToCriticalness");
static_assert(sizeof(BP_AJBInGameCharacter_C_CharacterActiveToCriticalness) == 0x000020, "Wrong size on BP_AJBInGameCharacter_C_CharacterActiveToCriticalness");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterActiveToCriticalness, ReservedDamageCauser) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CharacterActiveToCriticalness::ReservedDamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterActiveToCriticalness, ReservedDamageType) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CharacterActiveToCriticalness::ReservedDamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterActiveToCriticalness, Reserved_SerialNumber) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CharacterActiveToCriticalness::Reserved_SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterActiveToCriticalness, Reserved_AttackDistance) == 0x000014, "Member 'BP_AJBInGameCharacter_C_CharacterActiveToCriticalness::Reserved_AttackDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterActiveToCriticalness, Reserved_WithSeparatedStandAttack) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CharacterActiveToCriticalness::Reserved_WithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterActiveToCriticalness, Reserved_HitEnemyesSeparatedStand) == 0x000019, "Member 'BP_AJBInGameCharacter_C_CharacterActiveToCriticalness::Reserved_HitEnemyesSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterActiveToCriticalness, Reserved_UltimateSkillSerialNumberIfInEffect) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_CharacterActiveToCriticalness::Reserved_UltimateSkillSerialNumberIfInEffect' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterRessurection_OnServer
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_CharacterRessurection_OnServer final
{
public:
	float                                         InvincibleTimeSec;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CharacterRessurection_OnServer) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_CharacterRessurection_OnServer");
static_assert(sizeof(BP_AJBInGameCharacter_C_CharacterRessurection_OnServer) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_CharacterRessurection_OnServer");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterRessurection_OnServer, InvincibleTimeSec) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CharacterRessurection_OnServer::InvincibleTimeSec' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_OnKill_All
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameCharacter_C_MC_OnKill_All final
{
public:
	uint8                                         KillCount;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DeadPlayerID;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLastDefeated;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_MC_OnKill_All) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_MC_OnKill_All");
static_assert(sizeof(BP_AJBInGameCharacter_C_MC_OnKill_All) == 0x00000C, "Wrong size on BP_AJBInGameCharacter_C_MC_OnKill_All");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_OnKill_All, KillCount) == 0x000000, "Member 'BP_AJBInGameCharacter_C_MC_OnKill_All::KillCount' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_OnKill_All, DeadPlayerID) == 0x000004, "Member 'BP_AJBInGameCharacter_C_MC_OnKill_All::DeadPlayerID' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_OnKill_All, bIsLastDefeated) == 0x000008, "Member 'BP_AJBInGameCharacter_C_MC_OnKill_All::bIsLastDefeated' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterDead_OnState
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_CharacterDead_OnState final
{
public:
	struct FGameplayTag                           DamageType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CharacterDead_OnState) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CharacterDead_OnState");
static_assert(sizeof(BP_AJBInGameCharacter_C_CharacterDead_OnState) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_CharacterDead_OnState");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDead_OnState, DamageType) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CharacterDead_OnState::DamageType' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterDead_TheMoment
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_CharacterDead_TheMoment final
{
public:
	bool                                          bWasCriticalState;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CharacterDead_TheMoment) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CharacterDead_TheMoment");
static_assert(sizeof(BP_AJBInGameCharacter_C_CharacterDead_TheMoment) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_CharacterDead_TheMoment");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDead_TheMoment, bWasCriticalState) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CharacterDead_TheMoment::bWasCriticalState' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROS_LastKill
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_ROS_LastKill final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROS_LastKill) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ROS_LastKill");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROS_LastKill) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_ROS_LastKill");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROS_LastKill, SkillTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROS_LastKill::SkillTag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetBattleGameRankByPair(Server)
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_SetBattleGameRankByPair_Server_ final
{
public:
	int32                                         Rank;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RankWithoutCPU;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SetBattleGameRankByPair_Server_) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_SetBattleGameRankByPair_Server_");
static_assert(sizeof(BP_AJBInGameCharacter_C_SetBattleGameRankByPair_Server_) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_SetBattleGameRankByPair_Server_");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetBattleGameRankByPair_Server_, Rank) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SetBattleGameRankByPair_Server_::Rank' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetBattleGameRankByPair_Server_, RankWithoutCPU) == 0x000004, "Member 'BP_AJBInGameCharacter_C_SetBattleGameRankByPair_Server_::RankWithoutCPU' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_Die
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_ROC_Die final
{
public:
	bool                                          bIsLastDefeated;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDiedOfKillZ;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROC_Die) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ROC_Die");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROC_Die) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_ROC_Die");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_Die, bIsLastDefeated) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROC_Die::bIsLastDefeated' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_Die, bDiedOfKillZ) == 0x000001, "Member 'BP_AJBInGameCharacter_C_ROC_Die::bDiedOfKillZ' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ROC_Kill
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameCharacter_C_ROC_Kill final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackDistance;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         KilledCharacterId;                                 // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWithSeparatedStandAttack;                         // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHitEnemysSeparatedStand;                          // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFirstBlood;                                       // 0x0013(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         UltimateSkillSerialNumberIfInEffect;               // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedTime;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DeadPlayerID;                                      // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLastDefeated;                                   // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPlayerKill;                                       // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSpecialKill;                                      // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ROC_Kill) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ROC_Kill");
static_assert(sizeof(BP_AJBInGameCharacter_C_ROC_Kill) == 0x000028, "Wrong size on BP_AJBInGameCharacter_C_ROC_Kill");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_Kill, SkillTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ROC_Kill::SkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_Kill, SerialNumber) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ROC_Kill::SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_Kill, AttackDistance) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_ROC_Kill::AttackDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_Kill, KilledCharacterId) == 0x000010, "Member 'BP_AJBInGameCharacter_C_ROC_Kill::KilledCharacterId' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_Kill, bWithSeparatedStandAttack) == 0x000011, "Member 'BP_AJBInGameCharacter_C_ROC_Kill::bWithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_Kill, bHitEnemysSeparatedStand) == 0x000012, "Member 'BP_AJBInGameCharacter_C_ROC_Kill::bHitEnemysSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_Kill, bFirstBlood) == 0x000013, "Member 'BP_AJBInGameCharacter_C_ROC_Kill::bFirstBlood' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_Kill, UltimateSkillSerialNumberIfInEffect) == 0x000014, "Member 'BP_AJBInGameCharacter_C_ROC_Kill::UltimateSkillSerialNumberIfInEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_Kill, ElapsedTime) == 0x000018, "Member 'BP_AJBInGameCharacter_C_ROC_Kill::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_Kill, DeadPlayerID) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_ROC_Kill::DeadPlayerID' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_Kill, bIsLastDefeated) == 0x000020, "Member 'BP_AJBInGameCharacter_C_ROC_Kill::bIsLastDefeated' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_Kill, bPlayerKill) == 0x000021, "Member 'BP_AJBInGameCharacter_C_ROC_Kill::bPlayerKill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ROC_Kill, bSpecialKill) == 0x000022, "Member 'BP_AJBInGameCharacter_C_ROC_Kill::bSpecialKill' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MC_CharacterDead_Start
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_MC_CharacterDead_Start final
{
public:
	bool                                          bWasCriticalState;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DamageType;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_MC_CharacterDead_Start) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_MC_CharacterDead_Start");
static_assert(sizeof(BP_AJBInGameCharacter_C_MC_CharacterDead_Start) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_MC_CharacterDead_Start");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_CharacterDead_Start, bWasCriticalState) == 0x000000, "Member 'BP_AJBInGameCharacter_C_MC_CharacterDead_Start::bWasCriticalState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_MC_CharacterDead_Start, DamageType) == 0x000008, "Member 'BP_AJBInGameCharacter_C_MC_CharacterDead_Start::DamageType' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterDead(Server)
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameCharacter_C_CharacterDead_Server_ final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           DamageType;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackDistance;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         KilledCharacterId;                                 // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithSeparatedStandAttack;                          // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HitEnemysSeparatedStand;                           // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UltimateSkillSerialNumberIfInEffect;               // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasCriticalState;                                  // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DeadPlayerID;                                      // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CharacterDead_Server_) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CharacterDead_Server_");
static_assert(sizeof(BP_AJBInGameCharacter_C_CharacterDead_Server_) == 0x000028, "Wrong size on BP_AJBInGameCharacter_C_CharacterDead_Server_");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDead_Server_, DamageCauser) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CharacterDead_Server_::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDead_Server_, DamageType) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CharacterDead_Server_::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDead_Server_, SerialNumber) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CharacterDead_Server_::SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDead_Server_, AttackDistance) == 0x000014, "Member 'BP_AJBInGameCharacter_C_CharacterDead_Server_::AttackDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDead_Server_, KilledCharacterId) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CharacterDead_Server_::KilledCharacterId' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDead_Server_, WithSeparatedStandAttack) == 0x000019, "Member 'BP_AJBInGameCharacter_C_CharacterDead_Server_::WithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDead_Server_, HitEnemysSeparatedStand) == 0x00001A, "Member 'BP_AJBInGameCharacter_C_CharacterDead_Server_::HitEnemysSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDead_Server_, UltimateSkillSerialNumberIfInEffect) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_CharacterDead_Server_::UltimateSkillSerialNumberIfInEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDead_Server_, WasCriticalState) == 0x000020, "Member 'BP_AJBInGameCharacter_C_CharacterDead_Server_::WasCriticalState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDead_Server_, DeadPlayerID) == 0x000024, "Member 'BP_AJBInGameCharacter_C_CharacterDead_Server_::DeadPlayerID' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DamageOverlapped
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_C_DamageOverlapped final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPenetrating;                                      // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           FactorTag;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_DamageOverlapped) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_DamageOverlapped");
static_assert(sizeof(BP_AJBInGameCharacter_C_DamageOverlapped) == 0x000020, "Wrong size on BP_AJBInGameCharacter_C_DamageOverlapped");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageOverlapped, DamageCauser) == 0x000000, "Member 'BP_AJBInGameCharacter_C_DamageOverlapped::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageOverlapped, HitLocation) == 0x000008, "Member 'BP_AJBInGameCharacter_C_DamageOverlapped::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageOverlapped, bPenetrating) == 0x000014, "Member 'BP_AJBInGameCharacter_C_DamageOverlapped::bPenetrating' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageOverlapped, FactorTag) == 0x000018, "Member 'BP_AJBInGameCharacter_C_DamageOverlapped::FactorTag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnInteractionBlocked
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnInteractionBlocked final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnInteractionBlocked) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnInteractionBlocked");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnInteractionBlocked) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnInteractionBlocked");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnInteractionBlocked, InteractingActor) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnInteractionBlocked::InteractingActor' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnROSInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_OnROSInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ServerIsInteractingPlayer;                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnROSInteract) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnROSInteract");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnROSInteract) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_OnROSInteract");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnROSInteract, InteractingActor) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnROSInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnROSInteract, ServerIsInteractingPlayer) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnROSInteract::ServerIsInteractingPlayer' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnInteract final
{
public:
	class AActor*                                 InteractActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnInteract) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnInteract");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnInteract) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnInteract");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnInteract, InteractActor) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnInteract::InteractActor' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnCompleted_1D2006934D73B15E9387FCA5BFB6EE14
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_OnCompleted_1D2006934D73B15E9387FCA5BFB6EE14 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnCompleted_1D2006934D73B15E9387FCA5BFB6EE14) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnCompleted_1D2006934D73B15E9387FCA5BFB6EE14");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnCompleted_1D2006934D73B15E9387FCA5BFB6EE14) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnCompleted_1D2006934D73B15E9387FCA5BFB6EE14");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnCompleted_1D2006934D73B15E9387FCA5BFB6EE14, NotifyName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnCompleted_1D2006934D73B15E9387FCA5BFB6EE14::NotifyName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnBlendOut_1D2006934D73B15E9387FCA5BFB6EE14
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_OnBlendOut_1D2006934D73B15E9387FCA5BFB6EE14 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnBlendOut_1D2006934D73B15E9387FCA5BFB6EE14) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnBlendOut_1D2006934D73B15E9387FCA5BFB6EE14");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnBlendOut_1D2006934D73B15E9387FCA5BFB6EE14) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnBlendOut_1D2006934D73B15E9387FCA5BFB6EE14");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnBlendOut_1D2006934D73B15E9387FCA5BFB6EE14, NotifyName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnBlendOut_1D2006934D73B15E9387FCA5BFB6EE14::NotifyName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnInterrupted_1D2006934D73B15E9387FCA5BFB6EE14
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_OnInterrupted_1D2006934D73B15E9387FCA5BFB6EE14 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnInterrupted_1D2006934D73B15E9387FCA5BFB6EE14) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnInterrupted_1D2006934D73B15E9387FCA5BFB6EE14");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnInterrupted_1D2006934D73B15E9387FCA5BFB6EE14) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnInterrupted_1D2006934D73B15E9387FCA5BFB6EE14");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnInterrupted_1D2006934D73B15E9387FCA5BFB6EE14, NotifyName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnInterrupted_1D2006934D73B15E9387FCA5BFB6EE14::NotifyName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnNotifyBegin_1D2006934D73B15E9387FCA5BFB6EE14
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_OnNotifyBegin_1D2006934D73B15E9387FCA5BFB6EE14 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnNotifyBegin_1D2006934D73B15E9387FCA5BFB6EE14) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnNotifyBegin_1D2006934D73B15E9387FCA5BFB6EE14");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnNotifyBegin_1D2006934D73B15E9387FCA5BFB6EE14) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnNotifyBegin_1D2006934D73B15E9387FCA5BFB6EE14");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnNotifyBegin_1D2006934D73B15E9387FCA5BFB6EE14, NotifyName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnNotifyBegin_1D2006934D73B15E9387FCA5BFB6EE14::NotifyName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnNotifyEnd_1D2006934D73B15E9387FCA5BFB6EE14
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_OnNotifyEnd_1D2006934D73B15E9387FCA5BFB6EE14 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnNotifyEnd_1D2006934D73B15E9387FCA5BFB6EE14) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnNotifyEnd_1D2006934D73B15E9387FCA5BFB6EE14");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnNotifyEnd_1D2006934D73B15E9387FCA5BFB6EE14) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnNotifyEnd_1D2006934D73B15E9387FCA5BFB6EE14");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnNotifyEnd_1D2006934D73B15E9387FCA5BFB6EE14, NotifyName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnNotifyEnd_1D2006934D73B15E9387FCA5BFB6EE14::NotifyName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnCompleted_7329B9C84390F493C487659A2D910B3A
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_OnCompleted_7329B9C84390F493C487659A2D910B3A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnCompleted_7329B9C84390F493C487659A2D910B3A) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnCompleted_7329B9C84390F493C487659A2D910B3A");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnCompleted_7329B9C84390F493C487659A2D910B3A) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnCompleted_7329B9C84390F493C487659A2D910B3A");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnCompleted_7329B9C84390F493C487659A2D910B3A, NotifyName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnCompleted_7329B9C84390F493C487659A2D910B3A::NotifyName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnBlendOut_7329B9C84390F493C487659A2D910B3A
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_OnBlendOut_7329B9C84390F493C487659A2D910B3A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnBlendOut_7329B9C84390F493C487659A2D910B3A) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnBlendOut_7329B9C84390F493C487659A2D910B3A");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnBlendOut_7329B9C84390F493C487659A2D910B3A) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnBlendOut_7329B9C84390F493C487659A2D910B3A");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnBlendOut_7329B9C84390F493C487659A2D910B3A, NotifyName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnBlendOut_7329B9C84390F493C487659A2D910B3A::NotifyName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnInterrupted_7329B9C84390F493C487659A2D910B3A
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_OnInterrupted_7329B9C84390F493C487659A2D910B3A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnInterrupted_7329B9C84390F493C487659A2D910B3A) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnInterrupted_7329B9C84390F493C487659A2D910B3A");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnInterrupted_7329B9C84390F493C487659A2D910B3A) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnInterrupted_7329B9C84390F493C487659A2D910B3A");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnInterrupted_7329B9C84390F493C487659A2D910B3A, NotifyName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnInterrupted_7329B9C84390F493C487659A2D910B3A::NotifyName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnNotifyBegin_7329B9C84390F493C487659A2D910B3A
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_OnNotifyBegin_7329B9C84390F493C487659A2D910B3A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnNotifyBegin_7329B9C84390F493C487659A2D910B3A) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnNotifyBegin_7329B9C84390F493C487659A2D910B3A");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnNotifyBegin_7329B9C84390F493C487659A2D910B3A) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnNotifyBegin_7329B9C84390F493C487659A2D910B3A");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnNotifyBegin_7329B9C84390F493C487659A2D910B3A, NotifyName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnNotifyBegin_7329B9C84390F493C487659A2D910B3A::NotifyName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnNotifyEnd_7329B9C84390F493C487659A2D910B3A
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_OnNotifyEnd_7329B9C84390F493C487659A2D910B3A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnNotifyEnd_7329B9C84390F493C487659A2D910B3A) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnNotifyEnd_7329B9C84390F493C487659A2D910B3A");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnNotifyEnd_7329B9C84390F493C487659A2D910B3A) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnNotifyEnd_7329B9C84390F493C487659A2D910B3A");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnNotifyEnd_7329B9C84390F493C487659A2D910B3A, NotifyName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnNotifyEnd_7329B9C84390F493C487659A2D910B3A::NotifyName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnCompleted_2A9A5691450DFC31DE5258B519FF6217
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_OnCompleted_2A9A5691450DFC31DE5258B519FF6217 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnCompleted_2A9A5691450DFC31DE5258B519FF6217) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnCompleted_2A9A5691450DFC31DE5258B519FF6217");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnCompleted_2A9A5691450DFC31DE5258B519FF6217) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnCompleted_2A9A5691450DFC31DE5258B519FF6217");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnCompleted_2A9A5691450DFC31DE5258B519FF6217, NotifyName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnCompleted_2A9A5691450DFC31DE5258B519FF6217::NotifyName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnBlendOut_2A9A5691450DFC31DE5258B519FF6217
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_OnBlendOut_2A9A5691450DFC31DE5258B519FF6217 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnBlendOut_2A9A5691450DFC31DE5258B519FF6217) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnBlendOut_2A9A5691450DFC31DE5258B519FF6217");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnBlendOut_2A9A5691450DFC31DE5258B519FF6217) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnBlendOut_2A9A5691450DFC31DE5258B519FF6217");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnBlendOut_2A9A5691450DFC31DE5258B519FF6217, NotifyName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnBlendOut_2A9A5691450DFC31DE5258B519FF6217::NotifyName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnInterrupted_2A9A5691450DFC31DE5258B519FF6217
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_OnInterrupted_2A9A5691450DFC31DE5258B519FF6217 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnInterrupted_2A9A5691450DFC31DE5258B519FF6217) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnInterrupted_2A9A5691450DFC31DE5258B519FF6217");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnInterrupted_2A9A5691450DFC31DE5258B519FF6217) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnInterrupted_2A9A5691450DFC31DE5258B519FF6217");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnInterrupted_2A9A5691450DFC31DE5258B519FF6217, NotifyName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnInterrupted_2A9A5691450DFC31DE5258B519FF6217::NotifyName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnNotifyBegin_2A9A5691450DFC31DE5258B519FF6217
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_OnNotifyBegin_2A9A5691450DFC31DE5258B519FF6217 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnNotifyBegin_2A9A5691450DFC31DE5258B519FF6217) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnNotifyBegin_2A9A5691450DFC31DE5258B519FF6217");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnNotifyBegin_2A9A5691450DFC31DE5258B519FF6217) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnNotifyBegin_2A9A5691450DFC31DE5258B519FF6217");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnNotifyBegin_2A9A5691450DFC31DE5258B519FF6217, NotifyName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnNotifyBegin_2A9A5691450DFC31DE5258B519FF6217::NotifyName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnNotifyEnd_2A9A5691450DFC31DE5258B519FF6217
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_OnNotifyEnd_2A9A5691450DFC31DE5258B519FF6217 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnNotifyEnd_2A9A5691450DFC31DE5258B519FF6217) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnNotifyEnd_2A9A5691450DFC31DE5258B519FF6217");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnNotifyEnd_2A9A5691450DFC31DE5258B519FF6217) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnNotifyEnd_2A9A5691450DFC31DE5258B519FF6217");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnNotifyEnd_2A9A5691450DFC31DE5258B519FF6217, NotifyName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnNotifyEnd_2A9A5691450DFC31DE5258B519FF6217::NotifyName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnLoaded_F42AA0D940D51C3CD3F14D913272DE1D
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnLoaded_F42AA0D940D51C3CD3F14D913272DE1D final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnLoaded_F42AA0D940D51C3CD3F14D913272DE1D) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnLoaded_F42AA0D940D51C3CD3F14D913272DE1D");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnLoaded_F42AA0D940D51C3CD3F14D913272DE1D) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnLoaded_F42AA0D940D51C3CD3F14D913272DE1D");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnLoaded_F42AA0D940D51C3CD3F14D913272DE1D, Loaded) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnLoaded_F42AA0D940D51C3CD3F14D913272DE1D::Loaded' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnLoaded_9A53E0754B58E302E51B8792625D1F8A
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnLoaded_9A53E0754B58E302E51B8792625D1F8A final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnLoaded_9A53E0754B58E302E51B8792625D1F8A) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnLoaded_9A53E0754B58E302E51B8792625D1F8A");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnLoaded_9A53E0754B58E302E51B8792625D1F8A) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnLoaded_9A53E0754B58E302E51B8792625D1F8A");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnLoaded_9A53E0754B58E302E51B8792625D1F8A, Loaded) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnLoaded_9A53E0754B58E302E51B8792625D1F8A::Loaded' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnCompleted_0180EE26470F48C6FDC74BAC6CC6BFDB
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_OnCompleted_0180EE26470F48C6FDC74BAC6CC6BFDB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnCompleted_0180EE26470F48C6FDC74BAC6CC6BFDB) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnCompleted_0180EE26470F48C6FDC74BAC6CC6BFDB");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnCompleted_0180EE26470F48C6FDC74BAC6CC6BFDB) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnCompleted_0180EE26470F48C6FDC74BAC6CC6BFDB");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnCompleted_0180EE26470F48C6FDC74BAC6CC6BFDB, NotifyName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnCompleted_0180EE26470F48C6FDC74BAC6CC6BFDB::NotifyName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnBlendOut_0180EE26470F48C6FDC74BAC6CC6BFDB
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_OnBlendOut_0180EE26470F48C6FDC74BAC6CC6BFDB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnBlendOut_0180EE26470F48C6FDC74BAC6CC6BFDB) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnBlendOut_0180EE26470F48C6FDC74BAC6CC6BFDB");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnBlendOut_0180EE26470F48C6FDC74BAC6CC6BFDB) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnBlendOut_0180EE26470F48C6FDC74BAC6CC6BFDB");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnBlendOut_0180EE26470F48C6FDC74BAC6CC6BFDB, NotifyName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnBlendOut_0180EE26470F48C6FDC74BAC6CC6BFDB::NotifyName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnInterrupted_0180EE26470F48C6FDC74BAC6CC6BFDB
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_OnInterrupted_0180EE26470F48C6FDC74BAC6CC6BFDB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnInterrupted_0180EE26470F48C6FDC74BAC6CC6BFDB) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnInterrupted_0180EE26470F48C6FDC74BAC6CC6BFDB");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnInterrupted_0180EE26470F48C6FDC74BAC6CC6BFDB) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnInterrupted_0180EE26470F48C6FDC74BAC6CC6BFDB");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnInterrupted_0180EE26470F48C6FDC74BAC6CC6BFDB, NotifyName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnInterrupted_0180EE26470F48C6FDC74BAC6CC6BFDB::NotifyName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnNotifyBegin_0180EE26470F48C6FDC74BAC6CC6BFDB
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_OnNotifyBegin_0180EE26470F48C6FDC74BAC6CC6BFDB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnNotifyBegin_0180EE26470F48C6FDC74BAC6CC6BFDB) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnNotifyBegin_0180EE26470F48C6FDC74BAC6CC6BFDB");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnNotifyBegin_0180EE26470F48C6FDC74BAC6CC6BFDB) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnNotifyBegin_0180EE26470F48C6FDC74BAC6CC6BFDB");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnNotifyBegin_0180EE26470F48C6FDC74BAC6CC6BFDB, NotifyName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnNotifyBegin_0180EE26470F48C6FDC74BAC6CC6BFDB::NotifyName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnNotifyEnd_0180EE26470F48C6FDC74BAC6CC6BFDB
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_OnNotifyEnd_0180EE26470F48C6FDC74BAC6CC6BFDB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnNotifyEnd_0180EE26470F48C6FDC74BAC6CC6BFDB) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnNotifyEnd_0180EE26470F48C6FDC74BAC6CC6BFDB");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnNotifyEnd_0180EE26470F48C6FDC74BAC6CC6BFDB) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnNotifyEnd_0180EE26470F48C6FDC74BAC6CC6BFDB");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnNotifyEnd_0180EE26470F48C6FDC74BAC6CC6BFDB, NotifyName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnNotifyEnd_0180EE26470F48C6FDC74BAC6CC6BFDB::NotifyName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnLoaded_9A53E0754B58E302E51B8792F24504BA
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnLoaded_9A53E0754B58E302E51B8792F24504BA final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnLoaded_9A53E0754B58E302E51B8792F24504BA) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnLoaded_9A53E0754B58E302E51B8792F24504BA");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnLoaded_9A53E0754B58E302E51B8792F24504BA) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnLoaded_9A53E0754B58E302E51B8792F24504BA");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnLoaded_9A53E0754B58E302E51B8792F24504BA, Loaded) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnLoaded_9A53E0754B58E302E51B8792F24504BA::Loaded' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnLoaded_F42AA0D940D51C3CD3F14D91042170F3
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_OnLoaded_F42AA0D940D51C3CD3F14D91042170F3 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnLoaded_F42AA0D940D51C3CD3F14D91042170F3) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnLoaded_F42AA0D940D51C3CD3F14D91042170F3");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnLoaded_F42AA0D940D51C3CD3F14D91042170F3) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_OnLoaded_F42AA0D940D51C3CD3F14D91042170F3");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnLoaded_F42AA0D940D51C3CD3F14D91042170F3, Loaded) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnLoaded_F42AA0D940D51C3CD3F14D91042170F3::Loaded' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.InitializeStatus
// 0x0014 (0x0014 - 0x0000)
struct BP_AJBInGameCharacter_C_InitializeStatus final
{
public:
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight;   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetWalkableFloorAngle_ReturnValue;     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcMaxSP_MaxSP;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_InitializeStatus) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_InitializeStatus");
static_assert(sizeof(BP_AJBInGameCharacter_C_InitializeStatus) == 0x000014, "Wrong size on BP_AJBInGameCharacter_C_InitializeStatus");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeStatus, CallFunc_IsServer_ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_InitializeStatus::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeStatus, CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight) == 0x000004, "Member 'BP_AJBInGameCharacter_C_InitializeStatus::CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeStatus, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_InitializeStatus::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeStatus, CallFunc_K2_GetWalkableFloorAngle_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_InitializeStatus::CallFunc_K2_GetWalkableFloorAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeStatus, CallFunc_CalcMaxSP_MaxSP) == 0x000010, "Member 'BP_AJBInGameCharacter_C_InitializeStatus::CallFunc_CalcMaxSP_MaxSP' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeCameraType
// 0x0080 (0x0080 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeCameraType final
{
public:
	TArray<struct FST_CameraParam>                TempCameraParams;                                  // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CameraParam                        CallFunc_CalcCameraParam_ResultParam;              // 0x0014(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_CameraParam                        CallFunc_GetPoliticCameraParam_CameraParam;        // 0x005C(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_GetPoliticCameraParam_bSuccess;           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeCameraType) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeCameraType");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeCameraType) == 0x000080, "Wrong size on BP_AJBInGameCharacter_C_ChangeCameraType");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeCameraType, TempCameraParams) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeCameraType::TempCameraParams' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeCameraType, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_AJBInGameCharacter_C_ChangeCameraType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeCameraType, CallFunc_CalcCameraParam_ResultParam) == 0x000014, "Member 'BP_AJBInGameCharacter_C_ChangeCameraType::CallFunc_CalcCameraParam_ResultParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeCameraType, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_ChangeCameraType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeCameraType, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_ChangeCameraType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeCameraType, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000038, "Member 'BP_AJBInGameCharacter_C_ChangeCameraType::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeCameraType, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_AJBInGameCharacter_C_ChangeCameraType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeCameraType, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_AJBInGameCharacter_C_ChangeCameraType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeCameraType, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_AJBInGameCharacter_C_ChangeCameraType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeCameraType, CallFunc_GetPoliticCameraParam_CameraParam) == 0x00005C, "Member 'BP_AJBInGameCharacter_C_ChangeCameraType::CallFunc_GetPoliticCameraParam_CameraParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeCameraType, CallFunc_GetPoliticCameraParam_bSuccess) == 0x000074, "Member 'BP_AJBInGameCharacter_C_ChangeCameraType::CallFunc_GetPoliticCameraParam_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeCameraType, CallFunc_Array_AddUnique_ReturnValue) == 0x000078, "Member 'BP_AJBInGameCharacter_C_ChangeCameraType::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeCameraType, CallFunc_MatchesTag_ReturnValue) == 0x00007C, "Member 'BP_AJBInGameCharacter_C_ChangeCameraType::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateCameraParam
// 0x0498 (0x0498 - 0x0000)
struct BP_AJBInGameCharacter_C_UpdateCameraParam final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_SprintArmTargetRelativeLocation;              // 0x0004(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0034(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0058(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0068(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0078(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess1;             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance1;    // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetFocusActor_ReturnValue;                // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue1;             // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B[0x5];                                      // 0x012B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue1;     // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_143[0x1];                                      // 0x0143(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue1;     // 0x0144(0x000C)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0150(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x015C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue2;     // 0x0168(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x0174(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0180(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult1;      // 0x0190(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0218(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsServer_ReturnValue1;                    // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x02A4(0x000C)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x02B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue3;     // 0x0338(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_345[0x3];                                      // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0348(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult1;      // 0x0358(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x03E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x03F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue1;                   // 0x03FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue1;                   // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0410(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBInGameCharacter_C_UpdateCameraParam) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_UpdateCameraParam");
static_assert(sizeof(BP_AJBInGameCharacter_C_UpdateCameraParam) == 0x000498, "Wrong size on BP_AJBInGameCharacter_C_UpdateCameraParam");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, DeltaTime) == 0x000000, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, Temp_SprintArmTargetRelativeLocation) == 0x000004, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::Temp_SprintArmTargetRelativeLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000014, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_IsServer_ReturnValue) == 0x000024, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000025, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000034, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x000040, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_GetAJBGameInstance_bSuccess) == 0x00004C, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000050, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_FindLookAtRotation_ReturnValue) == 0x000058, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_IsPlayingReplay_ReturnValue) == 0x000064, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_RInterpTo_ReturnValue) == 0x000068, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000078, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_GetAJBGameInstance_bSuccess1) == 0x000100, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_GetAJBGameInstance_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_GetAJBGameInstance_AJB_Game_Instance1) == 0x000108, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_GetAJBGameInstance_AJB_Game_Instance1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_GetFocusActor_ReturnValue) == 0x000110, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_GetFocusActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000118, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000119, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_GetAttachParent_ReturnValue) == 0x000120, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_IsPlayingReplay_ReturnValue1) == 0x000128, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_IsPlayingReplay_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000129, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_BooleanAND_ReturnValue) == 0x00012A, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_GetPlayerController_ReturnValue) == 0x000130, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_GetViewTarget_ReturnValue) == 0x000138, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_HasLocalSharedController_ReturnValue) == 0x000140, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_EqualEqual_ObjectObject_ReturnValue1) == 0x000141, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_EqualEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_BooleanOR_ReturnValue) == 0x000142, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_K2_GetComponentRotation_ReturnValue1) == 0x000144, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_K2_GetComponentRotation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_RLerp_ReturnValue) == 0x000150, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_MakeVector_ReturnValue1) == 0x00015C, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_K2_GetComponentLocation_ReturnValue2) == 0x000168, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_K2_GetComponentLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_MakeVector_ReturnValue2) == 0x000174, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_Add_VectorVector_ReturnValue) == 0x000180, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_K2_SetWorldRotation_SweepHitResult1) == 0x000190, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_K2_SetWorldRotation_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000218, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_IsServer_ReturnValue1) == 0x0002A0, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_IsServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_GetControlRotation_ReturnValue) == 0x0002A4, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0002B0, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_K2_GetComponentLocation_ReturnValue3) == 0x000338, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_K2_GetComponentLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_IsDedicatedServer_ReturnValue) == 0x000344, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_Add_VectorVector_ReturnValue1) == 0x000348, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_K2_SetWorldLocation_SweepHitResult1) == 0x000358, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_K2_SetWorldLocation_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0003E0, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_FInterpTo_ReturnValue) == 0x0003EC, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_VInterpTo_ReturnValue) == 0x0003F0, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_VInterpTo_ReturnValue1) == 0x0003FC, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_VInterpTo_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_FInterpTo_ReturnValue1) == 0x000408, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_FInterpTo_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateCameraParam, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000410, "Member 'BP_AJBInGameCharacter_C_UpdateCameraParam::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.Heal
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameCharacter_C_Heal final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HealLimit;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HealValue;                                         // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_BeforeHP;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue; // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInvincibleDueForSystemReason_bIsInvincible; // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue;     // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_Heal) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_Heal");
static_assert(sizeof(BP_AJBInGameCharacter_C_Heal) == 0x000030, "Wrong size on BP_AJBInGameCharacter_C_Heal");
static_assert(offsetof(BP_AJBInGameCharacter_C_Heal, Value) == 0x000000, "Member 'BP_AJBInGameCharacter_C_Heal::Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Heal, HealLimit) == 0x000004, "Member 'BP_AJBInGameCharacter_C_Heal::HealLimit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Heal, bSuccess) == 0x000008, "Member 'BP_AJBInGameCharacter_C_Heal::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Heal, HealValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_Heal::HealValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Heal, Temp_BeforeHP) == 0x000010, "Member 'BP_AJBInGameCharacter_C_Heal::Temp_BeforeHP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Heal, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_AJBInGameCharacter_C_Heal::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Heal, CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue) == 0x000015, "Member 'BP_AJBInGameCharacter_C_Heal::CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Heal, CallFunc_IsInvincibleDueForSystemReason_bIsInvincible) == 0x000016, "Member 'BP_AJBInGameCharacter_C_Heal::CallFunc_IsInvincibleDueForSystemReason_bIsInvincible' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Heal, CallFunc_BooleanOR_ReturnValue) == 0x000017, "Member 'BP_AJBInGameCharacter_C_Heal::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Heal, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_Heal::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Heal, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_Heal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Heal, CallFunc_Greater_IntInt_ReturnValue) == 0x00001D, "Member 'BP_AJBInGameCharacter_C_Heal::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Heal, Temp_bool_Variable) == 0x00001E, "Member 'BP_AJBInGameCharacter_C_Heal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Heal, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_Heal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Heal, CallFunc_CharacterBehaviorMatches_ReturnValue) == 0x000024, "Member 'BP_AJBInGameCharacter_C_Heal::CallFunc_CharacterBehaviorMatches_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Heal, K2Node_Select_Default) == 0x000028, "Member 'BP_AJBInGameCharacter_C_Heal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Heal, CallFunc_Clamp_ReturnValue) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_Heal::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.AddSP
// 0x0014 (0x0014 - 0x0000)
struct BP_AJBInGameCharacter_C_AddSP final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempPrevSP;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_AddSP) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_AddSP");
static_assert(sizeof(BP_AJBInGameCharacter_C_AddSP) == 0x000014, "Wrong size on BP_AJBInGameCharacter_C_AddSP");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddSP, Value) == 0x000000, "Member 'BP_AJBInGameCharacter_C_AddSP::Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddSP, TempPrevSP) == 0x000004, "Member 'BP_AJBInGameCharacter_C_AddSP::TempPrevSP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddSP, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_AddSP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddSP, CallFunc_Add_IntInt_ReturnValue1) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_AddSP::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddSP, CallFunc_Clamp_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_AddSP::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UseSP
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameCharacter_C_UseSP final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_UseSP) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_UseSP");
static_assert(sizeof(BP_AJBInGameCharacter_C_UseSP) == 0x00000C, "Wrong size on BP_AJBInGameCharacter_C_UseSP");
static_assert(offsetof(BP_AJBInGameCharacter_C_UseSP, Value) == 0x000000, "Member 'BP_AJBInGameCharacter_C_UseSP::Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UseSP, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_UseSP::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UseSP, CallFunc_Clamp_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_UseSP::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateMP
// 0x002C (0x002C - 0x0000)
struct BP_AJBInGameCharacter_C_UpdateMP final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_UpdateMP) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_UpdateMP");
static_assert(sizeof(BP_AJBInGameCharacter_C_UpdateMP) == 0x00002C, "Wrong size on BP_AJBInGameCharacter_C_UpdateMP");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMP, DeltaTime) == 0x000000, "Member 'BP_AJBInGameCharacter_C_UpdateMP::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMP, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_UpdateMP::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_UpdateMP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMP, CallFunc_BooleanOR_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_UpdateMP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMP, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000010, "Member 'BP_AJBInGameCharacter_C_UpdateMP::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMP, Temp_float_Variable) == 0x000014, "Member 'BP_AJBInGameCharacter_C_UpdateMP::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMP, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_UpdateMP::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMP, CallFunc_FMax_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_UpdateMP::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMP, CallFunc_HasLocalSharedController_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_UpdateMP::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMP, Temp_bool_Variable) == 0x000021, "Member 'BP_AJBInGameCharacter_C_UpdateMP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMP, CallFunc_BooleanOR_ReturnValue1) == 0x000022, "Member 'BP_AJBInGameCharacter_C_UpdateMP::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMP, K2Node_Select_Default) == 0x000024, "Member 'BP_AJBInGameCharacter_C_UpdateMP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMP, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_UpdateMP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsSatisfiedMP
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_IsSatisfiedMP final
{
public:
	float                                         ConsumptionMP;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSatisfied;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IsSatisfiedMP) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_IsSatisfiedMP");
static_assert(sizeof(BP_AJBInGameCharacter_C_IsSatisfiedMP) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_IsSatisfiedMP");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsSatisfiedMP, ConsumptionMP) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IsSatisfiedMP::ConsumptionMP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsSatisfiedMP, IsSatisfied) == 0x000004, "Member 'BP_AJBInGameCharacter_C_IsSatisfiedMP::IsSatisfied' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsSatisfiedMP, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_IsSatisfiedMP::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsSatisfiedMP, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_IsSatisfiedMP::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UseMP
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_UseMP final
{
public:
	float                                         ConsumptionMP;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_UseMP) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_UseMP");
static_assert(sizeof(BP_AJBInGameCharacter_C_UseMP) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_UseMP");
static_assert(offsetof(BP_AJBInGameCharacter_C_UseMP, ConsumptionMP) == 0x000000, "Member 'BP_AJBInGameCharacter_C_UseMP::ConsumptionMP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UseMP, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_UseMP::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UseMP, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_UseMP::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UseMP, CallFunc_FClamp_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_UseMP::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsRemainMP
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_IsRemainMP final
{
public:
	bool                                          IsRemain;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IsRemainMP) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_IsRemainMP");
static_assert(sizeof(BP_AJBInGameCharacter_C_IsRemainMP) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_IsRemainMP");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsRemainMP, IsRemain) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IsRemainMP::IsRemain' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsRemainMP, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_IsRemainMP::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetCapsuleHalfHeight
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_GetCapsuleHalfHeight final
{
public:
	float                                         CapsuleHalfHeight;                                 // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetCapsuleHalfHeight) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_GetCapsuleHalfHeight");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetCapsuleHalfHeight) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_GetCapsuleHalfHeight");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCapsuleHalfHeight, CapsuleHalfHeight) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetCapsuleHalfHeight::CapsuleHalfHeight' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetCapsuleRadius
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_GetCapsuleRadius final
{
public:
	float                                         CapsuleRadius;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetCapsuleRadius) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_GetCapsuleRadius");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetCapsuleRadius) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_GetCapsuleRadius");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCapsuleRadius, CapsuleRadius) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetCapsuleRadius::CapsuleRadius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCapsuleRadius, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_GetCapsuleRadius::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.FindTraceLocationsFromCamera
// 0x0DB0 (0x0DB0 - 0x0000)
struct BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera final
{
public:
	float                                         TraceDistance;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceStartLocation;                                // 0x0004(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceEndLocation;                                  // 0x0010(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTempIsSeparate;                                   // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TempCameraLocation;                                // 0x0020(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempCameraForwardVector;                           // 0x002C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBInGameCameraAccessor_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Camera_Accessor; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraForwardVector_ReturnValue;       // 0x0068(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0xC];                                       // 0x0074(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMinimalViewInfo                       CallFunc_GetCameraView_DesiredView;                // 0x0080(0x0570)()
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x05F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInGameCameraAccessor_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Camera_Accessor1; // 0x0600(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0611(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_612[0x2];                                      // 0x0612(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0614(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_621[0x7];                                      // 0x0621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetPoliticStandAsActor_Actor;             // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetFocusActor_ReturnValue;                // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       CallFunc_GetComponentByClass_ReturnValue1;         // 0x0648(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMinimalViewInfo                       CallFunc_GetCameraView_DesiredView1;               // 0x0650(0x0570)()
	bool                                          CallFunc_CheckStandSeparation_bSeparation;         // 0x0BC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BC1[0x3];                                      // 0x0BC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue1;            // 0x0BC4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0BD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0BD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0BD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BDA[0x2];                                      // 0x0BDA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0BDC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue1;           // 0x0BE8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BF4[0x4];                                      // 0x0BF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0BF8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class AActor*                                 K2Node_Select_Default;                             // 0x0C08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0C10(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x0C1C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    CallFunc_GetComponentByClass_ReturnValue2;         // 0x0C28(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0C30(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0C3C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0C48(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0C54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C55[0x3];                                      // 0x0C55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0C58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0C5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue2;        // 0x0C60(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0C6C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0C78(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C84[0x4];                                      // 0x0C84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_AJBLineTraceByChannel_OutHit;             // 0x0C88(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_AJBLineTraceByChannel_ReturnValue;        // 0x0D10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0D11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0D12(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D13[0x1];                                      // 0x0D13(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0D14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0D18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0D1C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0D28(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0D34(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0D40(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4C[0x4];                                      // 0x0D4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0D50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0D58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0D60(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0D68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0D70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0D74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0D78(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0D84(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue2;            // 0x0D90(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select1_Default;                            // 0x0D9C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera) == 0x000010, "Wrong alignment on BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera");
static_assert(sizeof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera) == 0x000DB0, "Wrong size on BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, TraceDistance) == 0x000000, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::TraceDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, TraceStartLocation) == 0x000004, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::TraceStartLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, TraceEndLocation) == 0x000010, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::TraceEndLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, bTempIsSeparate) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::bTempIsSeparate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, TempCameraLocation) == 0x000020, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::TempCameraLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, TempCameraForwardVector) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::TempCameraForwardVector' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_GetViewTarget_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, K2Node_DynamicCast_AsBI_AJBIn_Game_Camera_Accessor) == 0x000048, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::K2Node_DynamicCast_AsBI_AJBIn_Game_Camera_Accessor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_GetComponentByClass_ReturnValue) == 0x000060, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_GetCameraForwardVector_ReturnValue) == 0x000068, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_GetCameraForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_GetCameraView_DesiredView) == 0x000080, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_GetCameraView_DesiredView' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_GetForwardVector_ReturnValue) == 0x0005F0, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, K2Node_DynamicCast_AsBI_AJBIn_Game_Camera_Accessor1) == 0x000600, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::K2Node_DynamicCast_AsBI_AJBIn_Game_Camera_Accessor1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, K2Node_DynamicCast_bSuccess1) == 0x000610, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_DoesImplementInterface_ReturnValue) == 0x000611, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_GetCameraLocation_ReturnValue) == 0x000614, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_GetAJBGameInstance_bSuccess) == 0x000620, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000628, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_GetPoliticStandAsActor_Actor) == 0x000630, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_GetPoliticStandAsActor_Actor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_GetFocusActor_ReturnValue) == 0x000638, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_GetFocusActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_IsPlayingReplay_ReturnValue) == 0x000640, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_GetComponentByClass_ReturnValue1) == 0x000648, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_GetCameraView_DesiredView1) == 0x000650, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_GetCameraView_DesiredView1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_CheckStandSeparation_bSeparation) == 0x000BC0, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_CheckStandSeparation_bSeparation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_GetForwardVector_ReturnValue1) == 0x000BC4, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_GetForwardVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, K2Node_DynamicCast_AsPlayer_Controller) == 0x000BD0, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, K2Node_DynamicCast_bSuccess2) == 0x000BD8, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, Temp_bool_Variable) == 0x000BD9, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_GetActorForwardVector_ReturnValue) == 0x000BDC, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_GetCameraLocation_ReturnValue1) == 0x000BE8, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_GetCameraLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, K2Node_MakeArray_Array) == 0x000BF8, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, K2Node_Select_Default) == 0x000C08, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000C10, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_NegateVector_ReturnValue) == 0x000C1C, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_GetComponentByClass_ReturnValue2) == 0x000C28, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_GetComponentByClass_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000C30, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000C3C, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000C48, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, Temp_bool_Variable1) == 0x000C54, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_Dot_VectorVector_ReturnValue) == 0x000C58, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_FMin_ReturnValue) == 0x000C5C, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_Multiply_VectorFloat_ReturnValue2) == 0x000C60, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_Multiply_VectorFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_Add_VectorVector_ReturnValue) == 0x000C6C, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_Add_VectorVector_ReturnValue1) == 0x000C78, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_AJBLineTraceByChannel_OutHit) == 0x000C88, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_AJBLineTraceByChannel_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_AJBLineTraceByChannel_ReturnValue) == 0x000D10, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_AJBLineTraceByChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_BreakHitResult_bBlockingHit) == 0x000D11, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_BreakHitResult_bInitialOverlap) == 0x000D12, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_BreakHitResult_Time) == 0x000D14, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_BreakHitResult_Distance) == 0x000D18, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_BreakHitResult_Location) == 0x000D1C, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_BreakHitResult_ImpactPoint) == 0x000D28, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_BreakHitResult_Normal) == 0x000D34, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_BreakHitResult_ImpactNormal) == 0x000D40, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_BreakHitResult_PhysMat) == 0x000D50, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_BreakHitResult_HitActor) == 0x000D58, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_BreakHitResult_HitComponent) == 0x000D60, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_BreakHitResult_HitBoneName) == 0x000D68, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_BreakHitResult_HitItem) == 0x000D70, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_BreakHitResult_FaceIndex) == 0x000D74, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_BreakHitResult_TraceStart) == 0x000D78, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_BreakHitResult_TraceEnd) == 0x000D84, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, CallFunc_Add_VectorVector_ReturnValue2) == 0x000D90, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::CallFunc_Add_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera, K2Node_Select1_Default) == 0x000D9C, "Member 'BP_AJBInGameCharacter_C_FindTraceLocationsFromCamera::K2Node_Select1_Default' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeInputEnable
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeInputEnable final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeInputEnable) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeInputEnable");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeInputEnable) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_ChangeInputEnable");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeInputEnable, Enable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeInputEnable::Enable' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsAlive
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_IsAlive final
{
public:
	bool                                          bIncludeGoingToRessurect;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIncludeCriticalness;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsAlive_0;                                         // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsResurrectable_bResult;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue4;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue3;                   // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IsAlive) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_IsAlive");
static_assert(sizeof(BP_AJBInGameCharacter_C_IsAlive) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_IsAlive");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsAlive, bIncludeGoingToRessurect) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IsAlive::bIncludeGoingToRessurect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsAlive, bIncludeCriticalness) == 0x000001, "Member 'BP_AJBInGameCharacter_C_IsAlive::bIncludeCriticalness' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsAlive, IsAlive_0) == 0x000002, "Member 'BP_AJBInGameCharacter_C_IsAlive::IsAlive_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsAlive, CallFunc_IsResurrectable_bResult) == 0x000003, "Member 'BP_AJBInGameCharacter_C_IsAlive::CallFunc_IsResurrectable_bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsAlive, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_IsAlive::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsAlive, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000005, "Member 'BP_AJBInGameCharacter_C_IsAlive::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsAlive, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000006, "Member 'BP_AJBInGameCharacter_C_IsAlive::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsAlive, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x000007, "Member 'BP_AJBInGameCharacter_C_IsAlive::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsAlive, CallFunc_BooleanOR_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_IsAlive::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsAlive, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'BP_AJBInGameCharacter_C_IsAlive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsAlive, CallFunc_EqualEqual_ByteByte_ReturnValue4) == 0x00000A, "Member 'BP_AJBInGameCharacter_C_IsAlive::CallFunc_EqualEqual_ByteByte_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsAlive, CallFunc_BooleanAND_ReturnValue1) == 0x00000B, "Member 'BP_AJBInGameCharacter_C_IsAlive::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsAlive, CallFunc_BooleanOR_ReturnValue1) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_IsAlive::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsAlive, CallFunc_BooleanAND_ReturnValue2) == 0x00000D, "Member 'BP_AJBInGameCharacter_C_IsAlive::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsAlive, CallFunc_BooleanOR_ReturnValue2) == 0x00000E, "Member 'BP_AJBInGameCharacter_C_IsAlive::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsAlive, CallFunc_BooleanOR_ReturnValue3) == 0x00000F, "Member 'BP_AJBInGameCharacter_C_IsAlive::CallFunc_BooleanOR_ReturnValue3' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckEnableInput
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckEnableInput final
{
public:
	bool                                          InputEnable;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckEnableInput) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CheckEnableInput");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckEnableInput) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_CheckEnableInput");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckEnableInput, InputEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckEnableInput::InputEnable' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetCharacterCollisionEnabled
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_SetCharacterCollisionEnabled final
{
public:
	ECollisionEnabled                             CollisionEnabled;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SetCharacterCollisionEnabled) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_SetCharacterCollisionEnabled");
static_assert(sizeof(BP_AJBInGameCharacter_C_SetCharacterCollisionEnabled) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_SetCharacterCollisionEnabled");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetCharacterCollisionEnabled, CollisionEnabled) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SetCharacterCollisionEnabled::CollisionEnabled' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckAnySkillActive
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckAnySkillActive final
{
public:
	class UClass*                                 IgnoreSkillClass;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIncludeReady;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIncludePreview;                                   // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsActive;                                          // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_AJBSkillBase_C*>             CallFunc_GetComponentsByClass_ReturnValue;         // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillActive_ReturnValue;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckAnySkillActive) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckAnySkillActive");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckAnySkillActive) == 0x000048, "Wrong size on BP_AJBInGameCharacter_C_CheckAnySkillActive");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActive, IgnoreSkillClass) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActive::IgnoreSkillClass' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActive, bIncludeReady) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActive::bIncludeReady' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActive, bIncludePreview) == 0x000009, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActive::bIncludePreview' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActive, IsActive) == 0x00000A, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActive::IsActive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActive, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActive, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActive, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActive, CallFunc_GetComponentsByClass_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActive::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActive, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActive, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActive, CallFunc_IsSkillActive_ReturnValue) == 0x000034, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActive::CallFunc_IsSkillActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActive, CallFunc_Less_IntInt_ReturnValue) == 0x000035, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActive, CallFunc_GetObjectClass_ReturnValue) == 0x000038, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActive::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActive, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActive::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActive, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcMaxSP
// 0x0070 (0x0070 - 0x0000)
struct BP_AJBInGameCharacter_C_CalcMaxSP final
{
public:
	int32                                         MaxSP;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   Temp_GrowupTags;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_GrowupInfo_Processed               CallFunc_GetGrowupParam_GrowupParam;               // 0x0048(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CalcMaxSP) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CalcMaxSP");
static_assert(sizeof(BP_AJBInGameCharacter_C_CalcMaxSP) == 0x000070, "Wrong size on BP_AJBInGameCharacter_C_CalcMaxSP");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcMaxSP, MaxSP) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CalcMaxSP::MaxSP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcMaxSP, Temp_GrowupTags) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CalcMaxSP::Temp_GrowupTags' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcMaxSP, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CalcMaxSP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcMaxSP, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_CalcMaxSP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcMaxSP, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_CalcMaxSP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcMaxSP, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'BP_AJBInGameCharacter_C_CalcMaxSP::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcMaxSP, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CalcMaxSP::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcMaxSP, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_AJBInGameCharacter_C_CalcMaxSP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcMaxSP, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_AJBInGameCharacter_C_CalcMaxSP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcMaxSP, CallFunc_IsGameplayTagValid_ReturnValue) == 0x00003C, "Member 'BP_AJBInGameCharacter_C_CalcMaxSP::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcMaxSP, CallFunc_Subtract_IntInt_ReturnValue1) == 0x000040, "Member 'BP_AJBInGameCharacter_C_CalcMaxSP::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcMaxSP, CallFunc_Max_ReturnValue) == 0x000044, "Member 'BP_AJBInGameCharacter_C_CalcMaxSP::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcMaxSP, CallFunc_GetGrowupParam_GrowupParam) == 0x000048, "Member 'BP_AJBInGameCharacter_C_CalcMaxSP::CallFunc_GetGrowupParam_GrowupParam' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetGrowupParam
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameCharacter_C_GetGrowupParam final
{
public:
	struct FST_GrowupInfo_Processed               GrowupParam_0;                                     // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetGrowupParam) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_GetGrowupParam");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetGrowupParam) == 0x000028, "Wrong size on BP_AJBInGameCharacter_C_GetGrowupParam");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGrowupParam, GrowupParam_0) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetGrowupParam::GrowupParam_0' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetAchievedGrowup
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBInGameCharacter_C_GetAchievedGrowup final
{
public:
	int32                                         CurrentSP;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Growup;                                            // 0x0008(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_GrowupInfo_Processed               CallFunc_GetGrowupParam_GrowupParam;               // 0x0018(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue1;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetAchievedGrowup) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_GetAchievedGrowup");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetAchievedGrowup) == 0x000048, "Wrong size on BP_AJBInGameCharacter_C_GetAchievedGrowup");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetAchievedGrowup, CurrentSP) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetAchievedGrowup::CurrentSP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetAchievedGrowup, Growup) == 0x000008, "Member 'BP_AJBInGameCharacter_C_GetAchievedGrowup::Growup' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetAchievedGrowup, Value) == 0x000010, "Member 'BP_AJBInGameCharacter_C_GetAchievedGrowup::Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetAchievedGrowup, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'BP_AJBInGameCharacter_C_GetAchievedGrowup::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetAchievedGrowup, CallFunc_GetGrowupParam_GrowupParam) == 0x000018, "Member 'BP_AJBInGameCharacter_C_GetAchievedGrowup::CallFunc_GetGrowupParam_GrowupParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetAchievedGrowup, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_GetAchievedGrowup::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetAchievedGrowup, CallFunc_Array_IsValidIndex_ReturnValue1) == 0x000041, "Member 'BP_AJBInGameCharacter_C_GetAchievedGrowup::CallFunc_Array_IsValidIndex_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetAchievedGrowup, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'BP_AJBInGameCharacter_C_GetAchievedGrowup::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ConsumeGrowup
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_ConsumeGrowup final
{
public:
	struct FGameplayTag                           Growup;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ConsumeGrowup) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ConsumeGrowup");
static_assert(sizeof(BP_AJBInGameCharacter_C_ConsumeGrowup) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_ConsumeGrowup");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeGrowup, Growup) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ConsumeGrowup::Growup' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeGrowup, Value) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ConsumeGrowup::Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeGrowup, CallFunc_IsGameplayTagValid_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_ConsumeGrowup::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetDefaultMaxSpeed
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameCharacter_C_GetDefaultMaxSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCrouching_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetDefaultMaxSpeed) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_GetDefaultMaxSpeed");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetDefaultMaxSpeed) == 0x00000C, "Wrong size on BP_AJBInGameCharacter_C_GetDefaultMaxSpeed");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetDefaultMaxSpeed, ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetDefaultMaxSpeed::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetDefaultMaxSpeed, Temp_bool_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_C_GetDefaultMaxSpeed::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetDefaultMaxSpeed, CallFunc_IsCrouching_ReturnValue) == 0x000005, "Member 'BP_AJBInGameCharacter_C_GetDefaultMaxSpeed::CallFunc_IsCrouching_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetDefaultMaxSpeed, K2Node_Select_Default) == 0x000008, "Member 'BP_AJBInGameCharacter_C_GetDefaultMaxSpeed::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterDamage(Server)
// 0x0410 (0x0410 - 0x0000)
struct BP_AJBInGameCharacter_C_CharacterDamage_Server_ final
{
public:
	int32                                         DamageForHPAP;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageForAAP;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           DamageType;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackDistance;                                    // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithSeparatedStandAttack;                          // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HitEnemysSeparatedStand;                           // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPenetrateAP;                                      // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EffectiveDamage;                                   // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterBehavior                            CharacterBehavior;                                 // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDamageIsCutByAAP;                                 // 0x0029(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BeforeAAP;                                         // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AfterAAP;                                          // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempAfterAAP;                                      // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempBeforeAAP;                                     // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTempDamageIsCutByAAP;                             // 0x003C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_EffectiveDamage;                              // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConsumeDamage_EffectiveDamage;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ConsumeDamage_bDamageIsCutByAAP;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ConsumeDamage_BeforeAAP;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConsumeDamage_AfterAAP;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_DebugGetPairObjectsNameFromActor_PairCharacterObjectName; // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_DebugGetPairObjectsNameFromActor_PairControllerObjectName; // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_DebugShortenControllerObjectName_ReturnValue; // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_DebugShortenCharacterObjectName_ReturnValue; // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0098(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue1;           // 0x00B0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00C8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x0108(0x0040)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_DebugGetControllerObjectNameFromActor_ReturnValue; // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_DebugShortenCharacterObjectName_ReturnValue1; // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_DebugShortenControllerObjectName_ReturnValue1; // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue2;           // 0x0188(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue3;           // 0x01A0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x01B8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData3;             // 0x01F8(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_IsShipping_ReturnValue;                   // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDebugStringFromGameplayTag_ReturnValue; // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue4;           // 0x0250(0x0018)()
	struct FGameplayTagContainer                  CallFunc_GetDebugTags_ReturnValue;                 // 0x0268(0x0020)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData4;             // 0x0288(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02D0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02E0(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetDebugTags_ReturnValue1;                // 0x0300(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue1;                      // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetDebugTags_ReturnValue2;                // 0x0328(0x0020)()
	struct FGameplayTagContainer                  CallFunc_GetDebugTags_ReturnValue3;                // 0x0348(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue2;                      // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasTag_ReturnValue3;                      // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayModeIsPair_ReturnValue;               // 0x036A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36B[0x1];                                      // 0x036B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetPairCharacterBP_PairCharacterBP;       // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x037A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue;     // 0x037B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x037C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x037D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37E[0x2];                                      // 0x037E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389[0x3];                                      // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetCharacterIdFromActor_CharacterId;      // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetDebugTags_ReturnValue4;                // 0x0398(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue4;                      // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetDebugTags_ReturnValue5;                // 0x03C0(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue5;                      // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetDebugTags_ReturnValue6;                // 0x03E8(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue6;                      // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CharacterDamage_Server_) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CharacterDamage_Server_");
static_assert(sizeof(BP_AJBInGameCharacter_C_CharacterDamage_Server_) == 0x000410, "Wrong size on BP_AJBInGameCharacter_C_CharacterDamage_Server_");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, DamageForHPAP) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::DamageForHPAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, DamageForAAP) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::DamageForAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, DamageCauser) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, DamageType) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, SerialNumber) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, AttackDistance) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::AttackDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, WithSeparatedStandAttack) == 0x000020, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::WithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, HitEnemysSeparatedStand) == 0x000021, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::HitEnemysSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, bPenetrateAP) == 0x000022, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::bPenetrateAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, EffectiveDamage) == 0x000024, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::EffectiveDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CharacterBehavior) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CharacterBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, bDamageIsCutByAAP) == 0x000029, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::bDamageIsCutByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, BeforeAAP) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::BeforeAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, AfterAAP) == 0x000030, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::AfterAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, TempAfterAAP) == 0x000034, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::TempAfterAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, TempBeforeAAP) == 0x000038, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::TempBeforeAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, bTempDamageIsCutByAAP) == 0x00003C, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::bTempDamageIsCutByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, Temp_EffectiveDamage) == 0x000040, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::Temp_EffectiveDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_ConsumeDamage_EffectiveDamage) == 0x000044, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_ConsumeDamage_EffectiveDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_ConsumeDamage_bDamageIsCutByAAP) == 0x000048, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_ConsumeDamage_bDamageIsCutByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_ConsumeDamage_BeforeAAP) == 0x00004C, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_ConsumeDamage_BeforeAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_ConsumeDamage_AfterAAP) == 0x000050, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_ConsumeDamage_AfterAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_DebugGetPairObjectsNameFromActor_PairCharacterObjectName) == 0x000058, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_DebugGetPairObjectsNameFromActor_PairCharacterObjectName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_DebugGetPairObjectsNameFromActor_PairControllerObjectName) == 0x000068, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_DebugGetPairObjectsNameFromActor_PairControllerObjectName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_DebugShortenControllerObjectName_ReturnValue) == 0x000078, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_DebugShortenControllerObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_DebugShortenCharacterObjectName_ReturnValue) == 0x000088, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_DebugShortenCharacterObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_Conv_StringToText_ReturnValue) == 0x000098, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_Conv_StringToText_ReturnValue1) == 0x0000B0, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_Conv_StringToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, K2Node_MakeStruct_FormatArgumentData) == 0x0000C8, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, K2Node_MakeStruct_FormatArgumentData1) == 0x000108, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_GetObjectName_ReturnValue) == 0x000148, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_DebugGetControllerObjectNameFromActor_ReturnValue) == 0x000158, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_DebugGetControllerObjectNameFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_DebugShortenCharacterObjectName_ReturnValue1) == 0x000168, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_DebugShortenCharacterObjectName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_DebugShortenControllerObjectName_ReturnValue1) == 0x000178, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_DebugShortenControllerObjectName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_Conv_StringToText_ReturnValue2) == 0x000188, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_Conv_StringToText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_Conv_StringToText_ReturnValue3) == 0x0001A0, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_Conv_StringToText_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, K2Node_MakeStruct_FormatArgumentData2) == 0x0001B8, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, K2Node_MakeStruct_FormatArgumentData3) == 0x0001F8, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::K2Node_MakeStruct_FormatArgumentData3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_IsShipping_ReturnValue) == 0x000238, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_IsShipping_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_GetDebugStringFromGameplayTag_ReturnValue) == 0x000240, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_GetDebugStringFromGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_Conv_StringToText_ReturnValue4) == 0x000250, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_Conv_StringToText_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_GetDebugTags_ReturnValue) == 0x000268, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_GetDebugTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, K2Node_MakeStruct_FormatArgumentData4) == 0x000288, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::K2Node_MakeStruct_FormatArgumentData4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_HasTag_ReturnValue) == 0x0002C8, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, K2Node_MakeArray_Array) == 0x0002D0, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_Format_ReturnValue) == 0x0002E0, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, Temp_bool_Variable) == 0x0002F8, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_GetDebugTags_ReturnValue1) == 0x000300, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_GetDebugTags_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_HasTag_ReturnValue1) == 0x000320, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_HasTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_GetDebugTags_ReturnValue2) == 0x000328, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_GetDebugTags_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_GetDebugTags_ReturnValue3) == 0x000348, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_GetDebugTags_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_HasTag_ReturnValue2) == 0x000368, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_HasTag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_HasTag_ReturnValue3) == 0x000369, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_HasTag_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_PlayModeIsPair_ReturnValue) == 0x00036A, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_PlayModeIsPair_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, Temp_int_Variable) == 0x00036C, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_GetPairCharacterBP_PairCharacterBP) == 0x000370, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_GetPairCharacterBP_PairCharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_MatchesTag_ReturnValue) == 0x000378, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_IsValid_ReturnValue) == 0x000379, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_Not_PreBool_ReturnValue) == 0x00037A, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_CharacterBehaviorMatches_ReturnValue) == 0x00037B, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_CharacterBehaviorMatches_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00037C, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_Not_PreBool_ReturnValue1) == 0x00037D, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000380, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, K2Node_DynamicCast_bSuccess) == 0x000388, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, K2Node_Select_Default) == 0x00038C, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_GetCharacterIdFromActor_CharacterId) == 0x000390, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_GetCharacterIdFromActor_CharacterId' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_GetDebugTags_ReturnValue4) == 0x000398, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_GetDebugTags_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_HasTag_ReturnValue4) == 0x0003B8, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_HasTag_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_GetDebugTags_ReturnValue5) == 0x0003C0, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_GetDebugTags_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_HasTag_ReturnValue5) == 0x0003E0, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_HasTag_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_GetDebugTags_ReturnValue6) == 0x0003E8, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_GetDebugTags_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_HasTag_ReturnValue6) == 0x000408, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_HasTag_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterDamage_Server_, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000409, "Member 'BP_AJBInGameCharacter_C_CharacterDamage_Server_::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ForceCancelSkills
// 0x00D8 (0x00D8 - 0x0000)
struct BP_AJBInGameCharacter_C_ForceCancelSkills final
{
public:
	bool                                          bRequireStandSkillOnly;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         IgnoreSkillClass;                                  // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UBP_AJBSkillBase_C*>             LSkills;                                           // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable3;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item1;                          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillActive_ReturnValue;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83[0x1];                                       // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item2;                          // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue1;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillActive_ReturnValue1;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AJBSkillBase_C*>             CallFunc_GetComponentsByClass_ReturnValue;         // 0x00B0(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable3;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item3;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue1;              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ForceCancelSkills) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ForceCancelSkills");
static_assert(sizeof(BP_AJBInGameCharacter_C_ForceCancelSkills) == 0x0000D8, "Wrong size on BP_AJBInGameCharacter_C_ForceCancelSkills");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, bRequireStandSkillOnly) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::bRequireStandSkillOnly' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, IgnoreSkillClass) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::IgnoreSkillClass' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, LSkills) == 0x000018, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::LSkills' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, Temp_int_Array_Index_Variable1) == 0x000034, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, Temp_int_Loop_Counter_Variable1) == 0x000038, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_Add_IntInt_ReturnValue1) == 0x00003C, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, Temp_int_Array_Index_Variable2) == 0x000040, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, Temp_int_Loop_Counter_Variable2) == 0x000044, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_Add_IntInt_ReturnValue2) == 0x000048, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, Temp_int_Loop_Counter_Variable3) == 0x00004C, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::Temp_int_Loop_Counter_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_Add_IntInt_ReturnValue3) == 0x00005C, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_Array_Length_ReturnValue1) == 0x000064, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_Array_Get_Item1) == 0x000068, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_Less_IntInt_ReturnValue1) == 0x000070, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_GetObjectClass_ReturnValue) == 0x000078, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_IsSkillActive_ReturnValue) == 0x000080, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_IsSkillActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_ClassIsChildOf_ReturnValue) == 0x000081, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_Not_PreBool_ReturnValue) == 0x000082, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_Array_Length_ReturnValue2) == 0x000084, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_Less_IntInt_ReturnValue2) == 0x000088, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_Array_Get_Item2) == 0x000090, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_Array_Length_ReturnValue3) == 0x000098, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_Less_IntInt_ReturnValue3) == 0x00009C, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_GetObjectClass_ReturnValue1) == 0x0000A0, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_GetObjectClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_IsSkillActive_ReturnValue1) == 0x0000A8, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_IsSkillActive_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_BooleanAND_ReturnValue) == 0x0000A9, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_GetComponentsByClass_ReturnValue) == 0x0000B0, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, Temp_int_Array_Index_Variable3) == 0x0000C0, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::Temp_int_Array_Index_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_Array_Get_Item3) == 0x0000C8, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_ClassIsChildOf_ReturnValue1) == 0x0000D0, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_ClassIsChildOf_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkills, CallFunc_Not_PreBool_ReturnValue1) == 0x0000D1, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkills::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsRemainHP
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBInGameCharacter_C_IsRemainHP final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PenetrateAP;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsRemain;                                          // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempAAP;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AdditionalAP_C>    K2Node_DynamicCast_AsBI_Additional_AP;             // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetValue_AAPValue;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IsRemainHP) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_IsRemainHP");
static_assert(sizeof(BP_AJBInGameCharacter_C_IsRemainHP) == 0x000048, "Wrong size on BP_AJBInGameCharacter_C_IsRemainHP");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsRemainHP, Damage) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IsRemainHP::Damage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsRemainHP, PenetrateAP) == 0x000004, "Member 'BP_AJBInGameCharacter_C_IsRemainHP::PenetrateAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsRemainHP, IsRemain) == 0x000005, "Member 'BP_AJBInGameCharacter_C_IsRemainHP::IsRemain' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsRemainHP, TempAAP) == 0x000008, "Member 'BP_AJBInGameCharacter_C_IsRemainHP::TempAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsRemainHP, Temp_bool_Variable) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_IsRemainHP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsRemainHP, Temp_int_Variable) == 0x000010, "Member 'BP_AJBInGameCharacter_C_IsRemainHP::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsRemainHP, K2Node_DynamicCast_AsBI_Additional_AP) == 0x000018, "Member 'BP_AJBInGameCharacter_C_IsRemainHP::K2Node_DynamicCast_AsBI_Additional_AP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsRemainHP, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBInGameCharacter_C_IsRemainHP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsRemainHP, CallFunc_GetValue_AAPValue) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_IsRemainHP::CallFunc_GetValue_AAPValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsRemainHP, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_IsRemainHP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsRemainHP, K2Node_Select_Default) == 0x000034, "Member 'BP_AJBInGameCharacter_C_IsRemainHP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsRemainHP, CallFunc_Add_IntInt_ReturnValue1) == 0x000038, "Member 'BP_AJBInGameCharacter_C_IsRemainHP::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsRemainHP, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'BP_AJBInGameCharacter_C_IsRemainHP::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsRemainHP, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_IsRemainHP::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckSkillActive
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckSkillActive final
{
public:
	class UClass*                                 SkillClass;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIncludeReady;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIncludePreview;                                   // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsActive;                                          // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_AJBSkillBase_C*>             CallFunc_GetComponentsByClass_ReturnValue;         // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillActive_ReturnValue;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckSkillActive) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckSkillActive");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckSkillActive) == 0x000048, "Wrong size on BP_AJBInGameCharacter_C_CheckSkillActive");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSkillActive, SkillClass) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckSkillActive::SkillClass' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSkillActive, bIncludeReady) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckSkillActive::bIncludeReady' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSkillActive, bIncludePreview) == 0x000009, "Member 'BP_AJBInGameCharacter_C_CheckSkillActive::bIncludePreview' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSkillActive, IsActive) == 0x00000A, "Member 'BP_AJBInGameCharacter_C_CheckSkillActive::IsActive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSkillActive, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_CheckSkillActive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSkillActive, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CheckSkillActive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSkillActive, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_AJBInGameCharacter_C_CheckSkillActive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSkillActive, CallFunc_GetComponentsByClass_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CheckSkillActive::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSkillActive, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CheckSkillActive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSkillActive, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_CheckSkillActive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSkillActive, CallFunc_IsSkillActive_ReturnValue) == 0x000034, "Member 'BP_AJBInGameCharacter_C_CheckSkillActive::CallFunc_IsSkillActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSkillActive, CallFunc_Less_IntInt_ReturnValue) == 0x000035, "Member 'BP_AJBInGameCharacter_C_CheckSkillActive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSkillActive, CallFunc_GetObjectClass_ReturnValue) == 0x000038, "Member 'BP_AJBInGameCharacter_C_CheckSkillActive::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSkillActive, CallFunc_ClassIsChildOf_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_CheckSkillActive::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSkillActive, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'BP_AJBInGameCharacter_C_CheckSkillActive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SystemEnable
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_SystemEnable final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SystemEnable) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_SystemEnable");
static_assert(sizeof(BP_AJBInGameCharacter_C_SystemEnable) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_SystemEnable");
static_assert(offsetof(BP_AJBInGameCharacter_C_SystemEnable, Enable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SystemEnable::Enable' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeEnableSpringArm
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeEnableSpringArm final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeEnableSpringArm) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeEnableSpringArm");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeEnableSpringArm) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_ChangeEnableSpringArm");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeEnableSpringArm, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeEnableSpringArm::bEnable' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.BeginCondition
// 0x0090 (0x0090 - 0x0000)
struct BP_AJBInGameCharacter_C_BeginCondition final
{
public:
	struct FGameplayTag                           Condition;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTriggeredByStand;                                 // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CauserType;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UActorComponent* Component)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0038(0x0020)()
	bool                                          CallFunc_MatchesAnyTags_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Map_Find_Value;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBActionBase_C*                    CallFunc_TryGenerateActionSkill_ActionSkill;       // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBPassiveSkillBase_C*              K2Node_DynamicCast_AsBP_AJBPassive_Skill_Base;     // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_BeginCondition) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_BeginCondition");
static_assert(sizeof(BP_AJBInGameCharacter_C_BeginCondition) == 0x000090, "Wrong size on BP_AJBInGameCharacter_C_BeginCondition");
static_assert(offsetof(BP_AJBInGameCharacter_C_BeginCondition, Condition) == 0x000000, "Member 'BP_AJBInGameCharacter_C_BeginCondition::Condition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_BeginCondition, Causer) == 0x000008, "Member 'BP_AJBInGameCharacter_C_BeginCondition::Causer' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_BeginCondition, bTriggeredByStand) == 0x000010, "Member 'BP_AJBInGameCharacter_C_BeginCondition::bTriggeredByStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_BeginCondition, CauserType) == 0x000018, "Member 'BP_AJBInGameCharacter_C_BeginCondition::CauserType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_BeginCondition, SerialNumber) == 0x000020, "Member 'BP_AJBInGameCharacter_C_BeginCondition::SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_BeginCondition, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000024, "Member 'BP_AJBInGameCharacter_C_BeginCondition::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_BeginCondition, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BP_AJBInGameCharacter_C_BeginCondition::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_BeginCondition, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000038, "Member 'BP_AJBInGameCharacter_C_BeginCondition::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_BeginCondition, CallFunc_MatchesAnyTags_ReturnValue) == 0x000058, "Member 'BP_AJBInGameCharacter_C_BeginCondition::CallFunc_MatchesAnyTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_BeginCondition, CallFunc_Map_Find_Value) == 0x000060, "Member 'BP_AJBInGameCharacter_C_BeginCondition::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_BeginCondition, CallFunc_Map_Find_ReturnValue) == 0x000068, "Member 'BP_AJBInGameCharacter_C_BeginCondition::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_BeginCondition, CallFunc_TryGenerateActionSkill_ActionSkill) == 0x000070, "Member 'BP_AJBInGameCharacter_C_BeginCondition::CallFunc_TryGenerateActionSkill_ActionSkill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_BeginCondition, CallFunc_IsServer_ReturnValue) == 0x000078, "Member 'BP_AJBInGameCharacter_C_BeginCondition::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_BeginCondition, K2Node_DynamicCast_AsBP_AJBPassive_Skill_Base) == 0x000080, "Member 'BP_AJBInGameCharacter_C_BeginCondition::K2Node_DynamicCast_AsBP_AJBPassive_Skill_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_BeginCondition, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_AJBInGameCharacter_C_BeginCondition::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.EndCondition
// 0x0070 (0x0070 - 0x0000)
struct BP_AJBInGameCharacter_C_EndCondition final
{
public:
	struct FGameplayTag                           Condition;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UActorComponent* Component)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0020(0x0020)()
	bool                                          CallFunc_MatchesAnyTags_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Map_Find_Value;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBActionBase_C*                    CallFunc_TryGenerateActionSkill_ActionSkill;       // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBPassiveSkillBase_C*              K2Node_DynamicCast_AsBP_AJBPassive_Skill_Base;     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_EndCondition) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_EndCondition");
static_assert(sizeof(BP_AJBInGameCharacter_C_EndCondition) == 0x000070, "Wrong size on BP_AJBInGameCharacter_C_EndCondition");
static_assert(offsetof(BP_AJBInGameCharacter_C_EndCondition, Condition) == 0x000000, "Member 'BP_AJBInGameCharacter_C_EndCondition::Condition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_EndCondition, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_AJBInGameCharacter_C_EndCondition::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_EndCondition, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000018, "Member 'BP_AJBInGameCharacter_C_EndCondition::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_EndCondition, CallFunc_IsServer_ReturnValue) == 0x000019, "Member 'BP_AJBInGameCharacter_C_EndCondition::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_EndCondition, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_EndCondition::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_EndCondition, CallFunc_MatchesAnyTags_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_EndCondition::CallFunc_MatchesAnyTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_EndCondition, CallFunc_Map_Find_Value) == 0x000048, "Member 'BP_AJBInGameCharacter_C_EndCondition::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_EndCondition, CallFunc_Map_Find_ReturnValue) == 0x000050, "Member 'BP_AJBInGameCharacter_C_EndCondition::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_EndCondition, CallFunc_TryGenerateActionSkill_ActionSkill) == 0x000058, "Member 'BP_AJBInGameCharacter_C_EndCondition::CallFunc_TryGenerateActionSkill_ActionSkill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_EndCondition, K2Node_DynamicCast_AsBP_AJBPassive_Skill_Base) == 0x000060, "Member 'BP_AJBInGameCharacter_C_EndCondition::K2Node_DynamicCast_AsBP_AJBPassive_Skill_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_EndCondition, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_AJBInGameCharacter_C_EndCondition::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateMovement
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameCharacter_C_UpdateMovement final
{
public:
	float                                         TempMovementRate;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPossibleDash_bPossible;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanRun_bIsRun;                            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanDash_bIsDash;                          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPossibleDash_bPossible1;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanDash_bIsDash1;                         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATest1_AJB_AIController_C*              K2Node_DynamicCast_AsTest_1_AJB_AIController;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanWalk_bIsWalk;                          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_UpdateMovement) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_UpdateMovement");
static_assert(sizeof(BP_AJBInGameCharacter_C_UpdateMovement) == 0x000040, "Wrong size on BP_AJBInGameCharacter_C_UpdateMovement");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMovement, TempMovementRate) == 0x000000, "Member 'BP_AJBInGameCharacter_C_UpdateMovement::TempMovementRate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMovement, CallFunc_CheckPossibleDash_bPossible) == 0x000004, "Member 'BP_AJBInGameCharacter_C_UpdateMovement::CallFunc_CheckPossibleDash_bPossible' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMovement, CallFunc_CanRun_bIsRun) == 0x000005, "Member 'BP_AJBInGameCharacter_C_UpdateMovement::CallFunc_CanRun_bIsRun' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMovement, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'BP_AJBInGameCharacter_C_UpdateMovement::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMovement, CallFunc_CanDash_bIsDash) == 0x000007, "Member 'BP_AJBInGameCharacter_C_UpdateMovement::CallFunc_CanDash_bIsDash' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMovement, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_UpdateMovement::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMovement, CallFunc_CheckPossibleDash_bPossible1) == 0x000009, "Member 'BP_AJBInGameCharacter_C_UpdateMovement::CallFunc_CheckPossibleDash_bPossible1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMovement, CallFunc_CanDash_bIsDash1) == 0x00000A, "Member 'BP_AJBInGameCharacter_C_UpdateMovement::CallFunc_CanDash_bIsDash1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMovement, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_UpdateMovement::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMovement, K2Node_DynamicCast_AsTest_1_AJB_AIController) == 0x000018, "Member 'BP_AJBInGameCharacter_C_UpdateMovement::K2Node_DynamicCast_AsTest_1_AJB_AIController' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMovement, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameCharacter_C_UpdateMovement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMovement, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'BP_AJBInGameCharacter_C_UpdateMovement::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMovement, CallFunc_Not_PreBool_ReturnValue1) == 0x000022, "Member 'BP_AJBInGameCharacter_C_UpdateMovement::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMovement, CallFunc_CanWalk_bIsWalk) == 0x000023, "Member 'BP_AJBInGameCharacter_C_UpdateMovement::CallFunc_CanWalk_bIsWalk' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMovement, CallFunc_MakeVector_ReturnValue) == 0x000024, "Member 'BP_AJBInGameCharacter_C_UpdateMovement::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMovement, CallFunc_ClampVectorSize_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_UpdateMovement::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMovement, CallFunc_VSize_ReturnValue) == 0x00003C, "Member 'BP_AJBInGameCharacter_C_UpdateMovement::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetMaxMoveSpeed
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_GetMaxMoveSpeed final
{
public:
	float                                         MaxSpeed;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempMaxSpeed;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetMaxMoveSpeed) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_GetMaxMoveSpeed");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetMaxMoveSpeed) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_GetMaxMoveSpeed");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetMaxMoveSpeed, MaxSpeed) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetMaxMoveSpeed::MaxSpeed' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetMaxMoveSpeed, TempMaxSpeed) == 0x000004, "Member 'BP_AJBInGameCharacter_C_GetMaxMoveSpeed::TempMaxSpeed' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetMaxMoveSpeed, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_GetMaxMoveSpeed::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetMaxMoveSpeed, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_GetMaxMoveSpeed::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetMaxMoveSpeed, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x00000D, "Member 'BP_AJBInGameCharacter_C_GetMaxMoveSpeed::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetMaxMoveSpeed, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x00000E, "Member 'BP_AJBInGameCharacter_C_GetMaxMoveSpeed::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetMaxMoveSpeed, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000010, "Member 'BP_AJBInGameCharacter_C_GetMaxMoveSpeed::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetMaxMoveSpeed, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000014, "Member 'BP_AJBInGameCharacter_C_GetMaxMoveSpeed::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckRunInput
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckRunInput final
{
public:
	bool                                          bRunInput;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckRunInput) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CheckRunInput");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckRunInput) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_CheckRunInput");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckRunInput, bRunInput) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckRunInput::bRunInput' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckRunInput, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_CheckRunInput::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CanWalk
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_CanWalk final
{
public:
	bool                                          bIsWalk;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CanWalk) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CanWalk");
static_assert(sizeof(BP_AJBInGameCharacter_C_CanWalk) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_CanWalk");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanWalk, bIsWalk) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CanWalk::bIsWalk' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanWalk, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_CanWalk::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateMaxSpeed
// 0x001C (0x001C - 0x0000)
struct BP_AJBInGameCharacter_C_UpdateMaxSpeed final
{
public:
	bool                                          CallFunc_IsCritical_IsCritical;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxCrouchedSpeed_MaxCrouchedSpeed;     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxMoveSpeed_MaxSpeed;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveToCritical_bIsActiveToCritical;   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxMoveSpeed_MaxSpeed1;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue1;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_UpdateMaxSpeed) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_UpdateMaxSpeed");
static_assert(sizeof(BP_AJBInGameCharacter_C_UpdateMaxSpeed) == 0x00001C, "Wrong size on BP_AJBInGameCharacter_C_UpdateMaxSpeed");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMaxSpeed, CallFunc_IsCritical_IsCritical) == 0x000000, "Member 'BP_AJBInGameCharacter_C_UpdateMaxSpeed::CallFunc_IsCritical_IsCritical' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMaxSpeed, CallFunc_GetMaxCrouchedSpeed_MaxCrouchedSpeed) == 0x000004, "Member 'BP_AJBInGameCharacter_C_UpdateMaxSpeed::CallFunc_GetMaxCrouchedSpeed_MaxCrouchedSpeed' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMaxSpeed, CallFunc_GetMaxMoveSpeed_MaxSpeed) == 0x000008, "Member 'BP_AJBInGameCharacter_C_UpdateMaxSpeed::CallFunc_GetMaxMoveSpeed_MaxSpeed' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMaxSpeed, CallFunc_IsActiveToCritical_bIsActiveToCritical) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_UpdateMaxSpeed::CallFunc_IsActiveToCritical_bIsActiveToCritical' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMaxSpeed, CallFunc_BooleanOR_ReturnValue) == 0x00000D, "Member 'BP_AJBInGameCharacter_C_UpdateMaxSpeed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMaxSpeed, Temp_bool_Variable) == 0x00000E, "Member 'BP_AJBInGameCharacter_C_UpdateMaxSpeed::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMaxSpeed, CallFunc_GetMaxMoveSpeed_MaxSpeed1) == 0x000010, "Member 'BP_AJBInGameCharacter_C_UpdateMaxSpeed::CallFunc_GetMaxMoveSpeed_MaxSpeed1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMaxSpeed, K2Node_Select_Default) == 0x000014, "Member 'BP_AJBInGameCharacter_C_UpdateMaxSpeed::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMaxSpeed, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_UpdateMaxSpeed::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMaxSpeed, CallFunc_NotEqual_FloatFloat_ReturnValue1) == 0x000019, "Member 'BP_AJBInGameCharacter_C_UpdateMaxSpeed::CallFunc_NotEqual_FloatFloat_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ResetCameraType
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_ResetCameraType final
{
public:
	struct FST_CameraParam                        CallFunc_GetDefaultCameraParameter_CameraParam;    // 0x0000(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ResetCameraType) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_ResetCameraType");
static_assert(sizeof(BP_AJBInGameCharacter_C_ResetCameraType) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_ResetCameraType");
static_assert(offsetof(BP_AJBInGameCharacter_C_ResetCameraType, CallFunc_GetDefaultCameraParameter_CameraParam) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ResetCameraType::CallFunc_GetDefaultCameraParameter_CameraParam' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcCameraParam
// 0x0090 (0x0090 - 0x0000)
struct BP_AJBInGameCharacter_C_CalcCameraParam final
{
public:
	TArray<struct FST_CameraParam>                InParams;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FST_CameraParam                        ResultParam;                                       // 0x0010(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcCameraFOV_FOV;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcCameraInterpSpeed_CameraInterpSpeed;  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcCameraOffset_CameraOffset;            // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcCameraTargetLength_CameraLength;      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CameraParam                        CallFunc_GetDefaultCameraParameter_CameraParam;    // 0x0048(0x0018)(HasGetValueTypeHash)
	struct FST_CameraParam                        K2Node_MakeStruct_ST_CameraParam;                  // 0x0060(0x0018)(HasGetValueTypeHash)
	struct FST_CameraParam                        CallFunc_Array_Get_Item;                           // 0x0078(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CalcCameraParam) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CalcCameraParam");
static_assert(sizeof(BP_AJBInGameCharacter_C_CalcCameraParam) == 0x000090, "Wrong size on BP_AJBInGameCharacter_C_CalcCameraParam");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraParam, InParams) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CalcCameraParam::InParams' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraParam, ResultParam) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CalcCameraParam::ResultParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraParam, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CalcCameraParam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraParam, CallFunc_CalcCameraFOV_FOV) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_CalcCameraParam::CallFunc_CalcCameraFOV_FOV' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraParam, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_CalcCameraParam::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraParam, CallFunc_Greater_IntInt_ReturnValue1) == 0x000031, "Member 'BP_AJBInGameCharacter_C_CalcCameraParam::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraParam, CallFunc_CalcCameraInterpSpeed_CameraInterpSpeed) == 0x000034, "Member 'BP_AJBInGameCharacter_C_CalcCameraParam::CallFunc_CalcCameraInterpSpeed_CameraInterpSpeed' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraParam, CallFunc_CalcCameraOffset_CameraOffset) == 0x000038, "Member 'BP_AJBInGameCharacter_C_CalcCameraParam::CallFunc_CalcCameraOffset_CameraOffset' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraParam, CallFunc_CalcCameraTargetLength_CameraLength) == 0x000044, "Member 'BP_AJBInGameCharacter_C_CalcCameraParam::CallFunc_CalcCameraTargetLength_CameraLength' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraParam, CallFunc_GetDefaultCameraParameter_CameraParam) == 0x000048, "Member 'BP_AJBInGameCharacter_C_CalcCameraParam::CallFunc_GetDefaultCameraParameter_CameraParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraParam, K2Node_MakeStruct_ST_CameraParam) == 0x000060, "Member 'BP_AJBInGameCharacter_C_CalcCameraParam::K2Node_MakeStruct_ST_CameraParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraParam, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_AJBInGameCharacter_C_CalcCameraParam::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcCameraOffset
// 0x0138 (0x0138 - 0x0000)
struct BP_AJBInGameCharacter_C_CalcCameraOffset final
{
public:
	TArray<struct FST_CameraParam>                InParams;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CameraOffset;                                      // 0x0010(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ResultOffset;                                      // 0x001C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CameraParam                        CallFunc_GetDefaultCameraParameter_CameraParam;    // 0x0028(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X2;                           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CameraParam                        CallFunc_GetDefaultCameraParameter_CameraParam1;   // 0x0074(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X3;                           // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y3;                           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z3;                           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CameraParam                        CallFunc_Array_Get_Item;                           // 0x009C(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X4;                           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y4;                           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z4;                           // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X5;                           // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y5;                           // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z5;                           // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue1;                         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue2;                         // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x00F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x00FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X6;                           // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y6;                           // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z6;                           // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue3;         // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue3;                         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue4;         // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue4;                         // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue5;         // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue5;                         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue2;          // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CalcCameraOffset) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CalcCameraOffset");
static_assert(sizeof(BP_AJBInGameCharacter_C_CalcCameraOffset) == 0x000138, "Wrong size on BP_AJBInGameCharacter_C_CalcCameraOffset");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, InParams) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::InParams' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CameraOffset) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CameraOffset' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, ResultOffset) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::ResultOffset' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_GetDefaultCameraParameter_CameraParam) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_GetDefaultCameraParameter_CameraParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_BreakVector_X) == 0x000048, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_BreakVector_Y) == 0x00004C, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_BreakVector_Z) == 0x000050, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_BreakVector_X1) == 0x00005C, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_BreakVector_Y1) == 0x000060, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_BreakVector_Z1) == 0x000064, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_BreakVector_X2) == 0x000068, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_BreakVector_Y2) == 0x00006C, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_BreakVector_Z2) == 0x000070, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_GetDefaultCameraParameter_CameraParam1) == 0x000074, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_GetDefaultCameraParameter_CameraParam1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_BreakVector_X3) == 0x00008C, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_BreakVector_X3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_BreakVector_Y3) == 0x000090, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_BreakVector_Y3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_BreakVector_Z3) == 0x000094, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_BreakVector_Z3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, Temp_int_Array_Index_Variable) == 0x000098, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_Array_Get_Item) == 0x00009C, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_BreakVector_X4) == 0x0000B4, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_BreakVector_X4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_BreakVector_Y4) == 0x0000B8, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_BreakVector_Y4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_BreakVector_Z4) == 0x0000BC, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_BreakVector_Z4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_BreakVector_X5) == 0x0000C0, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_BreakVector_X5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_BreakVector_Y5) == 0x0000C4, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_BreakVector_Y5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_BreakVector_Z5) == 0x0000C8, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_BreakVector_Z5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_MakeVector_ReturnValue) == 0x0000CC, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000D8, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_Abs_ReturnValue) == 0x0000DC, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x0000E0, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x0000E4, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_Abs_ReturnValue1) == 0x0000E8, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_Abs_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_Abs_ReturnValue2) == 0x0000EC, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_Abs_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_MakeVector_ReturnValue1) == 0x0000F0, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_MakeVector_ReturnValue2) == 0x0000FC, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_BreakVector_X6) == 0x000108, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_BreakVector_X6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_BreakVector_Y6) == 0x00010C, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_BreakVector_Y6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_BreakVector_Z6) == 0x000110, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_BreakVector_Z6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_Subtract_FloatFloat_ReturnValue3) == 0x000114, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_Subtract_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_Abs_ReturnValue3) == 0x000118, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_Abs_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_Subtract_FloatFloat_ReturnValue4) == 0x00011C, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_Subtract_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000120, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_Abs_ReturnValue4) == 0x000124, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_Abs_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x000128, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_Subtract_FloatFloat_ReturnValue5) == 0x00012C, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_Subtract_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_Abs_ReturnValue5) == 0x000130, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_Abs_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraOffset, CallFunc_Greater_FloatFloat_ReturnValue2) == 0x000134, "Member 'BP_AJBInGameCharacter_C_CalcCameraOffset::CallFunc_Greater_FloatFloat_ReturnValue2' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcCameraTargetLength
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBInGameCharacter_C_CalcCameraTargetLength final
{
public:
	TArray<struct FST_CameraParam>                InParams;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                         CameraLength;                                      // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ResultTargetLength;                                // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CameraParam                        CallFunc_Array_Get_Item;                           // 0x0020(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CalcCameraTargetLength) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CalcCameraTargetLength");
static_assert(sizeof(BP_AJBInGameCharacter_C_CalcCameraTargetLength) == 0x000048, "Wrong size on BP_AJBInGameCharacter_C_CalcCameraTargetLength");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraTargetLength, InParams) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CalcCameraTargetLength::InParams' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraTargetLength, CameraLength) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CalcCameraTargetLength::CameraLength' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraTargetLength, ResultTargetLength) == 0x000014, "Member 'BP_AJBInGameCharacter_C_CalcCameraTargetLength::ResultTargetLength' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraTargetLength, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CalcCameraTargetLength::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraTargetLength, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_CalcCameraTargetLength::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraTargetLength, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AJBInGameCharacter_C_CalcCameraTargetLength::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraTargetLength, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_AJBInGameCharacter_C_CalcCameraTargetLength::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraTargetLength, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_AJBInGameCharacter_C_CalcCameraTargetLength::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraTargetLength, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_CalcCameraTargetLength::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraTargetLength, CallFunc_Less_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_AJBInGameCharacter_C_CalcCameraTargetLength::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcCameraInterpSpeed
// 0x0058 (0x0058 - 0x0000)
struct BP_AJBInGameCharacter_C_CalcCameraInterpSpeed final
{
public:
	TArray<struct FST_CameraParam>                InParams;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                         CameraInterpSpeed;                                 // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalInterpSpeed;                                  // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CameraParam                        CallFunc_Array_Get_Item;                           // 0x0028(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CalcCameraInterpSpeed) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CalcCameraInterpSpeed");
static_assert(sizeof(BP_AJBInGameCharacter_C_CalcCameraInterpSpeed) == 0x000058, "Wrong size on BP_AJBInGameCharacter_C_CalcCameraInterpSpeed");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraInterpSpeed, InParams) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CalcCameraInterpSpeed::InParams' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraInterpSpeed, CameraInterpSpeed) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CalcCameraInterpSpeed::CameraInterpSpeed' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraInterpSpeed, TotalInterpSpeed) == 0x000014, "Member 'BP_AJBInGameCharacter_C_CalcCameraInterpSpeed::TotalInterpSpeed' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraInterpSpeed, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CalcCameraInterpSpeed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraInterpSpeed, CallFunc_Array_Length_ReturnValue1) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_CalcCameraInterpSpeed::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraInterpSpeed, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_AJBInGameCharacter_C_CalcCameraInterpSpeed::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraInterpSpeed, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000024, "Member 'BP_AJBInGameCharacter_C_CalcCameraInterpSpeed::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraInterpSpeed, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CalcCameraInterpSpeed::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraInterpSpeed, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_AJBInGameCharacter_C_CalcCameraInterpSpeed::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraInterpSpeed, CallFunc_Add_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_AJBInGameCharacter_C_CalcCameraInterpSpeed::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraInterpSpeed, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_AJBInGameCharacter_C_CalcCameraInterpSpeed::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraInterpSpeed, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_AJBInGameCharacter_C_CalcCameraInterpSpeed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraInterpSpeed, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_AJBInGameCharacter_C_CalcCameraInterpSpeed::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DebugPrintCameraParam
// 0x01C8 (0x01C8 - 0x0000)
struct BP_AJBInGameCharacter_C_DebugPrintCameraParam final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x0050(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x0090(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData3;             // 0x00D0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData4;             // 0x0110(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData5;             // 0x0150(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0190(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01A0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_DebugPrintCameraParam) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_DebugPrintCameraParam");
static_assert(sizeof(BP_AJBInGameCharacter_C_DebugPrintCameraParam) == 0x0001C8, "Wrong size on BP_AJBInGameCharacter_C_DebugPrintCameraParam");
static_assert(offsetof(BP_AJBInGameCharacter_C_DebugPrintCameraParam, Duration) == 0x000000, "Member 'BP_AJBInGameCharacter_C_DebugPrintCameraParam::Duration' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DebugPrintCameraParam, CallFunc_BreakVector_X) == 0x000004, "Member 'BP_AJBInGameCharacter_C_DebugPrintCameraParam::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DebugPrintCameraParam, CallFunc_BreakVector_Y) == 0x000008, "Member 'BP_AJBInGameCharacter_C_DebugPrintCameraParam::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DebugPrintCameraParam, CallFunc_BreakVector_Z) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_DebugPrintCameraParam::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DebugPrintCameraParam, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'BP_AJBInGameCharacter_C_DebugPrintCameraParam::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DebugPrintCameraParam, K2Node_MakeStruct_FormatArgumentData1) == 0x000050, "Member 'BP_AJBInGameCharacter_C_DebugPrintCameraParam::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DebugPrintCameraParam, K2Node_MakeStruct_FormatArgumentData2) == 0x000090, "Member 'BP_AJBInGameCharacter_C_DebugPrintCameraParam::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DebugPrintCameraParam, K2Node_MakeStruct_FormatArgumentData3) == 0x0000D0, "Member 'BP_AJBInGameCharacter_C_DebugPrintCameraParam::K2Node_MakeStruct_FormatArgumentData3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DebugPrintCameraParam, K2Node_MakeStruct_FormatArgumentData4) == 0x000110, "Member 'BP_AJBInGameCharacter_C_DebugPrintCameraParam::K2Node_MakeStruct_FormatArgumentData4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DebugPrintCameraParam, K2Node_MakeStruct_FormatArgumentData5) == 0x000150, "Member 'BP_AJBInGameCharacter_C_DebugPrintCameraParam::K2Node_MakeStruct_FormatArgumentData5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DebugPrintCameraParam, K2Node_MakeArray_Array) == 0x000190, "Member 'BP_AJBInGameCharacter_C_DebugPrintCameraParam::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DebugPrintCameraParam, CallFunc_Format_ReturnValue) == 0x0001A0, "Member 'BP_AJBInGameCharacter_C_DebugPrintCameraParam::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DebugPrintCameraParam, CallFunc_Conv_TextToString_ReturnValue) == 0x0001B8, "Member 'BP_AJBInGameCharacter_C_DebugPrintCameraParam::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SkillActivated
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameCharacter_C_SkillActivated final
{
public:
	class UBP_AJBSkillBase_C*                     ActivatedSkill;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CallFunc_Map_Keys_Keys;                            // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillInfo_bResult;                     // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FST_SkillInfo                          CallFunc_GetSkillInfo_SkillInfo;                   // 0x002E(0x0002)(HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SkillActivated) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_SkillActivated");
static_assert(sizeof(BP_AJBInGameCharacter_C_SkillActivated) == 0x000038, "Wrong size on BP_AJBInGameCharacter_C_SkillActivated");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillActivated, ActivatedSkill) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SkillActivated::ActivatedSkill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillActivated, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_AJBInGameCharacter_C_SkillActivated::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillActivated, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_SkillActivated::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillActivated, CallFunc_Map_Keys_Keys) == 0x000010, "Member 'BP_AJBInGameCharacter_C_SkillActivated::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillActivated, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AJBInGameCharacter_C_SkillActivated::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillActivated, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_SkillActivated::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillActivated, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_SkillActivated::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillActivated, CallFunc_GetSkillInfo_bResult) == 0x00002D, "Member 'BP_AJBInGameCharacter_C_SkillActivated::CallFunc_GetSkillInfo_bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillActivated, CallFunc_GetSkillInfo_SkillInfo) == 0x00002E, "Member 'BP_AJBInGameCharacter_C_SkillActivated::CallFunc_GetSkillInfo_SkillInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillActivated, CallFunc_MatchesTag_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_SkillActivated::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillActivated, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'BP_AJBInGameCharacter_C_SkillActivated::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillActivated, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_AJBInGameCharacter_C_SkillActivated::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SkillInactivated
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameCharacter_C_SkillInactivated final
{
public:
	class UBP_AJBSkillBase_C*                     InactivatedSkill;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     CallFunc_GetBasicSkill_BasicSkill;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBAccompanySkill_C*                K2Node_DynamicCast_AsBP_AJBAccompany_Skill;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSeparateSkill_C*                 K2Node_DynamicCast_AsBP_AJBSeparate_Skill;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SkillInactivated) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_SkillInactivated");
static_assert(sizeof(BP_AJBInGameCharacter_C_SkillInactivated) == 0x000038, "Wrong size on BP_AJBInGameCharacter_C_SkillInactivated");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillInactivated, InactivatedSkill) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SkillInactivated::InactivatedSkill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillInactivated, CallFunc_HasLocalSharedController_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_SkillInactivated::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillInactivated, CallFunc_GetBasicSkill_BasicSkill) == 0x000010, "Member 'BP_AJBInGameCharacter_C_SkillInactivated::CallFunc_GetBasicSkill_BasicSkill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillInactivated, K2Node_DynamicCast_AsBP_AJBAccompany_Skill) == 0x000018, "Member 'BP_AJBInGameCharacter_C_SkillInactivated::K2Node_DynamicCast_AsBP_AJBAccompany_Skill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillInactivated, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameCharacter_C_SkillInactivated::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillInactivated, K2Node_DynamicCast_AsBP_AJBSeparate_Skill) == 0x000028, "Member 'BP_AJBInGameCharacter_C_SkillInactivated::K2Node_DynamicCast_AsBP_AJBSeparate_Skill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillInactivated, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_AJBInGameCharacter_C_SkillInactivated::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillInactivated, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000031, "Member 'BP_AJBInGameCharacter_C_SkillInactivated::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillInactivated, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'BP_AJBInGameCharacter_C_SkillInactivated::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillInactivated, CallFunc_IsValid_ReturnValue) == 0x000033, "Member 'BP_AJBInGameCharacter_C_SkillInactivated::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillInactivated, CallFunc_BooleanAND_ReturnValue) == 0x000034, "Member 'BP_AJBInGameCharacter_C_SkillInactivated::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillInactivated, CallFunc_BooleanAND_ReturnValue1) == 0x000035, "Member 'BP_AJBInGameCharacter_C_SkillInactivated::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetBasicSkill
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameCharacter_C_GetBasicSkill final
{
public:
	class UBP_AJBSkillBase_C*                     BasicSkill;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBAimSkill_C*                      CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSeparateSkill_C*                 CallFunc_GetComponentByClass_ReturnValue1;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBAccompanySkill_C*                CallFunc_GetComponentByClass_ReturnValue2;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetBasicSkill) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_GetBasicSkill");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetBasicSkill) == 0x000038, "Wrong size on BP_AJBInGameCharacter_C_GetBasicSkill");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBasicSkill, BasicSkill) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetBasicSkill::BasicSkill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBasicSkill, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_GetBasicSkill::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBasicSkill, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_GetBasicSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBasicSkill, CallFunc_GetComponentByClass_ReturnValue1) == 0x000018, "Member 'BP_AJBInGameCharacter_C_GetBasicSkill::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBasicSkill, CallFunc_IsValid_ReturnValue1) == 0x000020, "Member 'BP_AJBInGameCharacter_C_GetBasicSkill::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBasicSkill, CallFunc_GetComponentByClass_ReturnValue2) == 0x000028, "Member 'BP_AJBInGameCharacter_C_GetBasicSkill::CallFunc_GetComponentByClass_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBasicSkill, CallFunc_IsValid_ReturnValue2) == 0x000030, "Member 'BP_AJBInGameCharacter_C_GetBasicSkill::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeViewMode
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeViewMode final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bResetInputValue;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           FactorTag;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeViewMode) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeViewMode");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeViewMode) == 0x000020, "Wrong size on BP_AJBInGameCharacter_C_ChangeViewMode");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeViewMode, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeViewMode::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeViewMode, bResetInputValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_ChangeViewMode::bResetInputValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeViewMode, FactorTag) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ChangeViewMode::FactorTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeViewMode, Temp_float_Variable) == 0x000010, "Member 'BP_AJBInGameCharacter_C_ChangeViewMode::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeViewMode, Temp_float_Variable1) == 0x000014, "Member 'BP_AJBInGameCharacter_C_ChangeViewMode::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeViewMode, Temp_bool_Variable) == 0x000018, "Member 'BP_AJBInGameCharacter_C_ChangeViewMode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeViewMode, K2Node_Select_Default) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_ChangeViewMode::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckEnableInputCameraOnly
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckEnableInputCameraOnly final
{
public:
	bool                                          bReturnValue;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckEnableInputCameraOnly) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CheckEnableInputCameraOnly");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckEnableInputCameraOnly) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_CheckEnableInputCameraOnly");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckEnableInputCameraOnly, bReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckEnableInputCameraOnly::bReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeActiveBehavior
// 0x0068 (0x0068 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeActiveBehavior final
{
public:
	ECharacterActiveBehavior                      NextBehavior;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           FactorTag;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bMainCharacter;                                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharacterActiveBehavior                      CallFunc_GetBreakDownInfo_OutNewBehavilr;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBreakDownInfo_bSpecialBreakDown;       // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBreakDownInfo_bIgnoreCheckChanging;    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetBreakDownInfo_FactorTags;              // 0x0018(0x0020)()
	bool                                          CallFunc_GetBreakDownInfo_bBreakDownBoth;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBCharacterActiveBehaviorInfo        K2Node_MakeStruct_AJBCharacterActiveBehaviorInfo;  // 0x0040(0x0028)()
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeActiveBehavior) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeActiveBehavior");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeActiveBehavior) == 0x000068, "Wrong size on BP_AJBInGameCharacter_C_ChangeActiveBehavior");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeActiveBehavior, NextBehavior) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeActiveBehavior::NextBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeActiveBehavior, FactorTag) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ChangeActiveBehavior::FactorTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeActiveBehavior, bMainCharacter) == 0x000010, "Member 'BP_AJBInGameCharacter_C_ChangeActiveBehavior::bMainCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeActiveBehavior, CallFunc_GetBreakDownInfo_OutNewBehavilr) == 0x000011, "Member 'BP_AJBInGameCharacter_C_ChangeActiveBehavior::CallFunc_GetBreakDownInfo_OutNewBehavilr' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeActiveBehavior, CallFunc_GetBreakDownInfo_bSpecialBreakDown) == 0x000012, "Member 'BP_AJBInGameCharacter_C_ChangeActiveBehavior::CallFunc_GetBreakDownInfo_bSpecialBreakDown' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeActiveBehavior, CallFunc_GetBreakDownInfo_bIgnoreCheckChanging) == 0x000013, "Member 'BP_AJBInGameCharacter_C_ChangeActiveBehavior::CallFunc_GetBreakDownInfo_bIgnoreCheckChanging' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeActiveBehavior, CallFunc_GetBreakDownInfo_FactorTags) == 0x000018, "Member 'BP_AJBInGameCharacter_C_ChangeActiveBehavior::CallFunc_GetBreakDownInfo_FactorTags' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeActiveBehavior, CallFunc_GetBreakDownInfo_bBreakDownBoth) == 0x000038, "Member 'BP_AJBInGameCharacter_C_ChangeActiveBehavior::CallFunc_GetBreakDownInfo_bBreakDownBoth' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeActiveBehavior, K2Node_MakeStruct_AJBCharacterActiveBehaviorInfo) == 0x000040, "Member 'BP_AJBInGameCharacter_C_ChangeActiveBehavior::K2Node_MakeStruct_AJBCharacterActiveBehaviorInfo' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ActiveBehaviorChanged
// 0x00E0 (0x00E0 - 0x0000)
struct BP_AJBInGameCharacter_C_ActiveBehaviorChanged final
{
public:
	struct FAJBCharacterActiveBehaviorInfo        BehaviorInfo;                                      // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bTempIgnoreCheckChanging;                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTempSpecialBreakDown;                             // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharacterActiveBehavior                      TempNewBehavior;                                   // 0x002A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      TempOldBehavior;                                   // 0x002B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameMovableStand_C*            K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue; // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameMovableStand_C*            K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand1; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue2;           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue3;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_AJBSkillBase_C*>             CallFunc_GetComponentsByClass_ReturnValue;         // 0x0078(0x0010)(ZeroConstructor, ReferenceParm)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillActive_ReturnValue;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSkillActive_IsActive;                // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UBP_AJBSkillBase_C*>             CallFunc_GetComponentsByClass_ReturnValue1;        // 0x00A0(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item1;                          // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillActive_ReturnValue1;               // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue4;           // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ActiveBehaviorChanged");
static_assert(sizeof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged) == 0x0000E0, "Wrong size on BP_AJBInGameCharacter_C_ActiveBehaviorChanged");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, BehaviorInfo) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::BehaviorInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, bTempIgnoreCheckChanging) == 0x000028, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::bTempIgnoreCheckChanging' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, bTempSpecialBreakDown) == 0x000029, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::bTempSpecialBreakDown' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, TempNewBehavior) == 0x00002A, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::TempNewBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, TempOldBehavior) == 0x00002B, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::TempOldBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_IsDedicatedServer_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_PlayAnimMontage_ReturnValue) == 0x000034, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand) == 0x000038, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000041, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000042, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, K2Node_SwitchEnum1_CmpSuccess) == 0x000043, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000044, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_CheckCharacterBehavior_Active_bReturnValue) == 0x000045, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_CheckCharacterBehavior_Active_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_IsDedicatedServer_ReturnValue1) == 0x000046, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_BooleanOR_ReturnValue) == 0x000047, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_IsValid_ReturnValue1) == 0x000048, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand1) == 0x000050, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, K2Node_DynamicCast_bSuccess1) == 0x000058, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_IsDedicatedServer_ReturnValue2) == 0x000059, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_IsDedicatedServer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_GetAnimInstance_ReturnValue) == 0x000060, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_Montage_IsPlaying_ReturnValue) == 0x000068, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_Montage_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, Temp_bool_Variable) == 0x000069, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, Temp_int_Array_Index_Variable1) == 0x00006C, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_IsDedicatedServer_ReturnValue3) == 0x000070, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_IsDedicatedServer_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_GetComponentsByClass_ReturnValue) == 0x000078, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_IsSkillActive_ReturnValue) == 0x000094, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_IsSkillActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_Not_PreBool_ReturnValue) == 0x00009C, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_CheckSkillActive_IsActive) == 0x00009D, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_CheckSkillActive_IsActive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_HasLocalSharedController_ReturnValue) == 0x00009E, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_Not_PreBool_ReturnValue1) == 0x00009F, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_GetComponentsByClass_ReturnValue1) == 0x0000A0, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_GetComponentsByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, Temp_int_Loop_Counter_Variable1) == 0x0000B0, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_Array_Get_Item1) == 0x0000B8, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_IsSkillActive_ReturnValue1) == 0x0000C0, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_IsSkillActive_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_Less_IntInt_ReturnValue) == 0x0000C1, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_BooleanAND_ReturnValue) == 0x0000C2, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_BooleanAND_ReturnValue1) == 0x0000C3, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_Add_IntInt_ReturnValue1) == 0x0000C4, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_Array_Length_ReturnValue1) == 0x0000C8, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_HasLocalSharedController_ReturnValue1) == 0x0000CC, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_Less_IntInt_ReturnValue1) == 0x0000CD, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_IsDedicatedServer_ReturnValue4) == 0x0000CE, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_IsDedicatedServer_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_MakeLiteralByte_ReturnValue) == 0x0000CF, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_Subtract_ByteByte_ReturnValue) == 0x0000D0, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000D4, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, Temp_bool_Variable1) == 0x0000D8, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, K2Node_Select_Default) == 0x0000D9, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ActiveBehaviorChanged, CallFunc_BooleanAND_ReturnValue2) == 0x0000DA, "Member 'BP_AJBInGameCharacter_C_ActiveBehaviorChanged::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.StopMontage
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_StopMontage final
{
public:
	float                                         InBlendOutTime;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UAnimMontage*                     Montage;                                           // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_StopMontage) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_StopMontage");
static_assert(sizeof(BP_AJBInGameCharacter_C_StopMontage) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_StopMontage");
static_assert(offsetof(BP_AJBInGameCharacter_C_StopMontage, InBlendOutTime) == 0x000000, "Member 'BP_AJBInGameCharacter_C_StopMontage::InBlendOutTime' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_StopMontage, Montage) == 0x000008, "Member 'BP_AJBInGameCharacter_C_StopMontage::Montage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_StopMontage, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_StopMontage::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetCameraLookupSpeedScale
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_SetCameraLookupSpeedScale final
{
public:
	float                                         LookUpScale;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SetCameraLookupSpeedScale) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_SetCameraLookupSpeedScale");
static_assert(sizeof(BP_AJBInGameCharacter_C_SetCameraLookupSpeedScale) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_SetCameraLookupSpeedScale");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetCameraLookupSpeedScale, LookUpScale) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SetCameraLookupSpeedScale::LookUpScale' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckAnyActiveSkillActive
// 0x0060 (0x0060 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive final
{
public:
	class UClass*                                 IgnoreSkillClass;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIncludeReady;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bActive;                                           // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     CallFunc_GetBasicSkill_BasicSkill;                 // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AJBSkillBase_C*>             CallFunc_GetComponentsByClass_ReturnValue;         // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillActive_ReturnValue;                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue1;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue1;         // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive) == 0x000060, "Wrong size on BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive, IgnoreSkillClass) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive::IgnoreSkillClass' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive, bIncludeReady) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive::bIncludeReady' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive, bActive) == 0x000009, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive::bActive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive, CallFunc_GetBasicSkill_BasicSkill) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive::CallFunc_GetBasicSkill_BasicSkill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive, CallFunc_GetObjectClass_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive, CallFunc_GetComponentsByClass_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive, CallFunc_IsSkillActive_ReturnValue) == 0x00004C, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive::CallFunc_IsSkillActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive, CallFunc_Less_IntInt_ReturnValue) == 0x00004D, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive, CallFunc_GetObjectClass_ReturnValue1) == 0x000050, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive::CallFunc_GetObjectClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x000058, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive, CallFunc_NotEqual_ClassClass_ReturnValue1) == 0x000059, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive::CallFunc_NotEqual_ClassClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive, CallFunc_BooleanAND_ReturnValue) == 0x00005A, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive, CallFunc_BooleanAND_ReturnValue1) == 0x00005B, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillActive::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckActiveBehavior
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckActiveBehavior final
{
public:
	ECharacterActiveBehavior                      Behavior;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRetValue;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckActiveBehavior) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CheckActiveBehavior");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckActiveBehavior) == 0x000003, "Wrong size on BP_AJBInGameCharacter_C_CheckActiveBehavior");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehavior, Behavior) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehavior::Behavior' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehavior, bRetValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehavior::bRetValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehavior, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehavior::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryCancelEmote
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_TryCancelEmote final
{
public:
	bool                                          bForce;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_TryCancelEmote) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_TryCancelEmote");
static_assert(sizeof(BP_AJBInGameCharacter_C_TryCancelEmote) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_TryCancelEmote");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryCancelEmote, bForce) == 0x000000, "Member 'BP_AJBInGameCharacter_C_TryCancelEmote::bForce' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryCancelEmote, CallFunc_CheckActiveBehaviorIsEmote_bRetValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_TryCancelEmote::CallFunc_CheckActiveBehaviorIsEmote_bRetValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryCancelEmote, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'BP_AJBInGameCharacter_C_TryCancelEmote::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryCancelEmote, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_AJBInGameCharacter_C_TryCancelEmote::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ForceInactiveBasicSkill
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_ForceInactiveBasicSkill final
{
public:
	class UBP_AJBSkillBase_C*                     CallFunc_GetBasicSkill_BasicSkill;                 // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ForceInactiveBasicSkill) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ForceInactiveBasicSkill");
static_assert(sizeof(BP_AJBInGameCharacter_C_ForceInactiveBasicSkill) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_ForceInactiveBasicSkill");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceInactiveBasicSkill, CallFunc_GetBasicSkill_BasicSkill) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ForceInactiveBasicSkill::CallFunc_GetBasicSkill_BasicSkill' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetSystemEnable
// 0x000D (0x000D - 0x0000)
struct BP_AJBInGameCharacter_C_SetSystemEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCollision;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bGravity;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSpringArm;                                        // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bMovement;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EMovementMode                                 Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable1;                               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable2;                               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 Temp_byte_Variable3;                               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_Select1_Default;                            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SetSystemEnable) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_SetSystemEnable");
static_assert(sizeof(BP_AJBInGameCharacter_C_SetSystemEnable) == 0x00000D, "Wrong size on BP_AJBInGameCharacter_C_SetSystemEnable");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetSystemEnable, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SetSystemEnable::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetSystemEnable, bCollision) == 0x000001, "Member 'BP_AJBInGameCharacter_C_SetSystemEnable::bCollision' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetSystemEnable, bGravity) == 0x000002, "Member 'BP_AJBInGameCharacter_C_SetSystemEnable::bGravity' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetSystemEnable, bSpringArm) == 0x000003, "Member 'BP_AJBInGameCharacter_C_SetSystemEnable::bSpringArm' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetSystemEnable, bMovement) == 0x000004, "Member 'BP_AJBInGameCharacter_C_SetSystemEnable::bMovement' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetSystemEnable, Temp_byte_Variable) == 0x000005, "Member 'BP_AJBInGameCharacter_C_SetSystemEnable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetSystemEnable, Temp_bool_Variable) == 0x000006, "Member 'BP_AJBInGameCharacter_C_SetSystemEnable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetSystemEnable, Temp_byte_Variable1) == 0x000007, "Member 'BP_AJBInGameCharacter_C_SetSystemEnable::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetSystemEnable, Temp_byte_Variable2) == 0x000008, "Member 'BP_AJBInGameCharacter_C_SetSystemEnable::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetSystemEnable, Temp_byte_Variable3) == 0x000009, "Member 'BP_AJBInGameCharacter_C_SetSystemEnable::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetSystemEnable, Temp_bool_Variable1) == 0x00000A, "Member 'BP_AJBInGameCharacter_C_SetSystemEnable::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetSystemEnable, K2Node_Select_Default) == 0x00000B, "Member 'BP_AJBInGameCharacter_C_SetSystemEnable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetSystemEnable, K2Node_Select1_Default) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_SetSystemEnable::K2Node_Select1_Default' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ResetSystemEnable
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_ResetSystemEnable final
{
public:
	bool                                          bRestore;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ResetSystemEnable) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ResetSystemEnable");
static_assert(sizeof(BP_AJBInGameCharacter_C_ResetSystemEnable) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_ResetSystemEnable");
static_assert(offsetof(BP_AJBInGameCharacter_C_ResetSystemEnable, bRestore) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ResetSystemEnable::bRestore' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeSystemEnable
// 0x0005 (0x0005 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeSystemEnable final
{
public:
	bool                                          bCollision;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bGravity;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSpringArm;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bMovement;                                         // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRestore;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeSystemEnable) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeSystemEnable");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeSystemEnable) == 0x000005, "Wrong size on BP_AJBInGameCharacter_C_ChangeSystemEnable");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSystemEnable, bCollision) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeSystemEnable::bCollision' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSystemEnable, bGravity) == 0x000001, "Member 'BP_AJBInGameCharacter_C_ChangeSystemEnable::bGravity' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSystemEnable, bSpringArm) == 0x000002, "Member 'BP_AJBInGameCharacter_C_ChangeSystemEnable::bSpringArm' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSystemEnable, bMovement) == 0x000003, "Member 'BP_AJBInGameCharacter_C_ChangeSystemEnable::bMovement' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSystemEnable, bRestore) == 0x000004, "Member 'BP_AJBInGameCharacter_C_ChangeSystemEnable::bRestore' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeSystemDisable
// 0x0005 (0x0005 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeSystemDisable final
{
public:
	bool                                          bCollision;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bGravity;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSpringArm;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bMovement;                                         // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRestore;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeSystemDisable) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeSystemDisable");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeSystemDisable) == 0x000005, "Wrong size on BP_AJBInGameCharacter_C_ChangeSystemDisable");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSystemDisable, bCollision) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeSystemDisable::bCollision' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSystemDisable, bGravity) == 0x000001, "Member 'BP_AJBInGameCharacter_C_ChangeSystemDisable::bGravity' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSystemDisable, bSpringArm) == 0x000002, "Member 'BP_AJBInGameCharacter_C_ChangeSystemDisable::bSpringArm' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSystemDisable, bMovement) == 0x000003, "Member 'BP_AJBInGameCharacter_C_ChangeSystemDisable::bMovement' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSystemDisable, bRestore) == 0x000004, "Member 'BP_AJBInGameCharacter_C_ChangeSystemDisable::bRestore' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CancelPosture
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_CancelPosture final
{
public:
	bool                                          bShouldInactiveBasicSkill;                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CancelPosture) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CancelPosture");
static_assert(sizeof(BP_AJBInGameCharacter_C_CancelPosture) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_CancelPosture");
static_assert(offsetof(BP_AJBInGameCharacter_C_CancelPosture, bShouldInactiveBasicSkill) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CancelPosture::bShouldInactiveBasicSkill' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.LowerSpread
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_LowerSpread final
{
public:
	float                                         Spread;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HealStopTime;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_LowerSpread) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_LowerSpread");
static_assert(sizeof(BP_AJBInGameCharacter_C_LowerSpread) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_LowerSpread");
static_assert(offsetof(BP_AJBInGameCharacter_C_LowerSpread, Spread) == 0x000000, "Member 'BP_AJBInGameCharacter_C_LowerSpread::Spread' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_LowerSpread, HealStopTime) == 0x000004, "Member 'BP_AJBInGameCharacter_C_LowerSpread::HealStopTime' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_LowerSpread, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_LowerSpread::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_LowerSpread, CallFunc_FClamp_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_LowerSpread::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RaiseSpread
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameCharacter_C_RaiseSpread final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_RaiseSpread) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_RaiseSpread");
static_assert(sizeof(BP_AJBInGameCharacter_C_RaiseSpread) == 0x00000C, "Wrong size on BP_AJBInGameCharacter_C_RaiseSpread");
static_assert(offsetof(BP_AJBInGameCharacter_C_RaiseSpread, Value) == 0x000000, "Member 'BP_AJBInGameCharacter_C_RaiseSpread::Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RaiseSpread, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_RaiseSpread::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RaiseSpread, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_RaiseSpread::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateSpread
// 0x0014 (0x0014 - 0x0000)
struct BP_AJBInGameCharacter_C_UpdateSpread final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_UpdateSpread) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_UpdateSpread");
static_assert(sizeof(BP_AJBInGameCharacter_C_UpdateSpread) == 0x000014, "Wrong size on BP_AJBInGameCharacter_C_UpdateSpread");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateSpread, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameCharacter_C_UpdateSpread::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateSpread, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_UpdateSpread::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateSpread, CallFunc_FMax_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_UpdateSpread::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateSpread, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_UpdateSpread::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateSpread, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00000D, "Member 'BP_AJBInGameCharacter_C_UpdateSpread::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateSpread, CallFunc_HasLocalSharedController_ReturnValue) == 0x00000E, "Member 'BP_AJBInGameCharacter_C_UpdateSpread::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateSpread, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_UpdateSpread::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeSpreadParam
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeSpreadParam final
{
public:
	float                                         SpreadMin_1080p_;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpreadMax_1080p_;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         S__0;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue1;     // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue2;     // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeSpreadParam) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeSpreadParam");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeSpreadParam) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_ChangeSpreadParam");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpreadParam, SpreadMin_1080p_) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeSpreadParam::SpreadMin_1080p_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpreadParam, SpreadMax_1080p_) == 0x000004, "Member 'BP_AJBInGameCharacter_C_ChangeSpreadParam::SpreadMax_1080p_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpreadParam, S__0) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ChangeSpreadParam::S__0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpreadParam, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_ChangeSpreadParam::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpreadParam, CallFunc_GreaterEqual_FloatFloat_ReturnValue1) == 0x00000D, "Member 'BP_AJBInGameCharacter_C_ChangeSpreadParam::CallFunc_GreaterEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpreadParam, CallFunc_GreaterEqual_FloatFloat_ReturnValue2) == 0x00000E, "Member 'BP_AJBInGameCharacter_C_ChangeSpreadParam::CallFunc_GreaterEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpreadParam, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000F, "Member 'BP_AJBInGameCharacter_C_ChangeSpreadParam::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsAim
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_IsAim final
{
public:
	bool                                          bAim;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSkillActive_IsActive;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IsAim) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_IsAim");
static_assert(sizeof(BP_AJBInGameCharacter_C_IsAim) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_IsAim");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsAim, bAim) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IsAim::bAim' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsAim, CallFunc_CheckSkillActive_IsActive) == 0x000001, "Member 'BP_AJBInGameCharacter_C_IsAim::CallFunc_CheckSkillActive_IsActive' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeJumpEnable
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeJumpEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeJumpEnable) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeJumpEnable");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeJumpEnable) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_ChangeJumpEnable");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeJumpEnable, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeJumpEnable::bEnable' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeSprintEnable
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeSprintEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeSprintEnable) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeSprintEnable");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeSprintEnable) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_ChangeSprintEnable");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSprintEnable, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeSprintEnable::bEnable' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetMaxCrouchedSpeed
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_GetMaxCrouchedSpeed final
{
public:
	float                                         MaxCrouchedSpeed;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetMaxCrouchedSpeed) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_GetMaxCrouchedSpeed");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetMaxCrouchedSpeed) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_GetMaxCrouchedSpeed");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetMaxCrouchedSpeed, MaxCrouchedSpeed) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetMaxCrouchedSpeed::MaxCrouchedSpeed' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetMaxCrouchedSpeed, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_GetMaxCrouchedSpeed::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.PredictionAttackHit
// 0x0570 (0x0570 - 0x0000)
struct BP_AJBInGameCharacter_C_PredictionAttackHit final
{
public:
	bool                                          bHit;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TempAttackCollisionRadius;                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempStandAttackOffset;                             // 0x0008(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempStandBaseLocation;                             // 0x0014(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TempStand;                                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempTargetDirection;                               // 0x0028(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempEndLocation;                                   // 0x0034(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempStartLocation;                                 // 0x0040(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTempTargetHit;                                    // 0x004C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        TempTargetComponent;                               // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TempTargetActor;                                   // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempTargetLocation;                                // 0x0060(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface;              // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReactedByReticule_bResult;              // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface1;             // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDisableDamage_bDisableDamage;        // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_GetHitObjectTypesByPrevTrace_NewParam;    // 0x00A0(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class AActor*                                 CallFunc_GetPoliticStandAsActor_Actor;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_FighterInterface_C> K2Node_DynamicCast_AsBI_Fighter_Interface;         // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttackCollisionRadius_Radius;          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_AJBMultiSphereTraceForObjects_OutHits;    // 0x00F0(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_AJBMultiSphereTraceForObjects_ReturnValue; // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0108(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_196[0x2];                                      // 0x0196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0204(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPredictionAttackHitBlocked_bBlocked; // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_216[0x2];                                      // 0x0216(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface2;             // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDisableDamage_bDisableDamage1;       // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReactedByReticule_bResult1;             // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x022B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bCharacter;                   // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bLeftAP;                      // 0x022E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22F[0x1];                                      // 0x022F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_OwnHitParam_ParticleTagBlockedByAAP;      // 0x0230(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_OwnHitParam_SETagBlockedByAAP;            // 0x0238(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckTargetSelf_bTarget;                  // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_242[0x2];                                      // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface3;             // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReactedByReticule_bResult2;             // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_GetHitObjectTypesByPrevTrace_NewParam1;   // 0x0268(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class AActor*>                         K2Node_MakeArray_Array1;                           // 0x0278(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class AActor*                                 CallFunc_GetPoliticStandAsActor_Actor1;            // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_FighterInterface_C> K2Node_DynamicCast_AsBI_Fighter_Interface1;        // 0x0290(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttackCollisionRadius_Radius1;         // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_AJBMultiSphereTraceForObjects_OutHits1;   // 0x02A8(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_AJBMultiSphereTraceForObjects_ReturnValue1; // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item1;                          // 0x02C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit1;             // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap1;          // 0x034D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E[0x2];                                      // 0x034E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time1;                     // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance1;                 // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location1;                 // 0x0358(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint1;              // 0x0364(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal1;                   // 0x0370(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal1;             // 0x037C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat1;                  // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor1;                 // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent1;             // 0x0398(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName1;              // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem1;                  // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex1;                // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart1;               // 0x03B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd1;                 // 0x03BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPredictionAttackHitBlocked_bBlocked1; // 0x03C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x03CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CB[0x5];                                      // 0x03CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface4;             // 0x03D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReactedByReticule_bResult3;             // 0x03E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bCharacter1;                  // 0x03E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bLeftAP1;                     // 0x03E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_OwnHitParam_ParticleTagBlockedByAAP1;     // 0x03E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_OwnHitParam_SETagBlockedByAAP1;           // 0x03F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckTargetSelf_bTarget1;                 // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue; // 0x03FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FB[0x5];                                      // 0x03FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface; // 0x0400(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_411[0x3];                                      // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLaunchedActorHomeLocation_Location;    // 0x0414(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0420(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_FighterInterface_C> K2Node_DynamicCast_AsBI_Fighter_Interface2;        // 0x0430(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_441[0x3];                                      // 0x0441(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0444(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttackCollisionRadius_Radius2;         // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_FighterInterface_C> K2Node_DynamicCast_AsBI_Fighter_Interface3;        // 0x0458(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x3];                                      // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetStandAttackOffset_StandAttackOffset;   // 0x046C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0478(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0484(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetViewRotation_Rotation;                 // 0x0490(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x049C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_FighterInterface_C> K2Node_DynamicCast_AsBI_Fighter_Interface4;        // 0x04A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetPoliticStandAsActor_Actor2;            // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttackRange_AttackRange;               // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindTraceLocationsFromCamera_TraceStartLocation; // 0x04CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindTraceLocationsFromCamera_TraceEndLocation; // 0x04D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x04E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x04F0(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue1; // 0x04FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue2;            // 0x0508(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue3;            // 0x0514(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetViewRotation_Rotation1;                // 0x0520(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AJBMultiLineTrace_bTargetHit;             // 0x052C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52D[0x3];                                      // 0x052D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_AJBMultiLineTrace_TargetActor;            // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_AJBMultiLineTrace_TargetComponent;        // 0x0538(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AJBMultiLineTrace_TargetLocation;         // 0x0540(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue2; // 0x054C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1;       // 0x0558(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0569(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56A[0x2];                                      // 0x056A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_PredictionAttackHit) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_PredictionAttackHit");
static_assert(sizeof(BP_AJBInGameCharacter_C_PredictionAttackHit) == 0x000570, "Wrong size on BP_AJBInGameCharacter_C_PredictionAttackHit");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, bHit) == 0x000000, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::bHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, TempAttackCollisionRadius) == 0x000004, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::TempAttackCollisionRadius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, TempStandAttackOffset) == 0x000008, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::TempStandAttackOffset' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, TempStandBaseLocation) == 0x000014, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::TempStandBaseLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, TempStand) == 0x000020, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::TempStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, TempTargetDirection) == 0x000028, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::TempTargetDirection' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, TempEndLocation) == 0x000034, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::TempEndLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, TempStartLocation) == 0x000040, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::TempStartLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, bTempTargetHit) == 0x00004C, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::bTempTargetHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, TempTargetComponent) == 0x000050, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::TempTargetComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, TempTargetActor) == 0x000058, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::TempTargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, TempTargetLocation) == 0x000060, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::TempTargetLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_DynamicCast_AsBI_AJBInterface) == 0x000070, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_DynamicCast_AsBI_AJBInterface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_IsReactedByReticule_bResult) == 0x000081, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_IsReactedByReticule_bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_DynamicCast_AsBI_AJBInterface1) == 0x000088, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_DynamicCast_AsBI_AJBInterface1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_DynamicCast_bSuccess1) == 0x000098, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_CheckDisableDamage_bDisableDamage) == 0x000099, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_CheckDisableDamage_bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_Not_PreBool_ReturnValue) == 0x00009A, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_GetHitObjectTypesByPrevTrace_NewParam) == 0x0000A0, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_GetHitObjectTypesByPrevTrace_NewParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BooleanAND_ReturnValue) == 0x0000B0, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_GetPoliticStandAsActor_Actor) == 0x0000C8, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_GetPoliticStandAsActor_Actor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_DynamicCast_AsBI_Fighter_Interface) == 0x0000D0, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_DynamicCast_AsBI_Fighter_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_DynamicCast_bSuccess2) == 0x0000E0, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, Temp_int_Array_Index_Variable) == 0x0000E4, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_GetAttackCollisionRadius_Radius) == 0x0000E8, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_GetAttackCollisionRadius_Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_AJBMultiSphereTraceForObjects_OutHits) == 0x0000F0, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_AJBMultiSphereTraceForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_AJBMultiSphereTraceForObjects_ReturnValue) == 0x000100, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_AJBMultiSphereTraceForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_Array_Get_Item) == 0x000108, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_Array_Length_ReturnValue) == 0x000190, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_bBlockingHit) == 0x000194, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_bInitialOverlap) == 0x000195, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_Time) == 0x000198, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_Distance) == 0x00019C, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_Location) == 0x0001A0, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_ImpactPoint) == 0x0001AC, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_Normal) == 0x0001B8, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_ImpactNormal) == 0x0001C4, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_PhysMat) == 0x0001D0, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_HitActor) == 0x0001D8, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_HitComponent) == 0x0001E0, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_HitBoneName) == 0x0001E8, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_HitItem) == 0x0001F0, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_FaceIndex) == 0x0001F4, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_TraceStart) == 0x0001F8, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_TraceEnd) == 0x000204, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, Temp_int_Array_Index_Variable1) == 0x000210, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_CheckPredictionAttackHitBlocked_bBlocked) == 0x000214, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_CheckPredictionAttackHitBlocked_bBlocked' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_Not_PreBool_ReturnValue1) == 0x000215, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_DynamicCast_AsBI_AJBInterface2) == 0x000218, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_DynamicCast_AsBI_AJBInterface2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_DynamicCast_bSuccess3) == 0x000228, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_CheckDisableDamage_bDisableDamage1) == 0x000229, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_CheckDisableDamage_bDisableDamage1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_IsReactedByReticule_bResult1) == 0x00022A, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_IsReactedByReticule_bResult1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_Not_PreBool_ReturnValue2) == 0x00022B, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BooleanAND_ReturnValue1) == 0x00022C, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_OwnHitParam_bCharacter) == 0x00022D, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_OwnHitParam_bCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_OwnHitParam_bLeftAP) == 0x00022E, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_OwnHitParam_bLeftAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_OwnHitParam_ParticleTagBlockedByAAP) == 0x000230, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_OwnHitParam_ParticleTagBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_OwnHitParam_SETagBlockedByAAP) == 0x000238, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_OwnHitParam_SETagBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BooleanAND_ReturnValue2) == 0x000240, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_CheckTargetSelf_bTarget) == 0x000241, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_CheckTargetSelf_bTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, Temp_int_Loop_Counter_Variable) == 0x000244, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_DynamicCast_AsBI_AJBInterface3) == 0x000248, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_DynamicCast_AsBI_AJBInterface3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_DynamicCast_bSuccess4) == 0x000258, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_Add_IntInt_ReturnValue) == 0x00025C, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_IsReactedByReticule_bResult2) == 0x000260, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_IsReactedByReticule_bResult2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_GetHitObjectTypesByPrevTrace_NewParam1) == 0x000268, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_GetHitObjectTypesByPrevTrace_NewParam1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_MakeArray_Array1) == 0x000278, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_GetPoliticStandAsActor_Actor1) == 0x000288, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_GetPoliticStandAsActor_Actor1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_DynamicCast_AsBI_Fighter_Interface1) == 0x000290, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_DynamicCast_AsBI_Fighter_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_DynamicCast_bSuccess5) == 0x0002A0, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_GetAttackCollisionRadius_Radius1) == 0x0002A4, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_GetAttackCollisionRadius_Radius1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_AJBMultiSphereTraceForObjects_OutHits1) == 0x0002A8, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_AJBMultiSphereTraceForObjects_OutHits1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_AJBMultiSphereTraceForObjects_ReturnValue1) == 0x0002B8, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_AJBMultiSphereTraceForObjects_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_Array_Get_Item1) == 0x0002C0, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_Array_Length_ReturnValue1) == 0x000348, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_bBlockingHit1) == 0x00034C, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_bBlockingHit1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_bInitialOverlap1) == 0x00034D, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_bInitialOverlap1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_Time1) == 0x000350, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_Time1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_Distance1) == 0x000354, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_Distance1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_Location1) == 0x000358, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_ImpactPoint1) == 0x000364, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_ImpactPoint1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_Normal1) == 0x000370, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_Normal1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_ImpactNormal1) == 0x00037C, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_ImpactNormal1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_PhysMat1) == 0x000388, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_PhysMat1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_HitActor1) == 0x000390, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_HitActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_HitComponent1) == 0x000398, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_HitComponent1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_HitBoneName1) == 0x0003A0, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_HitBoneName1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_HitItem1) == 0x0003A8, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_HitItem1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_FaceIndex1) == 0x0003AC, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_FaceIndex1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_TraceStart1) == 0x0003B0, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_TraceStart1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BreakHitResult_TraceEnd1) == 0x0003BC, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BreakHitResult_TraceEnd1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_Less_IntInt_ReturnValue) == 0x0003C8, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_CheckPredictionAttackHitBlocked_bBlocked1) == 0x0003C9, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_CheckPredictionAttackHitBlocked_bBlocked1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_Not_PreBool_ReturnValue3) == 0x0003CA, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_DynamicCast_AsBI_AJBInterface4) == 0x0003D0, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_DynamicCast_AsBI_AJBInterface4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_DynamicCast_bSuccess6) == 0x0003E0, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_IsReactedByReticule_bResult3) == 0x0003E1, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_IsReactedByReticule_bResult3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_OwnHitParam_bCharacter1) == 0x0003E2, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_OwnHitParam_bCharacter1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_OwnHitParam_bLeftAP1) == 0x0003E3, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_OwnHitParam_bLeftAP1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_OwnHitParam_ParticleTagBlockedByAAP1) == 0x0003E8, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_OwnHitParam_ParticleTagBlockedByAAP1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_OwnHitParam_SETagBlockedByAAP1) == 0x0003F0, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_OwnHitParam_SETagBlockedByAAP1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_BooleanAND_ReturnValue3) == 0x0003F8, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_CheckTargetSelf_bTarget1) == 0x0003F9, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_CheckTargetSelf_bTarget1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_CheckCharacterBehavior_Active_bReturnValue) == 0x0003FA, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_CheckCharacterBehavior_Active_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface) == 0x000400, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_DynamicCast_bSuccess7) == 0x000410, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_GetLaunchedActorHomeLocation_Location) == 0x000414, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_GetLaunchedActorHomeLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_MakeVector_ReturnValue) == 0x000420, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_DynamicCast_AsBI_Fighter_Interface2) == 0x000430, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_DynamicCast_AsBI_Fighter_Interface2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_DynamicCast_bSuccess8) == 0x000440, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_Add_VectorVector_ReturnValue) == 0x000444, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_GetAttackCollisionRadius_Radius2) == 0x000450, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_GetAttackCollisionRadius_Radius2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_DynamicCast_AsBI_Fighter_Interface3) == 0x000458, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_DynamicCast_AsBI_Fighter_Interface3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_DynamicCast_bSuccess9) == 0x000468, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_GetStandAttackOffset_StandAttackOffset) == 0x00046C, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_GetStandAttackOffset_StandAttackOffset' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000478, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_Normal_ReturnValue) == 0x000484, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_GetViewRotation_Rotation) == 0x000490, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_GetViewRotation_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x00049C, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_DynamicCast_AsBI_Fighter_Interface4) == 0x0004A8, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_DynamicCast_AsBI_Fighter_Interface4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, K2Node_DynamicCast_bSuccess10) == 0x0004B8, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_GetPoliticStandAsActor_Actor2) == 0x0004C0, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_GetPoliticStandAsActor_Actor2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_GetAttackRange_AttackRange) == 0x0004C8, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_GetAttackRange_AttackRange' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_FindTraceLocationsFromCamera_TraceStartLocation) == 0x0004CC, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_FindTraceLocationsFromCamera_TraceStartLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_FindTraceLocationsFromCamera_TraceEndLocation) == 0x0004D8, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_FindTraceLocationsFromCamera_TraceEndLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_Add_VectorVector_ReturnValue1) == 0x0004E4, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_FindLookAtRotation_ReturnValue) == 0x0004F0, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_GreaterGreater_VectorRotator_ReturnValue1) == 0x0004FC, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_GreaterGreater_VectorRotator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_Add_VectorVector_ReturnValue2) == 0x000508, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_Add_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_Add_VectorVector_ReturnValue3) == 0x000514, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_Add_VectorVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_GetViewRotation_Rotation1) == 0x000520, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_GetViewRotation_Rotation1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_AJBMultiLineTrace_bTargetHit) == 0x00052C, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_AJBMultiLineTrace_bTargetHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_AJBMultiLineTrace_TargetActor) == 0x000530, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_AJBMultiLineTrace_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_AJBMultiLineTrace_TargetComponent) == 0x000538, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_AJBMultiLineTrace_TargetComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_AJBMultiLineTrace_TargetLocation) == 0x000540, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_AJBMultiLineTrace_TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_GreaterGreater_VectorRotator_ReturnValue2) == 0x00054C, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_GreaterGreater_VectorRotator_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_Subtract_VectorVector_ReturnValue1) == 0x000558, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_Subtract_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, Temp_int_Loop_Counter_Variable1) == 0x000564, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_IsValid_ReturnValue) == 0x000568, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_Less_IntInt_ReturnValue1) == 0x000569, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PredictionAttackHit, CallFunc_Add_IntInt_ReturnValue1) == 0x00056C, "Member 'BP_AJBInGameCharacter_C_PredictionAttackHit::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ConsumeDamage
// 0x0150 (0x0150 - 0x0000)
struct BP_AJBInGameCharacter_C_ConsumeDamage final
{
public:
	int32                                         DamageForHPAP;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageForAAP;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHitEnemysSeparatedStand;                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPenetrateAP;                                      // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EffectiveDamage;                                   // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDamageIsCutByAAP;                                 // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BeforeAAP;                                         // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AfterAAP;                                          // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempLeftDamageForHP;                               // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempLeftDamageForAP;                               // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempAfterAAP;                                      // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempBeforeAAP;                                     // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTempDamageIsCutByAAP;                             // 0x002C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempAfterHPAndAP;                                  // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempBeforeHPAndAP;                                 // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempLeftDamageForHPAP;                             // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AdditionalAP_C>    K2Node_DynamicCast_AsBI_Additional_AP;             // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AdditionalAP_C>    K2Node_DynamicCast_AsBI_Additional_AP1;            // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Consume_LeftDamage;                       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Consume_BeforeValue;                      // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Consume_AfterValue;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetValue_AAPValue;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AdditionalAP_C>    K2Node_DynamicCast_AsBI_Additional_AP2;            // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetValue_AAPValue1;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue1;            // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue2;            // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue2;             // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue3;             // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ConsumeDamage) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ConsumeDamage");
static_assert(sizeof(BP_AJBInGameCharacter_C_ConsumeDamage) == 0x000150, "Wrong size on BP_AJBInGameCharacter_C_ConsumeDamage");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, DamageForHPAP) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::DamageForHPAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, DamageForAAP) == 0x000004, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::DamageForAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, bHitEnemysSeparatedStand) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::bHitEnemysSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, bPenetrateAP) == 0x000009, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::bPenetrateAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, EffectiveDamage) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::EffectiveDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, bDamageIsCutByAAP) == 0x000010, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::bDamageIsCutByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, BeforeAAP) == 0x000014, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::BeforeAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, AfterAAP) == 0x000018, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::AfterAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, TempLeftDamageForHP) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::TempLeftDamageForHP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, TempLeftDamageForAP) == 0x000020, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::TempLeftDamageForAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, TempAfterAAP) == 0x000024, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::TempAfterAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, TempBeforeAAP) == 0x000028, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::TempBeforeAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, bTempDamageIsCutByAAP) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::bTempDamageIsCutByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, TempAfterHPAndAP) == 0x000030, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::TempAfterHPAndAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, TempBeforeHPAndAP) == 0x000034, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::TempBeforeHPAndAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, TempLeftDamageForHPAP) == 0x000038, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::TempLeftDamageForHPAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Conv_IntToString_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Greater_IntInt_ReturnValue) == 0x000051, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Not_PreBool_ReturnValue) == 0x000052, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_BooleanAND_ReturnValue) == 0x000053, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Not_PreBool_ReturnValue1) == 0x000054, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, K2Node_DynamicCast_AsBI_Additional_AP) == 0x000058, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::K2Node_DynamicCast_AsBI_Additional_AP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, K2Node_DynamicCast_AsBI_Additional_AP1) == 0x000070, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::K2Node_DynamicCast_AsBI_Additional_AP1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, K2Node_DynamicCast_bSuccess1) == 0x000080, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Consume_LeftDamage) == 0x000084, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Consume_LeftDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Consume_BeforeValue) == 0x000088, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Consume_BeforeValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Consume_AfterValue) == 0x00008C, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Consume_AfterValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_GetValue_AAPValue) == 0x000090, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_GetValue_AAPValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_IsValid_ReturnValue) == 0x000094, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, K2Node_DynamicCast_AsBI_Additional_AP2) == 0x000098, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::K2Node_DynamicCast_AsBI_Additional_AP2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, K2Node_DynamicCast_bSuccess2) == 0x0000A8, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_GetValue_AAPValue1) == 0x0000B0, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_GetValue_AAPValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Subtract_IntInt_ReturnValue1) == 0x0000B4, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Add_IntInt_ReturnValue1) == 0x0000BC, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Add_IntInt_ReturnValue2) == 0x0000C0, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Add_IntInt_ReturnValue3) == 0x0000C4, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Conv_IntToString_ReturnValue1) == 0x0000C8, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Conv_IntToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D8, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Conv_IntToString_ReturnValue2) == 0x0000E8, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Conv_IntToString_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Concat_StrStr_ReturnValue1) == 0x0000F8, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Concat_StrStr_ReturnValue2) == 0x000108, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Abs_Int_ReturnValue) == 0x000118, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Concat_StrStr_ReturnValue3) == 0x000120, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Concat_StrStr_ReturnValue4) == 0x000130, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000140, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Subtract_IntInt_ReturnValue2) == 0x000144, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Subtract_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Subtract_IntInt_ReturnValue3) == 0x000148, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Subtract_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ConsumeDamage, CallFunc_Clamp_ReturnValue) == 0x00014C, "Member 'BP_AJBInGameCharacter_C_ConsumeDamage::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.AddAP
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameCharacter_C_AddAP final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_AddAP) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_AddAP");
static_assert(sizeof(BP_AJBInGameCharacter_C_AddAP) == 0x00000C, "Wrong size on BP_AJBInGameCharacter_C_AddAP");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddAP, Value) == 0x000000, "Member 'BP_AJBInGameCharacter_C_AddAP::Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddAP, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_AddAP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddAP, CallFunc_Clamp_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_AddAP::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckLeftAP
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckLeftAP final
{
public:
	bool                                          bLeftAP;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckLeftAP) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CheckLeftAP");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckLeftAP) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_CheckLeftAP");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckLeftAP, bLeftAP) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckLeftAP::bLeftAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckLeftAP, CallFunc_Greater_IntInt_ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_CheckLeftAP::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetupActionSkillInfo
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBInGameCharacter_C_SetupActionSkillInfo final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_ActionSkillInfo                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SetupActionSkillInfo) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_SetupActionSkillInfo");
static_assert(sizeof(BP_AJBInGameCharacter_C_SetupActionSkillInfo) == 0x000050, "Wrong size on BP_AJBInGameCharacter_C_SetupActionSkillInfo");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetupActionSkillInfo, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SetupActionSkillInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetupActionSkillInfo, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_C_SetupActionSkillInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetupActionSkillInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_SetupActionSkillInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetupActionSkillInfo, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000010, "Member 'BP_AJBInGameCharacter_C_SetupActionSkillInfo::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetupActionSkillInfo, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_SetupActionSkillInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetupActionSkillInfo, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AJBInGameCharacter_C_SetupActionSkillInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetupActionSkillInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_SetupActionSkillInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetupActionSkillInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'BP_AJBInGameCharacter_C_SetupActionSkillInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetupActionSkillInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000048, "Member 'BP_AJBInGameCharacter_C_SetupActionSkillInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnPassiveSkillDeactivated
// 0x0060 (0x0060 - 0x0000)
struct BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated final
{
public:
	class UActorComponent*                        PassiveSkill;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CallFunc_Map_Keys_Keys;                            // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class UClass*>                         CallFunc_Map_Values_Values;                        // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item1;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated) == 0x000060, "Wrong size on BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated, PassiveSkill) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated::PassiveSkill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated, CallFunc_Map_Keys_Keys) == 0x000018, "Member 'BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated, CallFunc_Map_Values_Values) == 0x000028, "Member 'BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated, CallFunc_Array_Get_Item1) == 0x000040, "Member 'BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000048, "Member 'BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000049, "Member 'BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_AJBInGameCharacter_C_OnPassiveSkillDeactivated::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryGenerateActionSkill
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameCharacter_C_TryGenerateActionSkill final
{
public:
	class UClass*                                 ActionSkillClass;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBActionBase_C*                    ActionSkill;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBActionBase_C*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_AddComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBActionBase_C*                    K2Node_DynamicCast_AsBP_AJBAction_Base;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_TryGenerateActionSkill) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_TryGenerateActionSkill");
static_assert(sizeof(BP_AJBInGameCharacter_C_TryGenerateActionSkill) == 0x000030, "Wrong size on BP_AJBInGameCharacter_C_TryGenerateActionSkill");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGenerateActionSkill, ActionSkillClass) == 0x000000, "Member 'BP_AJBInGameCharacter_C_TryGenerateActionSkill::ActionSkillClass' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGenerateActionSkill, ActionSkill) == 0x000008, "Member 'BP_AJBInGameCharacter_C_TryGenerateActionSkill::ActionSkill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGenerateActionSkill, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_TryGenerateActionSkill::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGenerateActionSkill, CallFunc_AddComponentByClass_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_TryGenerateActionSkill::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGenerateActionSkill, K2Node_DynamicCast_AsBP_AJBAction_Base) == 0x000020, "Member 'BP_AJBInGameCharacter_C_TryGenerateActionSkill::K2Node_DynamicCast_AsBP_AJBAction_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGenerateActionSkill, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBInGameCharacter_C_TryGenerateActionSkill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGenerateActionSkill, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_AJBInGameCharacter_C_TryGenerateActionSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DebugPrintPassiveSkillNum
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameCharacter_C_DebugPrintPassiveSkillNum final
{
public:
	TArray<class UBP_AJBPassiveSkillBase_C*>      CallFunc_GetComponentsByClass_ReturnValue;         // 0x0000(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_DebugPrintPassiveSkillNum) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_DebugPrintPassiveSkillNum");
static_assert(sizeof(BP_AJBInGameCharacter_C_DebugPrintPassiveSkillNum) == 0x000028, "Wrong size on BP_AJBInGameCharacter_C_DebugPrintPassiveSkillNum");
static_assert(offsetof(BP_AJBInGameCharacter_C_DebugPrintPassiveSkillNum, CallFunc_GetComponentsByClass_ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_DebugPrintPassiveSkillNum::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DebugPrintPassiveSkillNum, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_DebugPrintPassiveSkillNum::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DebugPrintPassiveSkillNum, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_DebugPrintPassiveSkillNum::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeMovementMode
// 0x0005 (0x0005 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeMovementMode final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMovementMode                                 Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 Temp_byte_Variable1;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeMovementMode) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeMovementMode");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeMovementMode) == 0x000005, "Wrong size on BP_AJBInGameCharacter_C_ChangeMovementMode");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeMovementMode, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeMovementMode::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeMovementMode, Temp_bool_Variable) == 0x000001, "Member 'BP_AJBInGameCharacter_C_ChangeMovementMode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeMovementMode, Temp_byte_Variable) == 0x000002, "Member 'BP_AJBInGameCharacter_C_ChangeMovementMode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeMovementMode, Temp_byte_Variable1) == 0x000003, "Member 'BP_AJBInGameCharacter_C_ChangeMovementMode::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeMovementMode, K2Node_Select_Default) == 0x000004, "Member 'BP_AJBInGameCharacter_C_ChangeMovementMode::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckForceFireSkill
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckForceFireSkill final
{
public:
	bool                                          bForceFireSkill_0;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckForceFireSkill) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CheckForceFireSkill");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckForceFireSkill) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_CheckForceFireSkill");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckForceFireSkill, bForceFireSkill_0) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckForceFireSkill::bForceFireSkill_0' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckSmallSized
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckSmallSized final
{
public:
	bool                                          bSmallSized;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckSmallSized) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CheckSmallSized");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckSmallSized) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_CheckSmallSized");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSmallSized, bSmallSized) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckSmallSized::bSmallSized' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSmallSized, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_CheckSmallSized::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetupSharedController
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_SetupSharedController final
{
public:
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue1;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SetupSharedController) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_SetupSharedController");
static_assert(sizeof(BP_AJBInGameCharacter_C_SetupSharedController) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_SetupSharedController");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetupSharedController, CallFunc_GetController_ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SetupSharedController::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetupSharedController, CallFunc_GetController_ReturnValue1) == 0x000008, "Member 'BP_AJBInGameCharacter_C_SetupSharedController::CallFunc_GetController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetupSharedController, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_SetupSharedController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetupSharedController, CallFunc_IsValid_ReturnValue1) == 0x000011, "Member 'BP_AJBInGameCharacter_C_SetupSharedController::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetPoliticStandAsActor
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_GetPoliticStandAsActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAppearance_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetPoliticStandAsActor) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_GetPoliticStandAsActor");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetPoliticStandAsActor) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_GetPoliticStandAsActor");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticStandAsActor, Actor) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetPoliticStandAsActor::Actor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticStandAsActor, CallFunc_IsAppearance_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_GetPoliticStandAsActor::CallFunc_IsAppearance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticStandAsActor, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_AJBInGameCharacter_C_GetPoliticStandAsActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticStandAsActor, CallFunc_IsValid_ReturnValue1) == 0x00000A, "Member 'BP_AJBInGameCharacter_C_GetPoliticStandAsActor::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckStandSeparation
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckStandSeparation final
{
public:
	bool                                          bIncludeTransition;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSeparation;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSeparation_IsSeparate;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckStandSeparation) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckStandSeparation");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckStandSeparation) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_CheckStandSeparation");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckStandSeparation, bIncludeTransition) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckStandSeparation::bIncludeTransition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckStandSeparation, bSeparation) == 0x000001, "Member 'BP_AJBInGameCharacter_C_CheckStandSeparation::bSeparation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckStandSeparation, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckStandSeparation::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckStandSeparation, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CheckStandSeparation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckStandSeparation, CallFunc_CheckSeparation_IsSeparate) == 0x000011, "Member 'BP_AJBInGameCharacter_C_CheckStandSeparation::CallFunc_CheckSeparation_IsSeparate' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RemoveConditions
// 0x0100 (0x0100 - 0x0000)
struct BP_AJBInGameCharacter_C_RemoveConditions final
{
public:
	struct FGameplayTagContainer                  Exceptions;                                        // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FGameplayTagContainer                  GameplayTagContainerCombined;                      // 0x0020(0x0020)(Edit, BlueprintVisible)
	bool                                          bShouldRemove;                                     // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  GameplayTagContainerToBeRemoved;                   // 0x0048(0x0020)(Edit, BlueprintVisible)
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0068(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags1;  // 0x0098(0x0010)(ZeroConstructor, ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item1;                          // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags2;  // 0x00E0(0x0010)(ZeroConstructor, ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item2;                          // 0x00F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_RemoveConditions) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_RemoveConditions");
static_assert(sizeof(BP_AJBInGameCharacter_C_RemoveConditions) == 0x000100, "Wrong size on BP_AJBInGameCharacter_C_RemoveConditions");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, Exceptions) == 0x000000, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::Exceptions' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, GameplayTagContainerCombined) == 0x000020, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::GameplayTagContainerCombined' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, bShouldRemove) == 0x000040, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::bShouldRemove' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, GameplayTagContainerToBeRemoved) == 0x000048, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::GameplayTagContainerToBeRemoved' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000068, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, Temp_int_Array_Index_Variable) == 0x000078, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, Temp_bool_True_if_break_was_hit_Variable) == 0x000080, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, CallFunc_Not_PreBool_ReturnValue) == 0x000081, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, Temp_int_Array_Index_Variable1) == 0x00008C, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, Temp_int_Loop_Counter_Variable1) == 0x000090, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, CallFunc_Add_IntInt_ReturnValue1) == 0x000094, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, CallFunc_BreakGameplayTagContainer_GameplayTags1) == 0x000098, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::CallFunc_BreakGameplayTagContainer_GameplayTags1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, CallFunc_Array_Length_ReturnValue1) == 0x0000B0, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, Temp_int_Array_Index_Variable2) == 0x0000B8, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, CallFunc_Array_Get_Item1) == 0x0000C0, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, CallFunc_MatchesTag_ReturnValue) == 0x0000C8, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, Temp_int_Loop_Counter_Variable2) == 0x0000CC, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, CallFunc_Less_IntInt_ReturnValue1) == 0x0000D0, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, CallFunc_Add_IntInt_ReturnValue2) == 0x0000D4, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, CallFunc_BooleanAND_ReturnValue) == 0x0000D8, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, CallFunc_BreakGameplayTagContainer_GameplayTags2) == 0x0000E0, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::CallFunc_BreakGameplayTagContainer_GameplayTags2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, CallFunc_Array_Get_Item2) == 0x0000F0, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, CallFunc_Array_Length_ReturnValue2) == 0x0000F8, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RemoveConditions, CallFunc_Less_IntInt_ReturnValue2) == 0x0000FC, "Member 'BP_AJBInGameCharacter_C_RemoveConditions::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeCameraBehavior
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeCameraBehavior final
{
public:
	bool                                          bEnableOnlyCameraInput;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bUseControllerRotationYaw_0;                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           FactorTag;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeCameraBehavior) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeCameraBehavior");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeCameraBehavior) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_ChangeCameraBehavior");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeCameraBehavior, bEnableOnlyCameraInput) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeCameraBehavior::bEnableOnlyCameraInput' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeCameraBehavior, bUseControllerRotationYaw_0) == 0x000001, "Member 'BP_AJBInGameCharacter_C_ChangeCameraBehavior::bUseControllerRotationYaw_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeCameraBehavior, FactorTag) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ChangeCameraBehavior::FactorTag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TrySetNextLandingStopTime(Sec)
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_TrySetNextLandingStopTime_Sec_ final
{
public:
	float                                         Time_Sec_;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue1;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_TrySetNextLandingStopTime_Sec_) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_TrySetNextLandingStopTime_Sec_");
static_assert(sizeof(BP_AJBInGameCharacter_C_TrySetNextLandingStopTime_Sec_) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_TrySetNextLandingStopTime_Sec_");
static_assert(offsetof(BP_AJBInGameCharacter_C_TrySetNextLandingStopTime_Sec_, Time_Sec_) == 0x000000, "Member 'BP_AJBInGameCharacter_C_TrySetNextLandingStopTime_Sec_::Time_Sec_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TrySetNextLandingStopTime_Sec_, ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_TrySetNextLandingStopTime_Sec_::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TrySetNextLandingStopTime_Sec_, CallFunc_FMax_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_TrySetNextLandingStopTime_Sec_::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TrySetNextLandingStopTime_Sec_, CallFunc_FMax_ReturnValue1) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_TrySetNextLandingStopTime_Sec_::CallFunc_FMax_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckAnyCharacterMovementSkillActive
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive final
{
public:
	bool                                          bWithCharacterMovement;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_AJBSkillBase_C*>             CallFunc_GetComponentsByClass_ReturnValue;         // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillActive_ReturnValue;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive) == 0x000038, "Wrong size on BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive, bWithCharacterMovement) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive::bWithCharacterMovement' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive, CallFunc_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive, CallFunc_IsSkillActive_ReturnValue) == 0x000031, "Member 'BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive::CallFunc_IsSkillActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'BP_AJBInGameCharacter_C_CheckAnyCharacterMovementSkillActive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ResetMeshRelativeTransform
// 0x0110 (0x0110 - 0x0000)
struct BP_AJBInGameCharacter_C_ResetMeshRelativeTransform final
{
public:
	float                                         CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight;   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0008(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0014(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0xC];                                       // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0080(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ResetMeshRelativeTransform) == 0x000010, "Wrong alignment on BP_AJBInGameCharacter_C_ResetMeshRelativeTransform");
static_assert(sizeof(BP_AJBInGameCharacter_C_ResetMeshRelativeTransform) == 0x000110, "Wrong size on BP_AJBInGameCharacter_C_ResetMeshRelativeTransform");
static_assert(offsetof(BP_AJBInGameCharacter_C_ResetMeshRelativeTransform, CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ResetMeshRelativeTransform::CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ResetMeshRelativeTransform, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_ResetMeshRelativeTransform::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ResetMeshRelativeTransform, CallFunc_BreakTransform_Location) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ResetMeshRelativeTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ResetMeshRelativeTransform, CallFunc_BreakTransform_Rotation) == 0x000014, "Member 'BP_AJBInGameCharacter_C_ResetMeshRelativeTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ResetMeshRelativeTransform, CallFunc_BreakTransform_Scale) == 0x000020, "Member 'BP_AJBInGameCharacter_C_ResetMeshRelativeTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ResetMeshRelativeTransform, CallFunc_BreakVector_X) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_ResetMeshRelativeTransform::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ResetMeshRelativeTransform, CallFunc_BreakVector_Y) == 0x000030, "Member 'BP_AJBInGameCharacter_C_ResetMeshRelativeTransform::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ResetMeshRelativeTransform, CallFunc_BreakVector_Z) == 0x000034, "Member 'BP_AJBInGameCharacter_C_ResetMeshRelativeTransform::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ResetMeshRelativeTransform, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'BP_AJBInGameCharacter_C_ResetMeshRelativeTransform::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ResetMeshRelativeTransform, CallFunc_MakeTransform_ReturnValue) == 0x000050, "Member 'BP_AJBInGameCharacter_C_ResetMeshRelativeTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ResetMeshRelativeTransform, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000080, "Member 'BP_AJBInGameCharacter_C_ResetMeshRelativeTransform::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeStatus
// 0x04C8 (0x04C8 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeStatus final
{
public:
	bool                                          bShouldAddNewTag;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           NewTag;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         NewFloatValue;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AJBSnipeSkill_C*>            Temp_SnipeSkillComponents;                         // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UBP_AJBProjectileSkill_C*>       Temp_ProjectileSkillComponents;                    // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UBP_AJBCloseRangeSkill_C*>       Temp_CloseRangeSkillComponents;                    // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<float>                                 Temp_ExtractedValues;                              // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	struct FGameplayTag                           Temp_MatchedTag;                                   // 0x0058(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue1;      // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue2;      // 0x0078(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue1;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue2;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue3;      // 0x0088(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue4;      // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue3;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue4;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue5;      // 0x00A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue5;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue6;      // 0x00B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue6;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue7;      // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue7;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue8;      // 0x00D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue9;      // 0x00D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue8;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue9;                  // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue10;     // 0x00E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue10;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue11;     // 0x00F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue12;     // 0x0100(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue11;                 // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue12;                 // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue13;     // 0x0110(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue13;                 // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue14;     // 0x0120(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue14;                 // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue15;     // 0x0130(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue15;                 // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue16;     // 0x0140(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue17;     // 0x0148(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue16;                 // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue17;                 // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue18;     // 0x0158(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue18;                 // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue19;     // 0x0168(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue19;                 // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue20;     // 0x0178(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue20;                 // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue21;     // 0x0188(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue21;                 // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue22;     // 0x0198(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue22;                 // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue23;     // 0x01A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue23;                 // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue24;     // 0x01B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue25;     // 0x01C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue24;                 // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue25;                 // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CA[0x6];                                      // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue26;     // 0x01D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue26;                 // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue27;     // 0x01E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue28;     // 0x01E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue27;                 // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue28;                 // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F2[0x6];                                      // 0x01F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UActorComponent*>                CallFunc_GetComponentsByClass_ReturnValue;         // 0x01F8(0x0010)(ZeroConstructor, ReferenceParm)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue29;     // 0x0208(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue29;                 // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UActorComponent*>                CallFunc_GetComponentsByClass_ReturnValue1;        // 0x0218(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_MultiplyFloatValues_ResultParam;          // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyFloatValues_ResultParam1;         // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue30;     // 0x0240(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue30;                 // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x024D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24E[0x2];                                      // 0x024E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MultiplyFloatValues_ResultParam2;         // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue31;     // 0x0258(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue31;                 // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_265[0x3];                                      // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue32;     // 0x0268(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyFloatValues_ResultParam3;         // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue32;                 // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyFloatValues_ResultParam4;         // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue4;                // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyFloatValues_ResultParam5;         // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue1;      // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28A[0x2];                                      // 0x028A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue5;                // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue;          // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue;                 // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue2;           // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyFloatValues_ResultParam6;         // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue2;      // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B2[0x2];                                      // 0x02B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MultiplyFloatValues_ResultParam7;         // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue3;      // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BB[0x1];                                      // 0x02BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item;                           // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyFloatValues_ResultParam8;         // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_MovementSkill_C>   K2Node_DynamicCast_AsBI_Movement_Skill;            // 0x02D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E2[0x2];                                      // 0x02E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue6;                // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddFloatValues_ResultParam;               // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddFloatValues_ResultParam1;              // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyFloatValues_ResultParam9;         // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyFloatValues_ResultParam10;        // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue4;      // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_315[0x3];                                      // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyFloatValues_ResultParam11;        // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue5;      // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0325(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0326(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_327[0x1];                                      // 0x0327(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable3;                   // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32D[0x3];                                      // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item1;                          // 0x0330(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_SpawnBulletInterface_C> K2Node_DynamicCast_AsBI_Spawn_Bullet_Interface;    // 0x0338(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue1;      // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A[0x2];                                      // 0x034A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue7;                // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyFloatValues_ResultParam12;        // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue8;                // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable3;                    // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item2;                          // 0x0368(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyFloatValues_ResultParam13;        // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_SpawnBulletInterface_C> K2Node_DynamicCast_AsBI_Spawn_Bullet_Interface1;   // 0x0378(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue2;      // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A[0x2];                                      // 0x038A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable4;                    // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item3;                          // 0x0390(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_MovementSkill_C>   K2Node_DynamicCast_AsBI_Movement_Skill1;           // 0x0398(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue3;      // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA[0x2];                                      // 0x03AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MultiplyFloatValues_ResultParam14;        // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue6;      // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable4;                   // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanXOR_ReturnValue;                   // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x03BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB[0x1];                                      // 0x03BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyFloatValues_ResultParam15;        // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyFloatValues_ResultParam16;        // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddFloatValues_ResultParam2;              // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddFloatValues_ResultParam3;              // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddFloatValues_ResultParam4;              // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable5;                   // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue1;                      // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue4;                 // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ED[0x3];                                      // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable5;                    // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyFloatValues_ResultParam17;        // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_Array_Get_Item4;                          // 0x0400(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_MovementSkill_C>   K2Node_DynamicCast_AsBI_Movement_Skill2;           // 0x0408(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue4;      // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41A[0x2];                                      // 0x041A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MultiplyFloatValues_ResultParam18;        // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyFloatValues_ResultParam19;        // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue7;      // 0x0424(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue8;      // 0x0425(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_426[0x2];                                      // 0x0426(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable6;                    // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyFloatValues_ResultParam20;        // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_Array_Get_Item5;                          // 0x0430(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue9;      // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_MovementSkill_C>   K2Node_DynamicCast_AsBI_Movement_Skill3;           // 0x0440(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue5;      // 0x0451(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_452[0x6];                                      // 0x0452(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBCloseRangeSkill_C*               CallFunc_Array_Get_Item6;                          // 0x0458(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue9;                // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue5;                 // 0x0464(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_465[0x3];                                      // 0x0465(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MultiplyFloatValues_ResultParam21;        // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue10;     // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_AddFloatValues_ResultParam5;              // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyFloatValues_ResultParam22;        // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_AJBCloseRangeSkill_C*>       CallFunc_GetComponentsByClass_ReturnValue2;        // 0x0478(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         Temp_float_Variable1;                              // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable6;                   // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue6;                 // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_492[0x2];                                      // 0x0492(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select1_Default;                            // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue6;                  // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable2;                              // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyFloatValues_ResultParam23;        // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyFloatValues_ResultParam24;        // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_ExtractFloatValuesFromTagValueMap_ReturnValues; // 0x04B0(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         K2Node_Select2_Default;                            // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeStatus) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeStatus");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeStatus) == 0x0004C8, "Wrong size on BP_AJBInGameCharacter_C_ChangeStatus");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, bShouldAddNewTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::bShouldAddNewTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, NewTag) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::NewTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, NewFloatValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::NewFloatValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_SnipeSkillComponents) == 0x000018, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_SnipeSkillComponents' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_ProjectileSkillComponents) == 0x000028, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_ProjectileSkillComponents' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_CloseRangeSkillComponents) == 0x000038, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_CloseRangeSkillComponents' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_ExtractedValues) == 0x000048, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_ExtractedValues' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_MatchedTag) == 0x000058, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_MatchedTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000060, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue) == 0x000068, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue1) == 0x000070, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue2) == 0x000078, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue1) == 0x000080, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue2) == 0x000081, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue3) == 0x000088, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue4) == 0x000090, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue3) == 0x000098, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue4) == 0x000099, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue5) == 0x0000A0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue5) == 0x0000A8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue6) == 0x0000B0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue6) == 0x0000B8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue7) == 0x0000C0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue7) == 0x0000C8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue8) == 0x0000D0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue9) == 0x0000D8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue8) == 0x0000E0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue9) == 0x0000E1, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue10) == 0x0000E8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue10) == 0x0000F0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue11) == 0x0000F8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue12) == 0x000100, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue11) == 0x000108, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue12) == 0x000109, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue13) == 0x000110, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue13) == 0x000118, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue14) == 0x000120, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue14) == 0x000128, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue15) == 0x000130, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue15) == 0x000138, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue16) == 0x000140, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue17) == 0x000148, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue16) == 0x000150, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue17) == 0x000151, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue18) == 0x000158, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue18) == 0x000160, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue19) == 0x000168, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue19) == 0x000170, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue20) == 0x000178, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue20' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue20) == 0x000180, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue20' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue21) == 0x000188, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue21' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue21) == 0x000190, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue21' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue22) == 0x000198, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue22' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue22) == 0x0001A0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue22' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue23) == 0x0001A8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue23' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue23) == 0x0001B0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue23' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue24) == 0x0001B8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue24' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue25) == 0x0001C0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue25' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue24) == 0x0001C8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue24' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue25) == 0x0001C9, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue25' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue26) == 0x0001D0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue26' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue26) == 0x0001D8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue26' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue27) == 0x0001E0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue27' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue28) == 0x0001E8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue28' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue27) == 0x0001F0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue27' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue28) == 0x0001F1, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue28' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_GetComponentsByClass_ReturnValue) == 0x0001F8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue29) == 0x000208, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue29' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Array_Length_ReturnValue) == 0x000210, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue29) == 0x000214, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue29' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_GetComponentsByClass_ReturnValue1) == 0x000218, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_GetComponentsByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam) == 0x000228, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Array_Length_ReturnValue1) == 0x00022C, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_int_Loop_Counter_Variable) == 0x000230, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam1) == 0x000234, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Add_IntInt_ReturnValue) == 0x000238, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00023C, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue30) == 0x000240, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue30' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Array_Length_ReturnValue2) == 0x000248, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue30) == 0x00024C, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue30' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00024D, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam2) == 0x000250, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue31) == 0x000258, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue31' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_float_Variable) == 0x000260, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue31) == 0x000264, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue31' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MakeLiteralGameplayTag_ReturnValue32) == 0x000268, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MakeLiteralGameplayTag_ReturnValue32' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam3) == 0x000270, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MatchesTag_ReturnValue32) == 0x000274, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MatchesTag_ReturnValue32' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Array_Length_ReturnValue3) == 0x000278, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam4) == 0x00027C, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Array_Length_ReturnValue4) == 0x000280, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Array_Length_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam5) == 0x000284, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x000288, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_NearlyEqual_FloatFloat_ReturnValue1) == 0x000289, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_NearlyEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x00028C, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MinOfFloatArray_MinValue) == 0x000290, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_int_Array_Index_Variable) == 0x000294, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Array_Length_ReturnValue5) == 0x000298, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Array_Length_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MaxOfFloatArray_IndexOfMaxValue) == 0x00029C, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MaxOfFloatArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MaxOfFloatArray_MaxValue) == 0x0002A0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MaxOfFloatArray_MaxValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_EqualEqual_IntInt_ReturnValue2) == 0x0002A4, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_EqualEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_int_Array_Index_Variable1) == 0x0002A8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam6) == 0x0002AC, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_NearlyEqual_FloatFloat_ReturnValue2) == 0x0002B0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_NearlyEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Not_PreBool_ReturnValue) == 0x0002B1, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam7) == 0x0002B4, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_NearlyEqual_FloatFloat_ReturnValue3) == 0x0002B8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_NearlyEqual_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_bool_Variable) == 0x0002B9, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Not_PreBool_ReturnValue1) == 0x0002BA, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, K2Node_Select_Default) == 0x0002BC, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Array_Get_Item) == 0x0002C0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam8) == 0x0002C8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, K2Node_DynamicCast_AsBI_Movement_Skill) == 0x0002D0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::K2Node_DynamicCast_AsBI_Movement_Skill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, K2Node_DynamicCast_bSuccess) == 0x0002E0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_DoesImplementInterface_ReturnValue) == 0x0002E1, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Array_Length_ReturnValue6) == 0x0002E4, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Array_Length_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_int_Loop_Counter_Variable1) == 0x0002E8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_AddFloatValues_ResultParam) == 0x0002EC, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_AddFloatValues_ResultParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Add_IntInt_ReturnValue1) == 0x0002F0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Add_FloatFloat_ReturnValue) == 0x0002F4, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_AddFloatValues_ResultParam1) == 0x0002F8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_AddFloatValues_ResultParam1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Add_FloatFloat_ReturnValue1) == 0x0002FC, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam9) == 0x000300, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000304, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam10) == 0x000308, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_NearlyEqual_FloatFloat_ReturnValue4) == 0x00030C, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_NearlyEqual_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_int_Loop_Counter_Variable2) == 0x000310, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Less_IntInt_ReturnValue) == 0x000314, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Add_IntInt_ReturnValue2) == 0x000318, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_int_Array_Index_Variable2) == 0x00031C, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam11) == 0x000320, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_NearlyEqual_FloatFloat_ReturnValue5) == 0x000324, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_NearlyEqual_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Not_PreBool_ReturnValue2) == 0x000325, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_HasLocalSharedController_ReturnValue) == 0x000326, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_int_Loop_Counter_Variable3) == 0x000328, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_int_Loop_Counter_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Less_IntInt_ReturnValue1) == 0x00032C, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Array_Get_Item1) == 0x000330, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, K2Node_DynamicCast_AsBI_Spawn_Bullet_Interface) == 0x000338, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::K2Node_DynamicCast_AsBI_Spawn_Bullet_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, K2Node_DynamicCast_bSuccess1) == 0x000348, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_DoesImplementInterface_ReturnValue1) == 0x000349, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_DoesImplementInterface_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Array_Length_ReturnValue7) == 0x00034C, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Array_Length_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Less_IntInt_ReturnValue2) == 0x000350, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Add_IntInt_ReturnValue3) == 0x000354, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam12) == 0x000358, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Array_Length_ReturnValue8) == 0x00035C, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Array_Length_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_int_Array_Index_Variable3) == 0x000360, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_int_Array_Index_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Array_Get_Item2) == 0x000368, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam13) == 0x000370, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, K2Node_DynamicCast_AsBI_Spawn_Bullet_Interface1) == 0x000378, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::K2Node_DynamicCast_AsBI_Spawn_Bullet_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, K2Node_DynamicCast_bSuccess2) == 0x000388, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_DoesImplementInterface_ReturnValue2) == 0x000389, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_DoesImplementInterface_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_int_Array_Index_Variable4) == 0x00038C, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_int_Array_Index_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Array_Get_Item3) == 0x000390, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, K2Node_DynamicCast_AsBI_Movement_Skill1) == 0x000398, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::K2Node_DynamicCast_AsBI_Movement_Skill1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, K2Node_DynamicCast_bSuccess3) == 0x0003A8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_DoesImplementInterface_ReturnValue3) == 0x0003A9, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_DoesImplementInterface_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam14) == 0x0003AC, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_NearlyEqual_FloatFloat_ReturnValue6) == 0x0003B0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_NearlyEqual_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_int_Loop_Counter_Variable4) == 0x0003B4, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_int_Loop_Counter_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Not_PreBool_ReturnValue3) == 0x0003B8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_BooleanXOR_ReturnValue) == 0x0003B9, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_BooleanXOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Less_IntInt_ReturnValue3) == 0x0003BA, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Add_IntInt_ReturnValue4) == 0x0003BC, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam15) == 0x0003C0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam16) == 0x0003C4, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_AddFloatValues_ResultParam2) == 0x0003C8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_AddFloatValues_ResultParam2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_AddFloatValues_ResultParam3) == 0x0003CC, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_AddFloatValues_ResultParam3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0003D0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_FTrunc_ReturnValue) == 0x0003D4, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x0003D8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Add_FloatFloat_ReturnValue2) == 0x0003DC, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_AddFloatValues_ResultParam4) == 0x0003E0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_AddFloatValues_ResultParam4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_int_Loop_Counter_Variable5) == 0x0003E4, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_int_Loop_Counter_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_FTrunc_ReturnValue1) == 0x0003E8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_FTrunc_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Less_IntInt_ReturnValue4) == 0x0003EC, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Less_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Add_IntInt_ReturnValue5) == 0x0003F0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_int_Array_Index_Variable5) == 0x0003F4, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_int_Array_Index_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam17) == 0x0003F8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam17' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Array_Get_Item4) == 0x000400, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, K2Node_DynamicCast_AsBI_Movement_Skill2) == 0x000408, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::K2Node_DynamicCast_AsBI_Movement_Skill2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, K2Node_DynamicCast_bSuccess4) == 0x000418, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_DoesImplementInterface_ReturnValue4) == 0x000419, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_DoesImplementInterface_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam18) == 0x00041C, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam18' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam19) == 0x000420, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam19' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_NearlyEqual_FloatFloat_ReturnValue7) == 0x000424, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_NearlyEqual_FloatFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_NearlyEqual_FloatFloat_ReturnValue8) == 0x000425, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_NearlyEqual_FloatFloat_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_int_Array_Index_Variable6) == 0x000428, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_int_Array_Index_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam20) == 0x00042C, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam20' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Array_Get_Item5) == 0x000430, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Array_Get_Item5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_NearlyEqual_FloatFloat_ReturnValue9) == 0x000438, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_NearlyEqual_FloatFloat_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, K2Node_DynamicCast_AsBI_Movement_Skill3) == 0x000440, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::K2Node_DynamicCast_AsBI_Movement_Skill3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, K2Node_DynamicCast_bSuccess5) == 0x000450, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_DoesImplementInterface_ReturnValue5) == 0x000451, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_DoesImplementInterface_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Array_Get_Item6) == 0x000458, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Array_Get_Item6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Array_Length_ReturnValue9) == 0x000460, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Array_Length_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Less_IntInt_ReturnValue5) == 0x000464, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Less_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam21) == 0x000468, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam21' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_NearlyEqual_FloatFloat_ReturnValue10) == 0x00046C, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_NearlyEqual_FloatFloat_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_AddFloatValues_ResultParam5) == 0x000470, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_AddFloatValues_ResultParam5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam22) == 0x000474, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam22' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_GetComponentsByClass_ReturnValue2) == 0x000478, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_GetComponentsByClass_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_float_Variable1) == 0x000488, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_int_Loop_Counter_Variable6) == 0x00048C, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_int_Loop_Counter_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_bool_Variable1) == 0x000490, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Less_IntInt_ReturnValue6) == 0x000491, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Less_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, K2Node_Select1_Default) == 0x000494, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_Add_IntInt_ReturnValue6) == 0x000498, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_Add_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_float_Variable2) == 0x00049C, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam23) == 0x0004A0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam23' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_MultiplyFloatValues_ResultParam24) == 0x0004A4, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_MultiplyFloatValues_ResultParam24' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, Temp_bool_Variable2) == 0x0004A8, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, CallFunc_ExtractFloatValuesFromTagValueMap_ReturnValues) == 0x0004B0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::CallFunc_ExtractFloatValuesFromTagValueMap_ReturnValues' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeStatus, K2Node_Select2_Default) == 0x0004C0, "Member 'BP_AJBInGameCharacter_C_ChangeStatus::K2Node_Select2_Default' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeJumpZVelocityWithRate
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeJumpZVelocityWithRate final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeJumpZVelocityWithRate) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeJumpZVelocityWithRate");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeJumpZVelocityWithRate) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_ChangeJumpZVelocityWithRate");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeJumpZVelocityWithRate, Rate) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeJumpZVelocityWithRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeJumpZVelocityWithRate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_ChangeJumpZVelocityWithRate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckAnyActiveSkillAction
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction final
{
public:
	bool                                          bFind;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBSkillBase_C*                     CallFunc_GetBasicSkill_BasicSkill;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_AJBSkillBase_C*>             CallFunc_GetComponentsByClass_ReturnValue;         // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSkillAction_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue1;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction) == 0x000050, "Wrong size on BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction, bFind) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction::bFind' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction, CallFunc_GetBasicSkill_BasicSkill) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction::CallFunc_GetBasicSkill_BasicSkill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction, CallFunc_GetComponentsByClass_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction, CallFunc_CheckSkillAction_ReturnValue) == 0x00003C, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction::CallFunc_CheckSkillAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction, CallFunc_GetObjectClass_ReturnValue1) == 0x000040, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction::CallFunc_GetObjectClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x000048, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'BP_AJBInGameCharacter_C_CheckAnyActiveSkillAction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.JudgeIndoor
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameCharacter_C_JudgeIndoor final
{
public:
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInDoorCeilingHeight_bResult;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInDoor_Result;                          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInDoor_Result1;                         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue1;           // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_JudgeIndoor) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_JudgeIndoor");
static_assert(sizeof(BP_AJBInGameCharacter_C_JudgeIndoor) == 0x00000C, "Wrong size on BP_AJBInGameCharacter_C_JudgeIndoor");
static_assert(offsetof(BP_AJBInGameCharacter_C_JudgeIndoor, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_JudgeIndoor::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_JudgeIndoor, CallFunc_IsInDoorCeilingHeight_bResult) == 0x000004, "Member 'BP_AJBInGameCharacter_C_JudgeIndoor::CallFunc_IsInDoorCeilingHeight_bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_JudgeIndoor, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'BP_AJBInGameCharacter_C_JudgeIndoor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_JudgeIndoor, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'BP_AJBInGameCharacter_C_JudgeIndoor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_JudgeIndoor, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000007, "Member 'BP_AJBInGameCharacter_C_JudgeIndoor::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_JudgeIndoor, CallFunc_IsInDoor_Result) == 0x000008, "Member 'BP_AJBInGameCharacter_C_JudgeIndoor::CallFunc_IsInDoor_Result' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_JudgeIndoor, CallFunc_IsInDoor_Result1) == 0x000009, "Member 'BP_AJBInGameCharacter_C_JudgeIndoor::CallFunc_IsInDoor_Result1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_JudgeIndoor, CallFunc_NotEqual_BoolBool_ReturnValue1) == 0x00000A, "Member 'BP_AJBInGameCharacter_C_JudgeIndoor::CallFunc_NotEqual_BoolBool_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DamageAffecterAreaIn
// 0x0070 (0x0070 - 0x0000)
struct BP_AJBInGameCharacter_C_DamageAffecterAreaIn final
{
public:
	class ABP_AJBInGameCharacter_C*               OperatorCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EffectTag;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SETag;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           TempSE;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          TempParticleEffect;                                // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue1;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_ContinuedDamageKeepInfo            K2Node_MakeStruct_ST_ContinuedDamageKeepInfo;      // 0x0030(0x0010)(ContainsInstancedReference, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_ContinuedDamageKeepInfo            CallFunc_Map_Find_Value;                           // 0x0048(0x0010)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_DamageAffecterAreaIn) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_DamageAffecterAreaIn");
static_assert(sizeof(BP_AJBInGameCharacter_C_DamageAffecterAreaIn) == 0x000070, "Wrong size on BP_AJBInGameCharacter_C_DamageAffecterAreaIn");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaIn, OperatorCharacter) == 0x000000, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaIn::OperatorCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaIn, EffectTag) == 0x000008, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaIn::EffectTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaIn, SETag) == 0x000010, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaIn::SETag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaIn, TempSE) == 0x000018, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaIn::TempSE' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaIn, TempParticleEffect) == 0x000020, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaIn::TempParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaIn, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaIn::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaIn, CallFunc_IsPlayerController_ReturnValue) == 0x000029, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaIn::CallFunc_IsPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaIn, CallFunc_HasLocalSharedController_ReturnValue) == 0x00002A, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaIn::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaIn, CallFunc_HasLocalSharedController_ReturnValue1) == 0x00002B, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaIn::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaIn, CallFunc_IsPlayerController_ReturnValue1) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaIn::CallFunc_IsPlayerController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaIn, K2Node_MakeStruct_ST_ContinuedDamageKeepInfo) == 0x000030, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaIn::K2Node_MakeStruct_ST_ContinuedDamageKeepInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaIn, CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent) == 0x000040, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaIn::CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaIn, CallFunc_Map_Find_Value) == 0x000048, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaIn::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaIn, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaIn::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaIn, CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect) == 0x000060, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaIn::CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaIn, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaIn::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.DamageAffecterAreaOut
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameCharacter_C_DamageAffecterAreaOut final
{
public:
	class ABP_AJBInGameCharacter_C*               OperatorCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EffectTag;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SETag;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerController_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue1;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_ContinuedDamageKeepInfo            CallFunc_Map_Find_Value;                           // 0x0020(0x0010)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_DamageAffecterAreaOut) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_DamageAffecterAreaOut");
static_assert(sizeof(BP_AJBInGameCharacter_C_DamageAffecterAreaOut) == 0x000038, "Wrong size on BP_AJBInGameCharacter_C_DamageAffecterAreaOut");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaOut, OperatorCharacter) == 0x000000, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaOut::OperatorCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaOut, EffectTag) == 0x000008, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaOut::EffectTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaOut, SETag) == 0x000010, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaOut::SETag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaOut, CallFunc_IsPlayerController_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaOut::CallFunc_IsPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaOut, CallFunc_IsPlayerController_ReturnValue1) == 0x000019, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaOut::CallFunc_IsPlayerController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaOut, CallFunc_HasLocalSharedController_ReturnValue) == 0x00001A, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaOut::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaOut, CallFunc_HasLocalSharedController_ReturnValue1) == 0x00001B, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaOut::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaOut, CallFunc_Map_Find_Value) == 0x000020, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaOut::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaOut, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaOut::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaOut, CallFunc_Map_Remove_ReturnValue) == 0x000031, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaOut::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaOut, CallFunc_IsValid_ReturnValue) == 0x000032, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaOut::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_DamageAffecterAreaOut, CallFunc_IsValid_ReturnValue1) == 0x000033, "Member 'BP_AJBInGameCharacter_C_DamageAffecterAreaOut::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckPossibleInteract
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckPossibleInteract final
{
public:
	bool                                          bPossibleInteract;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_AJBSkillBase_C*>             CallFunc_GetComponentsByClass_ReturnValue;         // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPossibleInteract_bPossibleInteract;  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckPossibleInteract) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckPossibleInteract");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckPossibleInteract) == 0x000030, "Wrong size on BP_AJBInGameCharacter_C_CheckPossibleInteract");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleInteract, bPossibleInteract) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckPossibleInteract::bPossibleInteract' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleInteract, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CheckPossibleInteract::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleInteract, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckPossibleInteract::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleInteract, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_CheckPossibleInteract::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleInteract, CallFunc_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CheckPossibleInteract::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleInteract, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AJBInGameCharacter_C_CheckPossibleInteract::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleInteract, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CheckPossibleInteract::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleInteract, CallFunc_CheckPossibleInteract_bPossibleInteract) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_CheckPossibleInteract::CallFunc_CheckPossibleInteract_bPossibleInteract' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleInteract, CallFunc_Less_IntInt_ReturnValue) == 0x00002D, "Member 'BP_AJBInGameCharacter_C_CheckPossibleInteract::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleInteract, CallFunc_Not_PreBool_ReturnValue) == 0x00002E, "Member 'BP_AJBInGameCharacter_C_CheckPossibleInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckAnySkillInPreview
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckAnySkillInPreview final
{
public:
	class UClass*                                 IgnoreSkillClass;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_AJBSkillBase_C*>             CallFunc_GetComponentsByClass_ReturnValue;         // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInPreview_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckAnySkillInPreview) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckAnySkillInPreview");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckAnySkillInPreview) == 0x000048, "Wrong size on BP_AJBInGameCharacter_C_CheckAnySkillInPreview");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillInPreview, IgnoreSkillClass) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillInPreview::IgnoreSkillClass' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillInPreview, IsActive) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillInPreview::IsActive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillInPreview, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillInPreview::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillInPreview, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillInPreview::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillInPreview, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillInPreview::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillInPreview, CallFunc_GetComponentsByClass_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillInPreview::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillInPreview, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillInPreview::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillInPreview, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillInPreview::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillInPreview, CallFunc_IsInPreview_ReturnValue) == 0x000034, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillInPreview::CallFunc_IsInPreview_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillInPreview, CallFunc_Less_IntInt_ReturnValue) == 0x000035, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillInPreview::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillInPreview, CallFunc_GetObjectClass_ReturnValue) == 0x000038, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillInPreview::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillInPreview, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillInPreview::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillInPreview, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillInPreview::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryGetSkillComponentByType
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBInGameCharacter_C_TryGetSkillComponentByType final
{
public:
	EAJBSkillType                                 SkillType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     SkillComponet;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AJBSkillBase_C*>             CallFunc_GetComponentsByClass_ReturnValue;         // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_TryGetSkillComponentByType) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_TryGetSkillComponentByType");
static_assert(sizeof(BP_AJBInGameCharacter_C_TryGetSkillComponentByType) == 0x000048, "Wrong size on BP_AJBInGameCharacter_C_TryGetSkillComponentByType");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByType, SkillType) == 0x000000, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByType::SkillType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByType, bSuccess) == 0x000001, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByType::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByType, SkillComponet) == 0x000008, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByType::SkillComponet' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByType, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByType, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByType, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByType, CallFunc_GetComponentsByClass_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByType::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByType, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByType, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003C, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByType, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByType, CallFunc_Array_Length_ReturnValue1) == 0x000040, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByType::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByType, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000044, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByType::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsWatched
// 0x001C (0x001C - 0x0000)
struct BP_AJBInGameCharacter_C_IsWatched final
{
public:
	bool                                          bExcludesWatcherCameras;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IsWatched) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_IsWatched");
static_assert(sizeof(BP_AJBInGameCharacter_C_IsWatched) == 0x00001C, "Wrong size on BP_AJBInGameCharacter_C_IsWatched");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsWatched, bExcludesWatcherCameras) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IsWatched::bExcludesWatcherCameras' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsWatched, ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_IsWatched::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsWatched, Temp_bool_Variable) == 0x000002, "Member 'BP_AJBInGameCharacter_C_IsWatched::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsWatched, Temp_int_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_C_IsWatched::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsWatched, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_IsWatched::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsWatched, CallFunc_Array_Length_ReturnValue1) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_IsWatched::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsWatched, K2Node_Select_Default) == 0x000010, "Member 'BP_AJBInGameCharacter_C_IsWatched::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsWatched, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_AJBInGameCharacter_C_IsWatched::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsWatched, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_IsWatched::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryGetGrowupSkillSPByGrowupTag
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag final
{
public:
	struct FGameplayTag                           GrowupSkillTag;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SP;                                                // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetAchievedGrowup_Growup;                 // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAchievedGrowup_Value;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag");
static_assert(sizeof(BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag) == 0x000038, "Wrong size on BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag, GrowupSkillTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag::GrowupSkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag, bSuccess) == 0x000008, "Member 'BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag, SP) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag::SP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag, Temp_int_Variable) == 0x000010, "Member 'BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag, CallFunc_GetAchievedGrowup_Growup) == 0x000020, "Member 'BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag::CallFunc_GetAchievedGrowup_Growup' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag, CallFunc_GetAchievedGrowup_Value) == 0x000028, "Member 'BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag::CallFunc_GetAchievedGrowup_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag, CallFunc_Add_IntInt_ReturnValue1) == 0x000030, "Member 'BP_AJBInGameCharacter_C_TryGetGrowupSkillSPByGrowupTag::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.InitializeDamageAreaSound
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_C_InitializeDamageAreaSound final
{
public:
	struct FGameplayTag                           CallFunc_GetDamageAreaOutsideSEGameplayTag_Inside_Damage_Area_SE; // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetDamageAreaInsideSEGameplayTag_Inside_Damage_Area_SE; // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent1;    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_InitializeDamageAreaSound) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_InitializeDamageAreaSound");
static_assert(sizeof(BP_AJBInGameCharacter_C_InitializeDamageAreaSound) == 0x000020, "Wrong size on BP_AJBInGameCharacter_C_InitializeDamageAreaSound");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeDamageAreaSound, CallFunc_GetDamageAreaOutsideSEGameplayTag_Inside_Damage_Area_SE) == 0x000000, "Member 'BP_AJBInGameCharacter_C_InitializeDamageAreaSound::CallFunc_GetDamageAreaOutsideSEGameplayTag_Inside_Damage_Area_SE' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeDamageAreaSound, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000008, "Member 'BP_AJBInGameCharacter_C_InitializeDamageAreaSound::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeDamageAreaSound, CallFunc_GetDamageAreaInsideSEGameplayTag_Inside_Damage_Area_SE) == 0x000010, "Member 'BP_AJBInGameCharacter_C_InitializeDamageAreaSound::CallFunc_GetDamageAreaInsideSEGameplayTag_Inside_Damage_Area_SE' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeDamageAreaSound, CallFunc_RequestWwiseEventOnLocal_AkComponent1) == 0x000018, "Member 'BP_AJBInGameCharacter_C_InitializeDamageAreaSound::CallFunc_RequestWwiseEventOnLocal_AkComponent1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateDamageAreaSound
// 0x0140 (0x0140 - 0x0000)
struct BP_AJBInGameCharacter_C_UpdateDamageAreaSound final
{
public:
	float                                         Temp_DistanceFromDamageAreaBorder;                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBBattleGameState_C*               K2Node_DynamicCast_AsBP_AJBBattle_Game_State;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DamageAreaAvailable_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Exists_bExists;                           // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue1;          // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue1;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue2;        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestGion_AkComponent__LocalOnly_;      // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_; // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetFocusActor_ReturnValue;                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue1;             // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue2;             // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Select_Default;                             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue1;                // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0100(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBDamageAreaLocal_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSafeArea_Radius;                // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCurrentSafeArea_Location;              // 0x011C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0128(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_UpdateDamageAreaSound");
static_assert(sizeof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound) == 0x000140, "Wrong size on BP_AJBInGameCharacter_C_UpdateDamageAreaSound");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, Temp_DistanceFromDamageAreaBorder) == 0x000000, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::Temp_DistanceFromDamageAreaBorder' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, Temp_bool_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, K2Node_DynamicCast_AsBP_AJBBattle_Game_State) == 0x000010, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::K2Node_DynamicCast_AsBP_AJBBattle_Game_State' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_IsValid_ReturnValue1) == 0x000019, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_DamageAreaAvailable_ReturnValue) == 0x00001A, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_DamageAreaAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_Exists_bExists) == 0x00001B, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_Exists_bExists' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_Conv_FloatToString_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_IsValid_ReturnValue2) == 0x000030, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_Conv_FloatToString_ReturnValue1) == 0x000038, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_Conv_FloatToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_Concat_StrStr_ReturnValue1) == 0x000058, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_Concat_StrStr_ReturnValue2) == 0x000068, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_Abs_ReturnValue) == 0x000078, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00007C, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_FInterpTo_ReturnValue) == 0x000080, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_GetWorldDeltaSeconds_ReturnValue1) == 0x000084, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_GetWorldDeltaSeconds_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_FInterpTo_ReturnValue1) == 0x000088, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_FInterpTo_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_IsValid_ReturnValue3) == 0x00008C, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_Less_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000095, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_MapRangeClamped_ReturnValue) == 0x000098, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_BooleanAND_ReturnValue1) == 0x00009C, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_GetWorldDeltaSeconds_ReturnValue2) == 0x0000A0, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_GetWorldDeltaSeconds_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A4, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000B0, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_RequestGion_AkComponent__LocalOnly_) == 0x0000B8, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_RequestGion_AkComponent__LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_) == 0x0000C0, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_GetAJBGameInstance_bSuccess) == 0x0000C1, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x0000C8, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_GetFocusActor_ReturnValue) == 0x0000D0, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_GetFocusActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_MapRangeClamped_ReturnValue1) == 0x0000D8, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_MapRangeClamped_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_IsPlayingReplay_ReturnValue) == 0x0000DC, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_MapRangeClamped_ReturnValue2) == 0x0000E0, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_MapRangeClamped_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_GetViewTarget_ReturnValue) == 0x0000E8, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, K2Node_Select_Default) == 0x0000F0, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_GetGameState_ReturnValue1) == 0x0000F8, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_GetGameState_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000100, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_GetComponentByClass_ReturnValue) == 0x000110, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_GetCurrentSafeArea_Radius) == 0x000118, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_GetCurrentSafeArea_Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_GetCurrentSafeArea_Location) == 0x00011C, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_GetCurrentSafeArea_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000128, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_VSize_ReturnValue) == 0x000134, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDamageAreaSound, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000138, "Member 'BP_AJBInGameCharacter_C_UpdateDamageAreaSound::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckPossibleShot
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckPossibleShot final
{
public:
	bool                                          bPossibleShot_0;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckPossibleShot) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CheckPossibleShot");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckPossibleShot) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_CheckPossibleShot");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleShot, bPossibleShot_0) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckPossibleShot::bPossibleShot_0' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateShotPossibility
// 0x00D8 (0x00D8 - 0x0000)
struct BP_AJBInGameCharacter_C_UpdateShotPossibility final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLVisibleUI;                                       // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                EndLocation;                                       // 0x0008(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLocation;                                     // 0x0014(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_ShotNGPoint_C>     K2Node_DynamicCast_AsBI_Shot_NGPoint;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetDummyShotLocation_Location;            // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAnyActiveSkillActive_bActive;        // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetComponentsByTag_ReturnValue;           // 0x0060(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0084(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array1;                           // 0x00B0(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_AJBMultiLineTraceForObjects_OutHits;      // 0x00C0(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_AJBMultiLineTraceForObjects_ReturnValue;  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_UpdateShotPossibility) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_UpdateShotPossibility");
static_assert(sizeof(BP_AJBInGameCharacter_C_UpdateShotPossibility) == 0x0000D8, "Wrong size on BP_AJBInGameCharacter_C_UpdateShotPossibility");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, Delta) == 0x000000, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::Delta' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, bLVisibleUI) == 0x000004, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::bLVisibleUI' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, EndLocation) == 0x000008, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::EndLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, StartLocation) == 0x000014, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::StartLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, CallFunc_GetAJBInGameHUD_BP_bSuccess) == 0x000020, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::CallFunc_GetAJBInGameHUD_BP_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD) == 0x000028, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, K2Node_DynamicCast_AsBI_Shot_NGPoint) == 0x000038, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::K2Node_DynamicCast_AsBI_Shot_NGPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, CallFunc_GetDummyShotLocation_Location) == 0x00004C, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::CallFunc_GetDummyShotLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, CallFunc_Add_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, CallFunc_CheckAnyActiveSkillActive_bActive) == 0x00005C, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::CallFunc_CheckAnyActiveSkillActive_bActive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, CallFunc_GetComponentsByTag_ReturnValue) == 0x000060, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, CallFunc_BooleanAND_ReturnValue) == 0x000080, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000084, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000090, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, K2Node_MakeArray_Array) == 0x000098, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, K2Node_MakeArray_Array1) == 0x0000B0, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, CallFunc_AJBMultiLineTraceForObjects_OutHits) == 0x0000C0, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::CallFunc_AJBMultiLineTraceForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, CallFunc_AJBMultiLineTraceForObjects_ReturnValue) == 0x0000D0, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::CallFunc_AJBMultiLineTraceForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, CallFunc_Not_PreBool_ReturnValue1) == 0x0000D1, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateShotPossibility, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000D2, "Member 'BP_AJBInGameCharacter_C_UpdateShotPossibility::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsInvincibleDueForSystemReason
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameCharacter_C_IsInvincibleDueForSystemReason final
{
public:
	bool                                          bIsInvincible;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBBattleGameMode_C*                K2Node_DynamicCast_AsBP_AJBBattle_Game_Mode;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetCurrentFlowStateGameplayTag_CurrentState; // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IsInvincibleDueForSystemReason) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_IsInvincibleDueForSystemReason");
static_assert(sizeof(BP_AJBInGameCharacter_C_IsInvincibleDueForSystemReason) == 0x000030, "Wrong size on BP_AJBInGameCharacter_C_IsInvincibleDueForSystemReason");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsInvincibleDueForSystemReason, bIsInvincible) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IsInvincibleDueForSystemReason::bIsInvincible' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsInvincibleDueForSystemReason, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_IsInvincibleDueForSystemReason::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsInvincibleDueForSystemReason, K2Node_DynamicCast_AsBP_AJBBattle_Game_Mode) == 0x000010, "Member 'BP_AJBInGameCharacter_C_IsInvincibleDueForSystemReason::K2Node_DynamicCast_AsBP_AJBBattle_Game_Mode' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsInvincibleDueForSystemReason, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameCharacter_C_IsInvincibleDueForSystemReason::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsInvincibleDueForSystemReason, CallFunc_GetCurrentFlowStateGameplayTag_CurrentState) == 0x000020, "Member 'BP_AJBInGameCharacter_C_IsInvincibleDueForSystemReason::CallFunc_GetCurrentFlowStateGameplayTag_CurrentState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsInvincibleDueForSystemReason, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_IsInvincibleDueForSystemReason::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsInvincibleDueForSystemReason, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'BP_AJBInGameCharacter_C_IsInvincibleDueForSystemReason::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateVisibilityByCameraDistance
// 0x0100 (0x0100 - 0x0000)
struct BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance final
{
public:
	struct FVector                                TempJudgePoint;                                    // 0x0000(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CapsuleLowerLocation;                              // 0x000C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CapsuleUpperLocation;                              // 0x0018(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TempNewVisibility;                                 // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X2;                           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationOnUpdateVisibility_Location;   // 0x0064(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X3;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y3;                           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z3;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationOnUpdateVisibility_Location1;  // 0x007C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0088(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x00A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x00D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1;       // 0x00E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanXOR_ReturnValue;                   // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance");
static_assert(sizeof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance) == 0x000100, "Wrong size on BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, TempJudgePoint) == 0x000000, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::TempJudgePoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CapsuleLowerLocation) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CapsuleLowerLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CapsuleUpperLocation) == 0x000018, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CapsuleUpperLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, TempNewVisibility) == 0x000024, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::TempNewVisibility' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_BreakVector_X) == 0x000028, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_BreakVector_Y) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_BreakVector_Z) == 0x000030, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_BreakVector_X1) == 0x000034, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_BreakVector_Y1) == 0x000038, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_BreakVector_Z1) == 0x00003C, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_BreakVector_X2) == 0x000054, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_BreakVector_Y2) == 0x000058, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_BreakVector_Z2) == 0x00005C, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_Less_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000061, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000062, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_GetLocationOnUpdateVisibility_Location) == 0x000064, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_GetLocationOnUpdateVisibility_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_BreakVector_X3) == 0x000070, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_BreakVector_X3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_BreakVector_Y3) == 0x000074, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_BreakVector_Y3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_BreakVector_Z3) == 0x000078, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_BreakVector_Z3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_GetLocationOnUpdateVisibility_Location1) == 0x00007C, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_GetLocationOnUpdateVisibility_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_MakeVector_ReturnValue) == 0x000088, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_GetPlayerCameraManager_ReturnValue1) == 0x000098, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_GetPlayerCameraManager_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x0000A0, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x0000A4, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000B0, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000B4, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_VSize_ReturnValue) == 0x0000C0, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000C4, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x0000C8, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_BooleanAND_ReturnValue) == 0x0000CC, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x0000D0, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_MakeVector_ReturnValue1) == 0x0000D4, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_Subtract_VectorVector_ReturnValue1) == 0x0000E0, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_Subtract_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_BooleanXOR_ReturnValue) == 0x0000EC, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_BooleanXOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F0, "Member 'BP_AJBInGameCharacter_C_UpdateVisibilityByCameraDistance::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeEnableSimpleDeathCamera
// 0x00C0 (0x00C0 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeEnableSimpleDeathCamera final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x002C(0x000C)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0038(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeEnableSimpleDeathCamera) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeEnableSimpleDeathCamera");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeEnableSimpleDeathCamera) == 0x0000C0, "Wrong size on BP_AJBInGameCharacter_C_ChangeEnableSimpleDeathCamera");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeEnableSimpleDeathCamera, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeEnableSimpleDeathCamera::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeEnableSimpleDeathCamera, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_ChangeEnableSimpleDeathCamera::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeEnableSimpleDeathCamera, CallFunc_GetActorForwardVector_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_ChangeEnableSimpleDeathCamera::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeEnableSimpleDeathCamera, CallFunc_Add_VectorVector_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_ChangeEnableSimpleDeathCamera::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeEnableSimpleDeathCamera, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_ChangeEnableSimpleDeathCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeEnableSimpleDeathCamera, CallFunc_FindLookAtRotation_ReturnValue) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_ChangeEnableSimpleDeathCamera::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeEnableSimpleDeathCamera, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000038, "Member 'BP_AJBInGameCharacter_C_ChangeEnableSimpleDeathCamera::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRep_Rep_MP_ForSpectator
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_OnRep_Rep_MP_ForSpectator final
{
public:
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnRep_Rep_MP_ForSpectator) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_OnRep_Rep_MP_ForSpectator");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnRep_Rep_MP_ForSpectator) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_OnRep_Rep_MP_ForSpectator");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep_Rep_MP_ForSpectator, CallFunc_HasLocalSharedController_ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnRep_Rep_MP_ForSpectator::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsResurrectable
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_IsResurrectable final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IsResurrectable) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_IsResurrectable");
static_assert(sizeof(BP_AJBInGameCharacter_C_IsResurrectable) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_IsResurrectable");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsResurrectable, bResult) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IsResurrectable::bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsResurrectable, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_IsResurrectable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRep_(ForSkipOwner)WalkingState
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_OnRep__ForSkipOwner_WalkingState final
{
public:
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnRep__ForSkipOwner_WalkingState) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_OnRep__ForSkipOwner_WalkingState");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnRep__ForSkipOwner_WalkingState) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_OnRep__ForSkipOwner_WalkingState");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep__ForSkipOwner_WalkingState, CallFunc_HasLocalSharedController_ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnRep__ForSkipOwner_WalkingState::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetWalkingStateOnServer
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_SetWalkingStateOnServer final
{
public:
	EWalkingState                                 WalkingState_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SetWalkingStateOnServer) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_SetWalkingStateOnServer");
static_assert(sizeof(BP_AJBInGameCharacter_C_SetWalkingStateOnServer) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_SetWalkingStateOnServer");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetWalkingStateOnServer, WalkingState_0) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SetWalkingStateOnServer::WalkingState_0' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryToSpeakVoice
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_TryToSpeakVoice final
{
public:
	struct FGameplayTag                           VoiceTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	E_VoiceProcessType                            VoiceProcessType;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSpeakEvenIfNotAlive;                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSpeakEvenIfDuringTheWorld;                        // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSpeakEvenIfNotLocalEnv;                           // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAlsoSpeakOnPairEnv;                               // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIgnoreIfDuringTheWorld;                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSpeakIfTheSameEventIsNotQueued;                   // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWillBeSpoken;                                     // 0x000F(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_TryToSpeakVoice) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_TryToSpeakVoice");
static_assert(sizeof(BP_AJBInGameCharacter_C_TryToSpeakVoice) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_TryToSpeakVoice");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryToSpeakVoice, VoiceTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_TryToSpeakVoice::VoiceTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryToSpeakVoice, VoiceProcessType) == 0x000008, "Member 'BP_AJBInGameCharacter_C_TryToSpeakVoice::VoiceProcessType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryToSpeakVoice, bSpeakEvenIfNotAlive) == 0x000009, "Member 'BP_AJBInGameCharacter_C_TryToSpeakVoice::bSpeakEvenIfNotAlive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryToSpeakVoice, bSpeakEvenIfDuringTheWorld) == 0x00000A, "Member 'BP_AJBInGameCharacter_C_TryToSpeakVoice::bSpeakEvenIfDuringTheWorld' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryToSpeakVoice, bSpeakEvenIfNotLocalEnv) == 0x00000B, "Member 'BP_AJBInGameCharacter_C_TryToSpeakVoice::bSpeakEvenIfNotLocalEnv' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryToSpeakVoice, bAlsoSpeakOnPairEnv) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_TryToSpeakVoice::bAlsoSpeakOnPairEnv' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryToSpeakVoice, bIgnoreIfDuringTheWorld) == 0x00000D, "Member 'BP_AJBInGameCharacter_C_TryToSpeakVoice::bIgnoreIfDuringTheWorld' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryToSpeakVoice, bSpeakIfTheSameEventIsNotQueued) == 0x00000E, "Member 'BP_AJBInGameCharacter_C_TryToSpeakVoice::bSpeakIfTheSameEventIsNotQueued' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryToSpeakVoice, bWillBeSpoken) == 0x00000F, "Member 'BP_AJBInGameCharacter_C_TryToSpeakVoice::bWillBeSpoken' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryToSpeakVoice, CallFunc_TryToSpeak_bWillBeSpoken) == 0x000010, "Member 'BP_AJBInGameCharacter_C_TryToSpeakVoice::CallFunc_TryToSpeak_bWillBeSpoken' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangePostProcessBlueprintEnable
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangePostProcessBlueprintEnable final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangePostProcessBlueprintEnable) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ChangePostProcessBlueprintEnable");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangePostProcessBlueprintEnable) == 0x000028, "Wrong size on BP_AJBInGameCharacter_C_ChangePostProcessBlueprintEnable");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangePostProcessBlueprintEnable, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangePostProcessBlueprintEnable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangePostProcessBlueprintEnable, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_C_ChangePostProcessBlueprintEnable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangePostProcessBlueprintEnable, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ChangePostProcessBlueprintEnable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangePostProcessBlueprintEnable, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AJBInGameCharacter_C_ChangePostProcessBlueprintEnable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangePostProcessBlueprintEnable, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_ChangePostProcessBlueprintEnable::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangePostProcessBlueprintEnable, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_ChangePostProcessBlueprintEnable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangePostProcessBlueprintEnable, CallFunc_Montage_IsPlaying_ReturnValue) == 0x000024, "Member 'BP_AJBInGameCharacter_C_ChangePostProcessBlueprintEnable::CallFunc_Montage_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangePostProcessBlueprintEnable, CallFunc_Less_IntInt_ReturnValue) == 0x000025, "Member 'BP_AJBInGameCharacter_C_ChangePostProcessBlueprintEnable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.InitializeCameraManager
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_InitializeCameraManager final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_InitializeCameraManager) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_InitializeCameraManager");
static_assert(sizeof(BP_AJBInGameCharacter_C_InitializeCameraManager) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_InitializeCameraManager");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeCameraManager, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_InitializeCameraManager::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ReserveBreakVoice
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_ReserveBreakVoice final
{
public:
	struct FGameplayTag                           VoiceEventTagToStop;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ReserveBreakVoice) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ReserveBreakVoice");
static_assert(sizeof(BP_AJBInGameCharacter_C_ReserveBreakVoice) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_ReserveBreakVoice");
static_assert(offsetof(BP_AJBInGameCharacter_C_ReserveBreakVoice, VoiceEventTagToStop) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ReserveBreakVoice::VoiceEventTagToStop' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRep_(ForSkipOwner)MPMax
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_OnRep__ForSkipOwner_MPMax final
{
public:
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnRep__ForSkipOwner_MPMax) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnRep__ForSkipOwner_MPMax");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnRep__ForSkipOwner_MPMax) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_OnRep__ForSkipOwner_MPMax");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep__ForSkipOwner_MPMax, CallFunc_HasLocalSharedController_ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnRep__ForSkipOwner_MPMax::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep__ForSkipOwner_MPMax, CallFunc_GetAJBGameInstance_bSuccess) == 0x000001, "Member 'BP_AJBInGameCharacter_C_OnRep__ForSkipOwner_MPMax::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep__ForSkipOwner_MPMax, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnRep__ForSkipOwner_MPMax::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep__ForSkipOwner_MPMax, CallFunc_IsPlayingReplay_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_OnRep__ForSkipOwner_MPMax::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ForceInactivePassiveSkills_Server
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server final
{
public:
	bool                                          bNegativeOnly;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AJBPassiveSkillBase_C*>      CallFunc_GetComponentsByClass_ReturnValue;         // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	class UBP_AJBPassiveSkillBase_C*              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server");
static_assert(sizeof(BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server) == 0x000038, "Wrong size on BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server, bNegativeOnly) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server::bNegativeOnly' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server, Temp_bool_Variable) == 0x000010, "Member 'BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server, Temp_bool_Variable1) == 0x000011, "Member 'BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server, CallFunc_GetComponentsByClass_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server, K2Node_Select_Default) == 0x000035, "Member 'BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server, CallFunc_Not_PreBool_ReturnValue) == 0x000036, "Member 'BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server, CallFunc_BooleanAND_ReturnValue) == 0x000037, "Member 'BP_AJBInGameCharacter_C_ForceInactivePassiveSkills_Server::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetFootLocation
// 0x0034 (0x0034 - 0x0000)
struct BP_AJBInGameCharacter_C_GetFootLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetFootLocation) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_GetFootLocation");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetFootLocation) == 0x000034, "Wrong size on BP_AJBInGameCharacter_C_GetFootLocation");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetFootLocation, Location) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetFootLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetFootLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_GetFootLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetFootLocation, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_GetFootLocation::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetFootLocation, CallFunc_MakeVector_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_GetFootLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetFootLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_GetFootLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.AddMP
// 0x0014 (0x0014 - 0x0000)
struct BP_AJBInGameCharacter_C_AddMP final
{
public:
	float                                         RecoveryMP;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_AddMP) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_AddMP");
static_assert(sizeof(BP_AJBInGameCharacter_C_AddMP) == 0x000014, "Wrong size on BP_AJBInGameCharacter_C_AddMP");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddMP, RecoveryMP) == 0x000000, "Member 'BP_AJBInGameCharacter_C_AddMP::RecoveryMP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddMP, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_AddMP::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddMP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_AddMP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddMP, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_AddMP::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddMP, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_AddMP::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcCuttingRate
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameCharacter_C_CalcCuttingRate final
{
public:
	float                                         CuttingsRate;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CalcCuttingRate) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_CalcCuttingRate");
static_assert(sizeof(BP_AJBInGameCharacter_C_CalcCuttingRate) == 0x00000C, "Wrong size on BP_AJBInGameCharacter_C_CalcCuttingRate");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCuttingRate, CuttingsRate) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CalcCuttingRate::CuttingsRate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCuttingRate, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CalcCuttingRate::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCuttingRate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CalcCuttingRate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GiveDamageFunction
// 0x00C0 (0x00C0 - 0x0000)
struct BP_AJBInGameCharacter_C_GiveDamageFunction final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DamageType;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	EDamagePriority                               DamagePriority;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CuttingRate;                                       // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TempRemainHP;                                      // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempFinalDamage;                                   // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TempDamageIsCut;                                   // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TempCuttingRate;                                   // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue;     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalcDamage_DamageForHPAP;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcDamage_DamageForAAP;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcDamage_CutDamage;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcDamage_bRemainHP;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcDamage_bDamageIsCutByAAP;             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP1;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess1;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameMovableStand_C*            K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand;  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRemainHP_IsRemain;                      // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRemainHP_IsRemain1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GiveDamageFunction) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_GiveDamageFunction");
static_assert(sizeof(BP_AJBInGameCharacter_C_GiveDamageFunction) == 0x0000C0, "Wrong size on BP_AJBInGameCharacter_C_GiveDamageFunction");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, DamagedActor) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, Damage) == 0x000008, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::Damage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, DamageType) == 0x000010, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, DamagePriority) == 0x000018, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::DamagePriority' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CuttingRate) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, TempRemainHP) == 0x000020, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::TempRemainHP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, TempFinalDamage) == 0x000024, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::TempFinalDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, TempDamageIsCut) == 0x000028, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::TempDamageIsCut' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, TempCuttingRate) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::TempCuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000030, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000038, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_CharacterBehaviorMatches_ReturnValue) == 0x000039, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_CharacterBehaviorMatches_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_CalcDamage_DamageForHPAP) == 0x00003C, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_CalcDamage_DamageForHPAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_CalcDamage_DamageForAAP) == 0x000040, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_CalcDamage_DamageForAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_CalcDamage_CutDamage) == 0x000044, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_CalcDamage_CutDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_CalcDamage_bRemainHP) == 0x000048, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_CalcDamage_bRemainHP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_CalcDamage_bDamageIsCutByAAP) == 0x000049, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_CalcDamage_bDamageIsCutByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_GetAJBCharacterFromActor_CharacterBP1) == 0x000050, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_GetAJBCharacterFromActor_CharacterBP1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_GetAJBCharacterFromActor_bSuccess1) == 0x000058, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_GetAJBCharacterFromActor_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_Greater_IntInt_ReturnValue) == 0x000059, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_BooleanOR_ReturnValue) == 0x00005A, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_HasLocalSharedController_ReturnValue) == 0x00005B, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, K2Node_SwitchEnum_CmpSuccess) == 0x000060, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, Temp_bool_Variable) == 0x000061, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_MakeLiteralBool_ReturnValue) == 0x000062, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_GetAJBGameInstance_bSuccess) == 0x000063, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000068, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_IsPlayingReplay_ReturnValue) == 0x000070, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_HasLocalSharedController_ReturnValue1) == 0x000071, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_GetOwner_ReturnValue) == 0x000078, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand) == 0x000080, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000090, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, K2Node_DynamicCast_bSuccess1) == 0x000098, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_IsRemainHP_IsRemain) == 0x000099, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_IsRemainHP_IsRemain' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_IsValid_ReturnValue) == 0x00009A, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x0000A0, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, K2Node_DynamicCast_bSuccess2) == 0x0000A8, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, K2Node_Select_Default) == 0x0000B0, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GiveDamageFunction, CallFunc_IsRemainHP_IsRemain1) == 0x0000B8, "Member 'BP_AJBInGameCharacter_C_GiveDamageFunction::CallFunc_IsRemainHP_IsRemain1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetCapsuleDiameter
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameCharacter_C_GetCapsuleDiameter final
{
public:
	float                                         CapsuleDiameter;                                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCapsuleRadius_CapsuleRadius;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetCapsuleDiameter) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_GetCapsuleDiameter");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetCapsuleDiameter) == 0x00000C, "Wrong size on BP_AJBInGameCharacter_C_GetCapsuleDiameter");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCapsuleDiameter, CapsuleDiameter) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetCapsuleDiameter::CapsuleDiameter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCapsuleDiameter, CallFunc_GetCapsuleRadius_CapsuleRadius) == 0x000004, "Member 'BP_AJBInGameCharacter_C_GetCapsuleDiameter::CallFunc_GetCapsuleRadius_CapsuleRadius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCapsuleDiameter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_GetCapsuleDiameter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeSealSkills
// 0x0060 (0x0060 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeSealSkills final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AJBSupportSkillBase_C*>      CallFunc_GetComponentsByClass_ReturnValue;         // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_AJBSkillBase_C*>             CallFunc_GetComponentsByClass_ReturnValue1;        // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	class UBP_AJBSupportSkillBase_C*              CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item1;                          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeSealSkills) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeSealSkills");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeSealSkills) == 0x000060, "Wrong size on BP_AJBInGameCharacter_C_ChangeSealSkills");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSealSkills, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeSealSkills::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSealSkills, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_C_ChangeSealSkills::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSealSkills, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ChangeSealSkills::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSealSkills, CallFunc_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_ChangeSealSkills::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSealSkills, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_ChangeSealSkills::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSealSkills, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_AJBInGameCharacter_C_ChangeSealSkills::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSealSkills, Temp_int_Loop_Counter_Variable1) == 0x000028, "Member 'BP_AJBInGameCharacter_C_ChangeSealSkills::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSealSkills, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_ChangeSealSkills::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSealSkills, CallFunc_Add_IntInt_ReturnValue1) == 0x000030, "Member 'BP_AJBInGameCharacter_C_ChangeSealSkills::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSealSkills, Temp_int_Array_Index_Variable1) == 0x000034, "Member 'BP_AJBInGameCharacter_C_ChangeSealSkills::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSealSkills, CallFunc_GetComponentsByClass_ReturnValue1) == 0x000038, "Member 'BP_AJBInGameCharacter_C_ChangeSealSkills::CallFunc_GetComponentsByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSealSkills, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_AJBInGameCharacter_C_ChangeSealSkills::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSealSkills, CallFunc_Array_Get_Item1) == 0x000050, "Member 'BP_AJBInGameCharacter_C_ChangeSealSkills::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSealSkills, CallFunc_Array_Length_ReturnValue1) == 0x000058, "Member 'BP_AJBInGameCharacter_C_ChangeSealSkills::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSealSkills, CallFunc_Less_IntInt_ReturnValue1) == 0x00005C, "Member 'BP_AJBInGameCharacter_C_ChangeSealSkills::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckActiveBehaviorIsEmote
// 0x000A (0x000A - 0x0000)
struct BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote final
{
public:
	bool                                          bRetValue;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharacterActiveBehavior                      Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable5;                               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable6;                               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote) == 0x00000A, "Wrong size on BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote, bRetValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote::bRetValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote, Temp_byte_Variable) == 0x000001, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote, Temp_bool_Variable) == 0x000002, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote, Temp_bool_Variable1) == 0x000003, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote, Temp_bool_Variable2) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote, Temp_bool_Variable3) == 0x000005, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote, Temp_bool_Variable4) == 0x000006, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote, Temp_bool_Variable5) == 0x000007, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote, Temp_bool_Variable6) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote::Temp_bool_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote, K2Node_Select_Default) == 0x000009, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorIsEmote::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcDamageRate
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameCharacter_C_CalcDamageRate final
{
public:
	float                                         DamageRate;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CalcDamageRate) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_CalcDamageRate");
static_assert(sizeof(BP_AJBInGameCharacter_C_CalcDamageRate) == 0x00000C, "Wrong size on BP_AJBInGameCharacter_C_CalcDamageRate");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcDamageRate, DamageRate) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CalcDamageRate::DamageRate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcDamageRate, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CalcDamageRate::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcDamageRate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CalcDamageRate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsFullHP
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_IsFullHP final
{
public:
	int32                                         SpecifiedHPMax;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFullHP;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IsFullHP) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_IsFullHP");
static_assert(sizeof(BP_AJBInGameCharacter_C_IsFullHP) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_IsFullHP");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsFullHP, SpecifiedHPMax) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IsFullHP::SpecifiedHPMax' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsFullHP, bFullHP) == 0x000004, "Member 'BP_AJBInGameCharacter_C_IsFullHP::bFullHP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsFullHP, Temp_bool_Variable) == 0x000005, "Member 'BP_AJBInGameCharacter_C_IsFullHP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsFullHP, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000006, "Member 'BP_AJBInGameCharacter_C_IsFullHP::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsFullHP, K2Node_Select_Default) == 0x000008, "Member 'BP_AJBInGameCharacter_C_IsFullHP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsFullHP, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_IsFullHP::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckActiveInteract
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckActiveInteract final
{
public:
	bool                                          bActiveLongPressInteract;                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckActiveInteract) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CheckActiveInteract");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckActiveInteract) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_CheckActiveInteract");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveInteract, bActiveLongPressInteract) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckActiveInteract::bActiveLongPressInteract' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ResetActionAndCondition
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_ResetActionAndCondition final
{
public:
	struct FGameplayTag                           DamageType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ResetActionAndCondition) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ResetActionAndCondition");
static_assert(sizeof(BP_AJBInGameCharacter_C_ResetActionAndCondition) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_ResetActionAndCondition");
static_assert(offsetof(BP_AJBInGameCharacter_C_ResetActionAndCondition, DamageType) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ResetActionAndCondition::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ResetActionAndCondition, CallFunc_MatchesTag_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ResetActionAndCondition::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ResetActionAndCondition, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BP_AJBInGameCharacter_C_ResetActionAndCondition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsCritical
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_IsCritical final
{
public:
	bool                                          IsCritical_0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IsCritical) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_IsCritical");
static_assert(sizeof(BP_AJBInGameCharacter_C_IsCritical) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_IsCritical");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsCritical, IsCritical_0) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IsCritical::IsCritical_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsCritical, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_IsCritical::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.Revive
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_Revive final
{
public:
	int32                                         NewHP;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Rescuer;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveToCritical_bIsActiveToCritical;   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCritical_IsCritical;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_Revive) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_Revive");
static_assert(sizeof(BP_AJBInGameCharacter_C_Revive) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_Revive");
static_assert(offsetof(BP_AJBInGameCharacter_C_Revive, NewHP) == 0x000000, "Member 'BP_AJBInGameCharacter_C_Revive::NewHP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Revive, Rescuer) == 0x000008, "Member 'BP_AJBInGameCharacter_C_Revive::Rescuer' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Revive, bSuccess) == 0x000010, "Member 'BP_AJBInGameCharacter_C_Revive::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Revive, CallFunc_IsActiveToCritical_bIsActiveToCritical) == 0x000011, "Member 'BP_AJBInGameCharacter_C_Revive::CallFunc_IsActiveToCritical_bIsActiveToCritical' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Revive, CallFunc_IsCritical_IsCritical) == 0x000012, "Member 'BP_AJBInGameCharacter_C_Revive::CallFunc_IsCritical_IsCritical' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Revive, CallFunc_Clamp_ReturnValue) == 0x000014, "Member 'BP_AJBInGameCharacter_C_Revive::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CharacterBehaviorMatches
// 0x001B (0x001B - 0x0000)
struct BP_AJBInGameCharacter_C_CharacterBehaviorMatches final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ActiveToCritical;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Critical;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CriticalToActive;                                  // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DeathAndEnd;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DeathButRessurect;                                 // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0006(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsResurrectable_bResult;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue5;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue4;         // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue6;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue7;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue3;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue4;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CharacterBehaviorMatches");
static_assert(sizeof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches) == 0x00001B, "Wrong size on BP_AJBInGameCharacter_C_CharacterBehaviorMatches");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, Active) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::Active' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, ActiveToCritical) == 0x000001, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::ActiveToCritical' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, Critical) == 0x000002, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::Critical' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, CriticalToActive) == 0x000003, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::CriticalToActive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, DeathAndEnd) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::DeathAndEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, DeathButRessurect) == 0x000005, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::DeathButRessurect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, ReturnValue) == 0x000006, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, CallFunc_IsResurrectable_bResult) == 0x000007, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::CallFunc_IsResurrectable_bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x00000A, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, CallFunc_BooleanAND_ReturnValue1) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, CallFunc_BooleanAND_ReturnValue2) == 0x00000D, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, CallFunc_BooleanAND_ReturnValue3) == 0x00000E, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x00000F, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, CallFunc_BooleanAND_ReturnValue4) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, CallFunc_BooleanAND_ReturnValue5) == 0x000011, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::CallFunc_BooleanAND_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x000012, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, CallFunc_EqualEqual_ByteByte_ReturnValue4) == 0x000013, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::CallFunc_EqualEqual_ByteByte_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, CallFunc_BooleanAND_ReturnValue6) == 0x000014, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::CallFunc_BooleanAND_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, CallFunc_BooleanAND_ReturnValue7) == 0x000015, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::CallFunc_BooleanAND_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, CallFunc_BooleanOR_ReturnValue) == 0x000016, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, CallFunc_BooleanOR_ReturnValue1) == 0x000017, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, CallFunc_BooleanOR_ReturnValue2) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, CallFunc_BooleanOR_ReturnValue3) == 0x000019, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::CallFunc_BooleanOR_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CharacterBehaviorMatches, CallFunc_BooleanOR_ReturnValue4) == 0x00001A, "Member 'BP_AJBInGameCharacter_C_CharacterBehaviorMatches::CallFunc_BooleanOR_ReturnValue4' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetCameraTurnSpeedScale
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_SetCameraTurnSpeedScale final
{
public:
	float                                         TurnScale;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SetCameraTurnSpeedScale) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_SetCameraTurnSpeedScale");
static_assert(sizeof(BP_AJBInGameCharacter_C_SetCameraTurnSpeedScale) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_SetCameraTurnSpeedScale");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetCameraTurnSpeedScale, TurnScale) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SetCameraTurnSpeedScale::TurnScale' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetPoliticInteractAction
// 0x00C8 (0x00C8 - 0x0000)
struct BP_AJBInGameCharacter_C_GetPoliticInteractAction final
{
public:
	class ABP_AJBInGameCharacter_C*               OperatorCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceLength;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Object;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                HighestPriorityObject;                             // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HighestPriority;                                   // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        SatisfiedObjects;                                  // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UActorComponent*>                CallFunc_GetComponentsByClass_ReturnValue;         // 0x0040(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_InteractActionInterface_C> K2Node_DynamicCast_AsBI_Interact_Action_Interface; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPriority_Priority;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_Array_Get_Item1;                          // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_InteractActionInterface_C> K2Node_DynamicCast_AsBI_Interact_Action_Interface1; // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckInteractable_bInteractable;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetPoliticInteractAction) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_GetPoliticInteractAction");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetPoliticInteractAction) == 0x0000C8, "Wrong size on BP_AJBInGameCharacter_C_GetPoliticInteractAction");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, OperatorCharacter) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::OperatorCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, TargetActor) == 0x000008, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, TraceLength) == 0x000010, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::TraceLength' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, bSuccess) == 0x000014, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, Object) == 0x000018, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::Object' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, HighestPriorityObject) == 0x000020, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::HighestPriorityObject' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, HighestPriority) == 0x000028, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::HighestPriority' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, SatisfiedObjects) == 0x000030, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::SatisfiedObjects' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, CallFunc_GetComponentsByClass_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000058, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, Temp_int_Loop_Counter_Variable1) == 0x000064, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, K2Node_DynamicCast_AsBI_Interact_Action_Interface) == 0x000078, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::K2Node_DynamicCast_AsBI_Interact_Action_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, CallFunc_GetPriority_Priority) == 0x00008C, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::CallFunc_GetPriority_Priority' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, CallFunc_Array_Length_ReturnValue1) == 0x000090, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, CallFunc_Less_IntInt_ReturnValue1) == 0x000094, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, CallFunc_Add_IntInt_ReturnValue1) == 0x000098, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, Temp_int_Array_Index_Variable1) == 0x00009C, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, CallFunc_Array_Get_Item1) == 0x0000A0, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, K2Node_DynamicCast_AsBI_Interact_Action_Interface1) == 0x0000A8, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::K2Node_DynamicCast_AsBI_Interact_Action_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, K2Node_DynamicCast_bSuccess1) == 0x0000B8, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, CallFunc_Array_AddUnique_ReturnValue) == 0x0000BC, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, CallFunc_CheckInteractable_bInteractable) == 0x0000C0, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::CallFunc_CheckInteractable_bInteractable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, CallFunc_DoesImplementInterface_ReturnValue) == 0x0000C1, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticInteractAction, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C2, "Member 'BP_AJBInGameCharacter_C_GetPoliticInteractAction::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateBehavior(Server)
// 0x0014 (0x0014 - 0x0000)
struct BP_AJBInGameCharacter_C_UpdateBehavior_Server_ final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBeingRescued_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_UpdateBehavior_Server_) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_UpdateBehavior_Server_");
static_assert(sizeof(BP_AJBInGameCharacter_C_UpdateBehavior_Server_) == 0x000014, "Wrong size on BP_AJBInGameCharacter_C_UpdateBehavior_Server_");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateBehavior_Server_, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameCharacter_C_UpdateBehavior_Server_::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateBehavior_Server_, CallFunc_IsBeingRescued_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_UpdateBehavior_Server_::CallFunc_IsBeingRescued_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateBehavior_Server_, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'BP_AJBInGameCharacter_C_UpdateBehavior_Server_::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateBehavior_Server_, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_UpdateBehavior_Server_::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateBehavior_Server_, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_UpdateBehavior_Server_::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateBehavior_Server_, K2Node_SwitchEnum_CmpSuccess) == 0x00000D, "Member 'BP_AJBInGameCharacter_C_UpdateBehavior_Server_::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateBehavior_Server_, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000010, "Member 'BP_AJBInGameCharacter_C_UpdateBehavior_Server_::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeCharacterBehavior(Server)
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeCharacterBehavior_Server_ final
{
public:
	ECharacterBehavior                            NewBehavior;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterBehavior                            LOldBehavior;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeCharacterBehavior_Server_) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeCharacterBehavior_Server_");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeCharacterBehavior_Server_) == 0x000003, "Wrong size on BP_AJBInGameCharacter_C_ChangeCharacterBehavior_Server_");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeCharacterBehavior_Server_, NewBehavior) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeCharacterBehavior_Server_::NewBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeCharacterBehavior_Server_, LOldBehavior) == 0x000001, "Member 'BP_AJBInGameCharacter_C_ChangeCharacterBehavior_Server_::LOldBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeCharacterBehavior_Server_, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_AJBInGameCharacter_C_ChangeCharacterBehavior_Server_::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeSpectatorOnDead(Server)
// 0x0280 (0x0280 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_ final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue1;               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue2;               // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue3;               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue5;               // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue; // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        CallFunc_Array_Get_Item;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameWatcherCamera_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Watcher_Camera; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable3;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue4;               // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue6;               // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue7;               // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue8;               // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable3;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        CallFunc_Array_Get_Item1;                          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue1;                  // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameWatcherCamera_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Watcher_Camera1; // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_ChangeCameraByControllerInput_Server__TargetCharacterBP; // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable4;                    // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetPairCharacterBP_PairCharacterBP;       // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue;     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable4;                   // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable5;                    // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        CallFunc_Array_Get_Item2;                          // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller; // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable6;                    // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        CallFunc_Array_Get_Item3;                          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        CallFunc_Array_Get_Item4;                          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue4;                // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable5;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21D[0x3];                                      // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable6;                   // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue1;       // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_232[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        CallFunc_Array_Get_Item5;                          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue5;                // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue4;                 // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue5;                 // 0x0245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_246[0x2];                                      // 0x0246(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue6;                  // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller1; // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller2; // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue3;                   // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        CallFunc_Array_Get_Item6;                          // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue6;                // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue6;                 // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_) == 0x000280, "Wrong size on BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, DamageCauser) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, Temp_int_Array_Index_Variable1) == 0x000014, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_GetObjectName_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_GetObjectName_ReturnValue1) == 0x000028, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_GetObjectName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Conv_IntToString_ReturnValue) == 0x000038, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_GetObjectName_ReturnValue2) == 0x000048, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_GetObjectName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_GetObjectName_ReturnValue3) == 0x000058, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_GetObjectName_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Concat_StrStr_ReturnValue1) == 0x000078, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Concat_StrStr_ReturnValue2) == 0x000088, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Concat_StrStr_ReturnValue3) == 0x000098, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Concat_StrStr_ReturnValue4) == 0x0000A8, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Concat_StrStr_ReturnValue5) == 0x0000B8, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Concat_StrStr_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, Temp_int_Loop_Counter_Variable1) == 0x0000C8, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, Temp_int_Loop_Counter_Variable2) == 0x0000CC, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Add_IntInt_ReturnValue1) == 0x0000D0, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Add_IntInt_ReturnValue2) == 0x0000D4, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x0000E0, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue) == 0x0000E9, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000EA, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Not_PreBool_ReturnValue) == 0x0000EB, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, Temp_int_Array_Index_Variable2) == 0x0000EC, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Array_Add_ReturnValue) == 0x0000F8, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_K2_GetPawn_ReturnValue) == 0x000100, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, K2Node_DynamicCast_AsBP_AJBIn_Game_Watcher_Camera) == 0x000108, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::K2Node_DynamicCast_AsBP_AJBIn_Game_Watcher_Camera' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, K2Node_DynamicCast_bSuccess1) == 0x000110, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, Temp_int_Array_Index_Variable3) == 0x000114, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::Temp_int_Array_Index_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_GetObjectName_ReturnValue4) == 0x000118, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_GetObjectName_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Concat_StrStr_ReturnValue6) == 0x000128, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Concat_StrStr_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Concat_StrStr_ReturnValue7) == 0x000138, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Concat_StrStr_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Concat_StrStr_ReturnValue8) == 0x000148, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Concat_StrStr_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, Temp_int_Loop_Counter_Variable3) == 0x000158, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::Temp_int_Loop_Counter_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Array_Get_Item1) == 0x000160, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Array_Length_ReturnValue1) == 0x000168, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_K2_GetPawn_ReturnValue1) == 0x000170, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_K2_GetPawn_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Less_IntInt_ReturnValue) == 0x000178, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, K2Node_DynamicCast_AsBP_AJBIn_Game_Watcher_Camera1) == 0x000180, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::K2Node_DynamicCast_AsBP_AJBIn_Game_Watcher_Camera1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, K2Node_DynamicCast_bSuccess2) == 0x000188, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_ChangeCameraByControllerInput_Server__TargetCharacterBP) == 0x000190, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_ChangeCameraByControllerInput_Server__TargetCharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Add_IntInt_ReturnValue3) == 0x000198, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_IsValid_ReturnValue) == 0x00019C, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Array_Add_ReturnValue1) == 0x0001A0, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, Temp_int_Array_Index_Variable4) == 0x0001A4, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::Temp_int_Array_Index_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_GetPairCharacterBP_PairCharacterBP) == 0x0001A8, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_GetPairCharacterBP_PairCharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_CharacterBehaviorMatches_ReturnValue) == 0x0001B0, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_CharacterBehaviorMatches_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Array_Length_ReturnValue2) == 0x0001B4, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_IsValid_ReturnValue1) == 0x0001B8, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, Temp_int_Loop_Counter_Variable4) == 0x0001BC, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::Temp_int_Loop_Counter_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Array_Length_ReturnValue3) == 0x0001C0, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Less_IntInt_ReturnValue1) == 0x0001C4, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Add_IntInt_ReturnValue4) == 0x0001C8, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, Temp_int_Array_Index_Variable5) == 0x0001CC, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::Temp_int_Array_Index_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Array_Get_Item2) == 0x0001D0, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller) == 0x0001D8, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, K2Node_DynamicCast_bSuccess3) == 0x0001E0, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Array_Add_ReturnValue2) == 0x0001E4, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, Temp_int_Array_Index_Variable6) == 0x0001E8, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::Temp_int_Array_Index_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Array_Get_Item3) == 0x0001F0, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x0001F8, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, K2Node_DynamicCast_bSuccess4) == 0x000200, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Array_Get_Item4) == 0x000208, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Array_Length_ReturnValue4) == 0x000210, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Array_Length_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Less_IntInt_ReturnValue2) == 0x000214, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, Temp_int_Loop_Counter_Variable5) == 0x000218, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::Temp_int_Loop_Counter_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Less_IntInt_ReturnValue3) == 0x00021C, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Add_IntInt_ReturnValue5) == 0x000220, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, Temp_int_Loop_Counter_Variable6) == 0x000224, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::Temp_int_Loop_Counter_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x000228, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, K2Node_DynamicCast_bSuccess5) == 0x000230, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_NotEqual_ObjectObject_ReturnValue1) == 0x000231, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_NotEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Array_Get_Item5) == 0x000238, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Array_Get_Item5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Array_Length_ReturnValue5) == 0x000240, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Array_Length_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Less_IntInt_ReturnValue4) == 0x000244, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Less_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Less_IntInt_ReturnValue5) == 0x000245, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Less_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Add_IntInt_ReturnValue6) == 0x000248, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Add_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller1) == 0x000250, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, K2Node_DynamicCast_bSuccess6) == 0x000258, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller2) == 0x000260, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, K2Node_DynamicCast_bSuccess7) == 0x000268, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Array_Add_ReturnValue3) == 0x00026C, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Array_Add_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Array_Get_Item6) == 0x000270, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Array_Get_Item6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Array_Length_ReturnValue6) == 0x000278, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Array_Length_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_, CallFunc_Less_IntInt_ReturnValue6) == 0x00027C, "Member 'BP_AJBInGameCharacter_C_ChangeSpectatorOnDead_Server_::CallFunc_Less_IntInt_ReturnValue6' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetGenerateParticleLocation
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameCharacter_C_GetGenerateParticleLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight;   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetFootLocation_Location;                 // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetGenerateParticleLocation) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_GetGenerateParticleLocation");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetGenerateParticleLocation) == 0x000040, "Wrong size on BP_AJBInGameCharacter_C_GetGenerateParticleLocation");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGenerateParticleLocation, Location) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetGenerateParticleLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGenerateParticleLocation, CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_GetGenerateParticleLocation::CallFunc_GetCapsuleHalfHeight_CapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGenerateParticleLocation, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_GetGenerateParticleLocation::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGenerateParticleLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_AJBInGameCharacter_C_GetGenerateParticleLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGenerateParticleLocation, CallFunc_GetFootLocation_Location) == 0x000018, "Member 'BP_AJBInGameCharacter_C_GetGenerateParticleLocation::CallFunc_GetFootLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGenerateParticleLocation, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000024, "Member 'BP_AJBInGameCharacter_C_GetGenerateParticleLocation::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGenerateParticleLocation, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_GetGenerateParticleLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGenerateParticleLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000034, "Member 'BP_AJBInGameCharacter_C_GetGenerateParticleLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetGenerateParticleRelativeLocationFromCapsuleCenter
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameCharacter_C_GetGenerateParticleRelativeLocationFromCapsuleCenter final
{
public:
	struct FVector                                RelativeLocation;                                  // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetGenerateParticleLocation_Location;     // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetGenerateParticleRelativeLocationFromCapsuleCenter) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_GetGenerateParticleRelativeLocationFromCapsuleCenter");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetGenerateParticleRelativeLocationFromCapsuleCenter) == 0x000030, "Wrong size on BP_AJBInGameCharacter_C_GetGenerateParticleRelativeLocationFromCapsuleCenter");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGenerateParticleRelativeLocationFromCapsuleCenter, RelativeLocation) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetGenerateParticleRelativeLocationFromCapsuleCenter::RelativeLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGenerateParticleRelativeLocationFromCapsuleCenter, CallFunc_GetGenerateParticleLocation_Location) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_GetGenerateParticleRelativeLocationFromCapsuleCenter::CallFunc_GetGenerateParticleLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGenerateParticleRelativeLocationFromCapsuleCenter, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_GetGenerateParticleRelativeLocationFromCapsuleCenter::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGenerateParticleRelativeLocationFromCapsuleCenter, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000024, "Member 'BP_AJBInGameCharacter_C_GetGenerateParticleRelativeLocationFromCapsuleCenter::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcBattleRank_OnServer
// 0x00E0 (0x00E0 - 0x0000)
struct BP_AJBInGameCharacter_C_CalcBattleRank_OnServer final
{
public:
	bool                                          IsDetermined;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Rank;                                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RankWithoutCPU;                                    // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         SurvivingPairIDsWithoutCPU;                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_BattleGameRankWithoutCPU;                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_BattleGameRank;                               // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               Temp_PairCharacterBP;                              // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         SurvivingPairIDs;                                  // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	bool                                          CallFunc_PlayModeIsPair_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetPairCharacterBP_PairCharacterBP;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBInGameCharacter_C*>       CallFunc_GetJoinPawns_OutPawns;                    // 0x0080(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue1;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPair_bPairCharacter;                    // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue;     // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B7[0x1];                                       // 0x00B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBBattleGameState_C*               K2Node_DynamicCast_AsBP_AJBBattle_Game_State;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue1;    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLivingPlayerCountWithoutCPU_Server__Count; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLivingPlayerCount_Count;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CalcBattleRank_OnServer");
static_assert(sizeof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer) == 0x0000E0, "Wrong size on BP_AJBInGameCharacter_C_CalcBattleRank_OnServer");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, IsDetermined) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::IsDetermined' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, Rank) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::Rank' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, RankWithoutCPU) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::RankWithoutCPU' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, SurvivingPairIDsWithoutCPU) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::SurvivingPairIDsWithoutCPU' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, Temp_BattleGameRankWithoutCPU) == 0x000020, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::Temp_BattleGameRankWithoutCPU' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, Temp_BattleGameRank) == 0x000024, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::Temp_BattleGameRank' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, Temp_PairCharacterBP) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::Temp_PairCharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, SurvivingPairIDs) == 0x000030, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::SurvivingPairIDs' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_PlayModeIsPair_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_PlayModeIsPair_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_GetPairCharacterBP_PairCharacterBP) == 0x000048, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_GetPairCharacterBP_PairCharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_MakeLiteralString_ReturnValue) == 0x000058, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_Add_IntInt_ReturnValue1) == 0x000074, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_Array_Length_ReturnValue1) == 0x000078, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_GetJoinPawns_OutPawns) == 0x000080, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_GetJoinPawns_OutPawns' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_Add_IntInt_ReturnValue2) == 0x000090, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_Array_AddUnique_ReturnValue) == 0x0000A0, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_StartsWith_ReturnValue) == 0x0000A4, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_Array_AddUnique_ReturnValue1) == 0x0000A8, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_Array_AddUnique_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_Not_PreBool_ReturnValue) == 0x0000AC, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_IsPair_bPairCharacter) == 0x0000AD, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_IsPair_bPairCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_Not_PreBool_ReturnValue1) == 0x0000AE, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_CharacterBehaviorMatches_ReturnValue) == 0x0000AF, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_CharacterBehaviorMatches_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_Array_Length_ReturnValue2) == 0x0000B0, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_BooleanAND_ReturnValue) == 0x0000B4, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_Less_IntInt_ReturnValue) == 0x0000B5, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_BooleanAND_ReturnValue1) == 0x0000B6, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_GetGameState_ReturnValue) == 0x0000B8, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, K2Node_DynamicCast_AsBP_AJBBattle_Game_State) == 0x0000C0, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::K2Node_DynamicCast_AsBP_AJBBattle_Game_State' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_CharacterBehaviorMatches_ReturnValue1) == 0x0000C9, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_CharacterBehaviorMatches_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_GetLivingPlayerCountWithoutCPU_Server__Count) == 0x0000CC, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_GetLivingPlayerCountWithoutCPU_Server__Count' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_Add_IntInt_ReturnValue3) == 0x0000D0, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_GetLivingPlayerCount_Count) == 0x0000D4, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_GetLivingPlayerCount_Count' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_Add_IntInt_ReturnValue4) == 0x0000D8, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcBattleRank_OnServer, CallFunc_IsValid_ReturnValue1) == 0x0000DC, "Member 'BP_AJBInGameCharacter_C_CalcBattleRank_OnServer::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CanEmote
// 0x0130 (0x0130 - 0x0000)
struct BP_AJBInGameCharacter_C_CanEmote final
{
public:
	struct FGameplayTagContainer                  FailureFactor;                                     // 0x0000(0x0020)(Parm, OutParm)
	struct FGameplayTagContainer                  FailureSkills;                                     // 0x0020(0x0020)(Parm, OutParm)
	bool                                          bCanEmote;                                         // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TempFailureSkills;                                 // 0x0048(0x0020)(Edit, BlueprintVisible)
	struct FGameplayTagContainer                  TempFactorTags;                                    // 0x0068(0x0020)(Edit, BlueprintVisible)
	TArray<class UBP_AJBSkillBase_C*>             LSkillComponents;                                  // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue;            // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue1;           // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue;     // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue; // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue; // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue1; // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInputCameraOnly_bReturnValue;  // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInput_InputEnable;             // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillActive_ReturnValue;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D7[0x1];                                       // 0x00D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumGameplayTagsInContainer_ReturnValue; // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue6;                 // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue1; // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DF[0x1];                                       // 0x00DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AJBLongPressInteract_C*>     CallFunc_GetComponentsByClass_ReturnValue;         // 0x00E0(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue7;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBLongPressInteract_C*             CallFunc_Array_Get_Item1;                          // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActive_bActive;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFalling_bFalling;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AJBSkillBase_C*>             CallFunc_GetComponentsByClass_ReturnValue1;        // 0x0120(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CanEmote) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CanEmote");
static_assert(sizeof(BP_AJBInGameCharacter_C_CanEmote) == 0x000130, "Wrong size on BP_AJBInGameCharacter_C_CanEmote");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, FailureFactor) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CanEmote::FailureFactor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, FailureSkills) == 0x000020, "Member 'BP_AJBInGameCharacter_C_CanEmote::FailureSkills' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, bCanEmote) == 0x000040, "Member 'BP_AJBInGameCharacter_C_CanEmote::bCanEmote' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, TempFailureSkills) == 0x000048, "Member 'BP_AJBInGameCharacter_C_CanEmote::TempFailureSkills' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, TempFactorTags) == 0x000068, "Member 'BP_AJBInGameCharacter_C_CanEmote::TempFactorTags' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, LSkillComponents) == 0x000088, "Member 'BP_AJBInGameCharacter_C_CanEmote::LSkillComponents' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'BP_AJBInGameCharacter_C_CanEmote::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_CheckActiveBehavior_bRetValue) == 0x00009C, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_CheckActiveBehavior_bRetValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_Not_PreBool_ReturnValue) == 0x0000A4, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_CheckActiveBehavior_bRetValue1) == 0x0000A5, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_CheckActiveBehavior_bRetValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_CheckActiveBehaviorIsEmote_bRetValue) == 0x0000A6, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_CheckActiveBehaviorIsEmote_bRetValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_Not_PreBool_ReturnValue1) == 0x0000A7, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_Not_PreBool_ReturnValue2) == 0x0000A8, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, Temp_int_Array_Index_Variable) == 0x0000AC, "Member 'BP_AJBInGameCharacter_C_CanEmote::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_CheckCharacterBehavior_Active_bReturnValue) == 0x0000B0, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_CheckCharacterBehavior_Active_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_CheckCharacterBehavior_Critical_bReturnValue) == 0x0000B1, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_CheckCharacterBehavior_Critical_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_CheckCharacterBehavior_Critical_bReturnValue1) == 0x0000B2, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_CheckCharacterBehavior_Critical_bReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_BooleanOR_ReturnValue) == 0x0000B3, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_Not_PreBool_ReturnValue3) == 0x0000B4, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_CheckEnableInputCameraOnly_bReturnValue) == 0x0000B5, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_CheckEnableInputCameraOnly_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_Not_PreBool_ReturnValue4) == 0x0000B6, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_CheckEnableInput_InputEnable) == 0x0000B7, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_CheckEnableInput_InputEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x0000B8, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_IsSkillActive_ReturnValue) == 0x0000CC, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_IsSkillActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, Temp_int_Array_Index_Variable1) == 0x0000D0, "Member 'BP_AJBInGameCharacter_C_CanEmote::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_HasTag_ReturnValue) == 0x0000D4, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_Not_PreBool_ReturnValue5) == 0x0000D5, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, Temp_bool_True_if_break_was_hit_Variable) == 0x0000D6, "Member 'BP_AJBInGameCharacter_C_CanEmote::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_GetNumGameplayTagsInContainer_ReturnValue) == 0x0000D8, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_GetNumGameplayTagsInContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_Not_PreBool_ReturnValue6) == 0x0000DD, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_Not_PreBool_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_CheckCharacterBehavior_Active_bReturnValue1) == 0x0000DE, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_CheckCharacterBehavior_Active_bReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_GetComponentsByClass_ReturnValue) == 0x0000E0, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_Not_PreBool_ReturnValue7) == 0x0000F0, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_Not_PreBool_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_Array_Get_Item1) == 0x0000F8, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_CheckActive_bActive) == 0x000100, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_CheckActive_bActive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_Array_Length_ReturnValue1) == 0x000104, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, Temp_int_Loop_Counter_Variable1) == 0x00010C, "Member 'BP_AJBInGameCharacter_C_CanEmote::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_BooleanAND_ReturnValue) == 0x000110, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_Less_IntInt_ReturnValue1) == 0x000111, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_Add_IntInt_ReturnValue1) == 0x000114, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_CheckFalling_bFalling) == 0x000118, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_CheckFalling_bFalling' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanEmote, CallFunc_GetComponentsByClass_ReturnValue1) == 0x000120, "Member 'BP_AJBInGameCharacter_C_CanEmote::CallFunc_GetComponentsByClass_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsOperatingSeparatedStand
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_IsOperatingSeparatedStand final
{
public:
	bool                                          bIncludeTransition;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSeparating_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IsOperatingSeparatedStand) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_IsOperatingSeparatedStand");
static_assert(sizeof(BP_AJBInGameCharacter_C_IsOperatingSeparatedStand) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_IsOperatingSeparatedStand");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsOperatingSeparatedStand, bIncludeTransition) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IsOperatingSeparatedStand::bIncludeTransition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsOperatingSeparatedStand, ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_IsOperatingSeparatedStand::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsOperatingSeparatedStand, CallFunc_IsSeparating_ReturnValue) == 0x000002, "Member 'BP_AJBInGameCharacter_C_IsOperatingSeparatedStand::CallFunc_IsSeparating_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsOperatingSeparatedStand, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'BP_AJBInGameCharacter_C_IsOperatingSeparatedStand::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CanDash
// 0x000A (0x000A - 0x0000)
struct BP_AJBInGameCharacter_C_CanDash final
{
public:
	bool                                          bIsDash;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EDashInputMode                                Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckDashInput_bDashInput;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckRunInput_bRunInput;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDashInput_bDashInput1;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckRunInput_bRunInput1;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CanDash) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CanDash");
static_assert(sizeof(BP_AJBInGameCharacter_C_CanDash) == 0x00000A, "Wrong size on BP_AJBInGameCharacter_C_CanDash");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanDash, bIsDash) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CanDash::bIsDash' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanDash, Temp_byte_Variable) == 0x000001, "Member 'BP_AJBInGameCharacter_C_CanDash::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanDash, CallFunc_CheckDashInput_bDashInput) == 0x000002, "Member 'BP_AJBInGameCharacter_C_CanDash::CallFunc_CheckDashInput_bDashInput' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanDash, CallFunc_CheckRunInput_bRunInput) == 0x000003, "Member 'BP_AJBInGameCharacter_C_CanDash::CallFunc_CheckRunInput_bRunInput' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanDash, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CanDash::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanDash, CallFunc_CheckDashInput_bDashInput1) == 0x000005, "Member 'BP_AJBInGameCharacter_C_CanDash::CallFunc_CheckDashInput_bDashInput1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanDash, CallFunc_CheckRunInput_bRunInput1) == 0x000006, "Member 'BP_AJBInGameCharacter_C_CanDash::CallFunc_CheckRunInput_bRunInput1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanDash, CallFunc_BooleanAND_ReturnValue1) == 0x000007, "Member 'BP_AJBInGameCharacter_C_CanDash::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanDash, CallFunc_BooleanAND_ReturnValue2) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CanDash::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanDash, K2Node_Select_Default) == 0x000009, "Member 'BP_AJBInGameCharacter_C_CanDash::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateDashTimeCount
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameCharacter_C_UpdateDashTimeCount final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_UpdateDashTimeCount) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_UpdateDashTimeCount");
static_assert(sizeof(BP_AJBInGameCharacter_C_UpdateDashTimeCount) == 0x00000C, "Wrong size on BP_AJBInGameCharacter_C_UpdateDashTimeCount");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDashTimeCount, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameCharacter_C_UpdateDashTimeCount::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDashTimeCount, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_UpdateDashTimeCount::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDashTimeCount, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_UpdateDashTimeCount::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetMaxAcceleration
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameCharacter_C_GetMaxAcceleration final
{
public:
	float                                         MaxAcceleration;                                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempMaxAcceleration;                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetMaxAcceleration) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_GetMaxAcceleration");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetMaxAcceleration) == 0x00000C, "Wrong size on BP_AJBInGameCharacter_C_GetMaxAcceleration");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetMaxAcceleration, MaxAcceleration) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetMaxAcceleration::MaxAcceleration' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetMaxAcceleration, TempMaxAcceleration) == 0x000004, "Member 'BP_AJBInGameCharacter_C_GetMaxAcceleration::TempMaxAcceleration' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetMaxAcceleration, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_GetMaxAcceleration::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetMaxAcceleration, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000009, "Member 'BP_AJBInGameCharacter_C_GetMaxAcceleration::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetMaxAcceleration, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x00000A, "Member 'BP_AJBInGameCharacter_C_GetMaxAcceleration::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetMaxAcceleration, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x00000B, "Member 'BP_AJBInGameCharacter_C_GetMaxAcceleration::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateMaxAcceleration
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameCharacter_C_UpdateMaxAcceleration final
{
public:
	float                                         CallFunc_GetMaxAcceleration_MaxAcceleration;       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxAcceleration_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_UpdateMaxAcceleration) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_UpdateMaxAcceleration");
static_assert(sizeof(BP_AJBInGameCharacter_C_UpdateMaxAcceleration) == 0x00000C, "Wrong size on BP_AJBInGameCharacter_C_UpdateMaxAcceleration");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMaxAcceleration, CallFunc_GetMaxAcceleration_MaxAcceleration) == 0x000000, "Member 'BP_AJBInGameCharacter_C_UpdateMaxAcceleration::CallFunc_GetMaxAcceleration_MaxAcceleration' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMaxAcceleration, CallFunc_GetMaxAcceleration_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_UpdateMaxAcceleration::CallFunc_GetMaxAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMaxAcceleration, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_UpdateMaxAcceleration::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckMovementChange
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckMovementChange final
{
public:
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckMovementChange) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CheckMovementChange");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckMovementChange) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_CheckMovementChange");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMovementChange, CallFunc_HasLocalSharedController_ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckMovementChange::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMovementChange, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_CheckMovementChange::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnWalkingStateChanged
// 0x0070 (0x0070 - 0x0000)
struct BP_AJBInGameCharacter_C_OnWalkingStateChanged final
{
public:
	EWalkingState                                 PrevState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWalkingState                                 NextState;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue2;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSupportSkillBase_C*              CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckDashInput_bDashInput;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item1;                          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAnySkillActive_IsActive;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInPreview_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillActive_ReturnValue;                // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnWalkingStateChanged) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnWalkingStateChanged");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnWalkingStateChanged) == 0x000070, "Wrong size on BP_AJBInGameCharacter_C_OnWalkingStateChanged");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, PrevState) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::PrevState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, NextState) == 0x000001, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::NextState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_HasLocalSharedController_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_Array_Length_ReturnValue1) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_HasLocalSharedController_ReturnValue1) == 0x000010, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_HasLocalSharedController_ReturnValue2) == 0x000020, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_HasLocalSharedController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, Temp_int_Loop_Counter_Variable1) == 0x000024, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_Less_IntInt_ReturnValue1) == 0x000028, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_Add_IntInt_ReturnValue1) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_CheckDashInput_bDashInput) == 0x000040, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_CheckDashInput_bDashInput' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, Temp_int_Array_Index_Variable1) == 0x000044, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_Array_Get_Item1) == 0x000050, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_GetObjectClass_ReturnValue) == 0x000058, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_CheckAnySkillActive_IsActive) == 0x000060, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_CheckAnySkillActive_IsActive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000061, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_BooleanAND_ReturnValue) == 0x000062, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_Not_PreBool_ReturnValue1) == 0x000063, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_IsInPreview_ReturnValue) == 0x000064, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_IsInPreview_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_BooleanAND_ReturnValue1) == 0x000065, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_BooleanOR_ReturnValue) == 0x000066, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_IsSkillActive_ReturnValue) == 0x000067, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_IsSkillActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000068, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000069, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00006A, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnWalkingStateChanged, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x00006B, "Member 'BP_AJBInGameCharacter_C_OnWalkingStateChanged::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryDash
// 0x0014 (0x0014 - 0x0000)
struct BP_AJBInGameCharacter_C_TryDash final
{
public:
	EWalkingState                                 PrevState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWalkingState                                 NextState;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDashInput_bDashInput;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_TryDash) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_TryDash");
static_assert(sizeof(BP_AJBInGameCharacter_C_TryDash) == 0x000014, "Wrong size on BP_AJBInGameCharacter_C_TryDash");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryDash, PrevState) == 0x000000, "Member 'BP_AJBInGameCharacter_C_TryDash::PrevState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryDash, NextState) == 0x000001, "Member 'BP_AJBInGameCharacter_C_TryDash::NextState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryDash, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_AJBInGameCharacter_C_TryDash::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryDash, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000003, "Member 'BP_AJBInGameCharacter_C_TryDash::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryDash, CallFunc_CheckDashInput_bDashInput) == 0x000004, "Member 'BP_AJBInGameCharacter_C_TryDash::CallFunc_CheckDashInput_bDashInput' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryDash, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'BP_AJBInGameCharacter_C_TryDash::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryDash, Temp_int_Variable) == 0x000008, "Member 'BP_AJBInGameCharacter_C_TryDash::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryDash, CallFunc_BooleanAND_ReturnValue1) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_TryDash::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryDash, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000D, "Member 'BP_AJBInGameCharacter_C_TryDash::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryDash, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000E, "Member 'BP_AJBInGameCharacter_C_TryDash::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryDash, CallFunc_BooleanAND_ReturnValue2) == 0x00000F, "Member 'BP_AJBInGameCharacter_C_TryDash::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryDash, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_TryDash::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckDashInput
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckDashInput final
{
public:
	bool                                          bDashInput;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckDashInput) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CheckDashInput");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckDashInput) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_CheckDashInput");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDashInput, bDashInput) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckDashInput::bDashInput' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SkillReady(Local)
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_SkillReady_Local_ final
{
public:
	class UBP_AJBSkillBase_C*                     ReadySkill;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SkillReady_Local_) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_SkillReady_Local_");
static_assert(sizeof(BP_AJBInGameCharacter_C_SkillReady_Local_) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_SkillReady_Local_");
static_assert(offsetof(BP_AJBInGameCharacter_C_SkillReady_Local_, ReadySkill) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SkillReady_Local_::ReadySkill' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryCancelDash
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_TryCancelDash final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_TryCancelDash) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_TryCancelDash");
static_assert(sizeof(BP_AJBInGameCharacter_C_TryCancelDash) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_TryCancelDash");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryCancelDash, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_TryCancelDash::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.InitializeDashVariables
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_InitializeDashVariables final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_InitializeDashVariables) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_InitializeDashVariables");
static_assert(sizeof(BP_AJBInGameCharacter_C_InitializeDashVariables) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_InitializeDashVariables");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeDashVariables, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_AJBInGameCharacter_C_InitializeDashVariables::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ReserveDash
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBInGameCharacter_C_ReserveDash final
{
public:
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ReserveDash) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ReserveDash");
static_assert(sizeof(BP_AJBInGameCharacter_C_ReserveDash) == 0x000003, "Wrong size on BP_AJBInGameCharacter_C_ReserveDash");
static_assert(offsetof(BP_AJBInGameCharacter_C_ReserveDash, CallFunc_HasLocalSharedController_ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ReserveDash::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ReserveDash, CallFunc_IsPlayerController_ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_ReserveDash::CallFunc_IsPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ReserveDash, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_AJBInGameCharacter_C_ReserveDash::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcCameraConfigScale
// 0x0058 (0x0058 - 0x0000)
struct BP_AJBInGameCharacter_C_CalcCameraConfigScale final
{
public:
	float                                         UpDownScale;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RightLeftScale;                                    // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempSensitivity;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempSensitivityScale;                              // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable1;                              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerController_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable2;                              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable3;                              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select2_Default;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select3_Default;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CalcCameraConfigScale) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CalcCameraConfigScale");
static_assert(sizeof(BP_AJBInGameCharacter_C_CalcCameraConfigScale) == 0x000058, "Wrong size on BP_AJBInGameCharacter_C_CalcCameraConfigScale");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, UpDownScale) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::UpDownScale' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, RightLeftScale) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::RightLeftScale' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, TempSensitivity) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::TempSensitivity' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, TempSensitivityScale) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::TempSensitivityScale' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, Temp_float_Variable) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, Temp_int_Variable) == 0x000014, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, Temp_bool_Variable) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, CallFunc_HasLocalSharedController_ReturnValue) == 0x000019, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, Temp_float_Variable1) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, CallFunc_IsPlayerController_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::CallFunc_IsPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, Temp_bool_Variable1) == 0x000022, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, Temp_float_Variable2) == 0x000024, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, Temp_float_Variable3) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::Temp_float_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, Temp_bool_Variable2) == 0x000030, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, K2Node_Select_Default) == 0x000034, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, K2Node_Select1_Default) == 0x000038, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, CallFunc_GetAJBGameInstance_bSuccess) == 0x00003C, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000040, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, K2Node_Select2_Default) == 0x000048, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, K2Node_Select3_Default) == 0x00004C, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraConfigScale, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000054, "Member 'BP_AJBInGameCharacter_C_CalcCameraConfigScale::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ForceCancelSkillsNoIgnore
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_ForceCancelSkillsNoIgnore final
{
public:
	bool                                          bRequireStandSkillOnly;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ForceCancelSkillsNoIgnore) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ForceCancelSkillsNoIgnore");
static_assert(sizeof(BP_AJBInGameCharacter_C_ForceCancelSkillsNoIgnore) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_ForceCancelSkillsNoIgnore");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkillsNoIgnore, bRequireStandSkillOnly) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkillsNoIgnore::bRequireStandSkillOnly' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ForceCancelSkillsNoIgnore, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ForceCancelSkillsNoIgnore::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CallOnSkillFailedToUse_Local
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_C_CallOnSkillFailedToUse_Local final
{
public:
	struct FGameplayTagContainer                  FactorTags;                                        // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CallOnSkillFailedToUse_Local) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CallOnSkillFailedToUse_Local");
static_assert(sizeof(BP_AJBInGameCharacter_C_CallOnSkillFailedToUse_Local) == 0x000020, "Wrong size on BP_AJBInGameCharacter_C_CallOnSkillFailedToUse_Local");
static_assert(offsetof(BP_AJBInGameCharacter_C_CallOnSkillFailedToUse_Local, FactorTags) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CallOnSkillFailedToUse_Local::FactorTags' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetPoliticAreaInNoDamageSETag
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_C_GetPoliticAreaInNoDamageSETag final
{
public:
	struct FGameplayTag                           AffecterSideSETag;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SETag;                                             // 0x0008(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetPoliticAreaInNoDamageSETag) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_GetPoliticAreaInNoDamageSETag");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetPoliticAreaInNoDamageSETag) == 0x000020, "Wrong size on BP_AJBInGameCharacter_C_GetPoliticAreaInNoDamageSETag");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticAreaInNoDamageSETag, AffecterSideSETag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetPoliticAreaInNoDamageSETag::AffecterSideSETag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticAreaInNoDamageSETag, SETag) == 0x000008, "Member 'BP_AJBInGameCharacter_C_GetPoliticAreaInNoDamageSETag::SETag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticAreaInNoDamageSETag, Temp_bool_Variable) == 0x000010, "Member 'BP_AJBInGameCharacter_C_GetPoliticAreaInNoDamageSETag::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticAreaInNoDamageSETag, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000011, "Member 'BP_AJBInGameCharacter_C_GetPoliticAreaInNoDamageSETag::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticAreaInNoDamageSETag, K2Node_Select_Default) == 0x000018, "Member 'BP_AJBInGameCharacter_C_GetPoliticAreaInNoDamageSETag::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RevivePair
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameCharacter_C_RevivePair final
{
public:
	class AActor*                                 Rescuer;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTempSuccess;                                      // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue1;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Revive_bSuccess;                          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_RevivePair) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_RevivePair");
static_assert(sizeof(BP_AJBInGameCharacter_C_RevivePair) == 0x000040, "Wrong size on BP_AJBInGameCharacter_C_RevivePair");
static_assert(offsetof(BP_AJBInGameCharacter_C_RevivePair, Rescuer) == 0x000000, "Member 'BP_AJBInGameCharacter_C_RevivePair::Rescuer' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RevivePair, bSuccess) == 0x000008, "Member 'BP_AJBInGameCharacter_C_RevivePair::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RevivePair, bTempSuccess) == 0x000009, "Member 'BP_AJBInGameCharacter_C_RevivePair::bTempSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RevivePair, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameCharacter_C_RevivePair::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RevivePair, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameCharacter_C_RevivePair::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RevivePair, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_RevivePair::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RevivePair, Temp_float_Variable) == 0x000020, "Member 'BP_AJBInGameCharacter_C_RevivePair::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RevivePair, Temp_bool_Variable) == 0x000024, "Member 'BP_AJBInGameCharacter_C_RevivePair::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RevivePair, CallFunc_Multiply_IntFloat_ReturnValue1) == 0x000028, "Member 'BP_AJBInGameCharacter_C_RevivePair::CallFunc_Multiply_IntFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RevivePair, K2Node_Select_Default) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_RevivePair::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RevivePair, CallFunc_Round_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_RevivePair::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RevivePair, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_AJBInGameCharacter_C_RevivePair::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RevivePair, CallFunc_Revive_bSuccess) == 0x000038, "Member 'BP_AJBInGameCharacter_C_RevivePair::CallFunc_Revive_bSuccess' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetForceCameraSencitivityFirst
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_SetForceCameraSencitivityFirst final
{
public:
	bool                                          bNewFlag;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SetForceCameraSencitivityFirst) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_SetForceCameraSencitivityFirst");
static_assert(sizeof(BP_AJBInGameCharacter_C_SetForceCameraSencitivityFirst) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_SetForceCameraSencitivityFirst");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetForceCameraSencitivityFirst, bNewFlag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SetForceCameraSencitivityFirst::bNewFlag' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ApplyCharacterParameter
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_ApplyCharacterParameter final
{
public:
	class FName                                   CallFunc_GetCharacterName_CharacterName;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ApplyCharacterParameter) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ApplyCharacterParameter");
static_assert(sizeof(BP_AJBInGameCharacter_C_ApplyCharacterParameter) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_ApplyCharacterParameter");
static_assert(offsetof(BP_AJBInGameCharacter_C_ApplyCharacterParameter, CallFunc_GetCharacterName_CharacterName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ApplyCharacterParameter::CallFunc_GetCharacterName_CharacterName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ApplyCharacterParameterCore
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_ApplyCharacterParameterCore final
{
public:
	class FName                                   ContentName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ApplyCharacterParameterCore) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ApplyCharacterParameterCore");
static_assert(sizeof(BP_AJBInGameCharacter_C_ApplyCharacterParameterCore) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_ApplyCharacterParameterCore");
static_assert(offsetof(BP_AJBInGameCharacter_C_ApplyCharacterParameterCore, ContentName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ApplyCharacterParameterCore::ContentName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetPoliticCameraParam
// 0x01D8 (0x01D8 - 0x0000)
struct BP_AJBInGameCharacter_C_GetPoliticCameraParam final
{
public:
	struct FGameplayTag                           CameraTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FST_CameraParam                        CameraParam;                                       // 0x0008(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TempFileName;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempInterpSpeed;                                   // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempTargetArmLength;                               // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempSpringArmOffset;                               // 0x0038(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CameraParam                        CallFunc_GetCameraParameter_CameraParam;           // 0x0050(0x0018)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0078(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTagName_ReturnValue1;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0088(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0140(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x0158(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array1;                           // 0x0198(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue1;                      // 0x01A8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue1;           // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetPoliticCameraParam) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_GetPoliticCameraParam");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetPoliticCameraParam) == 0x0001D8, "Wrong size on BP_AJBInGameCharacter_C_GetPoliticCameraParam");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, CameraTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::CameraTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, CameraParam) == 0x000008, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::CameraParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, bSuccess) == 0x000020, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, TempFileName) == 0x000028, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::TempFileName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, TempInterpSpeed) == 0x000030, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::TempInterpSpeed' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, TempTargetArmLength) == 0x000034, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::TempTargetArmLength' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, TempSpringArmOffset) == 0x000038, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::TempSpringArmOffset' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, CallFunc_GetTagName_ReturnValue) == 0x000048, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, CallFunc_GetCameraParameter_CameraParam) == 0x000050, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::CallFunc_GetCameraParameter_CameraParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, CallFunc_Conv_NameToString_ReturnValue) == 0x000068, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000078, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, CallFunc_GetTagName_ReturnValue1) == 0x000080, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::CallFunc_GetTagName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, CallFunc_Conv_NameToText_ReturnValue) == 0x000088, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, K2Node_MakeStruct_FormatArgumentData) == 0x0000A0, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, K2Node_MakeArray_Array) == 0x0000E0, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, CallFunc_Conv_TextToString_ReturnValue) == 0x000108, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, CallFunc_Split_LeftS) == 0x000118, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, CallFunc_Split_RightS) == 0x000128, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, CallFunc_Split_ReturnValue) == 0x000138, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, CallFunc_Conv_StringToText_ReturnValue) == 0x000140, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, K2Node_MakeStruct_FormatArgumentData1) == 0x000158, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, K2Node_MakeArray_Array1) == 0x000198, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, CallFunc_Format_ReturnValue1) == 0x0001A8, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::CallFunc_Format_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, CallFunc_Conv_TextToString_ReturnValue1) == 0x0001C0, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::CallFunc_Conv_TextToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPoliticCameraParam, CallFunc_Conv_StringToName_ReturnValue) == 0x0001D0, "Member 'BP_AJBInGameCharacter_C_GetPoliticCameraParam::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetCharacterName
// 0x0098 (0x0098 - 0x0000)
struct BP_AJBInGameCharacter_C_GetCharacterName final
{
public:
	class FName                                   CharacterName;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy;         // 0x0018(0x0020)()
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Right_ReturnValue;                        // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetCharacterName) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_GetCharacterName");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetCharacterName) == 0x000098, "Wrong size on BP_AJBInGameCharacter_C_GetCharacterName");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharacterName, CharacterName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetCharacterName::CharacterName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharacterName, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_AJBInGameCharacter_C_GetCharacterName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharacterName, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_GetCharacterName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharacterName, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_GetCharacterName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharacterName, CallFunc_GetGameplayTags_TagContainerCopy) == 0x000018, "Member 'BP_AJBInGameCharacter_C_GetCharacterName::CallFunc_GetGameplayTags_TagContainerCopy' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharacterName, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000038, "Member 'BP_AJBInGameCharacter_C_GetCharacterName::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharacterName, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_AJBInGameCharacter_C_GetCharacterName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharacterName, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_AJBInGameCharacter_C_GetCharacterName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharacterName, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_AJBInGameCharacter_C_GetCharacterName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharacterName, CallFunc_GetTagName_ReturnValue) == 0x000060, "Member 'BP_AJBInGameCharacter_C_GetCharacterName::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharacterName, CallFunc_Conv_NameToString_ReturnValue) == 0x000068, "Member 'BP_AJBInGameCharacter_C_GetCharacterName::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharacterName, CallFunc_MatchesTag_ReturnValue) == 0x000078, "Member 'BP_AJBInGameCharacter_C_GetCharacterName::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharacterName, CallFunc_Right_ReturnValue) == 0x000080, "Member 'BP_AJBInGameCharacter_C_GetCharacterName::CallFunc_Right_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharacterName, CallFunc_Conv_StringToName_ReturnValue) == 0x000090, "Member 'BP_AJBInGameCharacter_C_GetCharacterName::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetCameraParameter
// 0x0110 (0x0110 - 0x0000)
struct BP_AJBInGameCharacter_C_GetCameraParameter final
{
public:
	class FName                                   TempFileName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CameraParam                        CameraParam;                                       // 0x0008(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          bTempInterpSpeed;                                  // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTempTargetArmLength;                              // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTempSpringArmOffset;                              // 0x0022(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_CameraParam                        TempCameraParam;                                   // 0x0024(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCharacterName_CharacterName;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBParamContent*                       CallFunc_GetParamContentMap_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBParamContent*                       CallFunc_GetParamContentMap_ReturnValue1;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CameraParam                        K2Node_MakeStruct_ST_CameraParam;                  // 0x0060(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue2;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x007C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue3;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_CameraParam                        K2Node_MakeStruct_ST_CameraParam1;                 // 0x0090(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue1;              // 0x00A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue4;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CameraParam                        K2Node_MakeStruct_ST_CameraParam2;                 // 0x00B8(0x0018)(HasGetValueTypeHash)
	struct FST_CameraParam                        K2Node_MakeStruct_ST_CameraParam3;                 // 0x00D0(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue5;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_CameraParam                        K2Node_MakeStruct_ST_CameraParam4;                 // 0x00F0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue1;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue2;                    // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue3;                    // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetCameraParameter) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_GetCameraParameter");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetCameraParameter) == 0x000110, "Wrong size on BP_AJBInGameCharacter_C_GetCameraParameter");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, TempFileName) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::TempFileName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, CameraParam) == 0x000008, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::CameraParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, bTempInterpSpeed) == 0x000020, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::bTempInterpSpeed' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, bTempTargetArmLength) == 0x000021, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::bTempTargetArmLength' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, bTempSpringArmOffset) == 0x000022, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::bTempSpringArmOffset' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, TempCameraParam) == 0x000024, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::TempCameraParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, CallFunc_GetCharacterName_CharacterName) == 0x000040, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::CallFunc_GetCharacterName_CharacterName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, CallFunc_GetParamContentMap_ReturnValue) == 0x000048, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::CallFunc_GetParamContentMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, CallFunc_GetParamContentMap_ReturnValue1) == 0x000050, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::CallFunc_GetParamContentMap_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, CallFunc_GetFloatValue_ReturnValue) == 0x000058, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, CallFunc_GetFloatValue_ReturnValue1) == 0x00005C, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::CallFunc_GetFloatValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, K2Node_MakeStruct_ST_CameraParam) == 0x000060, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::K2Node_MakeStruct_ST_CameraParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, CallFunc_GetFloatValue_ReturnValue2) == 0x000078, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::CallFunc_GetFloatValue_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, CallFunc_GetVectorValue_ReturnValue) == 0x00007C, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, CallFunc_GetFloatValue_ReturnValue3) == 0x000088, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::CallFunc_GetFloatValue_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, CallFunc_IsValid_ReturnValue) == 0x00008C, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, K2Node_MakeStruct_ST_CameraParam1) == 0x000090, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::K2Node_MakeStruct_ST_CameraParam1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, CallFunc_GetVectorValue_ReturnValue1) == 0x0000A8, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::CallFunc_GetVectorValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, CallFunc_GetFloatValue_ReturnValue4) == 0x0000B4, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::CallFunc_GetFloatValue_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, K2Node_MakeStruct_ST_CameraParam2) == 0x0000B8, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::K2Node_MakeStruct_ST_CameraParam2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, K2Node_MakeStruct_ST_CameraParam3) == 0x0000D0, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::K2Node_MakeStruct_ST_CameraParam3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, CallFunc_GetFloatValue_ReturnValue5) == 0x0000E8, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::CallFunc_GetFloatValue_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, CallFunc_Contains_ReturnValue) == 0x0000EC, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, K2Node_MakeStruct_ST_CameraParam4) == 0x0000F0, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::K2Node_MakeStruct_ST_CameraParam4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, CallFunc_Contains_ReturnValue1) == 0x000108, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::CallFunc_Contains_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, CallFunc_Contains_ReturnValue2) == 0x000109, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::CallFunc_Contains_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, CallFunc_Contains_ReturnValue3) == 0x00010A, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::CallFunc_Contains_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCameraParameter, CallFunc_IsValid_ReturnValue1) == 0x00010B, "Member 'BP_AJBInGameCharacter_C_GetCameraParameter::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetDefaultCameraParameter
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameCharacter_C_GetDefaultCameraParameter final
{
public:
	struct FST_CameraParam                        CameraParam;                                       // 0x0000(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	struct FST_CameraParam                        CallFunc_GetCameraParameter_CameraParam;           // 0x0018(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetDefaultCameraParameter) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_GetDefaultCameraParameter");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetDefaultCameraParameter) == 0x000030, "Wrong size on BP_AJBInGameCharacter_C_GetDefaultCameraParameter");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetDefaultCameraParameter, CameraParam) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetDefaultCameraParameter::CameraParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetDefaultCameraParameter, CallFunc_GetCameraParameter_CameraParam) == 0x000018, "Member 'BP_AJBInGameCharacter_C_GetDefaultCameraParameter::CallFunc_GetCameraParameter_CameraParam' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetUltimateMaxAvailableNum
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameCharacter_C_GetUltimateMaxAvailableNum final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempNum;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_GrowupInfo_Processed               CallFunc_GetGrowupParam_GrowupParam;               // 0x0010(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetUltimateMaxAvailableNum) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_GetUltimateMaxAvailableNum");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetUltimateMaxAvailableNum) == 0x000040, "Wrong size on BP_AJBInGameCharacter_C_GetUltimateMaxAvailableNum");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetUltimateMaxAvailableNum, Num) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetUltimateMaxAvailableNum::Num' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetUltimateMaxAvailableNum, TempNum) == 0x000004, "Member 'BP_AJBInGameCharacter_C_GetUltimateMaxAvailableNum::TempNum' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetUltimateMaxAvailableNum, Temp_int_Variable) == 0x000008, "Member 'BP_AJBInGameCharacter_C_GetUltimateMaxAvailableNum::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetUltimateMaxAvailableNum, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_GetUltimateMaxAvailableNum::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetUltimateMaxAvailableNum, CallFunc_GetGrowupParam_GrowupParam) == 0x000010, "Member 'BP_AJBInGameCharacter_C_GetUltimateMaxAvailableNum::CallFunc_GetGrowupParam_GrowupParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetUltimateMaxAvailableNum, CallFunc_Array_LastIndex_ReturnValue) == 0x000038, "Member 'BP_AJBInGameCharacter_C_GetUltimateMaxAvailableNum::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetUltimateMaxAvailableNum, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BP_AJBInGameCharacter_C_GetUltimateMaxAvailableNum::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CountUpUltimateAvailable
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameCharacter_C_CountUpUltimateAvailable final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           GroupTag;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0018(0x0020)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesAnyTags_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CountUpUltimateAvailable) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CountUpUltimateAvailable");
static_assert(sizeof(BP_AJBInGameCharacter_C_CountUpUltimateAvailable) == 0x000040, "Wrong size on BP_AJBInGameCharacter_C_CountUpUltimateAvailable");
static_assert(offsetof(BP_AJBInGameCharacter_C_CountUpUltimateAvailable, Count) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CountUpUltimateAvailable::Count' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CountUpUltimateAvailable, GroupTag) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CountUpUltimateAvailable::GroupTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CountUpUltimateAvailable, Value) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CountUpUltimateAvailable::Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CountUpUltimateAvailable, CallFunc_Round_ReturnValue) == 0x000014, "Member 'BP_AJBInGameCharacter_C_CountUpUltimateAvailable::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CountUpUltimateAvailable, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CountUpUltimateAvailable::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CountUpUltimateAvailable, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_AJBInGameCharacter_C_CountUpUltimateAvailable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CountUpUltimateAvailable, CallFunc_MatchesAnyTags_ReturnValue) == 0x00003C, "Member 'BP_AJBInGameCharacter_C_CountUpUltimateAvailable::CallFunc_MatchesAnyTags_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GrowupCommon
// 0x0088 (0x0088 - 0x0000)
struct BP_AJBInGameCharacter_C_GrowupCommon final
{
public:
	struct FGameplayTag                           Growup;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryGetSkillComponentByType_bSuccess;      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     CallFunc_TryGetSkillComponentByType_SkillComponet; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue1;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetSkillComponentByType_bSuccess1;     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     CallFunc_TryGetSkillComponentByType_SkillComponet1; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetSkillComponentByType_bSuccess2;     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     CallFunc_TryGetSkillComponentByType_SkillComponet2; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue2;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetSkillComponentByType_bSuccess3;     // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     CallFunc_TryGetSkillComponentByType_SkillComponet3; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryGetSkillComponentByType_bSuccess4;     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     CallFunc_TryGetSkillComponentByType_SkillComponet4; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetSkillComponentByType_bSuccess5;     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     CallFunc_TryGetSkillComponentByType_SkillComponet5; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryGetSkillComponentByType_bSuccess6;     // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     CallFunc_TryGetSkillComponentByType_SkillComponet6; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GrowupCommon) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_GrowupCommon");
static_assert(sizeof(BP_AJBInGameCharacter_C_GrowupCommon) == 0x000088, "Wrong size on BP_AJBInGameCharacter_C_GrowupCommon");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, Growup) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::Growup' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, Value) == 0x000008, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, CallFunc_TryGetSkillComponentByType_bSuccess) == 0x00000D, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::CallFunc_TryGetSkillComponentByType_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, CallFunc_TryGetSkillComponentByType_SkillComponet) == 0x000010, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::CallFunc_TryGetSkillComponentByType_SkillComponet' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, CallFunc_Round_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, CallFunc_Round_ReturnValue1) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::CallFunc_Round_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, CallFunc_TryGetSkillComponentByType_bSuccess1) == 0x000020, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::CallFunc_TryGetSkillComponentByType_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, CallFunc_TryGetSkillComponentByType_SkillComponet1) == 0x000028, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::CallFunc_TryGetSkillComponentByType_SkillComponet1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, CallFunc_TryGetSkillComponentByType_bSuccess2) == 0x000030, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::CallFunc_TryGetSkillComponentByType_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, CallFunc_TryGetSkillComponentByType_SkillComponet2) == 0x000038, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::CallFunc_TryGetSkillComponentByType_SkillComponet2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, CallFunc_Round_ReturnValue2) == 0x000040, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::CallFunc_Round_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, CallFunc_TryGetSkillComponentByType_bSuccess3) == 0x000044, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::CallFunc_TryGetSkillComponentByType_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, CallFunc_TryGetSkillComponentByType_SkillComponet3) == 0x000048, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::CallFunc_TryGetSkillComponentByType_SkillComponet3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, CallFunc_IsServer_ReturnValue) == 0x000050, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, CallFunc_TryGetSkillComponentByType_bSuccess4) == 0x000051, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::CallFunc_TryGetSkillComponentByType_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, CallFunc_TryGetSkillComponentByType_SkillComponet4) == 0x000058, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::CallFunc_TryGetSkillComponentByType_SkillComponet4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, CallFunc_TryGetSkillComponentByType_bSuccess5) == 0x000060, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::CallFunc_TryGetSkillComponentByType_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, CallFunc_TryGetSkillComponentByType_SkillComponet5) == 0x000068, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::CallFunc_TryGetSkillComponentByType_SkillComponet5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, CallFunc_IsServer_ReturnValue1) == 0x000070, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::CallFunc_IsServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, CallFunc_TryGetSkillComponentByType_bSuccess6) == 0x000071, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::CallFunc_TryGetSkillComponentByType_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, CallFunc_TryGetSkillComponentByType_SkillComponet6) == 0x000078, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::CallFunc_TryGetSkillComponentByType_SkillComponet6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000080, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GrowupCommon, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000084, "Member 'BP_AJBInGameCharacter_C_GrowupCommon::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryGetSupportSkillComponent
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBInGameCharacter_C_TryGetSupportSkillComponent final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSupportSkillBase_C*              SupportSkillComponent;                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AJBSupportSkillBase_C*>      CallFunc_GetComponentsByClass_ReturnValue;         // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSupportSkillBase_C*              CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_TryGetSupportSkillComponent) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_TryGetSupportSkillComponent");
static_assert(sizeof(BP_AJBInGameCharacter_C_TryGetSupportSkillComponent) == 0x000048, "Wrong size on BP_AJBInGameCharacter_C_TryGetSupportSkillComponent");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSupportSkillComponent, bSuccess) == 0x000000, "Member 'BP_AJBInGameCharacter_C_TryGetSupportSkillComponent::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSupportSkillComponent, SupportSkillComponent) == 0x000008, "Member 'BP_AJBInGameCharacter_C_TryGetSupportSkillComponent::SupportSkillComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSupportSkillComponent, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_AJBInGameCharacter_C_TryGetSupportSkillComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSupportSkillComponent, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_AJBInGameCharacter_C_TryGetSupportSkillComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSupportSkillComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_TryGetSupportSkillComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSupportSkillComponent, CallFunc_GetComponentsByClass_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_TryGetSupportSkillComponent::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSupportSkillComponent, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_TryGetSupportSkillComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSupportSkillComponent, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_AJBInGameCharacter_C_TryGetSupportSkillComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSupportSkillComponent, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_TryGetSupportSkillComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSupportSkillComponent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000041, "Member 'BP_AJBInGameCharacter_C_TryGetSupportSkillComponent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.InitializeGrowupParam
// 0x0080 (0x0080 - 0x0000)
struct BP_AJBInGameCharacter_C_InitializeGrowupParam final
{
public:
	struct FST_GrowupInfo_Processed               CallFunc_GetGrowupParam_GrowupParam;               // 0x0000(0x0028)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCharacterName_CharacterName;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCharacterName_CharacterName1;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAJBParamContent*                       CallFunc_GetParamContentMap_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeGameplayTagByName_OutTag;             // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeGameplayTagByName_ReturnValue;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_InitializeGrowupParam) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_InitializeGrowupParam");
static_assert(sizeof(BP_AJBInGameCharacter_C_InitializeGrowupParam) == 0x000080, "Wrong size on BP_AJBInGameCharacter_C_InitializeGrowupParam");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeGrowupParam, CallFunc_GetGrowupParam_GrowupParam) == 0x000000, "Member 'BP_AJBInGameCharacter_C_InitializeGrowupParam::CallFunc_GetGrowupParam_GrowupParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeGrowupParam, Temp_int_Variable) == 0x000028, "Member 'BP_AJBInGameCharacter_C_InitializeGrowupParam::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeGrowupParam, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_InitializeGrowupParam::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeGrowupParam, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_InitializeGrowupParam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeGrowupParam, CallFunc_GetCharacterName_CharacterName) == 0x000038, "Member 'BP_AJBInGameCharacter_C_InitializeGrowupParam::CallFunc_GetCharacterName_CharacterName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeGrowupParam, CallFunc_Conv_NameToString_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_InitializeGrowupParam::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeGrowupParam, CallFunc_GetCharacterName_CharacterName1) == 0x000050, "Member 'BP_AJBInGameCharacter_C_InitializeGrowupParam::CallFunc_GetCharacterName_CharacterName1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeGrowupParam, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'BP_AJBInGameCharacter_C_InitializeGrowupParam::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeGrowupParam, CallFunc_GetParamContentMap_ReturnValue) == 0x000068, "Member 'BP_AJBInGameCharacter_C_InitializeGrowupParam::CallFunc_GetParamContentMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeGrowupParam, CallFunc_MakeGameplayTagByName_OutTag) == 0x000070, "Member 'BP_AJBInGameCharacter_C_InitializeGrowupParam::CallFunc_MakeGameplayTagByName_OutTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeGrowupParam, CallFunc_MakeGameplayTagByName_ReturnValue) == 0x000078, "Member 'BP_AJBInGameCharacter_C_InitializeGrowupParam::CallFunc_MakeGameplayTagByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitializeGrowupParam, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'BP_AJBInGameCharacter_C_InitializeGrowupParam::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.AssignGrowupInfo
// 0x0090 (0x0090 - 0x0000)
struct BP_AJBInGameCharacter_C_AssignGrowupInfo final
{
public:
	class UAJBParamContent*                       ParamContent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PhaseIndex;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_PhaseName;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           GrowupNames;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetStringValue_ReturnValue;               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeGameplayTagByName_OutTag;             // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeGameplayTagByName_ReturnValue;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Contains_ReturnValue1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_AssignGrowupInfo) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_AssignGrowupInfo");
static_assert(sizeof(BP_AJBInGameCharacter_C_AssignGrowupInfo) == 0x000090, "Wrong size on BP_AJBInGameCharacter_C_AssignGrowupInfo");
static_assert(offsetof(BP_AJBInGameCharacter_C_AssignGrowupInfo, ParamContent) == 0x000000, "Member 'BP_AJBInGameCharacter_C_AssignGrowupInfo::ParamContent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AssignGrowupInfo, PhaseIndex) == 0x000008, "Member 'BP_AJBInGameCharacter_C_AssignGrowupInfo::PhaseIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AssignGrowupInfo, Temp_PhaseName) == 0x000010, "Member 'BP_AJBInGameCharacter_C_AssignGrowupInfo::Temp_PhaseName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AssignGrowupInfo, GrowupNames) == 0x000018, "Member 'BP_AJBInGameCharacter_C_AssignGrowupInfo::GrowupNames' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AssignGrowupInfo, CallFunc_Conv_NameToString_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_AssignGrowupInfo::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AssignGrowupInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_AJBInGameCharacter_C_AssignGrowupInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AssignGrowupInfo, CallFunc_Conv_StringToName_ReturnValue) == 0x000048, "Member 'BP_AJBInGameCharacter_C_AssignGrowupInfo::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AssignGrowupInfo, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000050, "Member 'BP_AJBInGameCharacter_C_AssignGrowupInfo::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AssignGrowupInfo, CallFunc_GetFloatValue_ReturnValue) == 0x000054, "Member 'BP_AJBInGameCharacter_C_AssignGrowupInfo::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AssignGrowupInfo, CallFunc_GetStringValue_ReturnValue) == 0x000058, "Member 'BP_AJBInGameCharacter_C_AssignGrowupInfo::CallFunc_GetStringValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AssignGrowupInfo, CallFunc_MakeGameplayTagByName_OutTag) == 0x000068, "Member 'BP_AJBInGameCharacter_C_AssignGrowupInfo::CallFunc_MakeGameplayTagByName_OutTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AssignGrowupInfo, CallFunc_MakeGameplayTagByName_ReturnValue) == 0x000070, "Member 'BP_AJBInGameCharacter_C_AssignGrowupInfo::CallFunc_MakeGameplayTagByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AssignGrowupInfo, CallFunc_Contains_ReturnValue) == 0x000071, "Member 'BP_AJBInGameCharacter_C_AssignGrowupInfo::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AssignGrowupInfo, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_AJBInGameCharacter_C_AssignGrowupInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AssignGrowupInfo, CallFunc_Contains_ReturnValue1) == 0x000088, "Member 'BP_AJBInGameCharacter_C_AssignGrowupInfo::CallFunc_Contains_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeCollision
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeCollision final
{
public:
	bool                                          bDowned;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDied;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeCollision) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeCollision");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeCollision) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_ChangeCollision");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeCollision, bDowned) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeCollision::bDowned' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeCollision, bDied) == 0x000001, "Member 'BP_AJBInGameCharacter_C_ChangeCollision::bDied' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateMeshRotation
// 0x00C0 (0x00C0 - 0x0000)
struct BP_AJBInGameCharacter_C_UpdateMeshRotation final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0xE];                                        // 0x0002(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0048(0x000C)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_TransformRotation_ReturnValue;            // 0x0054(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue1;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0064(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Select_Default;                             // 0x0074(0x000C)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue1;                // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_TransformRotation_ReturnValue1;           // 0x00B0(0x000C)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_UpdateMeshRotation) == 0x000010, "Wrong alignment on BP_AJBInGameCharacter_C_UpdateMeshRotation");
static_assert(sizeof(BP_AJBInGameCharacter_C_UpdateMeshRotation) == 0x0000C0, "Wrong size on BP_AJBInGameCharacter_C_UpdateMeshRotation");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshRotation, Temp_bool_Variable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_UpdateMeshRotation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshRotation, CallFunc_HasLocalSharedController_ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_UpdateMeshRotation::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshRotation, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_UpdateMeshRotation::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshRotation, CallFunc_DegAtan2_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_UpdateMeshRotation::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshRotation, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_AJBInGameCharacter_C_UpdateMeshRotation::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshRotation, CallFunc_MakeRotator_ReturnValue) == 0x000048, "Member 'BP_AJBInGameCharacter_C_UpdateMeshRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshRotation, CallFunc_TransformRotation_ReturnValue) == 0x000054, "Member 'BP_AJBInGameCharacter_C_UpdateMeshRotation::CallFunc_TransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshRotation, CallFunc_NearlyEqual_FloatFloat_ReturnValue1) == 0x000060, "Member 'BP_AJBInGameCharacter_C_UpdateMeshRotation::CallFunc_NearlyEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshRotation, CallFunc_ComposeRotators_ReturnValue) == 0x000064, "Member 'BP_AJBInGameCharacter_C_UpdateMeshRotation::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshRotation, CallFunc_BooleanAND_ReturnValue) == 0x000070, "Member 'BP_AJBInGameCharacter_C_UpdateMeshRotation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshRotation, CallFunc_Not_PreBool_ReturnValue) == 0x000071, "Member 'BP_AJBInGameCharacter_C_UpdateMeshRotation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshRotation, K2Node_Select_Default) == 0x000074, "Member 'BP_AJBInGameCharacter_C_UpdateMeshRotation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshRotation, CallFunc_GetTransform_ReturnValue1) == 0x000080, "Member 'BP_AJBInGameCharacter_C_UpdateMeshRotation::CallFunc_GetTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshRotation, CallFunc_TransformRotation_ReturnValue1) == 0x0000B0, "Member 'BP_AJBInGameCharacter_C_UpdateMeshRotation::CallFunc_TransformRotation_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateWalkingMode
// 0x0060 (0x0060 - 0x0000)
struct BP_AJBInGameCharacter_C_UpdateWalkingMode final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBHighlightManager*                   CallFunc_GetHighlightManager_HighlightManager;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_Map_Keys_Keys;                            // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue1;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_UpdateWalkingMode) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_UpdateWalkingMode");
static_assert(sizeof(BP_AJBInGameCharacter_C_UpdateWalkingMode) == 0x000060, "Wrong size on BP_AJBInGameCharacter_C_UpdateWalkingMode");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateWalkingMode, DeltaTime) == 0x000000, "Member 'BP_AJBInGameCharacter_C_UpdateWalkingMode::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateWalkingMode, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_C_UpdateWalkingMode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateWalkingMode, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_AJBInGameCharacter_C_UpdateWalkingMode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateWalkingMode, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_UpdateWalkingMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateWalkingMode, CallFunc_GetHighlightManager_HighlightManager) == 0x000010, "Member 'BP_AJBInGameCharacter_C_UpdateWalkingMode::CallFunc_GetHighlightManager_HighlightManager' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateWalkingMode, CallFunc_IsPlayingReplay_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_UpdateWalkingMode::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateWalkingMode, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_AJBInGameCharacter_C_UpdateWalkingMode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateWalkingMode, CallFunc_Map_Keys_Keys) == 0x000020, "Member 'BP_AJBInGameCharacter_C_UpdateWalkingMode::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateWalkingMode, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_UpdateWalkingMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateWalkingMode, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_AJBInGameCharacter_C_UpdateWalkingMode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateWalkingMode, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_UpdateWalkingMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateWalkingMode, CallFunc_Map_Remove_ReturnValue) == 0x000041, "Member 'BP_AJBInGameCharacter_C_UpdateWalkingMode::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateWalkingMode, CallFunc_Map_Find_Value) == 0x000044, "Member 'BP_AJBInGameCharacter_C_UpdateWalkingMode::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateWalkingMode, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'BP_AJBInGameCharacter_C_UpdateWalkingMode::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateWalkingMode, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000049, "Member 'BP_AJBInGameCharacter_C_UpdateWalkingMode::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateWalkingMode, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_AJBInGameCharacter_C_UpdateWalkingMode::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateWalkingMode, CallFunc_Not_PreBool_ReturnValue1) == 0x000050, "Member 'BP_AJBInGameCharacter_C_UpdateWalkingMode::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateWalkingMode, CallFunc_FMax_ReturnValue) == 0x000054, "Member 'BP_AJBInGameCharacter_C_UpdateWalkingMode::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateWalkingMode, CallFunc_NearlyEqual_FloatFloat_ReturnValue1) == 0x000058, "Member 'BP_AJBInGameCharacter_C_UpdateWalkingMode::CallFunc_NearlyEqual_FloatFloat_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetMaxStepHeight
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_SetMaxStepHeight final
{
public:
	float                                         MaxStepHeight;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SetMaxStepHeight) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_SetMaxStepHeight");
static_assert(sizeof(BP_AJBInGameCharacter_C_SetMaxStepHeight) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_SetMaxStepHeight");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetMaxStepHeight, MaxStepHeight) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SetMaxStepHeight::MaxStepHeight' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckValidSidlingModeFactor
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckValidSidlingModeFactor final
{
public:
	struct FGameplayTag                           FactorTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bValid;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckValidSidlingModeFactor) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckValidSidlingModeFactor");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckValidSidlingModeFactor) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_CheckValidSidlingModeFactor");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckValidSidlingModeFactor, FactorTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckValidSidlingModeFactor::FactorTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckValidSidlingModeFactor, bValid) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckValidSidlingModeFactor::bValid' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckValidSidlingModeFactor, Value) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_CheckValidSidlingModeFactor::Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckValidSidlingModeFactor, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CheckValidSidlingModeFactor::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckValidSidlingModeFactor, CallFunc_Map_Find_ReturnValue) == 0x000014, "Member 'BP_AJBInGameCharacter_C_CheckValidSidlingModeFactor::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CanRun
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBInGameCharacter_C_CanRun final
{
public:
	bool                                          bIsRun;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckRunInput_bRunInput;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CanRun) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CanRun");
static_assert(sizeof(BP_AJBInGameCharacter_C_CanRun) == 0x000003, "Wrong size on BP_AJBInGameCharacter_C_CanRun");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanRun, bIsRun) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CanRun::bIsRun' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanRun, CallFunc_CheckRunInput_bRunInput) == 0x000001, "Member 'BP_AJBInGameCharacter_C_CanRun::CallFunc_CheckRunInput_bRunInput' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CanRun, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_AJBInGameCharacter_C_CanRun::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnBeforeInteract
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_OnBeforeInteract final
{
public:
	bool                                          bShouldInteract;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnBeforeInteract) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_OnBeforeInteract");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnBeforeInteract) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_OnBeforeInteract");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnBeforeInteract, bShouldInteract) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnBeforeInteract::bShouldInteract' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckPossibleDash
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckPossibleDash final
{
public:
	bool                                          bPossible;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSidlingOnTiltOnce_bSidling;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAnySkillActiveOnTiltOneDash_bAnySkillActive; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCrouching_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillActive_ReturnValue;                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillActive_ReturnValue1;               // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item1;                          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillActive_ReturnValue2;               // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCrouching_ReturnValue1;                 // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckPossibleDash) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckPossibleDash");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckPossibleDash) == 0x000050, "Wrong size on BP_AJBInGameCharacter_C_CheckPossibleDash");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, bPossible) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::bPossible' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_CheckSidlingOnTiltOnce_bSidling) == 0x000001, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_CheckSidlingOnTiltOnce_bSidling' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_CheckAnySkillActiveOnTiltOneDash_bAnySkillActive) == 0x000002, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_CheckAnySkillActiveOnTiltOneDash_bAnySkillActive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_GetValidValue_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_IsCrouching_ReturnValue) == 0x00000A, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_IsCrouching_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, Temp_int_Array_Index_Variable1) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_IsSkillActive_ReturnValue) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_IsSkillActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_IsSkillActive_ReturnValue1) == 0x00002D, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_IsSkillActive_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_Not_PreBool_ReturnValue) == 0x00002E, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_BooleanAND_ReturnValue) == 0x00002F, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_Array_Get_Item1) == 0x000030, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_Array_Length_ReturnValue1) == 0x000038, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_IsSkillActive_ReturnValue2) == 0x00003D, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_IsSkillActive_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_BooleanAND_ReturnValue1) == 0x00003E, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, Temp_int_Loop_Counter_Variable1) == 0x000040, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_Less_IntInt_ReturnValue1) == 0x000044, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_Add_IntInt_ReturnValue1) == 0x000048, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_IsCrouching_ReturnValue1) == 0x00004C, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_IsCrouching_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_Not_PreBool_ReturnValue1) == 0x00004D, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDash, CallFunc_BooleanAND_ReturnValue2) == 0x00004E, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDash::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRep_Rep_CharacterBehavior
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_OnRep_Rep_CharacterBehavior final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnRep_Rep_CharacterBehavior) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_OnRep_Rep_CharacterBehavior");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnRep_Rep_CharacterBehavior) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_OnRep_Rep_CharacterBehavior");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep_Rep_CharacterBehavior, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnRep_Rep_CharacterBehavior::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetDownedParticleLocation
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameCharacter_C_GetDownedParticleLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetFootLocation_Location;                 // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetDownedParticleLocation) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_GetDownedParticleLocation");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetDownedParticleLocation) == 0x000038, "Wrong size on BP_AJBInGameCharacter_C_GetDownedParticleLocation");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetDownedParticleLocation, Location) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetDownedParticleLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetDownedParticleLocation, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_GetDownedParticleLocation::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetDownedParticleLocation, CallFunc_GetFootLocation_Location) == 0x000010, "Member 'BP_AJBInGameCharacter_C_GetDownedParticleLocation::CallFunc_GetFootLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetDownedParticleLocation, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_GetDownedParticleLocation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetDownedParticleLocation, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_GetDownedParticleLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetDownedParticleLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_GetDownedParticleLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetRelativeDownedParticleLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameCharacter_C_GetRelativeDownedParticleLocation final
{
public:
	struct FVector                                RelativeLocation;                                  // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDownedParticleLocation_Location;       // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetRelativeDownedParticleLocation) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_GetRelativeDownedParticleLocation");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetRelativeDownedParticleLocation) == 0x000030, "Wrong size on BP_AJBInGameCharacter_C_GetRelativeDownedParticleLocation");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetRelativeDownedParticleLocation, RelativeLocation) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetRelativeDownedParticleLocation::RelativeLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetRelativeDownedParticleLocation, CallFunc_GetDownedParticleLocation_Location) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_GetRelativeDownedParticleLocation::CallFunc_GetDownedParticleLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetRelativeDownedParticleLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_GetRelativeDownedParticleLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetRelativeDownedParticleLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000024, "Member 'BP_AJBInGameCharacter_C_GetRelativeDownedParticleLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcCameraFOV
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBInGameCharacter_C_CalcCameraFOV final
{
public:
	TArray<struct FST_CameraParam>                InParams;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                         FOV;                                               // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ResultFOV;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CameraParam                        CallFunc_Array_Get_Item;                           // 0x0020(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CalcCameraFOV) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CalcCameraFOV");
static_assert(sizeof(BP_AJBInGameCharacter_C_CalcCameraFOV) == 0x000048, "Wrong size on BP_AJBInGameCharacter_C_CalcCameraFOV");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraFOV, InParams) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CalcCameraFOV::InParams' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraFOV, FOV) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CalcCameraFOV::FOV' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraFOV, ResultFOV) == 0x000014, "Member 'BP_AJBInGameCharacter_C_CalcCameraFOV::ResultFOV' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraFOV, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CalcCameraFOV::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraFOV, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_CalcCameraFOV::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraFOV, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AJBInGameCharacter_C_CalcCameraFOV::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraFOV, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_AJBInGameCharacter_C_CalcCameraFOV::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraFOV, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_AJBInGameCharacter_C_CalcCameraFOV::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraFOV, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_CalcCameraFOV::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCameraFOV, CallFunc_Less_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_AJBInGameCharacter_C_CalcCameraFOV::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckFalling
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckFalling final
{
public:
	bool                                          bFalling;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckFalling) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CheckFalling");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckFalling) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_CheckFalling");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckFalling, bFalling) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckFalling::bFalling' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckFalling, CallFunc_IsFalling_ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_CheckFalling::CallFunc_IsFalling_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetProperVisibilityForDarbysAssassinEffect
// 0x0070 (0x0070 - 0x0000)
struct BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue;     // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDarbysAssassin_bResult;                 // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item1;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect");
static_assert(sizeof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect) == 0x000070, "Wrong size on BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, Temp_int_Variable) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, CallFunc_Add_IntInt_ReturnValue1) == 0x000010, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, Temp_int_Array_Index_Variable1) == 0x000018, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, CallFunc_CharacterBehaviorMatches_ReturnValue) == 0x00002D, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::CallFunc_CharacterBehaviorMatches_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, CallFunc_IsDarbysAssassin_bResult) == 0x00002E, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::CallFunc_IsDarbysAssassin_bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, CallFunc_Array_Get_Item1) == 0x000030, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, CallFunc_Array_Length_ReturnValue1) == 0x000038, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, CallFunc_Array_Length_ReturnValue2) == 0x00003C, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, Temp_int_Loop_Counter_Variable1) == 0x000044, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, CallFunc_Less_IntInt_ReturnValue1) == 0x000048, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, CallFunc_Add_IntInt_ReturnValue2) == 0x00004C, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, CallFunc_GetNumMaterials_ReturnValue) == 0x000050, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000058, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, CallFunc_Subtract_IntInt_ReturnValue) == 0x000060, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000064, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'BP_AJBInGameCharacter_C_SetProperVisibilityForDarbysAssassinEffect::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsDarbysAssassin
// 0x0098 (0x0098 - 0x0000)
struct BP_AJBInGameCharacter_C_IsDarbysAssassin final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchingPlayerInfo                    CallFunc_TryGetMatchingPlayerInfo_Out;             // 0x0008(0x0088)()
	bool                                          CallFunc_TryGetMatchingPlayerInfo_ReturnValue;     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartsWith_ReturnValue1;                  // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IsDarbysAssassin) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_IsDarbysAssassin");
static_assert(sizeof(BP_AJBInGameCharacter_C_IsDarbysAssassin) == 0x000098, "Wrong size on BP_AJBInGameCharacter_C_IsDarbysAssassin");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsDarbysAssassin, bResult) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IsDarbysAssassin::bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsDarbysAssassin, CallFunc_TryGetMatchingPlayerInfo_Out) == 0x000008, "Member 'BP_AJBInGameCharacter_C_IsDarbysAssassin::CallFunc_TryGetMatchingPlayerInfo_Out' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsDarbysAssassin, CallFunc_TryGetMatchingPlayerInfo_ReturnValue) == 0x000090, "Member 'BP_AJBInGameCharacter_C_IsDarbysAssassin::CallFunc_TryGetMatchingPlayerInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsDarbysAssassin, CallFunc_StartsWith_ReturnValue) == 0x000091, "Member 'BP_AJBInGameCharacter_C_IsDarbysAssassin::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsDarbysAssassin, CallFunc_StartsWith_ReturnValue1) == 0x000092, "Member 'BP_AJBInGameCharacter_C_IsDarbysAssassin::CallFunc_StartsWith_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetCharaParam
// 0x0060 (0x0060 - 0x0000)
struct BP_AJBInGameCharacter_C_GetCharaParam final
{
public:
	struct FGameplayTag                           CharaParam;                                        // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy;         // 0x0018(0x0020)()
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetCharaParam) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_GetCharaParam");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetCharaParam) == 0x000060, "Wrong size on BP_AJBInGameCharacter_C_GetCharaParam");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharaParam, CharaParam) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetCharaParam::CharaParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharaParam, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_AJBInGameCharacter_C_GetCharaParam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharaParam, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_GetCharaParam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharaParam, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_GetCharaParam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharaParam, CallFunc_GetGameplayTags_TagContainerCopy) == 0x000018, "Member 'BP_AJBInGameCharacter_C_GetCharaParam::CallFunc_GetGameplayTags_TagContainerCopy' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharaParam, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000038, "Member 'BP_AJBInGameCharacter_C_GetCharaParam::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharaParam, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_AJBInGameCharacter_C_GetCharaParam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharaParam, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_AJBInGameCharacter_C_GetCharaParam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharaParam, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_AJBInGameCharacter_C_GetCharaParam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetCharaParam, CallFunc_MatchesTag_ReturnValue) == 0x000059, "Member 'BP_AJBInGameCharacter_C_GetCharaParam::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetGrowupTagTotalValue
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBInGameCharacter_C_GetGrowupTagTotalValue final
{
public:
	struct FGameplayTag                           GrowupTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         TotalValue;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempTotalValue;                                    // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_GrowupInfo_Processed               CallFunc_GetGrowupParam_GrowupParam;               // 0x0018(0x0028)(HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetGrowupTagTotalValue) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_GetGrowupTagTotalValue");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetGrowupTagTotalValue) == 0x000050, "Wrong size on BP_AJBInGameCharacter_C_GetGrowupTagTotalValue");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGrowupTagTotalValue, GrowupTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetGrowupTagTotalValue::GrowupTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGrowupTagTotalValue, TotalValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_GetGrowupTagTotalValue::TotalValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGrowupTagTotalValue, TempTotalValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_GetGrowupTagTotalValue::TempTotalValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGrowupTagTotalValue, Temp_int_Variable) == 0x000010, "Member 'BP_AJBInGameCharacter_C_GetGrowupTagTotalValue::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGrowupTagTotalValue, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_AJBInGameCharacter_C_GetGrowupTagTotalValue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGrowupTagTotalValue, CallFunc_GetGrowupParam_GrowupParam) == 0x000018, "Member 'BP_AJBInGameCharacter_C_GetGrowupTagTotalValue::CallFunc_GetGrowupParam_GrowupParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGrowupTagTotalValue, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_GetGrowupTagTotalValue::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGrowupTagTotalValue, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000044, "Member 'BP_AJBInGameCharacter_C_GetGrowupTagTotalValue::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGrowupTagTotalValue, CallFunc_Array_LastIndex_ReturnValue) == 0x000048, "Member 'BP_AJBInGameCharacter_C_GetGrowupTagTotalValue::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGrowupTagTotalValue, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00004C, "Member 'BP_AJBInGameCharacter_C_GetGrowupTagTotalValue::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IncrementKillCount(Server)
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_IncrementKillCount_Server_ final
{
public:
	int32                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IncrementKillCount_Server_) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_IncrementKillCount_Server_");
static_assert(sizeof(BP_AJBInGameCharacter_C_IncrementKillCount_Server_) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_IncrementKillCount_Server_");
static_assert(offsetof(BP_AJBInGameCharacter_C_IncrementKillCount_Server_, Result) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IncrementKillCount_Server_::Result' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IncrementKillCount_Server_, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_IncrementKillCount_Server_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckPossibleLandingStop
// 0x0006 (0x0006 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckPossibleLandingStop final
{
public:
	bool                                          bPossible;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAnyCharacterMovementSkillActive_bWithCharacterMovement; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckPossibleLandingStop) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CheckPossibleLandingStop");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckPossibleLandingStop) == 0x000006, "Wrong size on BP_AJBInGameCharacter_C_CheckPossibleLandingStop");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleLandingStop, bPossible) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckPossibleLandingStop::bPossible' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleLandingStop, CallFunc_CheckActiveBehavior_bRetValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_CheckPossibleLandingStop::CallFunc_CheckActiveBehavior_bRetValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleLandingStop, CallFunc_CheckAnyCharacterMovementSkillActive_bWithCharacterMovement) == 0x000002, "Member 'BP_AJBInGameCharacter_C_CheckPossibleLandingStop::CallFunc_CheckAnyCharacterMovementSkillActive_bWithCharacterMovement' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleLandingStop, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_AJBInGameCharacter_C_CheckPossibleLandingStop::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleLandingStop, CallFunc_Not_PreBool_ReturnValue1) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CheckPossibleLandingStop::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleLandingStop, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'BP_AJBInGameCharacter_C_CheckPossibleLandingStop::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRep_bIsVanished
// 0x0068 (0x0068 - 0x0000)
struct BP_AJBInGameCharacter_C_OnRep_bIsVanished final
{
public:
	struct FGameplayTagContainer                  CallFunc_GetDebugTags_ReturnValue;                 // 0x0000(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnRep_bIsVanished) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnRep_bIsVanished");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnRep_bIsVanished) == 0x000068, "Wrong size on BP_AJBInGameCharacter_C_OnRep_bIsVanished");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep_bIsVanished, CallFunc_GetDebugTags_ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnRep_bIsVanished::CallFunc_GetDebugTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep_bIsVanished, CallFunc_HasTag_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_OnRep_bIsVanished::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep_bIsVanished, CallFunc_GetDisplayName_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_OnRep_bIsVanished::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep_bIsVanished, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_AJBInGameCharacter_C_OnRep_bIsVanished::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep_bIsVanished, CallFunc_Concat_StrStr_ReturnValue1) == 0x000048, "Member 'BP_AJBInGameCharacter_C_OnRep_bIsVanished::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep_bIsVanished, CallFunc_Concat_StrStr_ReturnValue2) == 0x000058, "Member 'BP_AJBInGameCharacter_C_OnRep_bIsVanished::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckDeadBody
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckDeadBody final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_IsFalling;                                    // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue;     // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckDeadBody) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_CheckDeadBody");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckDeadBody) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_CheckDeadBody");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDeadBody, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckDeadBody::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDeadBody, Temp_IsFalling) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CheckDeadBody::Temp_IsFalling' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDeadBody, CallFunc_IsFalling_ReturnValue) == 0x000005, "Member 'BP_AJBInGameCharacter_C_CheckDeadBody::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDeadBody, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'BP_AJBInGameCharacter_C_CheckDeadBody::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDeadBody, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000007, "Member 'BP_AJBInGameCharacter_C_CheckDeadBody::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDeadBody, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckDeadBody::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDeadBody, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_CheckDeadBody::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDeadBody, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CheckDeadBody::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDeadBody, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000014, "Member 'BP_AJBInGameCharacter_C_CheckDeadBody::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDeadBody, CallFunc_CharacterBehaviorMatches_ReturnValue) == 0x000015, "Member 'BP_AJBInGameCharacter_C_CheckDeadBody::CallFunc_CharacterBehaviorMatches_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDeadBody, CallFunc_BooleanAND_ReturnValue) == 0x000016, "Member 'BP_AJBInGameCharacter_C_CheckDeadBody::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsDeathAndEnd
// 0x0005 (0x0005 - 0x0000)
struct BP_AJBInGameCharacter_C_IsDeathAndEnd final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsResurrectable_bResult;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IsDeathAndEnd) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_IsDeathAndEnd");
static_assert(sizeof(BP_AJBInGameCharacter_C_IsDeathAndEnd) == 0x000005, "Wrong size on BP_AJBInGameCharacter_C_IsDeathAndEnd");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsDeathAndEnd, ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IsDeathAndEnd::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsDeathAndEnd, CallFunc_IsResurrectable_bResult) == 0x000001, "Member 'BP_AJBInGameCharacter_C_IsDeathAndEnd::CallFunc_IsResurrectable_bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsDeathAndEnd, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_AJBInGameCharacter_C_IsDeathAndEnd::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsDeathAndEnd, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'BP_AJBInGameCharacter_C_IsDeathAndEnd::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsDeathAndEnd, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_IsDeathAndEnd::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckCharacterBehavior_Active
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckCharacterBehavior_Active final
{
public:
	bool                                          bReturnValue;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckCharacterBehavior_Active) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CheckCharacterBehavior_Active");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckCharacterBehavior_Active) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_CheckCharacterBehavior_Active");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckCharacterBehavior_Active, bReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckCharacterBehavior_Active::bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckCharacterBehavior_Active, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_CheckCharacterBehavior_Active::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckCharacterBehavior_Critical
// 0x0006 (0x0006 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckCharacterBehavior_Critical final
{
public:
	bool                                          bReturnValue;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckCharacterBehavior_Critical) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CheckCharacterBehavior_Critical");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckCharacterBehavior_Critical) == 0x000006, "Wrong size on BP_AJBInGameCharacter_C_CheckCharacterBehavior_Critical");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckCharacterBehavior_Critical, bReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckCharacterBehavior_Critical::bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckCharacterBehavior_Critical, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_CheckCharacterBehavior_Critical::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckCharacterBehavior_Critical, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000002, "Member 'BP_AJBInGameCharacter_C_CheckCharacterBehavior_Critical::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckCharacterBehavior_Critical, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000003, "Member 'BP_AJBInGameCharacter_C_CheckCharacterBehavior_Critical::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckCharacterBehavior_Critical, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CheckCharacterBehavior_Critical::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckCharacterBehavior_Critical, CallFunc_BooleanOR_ReturnValue1) == 0x000005, "Member 'BP_AJBInGameCharacter_C_CheckCharacterBehavior_Critical::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.AddControllerInputs
// 0x0088 (0x0088 - 0x0000)
struct BP_AJBInGameCharacter_C_AddControllerInputs final
{
public:
	float                                         TempLookupScale;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempTurnedScale;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempLookupRotation;                                // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempTurnedRotation;                                // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECameraInputMode                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable2;                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcCurrentRotationValue_TurnedRotation;  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcCurrentRotationValue_LookupRotation;  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable3;                              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECameraInputMode                              Temp_byte_Variable1;                               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcCameraConfigScale_UpDownScale;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcCameraConfigScale_RightLeftScale;     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue5;         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue1;     // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select2_Default;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select3_Default;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue6;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue7;         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue8;         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue9;         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_AddControllerInputs) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_AddControllerInputs");
static_assert(sizeof(BP_AJBInGameCharacter_C_AddControllerInputs) == 0x000088, "Wrong size on BP_AJBInGameCharacter_C_AddControllerInputs");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, TempLookupScale) == 0x000000, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::TempLookupScale' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, TempTurnedScale) == 0x000004, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::TempTurnedScale' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, TempLookupRotation) == 0x000008, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::TempLookupRotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, TempTurnedRotation) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::TempTurnedRotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, Temp_byte_Variable) == 0x000010, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, Temp_float_Variable) == 0x000014, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, Temp_float_Variable1) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, CallFunc_GetWorldDeltaSeconds_ReturnValue1) == 0x000024, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::CallFunc_GetWorldDeltaSeconds_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, Temp_bool_Variable) == 0x000028, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, Temp_float_Variable2) == 0x000030, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, Temp_bool_Variable1) == 0x000034, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, CallFunc_CalcCurrentRotationValue_TurnedRotation) == 0x000038, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::CallFunc_CalcCurrentRotationValue_TurnedRotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, CallFunc_CalcCurrentRotationValue_LookupRotation) == 0x00003C, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::CallFunc_CalcCurrentRotationValue_LookupRotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, Temp_float_Variable3) == 0x000040, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::Temp_float_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, K2Node_Select_Default) == 0x000048, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, Temp_byte_Variable1) == 0x00004C, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, CallFunc_CalcCameraConfigScale_UpDownScale) == 0x000050, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::CallFunc_CalcCameraConfigScale_UpDownScale' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, CallFunc_CalcCameraConfigScale_RightLeftScale) == 0x000054, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::CallFunc_CalcCameraConfigScale_RightLeftScale' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, K2Node_Select1_Default) == 0x000058, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x00005C, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x000060, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x000064, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, CallFunc_Multiply_FloatFloat_ReturnValue5) == 0x000068, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::CallFunc_Multiply_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, CallFunc_GreaterEqual_FloatFloat_ReturnValue1) == 0x00006C, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::CallFunc_GreaterEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, K2Node_Select2_Default) == 0x000070, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, K2Node_Select3_Default) == 0x000074, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, CallFunc_Multiply_FloatFloat_ReturnValue6) == 0x000078, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::CallFunc_Multiply_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, CallFunc_Multiply_FloatFloat_ReturnValue7) == 0x00007C, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::CallFunc_Multiply_FloatFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, CallFunc_Multiply_FloatFloat_ReturnValue8) == 0x000080, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::CallFunc_Multiply_FloatFloat_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_AddControllerInputs, CallFunc_Multiply_FloatFloat_ReturnValue9) == 0x000084, "Member 'BP_AJBInGameCharacter_C_AddControllerInputs::CallFunc_Multiply_FloatFloat_ReturnValue9' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRep_Rep_SP
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameCharacter_C_OnRep_Rep_SP final
{
public:
	struct FGameplayTag                           CallFunc_GetAchievedGrowup_Growup;                 // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAchievedGrowup_Value;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetFocusActor_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnRep_Rep_SP) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnRep_Rep_SP");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnRep_Rep_SP) == 0x000028, "Wrong size on BP_AJBInGameCharacter_C_OnRep_Rep_SP");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep_Rep_SP, CallFunc_GetAchievedGrowup_Growup) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnRep_Rep_SP::CallFunc_GetAchievedGrowup_Growup' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep_Rep_SP, CallFunc_GetAchievedGrowup_Value) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnRep_Rep_SP::CallFunc_GetAchievedGrowup_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep_Rep_SP, CallFunc_GetAJBGameInstance_bSuccess) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_OnRep_Rep_SP::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep_Rep_SP, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000010, "Member 'BP_AJBInGameCharacter_C_OnRep_Rep_SP::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep_Rep_SP, CallFunc_GetFocusActor_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_OnRep_Rep_SP::CallFunc_GetFocusActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep_Rep_SP, CallFunc_IsPlayingReplay_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_OnRep_Rep_SP::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep_Rep_SP, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000021, "Member 'BP_AJBInGameCharacter_C_OnRep_Rep_SP::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UltimateSkillNumWillBeIncreased
// 0x0068 (0x0068 - 0x0000)
struct BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0008(0x0020)()
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_GrowupInfo_Processed               CallFunc_GetGrowupParam_GrowupParam;               // 0x0038(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesAnyTags_ReturnValue;               // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased");
static_assert(sizeof(BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased) == 0x000068, "Wrong size on BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased");
static_assert(offsetof(BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased, bResult) == 0x000000, "Member 'BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased::bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased, Temp_int_Variable) == 0x000028, "Member 'BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased, CallFunc_Add_IntInt_ReturnValue1) == 0x000030, "Member 'BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased, CallFunc_GetGrowupParam_GrowupParam) == 0x000038, "Member 'BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased::CallFunc_GetGrowupParam_GrowupParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased, CallFunc_Array_LastIndex_ReturnValue) == 0x000060, "Member 'BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000064, "Member 'BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased, CallFunc_MatchesAnyTags_ReturnValue) == 0x000065, "Member 'BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased::CallFunc_MatchesAnyTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased, CallFunc_Less_IntInt_ReturnValue) == 0x000066, "Member 'BP_AJBInGameCharacter_C_UltimateSkillNumWillBeIncreased::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.EmotePoseExists
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_EmotePoseExists final
{
public:
	int32                                         PositionNo;                                        // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResult;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_TryGetEmoteAnimMontageByIndex_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_EmotePoseExists) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_EmotePoseExists");
static_assert(sizeof(BP_AJBInGameCharacter_C_EmotePoseExists) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_EmotePoseExists");
static_assert(offsetof(BP_AJBInGameCharacter_C_EmotePoseExists, PositionNo) == 0x000000, "Member 'BP_AJBInGameCharacter_C_EmotePoseExists::PositionNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_EmotePoseExists, bResult) == 0x000004, "Member 'BP_AJBInGameCharacter_C_EmotePoseExists::bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_EmotePoseExists, CallFunc_TryGetEmoteAnimMontageByIndex_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_EmotePoseExists::CallFunc_TryGetEmoteAnimMontageByIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_EmotePoseExists, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_EmotePoseExists::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.EmoteVoiceExists
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_EmoteVoiceExists final
{
public:
	int32                                         PositionNo;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResult;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_TryGetEmoteVoiceByIndex_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_EmoteVoiceExists) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_EmoteVoiceExists");
static_assert(sizeof(BP_AJBInGameCharacter_C_EmoteVoiceExists) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_EmoteVoiceExists");
static_assert(offsetof(BP_AJBInGameCharacter_C_EmoteVoiceExists, PositionNo) == 0x000000, "Member 'BP_AJBInGameCharacter_C_EmoteVoiceExists::PositionNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_EmoteVoiceExists, bResult) == 0x000004, "Member 'BP_AJBInGameCharacter_C_EmoteVoiceExists::bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_EmoteVoiceExists, CallFunc_TryGetEmoteVoiceByIndex_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_EmoteVoiceExists::CallFunc_TryGetEmoteVoiceByIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_EmoteVoiceExists, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_EmoteVoiceExists::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetControlRotationWithStopReset(Local)
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_SetControlRotationWithStopReset_Local_ final
{
public:
	class AController*                            Controller_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NewRotation;                                       // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                          bStopCameraResetProcess;                           // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SetControlRotationWithStopReset_Local_) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_SetControlRotationWithStopReset_Local_");
static_assert(sizeof(BP_AJBInGameCharacter_C_SetControlRotationWithStopReset_Local_) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_SetControlRotationWithStopReset_Local_");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetControlRotationWithStopReset_Local_, Controller_0) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SetControlRotationWithStopReset_Local_::Controller_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetControlRotationWithStopReset_Local_, NewRotation) == 0x000008, "Member 'BP_AJBInGameCharacter_C_SetControlRotationWithStopReset_Local_::NewRotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetControlRotationWithStopReset_Local_, bStopCameraResetProcess) == 0x000014, "Member 'BP_AJBInGameCharacter_C_SetControlRotationWithStopReset_Local_::bStopCameraResetProcess' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsNPC
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_IsNPC final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IsNPC) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_IsNPC");
static_assert(sizeof(BP_AJBInGameCharacter_C_IsNPC) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_IsNPC");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsNPC, ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IsNPC::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.MakeAlwaysRelevant
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_MakeAlwaysRelevant final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_MakeAlwaysRelevant) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_MakeAlwaysRelevant");
static_assert(sizeof(BP_AJBInGameCharacter_C_MakeAlwaysRelevant) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_MakeAlwaysRelevant");
static_assert(offsetof(BP_AJBInGameCharacter_C_MakeAlwaysRelevant, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_MakeAlwaysRelevant::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_MakeAlwaysRelevant, CallFunc_IsValid_ReturnValue1) == 0x000001, "Member 'BP_AJBInGameCharacter_C_MakeAlwaysRelevant::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsBeingRescued
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_IsBeingRescued final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetPairCharacterBP_PairCharacterBP;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActive_bActive;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IsBeingRescued) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_IsBeingRescued");
static_assert(sizeof(BP_AJBInGameCharacter_C_IsBeingRescued) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_IsBeingRescued");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsBeingRescued, ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IsBeingRescued::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsBeingRescued, CallFunc_GetPairCharacterBP_PairCharacterBP) == 0x000008, "Member 'BP_AJBInGameCharacter_C_IsBeingRescued::CallFunc_GetPairCharacterBP_PairCharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsBeingRescued, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_IsBeingRescued::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsBeingRescued, CallFunc_CheckActive_bActive) == 0x000011, "Member 'BP_AJBInGameCharacter_C_IsBeingRescued::CallFunc_CheckActive_bActive' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.NotifyBecomingLastSurvivor_Core
// 0x0058 (0x0058 - 0x0000)
struct BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core final
{
public:
	TArray<class UActorComponent*>                Temp_ActorComponents;                              // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UActorComponent*>                CallFunc_GetComponentsByClass_ReturnValue;         // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_LastSurvivorSceneInterface_C> K2Node_DynamicCast_AsBI_Last_Survivor_Scene_Interface; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core");
static_assert(sizeof(BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core) == 0x000058, "Wrong size on BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core");
static_assert(offsetof(BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core, Temp_ActorComponents) == 0x000000, "Member 'BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core::Temp_ActorComponents' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core, CallFunc_GetComponentsByClass_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core, K2Node_DynamicCast_AsBI_Last_Survivor_Scene_Interface) == 0x000038, "Member 'BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core::K2Node_DynamicCast_AsBI_Last_Survivor_Scene_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_AJBInGameCharacter_C_NotifyBecomingLastSurvivor_Core::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetMeshRelatedThingsVisibility
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                Temp_MeshChildren;                                 // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility");
static_assert(sizeof(BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility) == 0x000048, "Wrong size on BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility, bNewVisibility) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility::bNewVisibility' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility, Temp_MeshChildren) == 0x000008, "Member 'BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility::Temp_MeshChildren' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000035, "Member 'BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility, CallFunc_GetChildrenComponents_Children) == 0x000038, "Member 'BP_AJBInGameCharacter_C_SetMeshRelatedThingsVisibility::CallFunc_GetChildrenComponents_Children' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetPairCharacterBP
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_C_GetPairCharacterBP final
{
public:
	class ABP_AJBInGameCharacter_C*               PairCharacterBP;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetPairCharacterBP) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_GetPairCharacterBP");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetPairCharacterBP) == 0x000020, "Wrong size on BP_AJBInGameCharacter_C_GetPairCharacterBP");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPairCharacterBP, PairCharacterBP) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetPairCharacterBP::PairCharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPairCharacterBP, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_GetPairCharacterBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPairCharacterBP, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameCharacter_C_GetPairCharacterBP::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPairCharacterBP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameCharacter_C_GetPairCharacterBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsActiveToCritical
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_IsActiveToCritical final
{
public:
	bool                                          bIsActiveToCritical;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IsActiveToCritical) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_IsActiveToCritical");
static_assert(sizeof(BP_AJBInGameCharacter_C_IsActiveToCritical) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_IsActiveToCritical");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsActiveToCritical, bIsActiveToCritical) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IsActiveToCritical::bIsActiveToCritical' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsActiveToCritical, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_IsActiveToCritical::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.InitProperCriticalTime(Server)
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_InitProperCriticalTime_Server_ final
{
public:
	class FString                                 PairIDString;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_InitProperCriticalTime_Server_) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_InitProperCriticalTime_Server_");
static_assert(sizeof(BP_AJBInGameCharacter_C_InitProperCriticalTime_Server_) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_InitProperCriticalTime_Server_");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitProperCriticalTime_Server_, PairIDString) == 0x000000, "Member 'BP_AJBInGameCharacter_C_InitProperCriticalTime_Server_::PairIDString' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitProperCriticalTime_Server_, CallFunc_StartsWith_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_InitProperCriticalTime_Server_::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitProperCriticalTime_Server_, Temp_bool_Variable) == 0x000011, "Member 'BP_AJBInGameCharacter_C_InitProperCriticalTime_Server_::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitProperCriticalTime_Server_, CallFunc_IsServer_ReturnValue) == 0x000012, "Member 'BP_AJBInGameCharacter_C_InitProperCriticalTime_Server_::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InitProperCriticalTime_Server_, K2Node_Select_Default) == 0x000014, "Member 'BP_AJBInGameCharacter_C_InitProperCriticalTime_Server_::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangePassiveParticleVisibility
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_AJBPassiveSkillBase_C*>      CallFunc_GetComponentsByClass_ReturnValue;         // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBPassiveSkillBase_C*              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActive_bActive;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility) == 0x000038, "Wrong size on BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility, bNewVisibility) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility::bNewVisibility' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility, CallFunc_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility, CallFunc_CheckActive_bActive) == 0x000031, "Member 'BP_AJBInGameCharacter_C_ChangePassiveParticleVisibility::CallFunc_CheckActive_bActive' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.PlayKnockdownSoundOnViewerEnv(Server)
// 0x0078 (0x0078 - 0x0000)
struct BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_ final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FShopEventSettings                     CallFunc_GetShopEventSettings_ReturnValue;         // 0x0024(0x0008)(ConstParm, NoDestructor)
	bool                                          CallFunc_PlayModeIsPair_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller1; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        CallFunc_Array_Get_Item1;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue; // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_");
static_assert(sizeof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_) == 0x000078, "Wrong size on BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, Temp_int_Array_Index_Variable1) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, CallFunc_IsValid_ReturnValue1) == 0x000011, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller) == 0x000018, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, CallFunc_GetShopEventSettings_ReturnValue) == 0x000024, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::CallFunc_GetShopEventSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, CallFunc_PlayModeIsPair_ReturnValue) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::CallFunc_PlayModeIsPair_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002D, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, CallFunc_Not_PreBool_ReturnValue) == 0x00002E, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, Temp_int_Loop_Counter_Variable1) == 0x000030, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, CallFunc_IsValid_ReturnValue2) == 0x000034, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000038, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, K2Node_DynamicCast_bSuccess1) == 0x000040, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, CallFunc_Add_IntInt_ReturnValue1) == 0x000044, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller1) == 0x000058, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, K2Node_DynamicCast_bSuccess2) == 0x000060, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, CallFunc_Array_Get_Item1) == 0x000068, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, CallFunc_Array_Length_ReturnValue1) == 0x000070, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, CallFunc_Less_IntInt_ReturnValue1) == 0x000074, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue) == 0x000075, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_, CallFunc_Not_PreBool_ReturnValue1) == 0x000076, "Member 'BP_AJBInGameCharacter_C_PlayKnockdownSoundOnViewerEnv_Server_::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckSidlingForGunnerAnimation
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation final
{
public:
	bool                                          bSidlingForGunnerAnimation;                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTempSidlingForGunnerAnimation;                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_Map_Keys_Keys;                            // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillInfo_bResult;                     // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FST_SkillInfo                          CallFunc_GetSkillInfo_SkillInfo;                   // 0x0035(0x0002)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation) == 0x000050, "Wrong size on BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation, bSidlingForGunnerAnimation) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation::bSidlingForGunnerAnimation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation, bTempSidlingForGunnerAnimation) == 0x000001, "Member 'BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation::bTempSidlingForGunnerAnimation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation, CallFunc_Map_Keys_Keys) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation, CallFunc_GetSkillInfo_bResult) == 0x000034, "Member 'BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation::CallFunc_GetSkillInfo_bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation, CallFunc_GetSkillInfo_SkillInfo) == 0x000035, "Member 'BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation::CallFunc_GetSkillInfo_SkillInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation, CallFunc_Less_IntInt_ReturnValue) == 0x000037, "Member 'BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation, CallFunc_BooleanAND_ReturnValue1) == 0x000038, "Member 'BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation, CallFunc_MatchesTag_ReturnValue) == 0x000039, "Member 'BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation, CallFunc_Map_Find_Value) == 0x000048, "Member 'BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation, CallFunc_Map_Find_ReturnValue) == 0x00004C, "Member 'BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation, CallFunc_Not_PreBool_ReturnValue) == 0x00004D, "Member 'BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation, CallFunc_BooleanAND_ReturnValue2) == 0x00004E, "Member 'BP_AJBInGameCharacter_C_CheckSidlingForGunnerAnimation::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RequestLandingEffect_Core
// 0x01D0 (0x01D0 - 0x0000)
struct BP_AJBInGameCharacter_C_RequestLandingEffect_Core final
{
public:
	struct FGameplayTag                           EffectType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bLandingStop;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WorldLocation;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_FloorSurfaceType;                             // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_EffectWorldLocation;                          // 0x001C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_GionSpawnedSpace                            CallFunc_GetSpawnedSpaceInOwnersEnv_SpawnedSpaceInOwnersEnv; // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetGionOwner_GionOwner;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetFootLocation_Location;                 // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable1;                             // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable2;                             // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestGion_AkComponent__LocalOnly_;      // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0084(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ZeroConstructor, ReferenceParm)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_TraceCharacterFootingInfo_OutHit;         // 0x00A8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_TraceCharacterFootingInfo_ReturnValue;    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select1_Default;                            // 0x0138(0x0008)(NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectOnLocal_ParticleEffect; // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_153[0x1];                                      // 0x0153(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x015C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0168(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0174(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0180(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_RequestLandingEffect_Core");
static_assert(sizeof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core) == 0x0001D0, "Wrong size on BP_AJBInGameCharacter_C_RequestLandingEffect_Core");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, EffectType) == 0x000000, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::EffectType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, bLandingStop) == 0x000008, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::bLandingStop' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, WorldLocation) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, Temp_FloorSurfaceType) == 0x000018, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::Temp_FloorSurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, Temp_EffectWorldLocation) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::Temp_EffectWorldLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_GetSpawnedSpaceInOwnersEnv_SpawnedSpaceInOwnersEnv) == 0x000029, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_GetSpawnedSpaceInOwnersEnv_SpawnedSpaceInOwnersEnv' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_GetGionOwner_GionOwner) == 0x000030, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_GetGionOwner_GionOwner' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_IsDedicatedServer_ReturnValue) == 0x000038, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_GetFootLocation_Location) == 0x00003C, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_GetFootLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, Temp_struct_Variable) == 0x000048, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, Temp_struct_Variable1) == 0x000050, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, Temp_bool_Variable) == 0x000058, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000060, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, Temp_struct_Variable2) == 0x000068, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, K2Node_Select_Default) == 0x000070, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_RequestGion_AkComponent__LocalOnly_) == 0x000078, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_RequestGion_AkComponent__LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_) == 0x000080, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000084, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, K2Node_MakeArray_Array) == 0x000090, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, Temp_byte_Variable) == 0x0000A0, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_TraceCharacterFootingInfo_OutHit) == 0x0000A8, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_TraceCharacterFootingInfo_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_TraceCharacterFootingInfo_ReturnValue) == 0x000130, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_TraceCharacterFootingInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, K2Node_Select1_Default) == 0x000138, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_GetSurfaceType_ReturnValue) == 0x000140, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_RequestParticleEffectOnLocal_ParticleEffect) == 0x000148, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_RequestParticleEffectOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000150, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_BreakHitResult_bBlockingHit) == 0x000151, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_BreakHitResult_bInitialOverlap) == 0x000152, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_BreakHitResult_Time) == 0x000154, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_BreakHitResult_Distance) == 0x000158, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_BreakHitResult_Location) == 0x00015C, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_BreakHitResult_ImpactPoint) == 0x000168, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_BreakHitResult_Normal) == 0x000174, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_BreakHitResult_ImpactNormal) == 0x000180, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_BreakHitResult_PhysMat) == 0x000190, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_BreakHitResult_HitActor) == 0x000198, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_BreakHitResult_HitComponent) == 0x0001A0, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_BreakHitResult_HitBoneName) == 0x0001A8, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_BreakHitResult_HitItem) == 0x0001B0, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_BreakHitResult_FaceIndex) == 0x0001B4, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_BreakHitResult_TraceStart) == 0x0001B8, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RequestLandingEffect_Core, CallFunc_BreakHitResult_TraceEnd) == 0x0001C4, "Member 'BP_AJBInGameCharacter_C_RequestLandingEffect_Core::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.HasStand
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_HasStand final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_HasStand) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_HasStand");
static_assert(sizeof(BP_AJBInGameCharacter_C_HasStand) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_HasStand");
static_assert(offsetof(BP_AJBInGameCharacter_C_HasStand, ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_HasStand::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_HasStand, CallFunc_IsValidClass_ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_HasStand::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.HasMovableStand
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_HasMovableStand final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_HasMovableStand) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_HasMovableStand");
static_assert(sizeof(BP_AJBInGameCharacter_C_HasMovableStand) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_HasMovableStand");
static_assert(offsetof(BP_AJBInGameCharacter_C_HasMovableStand, ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_HasMovableStand::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_HasMovableStand, CallFunc_IsValidClass_ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_HasMovableStand::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.LongPressSkillActivated
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_LongPressSkillActivated final
{
public:
	class UBP_AJBLongPressInteract_C*             LongPressInteract;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_LongPressSkillActivated) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_LongPressSkillActivated");
static_assert(sizeof(BP_AJBInGameCharacter_C_LongPressSkillActivated) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_LongPressSkillActivated");
static_assert(offsetof(BP_AJBInGameCharacter_C_LongPressSkillActivated, LongPressInteract) == 0x000000, "Member 'BP_AJBInGameCharacter_C_LongPressSkillActivated::LongPressInteract' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.LongPressSkillInactivated
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameCharacter_C_LongPressSkillInactivated final
{
public:
	class UBP_AJBLongPressInteract_C*             LongPressInteract;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     CallFunc_GetBasicSkill_BasicSkill;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBAccompanySkill_C*                K2Node_DynamicCast_AsBP_AJBAccompany_Skill;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_LongPressSkillInactivated) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_LongPressSkillInactivated");
static_assert(sizeof(BP_AJBInGameCharacter_C_LongPressSkillInactivated) == 0x000038, "Wrong size on BP_AJBInGameCharacter_C_LongPressSkillInactivated");
static_assert(offsetof(BP_AJBInGameCharacter_C_LongPressSkillInactivated, LongPressInteract) == 0x000000, "Member 'BP_AJBInGameCharacter_C_LongPressSkillInactivated::LongPressInteract' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_LongPressSkillInactivated, CallFunc_HasLocalSharedController_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_LongPressSkillInactivated::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_LongPressSkillInactivated, CallFunc_GetBasicSkill_BasicSkill) == 0x000010, "Member 'BP_AJBInGameCharacter_C_LongPressSkillInactivated::CallFunc_GetBasicSkill_BasicSkill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_LongPressSkillInactivated, K2Node_DynamicCast_AsBP_AJBAccompany_Skill) == 0x000018, "Member 'BP_AJBInGameCharacter_C_LongPressSkillInactivated::K2Node_DynamicCast_AsBP_AJBAccompany_Skill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_LongPressSkillInactivated, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameCharacter_C_LongPressSkillInactivated::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_LongPressSkillInactivated, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_AJBInGameCharacter_C_LongPressSkillInactivated::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_LongPressSkillInactivated, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_LongPressSkillInactivated::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_LongPressSkillInactivated, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_LongPressSkillInactivated::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_LongPressSkillInactivated, CallFunc_ClassIsChildOf_ReturnValue) == 0x000031, "Member 'BP_AJBInGameCharacter_C_LongPressSkillInactivated::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_LongPressSkillInactivated, CallFunc_BooleanAND_ReturnValue1) == 0x000032, "Member 'BP_AJBInGameCharacter_C_LongPressSkillInactivated::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckAnySkillCanAccompany
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany final
{
public:
	class UClass*                                 IgnoreSkillClass;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanAccompany;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_AJBSkillBase_C*>             CallFunc_GetComponentsByClass_ReturnValue;         // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckStateCanAccompany_bCanAccompany;     // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany) == 0x000048, "Wrong size on BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany, IgnoreSkillClass) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany::IgnoreSkillClass' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany, bCanAccompany) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany::bCanAccompany' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany, CallFunc_GetComponentsByClass_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany, CallFunc_CheckStateCanAccompany_bCanAccompany) == 0x000034, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany::CallFunc_CheckStateCanAccompany_bCanAccompany' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany, CallFunc_Less_IntInt_ReturnValue) == 0x000035, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany, CallFunc_GetObjectClass_ReturnValue) == 0x000038, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany, CallFunc_ClassIsChildOf_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany, CallFunc_Not_PreBool_ReturnValue) == 0x000041, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillCanAccompany::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryGetSkillComponentByTag
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBInGameCharacter_C_TryGetSkillComponentByTag final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     SkillComponent;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AJBSkillBase_C*>             CallFunc_GetComponentsByClass_ReturnValue;         // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_TryGetSkillComponentByTag) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_TryGetSkillComponentByTag");
static_assert(sizeof(BP_AJBInGameCharacter_C_TryGetSkillComponentByTag) == 0x000050, "Wrong size on BP_AJBInGameCharacter_C_TryGetSkillComponentByTag");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByTag, SkillTag) == 0x000000, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByTag::SkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByTag, bSuccess) == 0x000008, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByTag::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByTag, SkillComponent) == 0x000010, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByTag::SkillComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByTag, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByTag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByTag, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByTag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByTag, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByTag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByTag, CallFunc_GetComponentsByClass_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByTag::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByTag, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByTag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByTag, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByTag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByTag, CallFunc_MatchesTag_ReturnValue) == 0x000044, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByTag::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByTag, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByTag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByTag, CallFunc_Array_Length_ReturnValue1) == 0x000048, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByTag::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetSkillComponentByTag, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'BP_AJBInGameCharacter_C_TryGetSkillComponentByTag::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckConstantVelocity
// 0x000A (0x000A - 0x0000)
struct BP_AJBInGameCharacter_C_CheckConstantVelocity final
{
public:
	bool                                          bConstantVelocity;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EWalkingState                                 Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue; // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckConstantVelocity) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CheckConstantVelocity");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckConstantVelocity) == 0x00000A, "Wrong size on BP_AJBInGameCharacter_C_CheckConstantVelocity");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckConstantVelocity, bConstantVelocity) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckConstantVelocity::bConstantVelocity' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckConstantVelocity, Temp_byte_Variable) == 0x000001, "Member 'BP_AJBInGameCharacter_C_CheckConstantVelocity::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckConstantVelocity, Temp_bool_Variable) == 0x000002, "Member 'BP_AJBInGameCharacter_C_CheckConstantVelocity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckConstantVelocity, Temp_bool_Variable1) == 0x000003, "Member 'BP_AJBInGameCharacter_C_CheckConstantVelocity::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckConstantVelocity, Temp_bool_Variable2) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CheckConstantVelocity::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckConstantVelocity, Temp_bool_Variable3) == 0x000005, "Member 'BP_AJBInGameCharacter_C_CheckConstantVelocity::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckConstantVelocity, Temp_bool_Variable4) == 0x000006, "Member 'BP_AJBInGameCharacter_C_CheckConstantVelocity::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckConstantVelocity, CallFunc_CheckCharacterBehavior_Active_bReturnValue) == 0x000007, "Member 'BP_AJBInGameCharacter_C_CheckConstantVelocity::CallFunc_CheckCharacterBehavior_Active_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckConstantVelocity, K2Node_Select_Default) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckConstantVelocity::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckConstantVelocity, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'BP_AJBInGameCharacter_C_CheckConstantVelocity::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeAttachedPaticleVisibility
// 0x0088 (0x0088 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInGameAttachedParticle_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Attached_Particle; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UActorComponent*>                CallFunc_GetComponentsByClass_ReturnValue;         // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	class UActorComponent*                        CallFunc_Array_Get_Item1;                          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInGameAttachedParticle_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Attached_Particle1; // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility) == 0x000088, "Wrong size on BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility, bNewVisibility) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility::bNewVisibility' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility, Temp_int_Array_Index_Variable1) == 0x000010, "Member 'BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility, Temp_int_Loop_Counter_Variable1) == 0x000014, "Member 'BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility, CallFunc_GetAttachedActors_OutActors) == 0x000018, "Member 'BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility, K2Node_DynamicCast_AsBI_AJBIn_Game_Attached_Particle) == 0x000038, "Member 'BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility::K2Node_DynamicCast_AsBI_AJBIn_Game_Attached_Particle' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility, CallFunc_Add_IntInt_ReturnValue1) == 0x00004C, "Member 'BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility, CallFunc_GetComponentsByClass_ReturnValue) == 0x000050, "Member 'BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility, CallFunc_Array_Get_Item1) == 0x000060, "Member 'BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility, CallFunc_Array_Length_ReturnValue1) == 0x000068, "Member 'BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility, K2Node_DynamicCast_AsBI_AJBIn_Game_Attached_Particle1) == 0x000070, "Member 'BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility::K2Node_DynamicCast_AsBI_AJBIn_Game_Attached_Particle1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility, K2Node_DynamicCast_bSuccess1) == 0x000080, "Member 'BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility, CallFunc_Less_IntInt_ReturnValue1) == 0x000081, "Member 'BP_AJBInGameCharacter_C_ChangeAttachedPaticleVisibility::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SortHitResultsMostNearTraceStartLocation
// 0x0388 (0x0388 - 0x0000)
struct BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation final
{
public:
	TArray<struct FHitResult>                     InHits;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	float                                         Radius;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     OutHits;                                           // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
	struct FHitResult                             TempHitResult;                                     // 0x0028(0x0088)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bTempInsert;                                       // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TempLength;                                        // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     TempHitResults;                                    // 0x00B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x00D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0166(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_167[0x1];                                      // 0x0167(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item1;                          // 0x0170(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FE[0x2];                                      // 0x01FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0208(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0214(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0220(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x022C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0260(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x026C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x027C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x028C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0298(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1;       // 0x02B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit1;             // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap1;          // 0x02CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CE[0x2];                                      // 0x02CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time1;                     // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance1;                 // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location1;                 // 0x02D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint1;              // 0x02E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal1;                   // 0x02F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal1;             // 0x02FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat1;                  // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor1;                 // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent1;             // 0x0318(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName1;              // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem1;                  // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex1;                // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart1;               // 0x0330(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd1;                 // 0x033C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue2;       // 0x0348(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue1;                      // 0x0354(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0360(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x036C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue3;       // 0x0378(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue1;                       // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation");
static_assert(sizeof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation) == 0x000388, "Wrong size on BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, InHits) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::InHits' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, Radius) == 0x000010, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, OutHits) == 0x000018, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::OutHits' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, TempHitResult) == 0x000028, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::TempHitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, bTempInsert) == 0x0000B0, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::bTempInsert' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, TempLength) == 0x0000B4, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::TempLength' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, TempHitResults) == 0x0000B8, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::TempHitResults' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, Temp_int_Array_Index_Variable) == 0x0000CC, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, Temp_int_Loop_Counter_Variable) == 0x000158, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_Less_IntInt_ReturnValue) == 0x00015C, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000160, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, Temp_bool_True_if_break_was_hit_Variable) == 0x000164, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_Not_PreBool_ReturnValue) == 0x000165, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_Not_PreBool_ReturnValue1) == 0x000166, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, Temp_int_Array_Index_Variable1) == 0x000168, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, Temp_int_Loop_Counter_Variable1) == 0x00016C, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_Array_Get_Item1) == 0x000170, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_Array_Length_ReturnValue1) == 0x0001F8, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x0001FC, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001FD, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_Time) == 0x000200, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_Distance) == 0x000204, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_Location) == 0x000208, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x000214, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_Normal) == 0x000220, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x00022C, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_PhysMat) == 0x000238, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_HitActor) == 0x000240, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_HitComponent) == 0x000248, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_HitBoneName) == 0x000250, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_HitItem) == 0x000258, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_FaceIndex) == 0x00025C, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_TraceStart) == 0x000260, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_TraceEnd) == 0x00026C, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_Less_IntInt_ReturnValue1) == 0x000278, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00027C, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BooleanAND_ReturnValue) == 0x000288, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_Normal_ReturnValue) == 0x00028C, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000298, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_Add_IntInt_ReturnValue1) == 0x0002A4, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x0002A8, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_Subtract_VectorVector_ReturnValue1) == 0x0002B4, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_Subtract_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_VSize_ReturnValue) == 0x0002C0, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0002C4, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_Array_Add_ReturnValue) == 0x0002C8, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_bBlockingHit1) == 0x0002CC, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_bBlockingHit1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_bInitialOverlap1) == 0x0002CD, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_bInitialOverlap1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_Time1) == 0x0002D0, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_Time1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_Distance1) == 0x0002D4, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_Distance1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_Location1) == 0x0002D8, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_ImpactPoint1) == 0x0002E4, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_ImpactPoint1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_Normal1) == 0x0002F0, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_Normal1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_ImpactNormal1) == 0x0002FC, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_ImpactNormal1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_PhysMat1) == 0x000308, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_PhysMat1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_HitActor1) == 0x000310, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_HitActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_HitComponent1) == 0x000318, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_HitComponent1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_HitBoneName1) == 0x000320, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_HitBoneName1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_HitItem1) == 0x000328, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_HitItem1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_FaceIndex1) == 0x00032C, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_FaceIndex1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_TraceStart1) == 0x000330, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_TraceStart1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_BreakHitResult_TraceEnd1) == 0x00033C, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_BreakHitResult_TraceEnd1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_Subtract_VectorVector_ReturnValue2) == 0x000348, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_Subtract_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_Normal_ReturnValue1) == 0x000354, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_Normal_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000360, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_Add_VectorVector_ReturnValue1) == 0x00036C, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_Subtract_VectorVector_ReturnValue3) == 0x000378, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_Subtract_VectorVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation, CallFunc_VSize_ReturnValue1) == 0x000384, "Member 'BP_AJBInGameCharacter_C_SortHitResultsMostNearTraceStartLocation::CallFunc_VSize_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckPredictionAttackHitBlocked
// 0x00C8 (0x00C8 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckPredictionAttackHitBlocked final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBlocked;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FHitResult                             CallFunc_AJBLineTraceByChannel_OutHit;             // 0x0038(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_AJBLineTraceByChannel_ReturnValue;        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckPredictionAttackHitBlocked) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckPredictionAttackHitBlocked");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckPredictionAttackHitBlocked) == 0x0000C8, "Wrong size on BP_AJBInGameCharacter_C_CheckPredictionAttackHitBlocked");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPredictionAttackHitBlocked, TargetActor) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckPredictionAttackHitBlocked::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPredictionAttackHitBlocked, bBlocked) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckPredictionAttackHitBlocked::bBlocked' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPredictionAttackHitBlocked, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_CheckPredictionAttackHitBlocked::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPredictionAttackHitBlocked, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CheckPredictionAttackHitBlocked::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPredictionAttackHitBlocked, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CheckPredictionAttackHitBlocked::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPredictionAttackHitBlocked, CallFunc_AJBLineTraceByChannel_OutHit) == 0x000038, "Member 'BP_AJBInGameCharacter_C_CheckPredictionAttackHitBlocked::CallFunc_AJBLineTraceByChannel_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPredictionAttackHitBlocked, CallFunc_AJBLineTraceByChannel_ReturnValue) == 0x0000C0, "Member 'BP_AJBInGameCharacter_C_CheckPredictionAttackHitBlocked::CallFunc_AJBLineTraceByChannel_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckAnySkillActiveOnTiltOneDash
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckAnySkillActiveOnTiltOneDash final
{
public:
	bool                                          bAnySkillActive;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBSkillBase_C*                     CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillActive_ReturnValue;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckAnySkillActiveOnTiltOneDash) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckAnySkillActiveOnTiltOneDash");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckAnySkillActiveOnTiltOneDash) == 0x000020, "Wrong size on BP_AJBInGameCharacter_C_CheckAnySkillActiveOnTiltOneDash");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActiveOnTiltOneDash, bAnySkillActive) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActiveOnTiltOneDash::bAnySkillActive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActiveOnTiltOneDash, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActiveOnTiltOneDash::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActiveOnTiltOneDash, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActiveOnTiltOneDash::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActiveOnTiltOneDash, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActiveOnTiltOneDash::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActiveOnTiltOneDash, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActiveOnTiltOneDash::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActiveOnTiltOneDash, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActiveOnTiltOneDash::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActiveOnTiltOneDash, CallFunc_IsSkillActive_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActiveOnTiltOneDash::CallFunc_IsSkillActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAnySkillActiveOnTiltOneDash, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BP_AJBInGameCharacter_C_CheckAnySkillActiveOnTiltOneDash::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckSidlingOnTiltOnce
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckSidlingOnTiltOnce final
{
public:
	bool                                          bSidling;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckSidlingOnTiltOnce) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CheckSidlingOnTiltOnce");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckSidlingOnTiltOnce) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_CheckSidlingOnTiltOnce");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSidlingOnTiltOnce, bSidling) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckSidlingOnTiltOnce::bSidling' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateSidlingInfo
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameCharacter_C_UpdateSidlingInfo final
{
public:
	bool                                          CallFunc_CheckSidlingForGunnerAnimation_bSidlingForGunnerAnimation; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_UpdateSidlingInfo) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_UpdateSidlingInfo");
static_assert(sizeof(BP_AJBInGameCharacter_C_UpdateSidlingInfo) == 0x00000C, "Wrong size on BP_AJBInGameCharacter_C_UpdateSidlingInfo");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateSidlingInfo, CallFunc_CheckSidlingForGunnerAnimation_bSidlingForGunnerAnimation) == 0x000000, "Member 'BP_AJBInGameCharacter_C_UpdateSidlingInfo::CallFunc_CheckSidlingForGunnerAnimation_bSidlingForGunnerAnimation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateSidlingInfo, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_UpdateSidlingInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateSidlingInfo, CallFunc_Map_Length_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_UpdateSidlingInfo::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateSidlingInfo, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_UpdateSidlingInfo::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsPlayerCharacterAsGame
// 0x0098 (0x0098 - 0x0000)
struct BP_AJBInGameCharacter_C_IsPlayerCharacterAsGame final
{
public:
	bool                                          bPlayerCharacterAsGame;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchingPlayerInfo                    CallFunc_TryGetMatchingPlayerInfo_Out;             // 0x0008(0x0088)()
	bool                                          CallFunc_TryGetMatchingPlayerInfo_ReturnValue;     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartsWith_ReturnValue1;                  // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IsPlayerCharacterAsGame) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_IsPlayerCharacterAsGame");
static_assert(sizeof(BP_AJBInGameCharacter_C_IsPlayerCharacterAsGame) == 0x000098, "Wrong size on BP_AJBInGameCharacter_C_IsPlayerCharacterAsGame");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsPlayerCharacterAsGame, bPlayerCharacterAsGame) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IsPlayerCharacterAsGame::bPlayerCharacterAsGame' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsPlayerCharacterAsGame, CallFunc_TryGetMatchingPlayerInfo_Out) == 0x000008, "Member 'BP_AJBInGameCharacter_C_IsPlayerCharacterAsGame::CallFunc_TryGetMatchingPlayerInfo_Out' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsPlayerCharacterAsGame, CallFunc_TryGetMatchingPlayerInfo_ReturnValue) == 0x000090, "Member 'BP_AJBInGameCharacter_C_IsPlayerCharacterAsGame::CallFunc_TryGetMatchingPlayerInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsPlayerCharacterAsGame, CallFunc_StartsWith_ReturnValue) == 0x000091, "Member 'BP_AJBInGameCharacter_C_IsPlayerCharacterAsGame::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsPlayerCharacterAsGame, CallFunc_StartsWith_ReturnValue1) == 0x000092, "Member 'BP_AJBInGameCharacter_C_IsPlayerCharacterAsGame::CallFunc_StartsWith_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsPlayerCharacterAsGame, CallFunc_BooleanOR_ReturnValue) == 0x000093, "Member 'BP_AJBInGameCharacter_C_IsPlayerCharacterAsGame::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRep_Rep_bShouldRemoveGravityStatusOnLanding
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_OnRep_Rep_bShouldRemoveGravityStatusOnLanding final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnRep_Rep_bShouldRemoveGravityStatusOnLanding) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_OnRep_Rep_bShouldRemoveGravityStatusOnLanding");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnRep_Rep_bShouldRemoveGravityStatusOnLanding) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_OnRep_Rep_bShouldRemoveGravityStatusOnLanding");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep_Rep_bShouldRemoveGravityStatusOnLanding, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnRep_Rep_bShouldRemoveGravityStatusOnLanding::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep_Rep_bShouldRemoveGravityStatusOnLanding, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_OnRep_Rep_bShouldRemoveGravityStatusOnLanding::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRep_Rep_RemoveGravityStatusImmediateTag
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_OnRep_Rep_RemoveGravityStatusImmediateTag final
{
public:
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnRep_Rep_RemoveGravityStatusImmediateTag) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_OnRep_Rep_RemoveGravityStatusImmediateTag");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnRep_Rep_RemoveGravityStatusImmediateTag) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_OnRep_Rep_RemoveGravityStatusImmediateTag");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep_Rep_RemoveGravityStatusImmediateTag, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnRep_Rep_RemoveGravityStatusImmediateTag::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeEnableSpecifiedRelativeMeshRotation
// 0x002C (0x002C - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeEnableSpecifiedRelativeMeshRotation final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               SpecifiedRelativeRotation;                         // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable;                              // 0x0010(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Select_Default;                             // 0x0020(0x000C)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeEnableSpecifiedRelativeMeshRotation) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeEnableSpecifiedRelativeMeshRotation");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeEnableSpecifiedRelativeMeshRotation) == 0x00002C, "Wrong size on BP_AJBInGameCharacter_C_ChangeEnableSpecifiedRelativeMeshRotation");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeEnableSpecifiedRelativeMeshRotation, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeEnableSpecifiedRelativeMeshRotation::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeEnableSpecifiedRelativeMeshRotation, SpecifiedRelativeRotation) == 0x000004, "Member 'BP_AJBInGameCharacter_C_ChangeEnableSpecifiedRelativeMeshRotation::SpecifiedRelativeRotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeEnableSpecifiedRelativeMeshRotation, Temp_struct_Variable) == 0x000010, "Member 'BP_AJBInGameCharacter_C_ChangeEnableSpecifiedRelativeMeshRotation::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeEnableSpecifiedRelativeMeshRotation, Temp_bool_Variable) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_ChangeEnableSpecifiedRelativeMeshRotation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeEnableSpecifiedRelativeMeshRotation, K2Node_Select_Default) == 0x000020, "Member 'BP_AJBInGameCharacter_C_ChangeEnableSpecifiedRelativeMeshRotation::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeEnableSocketBasedLocationOnUpdateVisibility
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) BP_AJBInGameCharacter_C_ChangeEnableSocketBasedLocationOnUpdateVisibility final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeEnableSocketBasedLocationOnUpdateVisibility) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeEnableSocketBasedLocationOnUpdateVisibility");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeEnableSocketBasedLocationOnUpdateVisibility) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_ChangeEnableSocketBasedLocationOnUpdateVisibility");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeEnableSocketBasedLocationOnUpdateVisibility, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeEnableSocketBasedLocationOnUpdateVisibility::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeEnableSocketBasedLocationOnUpdateVisibility, SocketName) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ChangeEnableSocketBasedLocationOnUpdateVisibility::SocketName' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetLocationOnUpdateVisibility
// 0x0034 (0x0034 - 0x0000)
struct BP_AJBInGameCharacter_C_GetLocationOnUpdateVisibility final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetLocationOnUpdateVisibility) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_GetLocationOnUpdateVisibility");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetLocationOnUpdateVisibility) == 0x000034, "Wrong size on BP_AJBInGameCharacter_C_GetLocationOnUpdateVisibility");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetLocationOnUpdateVisibility, Location) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetLocationOnUpdateVisibility::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetLocationOnUpdateVisibility, Temp_bool_Variable) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_GetLocationOnUpdateVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetLocationOnUpdateVisibility, CallFunc_GetSocketLocation_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_GetLocationOnUpdateVisibility::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetLocationOnUpdateVisibility, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_GetLocationOnUpdateVisibility::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetLocationOnUpdateVisibility, K2Node_Select_Default) == 0x000028, "Member 'BP_AJBInGameCharacter_C_GetLocationOnUpdateVisibility::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.PlayDownSoundOnViewerEnv(Server)
// 0x0078 (0x0078 - 0x0000)
struct BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_ final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FShopEventSettings                     CallFunc_GetShopEventSettings_ReturnValue;         // 0x0024(0x0008)(ConstParm, NoDestructor)
	bool                                          CallFunc_PlayModeIsPair_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller1; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        CallFunc_Array_Get_Item1;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue; // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_");
static_assert(sizeof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_) == 0x000078, "Wrong size on BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, Temp_int_Array_Index_Variable1) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, CallFunc_IsValid_ReturnValue1) == 0x000011, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller) == 0x000018, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, CallFunc_GetShopEventSettings_ReturnValue) == 0x000024, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::CallFunc_GetShopEventSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, CallFunc_PlayModeIsPair_ReturnValue) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::CallFunc_PlayModeIsPair_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002D, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, CallFunc_Not_PreBool_ReturnValue) == 0x00002E, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, Temp_int_Loop_Counter_Variable1) == 0x000030, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, CallFunc_IsValid_ReturnValue2) == 0x000034, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000038, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, K2Node_DynamicCast_bSuccess1) == 0x000040, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, CallFunc_Add_IntInt_ReturnValue1) == 0x000044, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller1) == 0x000058, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, K2Node_DynamicCast_bSuccess2) == 0x000060, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, CallFunc_Array_Get_Item1) == 0x000068, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, CallFunc_Array_Length_ReturnValue1) == 0x000070, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, CallFunc_Less_IntInt_ReturnValue1) == 0x000074, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue) == 0x000075, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::CallFunc_LastSurvivorIsDetermined_OnServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_, CallFunc_Not_PreBool_ReturnValue1) == 0x000076, "Member 'BP_AJBInGameCharacter_C_PlayDownSoundOnViewerEnv_Server_::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnRep_Rep_CharacterActiveBehaviorInfo
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_OnRep_Rep_CharacterActiveBehaviorInfo final
{
public:
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnRep_Rep_CharacterActiveBehaviorInfo) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnRep_Rep_CharacterActiveBehaviorInfo");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnRep_Rep_CharacterActiveBehaviorInfo) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_OnRep_Rep_CharacterActiveBehaviorInfo");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep_Rep_CharacterActiveBehaviorInfo, CallFunc_GetAJBGameInstance_bSuccess) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnRep_Rep_CharacterActiveBehaviorInfo::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep_Rep_CharacterActiveBehaviorInfo, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnRep_Rep_CharacterActiveBehaviorInfo::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep_Rep_CharacterActiveBehaviorInfo, CallFunc_IsPlayingReplay_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_OnRep_Rep_CharacterActiveBehaviorInfo::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnRep_Rep_CharacterActiveBehaviorInfo, CallFunc_HasLocalSharedController_ReturnValue) == 0x000011, "Member 'BP_AJBInGameCharacter_C_OnRep_Rep_CharacterActiveBehaviorInfo::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetBreakDownInfo
// 0x0078 (0x0078 - 0x0000)
struct BP_AJBInGameCharacter_C_GetBreakDownInfo final
{
public:
	ECharacterActiveBehavior                      OldBehavior;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      NewBehavior;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           FactorTag;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bOldMainCharacter;                                 // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bMainCharacter;                                    // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharacterActiveBehavior                      OutNewBehavilr;                                    // 0x0012(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSpecialBreakDown;                                 // 0x0013(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIgnoreCheckChanging;                              // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  FactorTags;                                        // 0x0018(0x0020)(Parm, OutParm)
	bool                                          bBreakDownBoth;                                    // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTempBreakDownBoth;                                // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTempIgnoreCheckChanging;                          // 0x003A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bShouldBreakDown;                                  // 0x003B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTempSpecialBreakDown;                             // 0x003C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTempDeleted;                                      // 0x003D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTempNewlyAdded;                                   // 0x003E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumGameplayTagsInContainer_ReturnValue; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharacterActiveBehavior                      Temp_byte_Variable;                                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveGameplayTag_ReturnValue;            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharacterActiveBehavior                      K2Node_Select_Default;                             // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBCharacterActiveBehaviorFactorInfo  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0060(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetBreakDownInfo) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_GetBreakDownInfo");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetBreakDownInfo) == 0x000078, "Wrong size on BP_AJBInGameCharacter_C_GetBreakDownInfo");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, OldBehavior) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::OldBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, NewBehavior) == 0x000001, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::NewBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, FactorTag) == 0x000008, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::FactorTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, bOldMainCharacter) == 0x000010, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::bOldMainCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, bMainCharacter) == 0x000011, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::bMainCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, OutNewBehavilr) == 0x000012, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::OutNewBehavilr' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, bSpecialBreakDown) == 0x000013, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::bSpecialBreakDown' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, bIgnoreCheckChanging) == 0x000014, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::bIgnoreCheckChanging' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, FactorTags) == 0x000018, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::FactorTags' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, bBreakDownBoth) == 0x000038, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::bBreakDownBoth' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, bTempBreakDownBoth) == 0x000039, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::bTempBreakDownBoth' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, bTempIgnoreCheckChanging) == 0x00003A, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::bTempIgnoreCheckChanging' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, bShouldBreakDown) == 0x00003B, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::bShouldBreakDown' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, bTempSpecialBreakDown) == 0x00003C, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::bTempSpecialBreakDown' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, bTempDeleted) == 0x00003D, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::bTempDeleted' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, bTempNewlyAdded) == 0x00003E, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::bTempNewlyAdded' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, CallFunc_Not_PreBool_ReturnValue) == 0x00003F, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, CallFunc_GetNumGameplayTagsInContainer_ReturnValue) == 0x000044, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::CallFunc_GetNumGameplayTagsInContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, CallFunc_Not_PreBool_ReturnValue1) == 0x000048, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, CallFunc_Greater_IntInt_ReturnValue) == 0x000049, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, CallFunc_BooleanAND_ReturnValue1) == 0x00004A, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00004B, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, Temp_byte_Variable) == 0x00004C, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, CallFunc_BooleanAND_ReturnValue2) == 0x00004D, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, CallFunc_BooleanAND_ReturnValue3) == 0x00004E, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, CallFunc_GetTagName_ReturnValue) == 0x000050, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000058, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, CallFunc_RemoveGameplayTag_ReturnValue) == 0x000059, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::CallFunc_RemoveGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, Temp_bool_Variable) == 0x00005A, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, K2Node_Select_Default) == 0x00005B, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, CallFunc_BooleanOR_ReturnValue) == 0x00005C, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000060, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000070, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, CallFunc_BooleanAND_ReturnValue4) == 0x000072, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000073, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetBreakDownInfo, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000074, "Member 'BP_AJBInGameCharacter_C_GetBreakDownInfo::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckActiveBehaviorBreakDown
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown final
{
public:
	bool                                          bBreakDown;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSpecialBreakDown;                                 // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bBreakDownBoth;                                    // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  Factor_Tags;                                       // 0x0008(0x0020)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable5;                               // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable6;                               // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharacterActiveBehavior                      Temp_byte_Variable;                                // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown) == 0x000038, "Wrong size on BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown, bBreakDown) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown::bBreakDown' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown, bSpecialBreakDown) == 0x000001, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown::bSpecialBreakDown' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown, bBreakDownBoth) == 0x000002, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown::bBreakDownBoth' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown, Factor_Tags) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown::Factor_Tags' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown, Temp_bool_Variable) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown, Temp_bool_Variable1) == 0x000029, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown, Temp_bool_Variable2) == 0x00002A, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown, Temp_bool_Variable3) == 0x00002B, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown, Temp_bool_Variable4) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown, Temp_bool_Variable5) == 0x00002D, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown, Temp_bool_Variable6) == 0x00002E, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown::Temp_bool_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown, Temp_byte_Variable) == 0x00002F, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown, K2Node_Select_Default) == 0x000030, "Member 'BP_AJBInGameCharacter_C_CheckActiveBehaviorBreakDown::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsOperatingMainCharacter
// 0x000A (0x000A - 0x0000)
struct BP_AJBInGameCharacter_C_IsOperatingMainCharacter final
{
public:
	bool                                          bReturnValue;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAppearance_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsForwardTransition_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMovableStand_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasStand_ReturnValue;                     // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOperatingSeparatedStand_ReturnValue;    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IsOperatingMainCharacter) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_IsOperatingMainCharacter");
static_assert(sizeof(BP_AJBInGameCharacter_C_IsOperatingMainCharacter) == 0x00000A, "Wrong size on BP_AJBInGameCharacter_C_IsOperatingMainCharacter");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsOperatingMainCharacter, bReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IsOperatingMainCharacter::bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsOperatingMainCharacter, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_IsOperatingMainCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsOperatingMainCharacter, CallFunc_IsAppearance_ReturnValue) == 0x000002, "Member 'BP_AJBInGameCharacter_C_IsOperatingMainCharacter::CallFunc_IsAppearance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsOperatingMainCharacter, CallFunc_IsForwardTransition_ReturnValue) == 0x000003, "Member 'BP_AJBInGameCharacter_C_IsOperatingMainCharacter::CallFunc_IsForwardTransition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsOperatingMainCharacter, CallFunc_HasMovableStand_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_IsOperatingMainCharacter::CallFunc_HasMovableStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsOperatingMainCharacter, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'BP_AJBInGameCharacter_C_IsOperatingMainCharacter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsOperatingMainCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'BP_AJBInGameCharacter_C_IsOperatingMainCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsOperatingMainCharacter, CallFunc_HasStand_ReturnValue) == 0x000007, "Member 'BP_AJBInGameCharacter_C_IsOperatingMainCharacter::CallFunc_HasStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsOperatingMainCharacter, CallFunc_IsOperatingSeparatedStand_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_IsOperatingMainCharacter::CallFunc_IsOperatingSeparatedStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsOperatingMainCharacter, CallFunc_Not_PreBool_ReturnValue1) == 0x000009, "Member 'BP_AJBInGameCharacter_C_IsOperatingMainCharacter::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateDownedCapsuleLocation
// 0x00A0 (0x00A0 - 0x0000)
struct BP_AJBInGameCharacter_C_UpdateDownedCapsuleLocation final
{
public:
	float                                         DownedCapsuleHalfHeight;                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0008(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0018(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBInGameCharacter_C_UpdateDownedCapsuleLocation) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_UpdateDownedCapsuleLocation");
static_assert(sizeof(BP_AJBInGameCharacter_C_UpdateDownedCapsuleLocation) == 0x0000A0, "Wrong size on BP_AJBInGameCharacter_C_UpdateDownedCapsuleLocation");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDownedCapsuleLocation, DownedCapsuleHalfHeight) == 0x000000, "Member 'BP_AJBInGameCharacter_C_UpdateDownedCapsuleLocation::DownedCapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDownedCapsuleLocation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_UpdateDownedCapsuleLocation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDownedCapsuleLocation, CallFunc_MakeVector_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_UpdateDownedCapsuleLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDownedCapsuleLocation, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000018, "Member 'BP_AJBInGameCharacter_C_UpdateDownedCapsuleLocation::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateDownedCapsuleHalfHeight
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_UpdateDownedCapsuleHalfHeight final
{
public:
	float                                         DownedCapsuleHalfHeight;                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_UpdateDownedCapsuleHalfHeight) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_UpdateDownedCapsuleHalfHeight");
static_assert(sizeof(BP_AJBInGameCharacter_C_UpdateDownedCapsuleHalfHeight) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_UpdateDownedCapsuleHalfHeight");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDownedCapsuleHalfHeight, DownedCapsuleHalfHeight) == 0x000000, "Member 'BP_AJBInGameCharacter_C_UpdateDownedCapsuleHalfHeight::DownedCapsuleHalfHeight' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateDownedCapsuleSettings
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_UpdateDownedCapsuleSettings final
{
public:
	float                                         DownedCapsuleHalfHeight;                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_UpdateDownedCapsuleSettings) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_UpdateDownedCapsuleSettings");
static_assert(sizeof(BP_AJBInGameCharacter_C_UpdateDownedCapsuleSettings) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_UpdateDownedCapsuleSettings");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateDownedCapsuleSettings, DownedCapsuleHalfHeight) == 0x000000, "Member 'BP_AJBInGameCharacter_C_UpdateDownedCapsuleSettings::DownedCapsuleHalfHeight' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckPossibleDetection
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckPossibleDetection final
{
public:
	bool                                          bPossibleDetection;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckPossibleDetection) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CheckPossibleDetection");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckPossibleDetection) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_CheckPossibleDetection");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckPossibleDetection, bPossibleDetection) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckPossibleDetection::bPossibleDetection' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CacheCustomSkinData
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameCharacter_C_CacheCustomSkinData final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CacheCustomSkinData) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CacheCustomSkinData");
static_assert(sizeof(BP_AJBInGameCharacter_C_CacheCustomSkinData) == 0x000028, "Wrong size on BP_AJBInGameCharacter_C_CacheCustomSkinData");
static_assert(offsetof(BP_AJBInGameCharacter_C_CacheCustomSkinData, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CacheCustomSkinData::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CacheCustomSkinData, Temp_int_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CacheCustomSkinData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CacheCustomSkinData, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CacheCustomSkinData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CacheCustomSkinData, CallFunc_GetMaterial_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CacheCustomSkinData::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CacheCustomSkinData, CallFunc_GetNumMaterials_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CacheCustomSkinData::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CacheCustomSkinData, CallFunc_Array_Add_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_CacheCustomSkinData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CacheCustomSkinData, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_CacheCustomSkinData::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CacheCustomSkinData, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_AJBInGameCharacter_C_CacheCustomSkinData::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeSkinMaterial
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeSkinMaterial final
{
public:
	class UMaterialInterface*                     NewMaterial;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeSkinMaterial) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeSkinMaterial");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeSkinMaterial) == 0x000020, "Wrong size on BP_AJBInGameCharacter_C_ChangeSkinMaterial");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSkinMaterial, NewMaterial) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeSkinMaterial::NewMaterial' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSkinMaterial, CallFunc_IsDedicatedServer_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ChangeSkinMaterial::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSkinMaterial, Temp_int_Variable) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_ChangeSkinMaterial::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSkinMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_ChangeSkinMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSkinMaterial, CallFunc_GetNumMaterials_ReturnValue) == 0x000014, "Member 'BP_AJBInGameCharacter_C_ChangeSkinMaterial::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSkinMaterial, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_ChangeSkinMaterial::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeSkinMaterial, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_ChangeSkinMaterial::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.RestoreSkinMaterial
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_C_RestoreSkinMaterial final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_RestoreSkinMaterial) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_RestoreSkinMaterial");
static_assert(sizeof(BP_AJBInGameCharacter_C_RestoreSkinMaterial) == 0x000020, "Wrong size on BP_AJBInGameCharacter_C_RestoreSkinMaterial");
static_assert(offsetof(BP_AJBInGameCharacter_C_RestoreSkinMaterial, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_RestoreSkinMaterial::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RestoreSkinMaterial, Temp_int_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_C_RestoreSkinMaterial::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RestoreSkinMaterial, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_AJBInGameCharacter_C_RestoreSkinMaterial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RestoreSkinMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_C_RestoreSkinMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RestoreSkinMaterial, CallFunc_GetNumMaterials_ReturnValue) == 0x000014, "Member 'BP_AJBInGameCharacter_C_RestoreSkinMaterial::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RestoreSkinMaterial, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_RestoreSkinMaterial::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_RestoreSkinMaterial, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_RestoreSkinMaterial::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckSpecifiedPassiveActive
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive final
{
public:
	TArray<class UClass*>                         PassiveClassList;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          bValid;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBPassiveSkillBase_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActive_bActive;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive) == 0x000040, "Wrong size on BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive, PassiveClassList) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive::PassiveClassList' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive, bValid) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive::bValid' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive, CallFunc_CheckActive_bActive) == 0x000030, "Member 'BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive::CallFunc_CheckActive_bActive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_AJBInGameCharacter_C_CheckSpecifiedPassiveActive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeEnableControlAnimationOnPreReplay
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeEnableControlAnimationOnPreReplay final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeEnableControlAnimationOnPreReplay) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeEnableControlAnimationOnPreReplay");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeEnableControlAnimationOnPreReplay) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_ChangeEnableControlAnimationOnPreReplay");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeEnableControlAnimationOnPreReplay, Enable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeEnableControlAnimationOnPreReplay::Enable' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckSpecialKill
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckSpecialKill final
{
public:
	class ABP_AJBInGameCharacter_C*               DeadCharacterBP;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSpecialKill;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckSpecialKill) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckSpecialKill");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckSpecialKill) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_CheckSpecialKill");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSpecialKill, DeadCharacterBP) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckSpecialKill::DeadCharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckSpecialKill, bSpecialKill) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckSpecialKill::bSpecialKill' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckOnGround
// 0x00E8 (0x00E8 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckOnGround final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCapsuleRadius_CapsuleRadius;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array1;                           // 0x0028(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	float                                         CallFunc_BreakVector_X;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_AJBSphereTraceForObjects_OutHit;          // 0x0058(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_AJBSphereTraceForObjects_ReturnValue;     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckOnGround) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckOnGround");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckOnGround) == 0x0000E8, "Wrong size on BP_AJBInGameCharacter_C_CheckOnGround");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckOnGround, ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckOnGround::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckOnGround, CallFunc_GetCapsuleRadius_CapsuleRadius) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CheckOnGround::CallFunc_GetCapsuleRadius_CapsuleRadius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckOnGround, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckOnGround::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckOnGround, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CheckOnGround::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckOnGround, K2Node_MakeArray_Array1) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CheckOnGround::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckOnGround, CallFunc_BreakVector_X) == 0x000038, "Member 'BP_AJBInGameCharacter_C_CheckOnGround::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckOnGround, CallFunc_BreakVector_Y) == 0x00003C, "Member 'BP_AJBInGameCharacter_C_CheckOnGround::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckOnGround, CallFunc_BreakVector_Z) == 0x000040, "Member 'BP_AJBInGameCharacter_C_CheckOnGround::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckOnGround, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_AJBInGameCharacter_C_CheckOnGround::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckOnGround, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'BP_AJBInGameCharacter_C_CheckOnGround::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckOnGround, CallFunc_AJBSphereTraceForObjects_OutHit) == 0x000058, "Member 'BP_AJBInGameCharacter_C_CheckOnGround::CallFunc_AJBSphereTraceForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckOnGround, CallFunc_AJBSphereTraceForObjects_ReturnValue) == 0x0000E0, "Member 'BP_AJBInGameCharacter_C_CheckOnGround::CallFunc_AJBSphereTraceForObjects_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcAAPInfo
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBInGameCharacter_C_CalcAAPInfo final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDamageCutByAAP;                                   // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDamageBlockByAAP;                                 // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempLeftDamage;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempAfterAAP;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTempDamageBlockByAAP;                             // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTempDamageCutByAAP;                               // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempBeforeAAP;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue2;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AdditionalAP_C>    K2Node_DynamicCast_AsBI_Additional_AP;             // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetValue_AAPValue;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CalcAAPInfo) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CalcAAPInfo");
static_assert(sizeof(BP_AJBInGameCharacter_C_CalcAAPInfo) == 0x000050, "Wrong size on BP_AJBInGameCharacter_C_CalcAAPInfo");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcAAPInfo, Damage) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CalcAAPInfo::Damage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcAAPInfo, bDamageCutByAAP) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CalcAAPInfo::bDamageCutByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcAAPInfo, bDamageBlockByAAP) == 0x000005, "Member 'BP_AJBInGameCharacter_C_CalcAAPInfo::bDamageBlockByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcAAPInfo, TempLeftDamage) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CalcAAPInfo::TempLeftDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcAAPInfo, TempAfterAAP) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_CalcAAPInfo::TempAfterAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcAAPInfo, bTempDamageBlockByAAP) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CalcAAPInfo::bTempDamageBlockByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcAAPInfo, bTempDamageCutByAAP) == 0x000011, "Member 'BP_AJBInGameCharacter_C_CalcAAPInfo::bTempDamageCutByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcAAPInfo, TempBeforeAAP) == 0x000014, "Member 'BP_AJBInGameCharacter_C_CalcAAPInfo::TempBeforeAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcAAPInfo, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CalcAAPInfo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcAAPInfo, CallFunc_Greater_IntInt_ReturnValue1) == 0x000019, "Member 'BP_AJBInGameCharacter_C_CalcAAPInfo::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcAAPInfo, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'BP_AJBInGameCharacter_C_CalcAAPInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcAAPInfo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001B, "Member 'BP_AJBInGameCharacter_C_CalcAAPInfo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcAAPInfo, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_CalcAAPInfo::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcAAPInfo, CallFunc_BooleanOR_ReturnValue) == 0x00001D, "Member 'BP_AJBInGameCharacter_C_CalcAAPInfo::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcAAPInfo, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_C_CalcAAPInfo::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcAAPInfo, CallFunc_Subtract_IntInt_ReturnValue1) == 0x000024, "Member 'BP_AJBInGameCharacter_C_CalcAAPInfo::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcAAPInfo, CallFunc_Greater_IntInt_ReturnValue2) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CalcAAPInfo::CallFunc_Greater_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcAAPInfo, CallFunc_Max_ReturnValue) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_CalcAAPInfo::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcAAPInfo, CallFunc_BooleanAND_ReturnValue1) == 0x000030, "Member 'BP_AJBInGameCharacter_C_CalcAAPInfo::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcAAPInfo, K2Node_DynamicCast_AsBI_Additional_AP) == 0x000038, "Member 'BP_AJBInGameCharacter_C_CalcAAPInfo::K2Node_DynamicCast_AsBI_Additional_AP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcAAPInfo, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_AJBInGameCharacter_C_CalcAAPInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcAAPInfo, CallFunc_GetValue_AAPValue) == 0x00004C, "Member 'BP_AJBInGameCharacter_C_CalcAAPInfo::CallFunc_GetValue_AAPValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeAAPParticleVisibility
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeAAPParticleVisibility final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AdditionalAP_C>    K2Node_DynamicCast_AsBI_Additional_AP;             // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeAAPParticleVisibility) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeAAPParticleVisibility");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeAAPParticleVisibility) == 0x000020, "Wrong size on BP_AJBInGameCharacter_C_ChangeAAPParticleVisibility");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeAAPParticleVisibility, bNewVisibility) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeAAPParticleVisibility::bNewVisibility' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeAAPParticleVisibility, K2Node_DynamicCast_AsBI_Additional_AP) == 0x000008, "Member 'BP_AJBInGameCharacter_C_ChangeAAPParticleVisibility::K2Node_DynamicCast_AsBI_Additional_AP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeAAPParticleVisibility, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameCharacter_C_ChangeAAPParticleVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetCamraInterpSpeedXY
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_SetCamraInterpSpeedXY final
{
public:
	float                                         SetCameraInterpSpeedXY;                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SetCamraInterpSpeedXY) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_SetCamraInterpSpeedXY");
static_assert(sizeof(BP_AJBInGameCharacter_C_SetCamraInterpSpeedXY) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_SetCamraInterpSpeedXY");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetCamraInterpSpeedXY, SetCameraInterpSpeedXY) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SetCamraInterpSpeedXY::SetCameraInterpSpeedXY' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.UpdateMeshLocation
// 0x01D8 (0x01D8 - 0x0000)
struct BP_AJBInGameCharacter_C_UpdateMeshLocation final
{
public:
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0000(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x000C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0028(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue;              // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB[0x1];                                       // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location1;                 // 0x00D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation1;                 // 0x00E4(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale1;                    // 0x00F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00FC(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x0104(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0110(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue1;                // 0x0128(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Vector2DInterpTo_ReturnValue;             // 0x0130(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0140(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0150(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBInGameCharacter_C_UpdateMeshLocation) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_UpdateMeshLocation");
static_assert(sizeof(BP_AJBInGameCharacter_C_UpdateMeshLocation) == 0x0001D8, "Wrong size on BP_AJBInGameCharacter_C_UpdateMeshLocation");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_BreakTransform_Location) == 0x000000, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_BreakTransform_Rotation) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_BreakTransform_Scale) == 0x000018, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000028, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_GetAttachParent_ReturnValue) == 0x0000B0, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000B8, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000B9, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000BA, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000BC, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000C0, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_BreakVector_X) == 0x0000CC, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_BreakVector_Y) == 0x0000D0, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_BreakVector_Z) == 0x0000D4, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_BreakTransform_Location1) == 0x0000D8, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_BreakTransform_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_BreakTransform_Rotation1) == 0x0000E4, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_BreakTransform_Rotation1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_BreakTransform_Scale1) == 0x0000F0, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_BreakTransform_Scale1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_MakeVector2D_ReturnValue) == 0x0000FC, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x000104, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000110, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_BreakVector_X1) == 0x00011C, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_BreakVector_Y1) == 0x000120, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_BreakVector_Z1) == 0x000124, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_MakeVector2D_ReturnValue1) == 0x000128, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_MakeVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_Vector2DInterpTo_ReturnValue) == 0x000130, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_Vector2DInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_BreakVector2D_X) == 0x000138, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_BreakVector2D_Y) == 0x00013C, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_MakeVector_ReturnValue) == 0x000140, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_UpdateMeshLocation, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000150, "Member 'BP_AJBInGameCharacter_C_UpdateMeshLocation::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckMeshVisibility
// 0x0098 (0x0098 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckMeshVisibility final
{
public:
	bool                                          bIncludeSystemReason;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bVisible;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempVisibilityDisableNum;                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempSystemValue;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTempFindSystemVisibility;                         // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy;         // 0x0010(0x0020)()
	TArray<float>                                 CallFunc_Map_Values_Values;                        // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FGameplayTag>                   CallFunc_Map_Keys_Keys;                            // 0x0040(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item1;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesAnyTags_ReturnValue;               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue1;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue1;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0080(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value;                           // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckMeshVisibility) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckMeshVisibility");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckMeshVisibility) == 0x000098, "Wrong size on BP_AJBInGameCharacter_C_CheckMeshVisibility");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, bIncludeSystemReason) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::bIncludeSystemReason' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, bVisible) == 0x000001, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::bVisible' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, TempVisibilityDisableNum) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::TempVisibilityDisableNum' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, TempSystemValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::TempSystemValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, bTempFindSystemVisibility) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::bTempFindSystemVisibility' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, CallFunc_GetGameplayTags_TagContainerCopy) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::CallFunc_GetGameplayTags_TagContainerCopy' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, CallFunc_Map_Values_Values) == 0x000030, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, CallFunc_Map_Keys_Keys) == 0x000040, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, Temp_int_Array_Index_Variable) == 0x000054, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, CallFunc_Array_Get_Item1) == 0x000060, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, CallFunc_MatchesAnyTags_ReturnValue) == 0x000064, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::CallFunc_MatchesAnyTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000065, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, CallFunc_MatchesTag_ReturnValue) == 0x000066, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000067, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, CallFunc_IsVisible_ReturnValue) == 0x000068, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, CallFunc_IsVisible_ReturnValue1) == 0x000069, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::CallFunc_IsVisible_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x00006A, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, Temp_int_Variable) == 0x00006C, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, CallFunc_NearlyEqual_FloatFloat_ReturnValue1) == 0x000070, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::CallFunc_NearlyEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000071, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, CallFunc_BooleanAND_ReturnValue1) == 0x000072, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, CallFunc_Not_PreBool_ReturnValue1) == 0x000073, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, Temp_struct_Variable) == 0x000080, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, CallFunc_Add_IntInt_ReturnValue1) == 0x000088, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, CallFunc_Map_Find_Value) == 0x00008C, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckMeshVisibility, CallFunc_Map_Find_ReturnValue) == 0x000090, "Member 'BP_AJBInGameCharacter_C_CheckMeshVisibility::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ChangeEnableInteract
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_ChangeEnableInteract final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ChangeEnableInteract) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ChangeEnableInteract");
static_assert(sizeof(BP_AJBInGameCharacter_C_ChangeEnableInteract) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_ChangeEnableInteract");
static_assert(offsetof(BP_AJBInGameCharacter_C_ChangeEnableInteract, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ChangeEnableInteract::bEnable' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.SetWalkableFloorAngle
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_SetWalkableFloorAngle final
{
public:
	float                                         InWalkableFloorAngle;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_SetWalkableFloorAngle) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_SetWalkableFloorAngle");
static_assert(sizeof(BP_AJBInGameCharacter_C_SetWalkableFloorAngle) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_SetWalkableFloorAngle");
static_assert(offsetof(BP_AJBInGameCharacter_C_SetWalkableFloorAngle, InWalkableFloorAngle) == 0x000000, "Member 'BP_AJBInGameCharacter_C_SetWalkableFloorAngle::InWalkableFloorAngle' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetGameplayTags
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameCharacter_C_GetGameplayTags final
{
public:
	struct FGameplayTagContainer                  TagContainerCopy;                                  // 0x0000(0x0020)(Parm, OutParm)
	struct FGameplayTagContainer                  Temp_GameplayTagContainer;                         // 0x0020(0x0020)(Edit, BlueprintVisible)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetGameplayTags) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_GetGameplayTags");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetGameplayTags) == 0x000040, "Wrong size on BP_AJBInGameCharacter_C_GetGameplayTags");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGameplayTags, TagContainerCopy) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetGameplayTags::TagContainerCopy' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGameplayTags, Temp_GameplayTagContainer) == 0x000020, "Member 'BP_AJBInGameCharacter_C_GetGameplayTags::Temp_GameplayTagContainer' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckAreaIn
// 0x0044 (0x0044 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckAreaIn final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         Radius;                                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Length;                                            // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PartitionNum;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCheckUnder;                                       // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ValidGroundOffsetZ;                                // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTarget;                                           // 0x002C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HitCheck_ContinuedSphere_Sphere_bHit;     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckAreaIn) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_CheckAreaIn");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckAreaIn) == 0x000044, "Wrong size on BP_AJBInGameCharacter_C_CheckAreaIn");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAreaIn, Location) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckAreaIn::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAreaIn, Rotation) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_CheckAreaIn::Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAreaIn, Radius) == 0x000018, "Member 'BP_AJBInGameCharacter_C_CheckAreaIn::Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAreaIn, Length) == 0x00001C, "Member 'BP_AJBInGameCharacter_C_CheckAreaIn::Length' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAreaIn, PartitionNum) == 0x000020, "Member 'BP_AJBInGameCharacter_C_CheckAreaIn::PartitionNum' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAreaIn, bCheckUnder) == 0x000024, "Member 'BP_AJBInGameCharacter_C_CheckAreaIn::bCheckUnder' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAreaIn, ValidGroundOffsetZ) == 0x000028, "Member 'BP_AJBInGameCharacter_C_CheckAreaIn::ValidGroundOffsetZ' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAreaIn, bTarget) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_CheckAreaIn::bTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAreaIn, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_C_CheckAreaIn::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAreaIn, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x00003C, "Member 'BP_AJBInGameCharacter_C_CheckAreaIn::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckAreaIn, CallFunc_HitCheck_ContinuedSphere_Sphere_bHit) == 0x000040, "Member 'BP_AJBInGameCharacter_C_CheckAreaIn::CallFunc_HitCheck_ContinuedSphere_Sphere_bHit' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckTargetSelf
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckTargetSelf final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bForDamageOverlap;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIgnoreMovableStand;                               // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTarget;                                           // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue;     // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckTargetSelf) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckTargetSelf");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckTargetSelf) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_CheckTargetSelf");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckTargetSelf, DamageCauser) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckTargetSelf::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckTargetSelf, bForDamageOverlap) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckTargetSelf::bForDamageOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckTargetSelf, bIgnoreMovableStand) == 0x000009, "Member 'BP_AJBInGameCharacter_C_CheckTargetSelf::bIgnoreMovableStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckTargetSelf, bTarget) == 0x00000A, "Member 'BP_AJBInGameCharacter_C_CheckTargetSelf::bTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckTargetSelf, CallFunc_CharacterBehaviorMatches_ReturnValue) == 0x00000B, "Member 'BP_AJBInGameCharacter_C_CheckTargetSelf::CallFunc_CharacterBehaviorMatches_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckTargetSelf, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_CheckTargetSelf::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckTargetSelf, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'BP_AJBInGameCharacter_C_CheckTargetSelf::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OwnHitParam
// 0x0068 (0x0068 - 0x0000)
struct BP_AJBInGameCharacter_C_OwnHitParam final
{
public:
	bool                                          bCharacter;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bLeftAP;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ParticleTagBlockedByAAP;                           // 0x0008(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SETagBlockedByAAP;                                 // 0x0010(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckLeftAP_bLeftAP;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AdditionalAP_C>    K2Node_DynamicCast_AsBI_Additional_AP;             // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetSETagBlocked_SETag;                    // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AdditionalAP_C>    K2Node_DynamicCast_AsBI_Additional_AP1;            // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetParticleTagBlocked_ParticleTag;        // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckLeftAP_bLeftAP1;                     // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OwnHitParam) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OwnHitParam");
static_assert(sizeof(BP_AJBInGameCharacter_C_OwnHitParam) == 0x000068, "Wrong size on BP_AJBInGameCharacter_C_OwnHitParam");
static_assert(offsetof(BP_AJBInGameCharacter_C_OwnHitParam, bCharacter) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OwnHitParam::bCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OwnHitParam, bLeftAP) == 0x000001, "Member 'BP_AJBInGameCharacter_C_OwnHitParam::bLeftAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OwnHitParam, ParticleTagBlockedByAAP) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OwnHitParam::ParticleTagBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OwnHitParam, SETagBlockedByAAP) == 0x000010, "Member 'BP_AJBInGameCharacter_C_OwnHitParam::SETagBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OwnHitParam, CallFunc_CheckLeftAP_bLeftAP) == 0x000018, "Member 'BP_AJBInGameCharacter_C_OwnHitParam::CallFunc_CheckLeftAP_bLeftAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OwnHitParam, K2Node_DynamicCast_AsBI_Additional_AP) == 0x000020, "Member 'BP_AJBInGameCharacter_C_OwnHitParam::K2Node_DynamicCast_AsBI_Additional_AP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OwnHitParam, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_AJBInGameCharacter_C_OwnHitParam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OwnHitParam, CallFunc_GetSETagBlocked_SETag) == 0x000038, "Member 'BP_AJBInGameCharacter_C_OwnHitParam::CallFunc_GetSETagBlocked_SETag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OwnHitParam, K2Node_DynamicCast_AsBI_Additional_AP1) == 0x000040, "Member 'BP_AJBInGameCharacter_C_OwnHitParam::K2Node_DynamicCast_AsBI_Additional_AP1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OwnHitParam, K2Node_DynamicCast_bSuccess1) == 0x000050, "Member 'BP_AJBInGameCharacter_C_OwnHitParam::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OwnHitParam, CallFunc_GetParticleTagBlocked_ParticleTag) == 0x000058, "Member 'BP_AJBInGameCharacter_C_OwnHitParam::CallFunc_GetParticleTagBlocked_ParticleTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OwnHitParam, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_AJBInGameCharacter_C_OwnHitParam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OwnHitParam, CallFunc_CheckLeftAP_bLeftAP1) == 0x000061, "Member 'BP_AJBInGameCharacter_C_OwnHitParam::CallFunc_CheckLeftAP_bLeftAP1' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IfCheckDamageOverlap
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_IfCheckDamageOverlap final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IfCheckDamageOverlap) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_IfCheckDamageOverlap");
static_assert(sizeof(BP_AJBInGameCharacter_C_IfCheckDamageOverlap) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_IfCheckDamageOverlap");
static_assert(offsetof(BP_AJBInGameCharacter_C_IfCheckDamageOverlap, ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IfCheckDamageOverlap::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckDisableDamage
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckDisableDamage final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableDamage_0;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPair_bPairCharacter;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckDisableDamage) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckDisableDamage");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckDisableDamage) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_CheckDisableDamage");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDisableDamage, DamageCauser) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckDisableDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDisableDamage, bDisableDamage_0) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckDisableDamage::bDisableDamage_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDisableDamage, CallFunc_IsPair_bPairCharacter) == 0x000009, "Member 'BP_AJBInGameCharacter_C_CheckDisableDamage::CallFunc_IsPair_bPairCharacter' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckDisablePassive
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckDisablePassive final
{
public:
	class AActor*                                 PassiveCauser;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PassiveTag;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisablePassive_0;                                 // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPair_bPairCharacter;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckDisablePassive) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckDisablePassive");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckDisablePassive) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_CheckDisablePassive");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDisablePassive, PassiveCauser) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckDisablePassive::PassiveCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDisablePassive, PassiveTag) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckDisablePassive::PassiveTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDisablePassive, bDisablePassive_0) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CheckDisablePassive::bDisablePassive_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDisablePassive, CallFunc_IsPair_bPairCharacter) == 0x000011, "Member 'BP_AJBInGameCharacter_C_CheckDisablePassive::CallFunc_IsPair_bPairCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDisablePassive, CallFunc_BooleanOR_ReturnValue) == 0x000012, "Member 'BP_AJBInGameCharacter_C_CheckDisablePassive::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckDisableAreaDamage
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckDisableAreaDamage final
{
public:
	bool                                          bDisableAreadamage_0;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckDisableAreaDamage) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CheckDisableAreaDamage");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckDisableAreaDamage) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_CheckDisableAreaDamage");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDisableAreaDamage, bDisableAreadamage_0) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckDisableAreaDamage::bDisableAreadamage_0' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckNoDamage
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckNoDamage final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNoDamage;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckNoDamage) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckNoDamage");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckNoDamage) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_CheckNoDamage");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckNoDamage, DamageCauser) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckNoDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckNoDamage, bNoDamage) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckNoDamage::bNoDamage' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IsReactedByReticule
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_IsReactedByReticule final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPossibleDetection_bPossibleDetection; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IsReactedByReticule) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_IsReactedByReticule");
static_assert(sizeof(BP_AJBInGameCharacter_C_IsReactedByReticule) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_IsReactedByReticule");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsReactedByReticule, bResult) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IsReactedByReticule::bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IsReactedByReticule, CallFunc_CheckPossibleDetection_bPossibleDetection) == 0x000001, "Member 'BP_AJBInGameCharacter_C_IsReactedByReticule::CallFunc_CheckPossibleDetection_bPossibleDetection' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IgnoreTrace
// 0x0005 (0x0005 - 0x0000)
struct BP_AJBInGameCharacter_C_IgnoreTrace final
{
public:
	bool                                          bIgnore;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPossibleDetection_bPossibleDetection; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IgnoreTrace) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_IgnoreTrace");
static_assert(sizeof(BP_AJBInGameCharacter_C_IgnoreTrace) == 0x000005, "Wrong size on BP_AJBInGameCharacter_C_IgnoreTrace");
static_assert(offsetof(BP_AJBInGameCharacter_C_IgnoreTrace, bIgnore) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IgnoreTrace::bIgnore' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IgnoreTrace, CallFunc_CharacterBehaviorMatches_ReturnValue) == 0x000001, "Member 'BP_AJBInGameCharacter_C_IgnoreTrace::CallFunc_CharacterBehaviorMatches_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IgnoreTrace, CallFunc_CheckPossibleDetection_bPossibleDetection) == 0x000002, "Member 'BP_AJBInGameCharacter_C_IgnoreTrace::CallFunc_CheckPossibleDetection_bPossibleDetection' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IgnoreTrace, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_AJBInGameCharacter_C_IgnoreTrace::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IgnoreTrace, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'BP_AJBInGameCharacter_C_IgnoreTrace::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckDisableDirectDamage
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckDisableDirectDamage final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableDirectDamage_0;                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckDisableDirectDamage) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckDisableDirectDamage");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckDisableDirectDamage) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_CheckDisableDirectDamage");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDisableDirectDamage, DamageCauser) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckDisableDirectDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckDisableDirectDamage, bDisableDirectDamage_0) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckDisableDirectDamage::bDisableDirectDamage_0' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckErrorConditionOperator
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckErrorConditionOperator final
{
public:
	class AActor*                                 InteractActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bErrorCondition;                                   // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         ErrorType;                                         // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckErrorConditionOperator) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_CheckErrorConditionOperator");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckErrorConditionOperator) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_CheckErrorConditionOperator");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckErrorConditionOperator, InteractActor) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckErrorConditionOperator::InteractActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckErrorConditionOperator, bErrorCondition) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CheckErrorConditionOperator::bErrorCondition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckErrorConditionOperator, ErrorType) == 0x000009, "Member 'BP_AJBInGameCharacter_C_CheckErrorConditionOperator::ErrorType' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.InteractableOperator
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_InteractableOperator final
{
public:
	class AActor*                                 InteractActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReturnValue;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPossibleInteract_bPossibleInteract;  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_InteractableOperator) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_InteractableOperator");
static_assert(sizeof(BP_AJBInGameCharacter_C_InteractableOperator) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_InteractableOperator");
static_assert(offsetof(BP_AJBInGameCharacter_C_InteractableOperator, InteractActor) == 0x000000, "Member 'BP_AJBInGameCharacter_C_InteractableOperator::InteractActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InteractableOperator, bReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_InteractableOperator::bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InteractableOperator, CallFunc_CheckPossibleInteract_bPossibleInteract) == 0x000009, "Member 'BP_AJBInGameCharacter_C_InteractableOperator::CallFunc_CheckPossibleInteract_bPossibleInteract' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CheckErrorCondition
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_C_CheckErrorCondition final
{
public:
	bool                                          bErrorCondition;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         ErrorType;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CheckErrorCondition) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_CheckErrorCondition");
static_assert(sizeof(BP_AJBInGameCharacter_C_CheckErrorCondition) == 0x000002, "Wrong size on BP_AJBInGameCharacter_C_CheckErrorCondition");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckErrorCondition, bErrorCondition) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CheckErrorCondition::bErrorCondition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CheckErrorCondition, ErrorType) == 0x000001, "Member 'BP_AJBInGameCharacter_C_CheckErrorCondition::ErrorType' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.TryGetInteractableText
// 0x0068 (0x0068 - 0x0000)
struct BP_AJBInGameCharacter_C_TryGetInteractableText final
{
public:
	class ABP_AJBInGameCharacter_C*               OperatorCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   InteractMessage;                                   // 0x0010(0x0018)(Parm, OutParm)
	bool                                          CallFunc_GetPoliticInteractAction_bSuccess;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetPoliticInteractAction_Object;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_InteractActionInterface_C> K2Node_DynamicCast_AsBI_Interact_Action_Interface; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetText_bSuccess;                         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_Text;                             // 0x0050(0x0018)()
};
static_assert(alignof(BP_AJBInGameCharacter_C_TryGetInteractableText) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_TryGetInteractableText");
static_assert(sizeof(BP_AJBInGameCharacter_C_TryGetInteractableText) == 0x000068, "Wrong size on BP_AJBInGameCharacter_C_TryGetInteractableText");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetInteractableText, OperatorCharacter) == 0x000000, "Member 'BP_AJBInGameCharacter_C_TryGetInteractableText::OperatorCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetInteractableText, bSuccess) == 0x000008, "Member 'BP_AJBInGameCharacter_C_TryGetInteractableText::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetInteractableText, InteractMessage) == 0x000010, "Member 'BP_AJBInGameCharacter_C_TryGetInteractableText::InteractMessage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetInteractableText, CallFunc_GetPoliticInteractAction_bSuccess) == 0x000028, "Member 'BP_AJBInGameCharacter_C_TryGetInteractableText::CallFunc_GetPoliticInteractAction_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetInteractableText, CallFunc_GetPoliticInteractAction_Object) == 0x000030, "Member 'BP_AJBInGameCharacter_C_TryGetInteractableText::CallFunc_GetPoliticInteractAction_Object' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetInteractableText, K2Node_DynamicCast_AsBI_Interact_Action_Interface) == 0x000038, "Member 'BP_AJBInGameCharacter_C_TryGetInteractableText::K2Node_DynamicCast_AsBI_Interact_Action_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetInteractableText, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_AJBInGameCharacter_C_TryGetInteractableText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetInteractableText, CallFunc_GetText_bSuccess) == 0x000049, "Member 'BP_AJBInGameCharacter_C_TryGetInteractableText::CallFunc_GetText_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_TryGetInteractableText, CallFunc_GetText_Text) == 0x000050, "Member 'BP_AJBInGameCharacter_C_TryGetInteractableText::CallFunc_GetText_Text' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.InteractInstantly
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_InteractInstantly final
{
public:
	class ABP_AJBInGameCharacter_C*               Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_InteractInstantly) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_InteractInstantly");
static_assert(sizeof(BP_AJBInGameCharacter_C_InteractInstantly) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_InteractInstantly");
static_assert(offsetof(BP_AJBInGameCharacter_C_InteractInstantly, Character) == 0x000000, "Member 'BP_AJBInGameCharacter_C_InteractInstantly::Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_InteractInstantly, ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_InteractInstantly::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.Interactable
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameCharacter_C_Interactable final
{
public:
	class ABP_AJBInGameCharacter_C*               Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceLength;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        SatisfiedObjects;                                  // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class UObject*                                HighestPriorityObject;                             // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HighestPriority;                                   // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPoliticInteractAction_bSuccess;        // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetPoliticInteractAction_Object;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_Interactable) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_Interactable");
static_assert(sizeof(BP_AJBInGameCharacter_C_Interactable) == 0x000040, "Wrong size on BP_AJBInGameCharacter_C_Interactable");
static_assert(offsetof(BP_AJBInGameCharacter_C_Interactable, Character) == 0x000000, "Member 'BP_AJBInGameCharacter_C_Interactable::Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Interactable, TraceLength) == 0x000008, "Member 'BP_AJBInGameCharacter_C_Interactable::TraceLength' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Interactable, ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_Interactable::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Interactable, SatisfiedObjects) == 0x000010, "Member 'BP_AJBInGameCharacter_C_Interactable::SatisfiedObjects' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Interactable, HighestPriorityObject) == 0x000020, "Member 'BP_AJBInGameCharacter_C_Interactable::HighestPriorityObject' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Interactable, HighestPriority) == 0x000028, "Member 'BP_AJBInGameCharacter_C_Interactable::HighestPriority' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Interactable, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'BP_AJBInGameCharacter_C_Interactable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Interactable, CallFunc_GetPoliticInteractAction_bSuccess) == 0x00002D, "Member 'BP_AJBInGameCharacter_C_Interactable::CallFunc_GetPoliticInteractAction_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Interactable, CallFunc_GetPoliticInteractAction_Object) == 0x000030, "Member 'BP_AJBInGameCharacter_C_Interactable::CallFunc_GetPoliticInteractAction_Object' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_Interactable, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'BP_AJBInGameCharacter_C_Interactable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.OnLocalInteract
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameCharacter_C_OnLocalInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPoliticInteractAction_bSuccess;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetPoliticInteractAction_Object;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_InteractActionInterface_C> K2Node_DynamicCast_AsBI_Interact_Action_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BeginInteract_bSuccess;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_OnLocalInteract) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_OnLocalInteract");
static_assert(sizeof(BP_AJBInGameCharacter_C_OnLocalInteract) == 0x000040, "Wrong size on BP_AJBInGameCharacter_C_OnLocalInteract");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnLocalInteract, InteractingActor) == 0x000000, "Member 'BP_AJBInGameCharacter_C_OnLocalInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnLocalInteract, bSuccess) == 0x000008, "Member 'BP_AJBInGameCharacter_C_OnLocalInteract::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnLocalInteract, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameCharacter_C_OnLocalInteract::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnLocalInteract, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameCharacter_C_OnLocalInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnLocalInteract, CallFunc_GetPoliticInteractAction_bSuccess) == 0x000019, "Member 'BP_AJBInGameCharacter_C_OnLocalInteract::CallFunc_GetPoliticInteractAction_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnLocalInteract, CallFunc_GetPoliticInteractAction_Object) == 0x000020, "Member 'BP_AJBInGameCharacter_C_OnLocalInteract::CallFunc_GetPoliticInteractAction_Object' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnLocalInteract, K2Node_DynamicCast_AsBI_Interact_Action_Interface) == 0x000028, "Member 'BP_AJBInGameCharacter_C_OnLocalInteract::K2Node_DynamicCast_AsBI_Interact_Action_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnLocalInteract, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'BP_AJBInGameCharacter_C_OnLocalInteract::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_OnLocalInteract, CallFunc_BeginInteract_bSuccess) == 0x000039, "Member 'BP_AJBInGameCharacter_C_OnLocalInteract::CallFunc_BeginInteract_bSuccess' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetInteractState
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_GetInteractState final
{
public:
	uint8                                         InteractState;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetInteractState) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_GetInteractState");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetInteractState) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_GetInteractState");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetInteractState, InteractState) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetInteractState::InteractState' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetInteractPriority
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_GetInteractPriority final
{
public:
	int32                                         Priority;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetInteractPriority) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_GetInteractPriority");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetInteractPriority) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_GetInteractPriority");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetInteractPriority, Priority) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetInteractPriority::Priority' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetInteractBoundForCulling
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameCharacter_C_GetInteractBoundForCulling final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Center;                                            // 0x0008(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetInteractBoundForCulling) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_GetInteractBoundForCulling");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetInteractBoundForCulling) == 0x000038, "Wrong size on BP_AJBInGameCharacter_C_GetInteractBoundForCulling");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetInteractBoundForCulling, InteractingActor) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetInteractBoundForCulling::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetInteractBoundForCulling, Center) == 0x000008, "Member 'BP_AJBInGameCharacter_C_GetInteractBoundForCulling::Center' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetInteractBoundForCulling, Radius) == 0x000014, "Member 'BP_AJBInGameCharacter_C_GetInteractBoundForCulling::Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetInteractBoundForCulling, CallFunc_GetComponentBounds_Origin) == 0x000018, "Member 'BP_AJBInGameCharacter_C_GetInteractBoundForCulling::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetInteractBoundForCulling, CallFunc_GetComponentBounds_BoxExtent) == 0x000024, "Member 'BP_AJBInGameCharacter_C_GetInteractBoundForCulling::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetInteractBoundForCulling, CallFunc_GetComponentBounds_SphereRadius) == 0x000030, "Member 'BP_AJBInGameCharacter_C_GetInteractBoundForCulling::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IfNeedsExclusiveInteractStrictly
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_IfNeedsExclusiveInteractStrictly final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IfNeedsExclusiveInteractStrictly) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_IfNeedsExclusiveInteractStrictly");
static_assert(sizeof(BP_AJBInGameCharacter_C_IfNeedsExclusiveInteractStrictly) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_IfNeedsExclusiveInteractStrictly");
static_assert(offsetof(BP_AJBInGameCharacter_C_IfNeedsExclusiveInteractStrictly, ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IfNeedsExclusiveInteractStrictly::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.IfBlockInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_C_IfBlockInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_IfBlockInteract) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_IfBlockInteract");
static_assert(sizeof(BP_AJBInGameCharacter_C_IfBlockInteract) == 0x000010, "Wrong size on BP_AJBInGameCharacter_C_IfBlockInteract");
static_assert(offsetof(BP_AJBInGameCharacter_C_IfBlockInteract, InteractingActor) == 0x000000, "Member 'BP_AJBInGameCharacter_C_IfBlockInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_IfBlockInteract, ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_C_IfBlockInteract::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.ShouldPrioritizedThanPrepaidSkillCancel
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_ShouldPrioritizedThanPrepaidSkillCancel final
{
public:
	bool                                          bShouldPriorirized;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_C_ShouldPrioritizedThanPrepaidSkillCancel) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_ShouldPrioritizedThanPrepaidSkillCancel");
static_assert(sizeof(BP_AJBInGameCharacter_C_ShouldPrioritizedThanPrepaidSkillCancel) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_ShouldPrioritizedThanPrepaidSkillCancel");
static_assert(offsetof(BP_AJBInGameCharacter_C_ShouldPrioritizedThanPrepaidSkillCancel, bShouldPriorirized) == 0x000000, "Member 'BP_AJBInGameCharacter_C_ShouldPrioritizedThanPrepaidSkillCancel::bShouldPriorirized' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetOpeningCharacterCameraOffsetZ
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_C_GetOpeningCharacterCameraOffsetZ final
{
public:
	float                                         OffsetZ;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetOpeningCharacterCameraOffsetZ) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_GetOpeningCharacterCameraOffsetZ");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetOpeningCharacterCameraOffsetZ) == 0x000004, "Wrong size on BP_AJBInGameCharacter_C_GetOpeningCharacterCameraOffsetZ");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetOpeningCharacterCameraOffsetZ, OffsetZ) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetOpeningCharacterCameraOffsetZ::OffsetZ' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetPrimitivesToChangeStencil
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameCharacter_C_GetPrimitivesToChangeStencil final
{
public:
	E_StencilDigit                                StencilDigit;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            PrimitiveComponents;                               // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<class UPrimitiveComponent*>            K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetPrimitivesToChangeStencil) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_GetPrimitivesToChangeStencil");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetPrimitivesToChangeStencil) == 0x000028, "Wrong size on BP_AJBInGameCharacter_C_GetPrimitivesToChangeStencil");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPrimitivesToChangeStencil, StencilDigit) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetPrimitivesToChangeStencil::StencilDigit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPrimitivesToChangeStencil, PrimitiveComponents) == 0x000008, "Member 'BP_AJBInGameCharacter_C_GetPrimitivesToChangeStencil::PrimitiveComponents' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetPrimitivesToChangeStencil, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_AJBInGameCharacter_C_GetPrimitivesToChangeStencil::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetGionOwner
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_C_GetGionOwner final
{
public:
	class AActor*                                 GionOwner;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetGionOwner) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_C_GetGionOwner");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetGionOwner) == 0x000008, "Wrong size on BP_AJBInGameCharacter_C_GetGionOwner");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetGionOwner, GionOwner) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetGionOwner::GionOwner' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetSpawnedSpaceInOwnersEnv
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_C_GetSpawnedSpaceInOwnersEnv final
{
public:
	E_GionSpawnedSpace                            SpawnedSpaceInOwnersEnv;                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetSpawnedSpaceInOwnersEnv) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_C_GetSpawnedSpaceInOwnersEnv");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetSpawnedSpaceInOwnersEnv) == 0x000001, "Wrong size on BP_AJBInGameCharacter_C_GetSpawnedSpaceInOwnersEnv");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetSpawnedSpaceInOwnersEnv, SpawnedSpaceInOwnersEnv) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetSpawnedSpaceInOwnersEnv::SpawnedSpaceInOwnersEnv' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.GetTargetLocation
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_GetTargetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_GetTargetLocation) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_GetTargetLocation");
static_assert(sizeof(BP_AJBInGameCharacter_C_GetTargetLocation) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_GetTargetLocation");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetTargetLocation, Location) == 0x000000, "Member 'BP_AJBInGameCharacter_C_GetTargetLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_GetTargetLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_GetTargetLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter.BP_AJBInGameCharacter_C.CalcCurrentRotationValue
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_C_CalcCurrentRotationValue final
{
public:
	float                                         TurnedRotation;                                    // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookupRotation;                                    // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempLookupRotation;                                // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempTurnedRotation;                                // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcDualZoneCameraRotate_Rotation;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcDualZoneCameraRotate_Rotation1;       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_C_CalcCurrentRotationValue) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_C_CalcCurrentRotationValue");
static_assert(sizeof(BP_AJBInGameCharacter_C_CalcCurrentRotationValue) == 0x000018, "Wrong size on BP_AJBInGameCharacter_C_CalcCurrentRotationValue");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCurrentRotationValue, TurnedRotation) == 0x000000, "Member 'BP_AJBInGameCharacter_C_CalcCurrentRotationValue::TurnedRotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCurrentRotationValue, LookupRotation) == 0x000004, "Member 'BP_AJBInGameCharacter_C_CalcCurrentRotationValue::LookupRotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCurrentRotationValue, TempLookupRotation) == 0x000008, "Member 'BP_AJBInGameCharacter_C_CalcCurrentRotationValue::TempLookupRotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCurrentRotationValue, TempTurnedRotation) == 0x00000C, "Member 'BP_AJBInGameCharacter_C_CalcCurrentRotationValue::TempTurnedRotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCurrentRotationValue, CallFunc_CalcDualZoneCameraRotate_Rotation) == 0x000010, "Member 'BP_AJBInGameCharacter_C_CalcCurrentRotationValue::CallFunc_CalcDualZoneCameraRotate_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_C_CalcCurrentRotationValue, CallFunc_CalcDualZoneCameraRotate_Rotation1) == 0x000014, "Member 'BP_AJBInGameCharacter_C_CalcCurrentRotationValue::CallFunc_CalcDualZoneCameraRotate_Rotation1' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBCrimsonDimensionAffecter

#include "Basic.hpp"

#include "BP_AJBCrimsonDimensionAffecter_classes.hpp"
#include "BP_AJBCrimsonDimensionAffecter_parameters.hpp"


namespace SDK
{

// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.ExecuteUbergraph_BP_AJBCrimsonDimensionAffecter
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBCrimsonDimensionAffecter_C::ExecuteUbergraph_BP_AJBCrimsonDimensionAffecter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "ExecuteUbergraph_BP_AJBCrimsonDimensionAffecter");

	Params::BP_AJBCrimsonDimensionAffecter_C_ExecuteUbergraph_BP_AJBCrimsonDimensionAffecter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.BindOnPassiveRemoved
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::BindOnPassiveRemoved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "BindOnPassiveRemoved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.UnbindOnPassiveAdded
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::UnbindOnPassiveAdded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "UnbindOnPassiveAdded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.OnPassiveRemoved
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     RemoveCondition                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class ABP_AJBInGameCharacter_C*         CharacterBP                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBCrimsonDimensionAffecter_C::OnPassiveRemoved(const struct FGameplayTag& RemoveCondition, class ABP_AJBInGameCharacter_C* CharacterBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "OnPassiveRemoved");

	Params::BP_AJBCrimsonDimensionAffecter_C_OnPassiveRemoved Parms{};

	Parms.RemoveCondition = std::move(RemoveCondition);
	Parms.CharacterBP = CharacterBP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.OnPassiveAdded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     AddCondition                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBCrimsonDimensionAffecter_C::OnPassiveAdded(const struct FGameplayTag& AddCondition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "OnPassiveAdded");

	Params::BP_AJBCrimsonDimensionAffecter_C_OnPassiveAdded Parms{};

	Parms.AddCondition = std::move(AddCondition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.UnbindOnPassiveRemoved
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::UnbindOnPassiveRemoved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "UnbindOnPassiveRemoved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.BindOnPassiveAdded
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::BindOnPassiveAdded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "BindOnPassiveAdded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.OnChangeSpactatorTarget
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::OnChangeSpactatorTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "OnChangeSpactatorTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.UnbindOnChangeSpactatorTarget
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::UnbindOnChangeSpactatorTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "UnbindOnChangeSpactatorTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.BindOnChangeSpactatorTarget
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::BindOnChangeSpactatorTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "BindOnChangeSpactatorTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.MC_Active
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_AJBInGameCharacter_C*> NotOwnerCharacters                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ABP_AJBCrimsonDimensionAffecter_C::MC_Active(const TArray<class ABP_AJBInGameCharacter_C*>& NotOwnerCharacters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "MC_Active");

	Params::BP_AJBCrimsonDimensionAffecter_C_MC_Active Parms{};

	Parms.NotOwnerCharacters = std::move(NotOwnerCharacters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.MC_Clearing
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_AJBInGameCharacter_C*> NotOwnerCharacters                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ABP_AJBCrimsonDimensionAffecter_C::MC_Clearing(const TArray<class ABP_AJBInGameCharacter_C*>& NotOwnerCharacters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "MC_Clearing");

	Params::BP_AJBCrimsonDimensionAffecter_C_MC_Clearing Parms{};

	Parms.NotOwnerCharacters = std::move(NotOwnerCharacters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.OnBeginStateActive
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::OnBeginStateActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "OnBeginStateActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.OnStateEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::OnStateEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "OnStateEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.TickStateActive
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::TickStateActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "TickStateActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.TickStateClearing
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::TickStateClearing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "TickStateClearing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.TickStateReady
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::TickStateReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "TickStateReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.OnBeginStateClearing
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::OnBeginStateClearing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "OnBeginStateClearing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.OnBeginStateReady
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::OnBeginStateReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "OnBeginStateReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.StopEndDimensionTimeline
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::StopEndDimensionTimeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "StopEndDimensionTimeline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.StopBeginDimensionTimeline
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::StopBeginDimensionTimeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "StopBeginDimensionTimeline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.EndDimensionTimeline
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::EndDimensionTimeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "EndDimensionTimeline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.BeginDimensionTimeline
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::BeginDimensionTimeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "BeginDimensionTimeline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBCrimsonDimensionAffecter_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "NotifyTheWorld");

	Params::BP_AJBCrimsonDimensionAffecter_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.Timeline_1__UpdateFunc
// (BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::Timeline_1__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "Timeline_1__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.Timeline_1__FinishedFunc
// (BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::Timeline_1__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "Timeline_1__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.TryCreateDMIDimension
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::TryCreateDMIDimension()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "TryCreateDMIDimension");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.UpdateDimensionOpacity
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::UpdateDimensionOpacity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "UpdateDimensionOpacity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.SetPostProcessMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::SetPostProcessMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "SetPostProcessMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.ChangeDimensionModeOwnerCharacter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBCrimsonDimensionAffecter_C::ChangeDimensionModeOwnerCharacter(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "ChangeDimensionModeOwnerCharacter");

	Params::BP_AJBCrimsonDimensionAffecter_C_ChangeDimensionModeOwnerCharacter Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.ChangeDimensionModeNotOwnerCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class ABP_AJBInGameCharacter_C*> NotOwnerCharacters                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ABP_AJBCrimsonDimensionAffecter_C::ChangeDimensionModeNotOwnerCharacter(bool bEnable, TArray<class ABP_AJBInGameCharacter_C*>& NotOwnerCharacters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "ChangeDimensionModeNotOwnerCharacter");

	Params::BP_AJBCrimsonDimensionAffecter_C_ChangeDimensionModeNotOwnerCharacter Parms{};

	Parms.bEnable = bEnable;
	Parms.NotOwnerCharacters = std::move(NotOwnerCharacters);

	UObject::ProcessEvent(Func, &Parms);

	NotOwnerCharacters = std::move(Parms.NotOwnerCharacters);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.ChangeEnableShouldUpdateBombing
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         IngameCharacterBP                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IgnoreActiveCheck                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBCrimsonDimensionAffecter_C::ChangeEnableShouldUpdateBombing(class ABP_AJBInGameCharacter_C* IngameCharacterBP, bool Enable, bool IgnoreActiveCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "ChangeEnableShouldUpdateBombing");

	Params::BP_AJBCrimsonDimensionAffecter_C_ChangeEnableShouldUpdateBombing Parms{};

	Parms.IngameCharacterBP = IngameCharacterBP;
	Parms.Enable = Enable;
	Parms.IgnoreActiveCheck = IgnoreActiveCheck;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.UpdateParticleVisibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::UpdateParticleVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "UpdateParticleVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.TryDestroyDamageDetectionDCServer
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::TryDestroyDamageDetectionDCServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "TryDestroyDamageDetectionDCServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.ChangeOwnerVisibilities
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBCrimsonDimensionAffecter_C::ChangeOwnerVisibilities(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "ChangeOwnerVisibilities");

	Params::BP_AJBCrimsonDimensionAffecter_C_ChangeOwnerVisibilities Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.RequestDimensionParticleNotOwnerEnv
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     ParticleTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBCrimsonDimensionAffecter_C::RequestDimensionParticleNotOwnerEnv(const struct FGameplayTag& ParticleTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "RequestDimensionParticleNotOwnerEnv");

	Params::BP_AJBCrimsonDimensionAffecter_C_RequestDimensionParticleNotOwnerEnv Parms{};

	Parms.ParticleTag = std::move(ParticleTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.ResetDimensionOpacity
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::ResetDimensionOpacity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "ResetDimensionOpacity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.ChangeOwnerEffects
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewVisibility                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBCrimsonDimensionAffecter_C::ChangeOwnerEffects(bool NewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "ChangeOwnerEffects");

	Params::BP_AJBCrimsonDimensionAffecter_C_ChangeOwnerEffects Parms{};

	Parms.NewVisibility = NewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.ChangeOwnerVisuals
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBCrimsonDimensionAffecter_C::ChangeOwnerVisuals(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "ChangeOwnerVisuals");

	Params::BP_AJBCrimsonDimensionAffecter_C_ChangeOwnerVisuals Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.CheckActiveRequiem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bActiveRequiem                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBCrimsonDimensionAffecter_C::CheckActiveRequiem(class AActor* Actor, bool* bActiveRequiem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "CheckActiveRequiem");

	Params::BP_AJBCrimsonDimensionAffecter_C_CheckActiveRequiem Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (bActiveRequiem != nullptr)
		*bActiveRequiem = Parms.bActiveRequiem;
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.CheckViewTargetOwnerVisual
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldVisualize                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBCrimsonDimensionAffecter_C::CheckViewTargetOwnerVisual(bool* bShouldVisualize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "CheckViewTargetOwnerVisual");

	Params::BP_AJBCrimsonDimensionAffecter_C_CheckViewTargetOwnerVisual Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldVisualize != nullptr)
		*bShouldVisualize = Parms.bShouldVisualize;
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.ChangePoliticOwnerVisualOnEnabled
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::ChangePoliticOwnerVisualOnEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "ChangePoliticOwnerVisualOnEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.BindsViewTargetPassive
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::BindsViewTargetPassive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "BindsViewTargetPassive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.UnbindsViewTargetPassive
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::UnbindsViewTargetPassive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "UnbindsViewTargetPassive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.ChangePoliticOwnerVisualOnDisabled
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::ChangePoliticOwnerVisualOnDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "ChangePoliticOwnerVisualOnDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.ChangePoliticCDVisualOnEnabled
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::ChangePoliticCDVisualOnEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "ChangePoliticCDVisualOnEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.CheckViewTargetCDVisual
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldVisualize                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBCrimsonDimensionAffecter_C::CheckViewTargetCDVisual(bool* bShouldVisualize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "CheckViewTargetCDVisual");

	Params::BP_AJBCrimsonDimensionAffecter_C_CheckViewTargetCDVisual Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldVisualize != nullptr)
		*bShouldVisualize = Parms.bShouldVisualize;
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.ChangeCDVisuals
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBCrimsonDimensionAffecter_C::ChangeCDVisuals(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "ChangeCDVisuals");

	Params::BP_AJBCrimsonDimensionAffecter_C_ChangeCDVisuals Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.ChangePoliticCDVisualOnDisabled
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::ChangePoliticCDVisualOnDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "ChangePoliticCDVisualOnDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.ChangeEnableDamageThrough
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBCrimsonDimensionAffecter_C::ChangeEnableDamageThrough(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "ChangeEnableDamageThrough");

	Params::BP_AJBCrimsonDimensionAffecter_C_ChangeEnableDamageThrough Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.CheckEnableDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bEnabled                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBCrimsonDimensionAffecter_C::CheckEnableDamage(bool* bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "CheckEnableDamage");

	Params::BP_AJBCrimsonDimensionAffecter_C_CheckEnableDamage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnabled != nullptr)
		*bEnabled = Parms.bEnabled;
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.ChangeEnableDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBCrimsonDimensionAffecter_C::ChangeEnableDamage(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "ChangeEnableDamage");

	Params::BP_AJBCrimsonDimensionAffecter_C_ChangeEnableDamage Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.CheckIncludeDisableParticleListByTimeStop
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AAJBInGameCharacter*              Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInclude                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBCrimsonDimensionAffecter_C::CheckIncludeDisableParticleListByTimeStop(class AAJBInGameCharacter* Character, bool* bInclude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "CheckIncludeDisableParticleListByTimeStop");

	Params::BP_AJBCrimsonDimensionAffecter_C_CheckIncludeDisableParticleListByTimeStop Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (bInclude != nullptr)
		*bInclude = Parms.bInclude;
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.RequestAttachedParticles
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_AJBInGameCharacter_C*> CharacterBPList                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ABP_AJBCrimsonDimensionAffecter_C::RequestAttachedParticles(TArray<class ABP_AJBInGameCharacter_C*>& CharacterBPList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "RequestAttachedParticles");

	Params::BP_AJBCrimsonDimensionAffecter_C_RequestAttachedParticles Parms{};

	Parms.CharacterBPList = std::move(CharacterBPList);

	UObject::ProcessEvent(Func, &Parms);

	CharacterBPList = std::move(Parms.CharacterBPList);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.TryDestroyAttachedParticles
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::TryDestroyAttachedParticles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "TryDestroyAttachedParticles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.GetNotOwnerCharacters
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_AJBInGameCharacter_C*> NowOwnerCharacters                                     (Parm, OutParm, ZeroConstructor)

void ABP_AJBCrimsonDimensionAffecter_C::GetNotOwnerCharacters(TArray<class ABP_AJBInGameCharacter_C*>* NowOwnerCharacters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "GetNotOwnerCharacters");

	Params::BP_AJBCrimsonDimensionAffecter_C_GetNotOwnerCharacters Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NowOwnerCharacters != nullptr)
		*NowOwnerCharacters = std::move(Parms.NowOwnerCharacters);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.ChangeDimensionModeNotOwnerCharacterCore
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         CharacterBP                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBCrimsonDimensionAffecter_C::ChangeDimensionModeNotOwnerCharacterCore(class ABP_AJBInGameCharacter_C* CharacterBP, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "ChangeDimensionModeNotOwnerCharacterCore");

	Params::BP_AJBCrimsonDimensionAffecter_C_ChangeDimensionModeNotOwnerCharacterCore Parms{};

	Parms.CharacterBP = CharacterBP;
	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.RequestAttachedParticle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         CharacterBP                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBCrimsonDimensionAffecter_C::RequestAttachedParticle(class ABP_AJBInGameCharacter_C* CharacterBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "RequestAttachedParticle");

	Params::BP_AJBCrimsonDimensionAffecter_C_RequestAttachedParticle Parms{};

	Parms.CharacterBP = CharacterBP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.AddNewlyNotOwnerCharacter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         CharacterBP                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBCrimsonDimensionAffecter_C::AddNewlyNotOwnerCharacter(class ABP_AJBInGameCharacter_C* CharacterBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "AddNewlyNotOwnerCharacter");

	Params::BP_AJBCrimsonDimensionAffecter_C_AddNewlyNotOwnerCharacter Parms{};

	Parms.CharacterBP = CharacterBP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.EnableDamageOnTimeStop
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBCrimsonDimensionAffecter_C::EnableDamageOnTimeStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "EnableDamageOnTimeStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCrimsonDimensionAffecter.BP_AJBCrimsonDimensionAffecter_C.SetMeshesVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBCrimsonDimensionAffecter_C::SetMeshesVisible(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCrimsonDimensionAffecter_C", "SetMeshesVisible");

	Params::BP_AJBCrimsonDimensionAffecter_C_SetMeshesVisible Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}

}


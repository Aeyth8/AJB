#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UnderwaterMaskingCylinder

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_UnderwaterMaskingCylinder.BP_UnderwaterMaskingCylinder_C.ExecuteUbergraph_BP_UnderwaterMaskingCylinder
// 0x00B8 (0x00B8 - 0x0000)
struct BP_UnderwaterMaskingCylinder_C_ExecuteUbergraph_BP_UnderwaterMaskingCylinder final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_TargetActor;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Value;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0028(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UnderwaterMaskingCylinder_C_ExecuteUbergraph_BP_UnderwaterMaskingCylinder) == 0x000008, "Wrong alignment on BP_UnderwaterMaskingCylinder_C_ExecuteUbergraph_BP_UnderwaterMaskingCylinder");
static_assert(sizeof(BP_UnderwaterMaskingCylinder_C_ExecuteUbergraph_BP_UnderwaterMaskingCylinder) == 0x0000B8, "Wrong size on BP_UnderwaterMaskingCylinder_C_ExecuteUbergraph_BP_UnderwaterMaskingCylinder");
static_assert(offsetof(BP_UnderwaterMaskingCylinder_C_ExecuteUbergraph_BP_UnderwaterMaskingCylinder, EntryPoint) == 0x000000, "Member 'BP_UnderwaterMaskingCylinder_C_ExecuteUbergraph_BP_UnderwaterMaskingCylinder::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_UnderwaterMaskingCylinder_C_ExecuteUbergraph_BP_UnderwaterMaskingCylinder, K2Node_CustomEvent_TargetActor) == 0x000008, "Member 'BP_UnderwaterMaskingCylinder_C_ExecuteUbergraph_BP_UnderwaterMaskingCylinder::K2Node_CustomEvent_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_UnderwaterMaskingCylinder_C_ExecuteUbergraph_BP_UnderwaterMaskingCylinder, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'BP_UnderwaterMaskingCylinder_C_ExecuteUbergraph_BP_UnderwaterMaskingCylinder::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_UnderwaterMaskingCylinder_C_ExecuteUbergraph_BP_UnderwaterMaskingCylinder, K2Node_CustomEvent_Value) == 0x000014, "Member 'BP_UnderwaterMaskingCylinder_C_ExecuteUbergraph_BP_UnderwaterMaskingCylinder::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(BP_UnderwaterMaskingCylinder_C_ExecuteUbergraph_BP_UnderwaterMaskingCylinder, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_UnderwaterMaskingCylinder_C_ExecuteUbergraph_BP_UnderwaterMaskingCylinder::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UnderwaterMaskingCylinder_C_ExecuteUbergraph_BP_UnderwaterMaskingCylinder, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'BP_UnderwaterMaskingCylinder_C_ExecuteUbergraph_BP_UnderwaterMaskingCylinder::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UnderwaterMaskingCylinder_C_ExecuteUbergraph_BP_UnderwaterMaskingCylinder, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000028, "Member 'BP_UnderwaterMaskingCylinder_C_ExecuteUbergraph_BP_UnderwaterMaskingCylinder::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_UnderwaterMaskingCylinder_C_ExecuteUbergraph_BP_UnderwaterMaskingCylinder, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000B0, "Member 'BP_UnderwaterMaskingCylinder_C_ExecuteUbergraph_BP_UnderwaterMaskingCylinder::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_UnderwaterMaskingCylinder.BP_UnderwaterMaskingCylinder_C.SetTarget
// 0x0008 (0x0008 - 0x0000)
struct BP_UnderwaterMaskingCylinder_C_SetTarget final
{
public:
	class AActor*                                 TargetActor_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UnderwaterMaskingCylinder_C_SetTarget) == 0x000008, "Wrong alignment on BP_UnderwaterMaskingCylinder_C_SetTarget");
static_assert(sizeof(BP_UnderwaterMaskingCylinder_C_SetTarget) == 0x000008, "Wrong size on BP_UnderwaterMaskingCylinder_C_SetTarget");
static_assert(offsetof(BP_UnderwaterMaskingCylinder_C_SetTarget, TargetActor_0) == 0x000000, "Member 'BP_UnderwaterMaskingCylinder_C_SetTarget::TargetActor_0' has a wrong offset!");

// Function BP_UnderwaterMaskingCylinder.BP_UnderwaterMaskingCylinder_C.SetWaterSurfaceZ
// 0x0004 (0x0004 - 0x0000)
struct BP_UnderwaterMaskingCylinder_C_SetWaterSurfaceZ final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UnderwaterMaskingCylinder_C_SetWaterSurfaceZ) == 0x000004, "Wrong alignment on BP_UnderwaterMaskingCylinder_C_SetWaterSurfaceZ");
static_assert(sizeof(BP_UnderwaterMaskingCylinder_C_SetWaterSurfaceZ) == 0x000004, "Wrong size on BP_UnderwaterMaskingCylinder_C_SetWaterSurfaceZ");
static_assert(offsetof(BP_UnderwaterMaskingCylinder_C_SetWaterSurfaceZ, Value) == 0x000000, "Member 'BP_UnderwaterMaskingCylinder_C_SetWaterSurfaceZ::Value' has a wrong offset!");

// Function BP_UnderwaterMaskingCylinder.BP_UnderwaterMaskingCylinder_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_UnderwaterMaskingCylinder_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UnderwaterMaskingCylinder_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_UnderwaterMaskingCylinder_C_ReceiveTick");
static_assert(sizeof(BP_UnderwaterMaskingCylinder_C_ReceiveTick) == 0x000004, "Wrong size on BP_UnderwaterMaskingCylinder_C_ReceiveTick");
static_assert(offsetof(BP_UnderwaterMaskingCylinder_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_UnderwaterMaskingCylinder_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_UnderwaterMaskingCylinder.BP_UnderwaterMaskingCylinder_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct BP_UnderwaterMaskingCylinder_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0000(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UnderwaterMaskingCylinder_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_UnderwaterMaskingCylinder_C_UserConstructionScript");
static_assert(sizeof(BP_UnderwaterMaskingCylinder_C_UserConstructionScript) == 0x000018, "Wrong size on BP_UnderwaterMaskingCylinder_C_UserConstructionScript");
static_assert(offsetof(BP_UnderwaterMaskingCylinder_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000000, "Member 'BP_UnderwaterMaskingCylinder_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UnderwaterMaskingCylinder_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'BP_UnderwaterMaskingCylinder_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameAIObservedCharacter

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameAIObservedCharacter.BP_AJBInGameAIObservedCharacter_C.OnLifeTimeElapsed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameAIObservedCharacter_C_OnLifeTimeElapsed__DelegateSignature final
{
public:
	class ABP_AJBInGameAIObservedCharacter_C*     ObservedCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIObservedCharacter_C_OnLifeTimeElapsed__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameAIObservedCharacter_C_OnLifeTimeElapsed__DelegateSignature");
static_assert(sizeof(BP_AJBInGameAIObservedCharacter_C_OnLifeTimeElapsed__DelegateSignature) == 0x000008, "Wrong size on BP_AJBInGameAIObservedCharacter_C_OnLifeTimeElapsed__DelegateSignature");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_OnLifeTimeElapsed__DelegateSignature, ObservedCharacter) == 0x000000, "Member 'BP_AJBInGameAIObservedCharacter_C_OnLifeTimeElapsed__DelegateSignature::ObservedCharacter' has a wrong offset!");

// Function BP_AJBInGameAIObservedCharacter.BP_AJBInGameAIObservedCharacter_C.ExecuteUbergraph_BP_AJBInGameAIObservedCharacter
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameAIObservedCharacter_C_ExecuteUbergraph_BP_AJBInGameAIObservedCharacter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DestroyingActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_bCanSee;                        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DestroyingActor;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIObservedCharacter_C_ExecuteUbergraph_BP_AJBInGameAIObservedCharacter) == 0x000008, "Wrong alignment on BP_AJBInGameAIObservedCharacter_C_ExecuteUbergraph_BP_AJBInGameAIObservedCharacter");
static_assert(sizeof(BP_AJBInGameAIObservedCharacter_C_ExecuteUbergraph_BP_AJBInGameAIObservedCharacter) == 0x000028, "Wrong size on BP_AJBInGameAIObservedCharacter_C_ExecuteUbergraph_BP_AJBInGameAIObservedCharacter");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_ExecuteUbergraph_BP_AJBInGameAIObservedCharacter, EntryPoint) == 0x000000, "Member 'BP_AJBInGameAIObservedCharacter_C_ExecuteUbergraph_BP_AJBInGameAIObservedCharacter::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_ExecuteUbergraph_BP_AJBInGameAIObservedCharacter, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_AJBInGameAIObservedCharacter_C_ExecuteUbergraph_BP_AJBInGameAIObservedCharacter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_ExecuteUbergraph_BP_AJBInGameAIObservedCharacter, K2Node_CustomEvent_bCanSee) == 0x000018, "Member 'BP_AJBInGameAIObservedCharacter_C_ExecuteUbergraph_BP_AJBInGameAIObservedCharacter::K2Node_CustomEvent_bCanSee' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_ExecuteUbergraph_BP_AJBInGameAIObservedCharacter, K2Node_CustomEvent_DestroyingActor) == 0x000020, "Member 'BP_AJBInGameAIObservedCharacter_C_ExecuteUbergraph_BP_AJBInGameAIObservedCharacter::K2Node_CustomEvent_DestroyingActor' has a wrong offset!");

// Function BP_AJBInGameAIObservedCharacter.BP_AJBInGameAIObservedCharacter_C.OnInGameLifeTimeElapsed
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameAIObservedCharacter_C_OnInGameLifeTimeElapsed final
{
public:
	class AActor*                                 DestroyingActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIObservedCharacter_C_OnInGameLifeTimeElapsed) == 0x000008, "Wrong alignment on BP_AJBInGameAIObservedCharacter_C_OnInGameLifeTimeElapsed");
static_assert(sizeof(BP_AJBInGameAIObservedCharacter_C_OnInGameLifeTimeElapsed) == 0x000008, "Wrong size on BP_AJBInGameAIObservedCharacter_C_OnInGameLifeTimeElapsed");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_OnInGameLifeTimeElapsed, DestroyingActor) == 0x000000, "Member 'BP_AJBInGameAIObservedCharacter_C_OnInGameLifeTimeElapsed::DestroyingActor' has a wrong offset!");

// Function BP_AJBInGameAIObservedCharacter.BP_AJBInGameAIObservedCharacter_C.UpdateObserverCanSee
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameAIObservedCharacter_C_UpdateObserverCanSee final
{
public:
	bool                                          bCanSee;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIObservedCharacter_C_UpdateObserverCanSee) == 0x000001, "Wrong alignment on BP_AJBInGameAIObservedCharacter_C_UpdateObserverCanSee");
static_assert(sizeof(BP_AJBInGameAIObservedCharacter_C_UpdateObserverCanSee) == 0x000001, "Wrong size on BP_AJBInGameAIObservedCharacter_C_UpdateObserverCanSee");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_UpdateObserverCanSee, bCanSee) == 0x000000, "Member 'BP_AJBInGameAIObservedCharacter_C_UpdateObserverCanSee::bCanSee' has a wrong offset!");

// Function BP_AJBInGameAIObservedCharacter.BP_AJBInGameAIObservedCharacter_C.GetImaginaryCharacter
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameAIObservedCharacter_C_GetImaginaryCharacter final
{
public:
	class ABP_AJBInGameAIImaginaryCharacter_C*    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIObservedCharacter_C_GetImaginaryCharacter) == 0x000008, "Wrong alignment on BP_AJBInGameAIObservedCharacter_C_GetImaginaryCharacter");
static_assert(sizeof(BP_AJBInGameAIObservedCharacter_C_GetImaginaryCharacter) == 0x000008, "Wrong size on BP_AJBInGameAIObservedCharacter_C_GetImaginaryCharacter");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_GetImaginaryCharacter, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIObservedCharacter_C_GetImaginaryCharacter::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIObservedCharacter.BP_AJBInGameAIObservedCharacter_C.GetObservedPawn
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameAIObservedCharacter_C_GetObservedPawn final
{
public:
	class APawn*                                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetRawPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIObservedCharacter_C_GetObservedPawn) == 0x000008, "Wrong alignment on BP_AJBInGameAIObservedCharacter_C_GetObservedPawn");
static_assert(sizeof(BP_AJBInGameAIObservedCharacter_C_GetObservedPawn) == 0x000010, "Wrong size on BP_AJBInGameAIObservedCharacter_C_GetObservedPawn");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_GetObservedPawn, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIObservedCharacter_C_GetObservedPawn::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_GetObservedPawn, CallFunc_GetRawPawn_ReturnValue) == 0x000008, "Member 'BP_AJBInGameAIObservedCharacter_C_GetObservedPawn::CallFunc_GetRawPawn_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIObservedCharacter.BP_AJBInGameAIObservedCharacter_C.IsObservable
// 0x000E (0x000E - 0x0000)
struct BP_AJBInGameAIObservedCharacter_C_IsObservable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStealth_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStandSeparating_bSeparation;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovableStand_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LifeTimeExpired_ReturnValue;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIObservedCharacter_C_IsObservable) == 0x000001, "Wrong alignment on BP_AJBInGameAIObservedCharacter_C_IsObservable");
static_assert(sizeof(BP_AJBInGameAIObservedCharacter_C_IsObservable) == 0x00000E, "Wrong size on BP_AJBInGameAIObservedCharacter_C_IsObservable");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_IsObservable, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIObservedCharacter_C_IsObservable::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_IsObservable, CallFunc_IsStealth_ReturnValue) == 0x000001, "Member 'BP_AJBInGameAIObservedCharacter_C_IsObservable::CallFunc_IsStealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_IsObservable, CallFunc_IsStandSeparating_bSeparation) == 0x000002, "Member 'BP_AJBInGameAIObservedCharacter_C_IsObservable::CallFunc_IsStandSeparating_bSeparation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_IsObservable, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_AJBInGameAIObservedCharacter_C_IsObservable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_IsObservable, CallFunc_IsMovableStand_ReturnValue) == 0x000004, "Member 'BP_AJBInGameAIObservedCharacter_C_IsObservable::CallFunc_IsMovableStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_IsObservable, CallFunc_LifeTimeExpired_ReturnValue) == 0x000005, "Member 'BP_AJBInGameAIObservedCharacter_C_IsObservable::CallFunc_LifeTimeExpired_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_IsObservable, CallFunc_Not_PreBool_ReturnValue1) == 0x000006, "Member 'BP_AJBInGameAIObservedCharacter_C_IsObservable::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_IsObservable, CallFunc_Not_PreBool_ReturnValue2) == 0x000007, "Member 'BP_AJBInGameAIObservedCharacter_C_IsObservable::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_IsObservable, CallFunc_BooleanOR_ReturnValue) == 0x000008, "Member 'BP_AJBInGameAIObservedCharacter_C_IsObservable::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_IsObservable, CallFunc_IsAlive_ReturnValue) == 0x000009, "Member 'BP_AJBInGameAIObservedCharacter_C_IsObservable::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_IsObservable, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'BP_AJBInGameAIObservedCharacter_C_IsObservable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_IsObservable, CallFunc_IsValid_ReturnValue) == 0x00000B, "Member 'BP_AJBInGameAIObservedCharacter_C_IsObservable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_IsObservable, CallFunc_BooleanAND_ReturnValue1) == 0x00000C, "Member 'BP_AJBInGameAIObservedCharacter_C_IsObservable::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_IsObservable, CallFunc_BooleanAND_ReturnValue2) == 0x00000D, "Member 'BP_AJBInGameAIObservedCharacter_C_IsObservable::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function BP_AJBInGameAIObservedCharacter.BP_AJBInGameAIObservedCharacter_C.ActivateObject
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameAIObservedCharacter_C_ActivateObject final
{
public:
	class ABP_AJBInGameAIImaginaryCharacter_C*    ImaginaryCharacter;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIObservedCharacter_C_ActivateObject) == 0x000008, "Wrong alignment on BP_AJBInGameAIObservedCharacter_C_ActivateObject");
static_assert(sizeof(BP_AJBInGameAIObservedCharacter_C_ActivateObject) == 0x000008, "Wrong size on BP_AJBInGameAIObservedCharacter_C_ActivateObject");
static_assert(offsetof(BP_AJBInGameAIObservedCharacter_C_ActivateObject, ImaginaryCharacter) == 0x000000, "Member 'BP_AJBInGameAIObservedCharacter_C_ActivateObject::ImaginaryCharacter' has a wrong offset!");

}


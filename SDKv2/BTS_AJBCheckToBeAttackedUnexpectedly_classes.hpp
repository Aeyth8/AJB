#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_AJBCheckToBeAttackedUnexpectedly

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTS_AJBCheckToBeAttackedUnexpectedly.BTS_AJBCheckToBeAttackedUnexpectedly_C
// 0x0080 (0x0118 - 0x0098)
class UBTS_AJBCheckToBeAttackedUnexpectedly_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 AttackedUnexpectedlyKey;                           // 0x00A0(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 RO_FocusingEnemyKey;                               // 0x00C8(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 AttackingGionKey;                                  // 0x00F0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)

public:
	void ExecuteUbergraph_BTS_AJBCheckToBeAttackedUnexpectedly(int32 EntryPoint);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);
	bool IsGionOwnerPlayer(class AAIController* AI_Controller);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTS_AJBCheckToBeAttackedUnexpectedly_C">();
	}
	static class UBTS_AJBCheckToBeAttackedUnexpectedly_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTS_AJBCheckToBeAttackedUnexpectedly_C>();
	}
};
static_assert(alignof(UBTS_AJBCheckToBeAttackedUnexpectedly_C) == 0x000008, "Wrong alignment on UBTS_AJBCheckToBeAttackedUnexpectedly_C");
static_assert(sizeof(UBTS_AJBCheckToBeAttackedUnexpectedly_C) == 0x000118, "Wrong size on UBTS_AJBCheckToBeAttackedUnexpectedly_C");
static_assert(offsetof(UBTS_AJBCheckToBeAttackedUnexpectedly_C, UberGraphFrame) == 0x000098, "Member 'UBTS_AJBCheckToBeAttackedUnexpectedly_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTS_AJBCheckToBeAttackedUnexpectedly_C, AttackedUnexpectedlyKey) == 0x0000A0, "Member 'UBTS_AJBCheckToBeAttackedUnexpectedly_C::AttackedUnexpectedlyKey' has a wrong offset!");
static_assert(offsetof(UBTS_AJBCheckToBeAttackedUnexpectedly_C, RO_FocusingEnemyKey) == 0x0000C8, "Member 'UBTS_AJBCheckToBeAttackedUnexpectedly_C::RO_FocusingEnemyKey' has a wrong offset!");
static_assert(offsetof(UBTS_AJBCheckToBeAttackedUnexpectedly_C, AttackingGionKey) == 0x0000F0, "Member 'UBTS_AJBCheckToBeAttackedUnexpectedly_C::AttackingGionKey' has a wrong offset!");

}


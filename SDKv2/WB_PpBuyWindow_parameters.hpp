#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_PpBuyWindow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.ExecuteUbergraph_WB_PpBuyWindow
// 0x0160 (0x0160 - 0x0000)
struct WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FShopEventSettings                     CallFunc_GetShopEventSettings_ReturnValue;         // 0x0004(0x0008)(ConstParm, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget4;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton4;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget3;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton3;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget2;           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton2;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget1;           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton1;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0050(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBHUDBase_bSuccess;                   // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBHUDBase*                            CallFunc_GetAJBHUDBase_HUDBase;                    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBHUDBase_bSuccess1;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBHUDBase*                            CallFunc_GetAJBHUDBase_HUDBase1;                   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBHUDBase_bSuccess2;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBHUDBase*                            CallFunc_GetAJBHUDBase_HUDBase2;                   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_ElapsedTime;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CountDownTime;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindAJBViewportWidgetOfClass_bSuccess;    // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_GameOver_C*                         CallFunc_FindAJBViewportWidgetOfClass_OutWidget;   // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBWindowWidget*                       K2Node_CustomEvent_TargetWidget;                   // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCreaditNum_ReturnValue;                // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess1;             // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance1;    // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCreaditNum_ReturnValue1;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UAJBWindowWidget* TargetWidget)> K2Node_CreateDelegate_OutputDelegate;              // 0x0118(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget;            // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton;           // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTimeStop_bStop;                         // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0148(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsAMSystemErrorMode_ReturnValue;          // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow) == 0x000008, "Wrong alignment on WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow");
static_assert(sizeof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow) == 0x000160, "Wrong size on WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, EntryPoint) == 0x000000, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_GetShopEventSettings_ReturnValue) == 0x000004, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_GetShopEventSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, K2Node_ComponentBoundEvent_OwnerWidget4) == 0x000010, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::K2Node_ComponentBoundEvent_OwnerWidget4' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, K2Node_ComponentBoundEvent_TargetButton4) == 0x000018, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::K2Node_ComponentBoundEvent_TargetButton4' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, K2Node_ComponentBoundEvent_OwnerWidget3) == 0x000020, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::K2Node_ComponentBoundEvent_OwnerWidget3' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, K2Node_ComponentBoundEvent_TargetButton3) == 0x000028, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::K2Node_ComponentBoundEvent_TargetButton3' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, K2Node_ComponentBoundEvent_OwnerWidget2) == 0x000030, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::K2Node_ComponentBoundEvent_OwnerWidget2' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, K2Node_ComponentBoundEvent_TargetButton2) == 0x000038, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::K2Node_ComponentBoundEvent_TargetButton2' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, K2Node_ComponentBoundEvent_OwnerWidget1) == 0x000040, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::K2Node_ComponentBoundEvent_OwnerWidget1' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, K2Node_ComponentBoundEvent_TargetButton1) == 0x000048, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::K2Node_ComponentBoundEvent_TargetButton1' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, K2Node_Event_MyGeometry) == 0x000050, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, K2Node_Event_InDeltaTime) == 0x000088, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_GetAJBHUDBase_bSuccess) == 0x00008C, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_GetAJBHUDBase_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_GetAJBHUDBase_HUDBase) == 0x000090, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_GetAJBHUDBase_HUDBase' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_GetAJBHUDBase_bSuccess1) == 0x000098, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_GetAJBHUDBase_bSuccess1' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_GetAJBHUDBase_HUDBase1) == 0x0000A0, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_GetAJBHUDBase_HUDBase1' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_GetAJBHUDBase_bSuccess2) == 0x0000A8, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_GetAJBHUDBase_bSuccess2' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_GetAJBHUDBase_HUDBase2) == 0x0000B0, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_GetAJBHUDBase_HUDBase2' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000B8, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_FMax_ReturnValue) == 0x0000BC, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000C0, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, K2Node_CustomEvent_ElapsedTime) == 0x0000C4, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::K2Node_CustomEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, K2Node_CustomEvent_CountDownTime) == 0x0000C8, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::K2Node_CustomEvent_CountDownTime' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_FindAJBViewportWidgetOfClass_bSuccess) == 0x0000CC, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_FindAJBViewportWidgetOfClass_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_FindAJBViewportWidgetOfClass_OutWidget) == 0x0000D0, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_FindAJBViewportWidgetOfClass_OutWidget' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, K2Node_CustomEvent_TargetWidget) == 0x0000D8, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::K2Node_CustomEvent_TargetWidget' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_Not_PreBool_ReturnValue1) == 0x0000E0, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_BooleanAND_ReturnValue) == 0x0000E1, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x0000E8, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_GetAJBGameInstance_bSuccess) == 0x0000F0, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x0000F8, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_GetCreaditNum_ReturnValue) == 0x000100, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_GetCreaditNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_GetAJBGameInstance_bSuccess1) == 0x000104, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_GetAJBGameInstance_bSuccess1' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_GetAJBGameInstance_AJB_Game_Instance1) == 0x000108, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_GetAJBGameInstance_AJB_Game_Instance1' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_GetCreaditNum_ReturnValue1) == 0x000110, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_GetCreaditNum_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, K2Node_CreateDelegate_OutputDelegate) == 0x000118, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_Greater_IntInt_ReturnValue) == 0x000128, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, K2Node_ComponentBoundEvent_OwnerWidget) == 0x000130, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::K2Node_ComponentBoundEvent_OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, K2Node_ComponentBoundEvent_TargetButton) == 0x000138, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::K2Node_ComponentBoundEvent_TargetButton' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_IsTimeStop_bStop) == 0x000140, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_IsTimeStop_bStop' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_Not_PreBool_ReturnValue2) == 0x000141, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, K2Node_CreateDelegate_OutputDelegate1) == 0x000148, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_IsAMSystemErrorMode_ReturnValue) == 0x000158, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_IsAMSystemErrorMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow, CallFunc_Not_PreBool_ReturnValue3) == 0x000159, "Member 'WB_PpBuyWindow_C_ExecuteUbergraph_WB_PpBuyWindow::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.BndEvt__WB_Title_Button_EMoney_K2Node_ComponentBoundEvent_4_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_PpBuyWindow_C_BndEvt__WB_Title_Button_EMoney_K2Node_ComponentBoundEvent_4_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PpBuyWindow_C_BndEvt__WB_Title_Button_EMoney_K2Node_ComponentBoundEvent_4_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_PpBuyWindow_C_BndEvt__WB_Title_Button_EMoney_K2Node_ComponentBoundEvent_4_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_PpBuyWindow_C_BndEvt__WB_Title_Button_EMoney_K2Node_ComponentBoundEvent_4_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_PpBuyWindow_C_BndEvt__WB_Title_Button_EMoney_K2Node_ComponentBoundEvent_4_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_PpBuyWindow_C_BndEvt__WB_Title_Button_EMoney_K2Node_ComponentBoundEvent_4_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_PpBuyWindow_C_BndEvt__WB_Title_Button_EMoney_K2Node_ComponentBoundEvent_4_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_BndEvt__WB_Title_Button_EMoney_K2Node_ComponentBoundEvent_4_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_PpBuyWindow_C_BndEvt__WB_Title_Button_EMoney_K2Node_ComponentBoundEvent_4_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnOpeningGameOver
// 0x0008 (0x0008 - 0x0000)
struct WB_PpBuyWindow_C_OnOpeningGameOver final
{
public:
	class UAJBWindowWidget*                       TargetWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PpBuyWindow_C_OnOpeningGameOver) == 0x000008, "Wrong alignment on WB_PpBuyWindow_C_OnOpeningGameOver");
static_assert(sizeof(WB_PpBuyWindow_C_OnOpeningGameOver) == 0x000008, "Wrong size on WB_PpBuyWindow_C_OnOpeningGameOver");
static_assert(offsetof(WB_PpBuyWindow_C_OnOpeningGameOver, TargetWidget) == 0x000000, "Member 'WB_PpBuyWindow_C_OnOpeningGameOver::TargetWidget' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.TakeOverCountDownTime
// 0x0008 (0x0008 - 0x0000)
struct WB_PpBuyWindow_C_TakeOverCountDownTime final
{
public:
	float                                         ElapsedTime_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CountDownTime_0;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PpBuyWindow_C_TakeOverCountDownTime) == 0x000004, "Wrong alignment on WB_PpBuyWindow_C_TakeOverCountDownTime");
static_assert(sizeof(WB_PpBuyWindow_C_TakeOverCountDownTime) == 0x000008, "Wrong size on WB_PpBuyWindow_C_TakeOverCountDownTime");
static_assert(offsetof(WB_PpBuyWindow_C_TakeOverCountDownTime, ElapsedTime_0) == 0x000000, "Member 'WB_PpBuyWindow_C_TakeOverCountDownTime::ElapsedTime_0' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_TakeOverCountDownTime, CountDownTime_0) == 0x000004, "Member 'WB_PpBuyWindow_C_TakeOverCountDownTime::CountDownTime_0' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_PpBuyWindow_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PpBuyWindow_C_Tick) == 0x000004, "Wrong alignment on WB_PpBuyWindow_C_Tick");
static_assert(sizeof(WB_PpBuyWindow_C_Tick) == 0x00003C, "Wrong size on WB_PpBuyWindow_C_Tick");
static_assert(offsetof(WB_PpBuyWindow_C_Tick, MyGeometry) == 0x000000, "Member 'WB_PpBuyWindow_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_PpBuyWindow_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_PpBuyWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PpBuyWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_PpBuyWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_PpBuyWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_PpBuyWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_PpBuyWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_PpBuyWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_PpBuyWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.BndEvt__Button_Credit_5_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_PpBuyWindow_C_BndEvt__Button_Credit_5_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PpBuyWindow_C_BndEvt__Button_Credit_5_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_PpBuyWindow_C_BndEvt__Button_Credit_5_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_PpBuyWindow_C_BndEvt__Button_Credit_5_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_PpBuyWindow_C_BndEvt__Button_Credit_5_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_PpBuyWindow_C_BndEvt__Button_Credit_5_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_PpBuyWindow_C_BndEvt__Button_Credit_5_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_BndEvt__Button_Credit_5_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_PpBuyWindow_C_BndEvt__Button_Credit_5_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.BndEvt__Button_Credit_2_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_PpBuyWindow_C_BndEvt__Button_Credit_2_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PpBuyWindow_C_BndEvt__Button_Credit_2_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_PpBuyWindow_C_BndEvt__Button_Credit_2_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_PpBuyWindow_C_BndEvt__Button_Credit_2_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_PpBuyWindow_C_BndEvt__Button_Credit_2_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_PpBuyWindow_C_BndEvt__Button_Credit_2_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_PpBuyWindow_C_BndEvt__Button_Credit_2_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_BndEvt__Button_Credit_2_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_PpBuyWindow_C_BndEvt__Button_Credit_2_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.BndEvt__Button_Credit_1_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_PpBuyWindow_C_BndEvt__Button_Credit_1_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PpBuyWindow_C_BndEvt__Button_Credit_1_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_PpBuyWindow_C_BndEvt__Button_Credit_1_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_PpBuyWindow_C_BndEvt__Button_Credit_1_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_PpBuyWindow_C_BndEvt__Button_Credit_1_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_PpBuyWindow_C_BndEvt__Button_Credit_1_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_PpBuyWindow_C_BndEvt__Button_Credit_1_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_BndEvt__Button_Credit_1_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_PpBuyWindow_C_BndEvt__Button_Credit_1_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.GetAJBHUDBase
// 0x0038 (0x0038 - 0x0000)
struct WB_PpBuyWindow_C_GetAJBHUDBase final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBHUDBase*                            HUDBase;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBHUDBase*                            K2Node_DynamicCast_AsAJBHUDBase;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_GetAJBHUDBase) == 0x000008, "Wrong alignment on WB_PpBuyWindow_C_GetAJBHUDBase");
static_assert(sizeof(WB_PpBuyWindow_C_GetAJBHUDBase) == 0x000038, "Wrong size on WB_PpBuyWindow_C_GetAJBHUDBase");
static_assert(offsetof(WB_PpBuyWindow_C_GetAJBHUDBase, bSuccess) == 0x000000, "Member 'WB_PpBuyWindow_C_GetAJBHUDBase::bSuccess' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_GetAJBHUDBase, HUDBase) == 0x000008, "Member 'WB_PpBuyWindow_C_GetAJBHUDBase::HUDBase' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_GetAJBHUDBase, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'WB_PpBuyWindow_C_GetAJBHUDBase::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_GetAJBHUDBase, CallFunc_GetHUD_ReturnValue) == 0x000018, "Member 'WB_PpBuyWindow_C_GetAJBHUDBase::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_GetAJBHUDBase, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WB_PpBuyWindow_C_GetAJBHUDBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_GetAJBHUDBase, CallFunc_IsValid_ReturnValue1) == 0x000021, "Member 'WB_PpBuyWindow_C_GetAJBHUDBase::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_GetAJBHUDBase, K2Node_DynamicCast_AsAJBHUDBase) == 0x000028, "Member 'WB_PpBuyWindow_C_GetAJBHUDBase::K2Node_DynamicCast_AsAJBHUDBase' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_GetAJBHUDBase, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WB_PpBuyWindow_C_GetAJBHUDBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.UpdateTitle
// 0x00C8 (0x00C8 - 0x0000)
struct WB_PpBuyWindow_C_UpdateTitle final
{
public:
	int32                                         LResult;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0018)()
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x00A0(0x0018)()
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue1;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_UpdateTitle) == 0x000008, "Wrong alignment on WB_PpBuyWindow_C_UpdateTitle");
static_assert(sizeof(WB_PpBuyWindow_C_UpdateTitle) == 0x0000C8, "Wrong size on WB_PpBuyWindow_C_UpdateTitle");
static_assert(offsetof(WB_PpBuyWindow_C_UpdateTitle, LResult) == 0x000000, "Member 'WB_PpBuyWindow_C_UpdateTitle::LResult' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_UpdateTitle, Temp_bool_Variable) == 0x000004, "Member 'WB_PpBuyWindow_C_UpdateTitle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_UpdateTitle, Temp_text_Variable) == 0x000008, "Member 'WB_PpBuyWindow_C_UpdateTitle::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_UpdateTitle, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'WB_PpBuyWindow_C_UpdateTitle::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_UpdateTitle, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000060, "Member 'WB_PpBuyWindow_C_UpdateTitle::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_UpdateTitle, K2Node_MakeArray_Array) == 0x000068, "Member 'WB_PpBuyWindow_C_UpdateTitle::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_UpdateTitle, CallFunc_Format_ReturnValue) == 0x000078, "Member 'WB_PpBuyWindow_C_UpdateTitle::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_UpdateTitle, CallFunc_GetAJBGameInstance_bSuccess) == 0x000090, "Member 'WB_PpBuyWindow_C_UpdateTitle::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_UpdateTitle, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000098, "Member 'WB_PpBuyWindow_C_UpdateTitle::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_UpdateTitle, K2Node_Select_Default) == 0x0000A0, "Member 'WB_PpBuyWindow_C_UpdateTitle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_UpdateTitle, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B8, "Member 'WB_PpBuyWindow_C_UpdateTitle::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_UpdateTitle, CallFunc_Max_ReturnValue) == 0x0000BC, "Member 'WB_PpBuyWindow_C_UpdateTitle::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_UpdateTitle, CallFunc_GreaterEqual_IntInt_ReturnValue1) == 0x0000C0, "Member 'WB_PpBuyWindow_C_UpdateTitle::CallFunc_GreaterEqual_IntInt_ReturnValue1' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.IsSelectedBuy
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_IsSelectedBuy final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_IsSelectedBuy) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_IsSelectedBuy");
static_assert(sizeof(WB_PpBuyWindow_C_IsSelectedBuy) == 0x000001, "Wrong size on WB_PpBuyWindow_C_IsSelectedBuy");
static_assert(offsetof(WB_PpBuyWindow_C_IsSelectedBuy, bSelected) == 0x000000, "Member 'WB_PpBuyWindow_C_IsSelectedBuy::bSelected' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputReleasedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputReleasedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputReleasedUp) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputReleasedUp");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputReleasedUp) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputReleasedUp");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputReleasedUp, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputReleasedUp::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputReleasedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputReleasedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputReleasedRight) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputReleasedRight");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputReleasedRight) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputReleasedRight");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputReleasedRight, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputReleasedRight::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputReleasedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputReleasedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputReleasedLeft) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputReleasedLeft");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputReleasedLeft) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputReleasedLeft");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputReleasedLeft, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputReleasedLeft::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputReleasedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputReleasedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputReleasedDown) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputReleasedDown");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputReleasedDown) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputReleasedDown");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputReleasedDown, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputReleasedDown::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputReleasedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputReleasedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputReleasedDecide) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputReleasedDecide");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputReleasedDecide) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputReleasedDecide");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputReleasedDecide, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputReleasedDecide::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputReleasedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputReleasedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputReleasedCancel) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputReleasedCancel");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputReleasedCancel) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputReleasedCancel");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputReleasedCancel, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputReleasedCancel::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputPressedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputPressedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputPressedUp) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputPressedUp");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputPressedUp) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputPressedUp");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputPressedUp, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputPressedUp::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputPressedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputPressedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputPressedRight) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputPressedRight");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputPressedRight) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputPressedRight");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputPressedRight, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputPressedRight::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputPressedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputPressedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputPressedLeft) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputPressedLeft");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputPressedLeft) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputPressedLeft");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputPressedLeft, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputPressedLeft::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputPressedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputPressedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputPressedDown) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputPressedDown");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputPressedDown) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputPressedDown");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputPressedDown, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputPressedDown::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputPressedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputPressedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputPressedDecide) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputPressedDecide");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputPressedDecide) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputPressedDecide");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputPressedDecide, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputPressedDecide::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputPressedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputPressedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputPressedCancel) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputPressedCancel");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputPressedCancel) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputPressedCancel");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputPressedCancel, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputPressedCancel::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputTurnRate
// 0x0008 (0x0008 - 0x0000)
struct WB_PpBuyWindow_C_OnInputTurnRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputTurnRate) == 0x000004, "Wrong alignment on WB_PpBuyWindow_C_OnInputTurnRate");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputTurnRate) == 0x000008, "Wrong size on WB_PpBuyWindow_C_OnInputTurnRate");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputTurnRate, Value) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputTurnRate::Value' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputTurnRate, ReturnValue) == 0x000004, "Member 'WB_PpBuyWindow_C_OnInputTurnRate::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputMoveRight
// 0x0008 (0x0008 - 0x0000)
struct WB_PpBuyWindow_C_OnInputMoveRight final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputMoveRight) == 0x000004, "Wrong alignment on WB_PpBuyWindow_C_OnInputMoveRight");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputMoveRight) == 0x000008, "Wrong size on WB_PpBuyWindow_C_OnInputMoveRight");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputMoveRight, Value) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputMoveRight::Value' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputMoveRight, ReturnValue) == 0x000004, "Member 'WB_PpBuyWindow_C_OnInputMoveRight::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputMoveForward
// 0x0008 (0x0008 - 0x0000)
struct WB_PpBuyWindow_C_OnInputMoveForward final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputMoveForward) == 0x000004, "Wrong alignment on WB_PpBuyWindow_C_OnInputMoveForward");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputMoveForward) == 0x000008, "Wrong size on WB_PpBuyWindow_C_OnInputMoveForward");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputMoveForward, Value) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputMoveForward::Value' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputMoveForward, ReturnValue) == 0x000004, "Member 'WB_PpBuyWindow_C_OnInputMoveForward::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputLookupRate
// 0x0008 (0x0008 - 0x0000)
struct WB_PpBuyWindow_C_OnInputLookupRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputLookupRate) == 0x000004, "Wrong alignment on WB_PpBuyWindow_C_OnInputLookupRate");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputLookupRate) == 0x000008, "Wrong size on WB_PpBuyWindow_C_OnInputLookupRate");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputLookupRate, Value) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputLookupRate::Value' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputLookupRate, ReturnValue) == 0x000004, "Member 'WB_PpBuyWindow_C_OnInputLookupRate::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.IsModeless
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_IsModeless final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_IsModeless) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_IsModeless");
static_assert(sizeof(WB_PpBuyWindow_C_IsModeless) == 0x000001, "Wrong size on WB_PpBuyWindow_C_IsModeless");
static_assert(offsetof(WB_PpBuyWindow_C_IsModeless, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_IsModeless::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputReleasedTouch
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputReleasedTouch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputReleasedTouch) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputReleasedTouch");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputReleasedTouch) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputReleasedTouch");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputReleasedTouch, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputReleasedTouch::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputPressedTouch
// 0x000C (0x000C - 0x0000)
struct WB_PpBuyWindow_C_OnInputPressedTouch final
{
public:
	float                                         LocationX;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocationY;                                         // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputPressedTouch) == 0x000004, "Wrong alignment on WB_PpBuyWindow_C_OnInputPressedTouch");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputPressedTouch) == 0x00000C, "Wrong size on WB_PpBuyWindow_C_OnInputPressedTouch");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputPressedTouch, LocationX) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputPressedTouch::LocationX' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputPressedTouch, LocationY) == 0x000004, "Member 'WB_PpBuyWindow_C_OnInputPressedTouch::LocationY' has a wrong offset!");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputPressedTouch, ReturnValue) == 0x000008, "Member 'WB_PpBuyWindow_C_OnInputPressedTouch::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputReleasedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputReleasedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputReleasedR2) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputReleasedR2");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputReleasedR2) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputReleasedR2");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputReleasedR2, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputReleasedR2::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputReleasedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputReleasedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputReleasedR1) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputReleasedR1");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputReleasedR1) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputReleasedR1");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputReleasedR1, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputReleasedR1::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputReleasedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputReleasedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputReleasedL2) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputReleasedL2");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputReleasedL2) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputReleasedL2");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputReleasedL2, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputReleasedL2::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputReleasedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputReleasedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputReleasedL1) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputReleasedL1");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputReleasedL1) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputReleasedL1");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputReleasedL1, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputReleasedL1::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputPressedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputPressedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputPressedR2) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputPressedR2");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputPressedR2) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputPressedR2");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputPressedR2, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputPressedR2::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputPressedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputPressedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputPressedR1) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputPressedR1");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputPressedR1) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputPressedR1");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputPressedR1, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputPressedR1::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputPressedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputPressedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputPressedL2) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputPressedL2");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputPressedL2) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputPressedL2");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputPressedL2, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputPressedL2::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputPressedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputPressedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputPressedL1) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputPressedL1");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputPressedL1) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputPressedL1");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputPressedL1, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputPressedL1::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputReleasedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputReleasedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputReleasedL3) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputReleasedL3");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputReleasedL3) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputReleasedL3");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputReleasedL3, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputReleasedL3::ReturnValue' has a wrong offset!");

// Function WB_PpBuyWindow.WB_PpBuyWindow_C.OnInputPressedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_PpBuyWindow_C_OnInputPressedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PpBuyWindow_C_OnInputPressedL3) == 0x000001, "Wrong alignment on WB_PpBuyWindow_C_OnInputPressedL3");
static_assert(sizeof(WB_PpBuyWindow_C_OnInputPressedL3) == 0x000001, "Wrong size on WB_PpBuyWindow_C_OnInputPressedL3");
static_assert(offsetof(WB_PpBuyWindow_C_OnInputPressedL3, ReturnValue) == 0x000000, "Member 'WB_PpBuyWindow_C_OnInputPressedL3::ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_AJBInGameCharacter_ANS

#include "Basic.hpp"


namespace SDK::Params
{

// Function ABP_AJBInGameCharacter_ANS.ABP_AJBInGameCharacter_ANS_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_AJBInGameCharacter_ANS_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_AJBInGameCharacter_ANS_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_AJBInGameCharacter_ANS_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_AJBInGameCharacter_ANS_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_AJBInGameCharacter_ANS_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_AJBInGameCharacter_ANS_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_AJBInGameCharacter_ANS_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_AJBInGameCharacter_ANS.ABP_AJBInGameCharacter_ANS_C.ExecuteUbergraph_ABP_AJBInGameCharacter_ANS
// 0x0030 (0x0030 - 0x0000)
struct ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue;     // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable1;                              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS) == 0x000008, "Wrong alignment on ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS");
static_assert(sizeof(ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS) == 0x000030, "Wrong size on ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS");
static_assert(offsetof(ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS, EntryPoint) == 0x000000, "Member 'ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS, Temp_float_Variable) == 0x000004, "Member 'ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS, CallFunc_CheckActiveBehaviorIsEmote_bRetValue) == 0x00001A, "Member 'ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS::CallFunc_CheckActiveBehaviorIsEmote_bRetValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS, Temp_float_Variable1) == 0x00001C, "Member 'ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS, Temp_bool_Variable) == 0x000020, "Member 'ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS, K2Node_Event_DeltaTimeX) == 0x000024, "Member 'ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS, K2Node_Select_Default) == 0x000028, "Member 'ABP_AJBInGameCharacter_ANS_C_ExecuteUbergraph_ABP_AJBInGameCharacter_ANS::K2Node_Select_Default' has a wrong offset!");

}


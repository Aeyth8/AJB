#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBSimpleMatchPlayerController

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AJBOutGamePlayerController_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBSimpleMatchPlayerController.BP_AJBSimpleMatchPlayerController_C
// 0x0018 (0x0780 - 0x0768)
class ABP_AJBSimpleMatchPlayerController_C final : public ABP_AJBOutGamePlayerController_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBSimpleMatchPlayerController_C; // 0x0768(0x0008)(Transient, DuplicateTransient)
	class UBP_GameFlowStateManager_C*             GameFlowStateManager;                              // 0x0770(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsServer;                                          // 0x0778(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDedicated;                                       // 0x0779(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_AJBSimpleMatchPlayerController(int32 EntryPoint);
	void ReceiveBeginPlay();
	void OnEnd_ServerSettings(const struct FGameplayTag& NextState);
	void OnBegin_ServerSettings(const struct FGameplayTag& PrevState);
	void BindFlowStateEvent();
	void OnBegin_Exit(const struct FGameplayTag& PrevState);
	void OnEnd_SelectMode(const struct FGameplayTag& NextState);
	void OnBegin_SelectMode(const struct FGameplayTag& PrevState);
	void OnBegin_SelectCharacter(const struct FGameplayTag& PrevState);
	void OnSuccess_C830857B42B725AC49B46497BB302CC7();
	void OnFailed_C830857B42B725AC49B46497BB302CC7();
	void OnSuccess_F201F95C43FDE1ACA162C0BD20A78149();
	void OnFailure_F201F95C43FDE1ACA162C0BD20A78149();
	void OnSuccess_793F26A345C76B0366C4839A89F4C450(const TArray<struct FBlueprintSessionResult>& Results);
	void OnFailure_793F26A345C76B0366C4839A89F4C450(const TArray<struct FBlueprintSessionResult>& Results);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBSimpleMatchPlayerController_C">();
	}
	static class ABP_AJBSimpleMatchPlayerController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBSimpleMatchPlayerController_C>();
	}
};
static_assert(alignof(ABP_AJBSimpleMatchPlayerController_C) == 0x000008, "Wrong alignment on ABP_AJBSimpleMatchPlayerController_C");
static_assert(sizeof(ABP_AJBSimpleMatchPlayerController_C) == 0x000780, "Wrong size on ABP_AJBSimpleMatchPlayerController_C");
static_assert(offsetof(ABP_AJBSimpleMatchPlayerController_C, UberGraphFrame_BP_AJBSimpleMatchPlayerController_C) == 0x000768, "Member 'ABP_AJBSimpleMatchPlayerController_C::UberGraphFrame_BP_AJBSimpleMatchPlayerController_C' has a wrong offset!");
static_assert(offsetof(ABP_AJBSimpleMatchPlayerController_C, GameFlowStateManager) == 0x000770, "Member 'ABP_AJBSimpleMatchPlayerController_C::GameFlowStateManager' has a wrong offset!");
static_assert(offsetof(ABP_AJBSimpleMatchPlayerController_C, IsServer) == 0x000778, "Member 'ABP_AJBSimpleMatchPlayerController_C::IsServer' has a wrong offset!");
static_assert(offsetof(ABP_AJBSimpleMatchPlayerController_C, IsDedicated) == 0x000779, "Member 'ABP_AJBSimpleMatchPlayerController_C::IsDedicated' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Skill_AssaultDive

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Skill_AssaultDive.WB_Skill_AssaultDive_C
// 0x0018 (0x0298 - 0x0280)
class UWB_Skill_AssaultDive_C final : public UAJBInGameSkillWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(Transient, DuplicateTransient)
	class UCanvasPanel*                           LayoutRoot;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SkillPartsTimer_C*                  TimerWidget;                                       // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_Skill_AssaultDive(int32 EntryPoint);
	void HideAdditionalAssaultDiveGuide();
	void ShowAdditionalAssaultDiveGuide(const struct FAJBSkillGuideInfo& AdditionalGuide);
	void HideAssaultDiveGuide();
	void ShowAssaultDiveGuide();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnActiveSkillWidget();
	void OnInactiveSkillWidget();
	void GetSXPCharacter(class ABP_AJBInGameMovableStand_SXP_C** SXP, bool* bSuccess);
	void GetGuideInfo(const struct FAJBSkillGuideInfo& AdditionalGuideInfo, struct FAJBSkillGuideInfo* FinalyGuideInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Skill_AssaultDive_C">();
	}
	static class UWB_Skill_AssaultDive_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Skill_AssaultDive_C>();
	}
};
static_assert(alignof(UWB_Skill_AssaultDive_C) == 0x000008, "Wrong alignment on UWB_Skill_AssaultDive_C");
static_assert(sizeof(UWB_Skill_AssaultDive_C) == 0x000298, "Wrong size on UWB_Skill_AssaultDive_C");
static_assert(offsetof(UWB_Skill_AssaultDive_C, UberGraphFrame) == 0x000280, "Member 'UWB_Skill_AssaultDive_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_Skill_AssaultDive_C, LayoutRoot) == 0x000288, "Member 'UWB_Skill_AssaultDive_C::LayoutRoot' has a wrong offset!");
static_assert(offsetof(UWB_Skill_AssaultDive_C, TimerWidget) == 0x000290, "Member 'UWB_Skill_AssaultDive_C::TimerWidget' has a wrong offset!");

}


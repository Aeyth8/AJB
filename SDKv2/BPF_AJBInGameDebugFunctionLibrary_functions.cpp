#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPF_AJBInGameDebugFunctionLibrary

#include "Basic.hpp"

#include "BPF_AJBInGameDebugFunctionLibrary_classes.hpp"
#include "BPF_AJBInGameDebugFunctionLibrary_parameters.hpp"


namespace SDK
{

// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DebugGetControllerObjectNameFromActor
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           StringIfNotHasController                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBPF_AJBInGameDebugFunctionLibrary_C::DebugGetControllerObjectNameFromActor(class AActor* Actor, const class FString& StringIfNotHasController, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBInGameDebugFunctionLibrary_C", "DebugGetControllerObjectNameFromActor");

	Params::BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor Parms{};

	Parms.Actor = Actor;
	Parms.StringIfNotHasController = std::move(StringIfNotHasController);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DebugGetPairObjectsNameFromActor
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           StringIfNotHasPair                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           PairCharacterObjectName                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           PairControllerObjectName                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBPF_AJBInGameDebugFunctionLibrary_C::DebugGetPairObjectsNameFromActor(class AActor* Actor, const class FString& StringIfNotHasPair, class UObject* __WorldContext, class FString* PairCharacterObjectName, class FString* PairControllerObjectName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBInGameDebugFunctionLibrary_C", "DebugGetPairObjectsNameFromActor");

	Params::BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor Parms{};

	Parms.Actor = Actor;
	Parms.StringIfNotHasPair = std::move(StringIfNotHasPair);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (PairCharacterObjectName != nullptr)
		*PairCharacterObjectName = std::move(Parms.PairCharacterObjectName);

	if (PairControllerObjectName != nullptr)
		*PairControllerObjectName = std::move(Parms.PairControllerObjectName);
}


// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DebugShortenCharacterObjectName
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           ObjectName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBPF_AJBInGameDebugFunctionLibrary_C::DebugShortenCharacterObjectName(const class FString& ObjectName, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBInGameDebugFunctionLibrary_C", "DebugShortenCharacterObjectName");

	Params::BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenCharacterObjectName Parms{};

	Parms.ObjectName = std::move(ObjectName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DebugShortenControllerObjectName
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           ObjectName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBPF_AJBInGameDebugFunctionLibrary_C::DebugShortenControllerObjectName(const class FString& ObjectName, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBInGameDebugFunctionLibrary_C", "DebugShortenControllerObjectName");

	Params::BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenControllerObjectName Parms{};

	Parms.ObjectName = std::move(ObjectName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DebugGetAvailableCharacterTags
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bAvailableNegotiationsCharacter                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSelectable                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bUsableAsNPC                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bShipping                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<class FName, struct FGameplayTag>  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm)

TMap<class FName, struct FGameplayTag> UBPF_AJBInGameDebugFunctionLibrary_C::DebugGetAvailableCharacterTags(bool bAvailableNegotiationsCharacter, bool bSelectable, bool bUsableAsNPC, bool bShipping, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBInGameDebugFunctionLibrary_C", "DebugGetAvailableCharacterTags");

	Params::BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags Parms{};

	Parms.bAvailableNegotiationsCharacter = bAvailableNegotiationsCharacter;
	Parms.bSelectable = bSelectable;
	Parms.bUsableAsNPC = bUsableAsNPC;
	Parms.bShipping = bShipping;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


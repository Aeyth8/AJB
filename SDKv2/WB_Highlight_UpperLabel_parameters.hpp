#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Highlight_UpperLabel

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_Highlight_UpperLabel.WB_Highlight_UpperLabel_C.ExecuteUbergraph_WB_Highlight_UpperLabel
// 0x0058 (0x0058 - 0x0000)
struct WB_Highlight_UpperLabel_C_ExecuteUbergraph_WB_Highlight_UpperLabel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WB_Highlight_UpperLabel_C_ExecuteUbergraph_WB_Highlight_UpperLabel) == 0x000008, "Wrong alignment on WB_Highlight_UpperLabel_C_ExecuteUbergraph_WB_Highlight_UpperLabel");
static_assert(sizeof(WB_Highlight_UpperLabel_C_ExecuteUbergraph_WB_Highlight_UpperLabel) == 0x000058, "Wrong size on WB_Highlight_UpperLabel_C_ExecuteUbergraph_WB_Highlight_UpperLabel");
static_assert(offsetof(WB_Highlight_UpperLabel_C_ExecuteUbergraph_WB_Highlight_UpperLabel, EntryPoint) == 0x000000, "Member 'WB_Highlight_UpperLabel_C_ExecuteUbergraph_WB_Highlight_UpperLabel::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Highlight_UpperLabel_C_ExecuteUbergraph_WB_Highlight_UpperLabel, K2Node_Event_MyGeometry) == 0x000004, "Member 'WB_Highlight_UpperLabel_C_ExecuteUbergraph_WB_Highlight_UpperLabel::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Highlight_UpperLabel_C_ExecuteUbergraph_WB_Highlight_UpperLabel, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WB_Highlight_UpperLabel_C_ExecuteUbergraph_WB_Highlight_UpperLabel::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_Highlight_UpperLabel_C_ExecuteUbergraph_WB_Highlight_UpperLabel, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000040, "Member 'WB_Highlight_UpperLabel_C_ExecuteUbergraph_WB_Highlight_UpperLabel::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(WB_Highlight_UpperLabel_C_ExecuteUbergraph_WB_Highlight_UpperLabel, K2Node_CreateDelegate_OutputDelegate) == 0x000048, "Member 'WB_Highlight_UpperLabel_C_ExecuteUbergraph_WB_Highlight_UpperLabel::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WB_Highlight_UpperLabel.WB_Highlight_UpperLabel_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_Highlight_UpperLabel_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Highlight_UpperLabel_C_Tick) == 0x000004, "Wrong alignment on WB_Highlight_UpperLabel_C_Tick");
static_assert(sizeof(WB_Highlight_UpperLabel_C_Tick) == 0x00003C, "Wrong size on WB_Highlight_UpperLabel_C_Tick");
static_assert(offsetof(WB_Highlight_UpperLabel_C_Tick, MyGeometry) == 0x000000, "Member 'WB_Highlight_UpperLabel_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Highlight_UpperLabel_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_Highlight_UpperLabel_C_Tick::InDeltaTime' has a wrong offset!");

}


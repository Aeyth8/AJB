#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBZipper_Hide

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_structs.hpp"
#include "BP_AJBZipper_InteractableBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBZipper_Hide.BP_AJBZipper_Hide_C
// 0x0058 (0x0420 - 0x03C8)
class ABP_AJBZipper_Hide_C final : public ABP_AJBZipper_InteractableBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBZipper_Hide_C;                // 0x03C8(0x0008)(Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_ZipperPlane;                                    // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        EmitterSpawnPoint;                                 // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               Rep_InteractableCharacter;                         // 0x03E0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bRep_Hiding;                                       // 0x03E8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Rep_AttachedActor;                                 // 0x03F0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Rep_AttachedComponent;                             // 0x03F8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         DamageDetectionRadiusS;                            // 0x0400(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageDetectionRadiusM;                            // 0x0404(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageDetectionRadiusL;                            // 0x0408(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Server_DamageDetector;                             // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSphereDamageDetected;                             // 0x0418(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bLocal_HidingStarted;                              // 0x0419(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bCharacterCreatedZipper;                           // 0x041A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bDuringTheWorld;                                   // 0x041B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_AJBZipper_Hide(int32 EntryPoint);
	void OnDamagedByNotCollision();
	void OnReceiveDamageServer(int32 Damage, const struct FGameplayTag& DamageType, class AActor* DamageCauser, bool bRemainHP, bool bDamageIsCut, bool bNotUseCollision);
	void SetverSetupNotUseCollisionDamange();
	void ServerSetup_Prop(class ABP_InGameProp_C* BPProp);
	void ServerSetup_Decaling();
	void ServerSetup_DamageArea();
	void CloseZipperOnHideBegin_OneShot();
	void CloseZipperOnHideBegin(bool bRestore);
	void OnSetViewTargetToNewSpectator();
	void MC_DamagedDuringTheWorld();
	void OnLifeTimeElapsed(class AActor* DestroyingActor);
	void CloseZipperOnLifetimeExpired();
	void OnLifeTimeElapsedZipperHide_OnLocal(class AActor* DestroyingActor);
	void SetAsCreatedZipper();
	void Server_OnSphereDamaged(class AActor* DamagedActor, int32 DamageForHPAP, int32 DamageForAAP, int32 CutDamage, const struct FGameplayTag& DamageType, int32 SerialNumber, EDamagePriority DamagePriority, float AttackDistance, class AActor* DamageCauser, bool bWithSeparatedStandAttack, bool bHitEnemysSeparatedStand, bool bPenetrateAP);
	void Server_SetupOnDamagedEvents();
	void OnDamagedByDamageArea(int32 Damage);
	void Server_OnPropDamaged(class AActor* DamagedActor, int32 DamageForHPAP, int32 DamageForAAP, int32 CutDamage, const struct FGameplayTag& DamageType, int32 SerialNumber, EDamagePriority DamagePriority, float AttackDistance, class AActor* DamageCauser, bool bWithSeparetedStandAttack, bool bHitEnemysSeparatedStand, bool bPenetrateAP);
	void Server_OnDecalingDamaged(class AActor* DamagedActor, int32 DamageForHPAP, int32 DamageForAAP, int32 CutDamage, const struct FGameplayTag& DamageType, int32 SerialNumber, EDamagePriority DamagePriority, float AttackDistance, class AActor* DamageCauser, bool bWithSeparetedStandAttack, bool HitEnemysSeparatedStand, bool bPenetrateAP);
	void Server_OnDamageAffectorDamageDetected(class AActor* DamageCauser);
	void Server_SetSphereInfo(float Radius);
	void OnROSInteract(class AActor* InteractingActor, bool ServerIsInteractingPlayer);
	void ShowExitEffect();
	void ShowEnterEffect();
	void Server_StartToExitOnHiding();
	void OpenCloseAnimationFinished();
	void MC_OpenZipperOnHideEnd();
	void MC_CloseZipperOnHideBegin();
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void OnCompleted_D89B826545FB119A5BCE5192FDD8DBA2(class FName NotifyName);
	void OnBlendOut_D89B826545FB119A5BCE5192FDD8DBA2(class FName NotifyName);
	void OnInterrupted_D89B826545FB119A5BCE5192FDD8DBA2(class FName NotifyName);
	void OnNotifyBegin_D89B826545FB119A5BCE5192FDD8DBA2(class FName NotifyName);
	void OnNotifyEnd_D89B826545FB119A5BCE5192FDD8DBA2(class FName NotifyName);
	bool Interactable(class ABP_AJBInGameCharacter_C* Character, float TraceLength);
	void TryGetInteractableText(class ABP_AJBInGameCharacter_C* OperatorCharacter, bool* bSuccess, class FText* InteractMessage);
	void OnLocalInteract(class AActor* InteractingActor, bool* bSuccess);
	void DeactiveDamageDetection();
	void StateBeginPlay();
	void ReceiveBeginPlay();
	void NotifyToCharacterHidingPropDamaged();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBZipper_Hide_C">();
	}
	static class ABP_AJBZipper_Hide_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBZipper_Hide_C>();
	}
};
static_assert(alignof(ABP_AJBZipper_Hide_C) == 0x000008, "Wrong alignment on ABP_AJBZipper_Hide_C");
static_assert(sizeof(ABP_AJBZipper_Hide_C) == 0x000420, "Wrong size on ABP_AJBZipper_Hide_C");
static_assert(offsetof(ABP_AJBZipper_Hide_C, UberGraphFrame_BP_AJBZipper_Hide_C) == 0x0003C8, "Member 'ABP_AJBZipper_Hide_C::UberGraphFrame_BP_AJBZipper_Hide_C' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Hide_C, SM_ZipperPlane) == 0x0003D0, "Member 'ABP_AJBZipper_Hide_C::SM_ZipperPlane' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Hide_C, EmitterSpawnPoint) == 0x0003D8, "Member 'ABP_AJBZipper_Hide_C::EmitterSpawnPoint' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Hide_C, Rep_InteractableCharacter) == 0x0003E0, "Member 'ABP_AJBZipper_Hide_C::Rep_InteractableCharacter' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Hide_C, bRep_Hiding) == 0x0003E8, "Member 'ABP_AJBZipper_Hide_C::bRep_Hiding' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Hide_C, Rep_AttachedActor) == 0x0003F0, "Member 'ABP_AJBZipper_Hide_C::Rep_AttachedActor' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Hide_C, Rep_AttachedComponent) == 0x0003F8, "Member 'ABP_AJBZipper_Hide_C::Rep_AttachedComponent' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Hide_C, DamageDetectionRadiusS) == 0x000400, "Member 'ABP_AJBZipper_Hide_C::DamageDetectionRadiusS' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Hide_C, DamageDetectionRadiusM) == 0x000404, "Member 'ABP_AJBZipper_Hide_C::DamageDetectionRadiusM' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Hide_C, DamageDetectionRadiusL) == 0x000408, "Member 'ABP_AJBZipper_Hide_C::DamageDetectionRadiusL' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Hide_C, Server_DamageDetector) == 0x000410, "Member 'ABP_AJBZipper_Hide_C::Server_DamageDetector' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Hide_C, bSphereDamageDetected) == 0x000418, "Member 'ABP_AJBZipper_Hide_C::bSphereDamageDetected' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Hide_C, bLocal_HidingStarted) == 0x000419, "Member 'ABP_AJBZipper_Hide_C::bLocal_HidingStarted' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Hide_C, bCharacterCreatedZipper) == 0x00041A, "Member 'ABP_AJBZipper_Hide_C::bCharacterCreatedZipper' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Hide_C, bDuringTheWorld) == 0x00041B, "Member 'ABP_AJBZipper_Hide_C::bDuringTheWorld' has a wrong offset!");

}


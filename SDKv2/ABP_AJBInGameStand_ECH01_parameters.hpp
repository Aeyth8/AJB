#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_AJBInGameStand_ECH01

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_AJBInGameStand_ECH01.ABP_AJBInGameStand_ECH01_C.ExecuteUbergraph_ABP_AJBInGameStand_ECH01
// 0x0190 (0x0190 - 0x0000)
struct ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_ECH_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_ECH;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x0064(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0088(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsForwardTransition_ReturnValue;          // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB[0x1];                                       // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTailStretching_Result;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTailLaunching_Result;                   // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     CallFunc_CalcSplineIKPointTransforms_Result;       // 0x00D8(0x0010)(ZeroConstructor, ReferenceParm)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0124(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0130(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x013C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x014C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_158[0x8];                                      // 0x0158(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01) == 0x000010, "Wrong alignment on ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01");
static_assert(sizeof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01) == 0x000190, "Wrong size on ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, EntryPoint) == 0x000000, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, Temp_bool_Variable) == 0x00000C, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, Temp_float_Variable) == 0x000010, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, K2Node_Event_DeltaTimeX) == 0x000014, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_GetOwningActor_ReturnValue) == 0x000018, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_ECH) == 0x000020, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_ECH' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_InverseTransformDirection_ReturnValue) == 0x000064, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_BreakVector_X) == 0x000070, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_BreakVector_Y) == 0x000074, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_BreakVector_Z) == 0x000078, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_IsValid_ReturnValue) == 0x00007C, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000080, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000084, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000088, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_GetOwner_ReturnValue) == 0x000098, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x0000A0, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, K2Node_DynamicCast_bSuccess1) == 0x0000A8, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_IsForwardTransition_ReturnValue) == 0x0000A9, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_IsForwardTransition_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_IsValid_ReturnValue1) == 0x0000AA, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_RandomFloat_ReturnValue) == 0x0000AC, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_Not_PreBool_ReturnValue1) == 0x0000B0, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000B4, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_BooleanAND_ReturnValue) == 0x0000B8, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000BC, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, Temp_int_Array_Index_Variable) == 0x0000C0, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_IsTailStretching_Result) == 0x0000C4, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_IsTailStretching_Result' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_IsTailLaunching_Result) == 0x0000C5, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_IsTailLaunching_Result' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, Temp_float_Variable1) == 0x0000CC, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, K2Node_Select_Default) == 0x0000D0, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_CalcSplineIKPointTransforms_Result) == 0x0000D8, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_CalcSplineIKPointTransforms_Result' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_Array_Length_ReturnValue1) == 0x000120, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_BreakTransform_Location) == 0x000124, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_BreakTransform_Rotation) == 0x000130, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_BreakTransform_Scale) == 0x00013C, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_Less_IntInt_ReturnValue) == 0x000148, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00014C, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01, CallFunc_MakeTransform_ReturnValue) == 0x000160, "Member 'ABP_AJBInGameStand_ECH01_C_ExecuteUbergraph_ABP_AJBInGameStand_ECH01::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function ABP_AJBInGameStand_ECH01.ABP_AJBInGameStand_ECH01_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_AJBInGameStand_ECH01_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_AJBInGameStand_ECH01_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_AJBInGameStand_ECH01_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_AJBInGameStand_ECH01_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_AJBInGameStand_ECH01_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_AJBInGameStand_ECH01_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_AJBInGameStand_ECH01.ABP_AJBInGameStand_ECH01_C.TryGetCloseRangeSkillComp
// 0x0038 (0x0038 - 0x0000)
struct ABP_AJBInGameStand_ECH01_C_TryGetCloseRangeSkillComp final
{
public:
	class UBP_AJBCloseRangeSkill_C*               CloseRangeSkillComp;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBTailRushSkill_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_AJBInGameStand_ECH01_C_TryGetCloseRangeSkillComp) == 0x000008, "Wrong alignment on ABP_AJBInGameStand_ECH01_C_TryGetCloseRangeSkillComp");
static_assert(sizeof(ABP_AJBInGameStand_ECH01_C_TryGetCloseRangeSkillComp) == 0x000038, "Wrong size on ABP_AJBInGameStand_ECH01_C_TryGetCloseRangeSkillComp");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_TryGetCloseRangeSkillComp, CloseRangeSkillComp) == 0x000000, "Member 'ABP_AJBInGameStand_ECH01_C_TryGetCloseRangeSkillComp::CloseRangeSkillComp' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_TryGetCloseRangeSkillComp, CallFunc_GetOwningActor_ReturnValue) == 0x000008, "Member 'ABP_AJBInGameStand_ECH01_C_TryGetCloseRangeSkillComp::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_TryGetCloseRangeSkillComp, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ABP_AJBInGameStand_ECH01_C_TryGetCloseRangeSkillComp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_TryGetCloseRangeSkillComp, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'ABP_AJBInGameStand_ECH01_C_TryGetCloseRangeSkillComp::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_TryGetCloseRangeSkillComp, CallFunc_IsValid_ReturnValue1) == 0x000020, "Member 'ABP_AJBInGameStand_ECH01_C_TryGetCloseRangeSkillComp::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_TryGetCloseRangeSkillComp, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'ABP_AJBInGameStand_ECH01_C_TryGetCloseRangeSkillComp::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_TryGetCloseRangeSkillComp, CallFunc_IsValid_ReturnValue2) == 0x000030, "Member 'ABP_AJBInGameStand_ECH01_C_TryGetCloseRangeSkillComp::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function ABP_AJBInGameStand_ECH01.ABP_AJBInGameStand_ECH01_C.IsTailStretching
// 0x0018 (0x0018 - 0x0000)
struct ABP_AJBInGameStand_ECH01_C_IsTailStretching final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESkillState_CloseRange                        Temp_byte_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBCloseRangeSkill_C*               CallFunc_TryGetCloseRangeSkillComp_CloseRangeSkillComp; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillActive_ReturnValue;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_AJBInGameStand_ECH01_C_IsTailStretching) == 0x000008, "Wrong alignment on ABP_AJBInGameStand_ECH01_C_IsTailStretching");
static_assert(sizeof(ABP_AJBInGameStand_ECH01_C_IsTailStretching) == 0x000018, "Wrong size on ABP_AJBInGameStand_ECH01_C_IsTailStretching");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailStretching, Result) == 0x000000, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailStretching::Result' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailStretching, Temp_bool_Variable) == 0x000001, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailStretching::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailStretching, Temp_bool_Variable1) == 0x000002, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailStretching::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailStretching, Temp_bool_Variable2) == 0x000003, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailStretching::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailStretching, Temp_bool_Variable3) == 0x000004, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailStretching::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailStretching, Temp_bool_Variable4) == 0x000005, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailStretching::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailStretching, Temp_byte_Variable) == 0x000006, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailStretching::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailStretching, CallFunc_TryGetCloseRangeSkillComp_CloseRangeSkillComp) == 0x000008, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailStretching::CallFunc_TryGetCloseRangeSkillComp_CloseRangeSkillComp' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailStretching, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailStretching::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailStretching, CallFunc_GetValidValue_ReturnValue) == 0x000011, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailStretching::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailStretching, CallFunc_IsSkillActive_ReturnValue) == 0x000012, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailStretching::CallFunc_IsSkillActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailStretching, K2Node_Select_Default) == 0x000013, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailStretching::K2Node_Select_Default' has a wrong offset!");

// Function ABP_AJBInGameStand_ECH01.ABP_AJBInGameStand_ECH01_C.IsTailLaunching
// 0x0018 (0x0018 - 0x0000)
struct ABP_AJBInGameStand_ECH01_C_IsTailLaunching final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESkillState_CloseRange                        Temp_byte_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBCloseRangeSkill_C*               CallFunc_TryGetCloseRangeSkillComp_CloseRangeSkillComp; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillActive_ReturnValue;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_AJBInGameStand_ECH01_C_IsTailLaunching) == 0x000008, "Wrong alignment on ABP_AJBInGameStand_ECH01_C_IsTailLaunching");
static_assert(sizeof(ABP_AJBInGameStand_ECH01_C_IsTailLaunching) == 0x000018, "Wrong size on ABP_AJBInGameStand_ECH01_C_IsTailLaunching");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailLaunching, Result) == 0x000000, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailLaunching::Result' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailLaunching, Temp_bool_Variable) == 0x000001, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailLaunching::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailLaunching, Temp_bool_Variable1) == 0x000002, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailLaunching::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailLaunching, Temp_bool_Variable2) == 0x000003, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailLaunching::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailLaunching, Temp_bool_Variable3) == 0x000004, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailLaunching::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailLaunching, Temp_bool_Variable4) == 0x000005, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailLaunching::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailLaunching, Temp_byte_Variable) == 0x000006, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailLaunching::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailLaunching, CallFunc_TryGetCloseRangeSkillComp_CloseRangeSkillComp) == 0x000008, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailLaunching::CallFunc_TryGetCloseRangeSkillComp_CloseRangeSkillComp' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailLaunching, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailLaunching::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailLaunching, CallFunc_GetValidValue_ReturnValue) == 0x000011, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailLaunching::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailLaunching, CallFunc_IsSkillActive_ReturnValue) == 0x000012, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailLaunching::CallFunc_IsSkillActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_ECH01_C_IsTailLaunching, K2Node_Select_Default) == 0x000013, "Member 'ABP_AJBInGameStand_ECH01_C_IsTailLaunching::K2Node_Select_Default' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Rarity

#include "Basic.hpp"


namespace SDK::Params
{

// Function WB_Rarity.WB_Rarity_C.ExecuteUbergraph_WB_Rarity
// 0x0040 (0x0040 - 0x0000)
struct WB_Rarity_C_ExecuteUbergraph_WB_Rarity final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Rare;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWB_EmptyStar_C*>                K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_EmptyStar_C*                        CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Rarity_C_ExecuteUbergraph_WB_Rarity) == 0x000008, "Wrong alignment on WB_Rarity_C_ExecuteUbergraph_WB_Rarity");
static_assert(sizeof(WB_Rarity_C_ExecuteUbergraph_WB_Rarity) == 0x000040, "Wrong size on WB_Rarity_C_ExecuteUbergraph_WB_Rarity");
static_assert(offsetof(WB_Rarity_C_ExecuteUbergraph_WB_Rarity, EntryPoint) == 0x000000, "Member 'WB_Rarity_C_ExecuteUbergraph_WB_Rarity::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Rarity_C_ExecuteUbergraph_WB_Rarity, K2Node_CustomEvent_Rare) == 0x000004, "Member 'WB_Rarity_C_ExecuteUbergraph_WB_Rarity::K2Node_CustomEvent_Rare' has a wrong offset!");
static_assert(offsetof(WB_Rarity_C_ExecuteUbergraph_WB_Rarity, K2Node_MakeArray_Array) == 0x000008, "Member 'WB_Rarity_C_ExecuteUbergraph_WB_Rarity::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_Rarity_C_ExecuteUbergraph_WB_Rarity, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WB_Rarity_C_ExecuteUbergraph_WB_Rarity::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Rarity_C_ExecuteUbergraph_WB_Rarity, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WB_Rarity_C_ExecuteUbergraph_WB_Rarity::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_Rarity_C_ExecuteUbergraph_WB_Rarity, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'WB_Rarity_C_ExecuteUbergraph_WB_Rarity::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Rarity_C_ExecuteUbergraph_WB_Rarity, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'WB_Rarity_C_ExecuteUbergraph_WB_Rarity::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Rarity_C_ExecuteUbergraph_WB_Rarity, Temp_int_Array_Index_Variable) == 0x000028, "Member 'WB_Rarity_C_ExecuteUbergraph_WB_Rarity::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_Rarity_C_ExecuteUbergraph_WB_Rarity, K2Node_Event_IsDesignTime) == 0x00002C, "Member 'WB_Rarity_C_ExecuteUbergraph_WB_Rarity::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_Rarity_C_ExecuteUbergraph_WB_Rarity, CallFunc_Array_Get_Item) == 0x000030, "Member 'WB_Rarity_C_ExecuteUbergraph_WB_Rarity::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_Rarity_C_ExecuteUbergraph_WB_Rarity, CallFunc_Less_IntInt_ReturnValue1) == 0x000038, "Member 'WB_Rarity_C_ExecuteUbergraph_WB_Rarity::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");

// Function WB_Rarity.WB_Rarity_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_Rarity_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Rarity_C_PreConstruct) == 0x000001, "Wrong alignment on WB_Rarity_C_PreConstruct");
static_assert(sizeof(WB_Rarity_C_PreConstruct) == 0x000001, "Wrong size on WB_Rarity_C_PreConstruct");
static_assert(offsetof(WB_Rarity_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_Rarity_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_Rarity.WB_Rarity_C.UpdateRera
// 0x0004 (0x0004 - 0x0000)
struct WB_Rarity_C_UpdateRera final
{
public:
	int32                                         Rare;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Rarity_C_UpdateRera) == 0x000004, "Wrong alignment on WB_Rarity_C_UpdateRera");
static_assert(sizeof(WB_Rarity_C_UpdateRera) == 0x000004, "Wrong size on WB_Rarity_C_UpdateRera");
static_assert(offsetof(WB_Rarity_C_UpdateRera, Rare) == 0x000000, "Member 'WB_Rarity_C_UpdateRera::Rare' has a wrong offset!");

}


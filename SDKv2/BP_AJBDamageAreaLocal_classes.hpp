#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBDamageAreaLocal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C
// 0x0098 (0x0188 - 0x00F0)
class UBP_AJBDamageAreaLocal_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F0(0x0008)(Transient, DuplicateTransient)
	float                                         CurrentRadius;                                     // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentLocation;                                   // 0x00FC(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBDamageAreaContext_C*             ContextRef;                                        // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnPreAnnounceReduction;                            // 0x0110(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnStartReduction;                                  // 0x0120(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnProceedReduction;                                // 0x0130(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnCompletedReduction;                              // 0x0140(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnCompletedSetup;                                  // 0x0150(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bReadyToStartSetup;                                // 0x0160(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsVanished;                                       // 0x0161(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bOpenedGame;                                       // 0x0162(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_163[0x1];                                      // 0x0163(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentIntervalIndex_ForRepCheck;                  // 0x0164(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnVanish;                                          // 0x0168(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         CurrentIntervalIndex_CurrentTiming;                // 0x0178(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VanishedTimeSeconds;                               // 0x017C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastCompletedTimeSeconds;                          // 0x0180(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnPreAnnounceReduction__DelegateSignature(int32 Timespan_Until_Start_Reduction);
	void OnStartReduction__DelegateSignature();
	void OnProceedReduction__DelegateSignature(float Radius, const struct FVector& Location, float RemainingTime);
	void OnCompletedReduction__DelegateSignature();
	void OnCompletedSetup__DelegateSignature(float Radius, const struct FVector& Location);
	void OnVanish__DelegateSignature();
	void ExecuteUbergraph_BP_AJBDamageAreaLocal(int32 EntryPoint);
	void OnIntervalSetupCompleted(float BaseRadius, const struct FVector& BaseLocation, bool DisableReduction);
	void OnRestart(float BaseRadius, const struct FVector& BaseLocation);
	void OnStart();
	void OnStop();
	void StartTickInterval();
	void StopTickInterval();
	void Vanish();
	void PlayEmergencySE();
	void OnIntervalCompleted();
	void CompleteReduction();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	bool InDamageArea(const struct FVector& Location, float LocationOffset);
	void GetCurrentSafeArea(float* Radius, struct FVector* Location);
	void GetTargetSafeArea(float* Radius, struct FVector* Location);
	float GetCurrentDamageValue();
	float GetIntervalTimeOfApplyingDamage();
	bool DamageAreaAvailable();
	bool IsProceedingReduction();
	void GetTimeSecondsUntilStartReduction(int32* Seconds);
	void GetTimeSecondsUntilCompleteReduction(int32* Seconds);
	bool IsAllReductionCompleted();
	int32 GetTimeSecondsTotalInterval();
	bool IsNotPreAnnounced();
	bool InTargetArea(const struct FVector& Location, float LocationOffset);
	void Exists(bool* bExists);
	void IntervalIndexCurrentTiming(int32* CurrentIntervalIndex_CurrentTiming_0);
	int32 RestOfIntervalCountCurrentTiming();
	bool IsDamageAreaActive();
	void IsVanished(bool* bIsVanished_0);
	void GetAdvanceSafeArea(bool* bExistAdvanceSafeArea, float* Radius, struct FVector* Location);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBDamageAreaLocal_C">();
	}
	static class UBP_AJBDamageAreaLocal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBDamageAreaLocal_C>();
	}
};
static_assert(alignof(UBP_AJBDamageAreaLocal_C) == 0x000008, "Wrong alignment on UBP_AJBDamageAreaLocal_C");
static_assert(sizeof(UBP_AJBDamageAreaLocal_C) == 0x000188, "Wrong size on UBP_AJBDamageAreaLocal_C");
static_assert(offsetof(UBP_AJBDamageAreaLocal_C, UberGraphFrame) == 0x0000F0, "Member 'UBP_AJBDamageAreaLocal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaLocal_C, CurrentRadius) == 0x0000F8, "Member 'UBP_AJBDamageAreaLocal_C::CurrentRadius' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaLocal_C, CurrentLocation) == 0x0000FC, "Member 'UBP_AJBDamageAreaLocal_C::CurrentLocation' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaLocal_C, ContextRef) == 0x000108, "Member 'UBP_AJBDamageAreaLocal_C::ContextRef' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaLocal_C, OnPreAnnounceReduction) == 0x000110, "Member 'UBP_AJBDamageAreaLocal_C::OnPreAnnounceReduction' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaLocal_C, OnStartReduction) == 0x000120, "Member 'UBP_AJBDamageAreaLocal_C::OnStartReduction' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaLocal_C, OnProceedReduction) == 0x000130, "Member 'UBP_AJBDamageAreaLocal_C::OnProceedReduction' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaLocal_C, OnCompletedReduction) == 0x000140, "Member 'UBP_AJBDamageAreaLocal_C::OnCompletedReduction' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaLocal_C, OnCompletedSetup) == 0x000150, "Member 'UBP_AJBDamageAreaLocal_C::OnCompletedSetup' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaLocal_C, bReadyToStartSetup) == 0x000160, "Member 'UBP_AJBDamageAreaLocal_C::bReadyToStartSetup' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaLocal_C, bIsVanished) == 0x000161, "Member 'UBP_AJBDamageAreaLocal_C::bIsVanished' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaLocal_C, bOpenedGame) == 0x000162, "Member 'UBP_AJBDamageAreaLocal_C::bOpenedGame' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaLocal_C, CurrentIntervalIndex_ForRepCheck) == 0x000164, "Member 'UBP_AJBDamageAreaLocal_C::CurrentIntervalIndex_ForRepCheck' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaLocal_C, OnVanish) == 0x000168, "Member 'UBP_AJBDamageAreaLocal_C::OnVanish' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaLocal_C, CurrentIntervalIndex_CurrentTiming) == 0x000178, "Member 'UBP_AJBDamageAreaLocal_C::CurrentIntervalIndex_CurrentTiming' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaLocal_C, VanishedTimeSeconds) == 0x00017C, "Member 'UBP_AJBDamageAreaLocal_C::VanishedTimeSeconds' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaLocal_C, LastCompletedTimeSeconds) == 0x000180, "Member 'UBP_AJBDamageAreaLocal_C::LastCompletedTimeSeconds' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUDCountDownTimerWrapper

#include "Basic.hpp"

#include "BP_HUDCountDownTimerWrapper_classes.hpp"
#include "BP_HUDCountDownTimerWrapper_parameters.hpp"


namespace SDK
{

// Function BP_HUDCountDownTimerWrapper.BP_HUDCountDownTimerWrapper_C.OnCountExpired__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_HUDCountDownTimerWrapper_C::OnCountExpired__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUDCountDownTimerWrapper_C", "OnCountExpired__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUDCountDownTimerWrapper.BP_HUDCountDownTimerWrapper_C.ExecuteUbergraph_BP_HUDCountDownTimerWrapper
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUDCountDownTimerWrapper_C::ExecuteUbergraph_BP_HUDCountDownTimerWrapper(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUDCountDownTimerWrapper_C", "ExecuteUbergraph_BP_HUDCountDownTimerWrapper");

	Params::BP_HUDCountDownTimerWrapper_C_ExecuteUbergraph_BP_HUDCountDownTimerWrapper Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUDCountDownTimerWrapper.BP_HUDCountDownTimerWrapper_C.SetVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsVisible                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUDCountDownTimerWrapper_C::SetVisibility(bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUDCountDownTimerWrapper_C", "SetVisibility");

	Params::BP_HUDCountDownTimerWrapper_C_SetVisibility Parms{};

	Parms.IsVisible = IsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUDCountDownTimerWrapper.BP_HUDCountDownTimerWrapper_C.RequestResume
// (BlueprintCallable, BlueprintEvent)

void UBP_HUDCountDownTimerWrapper_C::RequestResume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUDCountDownTimerWrapper_C", "RequestResume");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUDCountDownTimerWrapper.BP_HUDCountDownTimerWrapper_C.RequestSuspend
// (BlueprintCallable, BlueprintEvent)

void UBP_HUDCountDownTimerWrapper_C::RequestSuspend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUDCountDownTimerWrapper_C", "RequestSuspend");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUDCountDownTimerWrapper.BP_HUDCountDownTimerWrapper_C.UpdateTime
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUDCountDownTimerWrapper_C::UpdateTime(float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUDCountDownTimerWrapper_C", "UpdateTime");

	Params::BP_HUDCountDownTimerWrapper_C_UpdateTime Parms{};

	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUDCountDownTimerWrapper.BP_HUDCountDownTimerWrapper_C.Init
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   MaxTime_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAJBHUDBase*                      AJBHUDBase_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUDCountDownTimerWrapper_C::Init(float MaxTime_0, class AAJBHUDBase* AJBHUDBase_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUDCountDownTimerWrapper_C", "Init");

	Params::BP_HUDCountDownTimerWrapper_C_Init Parms{};

	Parms.MaxTime_0 = MaxTime_0;
	Parms.AJBHUDBase_0 = AJBHUDBase_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUDCountDownTimerWrapper.BP_HUDCountDownTimerWrapper_C.GetAJBHUDBase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AAJBHUDBase*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class AAJBHUDBase* UBP_HUDCountDownTimerWrapper_C::GetAJBHUDBase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUDCountDownTimerWrapper_C", "GetAJBHUDBase");

	Params::BP_HUDCountDownTimerWrapper_C_GetAJBHUDBase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_HUDCountDownTimerWrapper.BP_HUDCountDownTimerWrapper_C.GetMaxTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBP_HUDCountDownTimerWrapper_C::GetMaxTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUDCountDownTimerWrapper_C", "GetMaxTime");

	Params::BP_HUDCountDownTimerWrapper_C_GetMaxTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_HUDCountDownTimerWrapper.BP_HUDCountDownTimerWrapper_C.GetCurrentTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBP_HUDCountDownTimerWrapper_C::GetCurrentTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUDCountDownTimerWrapper_C", "GetCurrentTime");

	Params::BP_HUDCountDownTimerWrapper_C_GetCurrentTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_HUDCountDownTimerWrapper.BP_HUDCountDownTimerWrapper_C.IsSuspended
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_HUDCountDownTimerWrapper_C::IsSuspended()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUDCountDownTimerWrapper_C", "IsSuspended");

	Params::BP_HUDCountDownTimerWrapper_C_IsSuspended Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterMoveEffectEvent

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_CharacterMoveEffectEvent.BP_CharacterMoveEffectEvent_C.ExecuteUbergraph_BP_CharacterMoveEffectEvent
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterMoveEffectEvent_C_ExecuteUbergraph_BP_CharacterMoveEffectEvent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterMoveEffectEvent_C_ExecuteUbergraph_BP_CharacterMoveEffectEvent) == 0x000008, "Wrong alignment on BP_CharacterMoveEffectEvent_C_ExecuteUbergraph_BP_CharacterMoveEffectEvent");
static_assert(sizeof(BP_CharacterMoveEffectEvent_C_ExecuteUbergraph_BP_CharacterMoveEffectEvent) == 0x000020, "Wrong size on BP_CharacterMoveEffectEvent_C_ExecuteUbergraph_BP_CharacterMoveEffectEvent");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_ExecuteUbergraph_BP_CharacterMoveEffectEvent, EntryPoint) == 0x000000, "Member 'BP_CharacterMoveEffectEvent_C_ExecuteUbergraph_BP_CharacterMoveEffectEvent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_ExecuteUbergraph_BP_CharacterMoveEffectEvent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_CharacterMoveEffectEvent_C_ExecuteUbergraph_BP_CharacterMoveEffectEvent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_ExecuteUbergraph_BP_CharacterMoveEffectEvent, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_CharacterMoveEffectEvent_C_ExecuteUbergraph_BP_CharacterMoveEffectEvent::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_ExecuteUbergraph_BP_CharacterMoveEffectEvent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CharacterMoveEffectEvent_C_ExecuteUbergraph_BP_CharacterMoveEffectEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_ExecuteUbergraph_BP_CharacterMoveEffectEvent, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_CharacterMoveEffectEvent_C_ExecuteUbergraph_BP_CharacterMoveEffectEvent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_ExecuteUbergraph_BP_CharacterMoveEffectEvent, K2Node_Event_DeltaSeconds) == 0x00001C, "Member 'BP_CharacterMoveEffectEvent_C_ExecuteUbergraph_BP_CharacterMoveEffectEvent::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_CharacterMoveEffectEvent.BP_CharacterMoveEffectEvent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_CharacterMoveEffectEvent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterMoveEffectEvent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_CharacterMoveEffectEvent_C_ReceiveTick");
static_assert(sizeof(BP_CharacterMoveEffectEvent_C_ReceiveTick) == 0x000004, "Wrong size on BP_CharacterMoveEffectEvent_C_ReceiveTick");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_CharacterMoveEffectEvent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_CharacterMoveEffectEvent.BP_CharacterMoveEffectEvent_C.RequestGionOwnerLocation
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterMoveEffectEvent_C_RequestGionOwnerLocation final
{
public:
	struct FGameplayTag                           EffectType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocalOnly;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterMoveEffectEvent_C_RequestGionOwnerLocation) == 0x000008, "Wrong alignment on BP_CharacterMoveEffectEvent_C_RequestGionOwnerLocation");
static_assert(sizeof(BP_CharacterMoveEffectEvent_C_RequestGionOwnerLocation) == 0x000010, "Wrong size on BP_CharacterMoveEffectEvent_C_RequestGionOwnerLocation");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_RequestGionOwnerLocation, EffectType) == 0x000000, "Member 'BP_CharacterMoveEffectEvent_C_RequestGionOwnerLocation::EffectType' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_RequestGionOwnerLocation, IsLocalOnly) == 0x000008, "Member 'BP_CharacterMoveEffectEvent_C_RequestGionOwnerLocation::IsLocalOnly' has a wrong offset!");

// Function BP_CharacterMoveEffectEvent.BP_CharacterMoveEffectEvent_C.UpdateMoveEffect
// 0x0050 (0x0050 - 0x0000)
struct BP_CharacterMoveEffectEvent_C_UpdateMoveEffect final
{
public:
	class ABP_AJBInGameCharacter_C*               OwnerCharacter;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue;     // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCrouching_ReturnValue;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterMoveEffectEvent_C_UpdateMoveEffect) == 0x000008, "Wrong alignment on BP_CharacterMoveEffectEvent_C_UpdateMoveEffect");
static_assert(sizeof(BP_CharacterMoveEffectEvent_C_UpdateMoveEffect) == 0x000050, "Wrong size on BP_CharacterMoveEffectEvent_C_UpdateMoveEffect");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_UpdateMoveEffect, OwnerCharacter) == 0x000000, "Member 'BP_CharacterMoveEffectEvent_C_UpdateMoveEffect::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_UpdateMoveEffect, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_CharacterMoveEffectEvent_C_UpdateMoveEffect::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_UpdateMoveEffect, CallFunc_CharacterBehaviorMatches_ReturnValue) == 0x000014, "Member 'BP_CharacterMoveEffectEvent_C_UpdateMoveEffect::CallFunc_CharacterBehaviorMatches_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_UpdateMoveEffect, CallFunc_IsCrouching_ReturnValue) == 0x000015, "Member 'BP_CharacterMoveEffectEvent_C_UpdateMoveEffect::CallFunc_IsCrouching_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_UpdateMoveEffect, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000018, "Member 'BP_CharacterMoveEffectEvent_C_UpdateMoveEffect::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_UpdateMoveEffect, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'BP_CharacterMoveEffectEvent_C_UpdateMoveEffect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_UpdateMoveEffect, CallFunc_IsFalling_ReturnValue) == 0x000025, "Member 'BP_CharacterMoveEffectEvent_C_UpdateMoveEffect::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_UpdateMoveEffect, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000028, "Member 'BP_CharacterMoveEffectEvent_C_UpdateMoveEffect::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_UpdateMoveEffect, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000034, "Member 'BP_CharacterMoveEffectEvent_C_UpdateMoveEffect::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_UpdateMoveEffect, CallFunc_BooleanAND_ReturnValue) == 0x000035, "Member 'BP_CharacterMoveEffectEvent_C_UpdateMoveEffect::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_UpdateMoveEffect, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000038, "Member 'BP_CharacterMoveEffectEvent_C_UpdateMoveEffect::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_UpdateMoveEffect, CallFunc_VSize_ReturnValue) == 0x000044, "Member 'BP_CharacterMoveEffectEvent_C_UpdateMoveEffect::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_UpdateMoveEffect, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_CharacterMoveEffectEvent_C_UpdateMoveEffect::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_UpdateMoveEffect, CallFunc_BooleanAND_ReturnValue1) == 0x000049, "Member 'BP_CharacterMoveEffectEvent_C_UpdateMoveEffect::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function BP_CharacterMoveEffectEvent.BP_CharacterMoveEffectEvent_C.RequestAIGionOwnerLocation
// 0x0028 (0x0028 - 0x0000)
struct BP_CharacterMoveEffectEvent_C_RequestAIGionOwnerLocation final
{
public:
	struct FGameplayTag                           EffectType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterMoveEffectEvent_C_RequestAIGionOwnerLocation) == 0x000008, "Wrong alignment on BP_CharacterMoveEffectEvent_C_RequestAIGionOwnerLocation");
static_assert(sizeof(BP_CharacterMoveEffectEvent_C_RequestAIGionOwnerLocation) == 0x000028, "Wrong size on BP_CharacterMoveEffectEvent_C_RequestAIGionOwnerLocation");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_RequestAIGionOwnerLocation, EffectType) == 0x000000, "Member 'BP_CharacterMoveEffectEvent_C_RequestAIGionOwnerLocation::EffectType' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_RequestAIGionOwnerLocation, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_CharacterMoveEffectEvent_C_RequestAIGionOwnerLocation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_RequestAIGionOwnerLocation, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_CharacterMoveEffectEvent_C_RequestAIGionOwnerLocation::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_RequestAIGionOwnerLocation, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CharacterMoveEffectEvent_C_RequestAIGionOwnerLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterMoveEffectEvent_C_RequestAIGionOwnerLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00001C, "Member 'BP_CharacterMoveEffectEvent_C_RequestAIGionOwnerLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

}


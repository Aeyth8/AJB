#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBActionLogSender

#include "Basic.hpp"

#include "BP_AJBActionLogSender_classes.hpp"
#include "BP_AJBActionLogSender_parameters.hpp"


namespace SDK
{

// Function BP_AJBActionLogSender.BP_AJBActionLogSender_C.ExecuteUbergraph_BP_AJBActionLogSender
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBActionLogSender_C::ExecuteUbergraph_BP_AJBActionLogSender(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionLogSender_C", "ExecuteUbergraph_BP_AJBActionLogSender");

	Params::BP_AJBActionLogSender_C_ExecuteUbergraph_BP_AJBActionLogSender Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBActionLogSender.BP_AJBActionLogSender_C.BindOwnerActorEventsLocallyControlledOnly
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBActionLogSender_C::BindOwnerActorEventsLocallyControlledOnly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionLogSender_C", "BindOwnerActorEventsLocallyControlledOnly");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBActionLogSender.BP_AJBActionLogSender_C.MC_SendMessage
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MessageType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value1                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value2                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBActionLogSender_C::MC_SendMessage(int32 MessageType, float Value1, float Value2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionLogSender_C", "MC_SendMessage");

	Params::BP_AJBActionLogSender_C_MC_SendMessage Parms{};

	Parms.MessageType = MessageType;
	Parms.Value1 = Value1;
	Parms.Value2 = Value2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBActionLogSender.BP_AJBActionLogSender_C.AllPlayerSendMessage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MessageType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value1                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value2                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBActionLogSender_C::AllPlayerSendMessage(int32 MessageType, float Value1, float Value2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionLogSender_C", "AllPlayerSendMessage");

	Params::BP_AJBActionLogSender_C_AllPlayerSendMessage Parms{};

	Parms.MessageType = MessageType;
	Parms.Value1 = Value1;
	Parms.Value2 = Value2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBActionLogSender.BP_AJBActionLogSender_C.BindOwnerActorEventsServerOnly
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBActionLogSender_C::BindOwnerActorEventsServerOnly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionLogSender_C", "BindOwnerActorEventsServerOnly");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBActionLogSender.BP_AJBActionLogSender_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBActionLogSender_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionLogSender_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBActionLogSender.BP_AJBActionLogSender_C.MakeMessageTextByActionLog
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ActionLogType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Result                                                 (Parm, OutParm)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBActionLogSender_C::MakeMessageTextByActionLog(int32 ActionLogType, class FText* Result, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBActionLogSender_C", "MakeMessageTextByActionLog");

	Params::BP_AJBActionLogSender_C_MakeMessageTextByActionLog Parms{};

	Parms.ActionLogType = ActionLogType;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}

}


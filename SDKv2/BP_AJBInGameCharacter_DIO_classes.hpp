#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameCharacter_DIO

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AJBInGameCharacter_classes.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBInGameCharacter_DIO.BP_AJBInGameCharacter_DIO_C
// 0x0030 (0x1660 - 0x1630)
class ABP_AJBInGameCharacter_DIO_C final : public ABP_AJBInGameCharacter_C
{
public:
	uint8                                         Pad_1621[0x7];                                     // 0x1621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBInGameCharacter_DIO_C;        // 0x1628(0x0008)(Transient, DuplicateTransient)
	class UBP_AJBGlimpseOfForceSkill_C*           BP_AJBGlimpseOfForceSkill;                         // 0x1630(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BlockingBox;                                       // 0x1638(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBTheWorldWLDSkill_C*              BP_AJBTheWorldWLDSkill;                            // 0x1640(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBMudaRushWLDSill_C*               BP_AJBMudaRushWLDSill;                             // 0x1648(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBAccompanyWLDSkill_C*             BP_AJBAccompanyWLDSkill;                           // 0x1650(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseGlimpseOfForce;                                // 0x1658(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_AJBInGameCharacter_DIO(int32 EntryPoint);
	void PressedButton_ActiveBase();
	void ReleasedButton_ActiveSpecial();
	void PressedButton_ActiveSpecial();
	void PressedButton_Ultimate();
	void ReleasedButton_Basic();
	void PressedButton_Basic();
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void OnGainSupportSkillServer();
	void UserConstructionScript();
	void OnBeforeInteract(bool* bShouldInteract);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBInGameCharacter_DIO_C">();
	}
	static class ABP_AJBInGameCharacter_DIO_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBInGameCharacter_DIO_C>();
	}
};
static_assert(alignof(ABP_AJBInGameCharacter_DIO_C) == 0x000010, "Wrong alignment on ABP_AJBInGameCharacter_DIO_C");
static_assert(sizeof(ABP_AJBInGameCharacter_DIO_C) == 0x001660, "Wrong size on ABP_AJBInGameCharacter_DIO_C");
static_assert(offsetof(ABP_AJBInGameCharacter_DIO_C, UberGraphFrame_BP_AJBInGameCharacter_DIO_C) == 0x001628, "Member 'ABP_AJBInGameCharacter_DIO_C::UberGraphFrame_BP_AJBInGameCharacter_DIO_C' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_DIO_C, BP_AJBGlimpseOfForceSkill) == 0x001630, "Member 'ABP_AJBInGameCharacter_DIO_C::BP_AJBGlimpseOfForceSkill' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_DIO_C, BlockingBox) == 0x001638, "Member 'ABP_AJBInGameCharacter_DIO_C::BlockingBox' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_DIO_C, BP_AJBTheWorldWLDSkill) == 0x001640, "Member 'ABP_AJBInGameCharacter_DIO_C::BP_AJBTheWorldWLDSkill' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_DIO_C, BP_AJBMudaRushWLDSill) == 0x001648, "Member 'ABP_AJBInGameCharacter_DIO_C::BP_AJBMudaRushWLDSill' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_DIO_C, BP_AJBAccompanyWLDSkill) == 0x001650, "Member 'ABP_AJBInGameCharacter_DIO_C::BP_AJBAccompanyWLDSkill' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_DIO_C, bUseGlimpseOfForce) == 0x001658, "Member 'ABP_AJBInGameCharacter_DIO_C::bUseGlimpseOfForce' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameStandPart_STFArm

#include "Basic.hpp"

#include "E_SFGArmType_structs.hpp"
#include "ST_CharaSkin_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameStandPart_STFArm.BP_AJBInGameStandPart_STFArm_C.ExecuteUbergraph_BP_AJBInGameStandPart_STFArm
// 0x0108 (0x0108 - 0x0000)
struct BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SFGArmType                                  K2Node_CustomEvent_ArmType;                        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_StandName;                      // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_SkinId;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CharaSkin                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0088(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetMaterialSlotNames_ReturnValue;         // 0x00C8(0x0010)(ZeroConstructor, ReferenceParm)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Array_Get_Item;                           // 0x00D8(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm) == 0x000008, "Wrong alignment on BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm");
static_assert(sizeof(BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm) == 0x000108, "Wrong size on BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm, EntryPoint) == 0x000000, "Member 'BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm, K2Node_CustomEvent_Loaded) == 0x000008, "Member 'BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm, Temp_object_Variable) == 0x000010, "Member 'BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm, K2Node_DynamicCast_AsMaterial_Interface) == 0x000018, "Member 'BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm, K2Node_CustomEvent_ArmType) == 0x000021, "Member 'BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm::K2Node_CustomEvent_ArmType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm, K2Node_CustomEvent_StandName) == 0x000028, "Member 'BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm::K2Node_CustomEvent_StandName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm, K2Node_CustomEvent_SkinId) == 0x000038, "Member 'BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm::K2Node_CustomEvent_SkinId' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm, CallFunc_Conv_ByteToString_ReturnValue) == 0x000040, "Member 'BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm::CallFunc_Conv_ByteToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm, CallFunc_Concat_StrStr_ReturnValue1) == 0x000060, "Member 'BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm, K2Node_CreateDelegate_OutputDelegate) == 0x000070, "Member 'BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm, CallFunc_Conv_StringToName_ReturnValue) == 0x000080, "Member 'BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm, CallFunc_GetDataTableRowFromName_OutRow) == 0x000088, "Member 'BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000C0, "Member 'BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm, CallFunc_GetMaterialSlotNames_ReturnValue) == 0x0000C8, "Member 'BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm::CallFunc_GetMaterialSlotNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000100, "Member 'BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm, K2Node_Event_DeltaSeconds) == 0x000104, "Member 'BP_AJBInGameStandPart_STFArm_C_ExecuteUbergraph_BP_AJBInGameStandPart_STFArm::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameStandPart_STFArm.BP_AJBInGameStandPart_STFArm_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameStandPart_STFArm_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStandPart_STFArm_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBInGameStandPart_STFArm_C_ReceiveTick");
static_assert(sizeof(BP_AJBInGameStandPart_STFArm_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBInGameStandPart_STFArm_C_ReceiveTick");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameStandPart_STFArm_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameStandPart_STFArm.BP_AJBInGameStandPart_STFArm_C.ChangeSkin
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameStandPart_STFArm_C_ChangeSkin final
{
public:
	class FString                                 StandName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         SkinID;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStandPart_STFArm_C_ChangeSkin) == 0x000008, "Wrong alignment on BP_AJBInGameStandPart_STFArm_C_ChangeSkin");
static_assert(sizeof(BP_AJBInGameStandPart_STFArm_C_ChangeSkin) == 0x000018, "Wrong size on BP_AJBInGameStandPart_STFArm_C_ChangeSkin");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_ChangeSkin, StandName) == 0x000000, "Member 'BP_AJBInGameStandPart_STFArm_C_ChangeSkin::StandName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_ChangeSkin, SkinID) == 0x000010, "Member 'BP_AJBInGameStandPart_STFArm_C_ChangeSkin::SkinID' has a wrong offset!");

// Function BP_AJBInGameStandPart_STFArm.BP_AJBInGameStandPart_STFArm_C.Init(Server)
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameStandPart_STFArm_C_Init_Server_ final
{
public:
	E_SFGArmType                                  ArmType_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStandPart_STFArm_C_Init_Server_) == 0x000001, "Wrong alignment on BP_AJBInGameStandPart_STFArm_C_Init_Server_");
static_assert(sizeof(BP_AJBInGameStandPart_STFArm_C_Init_Server_) == 0x000001, "Wrong size on BP_AJBInGameStandPart_STFArm_C_Init_Server_");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_Init_Server_, ArmType_0) == 0x000000, "Member 'BP_AJBInGameStandPart_STFArm_C_Init_Server_::ArmType_0' has a wrong offset!");

// Function BP_AJBInGameStandPart_STFArm.BP_AJBInGameStandPart_STFArm_C.OnLoaded_A22601704C40D238B6278AAF8A1E7396
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameStandPart_STFArm_C_OnLoaded_A22601704C40D238B6278AAF8A1E7396 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStandPart_STFArm_C_OnLoaded_A22601704C40D238B6278AAF8A1E7396) == 0x000008, "Wrong alignment on BP_AJBInGameStandPart_STFArm_C_OnLoaded_A22601704C40D238B6278AAF8A1E7396");
static_assert(sizeof(BP_AJBInGameStandPart_STFArm_C_OnLoaded_A22601704C40D238B6278AAF8A1E7396) == 0x000008, "Wrong size on BP_AJBInGameStandPart_STFArm_C_OnLoaded_A22601704C40D238B6278AAF8A1E7396");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_OnLoaded_A22601704C40D238B6278AAF8A1E7396, Loaded) == 0x000000, "Member 'BP_AJBInGameStandPart_STFArm_C_OnLoaded_A22601704C40D238B6278AAF8A1E7396::Loaded' has a wrong offset!");

// Function BP_AJBInGameStandPart_STFArm.BP_AJBInGameStandPart_STFArm_C.SetArmMesh
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameStandPart_STFArm_C_SetArmMesh final
{
public:
	E_SFGArmType                                  ArmType_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SFGArmType                                  Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Temp_object_Variable1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Temp_object_Variable2;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStandPart_STFArm_C_SetArmMesh) == 0x000008, "Wrong alignment on BP_AJBInGameStandPart_STFArm_C_SetArmMesh");
static_assert(sizeof(BP_AJBInGameStandPart_STFArm_C_SetArmMesh) == 0x000028, "Wrong size on BP_AJBInGameStandPart_STFArm_C_SetArmMesh");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_SetArmMesh, ArmType_0) == 0x000000, "Member 'BP_AJBInGameStandPart_STFArm_C_SetArmMesh::ArmType_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_SetArmMesh, Temp_byte_Variable) == 0x000001, "Member 'BP_AJBInGameStandPart_STFArm_C_SetArmMesh::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_SetArmMesh, Temp_object_Variable) == 0x000008, "Member 'BP_AJBInGameStandPart_STFArm_C_SetArmMesh::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_SetArmMesh, Temp_object_Variable1) == 0x000010, "Member 'BP_AJBInGameStandPart_STFArm_C_SetArmMesh::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_SetArmMesh, Temp_object_Variable2) == 0x000018, "Member 'BP_AJBInGameStandPart_STFArm_C_SetArmMesh::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_SetArmMesh, K2Node_Select_Default) == 0x000020, "Member 'BP_AJBInGameStandPart_STFArm_C_SetArmMesh::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameStandPart_STFArm.BP_AJBInGameStandPart_STFArm_C.OnRep_ArmType
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameStandPart_STFArm_C_OnRep_ArmType final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SFGArmType                                  Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_STF_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_STF;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStandPart_STFArm_C_OnRep_ArmType) == 0x000008, "Wrong alignment on BP_AJBInGameStandPart_STFArm_C_OnRep_ArmType");
static_assert(sizeof(BP_AJBInGameStandPart_STFArm_C_OnRep_ArmType) == 0x000038, "Wrong size on BP_AJBInGameStandPart_STFArm_C_OnRep_ArmType");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_OnRep_ArmType, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_AJBInGameStandPart_STFArm_C_OnRep_ArmType::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_OnRep_ArmType, Temp_byte_Variable) == 0x000001, "Member 'BP_AJBInGameStandPart_STFArm_C_OnRep_ArmType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_OnRep_ArmType, Temp_object_Variable) == 0x000008, "Member 'BP_AJBInGameStandPart_STFArm_C_OnRep_ArmType::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_OnRep_ArmType, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBInGameStandPart_STFArm_C_OnRep_ArmType::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_OnRep_ArmType, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_STF) == 0x000018, "Member 'BP_AJBInGameStandPart_STFArm_C_OnRep_ArmType::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_STF' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_OnRep_ArmType, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameStandPart_STFArm_C_OnRep_ArmType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_OnRep_ArmType, K2Node_Select_Default) == 0x000028, "Member 'BP_AJBInGameStandPart_STFArm_C_OnRep_ArmType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStandPart_STFArm_C_OnRep_ArmType, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_AJBInGameStandPart_STFArm_C_OnRep_ArmType::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}


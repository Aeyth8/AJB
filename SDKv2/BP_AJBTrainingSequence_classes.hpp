#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBTrainingSequence

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBTrainingSequence.BP_AJBTrainingSequence_C
// 0x00A8 (0x0198 - 0x00F0)
class UBP_AJBTrainingSequence_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F0(0x0008)(Transient, DuplicateTransient)
	float                                         PPTime;                                            // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_CommonWIndow_S_C*                   PPCheckConfirm;                                    // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_PpBuyWindow_C*                      PPBuyWindow;                                       // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GameEndConfirmLifeTime;                            // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   GameEndConfirmText;                                // 0x0118(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UWB_CommonWIndow_S_C*                   GameEndConfirm;                                    // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnRequestGameResultDispatcher;                     // 0x0138(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         PPConfirmTimer;                                    // 0x0148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnStartPPBuySequenceDispatcher;                    // 0x0150(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnBuyPPDispatcher;                                 // 0x0160(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         PPButWindowTime;                                   // 0x0170(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnShowEndConfirmDispatcher;                        // 0x0178(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bStartSequence;                                    // 0x0188(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_CommonWIndow_S_C*                   TrainingEndConfirm;                                // 0x0190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnRequestGameResultDispatcher__DelegateSignature();
	void OnStartPPBuySequenceDispatcher__DelegateSignature();
	void OnBuyPPDispatcher__DelegateSignature();
	void OnShowEndConfirmDispatcher__DelegateSignature();
	void ExecuteUbergraph_BP_AJBTrainingSequence(int32 EntryPoint);
	void ForceClosedTrainingEndConfirm();
	void UnbindTrainingEndConfirm();
	void OnClosedTrainingEndConfirm(class UAJBWindowWidget* TargetWidget);
	void OnTrainingEnd();
	void ShowGameEndConfirm_Terminate();
	void StartTerminateGameSequence();
	void OnCloseTickGate_Terminate();
	void OnOpenTickGate_Terminate();
	void TakeOverPPBuyTimeCountdown();
	void UnbindPPBuyWindow();
	void UnbindGameEndConfirm();
	void ShowGameEndConfirm();
	void UnbindPPCheckConfirm();
	void StartBuyPPSequence();
	void OnClosedGameEndConfirm(class UAJBWindowWidget* TargetWidget);
	void OnClosedPPBuyWindow(class UAJBWindowWidget* TargetWidget);
	void OnClosedPPCheckConfirm(class UAJBWindowWidget* TargetWidget);
	void OnCloseTickGate();
	void OnOpenTickGate();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void UpdatePPCheckTimer(float Delta, bool* bTimerZero);
	void FinalizeSequence();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBTrainingSequence_C">();
	}
	static class UBP_AJBTrainingSequence_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBTrainingSequence_C>();
	}
};
static_assert(alignof(UBP_AJBTrainingSequence_C) == 0x000008, "Wrong alignment on UBP_AJBTrainingSequence_C");
static_assert(sizeof(UBP_AJBTrainingSequence_C) == 0x000198, "Wrong size on UBP_AJBTrainingSequence_C");
static_assert(offsetof(UBP_AJBTrainingSequence_C, UberGraphFrame) == 0x0000F0, "Member 'UBP_AJBTrainingSequence_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AJBTrainingSequence_C, PPTime) == 0x0000F8, "Member 'UBP_AJBTrainingSequence_C::PPTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBTrainingSequence_C, PPCheckConfirm) == 0x000100, "Member 'UBP_AJBTrainingSequence_C::PPCheckConfirm' has a wrong offset!");
static_assert(offsetof(UBP_AJBTrainingSequence_C, PPBuyWindow) == 0x000108, "Member 'UBP_AJBTrainingSequence_C::PPBuyWindow' has a wrong offset!");
static_assert(offsetof(UBP_AJBTrainingSequence_C, GameEndConfirmLifeTime) == 0x000110, "Member 'UBP_AJBTrainingSequence_C::GameEndConfirmLifeTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBTrainingSequence_C, GameEndConfirmText) == 0x000118, "Member 'UBP_AJBTrainingSequence_C::GameEndConfirmText' has a wrong offset!");
static_assert(offsetof(UBP_AJBTrainingSequence_C, GameEndConfirm) == 0x000130, "Member 'UBP_AJBTrainingSequence_C::GameEndConfirm' has a wrong offset!");
static_assert(offsetof(UBP_AJBTrainingSequence_C, OnRequestGameResultDispatcher) == 0x000138, "Member 'UBP_AJBTrainingSequence_C::OnRequestGameResultDispatcher' has a wrong offset!");
static_assert(offsetof(UBP_AJBTrainingSequence_C, PPConfirmTimer) == 0x000148, "Member 'UBP_AJBTrainingSequence_C::PPConfirmTimer' has a wrong offset!");
static_assert(offsetof(UBP_AJBTrainingSequence_C, OnStartPPBuySequenceDispatcher) == 0x000150, "Member 'UBP_AJBTrainingSequence_C::OnStartPPBuySequenceDispatcher' has a wrong offset!");
static_assert(offsetof(UBP_AJBTrainingSequence_C, OnBuyPPDispatcher) == 0x000160, "Member 'UBP_AJBTrainingSequence_C::OnBuyPPDispatcher' has a wrong offset!");
static_assert(offsetof(UBP_AJBTrainingSequence_C, PPButWindowTime) == 0x000170, "Member 'UBP_AJBTrainingSequence_C::PPButWindowTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBTrainingSequence_C, OnShowEndConfirmDispatcher) == 0x000178, "Member 'UBP_AJBTrainingSequence_C::OnShowEndConfirmDispatcher' has a wrong offset!");
static_assert(offsetof(UBP_AJBTrainingSequence_C, bStartSequence) == 0x000188, "Member 'UBP_AJBTrainingSequence_C::bStartSequence' has a wrong offset!");
static_assert(offsetof(UBP_AJBTrainingSequence_C, TrainingEndConfirm) == 0x000190, "Member 'UBP_AJBTrainingSequence_C::TrainingEndConfirm' has a wrong offset!");

}


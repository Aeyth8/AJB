#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBFlinchBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BP_AJBPassiveSkillBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBFlinchBase.BP_AJBFlinchBase_C
// 0x0018 (0x0208 - 0x01F0)
class UBP_AJBFlinchBase_C : public UBP_AJBPassiveSkillBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBFlinchBase_C;                 // 0x01F0(0x0008)(Transient, DuplicateTransient)
	struct FGameplayTag                           GionTag;                                           // 0x01F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           AM_Bind;                                           // 0x0200(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBFlinchBase(int32 EntryPoint);
	void MC_ActivePassive(class UObject* Causer);
	void ActivePassive(class UObject* Causer, bool bTriggeredByStand, const struct FGameplayTag& CauserType, int32 SerialNumber);
	void OnActionInactivate(bool bTriggeredByStand);
	void OnActionActivate(bool bTriggeredByStand);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBFlinchBase_C">();
	}
	static class UBP_AJBFlinchBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBFlinchBase_C>();
	}
};
static_assert(alignof(UBP_AJBFlinchBase_C) == 0x000008, "Wrong alignment on UBP_AJBFlinchBase_C");
static_assert(sizeof(UBP_AJBFlinchBase_C) == 0x000208, "Wrong size on UBP_AJBFlinchBase_C");
static_assert(offsetof(UBP_AJBFlinchBase_C, UberGraphFrame_BP_AJBFlinchBase_C) == 0x0001F0, "Member 'UBP_AJBFlinchBase_C::UberGraphFrame_BP_AJBFlinchBase_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBFlinchBase_C, GionTag) == 0x0001F8, "Member 'UBP_AJBFlinchBase_C::GionTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBFlinchBase_C, AM_Bind) == 0x000200, "Member 'UBP_AJBFlinchBase_C::AM_Bind' has a wrong offset!");

}


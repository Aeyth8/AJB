#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TournamentMode_PlayerDetail

#include "Basic.hpp"

#include "E_ShopCompetitionPlayerDetailState_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ST_ShopCompetitionUICharaParam_structs.hpp"
#include "AJB_structs.hpp"
#include "AJB_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_TournamentMode_PlayerDetail.WB_TournamentMode_PlayerDetail_C
// 0x00F0 (0x03B0 - 0x02C0)
class UWB_TournamentMode_PlayerDetail_C final : public UAJBWindowWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(Transient, DuplicateTransient)
	class UScaleBox*                              ActiveButtonRoot;                                  // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_BG;                                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_CharaIcon;                                // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_frame;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              InactiveButtonRoot;                                // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          PairNumber;                                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          PairText;                                          // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               PlayerIconRoot;                                    // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          PlayerName;                                        // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              WB_HP;                                             // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_PlayerIcon_C*                       WB_PlayerIcon;                                     // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_TournamentMode_PlayerSelectButton_C* WB_TournamentMode_PlayerSelectButton;              // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_TournamentMode_PlayerSelectButton_dead_C* WB_TournamentMode_PlayerSelectButton_dead;         // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_0;                                  // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcherButton;                              // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         BlurOffset;                                        // 0x0340(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DMI_HPBar;                                         // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DefaultHPBarSize;                                  // 0x0350(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSetDefaultHpBarSize;                              // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerID;                                          // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetryCount;                                        // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SerchRetryMaxCount;                                // 0x0364(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnSelected;                                        // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FST_ShopCompetitionUICharaParam        CharaParam;                                        // 0x0378(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_CharaIcon;                                     // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetCriticalTimeRate;                            // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentCriticalTimeRate;                           // 0x03A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ShopCompetitionPlayerDetailState            PlayerDetailState;                                 // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnSelected__DelegateSignature(int32 PlayerID_0);
	void ExecuteUbergraph_WB_TournamentMode_PlayerDetail(int32 EntryPoint);
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void ChangeDisplayReset();
	void SetupDisplayActive(const struct FMatchingPlayerInfo& SelfInfo);
	void ChangeDisplayDown();
	void ChangeDisplayInactive();
	void UpdateCharaParam(int32 HP, int32 MaxHP, int32 AP, int32 MaxAP, ECharacterBehavior CharacterBehavior, float CriticalTimeRate, int32 CP, int32 MaxCP);
	void ChangeDisplayNone();
	void BndEvt__WB_TournamentMode_PlayerSelectButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature(class UAJBButtonWidget* OwnerWidget, class UAJBButton* TargetButton);
	void OnLoaded_DCCD85A64EBFCC13A43657B76FADF0A1(class UObject* Loaded);
	void UpdateHPAndAPBar();
	void UpdateCriticalTime(float DeltaTime);
	void SetupShopCompetitionPairInfo();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_TournamentMode_PlayerDetail_C">();
	}
	static class UWB_TournamentMode_PlayerDetail_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_TournamentMode_PlayerDetail_C>();
	}
};
static_assert(alignof(UWB_TournamentMode_PlayerDetail_C) == 0x000008, "Wrong alignment on UWB_TournamentMode_PlayerDetail_C");
static_assert(sizeof(UWB_TournamentMode_PlayerDetail_C) == 0x0003B0, "Wrong size on UWB_TournamentMode_PlayerDetail_C");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, UberGraphFrame) == 0x0002C0, "Member 'UWB_TournamentMode_PlayerDetail_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, ActiveButtonRoot) == 0x0002C8, "Member 'UWB_TournamentMode_PlayerDetail_C::ActiveButtonRoot' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, AJBImage_BG) == 0x0002D0, "Member 'UWB_TournamentMode_PlayerDetail_C::AJBImage_BG' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, AJBImage_CharaIcon) == 0x0002D8, "Member 'UWB_TournamentMode_PlayerDetail_C::AJBImage_CharaIcon' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, AJBImage_frame) == 0x0002E0, "Member 'UWB_TournamentMode_PlayerDetail_C::AJBImage_frame' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, InactiveButtonRoot) == 0x0002E8, "Member 'UWB_TournamentMode_PlayerDetail_C::InactiveButtonRoot' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, PairNumber) == 0x0002F0, "Member 'UWB_TournamentMode_PlayerDetail_C::PairNumber' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, PairText) == 0x0002F8, "Member 'UWB_TournamentMode_PlayerDetail_C::PairText' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, PlayerIconRoot) == 0x000300, "Member 'UWB_TournamentMode_PlayerDetail_C::PlayerIconRoot' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, PlayerName) == 0x000308, "Member 'UWB_TournamentMode_PlayerDetail_C::PlayerName' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, WB_HP) == 0x000310, "Member 'UWB_TournamentMode_PlayerDetail_C::WB_HP' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, WB_PlayerIcon) == 0x000318, "Member 'UWB_TournamentMode_PlayerDetail_C::WB_PlayerIcon' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, WB_TournamentMode_PlayerSelectButton) == 0x000320, "Member 'UWB_TournamentMode_PlayerDetail_C::WB_TournamentMode_PlayerSelectButton' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, WB_TournamentMode_PlayerSelectButton_dead) == 0x000328, "Member 'UWB_TournamentMode_PlayerDetail_C::WB_TournamentMode_PlayerSelectButton_dead' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, WidgetSwitcher_0) == 0x000330, "Member 'UWB_TournamentMode_PlayerDetail_C::WidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, WidgetSwitcherButton) == 0x000338, "Member 'UWB_TournamentMode_PlayerDetail_C::WidgetSwitcherButton' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, BlurOffset) == 0x000340, "Member 'UWB_TournamentMode_PlayerDetail_C::BlurOffset' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, DMI_HPBar) == 0x000348, "Member 'UWB_TournamentMode_PlayerDetail_C::DMI_HPBar' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, DefaultHPBarSize) == 0x000350, "Member 'UWB_TournamentMode_PlayerDetail_C::DefaultHPBarSize' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, bSetDefaultHpBarSize) == 0x000358, "Member 'UWB_TournamentMode_PlayerDetail_C::bSetDefaultHpBarSize' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, PlayerID) == 0x00035C, "Member 'UWB_TournamentMode_PlayerDetail_C::PlayerID' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, RetryCount) == 0x000360, "Member 'UWB_TournamentMode_PlayerDetail_C::RetryCount' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, SerchRetryMaxCount) == 0x000364, "Member 'UWB_TournamentMode_PlayerDetail_C::SerchRetryMaxCount' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, OnSelected) == 0x000368, "Member 'UWB_TournamentMode_PlayerDetail_C::OnSelected' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, CharaParam) == 0x000378, "Member 'UWB_TournamentMode_PlayerDetail_C::CharaParam' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, DMI_CharaIcon) == 0x000398, "Member 'UWB_TournamentMode_PlayerDetail_C::DMI_CharaIcon' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, TargetCriticalTimeRate) == 0x0003A0, "Member 'UWB_TournamentMode_PlayerDetail_C::TargetCriticalTimeRate' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, CurrentCriticalTimeRate) == 0x0003A4, "Member 'UWB_TournamentMode_PlayerDetail_C::CurrentCriticalTimeRate' has a wrong offset!");
static_assert(offsetof(UWB_TournamentMode_PlayerDetail_C, PlayerDetailState) == 0x0003A8, "Member 'UWB_TournamentMode_PlayerDetail_C::PlayerDetailState' has a wrong offset!");

}


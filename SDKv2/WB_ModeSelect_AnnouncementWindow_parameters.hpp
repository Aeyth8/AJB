#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ModeSelect_AnnouncementWindow

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow
// 0x01B0 (0x01B0 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton;           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent1;    // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_LocalImageFullPath;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ImageWidth;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ImageHeight;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& LocalImageFullPath, int32 ImageWidth, int32 ImageHeight)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAJBAsyncTaskDownloadImage*             CallFunc_AJBDownloadImage_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_TryGetAnnounceText_OutValue;              // 0x00A0(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B8(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00D4(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_LocalImageFullPath1;            // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ImageWidth1;                    // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ImageHeight1;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBOutGameHUD_BP_bSuccess;             // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBOutGameHUD_C*                    CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD;         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBOutGameHUD_BP_bSuccess1;            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBOutGameHUD_C*                    CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD1;        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& LocalImageFullPath, int32 ImageWidth, int32 ImageHeight)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0158(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GetAJBOutGameHUD_BP_bSuccess2;            // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBOutGameHUD_C*                    CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD2;        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0178(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X1;                         // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y1;                         // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue3;           // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x01A8(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow) == 0x000008, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow) == 0x0001B0, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, EntryPoint) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, Temp_int_Variable) == 0x000004, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, Temp_string_Variable) == 0x000008, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000018, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000030, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, K2Node_ComponentBoundEvent_OwnerWidget) == 0x000038, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::K2Node_ComponentBoundEvent_OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, K2Node_ComponentBoundEvent_TargetButton) == 0x000040, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::K2Node_ComponentBoundEvent_TargetButton' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_RequestWwiseEventOnLocal_AkComponent1) == 0x000048, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_RequestWwiseEventOnLocal_AkComponent1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, Temp_int_Variable1) == 0x000050, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, K2Node_CustomEvent_LocalImageFullPath) == 0x000058, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::K2Node_CustomEvent_LocalImageFullPath' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, K2Node_CustomEvent_ImageWidth) == 0x000068, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::K2Node_CustomEvent_ImageWidth' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, K2Node_CustomEvent_ImageHeight) == 0x00006C, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::K2Node_CustomEvent_ImageHeight' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x000070, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, K2Node_CreateDelegate_OutputDelegate1) == 0x000078, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_Conv_IntToString_ReturnValue) == 0x000088, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_AJBDownloadImage_ReturnValue) == 0x000098, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_AJBDownloadImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_TryGetAnnounceText_OutValue) == 0x0000A0, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_TryGetAnnounceText_OutValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B8, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, K2Node_Event_MyGeometry) == 0x0000D4, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, K2Node_Event_InDeltaTime) == 0x00010C, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000110, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_FMax_ReturnValue) == 0x000114, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000118, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000119, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, K2Node_CustomEvent_LocalImageFullPath1) == 0x000120, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::K2Node_CustomEvent_LocalImageFullPath1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, K2Node_CustomEvent_ImageWidth1) == 0x000130, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::K2Node_CustomEvent_ImageWidth1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, K2Node_CustomEvent_ImageHeight1) == 0x000134, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::K2Node_CustomEvent_ImageHeight1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_GetAJBOutGameHUD_BP_bSuccess) == 0x000138, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_GetAJBOutGameHUD_BP_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD) == 0x000140, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_GetAJBOutGameHUD_BP_bSuccess1) == 0x000148, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_GetAJBOutGameHUD_BP_bSuccess1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD1) == 0x000150, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, K2Node_CreateDelegate_OutputDelegate2) == 0x000158, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_GetAJBOutGameHUD_BP_bSuccess2) == 0x000168, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_GetAJBOutGameHUD_BP_bSuccess2' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD2) == 0x000170, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD2' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_GetViewportSize_ReturnValue) == 0x000178, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_BreakVector2D_X) == 0x000180, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_BreakVector2D_Y) == 0x000184, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000188, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x00018C, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_BreakVector2D_X1) == 0x000190, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_BreakVector2D_X1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_BreakVector2D_Y1) == 0x000194, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_BreakVector2D_Y1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000198, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x00019C, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0001A0, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_Divide_FloatFloat_ReturnValue3) == 0x0001A4, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_Divide_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow, CallFunc_MakeVector2D_ReturnValue) == 0x0001A8, "Member 'WB_ModeSelect_AnnouncementWindow_C_ExecuteUbergraph_WB_ModeSelect_AnnouncementWindow::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_Tick) == 0x000004, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_Tick");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_Tick) == 0x00003C, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_Tick");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_Tick, MyGeometry) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_ModeSelect_AnnouncementWindow_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_ModeSelect_AnnouncementWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnSuccess_4DEC711A433711C82F428A8ABAAA75EB
// 0x0018 (0x0018 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnSuccess_4DEC711A433711C82F428A8ABAAA75EB final
{
public:
	class FString                                 LocalImageFullPath;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ImageWidth;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ImageHeight;                                       // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnSuccess_4DEC711A433711C82F428A8ABAAA75EB) == 0x000008, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnSuccess_4DEC711A433711C82F428A8ABAAA75EB");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnSuccess_4DEC711A433711C82F428A8ABAAA75EB) == 0x000018, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnSuccess_4DEC711A433711C82F428A8ABAAA75EB");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnSuccess_4DEC711A433711C82F428A8ABAAA75EB, LocalImageFullPath) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnSuccess_4DEC711A433711C82F428A8ABAAA75EB::LocalImageFullPath' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnSuccess_4DEC711A433711C82F428A8ABAAA75EB, ImageWidth) == 0x000010, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnSuccess_4DEC711A433711C82F428A8ABAAA75EB::ImageWidth' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnSuccess_4DEC711A433711C82F428A8ABAAA75EB, ImageHeight) == 0x000014, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnSuccess_4DEC711A433711C82F428A8ABAAA75EB::ImageHeight' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnFail_4DEC711A433711C82F428A8ABAAA75EB
// 0x0018 (0x0018 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnFail_4DEC711A433711C82F428A8ABAAA75EB final
{
public:
	class FString                                 LocalImageFullPath;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ImageWidth;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ImageHeight;                                       // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnFail_4DEC711A433711C82F428A8ABAAA75EB) == 0x000008, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnFail_4DEC711A433711C82F428A8ABAAA75EB");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnFail_4DEC711A433711C82F428A8ABAAA75EB) == 0x000018, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnFail_4DEC711A433711C82F428A8ABAAA75EB");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnFail_4DEC711A433711C82F428A8ABAAA75EB, LocalImageFullPath) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnFail_4DEC711A433711C82F428A8ABAAA75EB::LocalImageFullPath' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnFail_4DEC711A433711C82F428A8ABAAA75EB, ImageWidth) == 0x000010, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnFail_4DEC711A433711C82F428A8ABAAA75EB::ImageWidth' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnFail_4DEC711A433711C82F428A8ABAAA75EB, ImageHeight) == 0x000014, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnFail_4DEC711A433711C82F428A8ABAAA75EB::ImageHeight' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.TryGetAnnounceText
// 0x0050 (0x0050 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_TryGetAnnounceText final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   OutValue;                                          // 0x0010(0x0018)(Parm, OutParm)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_TryGetAnnounceText) == 0x000008, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_TryGetAnnounceText");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_TryGetAnnounceText) == 0x000050, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_TryGetAnnounceText");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_TryGetAnnounceText, Text) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_TryGetAnnounceText::Text' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_TryGetAnnounceText, OutValue) == 0x000010, "Member 'WB_ModeSelect_AnnouncementWindow_C_TryGetAnnounceText::OutValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_TryGetAnnounceText, CallFunc_Replace_ReturnValue) == 0x000028, "Member 'WB_ModeSelect_AnnouncementWindow_C_TryGetAnnounceText::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_TryGetAnnounceText, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'WB_ModeSelect_AnnouncementWindow_C_TryGetAnnounceText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputTurnRate
// 0x0008 (0x0008 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputTurnRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputTurnRate) == 0x000004, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputTurnRate");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputTurnRate) == 0x000008, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputTurnRate");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputTurnRate, Value) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputTurnRate::Value' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputTurnRate, ReturnValue) == 0x000004, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputTurnRate::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputReleasedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedUp) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedUp");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedUp) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedUp");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedUp, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedUp::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputReleasedTouch
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedTouch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedTouch) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedTouch");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedTouch) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedTouch");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedTouch, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedTouch::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputReleasedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedRight) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedRight");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedRight) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedRight");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedRight, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedRight::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputReleasedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedR2) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedR2");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedR2) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedR2");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedR2, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedR2::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputReleasedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedR1) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedR1");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedR1) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedR1");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedR1, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedR1::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputReleasedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedLeft) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedLeft");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedLeft) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedLeft");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedLeft, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedLeft::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputReleasedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedL3) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedL3");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedL3) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedL3");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedL3, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedL3::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputReleasedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedL2) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedL2");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedL2) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedL2");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedL2, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedL2::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputReleasedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedL1) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedL1");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedL1) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedL1");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedL1, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedL1::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputReleasedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedDown) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedDown");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedDown) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedDown");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedDown, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedDown::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputReleasedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedDecide) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedDecide");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedDecide) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedDecide");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedDecide, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedDecide::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputReleasedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedCancel) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedCancel");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedCancel) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedCancel");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedCancel, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputReleasedCancel::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputPressedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputPressedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedUp) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedUp");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedUp) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedUp");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedUp, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputPressedUp::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputPressedTouch
// 0x000C (0x000C - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputPressedTouch final
{
public:
	float                                         LocationX;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocationY;                                         // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedTouch) == 0x000004, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedTouch");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedTouch) == 0x00000C, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedTouch");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedTouch, LocationX) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputPressedTouch::LocationX' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedTouch, LocationY) == 0x000004, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputPressedTouch::LocationY' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedTouch, ReturnValue) == 0x000008, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputPressedTouch::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputPressedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputPressedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedRight) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedRight");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedRight) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedRight");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedRight, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputPressedRight::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputPressedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputPressedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedR2) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedR2");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedR2) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedR2");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedR2, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputPressedR2::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputPressedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputPressedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedR1) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedR1");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedR1) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedR1");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedR1, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputPressedR1::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputPressedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputPressedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedLeft) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedLeft");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedLeft) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedLeft");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedLeft, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputPressedLeft::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputPressedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputPressedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedL3) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedL3");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedL3) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedL3");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedL3, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputPressedL3::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputPressedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputPressedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedL2) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedL2");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedL2) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedL2");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedL2, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputPressedL2::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputPressedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputPressedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedL1) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedL1");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedL1) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedL1");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedL1, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputPressedL1::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputPressedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputPressedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedDown) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedDown");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedDown) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedDown");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedDown, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputPressedDown::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputPressedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputPressedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedDecide) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedDecide");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedDecide) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedDecide");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedDecide, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputPressedDecide::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputPressedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputPressedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedCancel) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedCancel");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedCancel) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputPressedCancel");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputPressedCancel, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputPressedCancel::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputMoveRight
// 0x0008 (0x0008 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputMoveRight final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputMoveRight) == 0x000004, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputMoveRight");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputMoveRight) == 0x000008, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputMoveRight");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputMoveRight, Value) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputMoveRight::Value' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputMoveRight, ReturnValue) == 0x000004, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputMoveRight::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputMoveForward
// 0x0008 (0x0008 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputMoveForward final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputMoveForward) == 0x000004, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputMoveForward");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputMoveForward) == 0x000008, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputMoveForward");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputMoveForward, Value) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputMoveForward::Value' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputMoveForward, ReturnValue) == 0x000004, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputMoveForward::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.OnInputLookupRate
// 0x0008 (0x0008 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_OnInputLookupRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_OnInputLookupRate) == 0x000004, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_OnInputLookupRate");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_OnInputLookupRate) == 0x000008, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_OnInputLookupRate");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputLookupRate, Value) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputLookupRate::Value' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_OnInputLookupRate, ReturnValue) == 0x000004, "Member 'WB_ModeSelect_AnnouncementWindow_C_OnInputLookupRate::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_AnnouncementWindow.WB_ModeSelect_AnnouncementWindow_C.IsModeless
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_AnnouncementWindow_C_IsModeless final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_AnnouncementWindow_C_IsModeless) == 0x000001, "Wrong alignment on WB_ModeSelect_AnnouncementWindow_C_IsModeless");
static_assert(sizeof(WB_ModeSelect_AnnouncementWindow_C_IsModeless) == 0x000001, "Wrong size on WB_ModeSelect_AnnouncementWindow_C_IsModeless");
static_assert(offsetof(WB_ModeSelect_AnnouncementWindow_C_IsModeless, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_AnnouncementWindow_C_IsModeless::ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_AJBInGameStand_MDB

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_AJBInGameStand_MDB.ABP_AJBInGameStand_MDB_C
// 0x0438 (0x0790 - 0x0358)
class UABP_AJBInGameStand_MDB_C final : public UAnimInstance
{
public:
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_171281A44CE755D6138F3B974040875F; // 0x0368(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_DBD7E4614FF2F1E3EBCF39A5BEB1BD3E; // 0x03B0(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34D618A447A1CA2DA8AA9592288ED979; // 0x03F8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_0BEF6F094A2E4748C492AC91F243B707; // 0x0440(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_StateResult_1815EFB64B93BDAC4F43D6A34BAE6114; // 0x04F0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_AEEFAD3D45D805E4BEFC649FD11701BA; // 0x0538(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_StateResult_84E0805F418958B85DB35F91F22021AA; // 0x05E8(0x0048)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_A56F2FCC45BB45FAE5013790849D88B6; // 0x0630(0x00E0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_8F17BFFA4168A84E65BF4A9DE663E368; // 0x0710(0x0070)()
	bool                                          IsOwnerMove;                                       // 0x0780(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_781[0x3];                                      // 0x0781(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OwnerMovementRate;                                 // 0x0784(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveRate;                                          // 0x0788(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_AJBInGameStand_MDB(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBInGameStand_MDB_AnimGraphNode_TransitionResult_34D618A447A1CA2DA8AA9592288ED979();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBInGameStand_MDB_AnimGraphNode_TransitionResult_DBD7E4614FF2F1E3EBCF39A5BEB1BD3E();
	void CanOwnerMove(bool* CanMove);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_AJBInGameStand_MDB_C">();
	}
	static class UABP_AJBInGameStand_MDB_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_AJBInGameStand_MDB_C>();
	}
};
static_assert(alignof(UABP_AJBInGameStand_MDB_C) == 0x000008, "Wrong alignment on UABP_AJBInGameStand_MDB_C");
static_assert(sizeof(UABP_AJBInGameStand_MDB_C) == 0x000790, "Wrong size on UABP_AJBInGameStand_MDB_C");
static_assert(offsetof(UABP_AJBInGameStand_MDB_C, UberGraphFrame) == 0x000360, "Member 'UABP_AJBInGameStand_MDB_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_MDB_C, AnimGraphNode_Root_171281A44CE755D6138F3B974040875F) == 0x000368, "Member 'UABP_AJBInGameStand_MDB_C::AnimGraphNode_Root_171281A44CE755D6138F3B974040875F' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_MDB_C, AnimGraphNode_TransitionResult_DBD7E4614FF2F1E3EBCF39A5BEB1BD3E) == 0x0003B0, "Member 'UABP_AJBInGameStand_MDB_C::AnimGraphNode_TransitionResult_DBD7E4614FF2F1E3EBCF39A5BEB1BD3E' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_MDB_C, AnimGraphNode_TransitionResult_34D618A447A1CA2DA8AA9592288ED979) == 0x0003F8, "Member 'UABP_AJBInGameStand_MDB_C::AnimGraphNode_TransitionResult_34D618A447A1CA2DA8AA9592288ED979' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_MDB_C, AnimGraphNode_SequencePlayer_0BEF6F094A2E4748C492AC91F243B707) == 0x000440, "Member 'UABP_AJBInGameStand_MDB_C::AnimGraphNode_SequencePlayer_0BEF6F094A2E4748C492AC91F243B707' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_MDB_C, AnimGraphNode_StateResult_1815EFB64B93BDAC4F43D6A34BAE6114) == 0x0004F0, "Member 'UABP_AJBInGameStand_MDB_C::AnimGraphNode_StateResult_1815EFB64B93BDAC4F43D6A34BAE6114' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_MDB_C, AnimGraphNode_SequencePlayer_AEEFAD3D45D805E4BEFC649FD11701BA) == 0x000538, "Member 'UABP_AJBInGameStand_MDB_C::AnimGraphNode_SequencePlayer_AEEFAD3D45D805E4BEFC649FD11701BA' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_MDB_C, AnimGraphNode_StateResult_84E0805F418958B85DB35F91F22021AA) == 0x0005E8, "Member 'UABP_AJBInGameStand_MDB_C::AnimGraphNode_StateResult_84E0805F418958B85DB35F91F22021AA' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_MDB_C, AnimGraphNode_StateMachine_A56F2FCC45BB45FAE5013790849D88B6) == 0x000630, "Member 'UABP_AJBInGameStand_MDB_C::AnimGraphNode_StateMachine_A56F2FCC45BB45FAE5013790849D88B6' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_MDB_C, AnimGraphNode_Slot_8F17BFFA4168A84E65BF4A9DE663E368) == 0x000710, "Member 'UABP_AJBInGameStand_MDB_C::AnimGraphNode_Slot_8F17BFFA4168A84E65BF4A9DE663E368' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_MDB_C, IsOwnerMove) == 0x000780, "Member 'UABP_AJBInGameStand_MDB_C::IsOwnerMove' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_MDB_C, OwnerMovementRate) == 0x000784, "Member 'UABP_AJBInGameStand_MDB_C::OwnerMovementRate' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_MDB_C, MoveRate) == 0x000788, "Member 'UABP_AJBInGameStand_MDB_C::MoveRate' has a wrong offset!");

}


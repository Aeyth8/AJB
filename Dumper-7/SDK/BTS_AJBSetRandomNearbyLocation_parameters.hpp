#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_AJBSetRandomNearbyLocation

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTS_AJBSetRandomNearbyLocation.BTS_AJBSetRandomNearbyLocation_C.ExecuteUbergraph_BTS_AJBSetRandomNearbyLocation
// 0x0038 (0x0038 - 0x0000)
struct BTS_AJBSetRandomNearbyLocation_C_ExecuteUbergraph_BTS_AJBSetRandomNearbyLocation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRandomNearbyLocation_ReturnValue;      // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasDestinationToGo_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTS_AJBSetRandomNearbyLocation_C_ExecuteUbergraph_BTS_AJBSetRandomNearbyLocation) == 0x000008, "Wrong alignment on BTS_AJBSetRandomNearbyLocation_C_ExecuteUbergraph_BTS_AJBSetRandomNearbyLocation");
static_assert(sizeof(BTS_AJBSetRandomNearbyLocation_C_ExecuteUbergraph_BTS_AJBSetRandomNearbyLocation) == 0x000038, "Wrong size on BTS_AJBSetRandomNearbyLocation_C_ExecuteUbergraph_BTS_AJBSetRandomNearbyLocation");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_ExecuteUbergraph_BTS_AJBSetRandomNearbyLocation, EntryPoint) == 0x000000, "Member 'BTS_AJBSetRandomNearbyLocation_C_ExecuteUbergraph_BTS_AJBSetRandomNearbyLocation::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_ExecuteUbergraph_BTS_AJBSetRandomNearbyLocation, K2Node_Event_OwnerController) == 0x000008, "Member 'BTS_AJBSetRandomNearbyLocation_C_ExecuteUbergraph_BTS_AJBSetRandomNearbyLocation::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_ExecuteUbergraph_BTS_AJBSetRandomNearbyLocation, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTS_AJBSetRandomNearbyLocation_C_ExecuteUbergraph_BTS_AJBSetRandomNearbyLocation::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_ExecuteUbergraph_BTS_AJBSetRandomNearbyLocation, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BTS_AJBSetRandomNearbyLocation_C_ExecuteUbergraph_BTS_AJBSetRandomNearbyLocation::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_ExecuteUbergraph_BTS_AJBSetRandomNearbyLocation, CallFunc_GetRandomNearbyLocation_ReturnValue) == 0x00001C, "Member 'BTS_AJBSetRandomNearbyLocation_C_ExecuteUbergraph_BTS_AJBSetRandomNearbyLocation::CallFunc_GetRandomNearbyLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_ExecuteUbergraph_BTS_AJBSetRandomNearbyLocation, CallFunc_GetBlackboard_ReturnValue) == 0x000028, "Member 'BTS_AJBSetRandomNearbyLocation_C_ExecuteUbergraph_BTS_AJBSetRandomNearbyLocation::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_ExecuteUbergraph_BTS_AJBSetRandomNearbyLocation, CallFunc_HasDestinationToGo_ReturnValue) == 0x000030, "Member 'BTS_AJBSetRandomNearbyLocation_C_ExecuteUbergraph_BTS_AJBSetRandomNearbyLocation::CallFunc_HasDestinationToGo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_ExecuteUbergraph_BTS_AJBSetRandomNearbyLocation, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BTS_AJBSetRandomNearbyLocation_C_ExecuteUbergraph_BTS_AJBSetRandomNearbyLocation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BTS_AJBSetRandomNearbyLocation.BTS_AJBSetRandomNearbyLocation_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTS_AJBSetRandomNearbyLocation_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBSetRandomNearbyLocation_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTS_AJBSetRandomNearbyLocation_C_ReceiveTickAI");
static_assert(sizeof(BTS_AJBSetRandomNearbyLocation_C_ReceiveTickAI) == 0x000018, "Wrong size on BTS_AJBSetRandomNearbyLocation_C_ReceiveTickAI");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTS_AJBSetRandomNearbyLocation_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTS_AJBSetRandomNearbyLocation_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTS_AJBSetRandomNearbyLocation_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTS_AJBSetRandomNearbyLocation.BTS_AJBSetRandomNearbyLocation_C.GetRandomNearbyLocation
// 0x00E0 (0x00E0 - 0x0000)
struct BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation final
{
public:
	class AAIController*                          AI_Controller;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0008(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DestinationCandidate;                              // 0x0014(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameAIImaginaryCharacter_C*    CallFunc_GetControllingImaginaryCharacter_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0028(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLocation_ReturnValue;                  // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_ReturnValue1;                 // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetRawPawn_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_ReturnValue2;                 // 0x0060(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNavigationPath*                        CallFunc_FindPathToLocationSynchronously_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0078(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0088(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue1;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00B0(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation) == 0x000008, "Wrong alignment on BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation");
static_assert(sizeof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation) == 0x0000E0, "Wrong size on BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, AI_Controller) == 0x000000, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::AI_Controller' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, ReturnValue) == 0x000008, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, DestinationCandidate) == 0x000014, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::DestinationCandidate' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_GetControllingImaginaryCharacter_ReturnValue) == 0x000020, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_GetControllingImaginaryCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_GetControlRotation_ReturnValue) == 0x000028, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_GetLocation_ReturnValue) == 0x000034, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_GetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_BreakRotator_Roll) == 0x000040, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_BreakRotator_Pitch) == 0x000044, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_BreakRotator_Yaw) == 0x000048, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_GetLocation_ReturnValue1) == 0x00004C, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_GetLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_GetRawPawn_ReturnValue) == 0x000058, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_GetRawPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_GetLocation_ReturnValue2) == 0x000060, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_GetLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_FindPathToLocationSynchronously_ReturnValue) == 0x000070, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_FindPathToLocationSynchronously_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_GetForwardVector_ReturnValue) == 0x000078, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_IsValid_ReturnValue) == 0x000084, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_Array_Get_Item) == 0x000088, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000094, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_RandomFloatInRange_ReturnValue) == 0x000098, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x00009C, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_SelectFloat_ReturnValue) == 0x0000A0, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A4, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_RandomFloatInRange_ReturnValue1) == 0x0000A8, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_RandomFloatInRange_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_Add_FloatFloat_ReturnValue1) == 0x0000AC, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_MakeRotator_ReturnValue) == 0x0000B0, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000BC, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000C8, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D4, "Member 'BTS_AJBSetRandomNearbyLocation_C_GetRandomNearbyLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

}


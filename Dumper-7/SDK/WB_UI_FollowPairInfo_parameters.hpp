#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_UI_FollowPairInfo

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "ST_ShopCompetitionUITeamInfo_structs.hpp"


namespace SDK::Params
{

// Function WB_UI_FollowPairInfo.WB_UI_FollowPairInfo_C.ExecuteUbergraph_WB_UI_FollowPairInfo
// 0x02A0 (0x02A0 - 0x0000)
struct WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsOutViewPosition;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_CustomEvent_ScreenPosition;                 // 0x0008(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetOrthant_Orthant;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0018(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0054(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ClampScreenPosition_NewPosition;          // 0x005C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0064(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue1;              // 0x0070(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00A0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_BarValue;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Time;                           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x00B8(0x0018)()
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X1;                         // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y1;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X2;                         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y2;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewScale;                       // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MaxMinScale;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OffsetLocation;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue1;             // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue1;                // 0x0100(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue2;                // 0x0108(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue3;                // 0x0110(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B[0x5];                                      // 0x011B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_InText;                         // 0x0120(0x0018)()
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInvisible;                     // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess;              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShopCompetitionUITeamInfoByPlayerID_bSuccess; // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_ShopCompetitionUITeamInfo          CallFunc_GetShopCompetitionUITeamInfoByPlayerID_ReturnValue; // 0x0160(0x0028)(HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0188(0x0028)()
	bool                                          CallFunc_PlayModeIsPair_ReturnValue;               // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetAJBPadIcon_KeyAssignConsidering_OutTexture; // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_HpValue;                        // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_ApValue;                        // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CPValue;                        // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MaxCPValue;                     // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MaxHpValue;                     // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SpValue;                        // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x01E0(0x0018)()
	float                                         CallFunc_FClamp_ReturnValue1;                      // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue2;                      // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue1;          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue4;                // 0x0208(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue5;                // 0x0210(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger1_CmpSuccess;                  // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_FollowTargetTransform;          // 0x0220(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bEnable;                        // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0254(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0260(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x026C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x027C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue1;        // 0x028C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0294(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x029D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select1_Default;                            // 0x029E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo) == 0x000010, "Wrong alignment on WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo");
static_assert(sizeof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo) == 0x0002A0, "Wrong size on WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, EntryPoint) == 0x000000, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, Temp_byte_Variable) == 0x000004, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_CustomEvent_bIsOutViewPosition) == 0x000005, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_CustomEvent_bIsOutViewPosition' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_CustomEvent_ScreenPosition) == 0x000008, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_CustomEvent_ScreenPosition' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, Temp_bool_Variable) == 0x000010, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_GetOrthant_Orthant) == 0x000014, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_GetOrthant_Orthant' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_Event_MyGeometry) == 0x000018, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_Event_InDeltaTime) == 0x000050, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_GetDesiredSize_ReturnValue) == 0x000054, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_ClampScreenPosition_NewPosition) == 0x00005C, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_ClampScreenPosition_NewPosition' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000064, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_GetViewportScale_ReturnValue) == 0x00006C, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_GetDesiredSize_ReturnValue1) == 0x000070, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_GetDesiredSize_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_BreakVector2D_X) == 0x000078, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_BreakVector2D_Y) == 0x00007C, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000080, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x000088, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000094, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_FMax_ReturnValue) == 0x000098, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_Lerp_ReturnValue) == 0x00009C, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_MakeVector2D_ReturnValue) == 0x0000A0, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000A8, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_CustomEvent_BarValue) == 0x0000B0, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_CustomEvent_BarValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_CustomEvent_Time) == 0x0000B4, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_CustomEvent_Time' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_Conv_FloatToText_ReturnValue) == 0x0000B8, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000D0, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_BreakVector2D_X1) == 0x0000D4, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_BreakVector2D_X1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_BreakVector2D_Y1) == 0x0000D8, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_BreakVector2D_Y1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_BreakVector2D_X2) == 0x0000DC, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_BreakVector2D_X2' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_BreakVector2D_Y2) == 0x0000E0, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_BreakVector2D_Y2' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_CustomEvent_NewScale) == 0x0000E4, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_CustomEvent_NewScale' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_CustomEvent_MaxMinScale) == 0x0000E8, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_CustomEvent_MaxMinScale' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_CustomEvent_OffsetLocation) == 0x0000EC, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_CustomEvent_OffsetLocation' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000F0, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_SwitchInteger_CmpSuccess) == 0x0000F4, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_MapRangeClamped_ReturnValue) == 0x0000F8, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_MapRangeClamped_ReturnValue1) == 0x0000FC, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_MapRangeClamped_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_MakeVector2D_ReturnValue1) == 0x000100, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_MakeVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_MakeVector2D_ReturnValue2) == 0x000108, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_MakeVector2D_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_MakeVector2D_ReturnValue3) == 0x000110, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_MakeVector2D_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, Temp_byte_Variable1) == 0x000118, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, Temp_byte_Variable2) == 0x000119, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, Temp_bool_Variable1) == 0x00011A, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_CustomEvent_InText) == 0x000120, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_CustomEvent_InText' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000138, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_CustomEvent_bInvisible) == 0x00013C, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_CustomEvent_bInvisible' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_FInterpTo_ReturnValue) == 0x000140, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_SelectFloat_ReturnValue) == 0x000144, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_GetAJBInGameHUD_BP_bSuccess) == 0x000148, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_GetAJBInGameHUD_BP_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD) == 0x000150, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_GetShopCompetitionUITeamInfoByPlayerID_bSuccess) == 0x000158, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_GetShopCompetitionUITeamInfoByPlayerID_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_GetShopCompetitionUITeamInfoByPlayerID_ReturnValue) == 0x000160, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_GetShopCompetitionUITeamInfoByPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_MakeStruct_SlateColor) == 0x000188, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_PlayModeIsPair_ReturnValue) == 0x0001B0, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_PlayModeIsPair_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_GetAJBPadIcon_KeyAssignConsidering_OutTexture) == 0x0001B8, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_GetAJBPadIcon_KeyAssignConsidering_OutTexture' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_CustomEvent_HpValue) == 0x0001C0, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_CustomEvent_HpValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_CustomEvent_ApValue) == 0x0001C4, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_CustomEvent_ApValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_CustomEvent_CPValue) == 0x0001C8, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_CustomEvent_CPValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_CustomEvent_MaxCPValue) == 0x0001CC, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_CustomEvent_MaxCPValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_CustomEvent_MaxHpValue) == 0x0001D0, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_CustomEvent_MaxHpValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_CustomEvent_SpValue) == 0x0001D4, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_CustomEvent_SpValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_Add_IntInt_ReturnValue) == 0x0001D8, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_FClamp_ReturnValue) == 0x0001DC, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_Conv_IntToText_ReturnValue) == 0x0001E0, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_FClamp_ReturnValue1) == 0x0001F8, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_FClamp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_FClamp_ReturnValue2) == 0x0001FC, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_FClamp_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_GetDynamicMaterial_ReturnValue1) == 0x000200, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_GetDynamicMaterial_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_MakeVector2D_ReturnValue4) == 0x000208, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_MakeVector2D_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_MakeVector2D_ReturnValue5) == 0x000210, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_MakeVector2D_ReturnValue5' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_SwitchInteger1_CmpSuccess) == 0x000218, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_SwitchInteger1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_CustomEvent_FollowTargetTransform) == 0x000220, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_CustomEvent_FollowTargetTransform' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_CustomEvent_bEnable) == 0x000250, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_CustomEvent_bEnable' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_BreakTransform_Location) == 0x000254, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_BreakTransform_Rotation) == 0x000260, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_BreakTransform_Scale) == 0x00026C, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_Select_Default) == 0x000278, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_MakeStruct_LinearColor) == 0x00027C, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_Divide_Vector2DFloat_ReturnValue1) == 0x00028C, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_Divide_Vector2DFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000294, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_GetVisibility_ReturnValue) == 0x00029C, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00029D, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo, K2Node_Select1_Default) == 0x00029E, "Member 'WB_UI_FollowPairInfo_C_ExecuteUbergraph_WB_UI_FollowPairInfo::K2Node_Select1_Default' has a wrong offset!");

// Function WB_UI_FollowPairInfo.WB_UI_FollowPairInfo_C.UpdateClairvoyance
// 0x0001 (0x0001 - 0x0000)
struct WB_UI_FollowPairInfo_C_UpdateClairvoyance final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_UI_FollowPairInfo_C_UpdateClairvoyance) == 0x000001, "Wrong alignment on WB_UI_FollowPairInfo_C_UpdateClairvoyance");
static_assert(sizeof(WB_UI_FollowPairInfo_C_UpdateClairvoyance) == 0x000001, "Wrong size on WB_UI_FollowPairInfo_C_UpdateClairvoyance");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdateClairvoyance, bEnable) == 0x000000, "Member 'WB_UI_FollowPairInfo_C_UpdateClairvoyance::bEnable' has a wrong offset!");

// Function WB_UI_FollowPairInfo.WB_UI_FollowPairInfo_C.Update
// 0x0030 (0x0030 - 0x0000)
struct WB_UI_FollowPairInfo_C_Update final
{
public:
	struct FTransform                             FollowTargetTransform;                             // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_UI_FollowPairInfo_C_Update) == 0x000010, "Wrong alignment on WB_UI_FollowPairInfo_C_Update");
static_assert(sizeof(WB_UI_FollowPairInfo_C_Update) == 0x000030, "Wrong size on WB_UI_FollowPairInfo_C_Update");
static_assert(offsetof(WB_UI_FollowPairInfo_C_Update, FollowTargetTransform) == 0x000000, "Member 'WB_UI_FollowPairInfo_C_Update::FollowTargetTransform' has a wrong offset!");

// Function WB_UI_FollowPairInfo.WB_UI_FollowPairInfo_C.SetPairHPAndAPAndCPAndSP
// 0x0018 (0x0018 - 0x0000)
struct WB_UI_FollowPairInfo_C_SetPairHPAndAPAndCPAndSP final
{
public:
	float                                         HpValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ApValue;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CPValue;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxCPValue;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHpValue;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SpValue;                                           // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_UI_FollowPairInfo_C_SetPairHPAndAPAndCPAndSP) == 0x000004, "Wrong alignment on WB_UI_FollowPairInfo_C_SetPairHPAndAPAndCPAndSP");
static_assert(sizeof(WB_UI_FollowPairInfo_C_SetPairHPAndAPAndCPAndSP) == 0x000018, "Wrong size on WB_UI_FollowPairInfo_C_SetPairHPAndAPAndCPAndSP");
static_assert(offsetof(WB_UI_FollowPairInfo_C_SetPairHPAndAPAndCPAndSP, HpValue) == 0x000000, "Member 'WB_UI_FollowPairInfo_C_SetPairHPAndAPAndCPAndSP::HpValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_SetPairHPAndAPAndCPAndSP, ApValue) == 0x000004, "Member 'WB_UI_FollowPairInfo_C_SetPairHPAndAPAndCPAndSP::ApValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_SetPairHPAndAPAndCPAndSP, CPValue) == 0x000008, "Member 'WB_UI_FollowPairInfo_C_SetPairHPAndAPAndCPAndSP::CPValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_SetPairHPAndAPAndCPAndSP, MaxCPValue) == 0x00000C, "Member 'WB_UI_FollowPairInfo_C_SetPairHPAndAPAndCPAndSP::MaxCPValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_SetPairHPAndAPAndCPAndSP, MaxHpValue) == 0x000010, "Member 'WB_UI_FollowPairInfo_C_SetPairHPAndAPAndCPAndSP::MaxHpValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_SetPairHPAndAPAndCPAndSP, SpValue) == 0x000014, "Member 'WB_UI_FollowPairInfo_C_SetPairHPAndAPAndCPAndSP::SpValue' has a wrong offset!");

// Function WB_UI_FollowPairInfo.WB_UI_FollowPairInfo_C.SetEnabledInvisibleDistance
// 0x0001 (0x0001 - 0x0000)
struct WB_UI_FollowPairInfo_C_SetEnabledInvisibleDistance final
{
public:
	bool                                          bInvisible;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_UI_FollowPairInfo_C_SetEnabledInvisibleDistance) == 0x000001, "Wrong alignment on WB_UI_FollowPairInfo_C_SetEnabledInvisibleDistance");
static_assert(sizeof(WB_UI_FollowPairInfo_C_SetEnabledInvisibleDistance) == 0x000001, "Wrong size on WB_UI_FollowPairInfo_C_SetEnabledInvisibleDistance");
static_assert(offsetof(WB_UI_FollowPairInfo_C_SetEnabledInvisibleDistance, bInvisible) == 0x000000, "Member 'WB_UI_FollowPairInfo_C_SetEnabledInvisibleDistance::bInvisible' has a wrong offset!");

// Function WB_UI_FollowPairInfo.WB_UI_FollowPairInfo_C.SetPairName
// 0x0018 (0x0018 - 0x0000)
struct WB_UI_FollowPairInfo_C_SetPairName final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_UI_FollowPairInfo_C_SetPairName) == 0x000008, "Wrong alignment on WB_UI_FollowPairInfo_C_SetPairName");
static_assert(sizeof(WB_UI_FollowPairInfo_C_SetPairName) == 0x000018, "Wrong size on WB_UI_FollowPairInfo_C_SetPairName");
static_assert(offsetof(WB_UI_FollowPairInfo_C_SetPairName, InText) == 0x000000, "Member 'WB_UI_FollowPairInfo_C_SetPairName::InText' has a wrong offset!");

// Function WB_UI_FollowPairInfo.WB_UI_FollowPairInfo_C.UpdateWidgetScale
// 0x000C (0x000C - 0x0000)
struct WB_UI_FollowPairInfo_C_UpdateWidgetScale final
{
public:
	float                                         NewScale;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxMinScale;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffsetLocation;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_UI_FollowPairInfo_C_UpdateWidgetScale) == 0x000004, "Wrong alignment on WB_UI_FollowPairInfo_C_UpdateWidgetScale");
static_assert(sizeof(WB_UI_FollowPairInfo_C_UpdateWidgetScale) == 0x00000C, "Wrong size on WB_UI_FollowPairInfo_C_UpdateWidgetScale");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdateWidgetScale, NewScale) == 0x000000, "Member 'WB_UI_FollowPairInfo_C_UpdateWidgetScale::NewScale' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdateWidgetScale, MaxMinScale) == 0x000004, "Member 'WB_UI_FollowPairInfo_C_UpdateWidgetScale::MaxMinScale' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdateWidgetScale, OffsetLocation) == 0x000008, "Member 'WB_UI_FollowPairInfo_C_UpdateWidgetScale::OffsetLocation' has a wrong offset!");

// Function WB_UI_FollowPairInfo.WB_UI_FollowPairInfo_C.UpdateDyingBar
// 0x0008 (0x0008 - 0x0000)
struct WB_UI_FollowPairInfo_C_UpdateDyingBar final
{
public:
	float                                         BarValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_UI_FollowPairInfo_C_UpdateDyingBar) == 0x000004, "Wrong alignment on WB_UI_FollowPairInfo_C_UpdateDyingBar");
static_assert(sizeof(WB_UI_FollowPairInfo_C_UpdateDyingBar) == 0x000008, "Wrong size on WB_UI_FollowPairInfo_C_UpdateDyingBar");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdateDyingBar, BarValue) == 0x000000, "Member 'WB_UI_FollowPairInfo_C_UpdateDyingBar::BarValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdateDyingBar, Time) == 0x000004, "Member 'WB_UI_FollowPairInfo_C_UpdateDyingBar::Time' has a wrong offset!");

// Function WB_UI_FollowPairInfo.WB_UI_FollowPairInfo_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_UI_FollowPairInfo_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_UI_FollowPairInfo_C_Tick) == 0x000004, "Wrong alignment on WB_UI_FollowPairInfo_C_Tick");
static_assert(sizeof(WB_UI_FollowPairInfo_C_Tick) == 0x00003C, "Wrong size on WB_UI_FollowPairInfo_C_Tick");
static_assert(offsetof(WB_UI_FollowPairInfo_C_Tick, MyGeometry) == 0x000000, "Member 'WB_UI_FollowPairInfo_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_UI_FollowPairInfo_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_UI_FollowPairInfo.WB_UI_FollowPairInfo_C.UpdateArrowVisibility
// 0x000C (0x000C - 0x0000)
struct WB_UI_FollowPairInfo_C_UpdateArrowVisibility final
{
public:
	bool                                          bIsOutViewPosition;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ScreenPosition;                                    // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_UI_FollowPairInfo_C_UpdateArrowVisibility) == 0x000004, "Wrong alignment on WB_UI_FollowPairInfo_C_UpdateArrowVisibility");
static_assert(sizeof(WB_UI_FollowPairInfo_C_UpdateArrowVisibility) == 0x00000C, "Wrong size on WB_UI_FollowPairInfo_C_UpdateArrowVisibility");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdateArrowVisibility, bIsOutViewPosition) == 0x000000, "Member 'WB_UI_FollowPairInfo_C_UpdateArrowVisibility::bIsOutViewPosition' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdateArrowVisibility, ScreenPosition) == 0x000004, "Member 'WB_UI_FollowPairInfo_C_UpdateArrowVisibility::ScreenPosition' has a wrong offset!");

// Function WB_UI_FollowPairInfo.WB_UI_FollowPairInfo_C.UpdatePairComponentPosition
// 0x0130 (0x0130 - 0x0000)
struct WB_UI_FollowPairInfo_C_UpdatePairComponentPosition final
{
public:
	struct FVector                                PairWorldPosition;                                 // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDPIScaledDesiredSize_ReturnValue;      // 0x0018(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x002C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0038(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0044(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue1;                // 0x004C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue2;                // 0x0054(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue1;             // 0x005C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0064(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue1;   // 0x006C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInViewPositionFun_ReturnValue;          // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue1;        // 0x0078(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x0088(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x00D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue3;                // 0x00EC(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x00F4(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X1;                         // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y1;                         // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue1;                         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0110(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0118(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue1;        // 0x0120(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition) == 0x000010, "Wrong alignment on WB_UI_FollowPairInfo_C_UpdatePairComponentPosition");
static_assert(sizeof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition) == 0x000130, "Wrong size on WB_UI_FollowPairInfo_C_UpdatePairComponentPosition");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, PairWorldPosition) == 0x000000, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::PairWorldPosition' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_GetViewportScale_ReturnValue) == 0x000010, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_GetDPIScaledDesiredSize_ReturnValue) == 0x000018, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_GetDPIScaledDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000020, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_BreakVector2D_X) == 0x000024, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_MakeVector2D_ReturnValue) == 0x00002C, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000034, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_GetViewportSize_ReturnValue) == 0x000038, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000040, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000044, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_MakeVector2D_ReturnValue1) == 0x00004C, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_MakeVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_MakeVector2D_ReturnValue2) == 0x000054, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_MakeVector2D_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_GetViewportSize_ReturnValue1) == 0x00005C, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_GetViewportSize_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000064, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_Subtract_Vector2DVector2D_ReturnValue1) == 0x00006C, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_Subtract_Vector2DVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_IsInViewPositionFun_ReturnValue) == 0x000074, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_IsInViewPositionFun_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_Divide_Vector2DFloat_ReturnValue1) == 0x000078, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_Divide_Vector2DFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_GetPlayerController_ReturnValue) == 0x000080, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x000088, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x000090, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000098, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_GetTransform_ReturnValue) == 0x0000A0, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_InverseTransformLocation_ReturnValue) == 0x0000D0, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_BreakVector_X) == 0x0000DC, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_BreakVector_Y) == 0x0000E0, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_BreakVector_Z) == 0x0000E4, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x0000E8, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_MakeVector2D_ReturnValue3) == 0x0000EC, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_MakeVector2D_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x0000F4, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_BreakVector2D_X1) == 0x0000FC, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_BreakVector2D_X1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_BreakVector2D_Y1) == 0x000100, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_BreakVector2D_Y1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_Abs_ReturnValue) == 0x000104, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_Abs_ReturnValue1) == 0x000108, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_Abs_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_FMin_ReturnValue) == 0x00010C, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000110, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000118, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_UpdatePairComponentPosition, CallFunc_Add_Vector2DVector2D_ReturnValue1) == 0x000120, "Member 'WB_UI_FollowPairInfo_C_UpdatePairComponentPosition::CallFunc_Add_Vector2DVector2D_ReturnValue1' has a wrong offset!");

// Function WB_UI_FollowPairInfo.WB_UI_FollowPairInfo_C.ClampScreenPosition
// 0x00A0 (0x00A0 - 0x0000)
struct WB_UI_FollowPairInfo_C_ClampScreenPosition final
{
public:
	struct FVector2D                              Position;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NewPosition;                                       // 0x0008(0x0008)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LPosY;                                             // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LPosX;                                             // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LTargetValue;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LHalfViewportSize;                                 // 0x001C(0x0008)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x002C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X1;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y1;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X2;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y2;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue1;             // 0x0044(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X3;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y3;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X4;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y4;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X5;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y5;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue1;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue2;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue1;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x007C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X6;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y6;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue2;             // 0x008C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0094(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue3;             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_UI_FollowPairInfo_C_ClampScreenPosition) == 0x000004, "Wrong alignment on WB_UI_FollowPairInfo_C_ClampScreenPosition");
static_assert(sizeof(WB_UI_FollowPairInfo_C_ClampScreenPosition) == 0x0000A0, "Wrong size on WB_UI_FollowPairInfo_C_ClampScreenPosition");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, Position) == 0x000000, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::Position' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, NewPosition) == 0x000008, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::NewPosition' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, LPosY) == 0x000010, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::LPosY' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, LPosX) == 0x000014, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::LPosX' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, LTargetValue) == 0x000018, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::LTargetValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, LHalfViewportSize) == 0x00001C, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::LHalfViewportSize' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_BreakVector2D_X) == 0x000024, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_GetViewportSize_ReturnValue) == 0x00002C, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_BreakVector2D_X1) == 0x000034, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_BreakVector2D_X1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_BreakVector2D_Y1) == 0x000038, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_BreakVector2D_Y1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_BreakVector2D_X2) == 0x00003C, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_BreakVector2D_X2' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_BreakVector2D_Y2) == 0x000040, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_BreakVector2D_Y2' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_GetViewportSize_ReturnValue1) == 0x000044, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_GetViewportSize_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_BreakVector2D_X3) == 0x00004C, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_BreakVector2D_X3' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_BreakVector2D_Y3) == 0x000050, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_BreakVector2D_Y3' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_BreakVector2D_X4) == 0x000054, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_BreakVector2D_X4' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_BreakVector2D_Y4) == 0x000058, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_BreakVector2D_Y4' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_BreakVector2D_X5) == 0x00005C, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_BreakVector2D_X5' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_BreakVector2D_Y5) == 0x000060, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_BreakVector2D_Y5' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_MapRangeClamped_ReturnValue) == 0x000064, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000068, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_MapRangeClamped_ReturnValue1) == 0x00006C, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_MapRangeClamped_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_Less_FloatFloat_ReturnValue) == 0x000070, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x000071, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_MapRangeClamped_ReturnValue2) == 0x000074, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_MapRangeClamped_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_Less_FloatFloat_ReturnValue1) == 0x000078, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_Less_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_MakeVector2D_ReturnValue) == 0x00007C, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_BreakVector2D_X6) == 0x000084, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_BreakVector2D_X6' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_BreakVector2D_Y6) == 0x000088, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_BreakVector2D_Y6' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_GetViewportSize_ReturnValue2) == 0x00008C, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_GetViewportSize_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000094, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_ClampScreenPosition, CallFunc_MapRangeClamped_ReturnValue3) == 0x00009C, "Member 'WB_UI_FollowPairInfo_C_ClampScreenPosition::CallFunc_MapRangeClamped_ReturnValue3' has a wrong offset!");

// Function WB_UI_FollowPairInfo.WB_UI_FollowPairInfo_C.SetScreenPosHeaderHeightLimit
// 0x0008 (0x0008 - 0x0000)
struct WB_UI_FollowPairInfo_C_SetScreenPosHeaderHeightLimit final
{
public:
	float                                         Height;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_UI_FollowPairInfo_C_SetScreenPosHeaderHeightLimit) == 0x000004, "Wrong alignment on WB_UI_FollowPairInfo_C_SetScreenPosHeaderHeightLimit");
static_assert(sizeof(WB_UI_FollowPairInfo_C_SetScreenPosHeaderHeightLimit) == 0x000008, "Wrong size on WB_UI_FollowPairInfo_C_SetScreenPosHeaderHeightLimit");
static_assert(offsetof(WB_UI_FollowPairInfo_C_SetScreenPosHeaderHeightLimit, Height) == 0x000000, "Member 'WB_UI_FollowPairInfo_C_SetScreenPosHeaderHeightLimit::Height' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_SetScreenPosHeaderHeightLimit, CallFunc_Less_FloatFloat_ReturnValue) == 0x000004, "Member 'WB_UI_FollowPairInfo_C_SetScreenPosHeaderHeightLimit::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function WB_UI_FollowPairInfo.WB_UI_FollowPairInfo_C.GetOrthant
// 0x00AC (0x00AC - 0x0000)
struct WB_UI_FollowPairInfo_C_GetOrthant final
{
public:
	struct FVector2D                              ScreenPosition;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Orthant;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DiagonalDegreeOffset3Local;                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DiagonalDegreeOffset2Local;                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DiagonalDegreeOffset1Local;                        // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DiagonalDegreeLocal;                               // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DegreeLocal;                                       // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0030(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue1;             // 0x0038(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0048(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0054(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan_ReturnValue;                      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0060(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue1;        // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue2;        // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue3;        // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0070(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue4;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DotProduct2D_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue5;        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue1;                // 0x0090(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DotProduct2D_ReturnValue1;                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CrossProduct2D_ReturnValue;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue1;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_UI_FollowPairInfo_C_GetOrthant) == 0x000004, "Wrong alignment on WB_UI_FollowPairInfo_C_GetOrthant");
static_assert(sizeof(WB_UI_FollowPairInfo_C_GetOrthant) == 0x0000AC, "Wrong size on WB_UI_FollowPairInfo_C_GetOrthant");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, ScreenPosition) == 0x000000, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::ScreenPosition' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, Orthant) == 0x000008, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::Orthant' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, DiagonalDegreeOffset3Local) == 0x00000C, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::DiagonalDegreeOffset3Local' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, DiagonalDegreeOffset2Local) == 0x000010, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::DiagonalDegreeOffset2Local' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, DiagonalDegreeOffset1Local) == 0x000014, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::DiagonalDegreeOffset1Local' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, DiagonalDegreeLocal) == 0x000018, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::DiagonalDegreeLocal' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, DegreeLocal) == 0x00001C, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::DegreeLocal' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, Temp_bool_Variable) == 0x000020, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x00002C, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_GetViewportSize_ReturnValue) == 0x000030, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_GetViewportSize_ReturnValue1) == 0x000038, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_GetViewportSize_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_BreakVector2D_X) == 0x000040, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_BreakVector2D_Y) == 0x000044, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000048, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000050, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000054, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_DegAtan_ReturnValue) == 0x00005C, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_DegAtan_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_Normal2D_ReturnValue) == 0x000060, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000068, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_LessEqual_FloatFloat_ReturnValue1) == 0x000069, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_LessEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_LessEqual_FloatFloat_ReturnValue2) == 0x00006A, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_LessEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_LessEqual_FloatFloat_ReturnValue3) == 0x00006B, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_LessEqual_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_BooleanAND_ReturnValue) == 0x00006C, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_BooleanAND_ReturnValue1) == 0x00006D, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_MakeVector2D_ReturnValue) == 0x000070, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_LessEqual_FloatFloat_ReturnValue4) == 0x000078, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_LessEqual_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_DotProduct2D_ReturnValue) == 0x00007C, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_DotProduct2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_LessEqual_FloatFloat_ReturnValue5) == 0x000080, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_LessEqual_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_DegAcos_ReturnValue) == 0x000084, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_BooleanAND_ReturnValue2) == 0x000088, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_Add_FloatFloat_ReturnValue1) == 0x00008C, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_MakeVector2D_ReturnValue1) == 0x000090, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_MakeVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_DotProduct2D_ReturnValue1) == 0x000098, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_DotProduct2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_CrossProduct2D_ReturnValue) == 0x00009C, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_CrossProduct2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_DegAcos_ReturnValue1) == 0x0000A0, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_DegAcos_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000A4, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetOrthant, K2Node_Select_Default) == 0x0000A8, "Member 'WB_UI_FollowPairInfo_C_GetOrthant::K2Node_Select_Default' has a wrong offset!");

// Function WB_UI_FollowPairInfo.WB_UI_FollowPairInfo_C.GetDpiScaledDesiredSize
// 0x001C (0x001C - 0x0000)
struct WB_UI_FollowPairInfo_C_GetDpiScaledDesiredSize final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x000C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0014(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_UI_FollowPairInfo_C_GetDpiScaledDesiredSize) == 0x000004, "Wrong alignment on WB_UI_FollowPairInfo_C_GetDpiScaledDesiredSize");
static_assert(sizeof(WB_UI_FollowPairInfo_C_GetDpiScaledDesiredSize) == 0x00001C, "Wrong size on WB_UI_FollowPairInfo_C_GetDpiScaledDesiredSize");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetDpiScaledDesiredSize, ReturnValue) == 0x000000, "Member 'WB_UI_FollowPairInfo_C_GetDpiScaledDesiredSize::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetDpiScaledDesiredSize, CallFunc_GetViewportScale_ReturnValue) == 0x000008, "Member 'WB_UI_FollowPairInfo_C_GetDpiScaledDesiredSize::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetDpiScaledDesiredSize, CallFunc_GetDesiredSize_ReturnValue) == 0x00000C, "Member 'WB_UI_FollowPairInfo_C_GetDpiScaledDesiredSize::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_GetDpiScaledDesiredSize, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000014, "Member 'WB_UI_FollowPairInfo_C_GetDpiScaledDesiredSize::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");

// Function WB_UI_FollowPairInfo.WB_UI_FollowPairInfo_C.IsInViewPositionFun
// 0x0050 (0x0050 - 0x0000)
struct WB_UI_FollowPairInfo_C_IsInViewPositionFun final
{
public:
	struct FVector2D                              ScreenPosition;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDPIScaledDesiredSize_ReturnValue;      // 0x0014(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x001C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0024(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X1;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y1;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X2;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y2;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue1;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_UI_FollowPairInfo_C_IsInViewPositionFun) == 0x000004, "Wrong alignment on WB_UI_FollowPairInfo_C_IsInViewPositionFun");
static_assert(sizeof(WB_UI_FollowPairInfo_C_IsInViewPositionFun) == 0x000050, "Wrong size on WB_UI_FollowPairInfo_C_IsInViewPositionFun");
static_assert(offsetof(WB_UI_FollowPairInfo_C_IsInViewPositionFun, ScreenPosition) == 0x000000, "Member 'WB_UI_FollowPairInfo_C_IsInViewPositionFun::ScreenPosition' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_IsInViewPositionFun, ReturnValue) == 0x000008, "Member 'WB_UI_FollowPairInfo_C_IsInViewPositionFun::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_IsInViewPositionFun, CallFunc_BreakVector2D_X) == 0x00000C, "Member 'WB_UI_FollowPairInfo_C_IsInViewPositionFun::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_IsInViewPositionFun, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'WB_UI_FollowPairInfo_C_IsInViewPositionFun::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_IsInViewPositionFun, CallFunc_GetDPIScaledDesiredSize_ReturnValue) == 0x000014, "Member 'WB_UI_FollowPairInfo_C_IsInViewPositionFun::CallFunc_GetDPIScaledDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_IsInViewPositionFun, CallFunc_GetViewportSize_ReturnValue) == 0x00001C, "Member 'WB_UI_FollowPairInfo_C_IsInViewPositionFun::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_IsInViewPositionFun, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000024, "Member 'WB_UI_FollowPairInfo_C_IsInViewPositionFun::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_IsInViewPositionFun, CallFunc_BreakVector2D_X1) == 0x00002C, "Member 'WB_UI_FollowPairInfo_C_IsInViewPositionFun::CallFunc_BreakVector2D_X1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_IsInViewPositionFun, CallFunc_BreakVector2D_Y1) == 0x000030, "Member 'WB_UI_FollowPairInfo_C_IsInViewPositionFun::CallFunc_BreakVector2D_Y1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_IsInViewPositionFun, CallFunc_BreakVector2D_X2) == 0x000034, "Member 'WB_UI_FollowPairInfo_C_IsInViewPositionFun::CallFunc_BreakVector2D_X2' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_IsInViewPositionFun, CallFunc_BreakVector2D_Y2) == 0x000038, "Member 'WB_UI_FollowPairInfo_C_IsInViewPositionFun::CallFunc_BreakVector2D_Y2' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_IsInViewPositionFun, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00003C, "Member 'WB_UI_FollowPairInfo_C_IsInViewPositionFun::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_IsInViewPositionFun, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'WB_UI_FollowPairInfo_C_IsInViewPositionFun::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_IsInViewPositionFun, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000044, "Member 'WB_UI_FollowPairInfo_C_IsInViewPositionFun::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_IsInViewPositionFun, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000048, "Member 'WB_UI_FollowPairInfo_C_IsInViewPositionFun::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_IsInViewPositionFun, CallFunc_InRange_FloatFloat_ReturnValue1) == 0x00004C, "Member 'WB_UI_FollowPairInfo_C_IsInViewPositionFun::CallFunc_InRange_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_UI_FollowPairInfo_C_IsInViewPositionFun, CallFunc_BooleanAND_ReturnValue) == 0x00004D, "Member 'WB_UI_FollowPairInfo_C_IsInViewPositionFun::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}


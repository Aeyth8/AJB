#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBHamonBreathingSkill

#include "Basic.hpp"

#include "BP_AJBHamonBreathingSkill_classes.hpp"
#include "BP_AJBHamonBreathingSkill_parameters.hpp"


namespace SDK
{

// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.ExecuteUbergraph_BP_AJBHamonBreathingSkill
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBHamonBreathingSkill_C::ExecuteUbergraph_BP_AJBHamonBreathingSkill(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "ExecuteUbergraph_BP_AJBHamonBreathingSkill");

	Params::BP_AJBHamonBreathingSkill_C_ExecuteUbergraph_BP_AJBHamonBreathingSkill Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.OnActiveCore
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonBreathingSkill_C::OnActiveCore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "OnActiveCore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.OnInactivateCore
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonBreathingSkill_C::OnInactivateCore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "OnInactivateCore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.MC_CallOnDecideResult
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StateTimeRatio                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPlaySE                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsLastHamonModeEnabled                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHamonBreathingSkill_C::MC_CallOnDecideResult(uint8 Result, float StateTimeRatio, bool bPlaySE, bool IsLastHamonModeEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "MC_CallOnDecideResult");

	Params::BP_AJBHamonBreathingSkill_C_MC_CallOnDecideResult Parms{};

	Parms.Result = Result;
	Parms.StateTimeRatio = StateTimeRatio;
	Parms.bPlaySE = bPlaySE;
	Parms.IsLastHamonModeEnabled = IsLastHamonModeEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.ROS_CallOnDecideResult
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StateTimeRatio                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPlaySE                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsLastHamonModeEnabled                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHamonBreathingSkill_C::ROS_CallOnDecideResult(uint8 Result, float StateTimeRatio, bool bPlaySE, bool IsLastHamonModeEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "ROS_CallOnDecideResult");

	Params::BP_AJBHamonBreathingSkill_C_ROS_CallOnDecideResult Parms{};

	Parms.Result = Result;
	Parms.StateTimeRatio = StateTimeRatio;
	Parms.bPlaySE = bPlaySE;
	Parms.IsLastHamonModeEnabled = IsLastHamonModeEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.CallOnDecideResult_Local
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPlaySE                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsLastHamonModeEnabled                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHamonBreathingSkill_C::CallOnDecideResult_Local(uint8 Result, bool bPlaySE, bool IsLastHamonModeEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "CallOnDecideResult_Local");

	Params::BP_AJBHamonBreathingSkill_C_CallOnDecideResult_Local Parms{};

	Parms.Result = Result;
	Parms.bPlaySE = bPlaySE;
	Parms.IsLastHamonModeEnabled = IsLastHamonModeEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.ResetGate_Play_HamonBreathVoice
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonBreathingSkill_C::ResetGate_Play_HamonBreathVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "ResetGate_Play_HamonBreathVoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.ReleaseButton
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonBreathingSkill_C::ReleaseButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "ReleaseButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.ReserveActive
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonBreathingSkill_C::ReserveActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "ReserveActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.Run_BreathingResultEffect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPlaySE                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsLastHamonModeEnabled                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHamonBreathingSkill_C::Run_BreathingResultEffect(uint8 Timing, bool bPlaySE, bool IsLastHamonModeEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "Run_BreathingResultEffect");

	Params::BP_AJBHamonBreathingSkill_C_Run_BreathingResultEffect Parms{};

	Parms.Timing = Timing;
	Parms.bPlaySE = bPlaySE;
	Parms.IsLastHamonModeEnabled = IsLastHamonModeEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.Play_HamonBreathVoice
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonBreathingSkill_C::Play_HamonBreathVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "Play_HamonBreathVoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.Play_BeginHamonModeVoice
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonBreathingSkill_C::Play_BeginHamonModeVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "Play_BeginHamonModeVoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.Play_Breathing_FailedSE
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonBreathingSkill_C::Play_Breathing_FailedSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "Play_Breathing_FailedSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.Play_Breathing_CriticalSuccessSE
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonBreathingSkill_C::Play_Breathing_CriticalSuccessSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "Play_Breathing_CriticalSuccessSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.Play_Breathing_SuccessSE
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonBreathingSkill_C::Play_Breathing_SuccessSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "Play_Breathing_SuccessSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.End_Breathing_LoopSE
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonBreathingSkill_C::End_Breathing_LoopSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "End_Breathing_LoopSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.Pause_Breathing_LoopSE
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonBreathingSkill_C::Pause_Breathing_LoopSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "Pause_Breathing_LoopSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.UnlockResumeGate_Breathing_LoopSE
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonBreathingSkill_C::UnlockResumeGate_Breathing_LoopSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "UnlockResumeGate_Breathing_LoopSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.OnEnd_Breathing_LoopSE
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EAkCallbackType                         CallbackType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAkCallbackInfo*                  CallbackInfo                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBHamonBreathingSkill_C::OnEnd_Breathing_LoopSE(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "OnEnd_Breathing_LoopSE");

	Params::BP_AJBHamonBreathingSkill_C_OnEnd_Breathing_LoopSE Parms{};

	Parms.CallbackType = CallbackType;
	Parms.CallbackInfo = CallbackInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.Resume_Breathing_LoopSE
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonBreathingSkill_C::Resume_Breathing_LoopSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "Resume_Breathing_LoopSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.Play_Breathing_LoopSE
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonBreathingSkill_C::Play_Breathing_LoopSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "Play_Breathing_LoopSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.IsInRangeTiming
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHamonBreathingSkill_C::IsInRangeTiming(bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "IsInRangeTiming");

	Params::BP_AJBHamonBreathingSkill_C_IsInRangeTiming Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.IsOutRangeTiming
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHamonBreathingSkill_C::IsOutRangeTiming(bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "IsOutRangeTiming");

	Params::BP_AJBHamonBreathingSkill_C_IsOutRangeTiming Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.IsReInputTiming
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHamonBreathingSkill_C::IsReInputTiming(bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "IsReInputTiming");

	Params::BP_AJBHamonBreathingSkill_C_IsReInputTiming Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.GetTotalTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  Time                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBHamonBreathingSkill_C::GetTotalTime(float* Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "GetTotalTime");

	Params::BP_AJBHamonBreathingSkill_C_GetTotalTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = Parms.Time;
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.RemainTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  Time                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBHamonBreathingSkill_C::RemainTime(float* Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "RemainTime");

	Params::BP_AJBHamonBreathingSkill_C_RemainTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = Parms.Time;
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.IsTiming
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHamonBreathingSkill_C::IsTiming(bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "IsTiming");

	Params::BP_AJBHamonBreathingSkill_C_IsTiming Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.IsJustTiming
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHamonBreathingSkill_C::IsJustTiming(bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "IsJustTiming");

	Params::BP_AJBHamonBreathingSkill_C_IsJustTiming Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.GetStateTimeRatio
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  StateTimeRatio                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBHamonBreathingSkill_C::GetStateTimeRatio(float* StateTimeRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "GetStateTimeRatio");

	Params::BP_AJBHamonBreathingSkill_C_GetStateTimeRatio Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StateTimeRatio != nullptr)
		*StateTimeRatio = Parms.StateTimeRatio;
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.OnChangedViewTarget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonBreathingSkill_C::OnChangedViewTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "OnChangedViewTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.StateBeginPlay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldRestore                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHamonBreathingSkill_C::StateBeginPlay(bool bShouldRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "StateBeginPlay");

	Params::BP_AJBHamonBreathingSkill_C_StateBeginPlay Parms{};

	Parms.bShouldRestore = bShouldRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBHamonBreathingSkill_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.OnCancel
// (Event, Public, BlueprintEvent)

void UBP_AJBHamonBreathingSkill_C::OnCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "OnCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.OnActive
// (Event, Public, BlueprintEvent)

void UBP_AJBHamonBreathingSkill_C::OnActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "OnActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBHamonBreathingSkill_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "ReceiveTick");

	Params::BP_AJBHamonBreathingSkill_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.OnInactive
// (Event, Public, BlueprintEvent)

void UBP_AJBHamonBreathingSkill_C::OnInactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "OnInactive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHamonBreathingSkill_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "NotifyTheWorld");

	Params::BP_AJBHamonBreathingSkill_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.CanUseSkill
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTagContainer*           TagContainer                                           (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBHamonBreathingSkill_C::CanUseSkill(struct FGameplayTagContainer* TagContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "CanUseSkill");

	Params::BP_AJBHamonBreathingSkill_C_CanUseSkill Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TagContainer != nullptr)
		*TagContainer = std::move(Parms.TagContainer);

	return Parms.ReturnValue;
}


// Function BP_AJBHamonBreathingSkill.BP_AJBHamonBreathingSkill_C.MPUpdateSettingOnActivate
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonBreathingSkill_C::MPUpdateSettingOnActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonBreathingSkill_C", "MPUpdateSettingOnActivate");

	UObject::ProcessEvent(Func, nullptr);
}

}


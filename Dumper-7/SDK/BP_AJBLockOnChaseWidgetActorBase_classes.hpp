#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBLockOnChaseWidgetActorBase

#include "Basic.hpp"

#include "BP_AJBActorBase_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBLockOnChaseWidgetActorBase.BP_AJBLockOnChaseWidgetActorBase_C
// 0x0070 (0x03A0 - 0x0330)
class ABP_AJBLockOnChaseWidgetActorBase_C : public ABP_AJBActorBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0330(0x0008)(Transient, DuplicateTransient)
	class AActor*                                 TargetActor;                                       // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	EAJBLockOnState                               LockOnState;                                       // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CauserCharacter;                                   // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UUserWidget*                            ChaseWidget;                                       // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UClass*                                 ChaseWidgetClass;                                  // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CancelLockOnSETag;                                 // 0x0360(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CancelPreLockOnSETag;                              // 0x0368(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           LockOnSETag;                                       // 0x0370(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PreLockOnSETag;                                    // 0x0378(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SwitchToLockOnSETag;                               // 0x0380(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           AttackSETag;                                       // 0x0388(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           DisableTickTimerHandler;                           // 0x0390(0x0008)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, AdvancedDisplay)
	bool                                          IsDuringTheWorld;                                  // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_399[0x3];                                      // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AutoCheckInvalidInterval;                          // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBLockOnChaseWidgetActorBase(int32 EntryPoint);
	void Tick_Validation();
	void OnBeginShotPhase(const struct FGameplayTag& PrevState);
	void BindEvents();
	void DestroyIfIsInvalid();
	void HideWidget();
	void EnableTick();
	void DelayedDisableTick();
	void RestoreWidget();
	void InactivateWidget();
	void DisableTick();
	void OnStateChanged(EAJBLockOnState PrevState, EAJBLockOnState NewState);
	void OnAttack();
	void OnSwitchToLockOn();
	void OnPreLockOn();
	void OnLockOn();
	void OnCancelPreLockOn();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void OnCancelLockOn();
	void ChangeState(EAJBLockOnState NewState);
	void ReceiveBeginPlay();
	void UpdateWidgetLocation();
	void Init(const class ABP_AJBInGameCharacter_C* Causer, class AActor* Target);
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();
	void GetWidgetPosition(class UWidget* Widget, struct FVector2D* Position);
	void OnChangedViewTarget();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBLockOnChaseWidgetActorBase_C">();
	}
	static class ABP_AJBLockOnChaseWidgetActorBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBLockOnChaseWidgetActorBase_C>();
	}
};
static_assert(alignof(ABP_AJBLockOnChaseWidgetActorBase_C) == 0x000008, "Wrong alignment on ABP_AJBLockOnChaseWidgetActorBase_C");
static_assert(sizeof(ABP_AJBLockOnChaseWidgetActorBase_C) == 0x0003A0, "Wrong size on ABP_AJBLockOnChaseWidgetActorBase_C");
static_assert(offsetof(ABP_AJBLockOnChaseWidgetActorBase_C, UberGraphFrame) == 0x000330, "Member 'ABP_AJBLockOnChaseWidgetActorBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AJBLockOnChaseWidgetActorBase_C, TargetActor) == 0x000338, "Member 'ABP_AJBLockOnChaseWidgetActorBase_C::TargetActor' has a wrong offset!");
static_assert(offsetof(ABP_AJBLockOnChaseWidgetActorBase_C, LockOnState) == 0x000340, "Member 'ABP_AJBLockOnChaseWidgetActorBase_C::LockOnState' has a wrong offset!");
static_assert(offsetof(ABP_AJBLockOnChaseWidgetActorBase_C, CauserCharacter) == 0x000348, "Member 'ABP_AJBLockOnChaseWidgetActorBase_C::CauserCharacter' has a wrong offset!");
static_assert(offsetof(ABP_AJBLockOnChaseWidgetActorBase_C, ChaseWidget) == 0x000350, "Member 'ABP_AJBLockOnChaseWidgetActorBase_C::ChaseWidget' has a wrong offset!");
static_assert(offsetof(ABP_AJBLockOnChaseWidgetActorBase_C, ChaseWidgetClass) == 0x000358, "Member 'ABP_AJBLockOnChaseWidgetActorBase_C::ChaseWidgetClass' has a wrong offset!");
static_assert(offsetof(ABP_AJBLockOnChaseWidgetActorBase_C, CancelLockOnSETag) == 0x000360, "Member 'ABP_AJBLockOnChaseWidgetActorBase_C::CancelLockOnSETag' has a wrong offset!");
static_assert(offsetof(ABP_AJBLockOnChaseWidgetActorBase_C, CancelPreLockOnSETag) == 0x000368, "Member 'ABP_AJBLockOnChaseWidgetActorBase_C::CancelPreLockOnSETag' has a wrong offset!");
static_assert(offsetof(ABP_AJBLockOnChaseWidgetActorBase_C, LockOnSETag) == 0x000370, "Member 'ABP_AJBLockOnChaseWidgetActorBase_C::LockOnSETag' has a wrong offset!");
static_assert(offsetof(ABP_AJBLockOnChaseWidgetActorBase_C, PreLockOnSETag) == 0x000378, "Member 'ABP_AJBLockOnChaseWidgetActorBase_C::PreLockOnSETag' has a wrong offset!");
static_assert(offsetof(ABP_AJBLockOnChaseWidgetActorBase_C, SwitchToLockOnSETag) == 0x000380, "Member 'ABP_AJBLockOnChaseWidgetActorBase_C::SwitchToLockOnSETag' has a wrong offset!");
static_assert(offsetof(ABP_AJBLockOnChaseWidgetActorBase_C, AttackSETag) == 0x000388, "Member 'ABP_AJBLockOnChaseWidgetActorBase_C::AttackSETag' has a wrong offset!");
static_assert(offsetof(ABP_AJBLockOnChaseWidgetActorBase_C, DisableTickTimerHandler) == 0x000390, "Member 'ABP_AJBLockOnChaseWidgetActorBase_C::DisableTickTimerHandler' has a wrong offset!");
static_assert(offsetof(ABP_AJBLockOnChaseWidgetActorBase_C, IsDuringTheWorld) == 0x000398, "Member 'ABP_AJBLockOnChaseWidgetActorBase_C::IsDuringTheWorld' has a wrong offset!");
static_assert(offsetof(ABP_AJBLockOnChaseWidgetActorBase_C, AutoCheckInvalidInterval) == 0x00039C, "Member 'ABP_AJBLockOnChaseWidgetActorBase_C::AutoCheckInvalidInterval' has a wrong offset!");

}


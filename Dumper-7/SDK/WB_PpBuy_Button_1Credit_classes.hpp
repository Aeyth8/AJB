#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_PpBuy_Button_1Credit

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "AJB_structs.hpp"
#include "AJB_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_PpBuy_Button_1Credit.WB_PpBuy_Button_1Credit_C
// 0x00B8 (0x0358 - 0x02A0)
class UWB_PpBuy_Button_1Credit_C final : public UAJBButtonWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Press;                                        // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              BonusBelt;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBButton*                             Button;                                            // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          BuyLimitText;                                      // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BuyLimitTextRoot;                                  // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Horiz_Bonus;                                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_Star;                                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           Retainer_Txt;                                      // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_0;                                     // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          Txt_Bounus;                                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          Txt_CreditNum;                                     // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          Txt_CreditText;                                    // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          Txt_PpBuyText;                                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          Txt_PpNum;                                         // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Aura_C*                             WB_Aura;                                           // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         AuraOffset;                                        // 0x0320(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PpNum;                                             // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CreditNum;                                         // 0x0328(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BonusNunm;                                         // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       PpTranceForm;                                      // 0x0330(0x001C)(Edit, BlueprintVisible, NoDestructor)
	bool                                          EnableActive;                                      // 0x034C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PreviousEnableActve;                               // 0x034D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bCheckLimitAdditionalCredit;                       // 0x034E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bLimit3000PP;                                      // 0x034F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bLimitPossesionPP;                                 // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WB_PpBuy_Button_1Credit(int32 EntryPoint);
	void Construct();
	void BndEvt__Button_K2Node_ComponentBoundEvent_1_OnButtonCancelledEvent__DelegateSignature();
	void BndEvt__Anim_Press_K2Node_ComponentBoundEvent_0_OnWidgetAnimationPlaybackStatusChanged__DelegateSignature();
	void SetEnableActiveWithoutVisualUpdate(bool EnableActve);
	void UpdateEnableButton(bool bPlaySE);
	void OnButtonReleasedAnimation();
	void OnButtonPressedAnimation();
	void PreConstruct(bool IsDesignTime);
	void UpdateDisplay();
	class UAJBButton* GetButton();
	void CanUseButton(bool* bCan, bool* bLimit3000PP_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_PpBuy_Button_1Credit_C">();
	}
	static class UWB_PpBuy_Button_1Credit_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_PpBuy_Button_1Credit_C>();
	}
};
static_assert(alignof(UWB_PpBuy_Button_1Credit_C) == 0x000008, "Wrong alignment on UWB_PpBuy_Button_1Credit_C");
static_assert(sizeof(UWB_PpBuy_Button_1Credit_C) == 0x000358, "Wrong size on UWB_PpBuy_Button_1Credit_C");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, UberGraphFrame) == 0x0002A0, "Member 'UWB_PpBuy_Button_1Credit_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, Anim_Press) == 0x0002A8, "Member 'UWB_PpBuy_Button_1Credit_C::Anim_Press' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, BonusBelt) == 0x0002B0, "Member 'UWB_PpBuy_Button_1Credit_C::BonusBelt' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, Button) == 0x0002B8, "Member 'UWB_PpBuy_Button_1Credit_C::Button' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, BuyLimitText) == 0x0002C0, "Member 'UWB_PpBuy_Button_1Credit_C::BuyLimitText' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, BuyLimitTextRoot) == 0x0002C8, "Member 'UWB_PpBuy_Button_1Credit_C::BuyLimitTextRoot' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, Horiz_Bonus) == 0x0002D0, "Member 'UWB_PpBuy_Button_1Credit_C::Horiz_Bonus' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, Img_Star) == 0x0002D8, "Member 'UWB_PpBuy_Button_1Credit_C::Img_Star' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, Retainer_Txt) == 0x0002E0, "Member 'UWB_PpBuy_Button_1Credit_C::Retainer_Txt' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, RetainerBox_0) == 0x0002E8, "Member 'UWB_PpBuy_Button_1Credit_C::RetainerBox_0' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, Txt_Bounus) == 0x0002F0, "Member 'UWB_PpBuy_Button_1Credit_C::Txt_Bounus' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, Txt_CreditNum) == 0x0002F8, "Member 'UWB_PpBuy_Button_1Credit_C::Txt_CreditNum' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, Txt_CreditText) == 0x000300, "Member 'UWB_PpBuy_Button_1Credit_C::Txt_CreditText' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, Txt_PpBuyText) == 0x000308, "Member 'UWB_PpBuy_Button_1Credit_C::Txt_PpBuyText' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, Txt_PpNum) == 0x000310, "Member 'UWB_PpBuy_Button_1Credit_C::Txt_PpNum' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, WB_Aura) == 0x000318, "Member 'UWB_PpBuy_Button_1Credit_C::WB_Aura' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, AuraOffset) == 0x000320, "Member 'UWB_PpBuy_Button_1Credit_C::AuraOffset' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, PpNum) == 0x000324, "Member 'UWB_PpBuy_Button_1Credit_C::PpNum' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, CreditNum) == 0x000328, "Member 'UWB_PpBuy_Button_1Credit_C::CreditNum' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, BonusNunm) == 0x00032C, "Member 'UWB_PpBuy_Button_1Credit_C::BonusNunm' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, PpTranceForm) == 0x000330, "Member 'UWB_PpBuy_Button_1Credit_C::PpTranceForm' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, EnableActive) == 0x00034C, "Member 'UWB_PpBuy_Button_1Credit_C::EnableActive' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, PreviousEnableActve) == 0x00034D, "Member 'UWB_PpBuy_Button_1Credit_C::PreviousEnableActve' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, bCheckLimitAdditionalCredit) == 0x00034E, "Member 'UWB_PpBuy_Button_1Credit_C::bCheckLimitAdditionalCredit' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, bLimit3000PP) == 0x00034F, "Member 'UWB_PpBuy_Button_1Credit_C::bLimit3000PP' has a wrong offset!");
static_assert(offsetof(UWB_PpBuy_Button_1Credit_C, bLimitPossesionPP) == 0x000350, "Member 'UWB_PpBuy_Button_1Credit_C::bLimitPossesionPP' has a wrong offset!");

}


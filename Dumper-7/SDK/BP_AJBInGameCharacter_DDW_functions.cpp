#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameCharacter_DDW

#include "Basic.hpp"

#include "BP_AJBInGameCharacter_DDW_classes.hpp"
#include "BP_AJBInGameCharacter_DDW_parameters.hpp"


namespace SDK
{

// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ExecuteUbergraph_BP_AJBInGameCharacter_DDW
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_DDW_C::ExecuteUbergraph_BP_AJBInGameCharacter_DDW(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "ExecuteUbergraph_BP_AJBInGameCharacter_DDW");

	Params::BP_AJBInGameCharacter_DDW_C_ExecuteUbergraph_BP_AJBInGameCharacter_DDW Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.SetupInteract
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_DDW_C::SetupInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "SetupInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.TryDestroyPreviewParticle
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_DDW_C::TryDestroyPreviewParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "TryDestroyPreviewParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.TrySpawnPreviewParticle
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_DDW_C::TrySpawnPreviewParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "TrySpawnPreviewParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ChangeVisual
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPossiblePlacement                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::ChangeVisual(bool bPossiblePlacement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "ChangeVisual");

	Params::BP_AJBInGameCharacter_DDW_C_ChangeVisual Parms{};

	Parms.bPossiblePlacement = bPossiblePlacement;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ChangeMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMesh*                      NewStaticMesh                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_DDW_C::ChangeMesh(class UStaticMesh* NewStaticMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "ChangeMesh");

	Params::BP_AJBInGameCharacter_DDW_C_ChangeMesh Parms{};

	Parms.NewStaticMesh = NewStaticMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.SetSerialNumber
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_DDW_C::SetSerialNumber(int32 SerialNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "SetSerialNumber");

	Params::BP_AJBInGameCharacter_DDW_C_SetSerialNumber Parms{};

	Parms.SerialNumber = SerialNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ChangeEnableServer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::ChangeEnableServer(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "ChangeEnableServer");

	Params::BP_AJBInGameCharacter_DDW_C_ChangeEnableServer Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ChangeEnableCore
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::ChangeEnableCore(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "ChangeEnableCore");

	Params::BP_AJBInGameCharacter_DDW_C_ChangeEnableCore Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.SetupPropertyStandInteract
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_DDW_C::SetupPropertyStandInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "SetupPropertyStandInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.FollowCharacterWhenUnpossessed_OnServer
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_DDW_C::FollowCharacterWhenUnpossessed_OnServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "FollowCharacterWhenUnpossessed_OnServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ChangeEnable
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::ChangeEnable(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "ChangeEnable");

	Params::BP_AJBInGameCharacter_DDW_C_ChangeEnable Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ChangeMeshVisibleServer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::ChangeMeshVisibleServer(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "ChangeMeshVisibleServer");

	Params::BP_AJBInGameCharacter_DDW_C_ChangeMeshVisibleServer Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ChangeMeshVisibleCore
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::ChangeMeshVisibleCore(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "ChangeMeshVisibleCore");

	Params::BP_AJBInGameCharacter_DDW_C_ChangeMeshVisibleCore Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ROS_AdjustmentLocation
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::ROS_AdjustmentLocation(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "ROS_AdjustmentLocation");

	Params::BP_AJBInGameCharacter_DDW_C_ROS_AdjustmentLocation Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.SetVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewVisibility                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::SetVisibility(bool NewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "SetVisibility");

	Params::BP_AJBInGameCharacter_DDW_C_SetVisibility Parms{};

	Parms.NewVisibility = NewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.GetCurrentNormal
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector*                         Normal                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_DDW_C::GetCurrentNormal(struct FVector* Normal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "GetCurrentNormal");

	Params::BP_AJBInGameCharacter_DDW_C_GetCurrentNormal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Normal != nullptr)
		*Normal = std::move(Parms.Normal);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.GetCurrentRotate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator*                        Rotation                                               (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::GetCurrentRotate(struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "GetCurrentRotate");

	Params::BP_AJBInGameCharacter_DDW_C_GetCurrentRotate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.GetCurrentMeshOffset
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector*                         Offset                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_DDW_C::GetCurrentMeshOffset(struct FVector* Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "GetCurrentMeshOffset");

	Params::BP_AJBInGameCharacter_DDW_C_GetCurrentMeshOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Offset != nullptr)
		*Offset = std::move(Parms.Offset);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ShouldSpawnPreviewParticle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bShouldSpawn                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::ShouldSpawnPreviewParticle(bool* bShouldSpawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "ShouldSpawnPreviewParticle");

	Params::BP_AJBInGameCharacter_DDW_C_ShouldSpawnPreviewParticle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldSpawn != nullptr)
		*bShouldSpawn = Parms.bShouldSpawn;
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.UpdateParameters
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_DDW_C::UpdateParameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "UpdateParameters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.CheckWallClimbStateAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bStateAction                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::CheckWallClimbStateAction(bool* bStateAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "CheckWallClimbStateAction");

	Params::BP_AJBInGameCharacter_DDW_C_CheckWallClimbStateAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bStateAction != nullptr)
		*bStateAction = Parms.bStateAction;
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.CreateDMIFlow
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_DDW_C::CreateDMIFlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "CreateDMIFlow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ChangeParticlesTransform
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                NewTransform                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::ChangeParticlesTransform(const struct FTransform& NewTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "ChangeParticlesTransform");

	Params::BP_AJBInGameCharacter_DDW_C_ChangeParticlesTransform Parms{};

	Parms.NewTransform = std::move(NewTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.UpdateParticlesVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_DDW_C::UpdateParticlesVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "UpdateParticlesVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.UpdateParticlesSpawn
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_DDW_C::UpdateParticlesSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "UpdateParticlesSpawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.OnRep_bRepEnable
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_DDW_C::OnRep_bRepEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "OnRep_bRepEnable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.OnRep_bMeshVisible
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_DDW_C::OnRep_bMeshVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "OnRep_bMeshVisible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.GetPropertyOwnerCharacterBP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C**        CharacterBP                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_DDW_C::GetPropertyOwnerCharacterBP(class ABP_AJBInGameCharacter_C** CharacterBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "GetPropertyOwnerCharacterBP");

	Params::BP_AJBInGameCharacter_DDW_C_GetPropertyOwnerCharacterBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CharacterBP != nullptr)
		*CharacterBP = Parms.CharacterBP;
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.GetPropertyType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAJBCharacterPropertyType*              PropertyType                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_DDW_C::GetPropertyType(EAJBCharacterPropertyType* PropertyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "GetPropertyType");

	Params::BP_AJBInGameCharacter_DDW_C_GetPropertyType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PropertyType != nullptr)
		*PropertyType = Parms.PropertyType;
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.TracableByAI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bTracable                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::TracableByAI(bool* bTracable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "TracableByAI");

	Params::BP_AJBInGameCharacter_DDW_C_TracableByAI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bTracable != nullptr)
		*bTracable = Parms.bTracable;
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.DetectableByTrap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bDetectable                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::DetectableByTrap(bool* bDetectable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "DetectableByTrap");

	Params::BP_AJBInGameCharacter_DDW_C_DetectableByTrap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDetectable != nullptr)
		*bDetectable = Parms.bDetectable;
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.TreatAsCharacterBySpecialProjectile
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bTreat                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::TreatAsCharacterBySpecialProjectile(bool* bTreat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "TreatAsCharacterBySpecialProjectile");

	Params::BP_AJBInGameCharacter_DDW_C_TreatAsCharacterBySpecialProjectile Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bTreat != nullptr)
		*bTreat = Parms.bTreat;
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.IsDetectableByDirectAttackGuide
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bIsDetectable                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::IsDetectableByDirectAttackGuide(bool* bIsDetectable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "IsDetectableByDirectAttackGuide");

	Params::BP_AJBInGameCharacter_DDW_C_IsDetectableByDirectAttackGuide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsDetectable != nullptr)
		*bIsDetectable = Parms.bIsDetectable;
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.IsTargetCO2Scan
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsTarget                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::IsTargetCO2Scan(bool* IsTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "IsTargetCO2Scan");

	Params::BP_AJBInGameCharacter_DDW_C_IsTargetCO2Scan Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsTarget != nullptr)
		*IsTarget = Parms.IsTarget;
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.IsTargetClourBarrier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsTarget                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::IsTargetClourBarrier(bool* IsTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "IsTargetClourBarrier");

	Params::BP_AJBInGameCharacter_DDW_C_IsTargetClourBarrier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsTarget != nullptr)
		*IsTarget = Parms.IsTarget;
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.IsTargetOverGrow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsTarget                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::IsTargetOverGrow(bool* IsTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "IsTargetOverGrow");

	Params::BP_AJBInGameCharacter_DDW_C_IsTargetOverGrow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsTarget != nullptr)
		*IsTarget = Parms.IsTarget;
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.IsPlayOwnerVoiceOnGetItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bIsPlay                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::IsPlayOwnerVoiceOnGetItem(bool* bIsPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "IsPlayOwnerVoiceOnGetItem");

	Params::BP_AJBInGameCharacter_DDW_C_IsPlayOwnerVoiceOnGetItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsPlay != nullptr)
		*bIsPlay = Parms.bIsPlay;
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.IsPlayOwnerVoiceOnJump
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bIsPlay                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::IsPlayOwnerVoiceOnJump(bool* bIsPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "IsPlayOwnerVoiceOnJump");

	Params::BP_AJBInGameCharacter_DDW_C_IsPlayOwnerVoiceOnJump Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsPlay != nullptr)
		*bIsPlay = Parms.bIsPlay;
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.IsPlayOwnerVoiceOnPassThruEnter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bIsPlay                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::IsPlayOwnerVoiceOnPassThruEnter(bool* bIsPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "IsPlayOwnerVoiceOnPassThruEnter");

	Params::BP_AJBInGameCharacter_DDW_C_IsPlayOwnerVoiceOnPassThruEnter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsPlay != nullptr)
		*bIsPlay = Parms.bIsPlay;
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AJBInGameCharacter_DDW_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_DDW_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "ReceiveTick");

	Params::BP_AJBInGameCharacter_DDW_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.OnReleasedEmote
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_DDW_C::OnReleasedEmote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "OnReleasedEmote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.OnPressedEmote
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_DDW_C::OnPressedEmote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "OnPressedEmote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.OnReleasedJump
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_DDW_C::OnReleasedJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "OnReleasedJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.OnPressedJump
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_DDW_C::OnPressedJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "OnPressedJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.OnReleasedCrouch
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_DDW_C::OnReleasedCrouch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "OnReleasedCrouch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.OnPressedCrouch
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_DDW_C::OnPressedCrouch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "OnPressedCrouch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.OnPressedR2
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_DDW_C::OnPressedR2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "OnPressedR2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.OnSpectated_Local
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_DDW_C::OnSpectated_Local()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "OnSpectated_Local");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ChangeMovementModeOnTimeStop
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::ChangeMovementModeOnTimeStop(bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "ChangeMovementModeOnTimeStop");

	Params::BP_AJBInGameCharacter_DDW_C_ChangeMovementModeOnTimeStop Parms{};

	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "NotifyTheWorld");

	Params::BP_AJBInGameCharacter_DDW_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_DDW_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.SetSystemEnable
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bCollision                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bGravity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSpringArm                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bMovement                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::SetSystemEnable(bool bEnable, bool bCollision, bool bGravity, bool bSpringArm, bool bMovement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "SetSystemEnable");

	Params::BP_AJBInGameCharacter_DDW_C_SetSystemEnable Parms{};

	Parms.bEnable = bEnable;
	Parms.bCollision = bCollision;
	Parms.bGravity = bGravity;
	Parms.bSpringArm = bSpringArm;
	Parms.bMovement = bMovement;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ChangeSystemDisable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCollision                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bGravity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSpringArm                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bMovement                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bRestore                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::ChangeSystemDisable(bool bCollision, bool bGravity, bool bSpringArm, bool bMovement, bool bRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "ChangeSystemDisable");

	Params::BP_AJBInGameCharacter_DDW_C_ChangeSystemDisable Parms{};

	Parms.bCollision = bCollision;
	Parms.bGravity = bGravity;
	Parms.bSpringArm = bSpringArm;
	Parms.bMovement = bMovement;
	Parms.bRestore = bRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ChangeSystemEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCollision                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bGravity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSpringArm                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bMovement                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bRestore                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::ChangeSystemEnable(bool bCollision, bool bGravity, bool bSpringArm, bool bMovement, bool bRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "ChangeSystemEnable");

	Params::BP_AJBInGameCharacter_DDW_C_ChangeSystemEnable Parms{};

	Parms.bCollision = bCollision;
	Parms.bGravity = bGravity;
	Parms.bSpringArm = bSpringArm;
	Parms.bMovement = bMovement;
	Parms.bRestore = bRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.ResetSystemEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRestore                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::ResetSystemEnable(bool bRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "ResetSystemEnable");

	Params::BP_AJBInGameCharacter_DDW_C_ResetSystemEnable Parms{};

	Parms.bRestore = bRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.CheckAnyCharacterMovementSkillActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bWithCharacterMovement                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::CheckAnyCharacterMovementSkillActive(bool* bWithCharacterMovement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "CheckAnyCharacterMovementSkillActive");

	Params::BP_AJBInGameCharacter_DDW_C_CheckAnyCharacterMovementSkillActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bWithCharacterMovement != nullptr)
		*bWithCharacterMovement = Parms.bWithCharacterMovement;
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.CheckPossibleDash
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bPossible                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::CheckPossibleDash(bool* bPossible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "CheckPossibleDash");

	Params::BP_AJBInGameCharacter_DDW_C_CheckPossibleDash Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPossible != nullptr)
		*bPossible = Parms.bPossible;
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.CheckDisableDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIgnoreSelf                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool*                                   bDisableDamage_0                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::CheckDisableDamage(class AActor* DamageCauser, bool bIgnoreSelf, bool* bDisableDamage_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "CheckDisableDamage");

	Params::BP_AJBInGameCharacter_DDW_C_CheckDisableDamage Parms{};

	Parms.DamageCauser = DamageCauser;
	Parms.bIgnoreSelf = bIgnoreSelf;

	UObject::ProcessEvent(Func, &Parms);

	if (bDisableDamage_0 != nullptr)
		*bDisableDamage_0 = Parms.bDisableDamage_0;
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.CheckDisablePassive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PassiveCauser                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              PassiveTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bIgnoreSelf                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool*                                   bDisablePassive_0                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::CheckDisablePassive(class AActor* PassiveCauser, const struct FGameplayTag& PassiveTag, bool bIgnoreSelf, bool* bDisablePassive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "CheckDisablePassive");

	Params::BP_AJBInGameCharacter_DDW_C_CheckDisablePassive Parms{};

	Parms.PassiveCauser = PassiveCauser;
	Parms.PassiveTag = std::move(PassiveTag);
	Parms.bIgnoreSelf = bIgnoreSelf;

	UObject::ProcessEvent(Func, &Parms);

	if (bDisablePassive_0 != nullptr)
		*bDisablePassive_0 = Parms.bDisablePassive_0;
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.CheckDisableAreaDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bDisableAreadamage_0                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::CheckDisableAreaDamage(bool* bDisableAreadamage_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "CheckDisableAreaDamage");

	Params::BP_AJBInGameCharacter_DDW_C_CheckDisableAreaDamage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDisableAreadamage_0 != nullptr)
		*bDisableAreadamage_0 = Parms.bDisableAreadamage_0;
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.CheckTargetSelf
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bForDamageOverlap                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIgnoreMovableStand                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIncludeSelf                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bAfterReflectShouldHitOwner                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool*                                   bTarget                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::CheckTargetSelf(class AActor* DamageCauser, bool bForDamageOverlap, bool bIgnoreMovableStand, bool bIncludeSelf, bool bAfterReflectShouldHitOwner, bool* bTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "CheckTargetSelf");

	Params::BP_AJBInGameCharacter_DDW_C_CheckTargetSelf Parms{};

	Parms.DamageCauser = DamageCauser;
	Parms.bForDamageOverlap = bForDamageOverlap;
	Parms.bIgnoreMovableStand = bIgnoreMovableStand;
	Parms.bIncludeSelf = bIncludeSelf;
	Parms.bAfterReflectShouldHitOwner = bAfterReflectShouldHitOwner;

	UObject::ProcessEvent(Func, &Parms);

	if (bTarget != nullptr)
		*bTarget = Parms.bTarget;
}


// Function BP_AJBInGameCharacter_DDW.BP_AJBInGameCharacter_DDW_C.InteractableOperator
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bReturnValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_DDW_C::InteractableOperator(class AActor* InteractActor, bool* bReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_DDW_C", "InteractableOperator");

	Params::BP_AJBInGameCharacter_DDW_C_InteractableOperator Parms{};

	Parms.InteractActor = InteractActor;

	UObject::ProcessEvent(Func, &Parms);

	if (bReturnValue != nullptr)
		*bReturnValue = Parms.bReturnValue;
}

}


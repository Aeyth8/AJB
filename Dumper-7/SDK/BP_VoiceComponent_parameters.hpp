#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VoiceComponent

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "ST_FinishVoiceInfo_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AJB_structs.hpp"
#include "Engine_structs.hpp"
#include "E_VoiceProcessType_structs.hpp"
#include "E_VoiceCommandType_structs.hpp"


namespace SDK::Params
{

// Function BP_VoiceComponent.BP_VoiceComponent_C.ExecuteUbergraph_BP_VoiceComponent
// 0x0CB8 (0x0CB8 - 0x0000)
struct BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& AddCondition, const struct FGameplayTag& SecondTag)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetCurrentFlowState_FlowState;            // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            CallFunc_GetOverlapVolumes_OverlapVolume;          // 0x00C0(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable1;                             // 0x00D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable2;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character3;     // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable3;                    // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Damage, const struct FGameplayTag& DamageType, class AActor* DamageReceiver, bool bRemainHP, bool bDamageIsCut, int32 SerialNumber, bool DamageReceiverIsPlayer, bool bWithSeparatedStandAttack, bool bEnemysSeparateStand, bool bSelfDamage, bool IsEndured)> K2Node_CreateDelegate_OutputDelegate1; // 0x0130(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0140(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable2;                // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable3;                   // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable4;                    // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue4;                    // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character4;     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> CallFunc_GetGameplayTags_self_CastInput; // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy;         // 0x0188(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Damage, const struct FGameplayTag& DamageType, class AActor* DamageCauser, bool bRemainHP, bool bDamageIsCutByStatus, bool bDamageIsCutByAAP, bool IsEndured)> K2Node_CreateDelegate_OutputDelegate3; // 0x01B0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasTag_ReturnValue1;                      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue5;                    // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character5;     // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E2[0x6];                                      // 0x01E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue6;                    // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character6;     // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> CallFunc_GetGameplayTags_self1_CastInput; // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy1;        // 0x0210(0x0020)()
	TDelegate<void(const struct FGameplayTag& ItemTag)> K2Node_CreateDelegate_OutputDelegate4;       // 0x0230(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasTag_ReturnValue2;                      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable3;                      // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_242[0x6];                                      // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue7;                    // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character7;     // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x026D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x026E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26F[0x1];                                      // 0x026F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> CallFunc_GetGameplayTags_self2_CastInput; // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy2;        // 0x0280(0x0020)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasTag_ReturnValue3;                      // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A3[0x1];                                      // 0x02A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable4;                   // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> K2Node_CreateDelegate_OutputDelegate5; // 0x02B0(0x0010)(ZeroConstructor, NoDestructor)
	EAkCallbackType                               K2Node_CustomEvent_CallbackType;                   // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkCallbackInfo*                        K2Node_CustomEvent_CallbackInfo;                   // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkMarkerCallbackInfo*                  K2Node_DynamicCast_AsAk_Marker_Callback_Info;      // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPostedAkEventExistence_bExist;       // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x02E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x02E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x02E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E6[0x2];                                      // 0x02E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_VoiceTag3;                      // 0x02E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	E_VoiceCommandType                            K2Node_CustomEvent_VoiceCommandType2;              // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bAlsoSpeakOnPairEnv1;           // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F2[0x6];                                      // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue8;                    // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_VoiceTag2;                      // 0x0300(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	E_VoiceCommandType                            K2Node_CustomEvent_VoiceCommandType1;              // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character8;     // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x031A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue;           // 0x031B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetVoiceEventInfo_bResult;                // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31D[0x3];                                      // 0x031D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwiseVoiceEventInfo                   CallFunc_GetVoiceEventInfo_VoiceEventInfo;         // 0x0320(0x0020)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0350(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool________Variable;                         // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool________Variable1;                        // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362[0x6];                                      // 0x0362(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate6;             // 0x0368(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 Count, float LivingPlayerRate, int32 PairCount)> K2Node_CreateDelegate_OutputDelegate7; // 0x0378(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue9;                    // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue10;                   // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character9;     // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess11;                     // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character10;    // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess12;                     // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x03B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue1;          // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x03C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldSpeakVoiceFromRemote_bResult;       // 0x03C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue11;                   // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_CustomEvent_CharacterBPToSpeak;             // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_CustomEvent_CharacterBPForComm;             // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_VoiceTag1;                      // 0x03E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	E_VoiceCommandType                            K2Node_CustomEvent_VoiceCommandType;               // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bAlsoSpeakOnPairEnv;            // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F2[0x6];                                      // 0x03F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40A[0x2];                                      // 0x040A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        CallFunc_Array_Get_Item;                           // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetPairCharacterBP_PairCharacterBP;       // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller1; // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess13;                     // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0439(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x043A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x043B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue12;                   // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character11;    // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess14;                     // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x3];                                      // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_459[0x3];                                      // 0x0459(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue13;                   // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAkComponent*>                   CallFunc_GetComponentsByTag_ReturnValue;           // 0x0470(0x0010)(ZeroConstructor, ReferenceParm)
	class UAkComponent*                           CallFunc_Array_Get_Item1;                          // 0x0480(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_489[0x3];                                      // 0x0489(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ItemTag;                        // 0x0490(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0498(0x0020)()
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken;                 // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesAnyTags_ReturnValue;               // 0x04B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BA[0x2];                                      // 0x04BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Damage1;                        // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_DamageType1;                    // 0x04C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bRemainHP1;                     // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bDamageIsCutByStatus;           // 0x04D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bDamageIsCutByAAP;              // 0x04D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsEndured1;                     // 0x04D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue1;      // 0x04D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x04D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue2;      // 0x04D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue1;                  // 0x04D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x04DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x04DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue3;                   // 0x04DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable1; // 0x04DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DE[0x2];                                      // 0x04DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Damage;                         // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E4[0x4];                                      // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_DamageType;                     // 0x04E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageReceiver;                 // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bRemainHP;                      // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bDamageIsCut;                   // 0x04F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FA[0x2];                                      // 0x04FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_SerialNumber1;                  // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DamageReceiverIsPlayer;         // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bWithSeparatedStandAttack1;     // 0x0501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bEnemysSeparateStand;           // 0x0502(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bSelfDamage;                    // 0x0503(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsEndured;                      // 0x0504(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0505(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0506(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_507[0x1];                                      // 0x0507(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable1;                              // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0510(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable5;                   // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C[0x4];                                      // 0x051C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_AddCondition;                   // 0x0520(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_SecondTag;                      // 0x0528(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_531[0x3];                                      // 0x0531(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue1; // 0x0538(0x0020)()
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue2; // 0x0558(0x0020)()
	bool                                          CallFunc_MatchesAnyTags_ReturnValue1;              // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesAnyTags_ReturnValue2;              // 0x0579(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken1;                // 0x057A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken2;                // 0x057B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken3;                // 0x057C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken4;                // 0x057D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable2; // 0x057E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess;              // 0x057F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD;           // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Count;                          // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_LivingPlayerRate;               // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PairCount;                      // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x0594(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_595[0x3];                                      // 0x0595(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x059C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59D[0x3];                                      // 0x059D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue3;             // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x05A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A5[0x3];                                      // 0x05A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable3;                // 0x05AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x05AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue1;        // 0x05AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken5;                // 0x05AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken6;                // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken7;                // 0x05B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue2;        // 0x05B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B3[0x5];                                      // 0x05B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_GameplayTag;                    // 0x05B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Value;                          // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C4[0x4];                                      // 0x05C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_SpecifiedText;                  // 0x05C8(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable4;                      // 0x05E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bOriginToCounterpart;           // 0x05E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x05E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E4[0x4];                                      // 0x05E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& SignalPinType)> K2Node_CreateDelegate_OutputDelegate8; // 0x05E8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken8;                // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F9[0x3];                                      // 0x05F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable5;                    // 0x05FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_VoiceIndex1;                    // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_604[0x4];                                      // 0x0604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        CallFunc_Array_Get_Item2;                          // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0610(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0628(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_639[0x7];                                      // 0x0639(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x0640(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeGameplayTagByName_OutTag;             // 0x0650(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeGameplayTagByName_ReturnValue;        // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken9;                // 0x0659(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken10;               // 0x065A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken11;               // 0x065B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x065C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwiseVoiceEventInfo                   CallFunc_Array_Get_Item3;                          // 0x0660(0x0020)()
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0684(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_685[0x3];                                      // 0x0685(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue1;            // 0x0688(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue5;               // 0x0698(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue6;               // 0x06A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue7;               // 0x06B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue8;               // 0x06C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D9[0x7];                                      // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue9;               // 0x06E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_SkillTag;                       // 0x06F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SerialNumber;                   // 0x06F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_AttackDistance;                 // 0x06FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_KilledCharacterId;              // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWithSeparatedStandAttack;      // 0x0701(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bHitEnemysSeparatedStand;       // 0x0702(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bFirstBlood;                    // 0x0703(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_CustomEvent_UltimateSkillSerialNumberIfInEffect; // 0x0704(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_ElapsedTime;                    // 0x0708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_DeadPlayerId;                   // 0x070C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsLastDefeated1;               // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bPlayerKill;                    // 0x0711(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bSpecialKill;                   // 0x0712(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bSelfKill;                      // 0x0713(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue4;                   // 0x0714(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x0715(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_716[0x2];                                      // 0x0716(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 VoiceIndex)>             K2Node_CreateDelegate_OutputDelegate9;             // 0x0718(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable3; // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bWillRessurect;                 // 0x0729(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsLastDefeated;                // 0x072A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bDiedOfKillZ;                   // 0x072B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_CustomEvent_DownedMachingPlayerIndex;       // 0x072C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0731(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_732[0x6];                                      // 0x0732(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item4;                          // 0x0738(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0744(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_745[0x3];                                      // 0x0745(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0748(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue10;              // 0x0758(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue14;                   // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetParentActor_ReturnValue;               // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate10;            // 0x0778(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0788(0x0008)(NoDestructor)
	TDelegate<void(int32 ActionLogIndex, const struct FGameplayTag& VoiceTag)> K2Node_CreateDelegate_OutputDelegate11; // 0x0790(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_Rescuer;                        // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate12;            // 0x07A8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x07B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B9[0x7];                                      // 0x07B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBBattleGameState_C*               K2Node_DynamicCast_AsBP_AJBBattle_Game_State;      // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess15;                     // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken12;               // 0x07D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D2[0x2];                                      // 0x07D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLivingPlayerCount_Count;               // 0x07D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken13;               // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D9[0x7];                                      // 0x07D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate13;            // 0x07E0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken14;               // 0x07F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken15;               // 0x07F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F2[0x6];                                      // 0x07F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue1;                // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue3;        // 0x0800(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_801[0x7];                                      // 0x0801(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBBattleGameState_C*               K2Node_DynamicCast_AsBP_AJBBattle_Game_State1;     // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess16;                     // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_811[0x7];                                      // 0x0811(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue3; // 0x0818(0x0020)()
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken16;               // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesAnyTags_ReturnValue3;              // 0x0839(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken17;               // 0x083A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83B[0x5];                                      // 0x083B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue2;                // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBDamageAreaLocal_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0848(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate14;            // 0x0850(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_InTargetArea_ReturnValue;                 // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0861(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken18;               // 0x0862(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_863[0x5];                                      // 0x0863(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0868(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostAkEvent_ReturnValue1;                 // 0x0878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87C[0x4];                                      // 0x087C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate15;            // 0x0880(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate16;            // 0x0890(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable2;                             // 0x08A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable4;                               // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A9[0x7];                                      // 0x08A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x08B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken19;               // 0x08B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B9[0x7];                                      // 0x08B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* Rescuer)>        K2Node_CreateDelegate_OutputDelegate17;            // 0x08C0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable4;                // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D1[0x7];                                      // 0x08D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 DownedMachingPlayerIndex)> K2Node_CreateDelegate_OutputDelegate18;          // 0x08D8(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue15;                   // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character12;    // 0x08F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess17;                     // 0x08F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F9[0x7];                                      // 0x08F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bWillRessurect, bool bIsLastDefeated, bool bDiedOfKillZ)> K2Node_CreateDelegate_OutputDelegate19; // 0x0900(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_911[0x7];                                      // 0x0911(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwiseVoiceEventInfo                   CallFunc_Array_Get_Item5;                          // 0x0918(0x0020)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate20;            // 0x0938(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue1;          // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_949[0x3];                                      // 0x0949(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x094C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue2;           // 0x0950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_951[0x3];                                      // 0x0951(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0954(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0958(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue5;                  // 0x0959(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x095A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayModeIsPair_ReturnValue;               // 0x095B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95C[0x4];                                      // 0x095C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0960(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x0978(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_979[0x7];                                      // 0x0979(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue1;           // 0x0980(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue6;                  // 0x0990(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_991[0x7];                                      // 0x0991(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue11;              // 0x0998(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue12;              // 0x09A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayModeIsPair_ReturnValue1;              // 0x09B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B9[0x3];                                      // 0x09B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ActionLogIndex;                 // 0x09BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_VoiceTag;                       // 0x09C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken20;               // 0x09C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable5;                      // 0x09C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9CA[0x6];                                      // 0x09CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> K2Node_CreateDelegate_OutputDelegate21; // 0x09D0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GetCharacterShortName_Result;             // 0x09E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E1[0x7];                                      // 0x09E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCharacterShortName_ShortName;          // 0x09E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& SkillTag, int32 SerialNumber, float AttackDistance, uint8 KilledCharacterId, bool bWithSeparatedStandAttack, bool bHitEnemysSeparatedStand, bool bFirstBlood, int32 UltimateSkillSerialNumberIfInEffect, float ElapsedTime, int32 DeadPlayerId, bool bIsLastDefeated, bool bPlayerKill, bool bSpecialKill, bool bSelfKill)> K2Node_CreateDelegate_OutputDelegate22; // 0x09F8(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable3;                             // 0x0A08(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable5;                               // 0x0A10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue2;          // 0x0A11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A12[0x6];                                      // 0x0A12(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select2_Default;                            // 0x0A18(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0A20(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FGameplayTag>                   CallFunc_Map_Values_Values;                        // 0x0A30(0x0010)(ZeroConstructor, ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item6;                          // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item7;                          // 0x0A48(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0A50(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken21;               // 0x0A60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A61[0x7];                                      // 0x0A61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue13;              // 0x0A68(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0A78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A7C[0x4];                                      // 0x0A7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue14;              // 0x0A80(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x0A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A91[0x7];                                      // 0x0A91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0A98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0AA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA4[0x4];                                      // 0x0AA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0AA8(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue3;          // 0x0AB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB9[0x7];                                      // 0x0AB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item8;                          // 0x0AC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue4;                // 0x0AC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ACC[0x4];                                      // 0x0ACC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue1;           // 0x0AD0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue4;                 // 0x0AE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AE1[0x7];                                      // 0x0AE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x0AE8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue1;           // 0x0AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue1;              // 0x0B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B01[0x7];                                      // 0x0B01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys1;                           // 0x0B08(0x0010)(ZeroConstructor, ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item9;                          // 0x0B18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate23;            // 0x0B20(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B31[0x3];                                      // 0x0B31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue5;                // 0x0B34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue5;                 // 0x0B38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B39[0x7];                                      // 0x0B39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue16;                   // 0x0B40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character13;    // 0x0B48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess18;                     // 0x0B50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B51[0x7];                                      // 0x0B51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate24;            // 0x0B58(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue6;                 // 0x0B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x0B69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6A[0x6];                                      // 0x0B6A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 VoiceIndex)>             K2Node_CreateDelegate_OutputDelegate25;            // 0x0B70(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue7;                 // 0x0B80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B81[0x3];                                      // 0x0B81(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_VoiceIndex;                     // 0x0B84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate26;            // 0x0B88(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable5;                // 0x0B98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B99[0x7];                                      // 0x0B99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bOriginToCounterpart)>    K2Node_CreateDelegate_OutputDelegate27;            // 0x0BA0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FGameplayTag& GameplayTag, float Value, class FText SpecifiedText)> K2Node_CreateDelegate_OutputDelegate28; // 0x0BB0(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_SignalPinType;                  // 0x0BC0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select3_Default;                            // 0x0BC8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetSignalVoiceTag_VoiceTag;               // 0x0BD0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken22;               // 0x0BD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken23;               // 0x0BD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BDA[0x6];                                      // 0x0BDA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable4;                             // 0x0BE0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable6;                               // 0x0BE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPvEPlayMode_IsPvEPlayMode;              // 0x0BE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BEA[0x6];                                      // 0x0BEA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select4_Default;                            // 0x0BF0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select5_Default;                            // 0x0BF8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select6_Default;                            // 0x0C00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken24;               // 0x0C04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C05[0x3];                                      // 0x0C05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue6;                  // 0x0C08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPvEPlayMode_IsPvEPlayMode1;             // 0x0C0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue8;                 // 0x0C0D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C0E[0x2];                                      // 0x0C0E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue17;                   // 0x0C10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue7;                  // 0x0C18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C19[0x7];                                      // 0x0C19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInGameCharacterProperty_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property; // 0x0C20(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess19;                     // 0x0C30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayOwnerVoiceOnJump_bIsPlay;           // 0x0C31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C32[0x6];                                      // 0x0C32(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue18;                   // 0x0C38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBInGameCharacterProperty_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property1; // 0x0C40(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess20;                     // 0x0C50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C51[0x7];                                      // 0x0C51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_VoiceComponent_C*                   CallFunc_GetPoliticVoiceComponent_VoiceComponent;  // 0x0C58(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayOwnerVoiceOnGetItem_bIsPlay;        // 0x0C60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken25;               // 0x0C61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C62[0x6];                                      // 0x0C62(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_VoiceComponent_C*                   CallFunc_GetPoliticVoiceComponent_VoiceComponent1; // 0x0C68(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue19;                   // 0x0C70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken26;               // 0x0C78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C79[0x7];                                      // 0x0C79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInGameCharacterProperty_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property2; // 0x0C80(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess21;                     // 0x0C90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayOwnerVoiceOnPassThruEnter_bIsPlay;  // 0x0C91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C92[0x6];                                      // 0x0C92(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetMatchStartVoiceTag_MatchStartVoiceTag; // 0x0C98(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken27;               // 0x0CA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA1[0x7];                                      // 0x0CA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_VoiceComponent_C*                   CallFunc_GetPoliticVoiceComponent_VoiceComponent2; // 0x0CA8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken28;               // 0x0CB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent");
static_assert(sizeof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent) == 0x000CB8, "Wrong size on BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, EntryPoint) == 0x000000, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_IsClosed_Variable1) == 0x000005, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_Has_Been_Initd_Variable) == 0x000018, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000028, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_struct_Variable) == 0x000040, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Conv_IntToString_ReturnValue) == 0x000048, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Concat_StrStr_ReturnValue1) == 0x000068, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetOwner_ReturnValue1) == 0x000078, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000080, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_bSuccess1) == 0x000088, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetOwner_ReturnValue2) == 0x000090, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x000098, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_bSuccess2) == 0x0000A0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller) == 0x0000A8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_bSuccess3) == 0x0000B0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetCurrentFlowState_FlowState) == 0x0000B8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetCurrentFlowState_FlowState' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetOverlapVolumes_OverlapVolume) == 0x0000C0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetOverlapVolumes_OverlapVolume' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x0000D0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_struct_Variable1) == 0x0000D8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_IsClosed_Variable2) == 0x0000E0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_IsClosed_Variable2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_Has_Been_Initd_Variable1) == 0x0000E1, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_Variable) == 0x0000E2, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x0000E3, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_int_Loop_Counter_Variable1) == 0x0000E4, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Add_IntInt_ReturnValue1) == 0x0000E8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_int_Array_Index_Variable1) == 0x0000EC, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_int_Array_Index_Variable2) == 0x0000F0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetOwner_ReturnValue3) == 0x0000F8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000100, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_AsBP_AJBIn_Game_Character3) == 0x000108, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_AsBP_AJBIn_Game_Character3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_bSuccess4) == 0x000110, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_int_Loop_Counter_Variable2) == 0x000114, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Add_IntInt_ReturnValue2) == 0x000118, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00011C, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x000120, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_int_Array_Index_Variable3) == 0x000124, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_int_Array_Index_Variable3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000128, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate1) == 0x000130, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate2) == 0x000140, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_Has_Been_Initd_Variable2) == 0x000150, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_Has_Been_Initd_Variable2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_int_Loop_Counter_Variable3) == 0x000154, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_int_Loop_Counter_Variable3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Add_IntInt_ReturnValue3) == 0x000158, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_int_Array_Index_Variable4) == 0x00015C, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_int_Array_Index_Variable4' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetOwner_ReturnValue4) == 0x000160, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetOwner_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_AsBP_AJBIn_Game_Character4) == 0x000168, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_AsBP_AJBIn_Game_Character4' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_bSuccess5) == 0x000170, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetGameplayTags_self_CastInput) == 0x000178, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetGameplayTags_TagContainerCopy) == 0x000188, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetGameplayTags_TagContainerCopy' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_HasTag_ReturnValue) == 0x0001A8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate3) == 0x0001B0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_HasTag_ReturnValue1) == 0x0001C0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_HasTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetOwner_ReturnValue5) == 0x0001C8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetOwner_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_BooleanOR_ReturnValue) == 0x0001D0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_AsBP_AJBIn_Game_Character5) == 0x0001D8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_AsBP_AJBIn_Game_Character5' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_bSuccess6) == 0x0001E0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_BooleanOR_ReturnValue1) == 0x0001E1, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetOwner_ReturnValue6) == 0x0001E8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetOwner_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_AsBP_AJBIn_Game_Character6) == 0x0001F0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_AsBP_AJBIn_Game_Character6' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_bSuccess7) == 0x0001F8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetGameplayTags_self1_CastInput) == 0x000200, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetGameplayTags_self1_CastInput' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetGameplayTags_TagContainerCopy1) == 0x000210, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetGameplayTags_TagContainerCopy1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate4) == 0x000230, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_HasTag_ReturnValue2) == 0x000240, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_HasTag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_IsClosed_Variable3) == 0x000241, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_IsClosed_Variable3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetOwner_ReturnValue7) == 0x000248, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetOwner_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_AsBP_AJBIn_Game_Character7) == 0x000250, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_AsBP_AJBIn_Game_Character7' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_bSuccess8) == 0x000258, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_Event_Operator) == 0x000260, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_Event_Time) == 0x000268, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_Event_Timing) == 0x00026C, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_Event_bEnable) == 0x00026D, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_Event_bOperatorIsEmpty) == 0x00026E, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetGameplayTags_self2_CastInput) == 0x000270, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetGameplayTags_self2_CastInput' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetGameplayTags_TagContainerCopy2) == 0x000280, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetGameplayTags_TagContainerCopy2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Not_PreBool_ReturnValue) == 0x0002A0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_HasTag_ReturnValue3) == 0x0002A1, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_HasTag_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_BooleanAND_ReturnValue) == 0x0002A2, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_int_Loop_Counter_Variable4) == 0x0002A4, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_int_Loop_Counter_Variable4' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_BooleanAND_ReturnValue1) == 0x0002A8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Add_IntInt_ReturnValue4) == 0x0002AC, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate5) == 0x0002B0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_CallbackType) == 0x0002C0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_CallbackType' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_CallbackInfo) == 0x0002C8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_CallbackInfo' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_AsAk_Marker_Callback_Info) == 0x0002D0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_AsAk_Marker_Callback_Info' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_bSuccess9) == 0x0002D8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_PostAkEvent_ReturnValue) == 0x0002DC, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_SwitchEnum_CmpSuccess) == 0x0002E0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_CheckPostedAkEventExistence_bExist) == 0x0002E1, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_CheckPostedAkEventExistence_bExist' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_NotEqual_StrStr_ReturnValue) == 0x0002E2, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_StartsWith_ReturnValue) == 0x0002E3, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_BooleanAND_ReturnValue2) == 0x0002E4, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_IsGameplayTagValid_ReturnValue) == 0x0002E5, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_VoiceTag3) == 0x0002E8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_VoiceTag3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_VoiceCommandType2) == 0x0002F0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_VoiceCommandType2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_bAlsoSpeakOnPairEnv1) == 0x0002F1, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_bAlsoSpeakOnPairEnv1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetOwner_ReturnValue8) == 0x0002F8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetOwner_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_VoiceTag2) == 0x000300, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_VoiceTag2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_VoiceCommandType1) == 0x000308, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_VoiceCommandType1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_AsBP_AJBIn_Game_Character8) == 0x000310, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_AsBP_AJBIn_Game_Character8' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_bSuccess10) == 0x000318, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_SwitchEnum1_CmpSuccess) == 0x000319, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_HasLocalSharedController_ReturnValue) == 0x00031A, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_IsPlayerController_ReturnValue) == 0x00031B, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_IsPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetVoiceEventInfo_bResult) == 0x00031C, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetVoiceEventInfo_bResult' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetVoiceEventInfo_VoiceEventInfo) == 0x000320, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetVoiceEventInfo_VoiceEventInfo' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Concat_StrStr_ReturnValue2) == 0x000340, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Concat_StrStr_ReturnValue3) == 0x000350, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool________Variable) == 0x000360, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool________Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool________Variable1) == 0x000361, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool________Variable1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate6) == 0x000368, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate7) == 0x000378, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetOwner_ReturnValue9) == 0x000388, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetOwner_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetOwner_ReturnValue10) == 0x000390, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetOwner_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_AsBP_AJBIn_Game_Character9) == 0x000398, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_AsBP_AJBIn_Game_Character9' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_bSuccess11) == 0x0003A0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_bSuccess11' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_AsBP_AJBIn_Game_Character10) == 0x0003A8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_AsBP_AJBIn_Game_Character10' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_bSuccess12) == 0x0003B0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_bSuccess12' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0003B4, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_HasLocalSharedController_ReturnValue1) == 0x0003C0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_IsPlayerController_ReturnValue1) == 0x0003C1, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_IsPlayerController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_IsDedicatedServer_ReturnValue) == 0x0003C2, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_ShouldSpeakVoiceFromRemote_bResult) == 0x0003C3, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_ShouldSpeakVoiceFromRemote_bResult' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetOwner_ReturnValue11) == 0x0003C8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetOwner_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetPlayerController_ReturnValue) == 0x0003D0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_CharacterBPToSpeak) == 0x0003D8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_CharacterBPToSpeak' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_CharacterBPForComm) == 0x0003E0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_CharacterBPForComm' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_VoiceTag1) == 0x0003E8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_VoiceTag1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_VoiceCommandType) == 0x0003F0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_VoiceCommandType' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_bAlsoSpeakOnPairEnv) == 0x0003F1, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_bAlsoSpeakOnPairEnv' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetViewTarget_ReturnValue) == 0x0003F8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000400, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000408, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000409, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_Length_ReturnValue) == 0x00040C, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_Get_Item) == 0x000410, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_Length_ReturnValue1) == 0x000418, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Less_IntInt_ReturnValue) == 0x00041C, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetPairCharacterBP_PairCharacterBP) == 0x000420, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetPairCharacterBP_PairCharacterBP' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_IsValid_ReturnValue) == 0x000428, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller1) == 0x000430, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_bSuccess13) == 0x000438, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_bSuccess13' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_Contains_ReturnValue) == 0x000439, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Not_PreBool_ReturnValue1) == 0x00043A, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_MakeLiteralBool_ReturnValue) == 0x00043B, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetOwner_ReturnValue12) == 0x000440, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetOwner_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_AsBP_AJBIn_Game_Character11) == 0x000448, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_AsBP_AJBIn_Game_Character11' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_bSuccess14) == 0x000450, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_bSuccess14' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_int_Variable) == 0x000454, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_IsValid_ReturnValue1) == 0x000458, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetDistanceTo_ReturnValue) == 0x00045C, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetOwner_ReturnValue13) == 0x000460, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetOwner_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_int_Variable1) == 0x000468, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetComponentsByTag_ReturnValue) == 0x000470, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_Get_Item1) == 0x000480, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000488, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_float_Variable) == 0x00048C, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_ItemTag) == 0x000490, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_ItemTag' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000498, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken) == 0x0004B8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_MatchesAnyTags_ReturnValue) == 0x0004B9, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_MatchesAnyTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_Damage1) == 0x0004BC, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_Damage1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_DamageType1) == 0x0004C0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_DamageType1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_DamageCauser) == 0x0004C8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_bRemainHP1) == 0x0004D0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_bRemainHP1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_bDamageIsCutByStatus) == 0x0004D1, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_bDamageIsCutByStatus' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_bDamageIsCutByAAP) == 0x0004D2, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_bDamageIsCutByAAP' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_IsEndured1) == 0x0004D3, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_IsEndured1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Not_PreBool_ReturnValue2) == 0x0004D4, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_EqualEqual_GameplayTag_ReturnValue1) == 0x0004D5, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_EqualEqual_GameplayTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_BooleanAND_ReturnValue3) == 0x0004D6, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_EqualEqual_GameplayTag_ReturnValue2) == 0x0004D7, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_EqualEqual_GameplayTag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_MatchesTag_ReturnValue) == 0x0004D8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_MatchesTag_ReturnValue1) == 0x0004D9, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_MatchesTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Greater_IntInt_ReturnValue) == 0x0004DA, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_BooleanOR_ReturnValue2) == 0x0004DB, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_BooleanOR_ReturnValue3) == 0x0004DC, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_BooleanOR_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable1) == 0x0004DD, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_Damage) == 0x0004E0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_DamageType) == 0x0004E8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_DamageReceiver) == 0x0004F0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_DamageReceiver' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_bRemainHP) == 0x0004F8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_bRemainHP' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_bDamageIsCut) == 0x0004F9, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_bDamageIsCut' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_SerialNumber1) == 0x0004FC, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_SerialNumber1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_DamageReceiverIsPlayer) == 0x000500, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_DamageReceiverIsPlayer' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_bWithSeparatedStandAttack1) == 0x000501, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_bWithSeparatedStandAttack1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_bEnemysSeparateStand) == 0x000502, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_bEnemysSeparateStand' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_bSelfDamage) == 0x000503, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_bSelfDamage' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_IsEndured) == 0x000504, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_IsEndured' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_Variable1) == 0x000505, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000506, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_float_Variable1) == 0x000508, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_Select_Default) == 0x000510, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_int_Loop_Counter_Variable5) == 0x000518, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_int_Loop_Counter_Variable5' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_AddCondition) == 0x000520, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_AddCondition' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_SecondTag) == 0x000528, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_SecondTag' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Less_IntInt_ReturnValue1) == 0x000530, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Add_IntInt_ReturnValue5) == 0x000534, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue1) == 0x000538, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue2) == 0x000558, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_MatchesAnyTags_ReturnValue1) == 0x000578, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_MatchesAnyTags_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_MatchesAnyTags_ReturnValue2) == 0x000579, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_MatchesAnyTags_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken1) == 0x00057A, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken2) == 0x00057B, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken3) == 0x00057C, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken4) == 0x00057D, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken4' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable2) == 0x00057E, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetAJBInGameHUD_BP_bSuccess) == 0x00057F, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetAJBInGameHUD_BP_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD) == 0x000580, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_Count) == 0x000588, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_Count' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_LivingPlayerRate) == 0x00058C, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_LivingPlayerRate' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_PairCount) == 0x000590, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_PairCount' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x000594, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000598, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00059C, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Conv_IntToFloat_ReturnValue3) == 0x0005A0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Conv_IntToFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_BooleanAND_ReturnValue4) == 0x0005A4, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x0005A8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_Has_Been_Initd_Variable3) == 0x0005AC, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_Has_Been_Initd_Variable3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0005AD, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_LessEqual_FloatFloat_ReturnValue1) == 0x0005AE, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_LessEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken5) == 0x0005AF, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken5' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken6) == 0x0005B0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken6' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken7) == 0x0005B1, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken7' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_LessEqual_FloatFloat_ReturnValue2) == 0x0005B2, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_LessEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_GameplayTag) == 0x0005B8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_GameplayTag' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_Value) == 0x0005C0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_SpecifiedText) == 0x0005C8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_SpecifiedText' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TextIsEmpty_ReturnValue) == 0x0005E0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_IsClosed_Variable4) == 0x0005E1, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_IsClosed_Variable4' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_bOriginToCounterpart) == 0x0005E2, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_bOriginToCounterpart' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_IsServer_ReturnValue) == 0x0005E3, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate8) == 0x0005E8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken8) == 0x0005F8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken8' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_int_Array_Index_Variable5) == 0x0005FC, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_int_Array_Index_Variable5' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_VoiceIndex1) == 0x000600, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_VoiceIndex1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_Get_Item2) == 0x000608, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Conv_IntToText_ReturnValue) == 0x000610, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Conv_TextToString_ReturnValue) == 0x000628, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000638, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Concat_StrStr_ReturnValue4) == 0x000640, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_MakeGameplayTagByName_OutTag) == 0x000650, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_MakeGameplayTagByName_OutTag' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_MakeGameplayTagByName_ReturnValue) == 0x000658, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_MakeGameplayTagByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken9) == 0x000659, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken9' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken10) == 0x00065A, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken10' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken11) == 0x00065B, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken11' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_Event_DeltaSeconds) == 0x00065C, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_Get_Item3) == 0x000660, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_Length_ReturnValue2) == 0x000680, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Less_IntInt_ReturnValue2) == 0x000684, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Conv_IntToString_ReturnValue1) == 0x000688, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Conv_IntToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Concat_StrStr_ReturnValue5) == 0x000698, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Concat_StrStr_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Concat_StrStr_ReturnValue6) == 0x0006A8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Concat_StrStr_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Concat_StrStr_ReturnValue7) == 0x0006B8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Concat_StrStr_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Concat_StrStr_ReturnValue8) == 0x0006C8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Concat_StrStr_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_Variable2) == 0x0006D8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Concat_StrStr_ReturnValue9) == 0x0006E0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Concat_StrStr_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_SkillTag) == 0x0006F0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_SkillTag' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_SerialNumber) == 0x0006F8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_AttackDistance) == 0x0006FC, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_AttackDistance' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_KilledCharacterId) == 0x000700, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_KilledCharacterId' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_bWithSeparatedStandAttack) == 0x000701, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_bWithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_bHitEnemysSeparatedStand) == 0x000702, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_bHitEnemysSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_bFirstBlood) == 0x000703, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_bFirstBlood' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_UltimateSkillSerialNumberIfInEffect) == 0x000704, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_UltimateSkillSerialNumberIfInEffect' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_ElapsedTime) == 0x000708, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_DeadPlayerId) == 0x00070C, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_DeadPlayerId' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_bIsLastDefeated1) == 0x000710, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_bIsLastDefeated1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_bPlayerKill) == 0x000711, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_bPlayerKill' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_bSpecialKill) == 0x000712, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_bSpecialKill' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_bSelfKill) == 0x000713, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_bSelfKill' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_BooleanOR_ReturnValue4) == 0x000714, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_BooleanOR_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Not_PreBool_ReturnValue3) == 0x000715, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate9) == 0x000718, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable3) == 0x000728, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_bWillRessurect) == 0x000729, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_bWillRessurect' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_bIsLastDefeated) == 0x00072A, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_bIsLastDefeated' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_bDiedOfKillZ) == 0x00072B, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_bDiedOfKillZ' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_DownedMachingPlayerIndex) == 0x00072C, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_DownedMachingPlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Not_PreBool_ReturnValue4) == 0x000730, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_Variable3) == 0x000731, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_Get_Item4) == 0x000738, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_Select1_Default) == 0x000740, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_IsValid_ReturnValue2) == 0x000744, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Conv_FloatToString_ReturnValue) == 0x000748, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Concat_StrStr_ReturnValue10) == 0x000758, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Concat_StrStr_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetOwner_ReturnValue14) == 0x000768, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetOwner_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetParentActor_ReturnValue) == 0x000770, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate10) == 0x000778, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate10' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000788, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate11) == 0x000790, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate11' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_Rescuer) == 0x0007A0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_Rescuer' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate12) == 0x0007A8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_IsValid_ReturnValue3) == 0x0007B8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetGameState_ReturnValue) == 0x0007C0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_AsBP_AJBBattle_Game_State) == 0x0007C8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_AsBP_AJBBattle_Game_State' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_bSuccess15) == 0x0007D0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_bSuccess15' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken12) == 0x0007D1, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken12' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetLivingPlayerCount_Count) == 0x0007D4, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetLivingPlayerCount_Count' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken13) == 0x0007D8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken13' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate13) == 0x0007E0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate13' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken14) == 0x0007F0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken14' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken15) == 0x0007F1, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken15' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetGameState_ReturnValue1) == 0x0007F8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetGameState_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_LessEqual_FloatFloat_ReturnValue3) == 0x000800, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_LessEqual_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_AsBP_AJBBattle_Game_State1) == 0x000808, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_AsBP_AJBBattle_Game_State1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_bSuccess16) == 0x000810, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_bSuccess16' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue3) == 0x000818, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken16) == 0x000838, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken16' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_MatchesAnyTags_ReturnValue3) == 0x000839, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_MatchesAnyTags_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken17) == 0x00083A, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken17' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetGameState_ReturnValue2) == 0x000840, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetGameState_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000848, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate14) == 0x000850, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate14' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_InTargetArea_ReturnValue) == 0x000860, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_InTargetArea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_IsValid_ReturnValue4) == 0x000861, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken18) == 0x000862, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken18' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_delegate_Variable) == 0x000868, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_PostAkEvent_ReturnValue1) == 0x000878, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_PostAkEvent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate15) == 0x000880, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate15' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate16) == 0x000890, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate16' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_struct_Variable2) == 0x0008A0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_Variable4) == 0x0008A8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x0008B0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken19) == 0x0008B8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken19' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate17) == 0x0008C0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate17' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_Has_Been_Initd_Variable4) == 0x0008D0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_Has_Been_Initd_Variable4' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate18) == 0x0008D8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate18' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetOwner_ReturnValue15) == 0x0008E8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetOwner_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_AsBP_AJBIn_Game_Character12) == 0x0008F0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_AsBP_AJBIn_Game_Character12' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_bSuccess17) == 0x0008F8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_bSuccess17' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate19) == 0x000900, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate19' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_IsValid_ReturnValue5) == 0x000910, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_Get_Item5) == 0x000918, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_Get_Item5' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate20) == 0x000938, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate20' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_IsValidIndex_ReturnValue1) == 0x000948, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_IsValidIndex_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00094C, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_EqualEqual_IntInt_ReturnValue2) == 0x000950, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_EqualEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Add_FloatFloat_ReturnValue) == 0x000954, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000958, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_BooleanAND_ReturnValue5) == 0x000959, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_BooleanAND_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00095A, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_PlayModeIsPair_ReturnValue) == 0x00095B, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_PlayModeIsPair_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Conv_FloatToText_ReturnValue) == 0x000960, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Not_PreBool_ReturnValue5) == 0x000978, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Conv_TextToString_ReturnValue1) == 0x000980, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Conv_TextToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_BooleanAND_ReturnValue6) == 0x000990, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_BooleanAND_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Concat_StrStr_ReturnValue11) == 0x000998, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Concat_StrStr_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Concat_StrStr_ReturnValue12) == 0x0009A8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Concat_StrStr_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_PlayModeIsPair_ReturnValue1) == 0x0009B8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_PlayModeIsPair_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_ActionLogIndex) == 0x0009BC, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_ActionLogIndex' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_VoiceTag) == 0x0009C0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_VoiceTag' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken20) == 0x0009C8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken20' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_IsClosed_Variable5) == 0x0009C9, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_IsClosed_Variable5' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate21) == 0x0009D0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate21' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetCharacterShortName_Result) == 0x0009E0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetCharacterShortName_Result' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetCharacterShortName_ShortName) == 0x0009E8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetCharacterShortName_ShortName' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate22) == 0x0009F8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate22' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_struct_Variable3) == 0x000A08, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_Variable5) == 0x000A10, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_IsValidIndex_ReturnValue2) == 0x000A11, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_IsValidIndex_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_Select2_Default) == 0x000A18, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Map_Keys_Keys) == 0x000A20, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Map_Values_Values) == 0x000A30, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_Get_Item6) == 0x000A40, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_Get_Item6' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_Get_Item7) == 0x000A48, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_Get_Item7' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Conv_NameToString_ReturnValue) == 0x000A50, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken21) == 0x000A60, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken21' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Concat_StrStr_ReturnValue13) == 0x000A68, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Concat_StrStr_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_Length_ReturnValue3) == 0x000A78, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Concat_StrStr_ReturnValue14) == 0x000A80, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Concat_StrStr_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Less_IntInt_ReturnValue3) == 0x000A90, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Conv_StringToName_ReturnValue) == 0x000A98, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_Add_ReturnValue) == 0x000AA0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetAllActorsWithTag_OutActors) == 0x000AA8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_IsValidIndex_ReturnValue3) == 0x000AB8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_IsValidIndex_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_Get_Item8) == 0x000AC0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_Get_Item8' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_Length_ReturnValue4) == 0x000AC8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_Length_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Conv_NameToString_ReturnValue1) == 0x000AD0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Conv_NameToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Less_IntInt_ReturnValue4) == 0x000AE0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Less_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_LeftChop_ReturnValue) == 0x000AE8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Conv_StringToName_ReturnValue1) == 0x000AF8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Conv_StringToName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_Contains_ReturnValue1) == 0x000B00, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_Contains_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Map_Keys_Keys1) == 0x000B08, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Map_Keys_Keys1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_Get_Item9) == 0x000B18, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_Get_Item9' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate23) == 0x000B20, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate23' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000B30, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Array_Length_ReturnValue5) == 0x000B34, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Array_Length_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Less_IntInt_ReturnValue5) == 0x000B38, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Less_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetOwner_ReturnValue16) == 0x000B40, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetOwner_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_AsBP_AJBIn_Game_Character13) == 0x000B48, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_AsBP_AJBIn_Game_Character13' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_bSuccess18) == 0x000B50, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_bSuccess18' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate24) == 0x000B58, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate24' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Not_PreBool_ReturnValue6) == 0x000B68, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Not_PreBool_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_IsDedicatedServer_ReturnValue1) == 0x000B69, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate25) == 0x000B70, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate25' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Not_PreBool_ReturnValue7) == 0x000B80, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Not_PreBool_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_VoiceIndex) == 0x000B84, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_VoiceIndex' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate26) == 0x000B88, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate26' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_Has_Been_Initd_Variable5) == 0x000B98, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_Has_Been_Initd_Variable5' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate27) == 0x000BA0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate27' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CreateDelegate_OutputDelegate28) == 0x000BB0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CreateDelegate_OutputDelegate28' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_CustomEvent_SignalPinType) == 0x000BC0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_CustomEvent_SignalPinType' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_Select3_Default) == 0x000BC8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetSignalVoiceTag_VoiceTag) == 0x000BD0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetSignalVoiceTag_VoiceTag' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken22) == 0x000BD8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken22' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken23) == 0x000BD9, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken23' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_struct_Variable4) == 0x000BE0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, Temp_bool_Variable6) == 0x000BE8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::Temp_bool_Variable6' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_IsPvEPlayMode_IsPvEPlayMode) == 0x000BE9, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_IsPvEPlayMode_IsPvEPlayMode' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_Select4_Default) == 0x000BF0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_Select5_Default) == 0x000BF8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_Select5_Default' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_Select6_Default) == 0x000C00, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_Select6_Default' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken24) == 0x000C04, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken24' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Add_IntInt_ReturnValue6) == 0x000C08, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Add_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_IsPvEPlayMode_IsPvEPlayMode1) == 0x000C0C, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_IsPvEPlayMode_IsPvEPlayMode1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_Not_PreBool_ReturnValue8) == 0x000C0D, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_Not_PreBool_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetOwner_ReturnValue17) == 0x000C10, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetOwner_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_BooleanAND_ReturnValue7) == 0x000C18, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_BooleanAND_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property) == 0x000C20, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_bSuccess19) == 0x000C30, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_bSuccess19' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_IsPlayOwnerVoiceOnJump_bIsPlay) == 0x000C31, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_IsPlayOwnerVoiceOnJump_bIsPlay' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetOwner_ReturnValue18) == 0x000C38, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetOwner_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property1) == 0x000C40, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_bSuccess20) == 0x000C50, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_bSuccess20' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetPoliticVoiceComponent_VoiceComponent) == 0x000C58, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetPoliticVoiceComponent_VoiceComponent' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_IsPlayOwnerVoiceOnGetItem_bIsPlay) == 0x000C60, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_IsPlayOwnerVoiceOnGetItem_bIsPlay' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken25) == 0x000C61, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken25' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetPoliticVoiceComponent_VoiceComponent1) == 0x000C68, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetPoliticVoiceComponent_VoiceComponent1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetOwner_ReturnValue19) == 0x000C70, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetOwner_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken26) == 0x000C78, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken26' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property2) == 0x000C80, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, K2Node_DynamicCast_bSuccess21) == 0x000C90, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::K2Node_DynamicCast_bSuccess21' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_IsPlayOwnerVoiceOnPassThruEnter_bIsPlay) == 0x000C91, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_IsPlayOwnerVoiceOnPassThruEnter_bIsPlay' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetMatchStartVoiceTag_MatchStartVoiceTag) == 0x000C98, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetMatchStartVoiceTag_MatchStartVoiceTag' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken27) == 0x000CA0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken27' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_GetPoliticVoiceComponent_VoiceComponent2) == 0x000CA8, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_GetPoliticVoiceComponent_VoiceComponent2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent, CallFunc_TryToSpeak_bWillBeSpoken28) == 0x000CB0, "Member 'BP_VoiceComponent_C_ExecuteUbergraph_BP_VoiceComponent::CallFunc_TryToSpeak_bWillBeSpoken28' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.OnSpawnSignalPin_Event
// 0x0008 (0x0008 - 0x0000)
struct BP_VoiceComponent_C_OnSpawnSignalPin_Event final
{
public:
	struct FGameplayTag                           SignalPinType;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VoiceComponent_C_OnSpawnSignalPin_Event) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_OnSpawnSignalPin_Event");
static_assert(sizeof(BP_VoiceComponent_C_OnSpawnSignalPin_Event) == 0x000008, "Wrong size on BP_VoiceComponent_C_OnSpawnSignalPin_Event");
static_assert(offsetof(BP_VoiceComponent_C_OnSpawnSignalPin_Event, SignalPinType) == 0x000000, "Member 'BP_VoiceComponent_C_OnSpawnSignalPin_Event::SignalPinType' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.OnEmote
// 0x0004 (0x0004 - 0x0000)
struct BP_VoiceComponent_C_OnEmote final
{
public:
	int32                                         VoiceIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VoiceComponent_C_OnEmote) == 0x000004, "Wrong alignment on BP_VoiceComponent_C_OnEmote");
static_assert(sizeof(BP_VoiceComponent_C_OnEmote) == 0x000004, "Wrong size on BP_VoiceComponent_C_OnEmote");
static_assert(offsetof(BP_VoiceComponent_C_OnEmote, VoiceIndex) == 0x000000, "Member 'BP_VoiceComponent_C_OnEmote::VoiceIndex' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.OnPlayRadioChat
// 0x0010 (0x0010 - 0x0000)
struct BP_VoiceComponent_C_OnPlayRadioChat final
{
public:
	int32                                         ActionLogIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           VoiceTag;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VoiceComponent_C_OnPlayRadioChat) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_OnPlayRadioChat");
static_assert(sizeof(BP_VoiceComponent_C_OnPlayRadioChat) == 0x000010, "Wrong size on BP_VoiceComponent_C_OnPlayRadioChat");
static_assert(offsetof(BP_VoiceComponent_C_OnPlayRadioChat, ActionLogIndex) == 0x000000, "Member 'BP_VoiceComponent_C_OnPlayRadioChat::ActionLogIndex' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnPlayRadioChat, VoiceTag) == 0x000008, "Member 'BP_VoiceComponent_C_OnPlayRadioChat::VoiceTag' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.OnCharacterRevive
// 0x0008 (0x0008 - 0x0000)
struct BP_VoiceComponent_C_OnCharacterRevive final
{
public:
	class AActor*                                 Rescuer;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VoiceComponent_C_OnCharacterRevive) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_OnCharacterRevive");
static_assert(sizeof(BP_VoiceComponent_C_OnCharacterRevive) == 0x000008, "Wrong size on BP_VoiceComponent_C_OnCharacterRevive");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterRevive, Rescuer) == 0x000000, "Member 'BP_VoiceComponent_C_OnCharacterRevive::Rescuer' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.OnDown
// 0x0004 (0x0004 - 0x0000)
struct BP_VoiceComponent_C_OnDown final
{
public:
	int32                                         DownedMachingPlayerIndex;                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VoiceComponent_C_OnDown) == 0x000004, "Wrong alignment on BP_VoiceComponent_C_OnDown");
static_assert(sizeof(BP_VoiceComponent_C_OnDown) == 0x000004, "Wrong size on BP_VoiceComponent_C_OnDown");
static_assert(offsetof(BP_VoiceComponent_C_OnDown, DownedMachingPlayerIndex) == 0x000000, "Member 'BP_VoiceComponent_C_OnDown::DownedMachingPlayerIndex' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.OnDie
// 0x0003 (0x0003 - 0x0000)
struct BP_VoiceComponent_C_OnDie final
{
public:
	bool                                          bWillRessurect;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsLastDefeated;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDiedOfKillZ;                                      // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_OnDie) == 0x000001, "Wrong alignment on BP_VoiceComponent_C_OnDie");
static_assert(sizeof(BP_VoiceComponent_C_OnDie) == 0x000003, "Wrong size on BP_VoiceComponent_C_OnDie");
static_assert(offsetof(BP_VoiceComponent_C_OnDie, bWillRessurect) == 0x000000, "Member 'BP_VoiceComponent_C_OnDie::bWillRessurect' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnDie, bIsLastDefeated) == 0x000001, "Member 'BP_VoiceComponent_C_OnDie::bIsLastDefeated' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnDie, bDiedOfKillZ) == 0x000002, "Member 'BP_VoiceComponent_C_OnDie::bDiedOfKillZ' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.OnCharacterKill
// 0x0028 (0x0028 - 0x0000)
struct BP_VoiceComponent_C_OnCharacterKill final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackDistance;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         KilledCharacterId;                                 // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWithSeparatedStandAttack;                         // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHitEnemysSeparatedStand;                          // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFirstBlood;                                       // 0x0013(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         UltimateSkillSerialNumberIfInEffect;               // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedTime;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DeadPlayerId;                                      // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLastDefeated;                                   // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPlayerKill;                                       // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSpecialKill;                                      // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSelfKill;                                         // 0x0023(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_OnCharacterKill) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_OnCharacterKill");
static_assert(sizeof(BP_VoiceComponent_C_OnCharacterKill) == 0x000028, "Wrong size on BP_VoiceComponent_C_OnCharacterKill");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterKill, SkillTag) == 0x000000, "Member 'BP_VoiceComponent_C_OnCharacterKill::SkillTag' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterKill, SerialNumber) == 0x000008, "Member 'BP_VoiceComponent_C_OnCharacterKill::SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterKill, AttackDistance) == 0x00000C, "Member 'BP_VoiceComponent_C_OnCharacterKill::AttackDistance' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterKill, KilledCharacterId) == 0x000010, "Member 'BP_VoiceComponent_C_OnCharacterKill::KilledCharacterId' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterKill, bWithSeparatedStandAttack) == 0x000011, "Member 'BP_VoiceComponent_C_OnCharacterKill::bWithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterKill, bHitEnemysSeparatedStand) == 0x000012, "Member 'BP_VoiceComponent_C_OnCharacterKill::bHitEnemysSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterKill, bFirstBlood) == 0x000013, "Member 'BP_VoiceComponent_C_OnCharacterKill::bFirstBlood' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterKill, UltimateSkillSerialNumberIfInEffect) == 0x000014, "Member 'BP_VoiceComponent_C_OnCharacterKill::UltimateSkillSerialNumberIfInEffect' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterKill, ElapsedTime) == 0x000018, "Member 'BP_VoiceComponent_C_OnCharacterKill::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterKill, DeadPlayerId) == 0x00001C, "Member 'BP_VoiceComponent_C_OnCharacterKill::DeadPlayerId' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterKill, bIsLastDefeated) == 0x000020, "Member 'BP_VoiceComponent_C_OnCharacterKill::bIsLastDefeated' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterKill, bPlayerKill) == 0x000021, "Member 'BP_VoiceComponent_C_OnCharacterKill::bPlayerKill' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterKill, bSpecialKill) == 0x000022, "Member 'BP_VoiceComponent_C_OnCharacterKill::bSpecialKill' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterKill, bSelfKill) == 0x000023, "Member 'BP_VoiceComponent_C_OnCharacterKill::bSelfKill' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_VoiceComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VoiceComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_VoiceComponent_C_ReceiveTick");
static_assert(sizeof(BP_VoiceComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_VoiceComponent_C_ReceiveTick");
static_assert(offsetof(BP_VoiceComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_VoiceComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.OnCharacterEmote
// 0x0004 (0x0004 - 0x0000)
struct BP_VoiceComponent_C_OnCharacterEmote final
{
public:
	int32                                         VoiceIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VoiceComponent_C_OnCharacterEmote) == 0x000004, "Wrong alignment on BP_VoiceComponent_C_OnCharacterEmote");
static_assert(sizeof(BP_VoiceComponent_C_OnCharacterEmote) == 0x000004, "Wrong size on BP_VoiceComponent_C_OnCharacterEmote");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterEmote, VoiceIndex) == 0x000000, "Member 'BP_VoiceComponent_C_OnCharacterEmote::VoiceIndex' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.OnCharacterPassThruEnter_OnServer
// 0x0001 (0x0001 - 0x0000)
struct BP_VoiceComponent_C_OnCharacterPassThruEnter_OnServer final
{
public:
	bool                                          bOriginToCounterpart;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_OnCharacterPassThruEnter_OnServer) == 0x000001, "Wrong alignment on BP_VoiceComponent_C_OnCharacterPassThruEnter_OnServer");
static_assert(sizeof(BP_VoiceComponent_C_OnCharacterPassThruEnter_OnServer) == 0x000001, "Wrong size on BP_VoiceComponent_C_OnCharacterPassThruEnter_OnServer");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterPassThruEnter_OnServer, bOriginToCounterpart) == 0x000000, "Member 'BP_VoiceComponent_C_OnCharacterPassThruEnter_OnServer::bOriginToCounterpart' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.OnCharacterSkillGrownup
// 0x0028 (0x0028 - 0x0000)
struct BP_VoiceComponent_C_OnCharacterSkillGrownup final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   SpecifiedText;                                     // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_VoiceComponent_C_OnCharacterSkillGrownup) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_OnCharacterSkillGrownup");
static_assert(sizeof(BP_VoiceComponent_C_OnCharacterSkillGrownup) == 0x000028, "Wrong size on BP_VoiceComponent_C_OnCharacterSkillGrownup");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterSkillGrownup, GameplayTag) == 0x000000, "Member 'BP_VoiceComponent_C_OnCharacterSkillGrownup::GameplayTag' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterSkillGrownup, Value) == 0x000008, "Member 'BP_VoiceComponent_C_OnCharacterSkillGrownup::Value' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterSkillGrownup, SpecifiedText) == 0x000010, "Member 'BP_VoiceComponent_C_OnCharacterSkillGrownup::SpecifiedText' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.OnGameStateChangeLivingPlayerCount
// 0x000C (0x000C - 0x0000)
struct BP_VoiceComponent_C_OnGameStateChangeLivingPlayerCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LivingPlayerRate;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PairCount;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VoiceComponent_C_OnGameStateChangeLivingPlayerCount) == 0x000004, "Wrong alignment on BP_VoiceComponent_C_OnGameStateChangeLivingPlayerCount");
static_assert(sizeof(BP_VoiceComponent_C_OnGameStateChangeLivingPlayerCount) == 0x00000C, "Wrong size on BP_VoiceComponent_C_OnGameStateChangeLivingPlayerCount");
static_assert(offsetof(BP_VoiceComponent_C_OnGameStateChangeLivingPlayerCount, Count) == 0x000000, "Member 'BP_VoiceComponent_C_OnGameStateChangeLivingPlayerCount::Count' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnGameStateChangeLivingPlayerCount, LivingPlayerRate) == 0x000004, "Member 'BP_VoiceComponent_C_OnGameStateChangeLivingPlayerCount::LivingPlayerRate' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnGameStateChangeLivingPlayerCount, PairCount) == 0x000008, "Member 'BP_VoiceComponent_C_OnGameStateChangeLivingPlayerCount::PairCount' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.OnCharacterPassiveAdded
// 0x0010 (0x0010 - 0x0000)
struct BP_VoiceComponent_C_OnCharacterPassiveAdded final
{
public:
	struct FGameplayTag                           AddCondition;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SecondTag;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VoiceComponent_C_OnCharacterPassiveAdded) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_OnCharacterPassiveAdded");
static_assert(sizeof(BP_VoiceComponent_C_OnCharacterPassiveAdded) == 0x000010, "Wrong size on BP_VoiceComponent_C_OnCharacterPassiveAdded");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterPassiveAdded, AddCondition) == 0x000000, "Member 'BP_VoiceComponent_C_OnCharacterPassiveAdded::AddCondition' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterPassiveAdded, SecondTag) == 0x000008, "Member 'BP_VoiceComponent_C_OnCharacterPassiveAdded::SecondTag' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.OnCharacterGiveDamage
// 0x0028 (0x0028 - 0x0000)
struct BP_VoiceComponent_C_OnCharacterGiveDamage final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DamageType;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageReceiver;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRemainHP;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDamageIsCut;                                      // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SerialNumber;                                      // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DamageReceiverIsPlayer;                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWithSeparatedStandAttack;                         // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bEnemysSeparateStand;                              // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSelfDamage;                                       // 0x0023(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsEndured;                                         // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_OnCharacterGiveDamage) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_OnCharacterGiveDamage");
static_assert(sizeof(BP_VoiceComponent_C_OnCharacterGiveDamage) == 0x000028, "Wrong size on BP_VoiceComponent_C_OnCharacterGiveDamage");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterGiveDamage, Damage) == 0x000000, "Member 'BP_VoiceComponent_C_OnCharacterGiveDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterGiveDamage, DamageType) == 0x000008, "Member 'BP_VoiceComponent_C_OnCharacterGiveDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterGiveDamage, DamageReceiver) == 0x000010, "Member 'BP_VoiceComponent_C_OnCharacterGiveDamage::DamageReceiver' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterGiveDamage, bRemainHP) == 0x000018, "Member 'BP_VoiceComponent_C_OnCharacterGiveDamage::bRemainHP' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterGiveDamage, bDamageIsCut) == 0x000019, "Member 'BP_VoiceComponent_C_OnCharacterGiveDamage::bDamageIsCut' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterGiveDamage, SerialNumber) == 0x00001C, "Member 'BP_VoiceComponent_C_OnCharacterGiveDamage::SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterGiveDamage, DamageReceiverIsPlayer) == 0x000020, "Member 'BP_VoiceComponent_C_OnCharacterGiveDamage::DamageReceiverIsPlayer' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterGiveDamage, bWithSeparatedStandAttack) == 0x000021, "Member 'BP_VoiceComponent_C_OnCharacterGiveDamage::bWithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterGiveDamage, bEnemysSeparateStand) == 0x000022, "Member 'BP_VoiceComponent_C_OnCharacterGiveDamage::bEnemysSeparateStand' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterGiveDamage, bSelfDamage) == 0x000023, "Member 'BP_VoiceComponent_C_OnCharacterGiveDamage::bSelfDamage' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterGiveDamage, IsEndured) == 0x000024, "Member 'BP_VoiceComponent_C_OnCharacterGiveDamage::IsEndured' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.OnCharacterReceiveDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_VoiceComponent_C_OnCharacterReceiveDamage final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DamageType;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRemainHP;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDamageIsCutByStatus;                              // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDamageIsCutByAAP;                                 // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsEndured;                                         // 0x001B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_OnCharacterReceiveDamage) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_OnCharacterReceiveDamage");
static_assert(sizeof(BP_VoiceComponent_C_OnCharacterReceiveDamage) == 0x000020, "Wrong size on BP_VoiceComponent_C_OnCharacterReceiveDamage");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterReceiveDamage, Damage) == 0x000000, "Member 'BP_VoiceComponent_C_OnCharacterReceiveDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterReceiveDamage, DamageType) == 0x000008, "Member 'BP_VoiceComponent_C_OnCharacterReceiveDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterReceiveDamage, DamageCauser) == 0x000010, "Member 'BP_VoiceComponent_C_OnCharacterReceiveDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterReceiveDamage, bRemainHP) == 0x000018, "Member 'BP_VoiceComponent_C_OnCharacterReceiveDamage::bRemainHP' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterReceiveDamage, bDamageIsCutByStatus) == 0x000019, "Member 'BP_VoiceComponent_C_OnCharacterReceiveDamage::bDamageIsCutByStatus' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterReceiveDamage, bDamageIsCutByAAP) == 0x00001A, "Member 'BP_VoiceComponent_C_OnCharacterReceiveDamage::bDamageIsCutByAAP' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterReceiveDamage, IsEndured) == 0x00001B, "Member 'BP_VoiceComponent_C_OnCharacterReceiveDamage::IsEndured' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.OnCharacterGetItem
// 0x0008 (0x0008 - 0x0000)
struct BP_VoiceComponent_C_OnCharacterGetItem final
{
public:
	struct FGameplayTag                           ItemTag;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VoiceComponent_C_OnCharacterGetItem) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_OnCharacterGetItem");
static_assert(sizeof(BP_VoiceComponent_C_OnCharacterGetItem) == 0x000008, "Wrong size on BP_VoiceComponent_C_OnCharacterGetItem");
static_assert(offsetof(BP_VoiceComponent_C_OnCharacterGetItem, ItemTag) == 0x000000, "Member 'BP_VoiceComponent_C_OnCharacterGetItem::ItemTag' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.OnServer_SpeakFromRemote_Core
// 0x0020 (0x0020 - 0x0000)
struct BP_VoiceComponent_C_OnServer_SpeakFromRemote_Core final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBPToSpeak;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CharacterBPForComm;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           VoiceTag;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	E_VoiceCommandType                            VoiceCommandType;                                  // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAlsoSpeakOnPairEnv;                               // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_OnServer_SpeakFromRemote_Core) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_OnServer_SpeakFromRemote_Core");
static_assert(sizeof(BP_VoiceComponent_C_OnServer_SpeakFromRemote_Core) == 0x000020, "Wrong size on BP_VoiceComponent_C_OnServer_SpeakFromRemote_Core");
static_assert(offsetof(BP_VoiceComponent_C_OnServer_SpeakFromRemote_Core, CharacterBPToSpeak) == 0x000000, "Member 'BP_VoiceComponent_C_OnServer_SpeakFromRemote_Core::CharacterBPToSpeak' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnServer_SpeakFromRemote_Core, CharacterBPForComm) == 0x000008, "Member 'BP_VoiceComponent_C_OnServer_SpeakFromRemote_Core::CharacterBPForComm' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnServer_SpeakFromRemote_Core, VoiceTag) == 0x000010, "Member 'BP_VoiceComponent_C_OnServer_SpeakFromRemote_Core::VoiceTag' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnServer_SpeakFromRemote_Core, VoiceCommandType) == 0x000018, "Member 'BP_VoiceComponent_C_OnServer_SpeakFromRemote_Core::VoiceCommandType' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnServer_SpeakFromRemote_Core, bAlsoSpeakOnPairEnv) == 0x000019, "Member 'BP_VoiceComponent_C_OnServer_SpeakFromRemote_Core::bAlsoSpeakOnPairEnv' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.SpeakFromRemote
// 0x0010 (0x0010 - 0x0000)
struct BP_VoiceComponent_C_SpeakFromRemote final
{
public:
	struct FGameplayTag                           VoiceTag;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	E_VoiceCommandType                            VoiceCommandType;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VoiceComponent_C_SpeakFromRemote) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_SpeakFromRemote");
static_assert(sizeof(BP_VoiceComponent_C_SpeakFromRemote) == 0x000010, "Wrong size on BP_VoiceComponent_C_SpeakFromRemote");
static_assert(offsetof(BP_VoiceComponent_C_SpeakFromRemote, VoiceTag) == 0x000000, "Member 'BP_VoiceComponent_C_SpeakFromRemote::VoiceTag' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_SpeakFromRemote, VoiceCommandType) == 0x000008, "Member 'BP_VoiceComponent_C_SpeakFromRemote::VoiceCommandType' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.ROS_SpeakFromRemote
// 0x0010 (0x0010 - 0x0000)
struct BP_VoiceComponent_C_ROS_SpeakFromRemote final
{
public:
	struct FGameplayTag                           VoiceTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	E_VoiceCommandType                            VoiceCommandType;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAlsoSpeakOnPairEnv;                               // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_ROS_SpeakFromRemote) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_ROS_SpeakFromRemote");
static_assert(sizeof(BP_VoiceComponent_C_ROS_SpeakFromRemote) == 0x000010, "Wrong size on BP_VoiceComponent_C_ROS_SpeakFromRemote");
static_assert(offsetof(BP_VoiceComponent_C_ROS_SpeakFromRemote, VoiceTag) == 0x000000, "Member 'BP_VoiceComponent_C_ROS_SpeakFromRemote::VoiceTag' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ROS_SpeakFromRemote, VoiceCommandType) == 0x000008, "Member 'BP_VoiceComponent_C_ROS_SpeakFromRemote::VoiceCommandType' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ROS_SpeakFromRemote, bAlsoSpeakOnPairEnv) == 0x000009, "Member 'BP_VoiceComponent_C_ROS_SpeakFromRemote::bAlsoSpeakOnPairEnv' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.OnWwiseEventCallback
// 0x0010 (0x0010 - 0x0000)
struct BP_VoiceComponent_C_OnWwiseEventCallback final
{
public:
	EAkCallbackType                               CallbackType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkCallbackInfo*                        CallbackInfo;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VoiceComponent_C_OnWwiseEventCallback) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_OnWwiseEventCallback");
static_assert(sizeof(BP_VoiceComponent_C_OnWwiseEventCallback) == 0x000010, "Wrong size on BP_VoiceComponent_C_OnWwiseEventCallback");
static_assert(offsetof(BP_VoiceComponent_C_OnWwiseEventCallback, CallbackType) == 0x000000, "Member 'BP_VoiceComponent_C_OnWwiseEventCallback::CallbackType' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_OnWwiseEventCallback, CallbackInfo) == 0x000008, "Member 'BP_VoiceComponent_C_OnWwiseEventCallback::CallbackInfo' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_VoiceComponent_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_NotifyTheWorld");
static_assert(sizeof(BP_VoiceComponent_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_VoiceComponent_C_NotifyTheWorld");
static_assert(offsetof(BP_VoiceComponent_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_VoiceComponent_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_VoiceComponent_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_VoiceComponent_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_VoiceComponent_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_VoiceComponent_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.TryToSpeak
// 0x0128 (0x0128 - 0x0000)
struct BP_VoiceComponent_C_TryToSpeak final
{
public:
	struct FGameplayTag                           VoiceTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	E_VoiceProcessType                            VoiceProcessType;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSpeakEvenIfNotAlive;                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSpeakEvenIfDuringTheWorld;                        // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSpeakEvenIfNotLocalEnv;                           // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAlsoSpeakOnPairEnv;                               // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIgnoreIfDuringTheWorld;                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSpeakIfTheSameEventIsNotQueued;                   // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWillBeSpoken;                                     // 0x000F(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_PostAkEventReturnValue;                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_IsStopEvent;                                  // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_DuringTheWorld;                               // 0x0015(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwiseVoiceEventInfo                   Temp_VoiceEventInfo;                               // 0x0018(0x0020)(Edit, BlueprintVisible)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetVoiceEventInfo_bResult;                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwiseVoiceEventInfo                   CallFunc_GetVoiceEventInfo_VoiceEventInfo;         // 0x0040(0x0020)()
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue;           // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B[0x5];                                       // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> K2Node_CreateDelegate_OutputDelegate; // 0x0090(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A7[0x1];                                       // 0x00A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue;     // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPostedAkEventExistence_bExist;       // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> K2Node_CreateDelegate_OutputDelegate1; // 0x00C8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwiseVoiceEventInfo                   CallFunc_GetCurrentSpokenVoiceEventInfo_VoiceEventInfo; // 0x00E0(0x0020)()
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0108(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_VoiceEventIsStopEvent_ReturnValue;        // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue1;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_VoiceCommandType                            Temp_byte_Variable;                                // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_VoiceCommandType                            Temp_byte_Variable1;                               // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_VoiceCommandType                            K2Node_Select_Default;                             // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VoiceComponent_C_TryToSpeak) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_TryToSpeak");
static_assert(sizeof(BP_VoiceComponent_C_TryToSpeak) == 0x000128, "Wrong size on BP_VoiceComponent_C_TryToSpeak");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, VoiceTag) == 0x000000, "Member 'BP_VoiceComponent_C_TryToSpeak::VoiceTag' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, VoiceProcessType) == 0x000008, "Member 'BP_VoiceComponent_C_TryToSpeak::VoiceProcessType' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, bSpeakEvenIfNotAlive) == 0x000009, "Member 'BP_VoiceComponent_C_TryToSpeak::bSpeakEvenIfNotAlive' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, bSpeakEvenIfDuringTheWorld) == 0x00000A, "Member 'BP_VoiceComponent_C_TryToSpeak::bSpeakEvenIfDuringTheWorld' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, bSpeakEvenIfNotLocalEnv) == 0x00000B, "Member 'BP_VoiceComponent_C_TryToSpeak::bSpeakEvenIfNotLocalEnv' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, bAlsoSpeakOnPairEnv) == 0x00000C, "Member 'BP_VoiceComponent_C_TryToSpeak::bAlsoSpeakOnPairEnv' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, bIgnoreIfDuringTheWorld) == 0x00000D, "Member 'BP_VoiceComponent_C_TryToSpeak::bIgnoreIfDuringTheWorld' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, bSpeakIfTheSameEventIsNotQueued) == 0x00000E, "Member 'BP_VoiceComponent_C_TryToSpeak::bSpeakIfTheSameEventIsNotQueued' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, bWillBeSpoken) == 0x00000F, "Member 'BP_VoiceComponent_C_TryToSpeak::bWillBeSpoken' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, Temp_PostAkEventReturnValue) == 0x000010, "Member 'BP_VoiceComponent_C_TryToSpeak::Temp_PostAkEventReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, Temp_IsStopEvent) == 0x000014, "Member 'BP_VoiceComponent_C_TryToSpeak::Temp_IsStopEvent' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, Temp_DuringTheWorld) == 0x000015, "Member 'BP_VoiceComponent_C_TryToSpeak::Temp_DuringTheWorld' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, Temp_VoiceEventInfo) == 0x000018, "Member 'BP_VoiceComponent_C_TryToSpeak::Temp_VoiceEventInfo' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, K2Node_SwitchEnum_CmpSuccess) == 0x000039, "Member 'BP_VoiceComponent_C_TryToSpeak::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_GetVoiceEventInfo_bResult) == 0x00003A, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_GetVoiceEventInfo_bResult' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_GetVoiceEventInfo_VoiceEventInfo) == 0x000040, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_GetVoiceEventInfo_VoiceEventInfo' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_Not_PreBool_ReturnValue1) == 0x000060, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_BooleanOR_ReturnValue) == 0x000061, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_GetAJBGameInstance_bSuccess) == 0x000062, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000068, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_IsPlayingReplay_ReturnValue) == 0x000070, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_Not_PreBool_ReturnValue2) == 0x000071, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, Temp_bool_Variable) == 0x000072, "Member 'BP_VoiceComponent_C_TryToSpeak::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_GetOwner_ReturnValue) == 0x000078, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000080, "Member 'BP_VoiceComponent_C_TryToSpeak::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_VoiceComponent_C_TryToSpeak::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_HasLocalSharedController_ReturnValue) == 0x000089, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_IsPlayerController_ReturnValue) == 0x00008A, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_IsPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, K2Node_CreateDelegate_OutputDelegate) == 0x000090, "Member 'BP_VoiceComponent_C_TryToSpeak::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_Array_Contains_ReturnValue) == 0x0000A5, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_Not_PreBool_ReturnValue3) == 0x0000A6, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_GetOwner_ReturnValue1) == 0x0000A8, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x0000B0, "Member 'BP_VoiceComponent_C_TryToSpeak::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, K2Node_DynamicCast_bSuccess1) == 0x0000B8, "Member 'BP_VoiceComponent_C_TryToSpeak::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_CharacterBehaviorMatches_ReturnValue) == 0x0000B9, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_CharacterBehaviorMatches_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_BooleanOR_ReturnValue1) == 0x0000BA, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000BB, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_CheckPostedAkEventExistence_bExist) == 0x0000BC, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_CheckPostedAkEventExistence_bExist' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_BooleanAND_ReturnValue) == 0x0000BD, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_Array_Add_ReturnValue) == 0x0000C0, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, K2Node_CreateDelegate_OutputDelegate1) == 0x0000C8, "Member 'BP_VoiceComponent_C_TryToSpeak::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_GetCurrentSpokenVoiceEventInfo_VoiceEventInfo) == 0x0000E0, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_GetCurrentSpokenVoiceEventInfo_VoiceEventInfo' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_PostAkEvent_ReturnValue) == 0x000100, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, Temp_delegate_Variable) == 0x000108, "Member 'BP_VoiceComponent_C_TryToSpeak::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_VoiceEventIsStopEvent_ReturnValue) == 0x000118, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_VoiceEventIsStopEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_PostAkEvent_ReturnValue1) == 0x00011C, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_PostAkEvent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000120, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_Less_IntInt_ReturnValue1) == 0x000121, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, Temp_byte_Variable) == 0x000122, "Member 'BP_VoiceComponent_C_TryToSpeak::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_BooleanAND_ReturnValue1) == 0x000123, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, CallFunc_Not_PreBool_ReturnValue4) == 0x000124, "Member 'BP_VoiceComponent_C_TryToSpeak::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, Temp_byte_Variable1) == 0x000125, "Member 'BP_VoiceComponent_C_TryToSpeak::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeak, K2Node_Select_Default) == 0x000126, "Member 'BP_VoiceComponent_C_TryToSpeak::K2Node_Select_Default' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.GetCharacterShortName
// 0x00F8 (0x00F8 - 0x0000)
struct BP_VoiceComponent_C_GetCharacterShortName final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ShortName;                                         // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 InvalidShortName;                                  // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> CallFunc_GetGameplayTags_self_CastInput; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy;         // 0x0050(0x0020)()
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0070(0x0010)(ZeroConstructor, ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ToUpper_ReturnValue;                      // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue1;           // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB[0x1];                                       // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x00E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_GetCharacterShortName) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_GetCharacterShortName");
static_assert(sizeof(BP_VoiceComponent_C_GetCharacterShortName) == 0x0000F8, "Wrong size on BP_VoiceComponent_C_GetCharacterShortName");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, Result) == 0x000000, "Member 'BP_VoiceComponent_C_GetCharacterShortName::Result' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, ShortName) == 0x000008, "Member 'BP_VoiceComponent_C_GetCharacterShortName::ShortName' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, InvalidShortName) == 0x000018, "Member 'BP_VoiceComponent_C_GetCharacterShortName::InvalidShortName' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_VoiceComponent_C_GetCharacterShortName::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000030, "Member 'BP_VoiceComponent_C_GetCharacterShortName::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_VoiceComponent_C_GetCharacterShortName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_VoiceComponent_C_GetCharacterShortName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, CallFunc_GetGameplayTags_self_CastInput) == 0x000040, "Member 'BP_VoiceComponent_C_GetCharacterShortName::CallFunc_GetGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, CallFunc_GetGameplayTags_TagContainerCopy) == 0x000050, "Member 'BP_VoiceComponent_C_GetCharacterShortName::CallFunc_GetGameplayTags_TagContainerCopy' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000070, "Member 'BP_VoiceComponent_C_GetCharacterShortName::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_VoiceComponent_C_GetCharacterShortName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, CallFunc_GetTagName_ReturnValue) == 0x000088, "Member 'BP_VoiceComponent_C_GetCharacterShortName::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_VoiceComponent_C_GetCharacterShortName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, CallFunc_Conv_NameToString_ReturnValue) == 0x000098, "Member 'BP_VoiceComponent_C_GetCharacterShortName::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, CallFunc_Replace_ReturnValue) == 0x0000A8, "Member 'BP_VoiceComponent_C_GetCharacterShortName::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, CallFunc_NotEqual_StrStr_ReturnValue) == 0x0000B8, "Member 'BP_VoiceComponent_C_GetCharacterShortName::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, CallFunc_Len_ReturnValue) == 0x0000BC, "Member 'BP_VoiceComponent_C_GetCharacterShortName::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_VoiceComponent_C_GetCharacterShortName::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, CallFunc_ToUpper_ReturnValue) == 0x0000C8, "Member 'BP_VoiceComponent_C_GetCharacterShortName::CallFunc_ToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000D8, "Member 'BP_VoiceComponent_C_GetCharacterShortName::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, CallFunc_EqualEqual_StrStr_ReturnValue1) == 0x0000D9, "Member 'BP_VoiceComponent_C_GetCharacterShortName::CallFunc_EqualEqual_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, CallFunc_BooleanAND_ReturnValue) == 0x0000DA, "Member 'BP_VoiceComponent_C_GetCharacterShortName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, Temp_int_Loop_Counter_Variable) == 0x0000DC, "Member 'BP_VoiceComponent_C_GetCharacterShortName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, CallFunc_Less_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_VoiceComponent_C_GetCharacterShortName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, CallFunc_Add_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_VoiceComponent_C_GetCharacterShortName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x0000E8, "Member 'BP_VoiceComponent_C_GetCharacterShortName::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCharacterShortName, CallFunc_MatchesTag_ReturnValue) == 0x0000F0, "Member 'BP_VoiceComponent_C_GetCharacterShortName::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.GetVoiceEventInfo
// 0x0100 (0x0100 - 0x0000)
struct BP_VoiceComponent_C_GetVoiceEventInfo final
{
public:
	struct FGameplayTag                           VoiceTagWithoutCharacterShortName;                 // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          bResult;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwiseVoiceEventInfo                   VoiceEventInfo;                                    // 0x0010(0x0020)(Parm, OutParm)
	struct FWwiseVoiceEventInfo                   Temp_VoiceEventInfo;                               // 0x0030(0x0020)(Edit, BlueprintVisible)
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwiseVoiceEventInfo                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0058(0x0020)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterShortName_Result;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCharacterShortName_ShortName;          // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FWwiseVoiceEventInfo                   CallFunc_GetDataTableRow_WwiseVoiceEventInfo_OutRow; // 0x00B8(0x0020)()
	bool                                          CallFunc_GetDataTableRow_WwiseVoiceEventInfo_ReturnValue; // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwiseVoiceEventInfo                   K2Node_MakeStruct_WwiseVoiceEventInfo;             // 0x00E0(0x0020)()
};
static_assert(alignof(BP_VoiceComponent_C_GetVoiceEventInfo) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_GetVoiceEventInfo");
static_assert(sizeof(BP_VoiceComponent_C_GetVoiceEventInfo) == 0x000100, "Wrong size on BP_VoiceComponent_C_GetVoiceEventInfo");
static_assert(offsetof(BP_VoiceComponent_C_GetVoiceEventInfo, VoiceTagWithoutCharacterShortName) == 0x000000, "Member 'BP_VoiceComponent_C_GetVoiceEventInfo::VoiceTagWithoutCharacterShortName' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetVoiceEventInfo, bResult) == 0x000008, "Member 'BP_VoiceComponent_C_GetVoiceEventInfo::bResult' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetVoiceEventInfo, VoiceEventInfo) == 0x000010, "Member 'BP_VoiceComponent_C_GetVoiceEventInfo::VoiceEventInfo' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetVoiceEventInfo, Temp_VoiceEventInfo) == 0x000030, "Member 'BP_VoiceComponent_C_GetVoiceEventInfo::Temp_VoiceEventInfo' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetVoiceEventInfo, CallFunc_GetTagName_ReturnValue) == 0x000050, "Member 'BP_VoiceComponent_C_GetVoiceEventInfo::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetVoiceEventInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000058, "Member 'BP_VoiceComponent_C_GetVoiceEventInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetVoiceEventInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000078, "Member 'BP_VoiceComponent_C_GetVoiceEventInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetVoiceEventInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'BP_VoiceComponent_C_GetVoiceEventInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetVoiceEventInfo, CallFunc_GetCharacterShortName_Result) == 0x000090, "Member 'BP_VoiceComponent_C_GetVoiceEventInfo::CallFunc_GetCharacterShortName_Result' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetVoiceEventInfo, CallFunc_GetCharacterShortName_ShortName) == 0x000098, "Member 'BP_VoiceComponent_C_GetVoiceEventInfo::CallFunc_GetCharacterShortName_ShortName' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetVoiceEventInfo, CallFunc_Concat_StrStr_ReturnValue1) == 0x0000A8, "Member 'BP_VoiceComponent_C_GetVoiceEventInfo::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetVoiceEventInfo, CallFunc_GetDataTableRow_WwiseVoiceEventInfo_OutRow) == 0x0000B8, "Member 'BP_VoiceComponent_C_GetVoiceEventInfo::CallFunc_GetDataTableRow_WwiseVoiceEventInfo_OutRow' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetVoiceEventInfo, CallFunc_GetDataTableRow_WwiseVoiceEventInfo_ReturnValue) == 0x0000D8, "Member 'BP_VoiceComponent_C_GetVoiceEventInfo::CallFunc_GetDataTableRow_WwiseVoiceEventInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetVoiceEventInfo, K2Node_MakeStruct_WwiseVoiceEventInfo) == 0x0000E0, "Member 'BP_VoiceComponent_C_GetVoiceEventInfo::K2Node_MakeStruct_WwiseVoiceEventInfo' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.TryToSpeakFromQueue
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) BP_VoiceComponent_C_TryToSpeakFromQueue final
{
public:
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> K2Node_CreateDelegate_OutputDelegate; // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPostedAkEventExistence_bExist;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_TryToSpeakFromQueue) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_TryToSpeakFromQueue");
static_assert(sizeof(BP_VoiceComponent_C_TryToSpeakFromQueue) == 0x000020, "Wrong size on BP_VoiceComponent_C_TryToSpeakFromQueue");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakFromQueue, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_VoiceComponent_C_TryToSpeakFromQueue::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakFromQueue, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000010, "Member 'BP_VoiceComponent_C_TryToSpeakFromQueue::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakFromQueue, CallFunc_PostAkEvent_ReturnValue) == 0x000014, "Member 'BP_VoiceComponent_C_TryToSpeakFromQueue::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakFromQueue, CallFunc_CheckPostedAkEventExistence_bExist) == 0x000018, "Member 'BP_VoiceComponent_C_TryToSpeakFromQueue::CallFunc_CheckPostedAkEventExistence_bExist' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.GetCurrentSpokenVoiceEventInfo
// 0x0048 (0x0048 - 0x0000)
struct BP_VoiceComponent_C_GetCurrentSpokenVoiceEventInfo final
{
public:
	struct FWwiseVoiceEventInfo                   VoiceEventInfo;                                    // 0x0000(0x0020)(Parm, OutParm)
	struct FWwiseVoiceEventInfo                   K2Node_MakeStruct_WwiseVoiceEventInfo;             // 0x0020(0x0020)()
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_GetCurrentSpokenVoiceEventInfo) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_GetCurrentSpokenVoiceEventInfo");
static_assert(sizeof(BP_VoiceComponent_C_GetCurrentSpokenVoiceEventInfo) == 0x000048, "Wrong size on BP_VoiceComponent_C_GetCurrentSpokenVoiceEventInfo");
static_assert(offsetof(BP_VoiceComponent_C_GetCurrentSpokenVoiceEventInfo, VoiceEventInfo) == 0x000000, "Member 'BP_VoiceComponent_C_GetCurrentSpokenVoiceEventInfo::VoiceEventInfo' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCurrentSpokenVoiceEventInfo, K2Node_MakeStruct_WwiseVoiceEventInfo) == 0x000020, "Member 'BP_VoiceComponent_C_GetCurrentSpokenVoiceEventInfo::K2Node_MakeStruct_WwiseVoiceEventInfo' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetCurrentSpokenVoiceEventInfo, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000040, "Member 'BP_VoiceComponent_C_GetCurrentSpokenVoiceEventInfo::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.PostEvent
// 0x0048 (0x0048 - 0x0000)
struct BP_VoiceComponent_C_PostEvent final
{
public:
	struct FGameplayTag                           VoiceTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetVoiceEventInfo_bResult;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwiseVoiceEventInfo                   CallFunc_GetVoiceEventInfo_VoiceEventInfo;         // 0x0010(0x0020)()
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0030(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPostedAkEventExistence_bExist;       // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_PostEvent) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_PostEvent");
static_assert(sizeof(BP_VoiceComponent_C_PostEvent) == 0x000048, "Wrong size on BP_VoiceComponent_C_PostEvent");
static_assert(offsetof(BP_VoiceComponent_C_PostEvent, VoiceTag) == 0x000000, "Member 'BP_VoiceComponent_C_PostEvent::VoiceTag' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_PostEvent, CallFunc_GetVoiceEventInfo_bResult) == 0x000008, "Member 'BP_VoiceComponent_C_PostEvent::CallFunc_GetVoiceEventInfo_bResult' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_PostEvent, CallFunc_GetVoiceEventInfo_VoiceEventInfo) == 0x000010, "Member 'BP_VoiceComponent_C_PostEvent::CallFunc_GetVoiceEventInfo_VoiceEventInfo' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_PostEvent, Temp_delegate_Variable) == 0x000030, "Member 'BP_VoiceComponent_C_PostEvent::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_PostEvent, CallFunc_PostAkEvent_ReturnValue) == 0x000040, "Member 'BP_VoiceComponent_C_PostEvent::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_PostEvent, CallFunc_CheckPostedAkEventExistence_bExist) == 0x000044, "Member 'BP_VoiceComponent_C_PostEvent::CallFunc_CheckPostedAkEventExistence_bExist' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.TryToSpeakFinishVoice
// 0x0080 (0x0080 - 0x0000)
struct BP_VoiceComponent_C_TryToSpeakFinishVoice final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_FinishVoiceInfo                    CallFunc_Array_Get_Item;                           // 0x0010(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetVoiceEventInfo_bResult;                // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwiseVoiceEventInfo                   CallFunc_GetVoiceEventInfo_VoiceEventInfo;         // 0x0030(0x0020)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwiseVoiceEventInfo                   CallFunc_GetCurrentSpokenVoiceEventInfo_VoiceEventInfo; // 0x0058(0x0020)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_TryToSpeakFinishVoice) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_TryToSpeakFinishVoice");
static_assert(sizeof(BP_VoiceComponent_C_TryToSpeakFinishVoice) == 0x000080, "Wrong size on BP_VoiceComponent_C_TryToSpeakFinishVoice");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakFinishVoice, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_VoiceComponent_C_TryToSpeakFinishVoice::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakFinishVoice, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_VoiceComponent_C_TryToSpeakFinishVoice::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakFinishVoice, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_VoiceComponent_C_TryToSpeakFinishVoice::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakFinishVoice, Temp_bool_True_if_break_was_hit_Variable) == 0x00000C, "Member 'BP_VoiceComponent_C_TryToSpeakFinishVoice::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakFinishVoice, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_VoiceComponent_C_TryToSpeakFinishVoice::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakFinishVoice, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_VoiceComponent_C_TryToSpeakFinishVoice::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakFinishVoice, CallFunc_TryToSpeak_bWillBeSpoken) == 0x000029, "Member 'BP_VoiceComponent_C_TryToSpeakFinishVoice::CallFunc_TryToSpeak_bWillBeSpoken' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakFinishVoice, CallFunc_IsGameplayTagValid_ReturnValue) == 0x00002A, "Member 'BP_VoiceComponent_C_TryToSpeakFinishVoice::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakFinishVoice, CallFunc_GetVoiceEventInfo_bResult) == 0x00002B, "Member 'BP_VoiceComponent_C_TryToSpeakFinishVoice::CallFunc_GetVoiceEventInfo_bResult' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakFinishVoice, CallFunc_GetVoiceEventInfo_VoiceEventInfo) == 0x000030, "Member 'BP_VoiceComponent_C_TryToSpeakFinishVoice::CallFunc_GetVoiceEventInfo_VoiceEventInfo' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakFinishVoice, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_VoiceComponent_C_TryToSpeakFinishVoice::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakFinishVoice, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_VoiceComponent_C_TryToSpeakFinishVoice::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakFinishVoice, CallFunc_GetCurrentSpokenVoiceEventInfo_VoiceEventInfo) == 0x000058, "Member 'BP_VoiceComponent_C_TryToSpeakFinishVoice::CallFunc_GetCurrentSpokenVoiceEventInfo_VoiceEventInfo' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakFinishVoice, CallFunc_BooleanAND_ReturnValue) == 0x000078, "Member 'BP_VoiceComponent_C_TryToSpeakFinishVoice::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakFinishVoice, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000079, "Member 'BP_VoiceComponent_C_TryToSpeakFinishVoice::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.ReserveBreak
// 0x0008 (0x0008 - 0x0000)
struct BP_VoiceComponent_C_ReserveBreak final
{
public:
	struct FGameplayTag                           VoiceEventTagToStop;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VoiceComponent_C_ReserveBreak) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_ReserveBreak");
static_assert(sizeof(BP_VoiceComponent_C_ReserveBreak) == 0x000008, "Wrong size on BP_VoiceComponent_C_ReserveBreak");
static_assert(offsetof(BP_VoiceComponent_C_ReserveBreak, VoiceEventTagToStop) == 0x000000, "Member 'BP_VoiceComponent_C_ReserveBreak::VoiceEventTagToStop' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.CheckPostedAkEventExistence
// 0x0048 (0x0048 - 0x0000)
struct BP_VoiceComponent_C_CheckPostedAkEventExistence final
{
public:
	int32                                         PostAkEventReturnValue;                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 WwiseEvent;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bExist;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VoiceComponent_C_CheckPostedAkEventExistence) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_CheckPostedAkEventExistence");
static_assert(sizeof(BP_VoiceComponent_C_CheckPostedAkEventExistence) == 0x000048, "Wrong size on BP_VoiceComponent_C_CheckPostedAkEventExistence");
static_assert(offsetof(BP_VoiceComponent_C_CheckPostedAkEventExistence, PostAkEventReturnValue) == 0x000000, "Member 'BP_VoiceComponent_C_CheckPostedAkEventExistence::PostAkEventReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckPostedAkEventExistence, WwiseEvent) == 0x000008, "Member 'BP_VoiceComponent_C_CheckPostedAkEventExistence::WwiseEvent' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckPostedAkEventExistence, bExist) == 0x000018, "Member 'BP_VoiceComponent_C_CheckPostedAkEventExistence::bExist' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckPostedAkEventExistence, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BP_VoiceComponent_C_CheckPostedAkEventExistence::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckPostedAkEventExistence, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_VoiceComponent_C_CheckPostedAkEventExistence::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckPostedAkEventExistence, CallFunc_Concat_StrStr_ReturnValue1) == 0x000038, "Member 'BP_VoiceComponent_C_CheckPostedAkEventExistence::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.ShouldSpeakVoiceFromRemote
// 0x0040 (0x0040 - 0x0000)
struct BP_VoiceComponent_C_ShouldSpeakVoiceFromRemote final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGamePlayerControllerBP_bSuccess;  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        CallFunc_GetAJBInGamePlayerControllerBP_In_Game_Player_Controller_BP; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetCurrentFlowState_CurrentFlowState;     // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0018(0x0020)()
	bool                                          CallFunc_MatchesAnyTags_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_ShouldSpeakVoiceFromRemote) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_ShouldSpeakVoiceFromRemote");
static_assert(sizeof(BP_VoiceComponent_C_ShouldSpeakVoiceFromRemote) == 0x000040, "Wrong size on BP_VoiceComponent_C_ShouldSpeakVoiceFromRemote");
static_assert(offsetof(BP_VoiceComponent_C_ShouldSpeakVoiceFromRemote, bResult) == 0x000000, "Member 'BP_VoiceComponent_C_ShouldSpeakVoiceFromRemote::bResult' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ShouldSpeakVoiceFromRemote, CallFunc_GetAJBInGamePlayerControllerBP_bSuccess) == 0x000001, "Member 'BP_VoiceComponent_C_ShouldSpeakVoiceFromRemote::CallFunc_GetAJBInGamePlayerControllerBP_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ShouldSpeakVoiceFromRemote, CallFunc_GetAJBInGamePlayerControllerBP_In_Game_Player_Controller_BP) == 0x000008, "Member 'BP_VoiceComponent_C_ShouldSpeakVoiceFromRemote::CallFunc_GetAJBInGamePlayerControllerBP_In_Game_Player_Controller_BP' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ShouldSpeakVoiceFromRemote, CallFunc_GetCurrentFlowState_CurrentFlowState) == 0x000010, "Member 'BP_VoiceComponent_C_ShouldSpeakVoiceFromRemote::CallFunc_GetCurrentFlowState_CurrentFlowState' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ShouldSpeakVoiceFromRemote, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000018, "Member 'BP_VoiceComponent_C_ShouldSpeakVoiceFromRemote::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ShouldSpeakVoiceFromRemote, CallFunc_MatchesAnyTags_ReturnValue) == 0x000038, "Member 'BP_VoiceComponent_C_ShouldSpeakVoiceFromRemote::CallFunc_MatchesAnyTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_ShouldSpeakVoiceFromRemote, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'BP_VoiceComponent_C_ShouldSpeakVoiceFromRemote::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.VoiceEventIsStopEvent
// 0x0040 (0x0040 - 0x0000)
struct BP_VoiceComponent_C_VoiceEventIsStopEvent final
{
public:
	struct FWwiseVoiceEventInfo                   VoiceEvent;                                        // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_VoiceEventIsStopEvent) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_VoiceEventIsStopEvent");
static_assert(sizeof(BP_VoiceComponent_C_VoiceEventIsStopEvent) == 0x000040, "Wrong size on BP_VoiceComponent_C_VoiceEventIsStopEvent");
static_assert(offsetof(BP_VoiceComponent_C_VoiceEventIsStopEvent, VoiceEvent) == 0x000000, "Member 'BP_VoiceComponent_C_VoiceEventIsStopEvent::VoiceEvent' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_VoiceEventIsStopEvent, ReturnValue) == 0x000020, "Member 'BP_VoiceComponent_C_VoiceEventIsStopEvent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_VoiceEventIsStopEvent, CallFunc_MakeLiteralString_ReturnValue) == 0x000028, "Member 'BP_VoiceComponent_C_VoiceEventIsStopEvent::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_VoiceEventIsStopEvent, CallFunc_StartsWith_ReturnValue) == 0x000038, "Member 'BP_VoiceComponent_C_VoiceEventIsStopEvent::CallFunc_StartsWith_ReturnValue' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.TryToSpeakDamageVoice
// 0x0030 (0x0030 - 0x0000)
struct BP_VoiceComponent_C_TryToSpeakDamageVoice final
{
public:
	struct FGameplayTag                           VoiceTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bCausedByDamageArea;                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_TryToSpeakDamageVoice) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_TryToSpeakDamageVoice");
static_assert(sizeof(BP_VoiceComponent_C_TryToSpeakDamageVoice) == 0x000030, "Wrong size on BP_VoiceComponent_C_TryToSpeakDamageVoice");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakDamageVoice, VoiceTag) == 0x000000, "Member 'BP_VoiceComponent_C_TryToSpeakDamageVoice::VoiceTag' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakDamageVoice, bCausedByDamageArea) == 0x000008, "Member 'BP_VoiceComponent_C_TryToSpeakDamageVoice::bCausedByDamageArea' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakDamageVoice, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_VoiceComponent_C_TryToSpeakDamageVoice::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakDamageVoice, CallFunc_TryToSpeak_bWillBeSpoken) == 0x000018, "Member 'BP_VoiceComponent_C_TryToSpeakDamageVoice::CallFunc_TryToSpeak_bWillBeSpoken' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakDamageVoice, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000020, "Member 'BP_VoiceComponent_C_TryToSpeakDamageVoice::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakDamageVoice, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_VoiceComponent_C_TryToSpeakDamageVoice::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.TryToSpeakEmoteVoicePoliticClientEnv
// 0x0098 (0x0098 - 0x0000)
struct BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv final
{
public:
	int32                                         VoiceIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTargetActor_ViewTargetActor;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeGameplayTagByName_OutTag;             // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeGameplayTagByName_ReturnValue;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue1;     // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken;                 // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayModeIsPair_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0088(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToSpeak_bWillBeSpoken1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv");
static_assert(sizeof(BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv) == 0x000098, "Wrong size on BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv, VoiceIndex) == 0x000000, "Member 'BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv::VoiceIndex' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv, CallFunc_GetViewTargetActor_ViewTargetActor) == 0x000008, "Member 'BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv::CallFunc_GetViewTargetActor_ViewTargetActor' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000030, "Member 'BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv, CallFunc_Conv_TextToString_ReturnValue) == 0x000040, "Member 'BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000060, "Member 'BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv, CallFunc_MakeGameplayTagByName_OutTag) == 0x000068, "Member 'BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv::CallFunc_MakeGameplayTagByName_OutTag' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv, CallFunc_MakeGameplayTagByName_ReturnValue) == 0x000070, "Member 'BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv::CallFunc_MakeGameplayTagByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv, CallFunc_EqualEqual_ObjectObject_ReturnValue1) == 0x000071, "Member 'BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv::CallFunc_EqualEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv, CallFunc_BooleanOR_ReturnValue) == 0x000072, "Member 'BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv, CallFunc_TryToSpeak_bWillBeSpoken) == 0x000073, "Member 'BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv::CallFunc_TryToSpeak_bWillBeSpoken' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000074, "Member 'BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv, CallFunc_GetAJBGameInstance_bSuccess) == 0x000075, "Member 'BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000078, "Member 'BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv, CallFunc_PlayModeIsPair_ReturnValue) == 0x000080, "Member 'BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv::CallFunc_PlayModeIsPair_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000088, "Member 'BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv, CallFunc_TryToSpeak_bWillBeSpoken1) == 0x000090, "Member 'BP_VoiceComponent_C_TryToSpeakEmoteVoicePoliticClientEnv::CallFunc_TryToSpeak_bWillBeSpoken1' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.GetSignalVoiceTag
// 0x0018 (0x0018 - 0x0000)
struct BP_VoiceComponent_C_GetSignalVoiceTag final
{
public:
	struct FGameplayTag                           SignalPinType;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           VoiceTag;                                          // 0x0008(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_GetSignalVoiceTag) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_GetSignalVoiceTag");
static_assert(sizeof(BP_VoiceComponent_C_GetSignalVoiceTag) == 0x000018, "Wrong size on BP_VoiceComponent_C_GetSignalVoiceTag");
static_assert(offsetof(BP_VoiceComponent_C_GetSignalVoiceTag, SignalPinType) == 0x000000, "Member 'BP_VoiceComponent_C_GetSignalVoiceTag::SignalPinType' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetSignalVoiceTag, VoiceTag) == 0x000008, "Member 'BP_VoiceComponent_C_GetSignalVoiceTag::VoiceTag' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetSignalVoiceTag, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000010, "Member 'BP_VoiceComponent_C_GetSignalVoiceTag::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetSignalVoiceTag, CallFunc_MatchesTag_ReturnValue) == 0x000011, "Member 'BP_VoiceComponent_C_GetSignalVoiceTag::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.CheckQueuedVoiceTag
// 0x0088 (0x0088 - 0x0000)
struct BP_VoiceComponent_C_CheckQueuedVoiceTag final
{
public:
	struct FGameplayTag                           VoiceTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bQueued;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         QueuedNum;                                         // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempQueuedNum;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetVoiceEventInfo_bResult;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwiseVoiceEventInfo                   CallFunc_GetVoiceEventInfo_VoiceEventInfo;         // 0x0020(0x0020)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwiseVoiceEventInfo                   CallFunc_Array_Get_Item;                           // 0x0058(0x0020)()
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_CheckQueuedVoiceTag) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_CheckQueuedVoiceTag");
static_assert(sizeof(BP_VoiceComponent_C_CheckQueuedVoiceTag) == 0x000088, "Wrong size on BP_VoiceComponent_C_CheckQueuedVoiceTag");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTag, VoiceTag) == 0x000000, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTag::VoiceTag' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTag, bQueued) == 0x000008, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTag::bQueued' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTag, QueuedNum) == 0x00000C, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTag::QueuedNum' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTag, TempQueuedNum) == 0x000010, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTag::TempQueuedNum' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTag, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTag, CallFunc_GetVoiceEventInfo_bResult) == 0x000018, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTag::CallFunc_GetVoiceEventInfo_bResult' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTag, CallFunc_GetVoiceEventInfo_VoiceEventInfo) == 0x000020, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTag::CallFunc_GetVoiceEventInfo_VoiceEventInfo' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTag, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTag, CallFunc_Greater_IntInt_ReturnValue) == 0x000044, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTag::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTag, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTag, CallFunc_Add_IntInt_ReturnValue1) == 0x00004C, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTag::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTag, Temp_int_Variable) == 0x000050, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTag::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTag, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTag, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000078, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTag::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTag, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTag, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.CheckQueuedVoiceEvent
// 0x0048 (0x0048 - 0x0000)
struct BP_VoiceComponent_C_CheckQueuedVoiceEvent final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bExactMatch;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bQueued;                                           // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwiseVoiceEventInfo                   CallFunc_Array_Get_Item;                           // 0x0020(0x0020)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_CheckQueuedVoiceEvent) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_CheckQueuedVoiceEvent");
static_assert(sizeof(BP_VoiceComponent_C_CheckQueuedVoiceEvent) == 0x000048, "Wrong size on BP_VoiceComponent_C_CheckQueuedVoiceEvent");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceEvent, EventName) == 0x000000, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceEvent::EventName' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceEvent, bExactMatch) == 0x000010, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceEvent::bExactMatch' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceEvent, bQueued) == 0x000011, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceEvent::bQueued' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceEvent, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceEvent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceEvent, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceEvent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceEvent, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceEvent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceEvent, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceEvent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceEvent, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceEvent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceEvent, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceEvent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceEvent, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000045, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceEvent::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceEvent, CallFunc_StartsWith_ReturnValue) == 0x000046, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceEvent::CallFunc_StartsWith_ReturnValue' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.DequeueVoiceEvent
// 0x00A0 (0x00A0 - 0x0000)
struct BP_VoiceComponent_C_DequeueVoiceEvent final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bExactMatch;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FWwiseVoiceEventInfo>           TempDequeuedVoiceInfo;                             // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwiseVoiceEventInfo                   CallFunc_Array_Get_Item;                           // 0x0048(0x0020)()
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWwiseVoiceEventInfo                   CallFunc_Array_Get_Item1;                          // 0x0070(0x0020)()
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_DequeueVoiceEvent) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_DequeueVoiceEvent");
static_assert(sizeof(BP_VoiceComponent_C_DequeueVoiceEvent) == 0x0000A0, "Wrong size on BP_VoiceComponent_C_DequeueVoiceEvent");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceEvent, EventName) == 0x000000, "Member 'BP_VoiceComponent_C_DequeueVoiceEvent::EventName' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceEvent, bExactMatch) == 0x000010, "Member 'BP_VoiceComponent_C_DequeueVoiceEvent::bExactMatch' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceEvent, TempDequeuedVoiceInfo) == 0x000018, "Member 'BP_VoiceComponent_C_DequeueVoiceEvent::TempDequeuedVoiceInfo' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceEvent, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_VoiceComponent_C_DequeueVoiceEvent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceEvent, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_VoiceComponent_C_DequeueVoiceEvent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceEvent, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_VoiceComponent_C_DequeueVoiceEvent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceEvent, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_VoiceComponent_C_DequeueVoiceEvent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceEvent, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_VoiceComponent_C_DequeueVoiceEvent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceEvent, Temp_int_Loop_Counter_Variable1) == 0x00003C, "Member 'BP_VoiceComponent_C_DequeueVoiceEvent::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceEvent, CallFunc_Add_IntInt_ReturnValue1) == 0x000040, "Member 'BP_VoiceComponent_C_DequeueVoiceEvent::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceEvent, Temp_int_Array_Index_Variable1) == 0x000044, "Member 'BP_VoiceComponent_C_DequeueVoiceEvent::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceEvent, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_VoiceComponent_C_DequeueVoiceEvent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceEvent, CallFunc_Array_RemoveItem_ReturnValue) == 0x000068, "Member 'BP_VoiceComponent_C_DequeueVoiceEvent::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceEvent, CallFunc_Array_Length_ReturnValue1) == 0x00006C, "Member 'BP_VoiceComponent_C_DequeueVoiceEvent::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceEvent, CallFunc_Array_Get_Item1) == 0x000070, "Member 'BP_VoiceComponent_C_DequeueVoiceEvent::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceEvent, CallFunc_Less_IntInt_ReturnValue1) == 0x000090, "Member 'BP_VoiceComponent_C_DequeueVoiceEvent::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceEvent, CallFunc_Array_Add_ReturnValue) == 0x000094, "Member 'BP_VoiceComponent_C_DequeueVoiceEvent::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceEvent, CallFunc_StartsWith_ReturnValue) == 0x000098, "Member 'BP_VoiceComponent_C_DequeueVoiceEvent::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceEvent, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000099, "Member 'BP_VoiceComponent_C_DequeueVoiceEvent::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.DequeueVoiceTag
// 0x0068 (0x0068 - 0x0000)
struct BP_VoiceComponent_C_DequeueVoiceTag final
{
public:
	struct FGameplayTag                           VoiceTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetVoiceEventInfo_bResult;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWwiseVoiceEventInfo                   CallFunc_GetVoiceEventInfo_VoiceEventInfo;         // 0x0018(0x0020)()
	struct FWwiseVoiceEventInfo                   CallFunc_Array_Get_Item;                           // 0x0038(0x0020)()
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_DequeueVoiceTag) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_DequeueVoiceTag");
static_assert(sizeof(BP_VoiceComponent_C_DequeueVoiceTag) == 0x000068, "Wrong size on BP_VoiceComponent_C_DequeueVoiceTag");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceTag, VoiceTag) == 0x000000, "Member 'BP_VoiceComponent_C_DequeueVoiceTag::VoiceTag' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceTag, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_VoiceComponent_C_DequeueVoiceTag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceTag, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_VoiceComponent_C_DequeueVoiceTag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceTag, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_VoiceComponent_C_DequeueVoiceTag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceTag, CallFunc_GetVoiceEventInfo_bResult) == 0x000014, "Member 'BP_VoiceComponent_C_DequeueVoiceTag::CallFunc_GetVoiceEventInfo_bResult' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceTag, CallFunc_GetVoiceEventInfo_VoiceEventInfo) == 0x000018, "Member 'BP_VoiceComponent_C_DequeueVoiceTag::CallFunc_GetVoiceEventInfo_VoiceEventInfo' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceTag, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_VoiceComponent_C_DequeueVoiceTag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceTag, CallFunc_Array_RemoveItem_ReturnValue) == 0x000058, "Member 'BP_VoiceComponent_C_DequeueVoiceTag::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceTag, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000059, "Member 'BP_VoiceComponent_C_DequeueVoiceTag::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceTag, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_VoiceComponent_C_DequeueVoiceTag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_DequeueVoiceTag, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_VoiceComponent_C_DequeueVoiceTag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.GetPoliticVoiceComponent
// 0x0040 (0x0040 - 0x0000)
struct BP_VoiceComponent_C_GetPoliticVoiceComponent final
{
public:
	bool                                          bIsOwnerPlay;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_VoiceComponent_C*                   VoiceComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBInGameCharacterProperty_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetPropertyOwnerCharacterBP_CharacterBP;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_VoiceComponent_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VoiceComponent_C_GetPoliticVoiceComponent) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_GetPoliticVoiceComponent");
static_assert(sizeof(BP_VoiceComponent_C_GetPoliticVoiceComponent) == 0x000040, "Wrong size on BP_VoiceComponent_C_GetPoliticVoiceComponent");
static_assert(offsetof(BP_VoiceComponent_C_GetPoliticVoiceComponent, bIsOwnerPlay) == 0x000000, "Member 'BP_VoiceComponent_C_GetPoliticVoiceComponent::bIsOwnerPlay' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetPoliticVoiceComponent, VoiceComponent) == 0x000008, "Member 'BP_VoiceComponent_C_GetPoliticVoiceComponent::VoiceComponent' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetPoliticVoiceComponent, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_VoiceComponent_C_GetPoliticVoiceComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetPoliticVoiceComponent, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property) == 0x000018, "Member 'BP_VoiceComponent_C_GetPoliticVoiceComponent::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetPoliticVoiceComponent, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_VoiceComponent_C_GetPoliticVoiceComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetPoliticVoiceComponent, CallFunc_GetPropertyOwnerCharacterBP_CharacterBP) == 0x000030, "Member 'BP_VoiceComponent_C_GetPoliticVoiceComponent::CallFunc_GetPropertyOwnerCharacterBP_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetPoliticVoiceComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'BP_VoiceComponent_C_GetPoliticVoiceComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.GetMatchStartVoiceTag
// 0x0020 (0x0020 - 0x0000)
struct BP_VoiceComponent_C_GetMatchStartVoiceTag final
{
public:
	struct FGameplayTag                           MatchStartVoiceTag;                                // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAreaTypeID_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VoiceComponent_C_GetMatchStartVoiceTag) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_GetMatchStartVoiceTag");
static_assert(sizeof(BP_VoiceComponent_C_GetMatchStartVoiceTag) == 0x000020, "Wrong size on BP_VoiceComponent_C_GetMatchStartVoiceTag");
static_assert(offsetof(BP_VoiceComponent_C_GetMatchStartVoiceTag, MatchStartVoiceTag) == 0x000000, "Member 'BP_VoiceComponent_C_GetMatchStartVoiceTag::MatchStartVoiceTag' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetMatchStartVoiceTag, CallFunc_GetAJBGameInstance_bSuccess) == 0x000008, "Member 'BP_VoiceComponent_C_GetMatchStartVoiceTag::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetMatchStartVoiceTag, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000010, "Member 'BP_VoiceComponent_C_GetMatchStartVoiceTag::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetMatchStartVoiceTag, CallFunc_GetAreaTypeID_ReturnValue) == 0x000018, "Member 'BP_VoiceComponent_C_GetMatchStartVoiceTag::CallFunc_GetAreaTypeID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_GetMatchStartVoiceTag, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_VoiceComponent_C_GetMatchStartVoiceTag::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_VoiceComponent.BP_VoiceComponent_C.CheckQueuedVoiceTags
// 0x0060 (0x0060 - 0x0000)
struct BP_VoiceComponent_C_CheckQueuedVoiceTags final
{
public:
	struct FGameplayTagContainer                  VoiceTagContainer;                                 // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bQueued;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckQueuedVoiceTag_bQueued;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CheckQueuedVoiceTag_QueuedNum;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VoiceComponent_C_CheckQueuedVoiceTags) == 0x000008, "Wrong alignment on BP_VoiceComponent_C_CheckQueuedVoiceTags");
static_assert(sizeof(BP_VoiceComponent_C_CheckQueuedVoiceTags) == 0x000060, "Wrong size on BP_VoiceComponent_C_CheckQueuedVoiceTags");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTags, VoiceTagContainer) == 0x000000, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTags::VoiceTagContainer' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTags, bQueued) == 0x000020, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTags::bQueued' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTags, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000028, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTags::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTags, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTags::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTags, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTags, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTags, CallFunc_CheckQueuedVoiceTag_bQueued) == 0x000048, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTags::CallFunc_CheckQueuedVoiceTag_bQueued' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTags, CallFunc_CheckQueuedVoiceTag_QueuedNum) == 0x00004C, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTags::CallFunc_CheckQueuedVoiceTag_QueuedNum' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTags, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTags::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTags, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VoiceComponent_C_CheckQueuedVoiceTags, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_VoiceComponent_C_CheckQueuedVoiceTags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}

